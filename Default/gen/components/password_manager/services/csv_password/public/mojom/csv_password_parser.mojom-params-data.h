// components/password_manager/services/csv_password/public/mojom/csv_password_parser.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_PASSWORD_MANAGER_SERVICES_CSV_PASSWORD_PUBLIC_MOJOM_CSV_PASSWORD_PARSER_MOJOM_PARAMS_DATA_H_
#define COMPONENTS_PASSWORD_MANAGER_SERVICES_CSV_PASSWORD_PUBLIC_MOJOM_CSV_PASSWORD_PARSER_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace password_manager {
namespace mojom {
namespace internal {

class ValidationContext;
class  CSVPasswordParser_ParseCSV_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> raw_csv;

 private:
  friend class mojo::internal::MessageFragment<CSVPasswordParser_ParseCSV_Params_Data>;

  CSVPasswordParser_ParseCSV_Params_Data();
  ~CSVPasswordParser_ParseCSV_Params_Data() = delete;
};
static_assert(sizeof(CSVPasswordParser_ParseCSV_Params_Data) == 16,
              "Bad sizeof(CSVPasswordParser_ParseCSV_Params_Data)");
class  CSVPasswordParser_ParseCSV_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::CSVPasswordSequence_Data> sequence;

 private:
  friend class mojo::internal::MessageFragment<CSVPasswordParser_ParseCSV_ResponseParams_Data>;

  CSVPasswordParser_ParseCSV_ResponseParams_Data();
  ~CSVPasswordParser_ParseCSV_ResponseParams_Data() = delete;
};
static_assert(sizeof(CSVPasswordParser_ParseCSV_ResponseParams_Data) == 16,
              "Bad sizeof(CSVPasswordParser_ParseCSV_ResponseParams_Data)");

}  // namespace internal


class CSVPasswordParser_ParseCSV_ParamsDataView {
 public:
  CSVPasswordParser_ParseCSV_ParamsDataView() = default;

  CSVPasswordParser_ParseCSV_ParamsDataView(
      internal::CSVPasswordParser_ParseCSV_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetRawCsvDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadRawCsv(UserType* output) {
    
    auto* pointer = data_->raw_csv.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::CSVPasswordParser_ParseCSV_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class CSVPasswordParser_ParseCSV_ResponseParamsDataView {
 public:
  CSVPasswordParser_ParseCSV_ResponseParamsDataView() = default;

  CSVPasswordParser_ParseCSV_ResponseParamsDataView(
      internal::CSVPasswordParser_ParseCSV_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetSequenceDataView(
      CSVPasswordSequenceDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadSequence(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::password_manager::mojom::CSVPasswordSequenceDataView, UserType>(),
    "Attempting to read the optional `sequence` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadSequence` instead "
    "of `ReadSequence if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->sequence.Get();
    return mojo::internal::Deserialize<::password_manager::mojom::CSVPasswordSequenceDataView>(
        pointer, output, message_);
  }
 private:
  internal::CSVPasswordParser_ParseCSV_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};


inline void CSVPasswordParser_ParseCSV_ParamsDataView::GetRawCsvDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->raw_csv.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void CSVPasswordParser_ParseCSV_ResponseParamsDataView::GetSequenceDataView(
    CSVPasswordSequenceDataView* output) {
  auto pointer = data_->sequence.Get();
  *output = CSVPasswordSequenceDataView(pointer, message_);
}

}  // namespace mojom
}  // namespace password_manager

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // COMPONENTS_PASSWORD_MANAGER_SERVICES_CSV_PASSWORD_PUBLIC_MOJOM_CSV_PASSWORD_PARSER_MOJOM_PARAMS_DATA_H_