// components/dom_distiller/content/common/mojom/distillability_service.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_DOM_DISTILLER_CONTENT_COMMON_MOJOM_DISTILLABILITY_SERVICE_MOJOM_PARAMS_DATA_H_
#define COMPONENTS_DOM_DISTILLER_CONTENT_COMMON_MOJOM_DISTILLABILITY_SERVICE_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace dom_distiller {
namespace mojom {
namespace internal {

class ValidationContext;
class  DistillabilityService_NotifyIsDistillable_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t page_is_distillable : 1;
  uint8_t is_last_update : 1;
  uint8_t is_mobile_friendly : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<DistillabilityService_NotifyIsDistillable_Params_Data>;

  DistillabilityService_NotifyIsDistillable_Params_Data();
  ~DistillabilityService_NotifyIsDistillable_Params_Data() = delete;
};
static_assert(sizeof(DistillabilityService_NotifyIsDistillable_Params_Data) == 16,
              "Bad sizeof(DistillabilityService_NotifyIsDistillable_Params_Data)");

}  // namespace internal


class DistillabilityService_NotifyIsDistillable_ParamsDataView {
 public:
  DistillabilityService_NotifyIsDistillable_ParamsDataView() = default;

  DistillabilityService_NotifyIsDistillable_ParamsDataView(
      internal::DistillabilityService_NotifyIsDistillable_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool page_is_distillable() const {
    return data_->page_is_distillable;
  }
  bool is_last_update() const {
    return data_->is_last_update;
  }
  bool is_mobile_friendly() const {
    return data_->is_mobile_friendly;
  }
 private:
  internal::DistillabilityService_NotifyIsDistillable_Params_Data* data_ = nullptr;
};



}  // namespace mojom
}  // namespace dom_distiller

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // COMPONENTS_DOM_DISTILLER_CONTENT_COMMON_MOJOM_DISTILLABILITY_SERVICE_MOJOM_PARAMS_DATA_H_