// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/query_tiles/bridges/TileConversionBridge

#ifndef org_chromium_components_query_tiles_bridges_TileConversionBridge_JNI
#define org_chromium_components_query_tiles_bridges_TileConversionBridge_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_query_1tiles_bridges_TileConversionBridge[];
const char kClassPath_org_chromium_components_query_1tiles_bridges_TileConversionBridge[] =
    "org/chromium/components/query_tiles/bridges/TileConversionBridge";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_query_1tiles_bridges_TileConversionBridge_clazz(nullptr);
#ifndef org_chromium_components_query_1tiles_bridges_TileConversionBridge_clazz_defined
#define org_chromium_components_query_1tiles_bridges_TileConversionBridge_clazz_defined
inline jclass org_chromium_components_query_1tiles_bridges_TileConversionBridge_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_query_1tiles_bridges_TileConversionBridge,
      &g_org_chromium_components_query_1tiles_bridges_TileConversionBridge_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace query_tiles {


static std::atomic<jmethodID>
    g_org_chromium_components_query_1tiles_bridges_TileConversionBridge_createList(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_TileConversionBridge_createList(JNIEnv* env)
    {
  jclass clazz = org_chromium_components_query_1tiles_bridges_TileConversionBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_query_1tiles_bridges_TileConversionBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createList",
          "()Ljava/util/List;",
          &g_org_chromium_components_query_1tiles_bridges_TileConversionBridge_createList);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_query_1tiles_bridges_TileConversionBridge_createTileAndMaybeAddToList(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_TileConversionBridge_createTileAndMaybeAddToList(JNIEnv* env, const
    base::android::JavaRef<jobject>& list,
    const base::android::JavaRef<jstring>& tileId,
    const base::android::JavaRef<jstring>& displayTitle,
    const base::android::JavaRef<jstring>& accessibilityText,
    const base::android::JavaRef<jstring>& queryText,
    const base::android::JavaRef<jobjectArray>& urls,
    const base::android::JavaRef<jobjectArray>& searchParams,
    const base::android::JavaRef<jobject>& children) {
  jclass clazz = org_chromium_components_query_1tiles_bridges_TileConversionBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_query_1tiles_bridges_TileConversionBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createTileAndMaybeAddToList",
"(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Lorg/chromium/url/GURL;[Ljava/lang/String;Ljava/util/List;)Lorg/chromium/components/query_tiles/QueryTile;",
&g_org_chromium_components_query_1tiles_bridges_TileConversionBridge_createTileAndMaybeAddToList);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, list.obj(), tileId.obj(), displayTitle.obj(),
              accessibilityText.obj(), queryText.obj(), urls.obj(), searchParams.obj(),
              children.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

}  // namespace query_tiles

#endif  // org_chromium_components_query_tiles_bridges_TileConversionBridge_JNI
