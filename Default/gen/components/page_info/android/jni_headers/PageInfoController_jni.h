// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/page_info/PageInfoController

#ifndef org_chromium_components_page_info_PageInfoController_JNI
#define org_chromium_components_page_info_PageInfoController_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_page_1info_PageInfoController[];
const char kClassPath_org_chromium_components_page_1info_PageInfoController[] =
    "org/chromium/components/page_info/PageInfoController";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_page_1info_PageInfoController_clazz(nullptr);
#ifndef org_chromium_components_page_1info_PageInfoController_clazz_defined
#define org_chromium_components_page_1info_PageInfoController_clazz_defined
inline jclass org_chromium_components_page_1info_PageInfoController_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_page_1info_PageInfoController,
      &g_org_chromium_components_page_1info_PageInfoController_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
static jlong JNI_PageInfoController_Init(JNIEnv* env, const base::android::JavaParamRef<jobject>&
    controller,
    const base::android::JavaParamRef<jobject>& webContents);

JNI_GENERATOR_EXPORT jlong Java_J_N_MuLM_1ayx(
    JNIEnv* env,
    jclass jcaller,
    jobject controller,
    jobject webContents) {
  return JNI_PageInfoController_Init(env, base::android::JavaParamRef<jobject>(env, controller),
      base::android::JavaParamRef<jobject>(env, webContents));
}

JNI_GENERATOR_EXPORT void Java_J_N_Mz6XBRgf(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePageInfoControllerAndroid,
    jobject caller) {
  PageInfoControllerAndroid* native =
      reinterpret_cast<PageInfoControllerAndroid*>(nativePageInfoControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "Destroy");
  return native->Destroy(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT void Java_J_N_M5DCRkGK(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePageInfoControllerAndroid,
    jobject caller,
    jint action) {
  PageInfoControllerAndroid* native =
      reinterpret_cast<PageInfoControllerAndroid*>(nativePageInfoControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "RecordPageInfoAction");
  return native->RecordPageInfoAction(env, base::android::JavaParamRef<jobject>(env, caller),
      action);
}

JNI_GENERATOR_EXPORT void Java_J_N_M_1us4Ps5(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePageInfoControllerAndroid,
    jobject caller,
    jboolean wasAboutThisSiteShown) {
  PageInfoControllerAndroid* native =
      reinterpret_cast<PageInfoControllerAndroid*>(nativePageInfoControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetAboutThisSiteShown");
  return native->SetAboutThisSiteShown(env, base::android::JavaParamRef<jobject>(env, caller),
      wasAboutThisSiteShown);
}

JNI_GENERATOR_EXPORT void Java_J_N_MDd48bYq(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePageInfoControllerAndroid,
    jobject caller) {
  PageInfoControllerAndroid* native =
      reinterpret_cast<PageInfoControllerAndroid*>(nativePageInfoControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "UpdatePermissions");
  return native->UpdatePermissions(env, base::android::JavaParamRef<jobject>(env, caller));
}


static std::atomic<jmethodID>
    g_org_chromium_components_page_1info_PageInfoController_addPermissionSection(nullptr);
static void Java_PageInfoController_addPermissionSection(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& name,
    const base::android::JavaRef<jstring>& nameMidSentence,
    JniIntWrapper type,
    JniIntWrapper currentSettingValue) {
  jclass clazz = org_chromium_components_page_1info_PageInfoController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_page_1info_PageInfoController_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "addPermissionSection",
          "(Ljava/lang/String;Ljava/lang/String;II)V",
          &g_org_chromium_components_page_1info_PageInfoController_addPermissionSection);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, name.obj(), nameMidSentence.obj(), as_jint(type),
              as_jint(currentSettingValue));
}

static std::atomic<jmethodID>
    g_org_chromium_components_page_1info_PageInfoController_updatePermissionDisplay(nullptr);
static void Java_PageInfoController_updatePermissionDisplay(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_page_1info_PageInfoController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_page_1info_PageInfoController_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "updatePermissionDisplay",
          "()V",
          &g_org_chromium_components_page_1info_PageInfoController_updatePermissionDisplay);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_page_1info_PageInfoController_setSecurityDescription(nullptr);
static void Java_PageInfoController_setSecurityDescription(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& summary,
    const base::android::JavaRef<jstring>& details) {
  jclass clazz = org_chromium_components_page_1info_PageInfoController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_page_1info_PageInfoController_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setSecurityDescription",
          "(Ljava/lang/String;Ljava/lang/String;)V",
          &g_org_chromium_components_page_1info_PageInfoController_setSecurityDescription);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, summary.obj(), details.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_page_1info_PageInfoController_setAdPersonalizationInfo(nullptr);
static void Java_PageInfoController_setAdPersonalizationInfo(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, jboolean hasJoinedUserToInterestGroup,
    const base::android::JavaRef<jobjectArray>& topics) {
  jclass clazz = org_chromium_components_page_1info_PageInfoController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_page_1info_PageInfoController_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setAdPersonalizationInfo",
          "(Z[Ljava/lang/String;)V",
          &g_org_chromium_components_page_1info_PageInfoController_setAdPersonalizationInfo);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, hasJoinedUserToInterestGroup, topics.obj());
}

#endif  // org_chromium_components_page_info_PageInfoController_JNI
