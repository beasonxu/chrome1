// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/page_info/ConnectionInfoView

#ifndef org_chromium_components_page_info_ConnectionInfoView_JNI
#define org_chromium_components_page_info_ConnectionInfoView_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_page_1info_ConnectionInfoView[];
const char kClassPath_org_chromium_components_page_1info_ConnectionInfoView[] =
    "org/chromium/components/page_info/ConnectionInfoView";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_page_1info_ConnectionInfoView_clazz(nullptr);
#ifndef org_chromium_components_page_1info_ConnectionInfoView_clazz_defined
#define org_chromium_components_page_1info_ConnectionInfoView_clazz_defined
inline jclass org_chromium_components_page_1info_ConnectionInfoView_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_page_1info_ConnectionInfoView,
      &g_org_chromium_components_page_1info_ConnectionInfoView_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
static jlong JNI_ConnectionInfoView_Init(JNIEnv* env, const base::android::JavaParamRef<jobject>&
    popup,
    const base::android::JavaParamRef<jobject>& webContents);

JNI_GENERATOR_EXPORT jlong Java_J_N_MJUBMbqq(
    JNIEnv* env,
    jclass jcaller,
    jobject popup,
    jobject webContents) {
  return JNI_ConnectionInfoView_Init(env, base::android::JavaParamRef<jobject>(env, popup),
      base::android::JavaParamRef<jobject>(env, webContents));
}

JNI_GENERATOR_EXPORT void Java_J_N_MISU_1God(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeConnectionInfoViewAndroid,
    jobject caller) {
  ConnectionInfoViewAndroid* native =
      reinterpret_cast<ConnectionInfoViewAndroid*>(nativeConnectionInfoViewAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "Destroy");
  return native->Destroy(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT void Java_J_N_MYkS_00024dAY(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeConnectionInfoViewAndroid,
    jobject caller,
    jobject webContents) {
  ConnectionInfoViewAndroid* native =
      reinterpret_cast<ConnectionInfoViewAndroid*>(nativeConnectionInfoViewAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "ResetCertDecisions");
  return native->ResetCertDecisions(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jobject>(env, webContents));
}


static std::atomic<jmethodID>
    g_org_chromium_components_page_1info_ConnectionInfoView_addCertificateSection(nullptr);
static void Java_ConnectionInfoView_addCertificateSection(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper iconId,
    const base::android::JavaRef<jstring>& headline,
    const base::android::JavaRef<jstring>& description,
    const base::android::JavaRef<jstring>& label,
    JniIntWrapper iconColorId) {
  jclass clazz = org_chromium_components_page_1info_ConnectionInfoView_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_page_1info_ConnectionInfoView_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "addCertificateSection",
          "(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V",
          &g_org_chromium_components_page_1info_ConnectionInfoView_addCertificateSection);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(iconId), headline.obj(), description.obj(),
              label.obj(), as_jint(iconColorId));
}

static std::atomic<jmethodID>
    g_org_chromium_components_page_1info_ConnectionInfoView_addDescriptionSection(nullptr);
static void Java_ConnectionInfoView_addDescriptionSection(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper iconId,
    const base::android::JavaRef<jstring>& headline,
    const base::android::JavaRef<jstring>& description,
    JniIntWrapper iconColorId) {
  jclass clazz = org_chromium_components_page_1info_ConnectionInfoView_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_page_1info_ConnectionInfoView_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "addDescriptionSection",
          "(ILjava/lang/String;Ljava/lang/String;I)V",
          &g_org_chromium_components_page_1info_ConnectionInfoView_addDescriptionSection);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(iconId), headline.obj(), description.obj(),
              as_jint(iconColorId));
}

static std::atomic<jmethodID>
    g_org_chromium_components_page_1info_ConnectionInfoView_addResetCertDecisionsButton(nullptr);
static void Java_ConnectionInfoView_addResetCertDecisionsButton(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& label) {
  jclass clazz = org_chromium_components_page_1info_ConnectionInfoView_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_page_1info_ConnectionInfoView_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "addResetCertDecisionsButton",
          "(Ljava/lang/String;)V",
          &g_org_chromium_components_page_1info_ConnectionInfoView_addResetCertDecisionsButton);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, label.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_page_1info_ConnectionInfoView_addMoreInfoLink(nullptr);
static void Java_ConnectionInfoView_addMoreInfoLink(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& linkText) {
  jclass clazz = org_chromium_components_page_1info_ConnectionInfoView_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_page_1info_ConnectionInfoView_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "addMoreInfoLink",
          "(Ljava/lang/String;)V",
          &g_org_chromium_components_page_1info_ConnectionInfoView_addMoreInfoLink);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, linkText.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_page_1info_ConnectionInfoView_onReady(nullptr);
static void Java_ConnectionInfoView_onReady(JNIEnv* env, const base::android::JavaRef<jobject>& obj)
    {
  jclass clazz = org_chromium_components_page_1info_ConnectionInfoView_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_page_1info_ConnectionInfoView_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onReady",
          "()V",
          &g_org_chromium_components_page_1info_ConnectionInfoView_onReady);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

#endif  // org_chromium_components_page_info_ConnectionInfoView_JNI
