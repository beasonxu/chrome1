// components/subresource_filter/core/mojom/subresource_filter.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_SUBRESOURCE_FILTER_CORE_MOJOM_SUBRESOURCE_FILTER_MOJOM_PARAMS_DATA_H_
#define COMPONENTS_SUBRESOURCE_FILTER_CORE_MOJOM_SUBRESOURCE_FILTER_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace subresource_filter {
namespace mojom {
namespace internal {

class ValidationContext;
class  SubresourceFilterRulesetObserver_SetRulesetForProcess_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::mojo_base::mojom::internal::File_Data> ruleset_file;

 private:
  friend class mojo::internal::MessageFragment<SubresourceFilterRulesetObserver_SetRulesetForProcess_Params_Data>;

  SubresourceFilterRulesetObserver_SetRulesetForProcess_Params_Data();
  ~SubresourceFilterRulesetObserver_SetRulesetForProcess_Params_Data() = delete;
};
static_assert(sizeof(SubresourceFilterRulesetObserver_SetRulesetForProcess_Params_Data) == 16,
              "Bad sizeof(SubresourceFilterRulesetObserver_SetRulesetForProcess_Params_Data)");

}  // namespace internal


class SubresourceFilterRulesetObserver_SetRulesetForProcess_ParamsDataView {
 public:
  SubresourceFilterRulesetObserver_SetRulesetForProcess_ParamsDataView() = default;

  SubresourceFilterRulesetObserver_SetRulesetForProcess_ParamsDataView(
      internal::SubresourceFilterRulesetObserver_SetRulesetForProcess_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetRulesetFileDataView(
      ::mojo_base::mojom::FileDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadRulesetFile(UserType* output) {
    
    auto* pointer = data_->ruleset_file.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::FileDataView>(
        pointer, output, message_);
  }
 private:
  internal::SubresourceFilterRulesetObserver_SetRulesetForProcess_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};


inline void SubresourceFilterRulesetObserver_SetRulesetForProcess_ParamsDataView::GetRulesetFileDataView(
    ::mojo_base::mojom::FileDataView* output) {
  auto pointer = data_->ruleset_file.Get();
  *output = ::mojo_base::mojom::FileDataView(pointer, message_);
}

}  // namespace mojom
}  // namespace subresource_filter

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // COMPONENTS_SUBRESOURCE_FILTER_CORE_MOJOM_SUBRESOURCE_FILTER_MOJOM_PARAMS_DATA_H_