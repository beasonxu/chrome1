// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/feed/core/proto/v2/packing.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_components_2ffeed_2fcore_2fproto_2fv2_2fpacking_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_components_2ffeed_2fcore_2fproto_2fv2_2fpacking_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "components/feed/core/proto/v2/wire/data_operation.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_components_2ffeed_2fcore_2fproto_2fv2_2fpacking_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_components_2ffeed_2fcore_2fproto_2fv2_2fpacking_2eproto {
  static const uint32_t offsets[];
};
namespace feedpacking {
class DismissData;
struct DismissDataDefaultTypeInternal;
extern DismissDataDefaultTypeInternal _DismissData_default_instance_;
}  // namespace feedpacking
PROTOBUF_NAMESPACE_OPEN
template<> ::feedpacking::DismissData* Arena::CreateMaybeMessage<::feedpacking::DismissData>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace feedpacking {

// ===================================================================

class DismissData final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:feedpacking.DismissData) */ {
 public:
  inline DismissData() : DismissData(nullptr) {}
  ~DismissData() override;
  explicit PROTOBUF_CONSTEXPR DismissData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DismissData(const DismissData& from);
  DismissData(DismissData&& from) noexcept
    : DismissData() {
    *this = ::std::move(from);
  }

  inline DismissData& operator=(const DismissData& from) {
    CopyFrom(from);
    return *this;
  }
  inline DismissData& operator=(DismissData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const DismissData& default_instance() {
    return *internal_default_instance();
  }
  static inline const DismissData* internal_default_instance() {
    return reinterpret_cast<const DismissData*>(
               &_DismissData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(DismissData& a, DismissData& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(DismissData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DismissData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DismissData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DismissData>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const DismissData& from);
  void MergeFrom(const DismissData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DismissData* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "feedpacking.DismissData";
  }
  protected:
  explicit DismissData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataOperationsFieldNumber = 1,
  };
  // repeated .feedwire.DataOperation data_operations = 1;
  int data_operations_size() const;
  private:
  int _internal_data_operations_size() const;
  public:
  void clear_data_operations();
  ::feedwire::DataOperation* mutable_data_operations(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::feedwire::DataOperation >*
      mutable_data_operations();
  private:
  const ::feedwire::DataOperation& _internal_data_operations(int index) const;
  ::feedwire::DataOperation* _internal_add_data_operations();
  public:
  const ::feedwire::DataOperation& data_operations(int index) const;
  ::feedwire::DataOperation* add_data_operations();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::feedwire::DataOperation >&
      data_operations() const;

  // @@protoc_insertion_point(class_scope:feedpacking.DismissData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::feedwire::DataOperation > data_operations_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_components_2ffeed_2fcore_2fproto_2fv2_2fpacking_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DismissData

// repeated .feedwire.DataOperation data_operations = 1;
inline int DismissData::_internal_data_operations_size() const {
  return data_operations_.size();
}
inline int DismissData::data_operations_size() const {
  return _internal_data_operations_size();
}
inline ::feedwire::DataOperation* DismissData::mutable_data_operations(int index) {
  // @@protoc_insertion_point(field_mutable:feedpacking.DismissData.data_operations)
  return data_operations_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::feedwire::DataOperation >*
DismissData::mutable_data_operations() {
  // @@protoc_insertion_point(field_mutable_list:feedpacking.DismissData.data_operations)
  return &data_operations_;
}
inline const ::feedwire::DataOperation& DismissData::_internal_data_operations(int index) const {
  return data_operations_.Get(index);
}
inline const ::feedwire::DataOperation& DismissData::data_operations(int index) const {
  // @@protoc_insertion_point(field_get:feedpacking.DismissData.data_operations)
  return _internal_data_operations(index);
}
inline ::feedwire::DataOperation* DismissData::_internal_add_data_operations() {
  return data_operations_.Add();
}
inline ::feedwire::DataOperation* DismissData::add_data_operations() {
  ::feedwire::DataOperation* _add = _internal_add_data_operations();
  // @@protoc_insertion_point(field_add:feedpacking.DismissData.data_operations)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::feedwire::DataOperation >&
DismissData::data_operations() const {
  // @@protoc_insertion_point(field_list:feedpacking.DismissData.data_operations)
  return data_operations_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace feedpacking

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_components_2ffeed_2fcore_2fproto_2fv2_2fpacking_2eproto
