// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/feed/core/proto/v2/wire/feed_entry_point_source.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_components_2ffeed_2fcore_2fproto_2fv2_2fwire_2ffeed_5fentry_5fpoint_5fsource_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_components_2ffeed_2fcore_2fproto_2fv2_2fwire_2ffeed_5fentry_5fpoint_5fsource_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_components_2ffeed_2fcore_2fproto_2fv2_2fwire_2ffeed_5fentry_5fpoint_5fsource_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_components_2ffeed_2fcore_2fproto_2fv2_2fwire_2ffeed_5fentry_5fpoint_5fsource_2eproto {
  static const uint32_t offsets[];
};
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE
namespace feedwire {

enum FeedEntryPointSource : int {
  CHROME_DISCOVER_FEED = 19,
  CHROME_FOLLOWING_FEED = 20
};
bool FeedEntryPointSource_IsValid(int value);
constexpr FeedEntryPointSource FeedEntryPointSource_MIN = CHROME_DISCOVER_FEED;
constexpr FeedEntryPointSource FeedEntryPointSource_MAX = CHROME_FOLLOWING_FEED;
constexpr int FeedEntryPointSource_ARRAYSIZE = FeedEntryPointSource_MAX + 1;

const std::string& FeedEntryPointSource_Name(FeedEntryPointSource value);
template<typename T>
inline const std::string& FeedEntryPointSource_Name(T enum_t_value) {
  static_assert(::std::is_same<T, FeedEntryPointSource>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function FeedEntryPointSource_Name.");
  return FeedEntryPointSource_Name(static_cast<FeedEntryPointSource>(enum_t_value));
}
bool FeedEntryPointSource_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, FeedEntryPointSource* value);
// ===================================================================


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace feedwire

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::feedwire::FeedEntryPointSource> : ::std::true_type {};

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_components_2ffeed_2fcore_2fproto_2fv2_2fwire_2ffeed_5fentry_5fpoint_5fsource_2eproto
