// components/autofill_assistant/content/common/autofill_assistant_driver.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_AUTOFILL_ASSISTANT_CONTENT_COMMON_AUTOFILL_ASSISTANT_DRIVER_MOJOM_PARAMS_DATA_H_
#define COMPONENTS_AUTOFILL_ASSISTANT_CONTENT_COMMON_AUTOFILL_ASSISTANT_DRIVER_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace autofill_assistant {
namespace mojom {
namespace internal {

class ValidationContext;
class  AutofillAssistantDriver_GetAnnotateDomModel_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::mojo_base::mojom::internal::TimeDelta_Data> timeout;

 private:
  friend class mojo::internal::MessageFragment<AutofillAssistantDriver_GetAnnotateDomModel_Params_Data>;

  AutofillAssistantDriver_GetAnnotateDomModel_Params_Data();
  ~AutofillAssistantDriver_GetAnnotateDomModel_Params_Data() = delete;
};
static_assert(sizeof(AutofillAssistantDriver_GetAnnotateDomModel_Params_Data) == 16,
              "Bad sizeof(AutofillAssistantDriver_GetAnnotateDomModel_Params_Data)");
class  AutofillAssistantDriver_GetAnnotateDomModel_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t pad0_[4];
  mojo::internal::Pointer<::mojo_base::mojom::internal::ReadOnlyFile_Data> model_file;
  mojo::internal::Pointer<::mojo_base::mojom::internal::ByteString_Data> overrides_policy;

 private:
  friend class mojo::internal::MessageFragment<AutofillAssistantDriver_GetAnnotateDomModel_ResponseParams_Data>;

  AutofillAssistantDriver_GetAnnotateDomModel_ResponseParams_Data();
  ~AutofillAssistantDriver_GetAnnotateDomModel_ResponseParams_Data() = delete;
};
static_assert(sizeof(AutofillAssistantDriver_GetAnnotateDomModel_ResponseParams_Data) == 32,
              "Bad sizeof(AutofillAssistantDriver_GetAnnotateDomModel_ResponseParams_Data)");

}  // namespace internal


class AutofillAssistantDriver_GetAnnotateDomModel_ParamsDataView {
 public:
  AutofillAssistantDriver_GetAnnotateDomModel_ParamsDataView() = default;

  AutofillAssistantDriver_GetAnnotateDomModel_ParamsDataView(
      internal::AutofillAssistantDriver_GetAnnotateDomModel_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetTimeoutDataView(
      ::mojo_base::mojom::TimeDeltaDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadTimeout(UserType* output) {
    
    auto* pointer = data_->timeout.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::TimeDeltaDataView>(
        pointer, output, message_);
  }
 private:
  internal::AutofillAssistantDriver_GetAnnotateDomModel_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AutofillAssistantDriver_GetAnnotateDomModel_ResponseParamsDataView {
 public:
  AutofillAssistantDriver_GetAnnotateDomModel_ResponseParamsDataView() = default;

  AutofillAssistantDriver_GetAnnotateDomModel_ResponseParamsDataView(
      internal::AutofillAssistantDriver_GetAnnotateDomModel_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::autofill_assistant::mojom::ModelStatus>(
        data_value, output);
  }
  ::autofill_assistant::mojom::ModelStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::autofill_assistant::mojom::ModelStatus>(data_->status));
  }
  inline void GetModelFileDataView(
      ::mojo_base::mojom::ReadOnlyFileDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadModelFile(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::mojo_base::mojom::ReadOnlyFileDataView, UserType>(),
    "Attempting to read the optional `model_file` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadModelFile` instead "
    "of `ReadModelFile if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->model_file.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::ReadOnlyFileDataView>(
        pointer, output, message_);
  }
  inline void GetOverridesPolicyDataView(
      ::mojo_base::mojom::ByteStringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadOverridesPolicy(UserType* output) {
    
    auto* pointer = data_->overrides_policy.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::ByteStringDataView>(
        pointer, output, message_);
  }
 private:
  internal::AutofillAssistantDriver_GetAnnotateDomModel_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};


inline void AutofillAssistantDriver_GetAnnotateDomModel_ParamsDataView::GetTimeoutDataView(
    ::mojo_base::mojom::TimeDeltaDataView* output) {
  auto pointer = data_->timeout.Get();
  *output = ::mojo_base::mojom::TimeDeltaDataView(pointer, message_);
}


inline void AutofillAssistantDriver_GetAnnotateDomModel_ResponseParamsDataView::GetModelFileDataView(
    ::mojo_base::mojom::ReadOnlyFileDataView* output) {
  auto pointer = data_->model_file.Get();
  *output = ::mojo_base::mojom::ReadOnlyFileDataView(pointer, message_);
}
inline void AutofillAssistantDriver_GetAnnotateDomModel_ResponseParamsDataView::GetOverridesPolicyDataView(
    ::mojo_base::mojom::ByteStringDataView* output) {
  auto pointer = data_->overrides_policy.Get();
  *output = ::mojo_base::mojom::ByteStringDataView(pointer, message_);
}

}  // namespace mojom
}  // namespace autofill_assistant

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // COMPONENTS_AUTOFILL_ASSISTANT_CONTENT_COMMON_AUTOFILL_ASSISTANT_DRIVER_MOJOM_PARAMS_DATA_H_