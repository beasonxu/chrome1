// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/autofill_assistant/AutofillAssistantUiController

#ifndef org_chromium_components_autofill_assistant_AutofillAssistantUiController_JNI
#define org_chromium_components_autofill_assistant_AutofillAssistantUiController_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_autofill_1assistant_AutofillAssistantUiController[];
const char kClassPath_org_chromium_components_autofill_1assistant_AutofillAssistantUiController[] =
    "org/chromium/components/autofill_assistant/AutofillAssistantUiController";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(nullptr);
#ifndef org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz_defined
#define org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz_defined
inline jclass
    org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_autofill_1assistant_AutofillAssistantUiController,
      "autofill_assistant",
      &g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace autofill_assistant {

JNI_GENERATOR_EXPORT void Java_J_N_MCgmBKHS(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeUiControllerAndroid,
    jobject caller,
    jboolean undo) {
  UiControllerAndroid* native = reinterpret_cast<UiControllerAndroid*>(nativeUiControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "SnackbarResult");
  return native->SnackbarResult(env, base::android::JavaParamRef<jobject>(env, caller), undo);
}

JNI_GENERATOR_EXPORT void Java_J_N_M77LtB_1C(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeUiControllerAndroid,
    jobject caller,
    jint reason) {
  UiControllerAndroid* native = reinterpret_cast<UiControllerAndroid*>(nativeUiControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "Stop");
  return native->Stop(env, base::android::JavaParamRef<jobject>(env, caller), reason);
}

JNI_GENERATOR_EXPORT void Java_J_N_M0eI5xAg(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeUiControllerAndroid,
    jobject caller,
    jstring message,
    jint reason) {
  UiControllerAndroid* native = reinterpret_cast<UiControllerAndroid*>(nativeUiControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnFatalError");
  return native->OnFatalError(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, message), reason);
}

JNI_GENERATOR_EXPORT void Java_J_N_M1Im6zlm(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeUiControllerAndroid,
    jobject caller,
    jint index) {
  UiControllerAndroid* native = reinterpret_cast<UiControllerAndroid*>(nativeUiControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnUserActionSelected");
  return native->OnUserActionSelected(env, base::android::JavaParamRef<jobject>(env, caller),
      index);
}

JNI_GENERATOR_EXPORT void Java_J_N_M3kKXdro(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeUiControllerAndroid,
    jobject caller,
    jint index) {
  UiControllerAndroid* native = reinterpret_cast<UiControllerAndroid*>(nativeUiControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnCancelButtonClicked");
  return native->OnCancelButtonClicked(env, base::android::JavaParamRef<jobject>(env, caller),
      index);
}

JNI_GENERATOR_EXPORT void Java_J_N_MC3NyAXl(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeUiControllerAndroid,
    jobject caller) {
  UiControllerAndroid* native = reinterpret_cast<UiControllerAndroid*>(nativeUiControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnCloseButtonClicked");
  return native->OnCloseButtonClicked(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT void Java_J_N_MYPxJRI1(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeUiControllerAndroid,
    jobject caller,
    jint index) {
  UiControllerAndroid* native = reinterpret_cast<UiControllerAndroid*>(nativeUiControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnFeedbackButtonClicked");
  return native->OnFeedbackButtonClicked(env, base::android::JavaParamRef<jobject>(env, caller),
      index);
}

JNI_GENERATOR_EXPORT void Java_J_N_MLYDeBKX(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeUiControllerAndroid,
    jobject caller,
    jboolean visible) {
  UiControllerAndroid* native = reinterpret_cast<UiControllerAndroid*>(nativeUiControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnKeyboardVisibilityChanged");
  return native->OnKeyboardVisibilityChanged(env, base::android::JavaParamRef<jobject>(env, caller),
      visible);
}

JNI_GENERATOR_EXPORT void Java_J_N_MJQCY_00024H3(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeUiControllerAndroid,
    jobject caller,
    jboolean visible) {
  UiControllerAndroid* native = reinterpret_cast<UiControllerAndroid*>(nativeUiControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetVisible");
  return native->SetVisible(env, base::android::JavaParamRef<jobject>(env, caller), visible);
}

JNI_GENERATOR_EXPORT void Java_J_N_MBb3dr0O(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeUiControllerAndroid,
    jobject caller,
    jint state,
    jboolean activityChanged) {
  UiControllerAndroid* native = reinterpret_cast<UiControllerAndroid*>(nativeUiControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnTabSwitched");
  return native->OnTabSwitched(env, base::android::JavaParamRef<jobject>(env, caller), state,
      activityChanged);
}

JNI_GENERATOR_EXPORT void Java_J_N_MGnus7f0(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeUiControllerAndroid,
    jobject caller) {
  UiControllerAndroid* native = reinterpret_cast<UiControllerAndroid*>(nativeUiControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnTabSelected");
  return native->OnTabSelected(env, base::android::JavaParamRef<jobject>(env, caller));
}


static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_canAttachUi(nullptr);
static jboolean Java_AutofillAssistantUiController_canAttachUi(JNIEnv* env, const
    base::android::JavaRef<jobject>& webContents,
    const base::android::JavaRef<jobject>& dependencies) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "canAttachUi",
"(Lorg/chromium/content_public/browser/WebContents;Lorg/chromium/components/autofill_assistant/AssistantDependencies;)Z",
          &g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_canAttachUi);

  jboolean ret =
      env->CallStaticBooleanMethod(clazz,
          call_context.base.method_id, webContents.obj(), dependencies.obj());
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_Constructor(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_AutofillAssistantUiController_Constructor(JNIEnv* env, jlong nativeUiController,
    const base::android::JavaRef<jobject>& webContents,
    const base::android::JavaRef<jobject>& dependencies,
    jboolean allowTabSwitching,
    const base::android::JavaRef<jobject>& overlayCoordinator) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "<init>",
"(JLorg/chromium/content_public/browser/WebContents;Lorg/chromium/components/autofill_assistant/AssistantDependencies;ZLorg/chromium/components/autofill_assistant/overlay/AssistantOverlayCoordinator;)V",
          &g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_Constructor);

  jobject ret =
      env->NewObject(clazz,
          call_context.base.method_id, nativeUiController, webContents.obj(), dependencies.obj(),
              allowTabSwitching, overlayCoordinator.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_getModel(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_AutofillAssistantUiController_getModel(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getModel",
          "()Lorg/chromium/components/autofill_assistant/AssistantModel;",
          &g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_getModel);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_getDependencies(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_AutofillAssistantUiController_getDependencies(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getDependencies",
          "()Lorg/chromium/components/autofill_assistant/AssistantDependencies;",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_getDependencies);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clearNativePtr(nullptr);
static void Java_AutofillAssistantUiController_clearNativePtr(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "clearNativePtr",
          "()V",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clearNativePtr);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_scheduleCloseCustomTab(nullptr);
static void Java_AutofillAssistantUiController_scheduleCloseCustomTab(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "scheduleCloseCustomTab",
          "()V",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_scheduleCloseCustomTab);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_showContentAndExpandBottomSheet(nullptr);
static void Java_AutofillAssistantUiController_showContentAndExpandBottomSheet(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "showContentAndExpandBottomSheet",
          "()V",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_showContentAndExpandBottomSheet);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_expandBottomSheet(nullptr);
static void Java_AutofillAssistantUiController_expandBottomSheet(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "expandBottomSheet",
          "()V",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_expandBottomSheet);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_collapseBottomSheet(nullptr);
static void Java_AutofillAssistantUiController_collapseBottomSheet(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "collapseBottomSheet",
          "()V",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_collapseBottomSheet);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_showFeedback(nullptr);
static void Java_AutofillAssistantUiController_showFeedback(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& debugContext,
    JniIntWrapper screenshotMode) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "showFeedback",
          "(Ljava/lang/String;I)V",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_showFeedback);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, debugContext.obj(), as_jint(screenshotMode));
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_isKeyboardShown(nullptr);
static jboolean Java_AutofillAssistantUiController_isKeyboardShown(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "isKeyboardShown",
          "()Z",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_isKeyboardShown);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_hideKeyboard(nullptr);
static void Java_AutofillAssistantUiController_hideKeyboard(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "hideKeyboard",
          "()V",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_hideKeyboard);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_restoreBottomSheetState(nullptr);
static void Java_AutofillAssistantUiController_restoreBottomSheetState(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper state) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "restoreBottomSheetState",
          "(I)V",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_restoreBottomSheetState);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(state));
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_hideKeyboardIfFocusNotOnText(nullptr);
static void Java_AutofillAssistantUiController_hideKeyboardIfFocusNotOnText(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "hideKeyboardIfFocusNotOnText",
          "()V",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_hideKeyboardIfFocusNotOnText);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_showSnackbar(nullptr);
static void Java_AutofillAssistantUiController_showSnackbar(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper delayMs,
    const base::android::JavaRef<jstring>& message,
    const base::android::JavaRef<jstring>& undoString) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "showSnackbar",
          "(ILjava/lang/String;Ljava/lang/String;)V",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_showSnackbar);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(delayMs), message.obj(), undoString.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_createChipList(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_AutofillAssistantUiController_createChipList(JNIEnv* env) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createChipList",
          "()Ljava/util/List;",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_createChipList);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_createActionButton(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_AutofillAssistantUiController_createActionButton(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper icon,
    const base::android::JavaRef<jstring>& text,
    JniIntWrapper actionIndex,
    jboolean disabled,
    jboolean sticky,
    jboolean visible,
    const base::android::JavaRef<jstring>& contentDescription) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "createActionButton",
"(ILjava/lang/String;IZZZLjava/lang/String;)Lorg/chromium/components/autofill_assistant/carousel/AssistantChip;",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_createActionButton);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id, as_jint(icon), text.obj(), as_jint(actionIndex), disabled,
              sticky, visible, contentDescription.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_createHighlightedActionButton(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_AutofillAssistantUiController_createHighlightedActionButton(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper icon,
    const base::android::JavaRef<jstring>& text,
    JniIntWrapper actionIndex,
    jboolean disabled,
    jboolean sticky,
    jboolean visible,
    const base::android::JavaRef<jstring>& contentDescription) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "createHighlightedActionButton",
"(ILjava/lang/String;IZZZLjava/lang/String;)Lorg/chromium/components/autofill_assistant/carousel/AssistantChip;",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_createHighlightedActionButton);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id, as_jint(icon), text.obj(), as_jint(actionIndex), disabled,
              sticky, visible, contentDescription.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_createCancelButton(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_AutofillAssistantUiController_createCancelButton(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper icon,
    const base::android::JavaRef<jstring>& text,
    JniIntWrapper actionIndex,
    jboolean disabled,
    jboolean sticky,
    jboolean visible,
    const base::android::JavaRef<jstring>& contentDescription) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "createCancelButton",
"(ILjava/lang/String;IZZZLjava/lang/String;)Lorg/chromium/components/autofill_assistant/carousel/AssistantChip;",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_createCancelButton);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id, as_jint(icon), text.obj(), as_jint(actionIndex), disabled,
              sticky, visible, contentDescription.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_createCloseButton(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_AutofillAssistantUiController_createCloseButton(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper icon,
    const base::android::JavaRef<jstring>& text,
    jboolean disabled,
    jboolean sticky,
    jboolean visible,
    const base::android::JavaRef<jstring>& contentDescription) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "createCloseButton",
"(ILjava/lang/String;ZZZLjava/lang/String;)Lorg/chromium/components/autofill_assistant/carousel/AssistantChip;",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_createCloseButton);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id, as_jint(icon), text.obj(), disabled, sticky, visible,
              contentDescription.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_createFeedbackButton(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_AutofillAssistantUiController_createFeedbackButton(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper icon,
    const base::android::JavaRef<jstring>& text,
    JniIntWrapper actionIndex,
    jboolean disabled,
    jboolean sticky,
    jboolean visible,
    const base::android::JavaRef<jstring>& contentDescription) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "createFeedbackButton",
"(ILjava/lang/String;IZZZLjava/lang/String;)Lorg/chromium/components/autofill_assistant/carousel/AssistantChip;",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_createFeedbackButton);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id, as_jint(icon), text.obj(), as_jint(actionIndex), disabled,
              sticky, visible, contentDescription.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_appendChipToList(nullptr);
static void Java_AutofillAssistantUiController_appendChipToList(JNIEnv* env, const
    base::android::JavaRef<jobject>& chips,
    const base::android::JavaRef<jobject>& chip) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "appendChipToList",
          "(Ljava/util/List;Lorg/chromium/components/autofill_assistant/carousel/AssistantChip;)V",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_appendChipToList);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, chips.obj(), chip.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_setActions(nullptr);
static void Java_AutofillAssistantUiController_setActions(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>& chips) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setActions",
          "(Ljava/util/List;)V",
          &g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_setActions);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, chips.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_setDisableChipChangeAnimations(nullptr);
static void Java_AutofillAssistantUiController_setDisableChipChangeAnimations(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, jboolean disable) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setDisableChipChangeAnimations",
          "(Z)V",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_setDisableChipChangeAnimations);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, disable);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_setViewportMode(nullptr);
static void Java_AutofillAssistantUiController_setViewportMode(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper mode) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setViewportMode",
          "(I)V",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_setViewportMode);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(mode));
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_setPeekMode(nullptr);
static void Java_AutofillAssistantUiController_setPeekMode(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper peekMode) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setPeekMode",
          "(I)V",
          &g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_setPeekMode);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(peekMode));
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_getContext(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_AutofillAssistantUiController_getContext(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getContext",
          "()Landroid/content/Context;",
          &g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_getContext);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_getWindowSize(nullptr);
static base::android::ScopedJavaLocalRef<jintArray>
    Java_AutofillAssistantUiController_getWindowSize(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getWindowSize",
          "()[I",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_getWindowSize);

  jintArray ret =
      static_cast<jintArray>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jintArray>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_getScreenOrientation(nullptr);
static jint Java_AutofillAssistantUiController_getScreenOrientation(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantUiController_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getScreenOrientation",
          "()I",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantUiController_getScreenOrientation);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

}  // namespace autofill_assistant

#endif  // org_chromium_components_autofill_assistant_AutofillAssistantUiController_JNI
