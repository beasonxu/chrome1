// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/autofill_assistant/browser/public/external_action.proto

package org.chromium.chrome.browser.autofill_assistant.external.proto;

/**
 * <pre>
 * Proto representation of autofill:CreditCard.
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.external.CreditCardProto}
 */
public  final class CreditCardProto extends
    com.google.protobuf.GeneratedMessageLite<
        CreditCardProto, CreditCardProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.external.CreditCardProto)
    CreditCardProtoOrBuilder {
  private CreditCardProto() {
    network_ = "";
    serverId_ = "";
  }
  private int bitField0_;
  public static final int VALUES_FIELD_NUMBER = 1;
  private static final class ValuesDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.Integer, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.Integer, java.lang.String>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.Integer, java.lang.String> values_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.Integer, java.lang.String>
  internalGetValues() {
    return values_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.Integer, java.lang.String>
  internalGetMutableValues() {
    if (!values_.isMutable()) {
      values_ = values_.mutableCopy();
    }
    return values_;
  }
  @java.lang.Override

  public int getValuesCount() {
    return internalGetValues().size();
  }
  /**
   * <pre>
   * The values for the card, where the key is one of autofill::ServerFieldType.
   * </pre>
   *
   * <code>map&lt;int32, string&gt; values = 1;</code>
   */
  @java.lang.Override

  public boolean containsValues(
      int key) {
    
    return internalGetValues().containsKey(key);
  }
  /**
   * Use {@link #getValuesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, java.lang.String> getValues() {
    return getValuesMap();
  }
  /**
   * <pre>
   * The values for the card, where the key is one of autofill::ServerFieldType.
   * </pre>
   *
   * <code>map&lt;int32, string&gt; values = 1;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Integer, java.lang.String> getValuesMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetValues());
  }
  /**
   * <pre>
   * The values for the card, where the key is one of autofill::ServerFieldType.
   * </pre>
   *
   * <code>map&lt;int32, string&gt; values = 1;</code>
   */
  @java.lang.Override

  public java.lang.String getValuesOrDefault(
      int key,
      java.lang.String defaultValue) {
    
    java.util.Map<java.lang.Integer, java.lang.String> map =
        internalGetValues();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * The values for the card, where the key is one of autofill::ServerFieldType.
   * </pre>
   *
   * <code>map&lt;int32, string&gt; values = 1;</code>
   */
  @java.lang.Override

  public java.lang.String getValuesOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, java.lang.String> map =
        internalGetValues();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <pre>
   * The values for the card, where the key is one of autofill::ServerFieldType.
   * </pre>
   *
   * <code>map&lt;int32, string&gt; values = 1;</code>
   */
  private java.util.Map<java.lang.Integer, java.lang.String>
  getMutableValuesMap() {
    return internalGetMutableValues();
  }

  public static final int RECORD_TYPE_FIELD_NUMBER = 2;
  private long recordType_;
  /**
   * <pre>
   * Remaining autofill::CreditCard fields not in autofill::ServerFieldType :
   * Specifies e.g. if a card is local, one of autofill::CreditCard::RecordType.
   * </pre>
   *
   * <code>optional int64 record_type = 2;</code>
   * @return Whether the recordType field is set.
   */
  @java.lang.Override
  public boolean hasRecordType() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Remaining autofill::CreditCard fields not in autofill::ServerFieldType :
   * Specifies e.g. if a card is local, one of autofill::CreditCard::RecordType.
   * </pre>
   *
   * <code>optional int64 record_type = 2;</code>
   * @return The recordType.
   */
  @java.lang.Override
  public long getRecordType() {
    return recordType_;
  }
  /**
   * <pre>
   * Remaining autofill::CreditCard fields not in autofill::ServerFieldType :
   * Specifies e.g. if a card is local, one of autofill::CreditCard::RecordType.
   * </pre>
   *
   * <code>optional int64 record_type = 2;</code>
   * @param value The recordType to set.
   */
  private void setRecordType(long value) {
    bitField0_ |= 0x00000001;
    recordType_ = value;
  }
  /**
   * <pre>
   * Remaining autofill::CreditCard fields not in autofill::ServerFieldType :
   * Specifies e.g. if a card is local, one of autofill::CreditCard::RecordType.
   * </pre>
   *
   * <code>optional int64 record_type = 2;</code>
   */
  private void clearRecordType() {
    bitField0_ = (bitField0_ & ~0x00000001);
    recordType_ = 0L;
  }

  public static final int INSTRUMENT_ID_FIELD_NUMBER = 3;
  private long instrumentId_;
  /**
   * <pre>
   * The payments instrument id used to identify and unmask the credit card.
   * </pre>
   *
   * <code>optional int64 instrument_id = 3;</code>
   * @return Whether the instrumentId field is set.
   */
  @java.lang.Override
  public boolean hasInstrumentId() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The payments instrument id used to identify and unmask the credit card.
   * </pre>
   *
   * <code>optional int64 instrument_id = 3;</code>
   * @return The instrumentId.
   */
  @java.lang.Override
  public long getInstrumentId() {
    return instrumentId_;
  }
  /**
   * <pre>
   * The payments instrument id used to identify and unmask the credit card.
   * </pre>
   *
   * <code>optional int64 instrument_id = 3;</code>
   * @param value The instrumentId to set.
   */
  private void setInstrumentId(long value) {
    bitField0_ |= 0x00000002;
    instrumentId_ = value;
  }
  /**
   * <pre>
   * The payments instrument id used to identify and unmask the credit card.
   * </pre>
   *
   * <code>optional int64 instrument_id = 3;</code>
   */
  private void clearInstrumentId() {
    bitField0_ = (bitField0_ & ~0x00000002);
    instrumentId_ = 0L;
  }

  public static final int NETWORK_FIELD_NUMBER = 4;
  private java.lang.String network_;
  /**
   * <pre>
   * The network of the card.
   * </pre>
   *
   * <code>optional string network = 4;</code>
   * @return Whether the network field is set.
   */
  @java.lang.Override
  public boolean hasNetwork() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * The network of the card.
   * </pre>
   *
   * <code>optional string network = 4;</code>
   * @return The network.
   */
  @java.lang.Override
  public java.lang.String getNetwork() {
    return network_;
  }
  /**
   * <pre>
   * The network of the card.
   * </pre>
   *
   * <code>optional string network = 4;</code>
   * @return The bytes for network.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNetworkBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(network_);
  }
  /**
   * <pre>
   * The network of the card.
   * </pre>
   *
   * <code>optional string network = 4;</code>
   * @param value The network to set.
   */
  private void setNetwork(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000004;
    network_ = value;
  }
  /**
   * <pre>
   * The network of the card.
   * </pre>
   *
   * <code>optional string network = 4;</code>
   */
  private void clearNetwork() {
    bitField0_ = (bitField0_ & ~0x00000004);
    network_ = getDefaultInstance().getNetwork();
  }
  /**
   * <pre>
   * The network of the card.
   * </pre>
   *
   * <code>optional string network = 4;</code>
   * @param value The bytes for network to set.
   */
  private void setNetworkBytes(
      com.google.protobuf.ByteString value) {
    network_ = value.toStringUtf8();
    bitField0_ |= 0x00000004;
  }

  public static final int SERVER_ID_FIELD_NUMBER = 5;
  private java.lang.String serverId_;
  /**
   * <pre>
   * Server ID of the card.
   * TODO(crbug.com/1121806): Remove after autofill::CreditCard::server_id_ was
   * removed.
   * </pre>
   *
   * <code>optional string server_id = 5 [deprecated = true];</code>
   * @return Whether the serverId field is set.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean hasServerId() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * Server ID of the card.
   * TODO(crbug.com/1121806): Remove after autofill::CreditCard::server_id_ was
   * removed.
   * </pre>
   *
   * <code>optional string server_id = 5 [deprecated = true];</code>
   * @return The serverId.
   */
  @java.lang.Override
  @java.lang.Deprecated public java.lang.String getServerId() {
    return serverId_;
  }
  /**
   * <pre>
   * Server ID of the card.
   * TODO(crbug.com/1121806): Remove after autofill::CreditCard::server_id_ was
   * removed.
   * </pre>
   *
   * <code>optional string server_id = 5 [deprecated = true];</code>
   * @return The bytes for serverId.
   */
  @java.lang.Override
  @java.lang.Deprecated public com.google.protobuf.ByteString
      getServerIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(serverId_);
  }
  /**
   * <pre>
   * Server ID of the card.
   * TODO(crbug.com/1121806): Remove after autofill::CreditCard::server_id_ was
   * removed.
   * </pre>
   *
   * <code>optional string server_id = 5 [deprecated = true];</code>
   * @param value The serverId to set.
   */
  private void setServerId(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000008;
    serverId_ = value;
  }
  /**
   * <pre>
   * Server ID of the card.
   * TODO(crbug.com/1121806): Remove after autofill::CreditCard::server_id_ was
   * removed.
   * </pre>
   *
   * <code>optional string server_id = 5 [deprecated = true];</code>
   */
  private void clearServerId() {
    bitField0_ = (bitField0_ & ~0x00000008);
    serverId_ = getDefaultInstance().getServerId();
  }
  /**
   * <pre>
   * Server ID of the card.
   * TODO(crbug.com/1121806): Remove after autofill::CreditCard::server_id_ was
   * removed.
   * </pre>
   *
   * <code>optional string server_id = 5 [deprecated = true];</code>
   * @param value The bytes for serverId to set.
   */
  private void setServerIdBytes(
      com.google.protobuf.ByteString value) {
    serverId_ = value.toStringUtf8();
    bitField0_ |= 0x00000008;
  }

  public static org.chromium.chrome.browser.autofill_assistant.external.proto.CreditCardProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.external.proto.CreditCardProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.external.proto.CreditCardProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.external.proto.CreditCardProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.external.proto.CreditCardProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.external.proto.CreditCardProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.external.proto.CreditCardProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.external.proto.CreditCardProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.external.proto.CreditCardProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.external.proto.CreditCardProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.external.proto.CreditCardProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.external.proto.CreditCardProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.external.proto.CreditCardProto prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Proto representation of autofill:CreditCard.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.external.CreditCardProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.external.proto.CreditCardProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.external.CreditCardProto)
      org.chromium.chrome.browser.autofill_assistant.external.proto.CreditCardProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.external.proto.CreditCardProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    @java.lang.Override

    public int getValuesCount() {
      return instance.getValuesMap().size();
    }
    /**
     * <pre>
     * The values for the card, where the key is one of autofill::ServerFieldType.
     * </pre>
     *
     * <code>map&lt;int32, string&gt; values = 1;</code>
     */
    @java.lang.Override

    public boolean containsValues(
        int key) {
      
      return instance.getValuesMap().containsKey(key);
    }

    public Builder clearValues() {
      copyOnWrite();
      instance.getMutableValuesMap().clear();
      return this;
    }
    /**
     * <pre>
     * The values for the card, where the key is one of autofill::ServerFieldType.
     * </pre>
     *
     * <code>map&lt;int32, string&gt; values = 1;</code>
     */

    public Builder removeValues(
        int key) {
      
      copyOnWrite();
      instance.getMutableValuesMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getValuesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.String> getValues() {
      return getValuesMap();
    }
    /**
     * <pre>
     * The values for the card, where the key is one of autofill::ServerFieldType.
     * </pre>
     *
     * <code>map&lt;int32, string&gt; values = 1;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, java.lang.String> getValuesMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getValuesMap());
    }
    /**
     * <pre>
     * The values for the card, where the key is one of autofill::ServerFieldType.
     * </pre>
     *
     * <code>map&lt;int32, string&gt; values = 1;</code>
     */
    @java.lang.Override

    public java.lang.String getValuesOrDefault(
        int key,
        java.lang.String defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.String> map =
          instance.getValuesMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * The values for the card, where the key is one of autofill::ServerFieldType.
     * </pre>
     *
     * <code>map&lt;int32, string&gt; values = 1;</code>
     */
    @java.lang.Override

    public java.lang.String getValuesOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.String> map =
          instance.getValuesMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <pre>
     * The values for the card, where the key is one of autofill::ServerFieldType.
     * </pre>
     *
     * <code>map&lt;int32, string&gt; values = 1;</code>
     */
    public Builder putValues(
        int key,
        java.lang.String value) {
      
      value.getClass();
      copyOnWrite();
      instance.getMutableValuesMap().put(key, value);
      return this;
    }
    /**
     * <pre>
     * The values for the card, where the key is one of autofill::ServerFieldType.
     * </pre>
     *
     * <code>map&lt;int32, string&gt; values = 1;</code>
     */
    public Builder putAllValues(
        java.util.Map<java.lang.Integer, java.lang.String> values) {
      copyOnWrite();
      instance.getMutableValuesMap().putAll(values);
      return this;
    }

    /**
     * <pre>
     * Remaining autofill::CreditCard fields not in autofill::ServerFieldType :
     * Specifies e.g. if a card is local, one of autofill::CreditCard::RecordType.
     * </pre>
     *
     * <code>optional int64 record_type = 2;</code>
     * @return Whether the recordType field is set.
     */
    @java.lang.Override
    public boolean hasRecordType() {
      return instance.hasRecordType();
    }
    /**
     * <pre>
     * Remaining autofill::CreditCard fields not in autofill::ServerFieldType :
     * Specifies e.g. if a card is local, one of autofill::CreditCard::RecordType.
     * </pre>
     *
     * <code>optional int64 record_type = 2;</code>
     * @return The recordType.
     */
    @java.lang.Override
    public long getRecordType() {
      return instance.getRecordType();
    }
    /**
     * <pre>
     * Remaining autofill::CreditCard fields not in autofill::ServerFieldType :
     * Specifies e.g. if a card is local, one of autofill::CreditCard::RecordType.
     * </pre>
     *
     * <code>optional int64 record_type = 2;</code>
     * @param value The recordType to set.
     * @return This builder for chaining.
     */
    public Builder setRecordType(long value) {
      copyOnWrite();
      instance.setRecordType(value);
      return this;
    }
    /**
     * <pre>
     * Remaining autofill::CreditCard fields not in autofill::ServerFieldType :
     * Specifies e.g. if a card is local, one of autofill::CreditCard::RecordType.
     * </pre>
     *
     * <code>optional int64 record_type = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearRecordType() {
      copyOnWrite();
      instance.clearRecordType();
      return this;
    }

    /**
     * <pre>
     * The payments instrument id used to identify and unmask the credit card.
     * </pre>
     *
     * <code>optional int64 instrument_id = 3;</code>
     * @return Whether the instrumentId field is set.
     */
    @java.lang.Override
    public boolean hasInstrumentId() {
      return instance.hasInstrumentId();
    }
    /**
     * <pre>
     * The payments instrument id used to identify and unmask the credit card.
     * </pre>
     *
     * <code>optional int64 instrument_id = 3;</code>
     * @return The instrumentId.
     */
    @java.lang.Override
    public long getInstrumentId() {
      return instance.getInstrumentId();
    }
    /**
     * <pre>
     * The payments instrument id used to identify and unmask the credit card.
     * </pre>
     *
     * <code>optional int64 instrument_id = 3;</code>
     * @param value The instrumentId to set.
     * @return This builder for chaining.
     */
    public Builder setInstrumentId(long value) {
      copyOnWrite();
      instance.setInstrumentId(value);
      return this;
    }
    /**
     * <pre>
     * The payments instrument id used to identify and unmask the credit card.
     * </pre>
     *
     * <code>optional int64 instrument_id = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearInstrumentId() {
      copyOnWrite();
      instance.clearInstrumentId();
      return this;
    }

    /**
     * <pre>
     * The network of the card.
     * </pre>
     *
     * <code>optional string network = 4;</code>
     * @return Whether the network field is set.
     */
    @java.lang.Override
    public boolean hasNetwork() {
      return instance.hasNetwork();
    }
    /**
     * <pre>
     * The network of the card.
     * </pre>
     *
     * <code>optional string network = 4;</code>
     * @return The network.
     */
    @java.lang.Override
    public java.lang.String getNetwork() {
      return instance.getNetwork();
    }
    /**
     * <pre>
     * The network of the card.
     * </pre>
     *
     * <code>optional string network = 4;</code>
     * @return The bytes for network.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNetworkBytes() {
      return instance.getNetworkBytes();
    }
    /**
     * <pre>
     * The network of the card.
     * </pre>
     *
     * <code>optional string network = 4;</code>
     * @param value The network to set.
     * @return This builder for chaining.
     */
    public Builder setNetwork(
        java.lang.String value) {
      copyOnWrite();
      instance.setNetwork(value);
      return this;
    }
    /**
     * <pre>
     * The network of the card.
     * </pre>
     *
     * <code>optional string network = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearNetwork() {
      copyOnWrite();
      instance.clearNetwork();
      return this;
    }
    /**
     * <pre>
     * The network of the card.
     * </pre>
     *
     * <code>optional string network = 4;</code>
     * @param value The bytes for network to set.
     * @return This builder for chaining.
     */
    public Builder setNetworkBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setNetworkBytes(value);
      return this;
    }

    /**
     * <pre>
     * Server ID of the card.
     * TODO(crbug.com/1121806): Remove after autofill::CreditCard::server_id_ was
     * removed.
     * </pre>
     *
     * <code>optional string server_id = 5 [deprecated = true];</code>
     * @return Whether the serverId field is set.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean hasServerId() {
      return instance.hasServerId();
    }
    /**
     * <pre>
     * Server ID of the card.
     * TODO(crbug.com/1121806): Remove after autofill::CreditCard::server_id_ was
     * removed.
     * </pre>
     *
     * <code>optional string server_id = 5 [deprecated = true];</code>
     * @return The serverId.
     */
    @java.lang.Override
    @java.lang.Deprecated public java.lang.String getServerId() {
      return instance.getServerId();
    }
    /**
     * <pre>
     * Server ID of the card.
     * TODO(crbug.com/1121806): Remove after autofill::CreditCard::server_id_ was
     * removed.
     * </pre>
     *
     * <code>optional string server_id = 5 [deprecated = true];</code>
     * @return The bytes for serverId.
     */
    @java.lang.Override
    @java.lang.Deprecated public com.google.protobuf.ByteString
        getServerIdBytes() {
      return instance.getServerIdBytes();
    }
    /**
     * <pre>
     * Server ID of the card.
     * TODO(crbug.com/1121806): Remove after autofill::CreditCard::server_id_ was
     * removed.
     * </pre>
     *
     * <code>optional string server_id = 5 [deprecated = true];</code>
     * @param value The serverId to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setServerId(
        java.lang.String value) {
      copyOnWrite();
      instance.setServerId(value);
      return this;
    }
    /**
     * <pre>
     * Server ID of the card.
     * TODO(crbug.com/1121806): Remove after autofill::CreditCard::server_id_ was
     * removed.
     * </pre>
     *
     * <code>optional string server_id = 5 [deprecated = true];</code>
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearServerId() {
      copyOnWrite();
      instance.clearServerId();
      return this;
    }
    /**
     * <pre>
     * Server ID of the card.
     * TODO(crbug.com/1121806): Remove after autofill::CreditCard::server_id_ was
     * removed.
     * </pre>
     *
     * <code>optional string server_id = 5 [deprecated = true];</code>
     * @param value The bytes for serverId to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setServerIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setServerIdBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.external.CreditCardProto)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.external.proto.CreditCardProto();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "values_",
            ValuesDefaultEntryHolder.defaultEntry,
            "recordType_",
            "instrumentId_",
            "network_",
            "serverId_",
          };
          java.lang.String info =
              "\u0001\u0005\u0000\u0001\u0001\u0005\u0005\u0001\u0000\u0000\u00012\u0002\u1002\u0000" +
              "\u0003\u1002\u0001\u0004\u1008\u0002\u0005\u1008\u0003";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.external.proto.CreditCardProto> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.chrome.browser.autofill_assistant.external.proto.CreditCardProto.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.external.proto.CreditCardProto>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.external.CreditCardProto)
  private static final org.chromium.chrome.browser.autofill_assistant.external.proto.CreditCardProto DEFAULT_INSTANCE;
  static {
    CreditCardProto defaultInstance = new CreditCardProto();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      CreditCardProto.class, defaultInstance);
  }

  public static org.chromium.chrome.browser.autofill_assistant.external.proto.CreditCardProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<CreditCardProto> PARSER;

  public static com.google.protobuf.Parser<CreditCardProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

