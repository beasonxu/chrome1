// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/autofill_assistant/browser/service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * <pre>
 * Fill a form with a credit card if there is one stored in client memory,
 * otherwise fail this action.
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.UseCreditCardProto}
 */
public  final class UseCreditCardProto extends
    com.google.protobuf.GeneratedMessageLite<
        UseCreditCardProto, UseCreditCardProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.UseCreditCardProto)
    UseCreditCardProtoOrBuilder {
  private UseCreditCardProto() {
    modelIdentifier_ = "";
    requiredFields_ = emptyProtobufList();
  }
  private int bitField0_;
  public static final int MODEL_IDENTIFIER_FIELD_NUMBER = 4;
  private java.lang.String modelIdentifier_;
  /**
   * <pre>
   * The client model identifier from which to retrieve the credit card.
   * If not specified, will use the card stored in client memory instead.
   * </pre>
   *
   * <code>optional string model_identifier = 4;</code>
   * @return Whether the modelIdentifier field is set.
   */
  @java.lang.Override
  public boolean hasModelIdentifier() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The client model identifier from which to retrieve the credit card.
   * If not specified, will use the card stored in client memory instead.
   * </pre>
   *
   * <code>optional string model_identifier = 4;</code>
   * @return The modelIdentifier.
   */
  @java.lang.Override
  public java.lang.String getModelIdentifier() {
    return modelIdentifier_;
  }
  /**
   * <pre>
   * The client model identifier from which to retrieve the credit card.
   * If not specified, will use the card stored in client memory instead.
   * </pre>
   *
   * <code>optional string model_identifier = 4;</code>
   * @return The bytes for modelIdentifier.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getModelIdentifierBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(modelIdentifier_);
  }
  /**
   * <pre>
   * The client model identifier from which to retrieve the credit card.
   * If not specified, will use the card stored in client memory instead.
   * </pre>
   *
   * <code>optional string model_identifier = 4;</code>
   * @param value The modelIdentifier to set.
   */
  private void setModelIdentifier(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000001;
    modelIdentifier_ = value;
  }
  /**
   * <pre>
   * The client model identifier from which to retrieve the credit card.
   * If not specified, will use the card stored in client memory instead.
   * </pre>
   *
   * <code>optional string model_identifier = 4;</code>
   */
  private void clearModelIdentifier() {
    bitField0_ = (bitField0_ & ~0x00000001);
    modelIdentifier_ = getDefaultInstance().getModelIdentifier();
  }
  /**
   * <pre>
   * The client model identifier from which to retrieve the credit card.
   * If not specified, will use the card stored in client memory instead.
   * </pre>
   *
   * <code>optional string model_identifier = 4;</code>
   * @param value The bytes for modelIdentifier to set.
   */
  private void setModelIdentifierBytes(
      com.google.protobuf.ByteString value) {
    modelIdentifier_ = value.toStringUtf8();
    bitField0_ |= 0x00000001;
  }

  public static final int FORM_FIELD_ELEMENT_FIELD_NUMBER = 3;
  private org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto formFieldElement_;
  /**
   * <pre>
   * A reference to the card number field in the form that should be filled.
   * </pre>
   *
   * <code>optional .autofill_assistant.SelectorProto form_field_element = 3;</code>
   */
  @java.lang.Override
  public boolean hasFormFieldElement() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * A reference to the card number field in the form that should be filled.
   * </pre>
   *
   * <code>optional .autofill_assistant.SelectorProto form_field_element = 3;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto getFormFieldElement() {
    return formFieldElement_ == null ? org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.getDefaultInstance() : formFieldElement_;
  }
  /**
   * <pre>
   * A reference to the card number field in the form that should be filled.
   * </pre>
   *
   * <code>optional .autofill_assistant.SelectorProto form_field_element = 3;</code>
   */
  private void setFormFieldElement(org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto value) {
    value.getClass();
  formFieldElement_ = value;
    bitField0_ |= 0x00000002;
    }
  /**
   * <pre>
   * A reference to the card number field in the form that should be filled.
   * </pre>
   *
   * <code>optional .autofill_assistant.SelectorProto form_field_element = 3;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeFormFieldElement(org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto value) {
    value.getClass();
  if (formFieldElement_ != null &&
        formFieldElement_ != org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.getDefaultInstance()) {
      formFieldElement_ =
        org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.newBuilder(formFieldElement_).mergeFrom(value).buildPartial();
    } else {
      formFieldElement_ = value;
    }
    bitField0_ |= 0x00000002;
  }
  /**
   * <pre>
   * A reference to the card number field in the form that should be filled.
   * </pre>
   *
   * <code>optional .autofill_assistant.SelectorProto form_field_element = 3;</code>
   */
  private void clearFormFieldElement() {  formFieldElement_ = null;
    bitField0_ = (bitField0_ & ~0x00000002);
  }

  public static final int REQUIRED_FIELDS_FIELD_NUMBER = 7;
  private com.google.protobuf.Internal.ProtobufList<org.chromium.chrome.browser.autofill_assistant.proto.RequiredFieldProto> requiredFields_;
  /**
   * <code>repeated .autofill_assistant.RequiredFieldProto required_fields = 7;</code>
   */
  @java.lang.Override
  public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.RequiredFieldProto> getRequiredFieldsList() {
    return requiredFields_;
  }
  /**
   * <code>repeated .autofill_assistant.RequiredFieldProto required_fields = 7;</code>
   */
  public java.util.List<? extends org.chromium.chrome.browser.autofill_assistant.proto.RequiredFieldProtoOrBuilder> 
      getRequiredFieldsOrBuilderList() {
    return requiredFields_;
  }
  /**
   * <code>repeated .autofill_assistant.RequiredFieldProto required_fields = 7;</code>
   */
  @java.lang.Override
  public int getRequiredFieldsCount() {
    return requiredFields_.size();
  }
  /**
   * <code>repeated .autofill_assistant.RequiredFieldProto required_fields = 7;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.RequiredFieldProto getRequiredFields(int index) {
    return requiredFields_.get(index);
  }
  /**
   * <code>repeated .autofill_assistant.RequiredFieldProto required_fields = 7;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.RequiredFieldProtoOrBuilder getRequiredFieldsOrBuilder(
      int index) {
    return requiredFields_.get(index);
  }
  private void ensureRequiredFieldsIsMutable() {
    com.google.protobuf.Internal.ProtobufList<org.chromium.chrome.browser.autofill_assistant.proto.RequiredFieldProto> tmp = requiredFields_;
    if (!tmp.isModifiable()) {
      requiredFields_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <code>repeated .autofill_assistant.RequiredFieldProto required_fields = 7;</code>
   */
  private void setRequiredFields(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.RequiredFieldProto value) {
    value.getClass();
  ensureRequiredFieldsIsMutable();
    requiredFields_.set(index, value);
  }
  /**
   * <code>repeated .autofill_assistant.RequiredFieldProto required_fields = 7;</code>
   */
  private void addRequiredFields(org.chromium.chrome.browser.autofill_assistant.proto.RequiredFieldProto value) {
    value.getClass();
  ensureRequiredFieldsIsMutable();
    requiredFields_.add(value);
  }
  /**
   * <code>repeated .autofill_assistant.RequiredFieldProto required_fields = 7;</code>
   */
  private void addRequiredFields(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.RequiredFieldProto value) {
    value.getClass();
  ensureRequiredFieldsIsMutable();
    requiredFields_.add(index, value);
  }
  /**
   * <code>repeated .autofill_assistant.RequiredFieldProto required_fields = 7;</code>
   */
  private void addAllRequiredFields(
      java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.RequiredFieldProto> values) {
    ensureRequiredFieldsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, requiredFields_);
  }
  /**
   * <code>repeated .autofill_assistant.RequiredFieldProto required_fields = 7;</code>
   */
  private void clearRequiredFields() {
    requiredFields_ = emptyProtobufList();
  }
  /**
   * <code>repeated .autofill_assistant.RequiredFieldProto required_fields = 7;</code>
   */
  private void removeRequiredFields(int index) {
    ensureRequiredFieldsIsMutable();
    requiredFields_.remove(index);
  }

  public static final int SKIP_AUTOFILL_FIELD_NUMBER = 8;
  private boolean skipAutofill_;
  /**
   * <pre>
   * If true, this skips the Autofill step jumping straight to the
   * |required_fields|.
   * </pre>
   *
   * <code>optional bool skip_autofill = 8;</code>
   * @return Whether the skipAutofill field is set.
   */
  @java.lang.Override
  public boolean hasSkipAutofill() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * If true, this skips the Autofill step jumping straight to the
   * |required_fields|.
   * </pre>
   *
   * <code>optional bool skip_autofill = 8;</code>
   * @return The skipAutofill.
   */
  @java.lang.Override
  public boolean getSkipAutofill() {
    return skipAutofill_;
  }
  /**
   * <pre>
   * If true, this skips the Autofill step jumping straight to the
   * |required_fields|.
   * </pre>
   *
   * <code>optional bool skip_autofill = 8;</code>
   * @param value The skipAutofill to set.
   */
  private void setSkipAutofill(boolean value) {
    bitField0_ |= 0x00000004;
    skipAutofill_ = value;
  }
  /**
   * <pre>
   * If true, this skips the Autofill step jumping straight to the
   * |required_fields|.
   * </pre>
   *
   * <code>optional bool skip_autofill = 8;</code>
   */
  private void clearSkipAutofill() {
    bitField0_ = (bitField0_ & ~0x00000004);
    skipAutofill_ = false;
  }

  public static final int SKIP_RESOLVE_FIELD_NUMBER = 9;
  private boolean skipResolve_;
  /**
   * <pre>
   * If true, this skips resolving the CreditCard. The card can be used to fill
   * fields like name or expiration date. Be aware that you cannot fill CVC or
   * credit card number without resolving the card.
   * This skips the autofill step, regardless of |skip_autofill|.
   * </pre>
   *
   * <code>optional bool skip_resolve = 9;</code>
   * @return Whether the skipResolve field is set.
   */
  @java.lang.Override
  public boolean hasSkipResolve() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * If true, this skips resolving the CreditCard. The card can be used to fill
   * fields like name or expiration date. Be aware that you cannot fill CVC or
   * credit card number without resolving the card.
   * This skips the autofill step, regardless of |skip_autofill|.
   * </pre>
   *
   * <code>optional bool skip_resolve = 9;</code>
   * @return The skipResolve.
   */
  @java.lang.Override
  public boolean getSkipResolve() {
    return skipResolve_;
  }
  /**
   * <pre>
   * If true, this skips resolving the CreditCard. The card can be used to fill
   * fields like name or expiration date. Be aware that you cannot fill CVC or
   * credit card number without resolving the card.
   * This skips the autofill step, regardless of |skip_autofill|.
   * </pre>
   *
   * <code>optional bool skip_resolve = 9;</code>
   * @param value The skipResolve to set.
   */
  private void setSkipResolve(boolean value) {
    bitField0_ |= 0x00000008;
    skipResolve_ = value;
  }
  /**
   * <pre>
   * If true, this skips resolving the CreditCard. The card can be used to fill
   * fields like name or expiration date. Be aware that you cannot fill CVC or
   * credit card number without resolving the card.
   * This skips the autofill step, regardless of |skip_autofill|.
   * </pre>
   *
   * <code>optional bool skip_resolve = 9;</code>
   */
  private void clearSkipResolve() {
    bitField0_ = (bitField0_ & ~0x00000008);
    skipResolve_ = false;
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Fill a form with a credit card if there is one stored in client memory,
   * otherwise fail this action.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.UseCreditCardProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.UseCreditCardProto)
      org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The client model identifier from which to retrieve the credit card.
     * If not specified, will use the card stored in client memory instead.
     * </pre>
     *
     * <code>optional string model_identifier = 4;</code>
     * @return Whether the modelIdentifier field is set.
     */
    @java.lang.Override
    public boolean hasModelIdentifier() {
      return instance.hasModelIdentifier();
    }
    /**
     * <pre>
     * The client model identifier from which to retrieve the credit card.
     * If not specified, will use the card stored in client memory instead.
     * </pre>
     *
     * <code>optional string model_identifier = 4;</code>
     * @return The modelIdentifier.
     */
    @java.lang.Override
    public java.lang.String getModelIdentifier() {
      return instance.getModelIdentifier();
    }
    /**
     * <pre>
     * The client model identifier from which to retrieve the credit card.
     * If not specified, will use the card stored in client memory instead.
     * </pre>
     *
     * <code>optional string model_identifier = 4;</code>
     * @return The bytes for modelIdentifier.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getModelIdentifierBytes() {
      return instance.getModelIdentifierBytes();
    }
    /**
     * <pre>
     * The client model identifier from which to retrieve the credit card.
     * If not specified, will use the card stored in client memory instead.
     * </pre>
     *
     * <code>optional string model_identifier = 4;</code>
     * @param value The modelIdentifier to set.
     * @return This builder for chaining.
     */
    public Builder setModelIdentifier(
        java.lang.String value) {
      copyOnWrite();
      instance.setModelIdentifier(value);
      return this;
    }
    /**
     * <pre>
     * The client model identifier from which to retrieve the credit card.
     * If not specified, will use the card stored in client memory instead.
     * </pre>
     *
     * <code>optional string model_identifier = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearModelIdentifier() {
      copyOnWrite();
      instance.clearModelIdentifier();
      return this;
    }
    /**
     * <pre>
     * The client model identifier from which to retrieve the credit card.
     * If not specified, will use the card stored in client memory instead.
     * </pre>
     *
     * <code>optional string model_identifier = 4;</code>
     * @param value The bytes for modelIdentifier to set.
     * @return This builder for chaining.
     */
    public Builder setModelIdentifierBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setModelIdentifierBytes(value);
      return this;
    }

    /**
     * <pre>
     * A reference to the card number field in the form that should be filled.
     * </pre>
     *
     * <code>optional .autofill_assistant.SelectorProto form_field_element = 3;</code>
     */
    @java.lang.Override
    public boolean hasFormFieldElement() {
      return instance.hasFormFieldElement();
    }
    /**
     * <pre>
     * A reference to the card number field in the form that should be filled.
     * </pre>
     *
     * <code>optional .autofill_assistant.SelectorProto form_field_element = 3;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto getFormFieldElement() {
      return instance.getFormFieldElement();
    }
    /**
     * <pre>
     * A reference to the card number field in the form that should be filled.
     * </pre>
     *
     * <code>optional .autofill_assistant.SelectorProto form_field_element = 3;</code>
     */
    public Builder setFormFieldElement(org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto value) {
      copyOnWrite();
      instance.setFormFieldElement(value);
      return this;
      }
    /**
     * <pre>
     * A reference to the card number field in the form that should be filled.
     * </pre>
     *
     * <code>optional .autofill_assistant.SelectorProto form_field_element = 3;</code>
     */
    public Builder setFormFieldElement(
        org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.Builder builderForValue) {
      copyOnWrite();
      instance.setFormFieldElement(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * A reference to the card number field in the form that should be filled.
     * </pre>
     *
     * <code>optional .autofill_assistant.SelectorProto form_field_element = 3;</code>
     */
    public Builder mergeFormFieldElement(org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto value) {
      copyOnWrite();
      instance.mergeFormFieldElement(value);
      return this;
    }
    /**
     * <pre>
     * A reference to the card number field in the form that should be filled.
     * </pre>
     *
     * <code>optional .autofill_assistant.SelectorProto form_field_element = 3;</code>
     */
    public Builder clearFormFieldElement() {  copyOnWrite();
      instance.clearFormFieldElement();
      return this;
    }

    /**
     * <code>repeated .autofill_assistant.RequiredFieldProto required_fields = 7;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.RequiredFieldProto> getRequiredFieldsList() {
      return java.util.Collections.unmodifiableList(
          instance.getRequiredFieldsList());
    }
    /**
     * <code>repeated .autofill_assistant.RequiredFieldProto required_fields = 7;</code>
     */
    @java.lang.Override
    public int getRequiredFieldsCount() {
      return instance.getRequiredFieldsCount();
    }/**
     * <code>repeated .autofill_assistant.RequiredFieldProto required_fields = 7;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.RequiredFieldProto getRequiredFields(int index) {
      return instance.getRequiredFields(index);
    }
    /**
     * <code>repeated .autofill_assistant.RequiredFieldProto required_fields = 7;</code>
     */
    public Builder setRequiredFields(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.RequiredFieldProto value) {
      copyOnWrite();
      instance.setRequiredFields(index, value);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.RequiredFieldProto required_fields = 7;</code>
     */
    public Builder setRequiredFields(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.RequiredFieldProto.Builder builderForValue) {
      copyOnWrite();
      instance.setRequiredFields(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.RequiredFieldProto required_fields = 7;</code>
     */
    public Builder addRequiredFields(org.chromium.chrome.browser.autofill_assistant.proto.RequiredFieldProto value) {
      copyOnWrite();
      instance.addRequiredFields(value);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.RequiredFieldProto required_fields = 7;</code>
     */
    public Builder addRequiredFields(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.RequiredFieldProto value) {
      copyOnWrite();
      instance.addRequiredFields(index, value);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.RequiredFieldProto required_fields = 7;</code>
     */
    public Builder addRequiredFields(
        org.chromium.chrome.browser.autofill_assistant.proto.RequiredFieldProto.Builder builderForValue) {
      copyOnWrite();
      instance.addRequiredFields(builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.RequiredFieldProto required_fields = 7;</code>
     */
    public Builder addRequiredFields(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.RequiredFieldProto.Builder builderForValue) {
      copyOnWrite();
      instance.addRequiredFields(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.RequiredFieldProto required_fields = 7;</code>
     */
    public Builder addAllRequiredFields(
        java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.RequiredFieldProto> values) {
      copyOnWrite();
      instance.addAllRequiredFields(values);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.RequiredFieldProto required_fields = 7;</code>
     */
    public Builder clearRequiredFields() {
      copyOnWrite();
      instance.clearRequiredFields();
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.RequiredFieldProto required_fields = 7;</code>
     */
    public Builder removeRequiredFields(int index) {
      copyOnWrite();
      instance.removeRequiredFields(index);
      return this;
    }

    /**
     * <pre>
     * If true, this skips the Autofill step jumping straight to the
     * |required_fields|.
     * </pre>
     *
     * <code>optional bool skip_autofill = 8;</code>
     * @return Whether the skipAutofill field is set.
     */
    @java.lang.Override
    public boolean hasSkipAutofill() {
      return instance.hasSkipAutofill();
    }
    /**
     * <pre>
     * If true, this skips the Autofill step jumping straight to the
     * |required_fields|.
     * </pre>
     *
     * <code>optional bool skip_autofill = 8;</code>
     * @return The skipAutofill.
     */
    @java.lang.Override
    public boolean getSkipAutofill() {
      return instance.getSkipAutofill();
    }
    /**
     * <pre>
     * If true, this skips the Autofill step jumping straight to the
     * |required_fields|.
     * </pre>
     *
     * <code>optional bool skip_autofill = 8;</code>
     * @param value The skipAutofill to set.
     * @return This builder for chaining.
     */
    public Builder setSkipAutofill(boolean value) {
      copyOnWrite();
      instance.setSkipAutofill(value);
      return this;
    }
    /**
     * <pre>
     * If true, this skips the Autofill step jumping straight to the
     * |required_fields|.
     * </pre>
     *
     * <code>optional bool skip_autofill = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearSkipAutofill() {
      copyOnWrite();
      instance.clearSkipAutofill();
      return this;
    }

    /**
     * <pre>
     * If true, this skips resolving the CreditCard. The card can be used to fill
     * fields like name or expiration date. Be aware that you cannot fill CVC or
     * credit card number without resolving the card.
     * This skips the autofill step, regardless of |skip_autofill|.
     * </pre>
     *
     * <code>optional bool skip_resolve = 9;</code>
     * @return Whether the skipResolve field is set.
     */
    @java.lang.Override
    public boolean hasSkipResolve() {
      return instance.hasSkipResolve();
    }
    /**
     * <pre>
     * If true, this skips resolving the CreditCard. The card can be used to fill
     * fields like name or expiration date. Be aware that you cannot fill CVC or
     * credit card number without resolving the card.
     * This skips the autofill step, regardless of |skip_autofill|.
     * </pre>
     *
     * <code>optional bool skip_resolve = 9;</code>
     * @return The skipResolve.
     */
    @java.lang.Override
    public boolean getSkipResolve() {
      return instance.getSkipResolve();
    }
    /**
     * <pre>
     * If true, this skips resolving the CreditCard. The card can be used to fill
     * fields like name or expiration date. Be aware that you cannot fill CVC or
     * credit card number without resolving the card.
     * This skips the autofill step, regardless of |skip_autofill|.
     * </pre>
     *
     * <code>optional bool skip_resolve = 9;</code>
     * @param value The skipResolve to set.
     * @return This builder for chaining.
     */
    public Builder setSkipResolve(boolean value) {
      copyOnWrite();
      instance.setSkipResolve(value);
      return this;
    }
    /**
     * <pre>
     * If true, this skips resolving the CreditCard. The card can be used to fill
     * fields like name or expiration date. Be aware that you cannot fill CVC or
     * credit card number without resolving the card.
     * This skips the autofill step, regardless of |skip_autofill|.
     * </pre>
     *
     * <code>optional bool skip_resolve = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearSkipResolve() {
      copyOnWrite();
      instance.clearSkipResolve();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.UseCreditCardProto)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "formFieldElement_",
            "modelIdentifier_",
            "requiredFields_",
            org.chromium.chrome.browser.autofill_assistant.proto.RequiredFieldProto.class,
            "skipAutofill_",
            "skipResolve_",
          };
          java.lang.String info =
              "\u0001\u0005\u0000\u0001\u0003\t\u0005\u0000\u0001\u0000\u0003\u1009\u0001\u0004" +
              "\u1008\u0000\u0007\u001b\b\u1007\u0002\t\u1007\u0003";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.UseCreditCardProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto DEFAULT_INSTANCE;
  static {
    UseCreditCardProto defaultInstance = new UseCreditCardProto();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      UseCreditCardProto.class, defaultInstance);
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<UseCreditCardProto> PARSER;

  public static com.google.protobuf.Parser<UseCreditCardProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

