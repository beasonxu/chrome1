// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/autofill_assistant/browser/dom_action.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * <pre>
 * Wait until an element has become stable, i.e. didn't move for the last few
 * rounds.
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.WaitForElementToBecomeStableProto}
 */
public  final class WaitForElementToBecomeStableProto extends
    com.google.protobuf.GeneratedMessageLite<
        WaitForElementToBecomeStableProto, WaitForElementToBecomeStableProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.WaitForElementToBecomeStableProto)
    WaitForElementToBecomeStableProtoOrBuilder {
  private WaitForElementToBecomeStableProto() {
    stableCheckMaxRounds_ = 50;
    stableCheckIntervalMs_ = 200;
  }
  private int bitField0_;
  public static final int CLIENT_ID_FIELD_NUMBER = 1;
  private org.chromium.chrome.browser.autofill_assistant.proto.ClientIdProto clientId_;
  /**
   * <code>optional .autofill_assistant.ClientIdProto client_id = 1;</code>
   */
  @java.lang.Override
  public boolean hasClientId() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>optional .autofill_assistant.ClientIdProto client_id = 1;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.ClientIdProto getClientId() {
    return clientId_ == null ? org.chromium.chrome.browser.autofill_assistant.proto.ClientIdProto.getDefaultInstance() : clientId_;
  }
  /**
   * <code>optional .autofill_assistant.ClientIdProto client_id = 1;</code>
   */
  private void setClientId(org.chromium.chrome.browser.autofill_assistant.proto.ClientIdProto value) {
    value.getClass();
  clientId_ = value;
    bitField0_ |= 0x00000001;
    }
  /**
   * <code>optional .autofill_assistant.ClientIdProto client_id = 1;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeClientId(org.chromium.chrome.browser.autofill_assistant.proto.ClientIdProto value) {
    value.getClass();
  if (clientId_ != null &&
        clientId_ != org.chromium.chrome.browser.autofill_assistant.proto.ClientIdProto.getDefaultInstance()) {
      clientId_ =
        org.chromium.chrome.browser.autofill_assistant.proto.ClientIdProto.newBuilder(clientId_).mergeFrom(value).buildPartial();
    } else {
      clientId_ = value;
    }
    bitField0_ |= 0x00000001;
  }
  /**
   * <code>optional .autofill_assistant.ClientIdProto client_id = 1;</code>
   */
  private void clearClientId() {  clientId_ = null;
    bitField0_ = (bitField0_ & ~0x00000001);
  }

  public static final int STABLE_CHECK_MAX_ROUNDS_FIELD_NUMBER = 2;
  private int stableCheckMaxRounds_;
  /**
   * <code>optional int32 stable_check_max_rounds = 2 [default = 50];</code>
   * @return Whether the stableCheckMaxRounds field is set.
   */
  @java.lang.Override
  public boolean hasStableCheckMaxRounds() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>optional int32 stable_check_max_rounds = 2 [default = 50];</code>
   * @return The stableCheckMaxRounds.
   */
  @java.lang.Override
  public int getStableCheckMaxRounds() {
    return stableCheckMaxRounds_;
  }
  /**
   * <code>optional int32 stable_check_max_rounds = 2 [default = 50];</code>
   * @param value The stableCheckMaxRounds to set.
   */
  private void setStableCheckMaxRounds(int value) {
    bitField0_ |= 0x00000002;
    stableCheckMaxRounds_ = value;
  }
  /**
   * <code>optional int32 stable_check_max_rounds = 2 [default = 50];</code>
   */
  private void clearStableCheckMaxRounds() {
    bitField0_ = (bitField0_ & ~0x00000002);
    stableCheckMaxRounds_ = 50;
  }

  public static final int STABLE_CHECK_INTERVAL_MS_FIELD_NUMBER = 3;
  private int stableCheckIntervalMs_;
  /**
   * <code>optional int32 stable_check_interval_ms = 3 [default = 200];</code>
   * @return Whether the stableCheckIntervalMs field is set.
   */
  @java.lang.Override
  public boolean hasStableCheckIntervalMs() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <code>optional int32 stable_check_interval_ms = 3 [default = 200];</code>
   * @return The stableCheckIntervalMs.
   */
  @java.lang.Override
  public int getStableCheckIntervalMs() {
    return stableCheckIntervalMs_;
  }
  /**
   * <code>optional int32 stable_check_interval_ms = 3 [default = 200];</code>
   * @param value The stableCheckIntervalMs to set.
   */
  private void setStableCheckIntervalMs(int value) {
    bitField0_ |= 0x00000004;
    stableCheckIntervalMs_ = value;
  }
  /**
   * <code>optional int32 stable_check_interval_ms = 3 [default = 200];</code>
   */
  private void clearStableCheckIntervalMs() {
    bitField0_ = (bitField0_ & ~0x00000004);
    stableCheckIntervalMs_ = 200;
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.WaitForElementToBecomeStableProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.WaitForElementToBecomeStableProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.WaitForElementToBecomeStableProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.WaitForElementToBecomeStableProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.WaitForElementToBecomeStableProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.WaitForElementToBecomeStableProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.WaitForElementToBecomeStableProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.WaitForElementToBecomeStableProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.WaitForElementToBecomeStableProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.WaitForElementToBecomeStableProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.WaitForElementToBecomeStableProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.WaitForElementToBecomeStableProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.WaitForElementToBecomeStableProto prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Wait until an element has become stable, i.e. didn't move for the last few
   * rounds.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.WaitForElementToBecomeStableProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.WaitForElementToBecomeStableProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.WaitForElementToBecomeStableProto)
      org.chromium.chrome.browser.autofill_assistant.proto.WaitForElementToBecomeStableProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.WaitForElementToBecomeStableProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>optional .autofill_assistant.ClientIdProto client_id = 1;</code>
     */
    @java.lang.Override
    public boolean hasClientId() {
      return instance.hasClientId();
    }
    /**
     * <code>optional .autofill_assistant.ClientIdProto client_id = 1;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.ClientIdProto getClientId() {
      return instance.getClientId();
    }
    /**
     * <code>optional .autofill_assistant.ClientIdProto client_id = 1;</code>
     */
    public Builder setClientId(org.chromium.chrome.browser.autofill_assistant.proto.ClientIdProto value) {
      copyOnWrite();
      instance.setClientId(value);
      return this;
      }
    /**
     * <code>optional .autofill_assistant.ClientIdProto client_id = 1;</code>
     */
    public Builder setClientId(
        org.chromium.chrome.browser.autofill_assistant.proto.ClientIdProto.Builder builderForValue) {
      copyOnWrite();
      instance.setClientId(builderForValue.build());
      return this;
    }
    /**
     * <code>optional .autofill_assistant.ClientIdProto client_id = 1;</code>
     */
    public Builder mergeClientId(org.chromium.chrome.browser.autofill_assistant.proto.ClientIdProto value) {
      copyOnWrite();
      instance.mergeClientId(value);
      return this;
    }
    /**
     * <code>optional .autofill_assistant.ClientIdProto client_id = 1;</code>
     */
    public Builder clearClientId() {  copyOnWrite();
      instance.clearClientId();
      return this;
    }

    /**
     * <code>optional int32 stable_check_max_rounds = 2 [default = 50];</code>
     * @return Whether the stableCheckMaxRounds field is set.
     */
    @java.lang.Override
    public boolean hasStableCheckMaxRounds() {
      return instance.hasStableCheckMaxRounds();
    }
    /**
     * <code>optional int32 stable_check_max_rounds = 2 [default = 50];</code>
     * @return The stableCheckMaxRounds.
     */
    @java.lang.Override
    public int getStableCheckMaxRounds() {
      return instance.getStableCheckMaxRounds();
    }
    /**
     * <code>optional int32 stable_check_max_rounds = 2 [default = 50];</code>
     * @param value The stableCheckMaxRounds to set.
     * @return This builder for chaining.
     */
    public Builder setStableCheckMaxRounds(int value) {
      copyOnWrite();
      instance.setStableCheckMaxRounds(value);
      return this;
    }
    /**
     * <code>optional int32 stable_check_max_rounds = 2 [default = 50];</code>
     * @return This builder for chaining.
     */
    public Builder clearStableCheckMaxRounds() {
      copyOnWrite();
      instance.clearStableCheckMaxRounds();
      return this;
    }

    /**
     * <code>optional int32 stable_check_interval_ms = 3 [default = 200];</code>
     * @return Whether the stableCheckIntervalMs field is set.
     */
    @java.lang.Override
    public boolean hasStableCheckIntervalMs() {
      return instance.hasStableCheckIntervalMs();
    }
    /**
     * <code>optional int32 stable_check_interval_ms = 3 [default = 200];</code>
     * @return The stableCheckIntervalMs.
     */
    @java.lang.Override
    public int getStableCheckIntervalMs() {
      return instance.getStableCheckIntervalMs();
    }
    /**
     * <code>optional int32 stable_check_interval_ms = 3 [default = 200];</code>
     * @param value The stableCheckIntervalMs to set.
     * @return This builder for chaining.
     */
    public Builder setStableCheckIntervalMs(int value) {
      copyOnWrite();
      instance.setStableCheckIntervalMs(value);
      return this;
    }
    /**
     * <code>optional int32 stable_check_interval_ms = 3 [default = 200];</code>
     * @return This builder for chaining.
     */
    public Builder clearStableCheckIntervalMs() {
      copyOnWrite();
      instance.clearStableCheckIntervalMs();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.WaitForElementToBecomeStableProto)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.WaitForElementToBecomeStableProto();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "clientId_",
            "stableCheckMaxRounds_",
            "stableCheckIntervalMs_",
          };
          java.lang.String info =
              "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u1009\u0000\u0002" +
              "\u1004\u0001\u0003\u1004\u0002";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.WaitForElementToBecomeStableProto> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.chrome.browser.autofill_assistant.proto.WaitForElementToBecomeStableProto.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.WaitForElementToBecomeStableProto>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.WaitForElementToBecomeStableProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.WaitForElementToBecomeStableProto DEFAULT_INSTANCE;
  static {
    WaitForElementToBecomeStableProto defaultInstance = new WaitForElementToBecomeStableProto();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      WaitForElementToBecomeStableProto.class, defaultInstance);
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.WaitForElementToBecomeStableProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<WaitForElementToBecomeStableProto> PARSER;

  public static com.google.protobuf.Parser<WaitForElementToBecomeStableProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

