// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/autofill_assistant/browser/service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * <pre>
 * Extra debugging information included in case of unexpected errors.
 * Presence of this element either points to a problem in the executed
 * javascript (in which case, the relevant js_exception_xxx fields should be
 * set) or a bug in the client code.
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.UnexpectedErrorInfoProto}
 */
public  final class UnexpectedErrorInfoProto extends
    com.google.protobuf.GeneratedMessageLite<
        UnexpectedErrorInfoProto, UnexpectedErrorInfoProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.UnexpectedErrorInfoProto)
    UnexpectedErrorInfoProtoOrBuilder {
  private UnexpectedErrorInfoProto() {
    sourceFile_ = "";
    jsExceptionClassname_ = "";
    jsExceptionLocations_ = emptyIntList();
    jsExceptionLineNumbers_ = emptyIntList();
    jsExceptionColumnNumbers_ = emptyIntList();
    devtoolsErrorMessage_ = "";
  }
  /**
   * Protobuf enum {@code autofill_assistant.UnexpectedErrorInfoProto.JsExceptionLocation}
   */
  public enum JsExceptionLocation
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     * <pre>
     * Corresponds to ActionsResponseProto::js_flow_library
     * </pre>
     *
     * <code>JS_FLOW_LIBRARY = 1;</code>
     */
    JS_FLOW_LIBRARY(1),
    /**
     * <pre>
     * Corresponds to JsFlowProto::js_flow
     * </pre>
     *
     * <code>JS_FLOW = 2;</code>
     */
    JS_FLOW(2),
    ;

    /**
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <pre>
     * Corresponds to ActionsResponseProto::js_flow_library
     * </pre>
     *
     * <code>JS_FLOW_LIBRARY = 1;</code>
     */
    public static final int JS_FLOW_LIBRARY_VALUE = 1;
    /**
     * <pre>
     * Corresponds to JsFlowProto::js_flow
     * </pre>
     *
     * <code>JS_FLOW = 2;</code>
     */
    public static final int JS_FLOW_VALUE = 2;


    @java.lang.Override
    public final int getNumber() {
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static JsExceptionLocation valueOf(int value) {
      return forNumber(value);
    }

    public static JsExceptionLocation forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return JS_FLOW_LIBRARY;
        case 2: return JS_FLOW;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<JsExceptionLocation>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        JsExceptionLocation> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<JsExceptionLocation>() {
            @java.lang.Override
            public JsExceptionLocation findValueByNumber(int number) {
              return JsExceptionLocation.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return JsExceptionLocationVerifier.INSTANCE;
    }

    private static final class JsExceptionLocationVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new JsExceptionLocationVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return JsExceptionLocation.forNumber(number) != null;
            }
          };

    private final int value;

    private JsExceptionLocation(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:autofill_assistant.UnexpectedErrorInfoProto.JsExceptionLocation)
  }

  private int bitField0_;
  public static final int SOURCE_FILE_FIELD_NUMBER = 1;
  private java.lang.String sourceFile_;
  /**
   * <pre>
   * Source file, within the client code, where an unexpected error was detected
   * and reported.
   * Only filled for unexpected errors OTHER_ACTION_STATUS and
   * UNEXPECTED_JS_ERROR.
   * This and source_line are only meaningful for the exact version reported in
   * the client context.
   * </pre>
   *
   * <code>optional string source_file = 1;</code>
   * @return Whether the sourceFile field is set.
   */
  @java.lang.Override
  public boolean hasSourceFile() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Source file, within the client code, where an unexpected error was detected
   * and reported.
   * Only filled for unexpected errors OTHER_ACTION_STATUS and
   * UNEXPECTED_JS_ERROR.
   * This and source_line are only meaningful for the exact version reported in
   * the client context.
   * </pre>
   *
   * <code>optional string source_file = 1;</code>
   * @return The sourceFile.
   */
  @java.lang.Override
  public java.lang.String getSourceFile() {
    return sourceFile_;
  }
  /**
   * <pre>
   * Source file, within the client code, where an unexpected error was detected
   * and reported.
   * Only filled for unexpected errors OTHER_ACTION_STATUS and
   * UNEXPECTED_JS_ERROR.
   * This and source_line are only meaningful for the exact version reported in
   * the client context.
   * </pre>
   *
   * <code>optional string source_file = 1;</code>
   * @return The bytes for sourceFile.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSourceFileBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(sourceFile_);
  }
  /**
   * <pre>
   * Source file, within the client code, where an unexpected error was detected
   * and reported.
   * Only filled for unexpected errors OTHER_ACTION_STATUS and
   * UNEXPECTED_JS_ERROR.
   * This and source_line are only meaningful for the exact version reported in
   * the client context.
   * </pre>
   *
   * <code>optional string source_file = 1;</code>
   * @param value The sourceFile to set.
   */
  private void setSourceFile(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000001;
    sourceFile_ = value;
  }
  /**
   * <pre>
   * Source file, within the client code, where an unexpected error was detected
   * and reported.
   * Only filled for unexpected errors OTHER_ACTION_STATUS and
   * UNEXPECTED_JS_ERROR.
   * This and source_line are only meaningful for the exact version reported in
   * the client context.
   * </pre>
   *
   * <code>optional string source_file = 1;</code>
   */
  private void clearSourceFile() {
    bitField0_ = (bitField0_ & ~0x00000001);
    sourceFile_ = getDefaultInstance().getSourceFile();
  }
  /**
   * <pre>
   * Source file, within the client code, where an unexpected error was detected
   * and reported.
   * Only filled for unexpected errors OTHER_ACTION_STATUS and
   * UNEXPECTED_JS_ERROR.
   * This and source_line are only meaningful for the exact version reported in
   * the client context.
   * </pre>
   *
   * <code>optional string source_file = 1;</code>
   * @param value The bytes for sourceFile to set.
   */
  private void setSourceFileBytes(
      com.google.protobuf.ByteString value) {
    sourceFile_ = value.toStringUtf8();
    bitField0_ |= 0x00000001;
  }

  public static final int SOURCE_LINE_NUMBER_FIELD_NUMBER = 2;
  private int sourceLineNumber_;
  /**
   * <pre>
   * Line number, within the client's source file, where the error was detected.
   * </pre>
   *
   * <code>optional int32 source_line_number = 2;</code>
   * @return Whether the sourceLineNumber field is set.
   */
  @java.lang.Override
  public boolean hasSourceLineNumber() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Line number, within the client's source file, where the error was detected.
   * </pre>
   *
   * <code>optional int32 source_line_number = 2;</code>
   * @return The sourceLineNumber.
   */
  @java.lang.Override
  public int getSourceLineNumber() {
    return sourceLineNumber_;
  }
  /**
   * <pre>
   * Line number, within the client's source file, where the error was detected.
   * </pre>
   *
   * <code>optional int32 source_line_number = 2;</code>
   * @param value The sourceLineNumber to set.
   */
  private void setSourceLineNumber(int value) {
    bitField0_ |= 0x00000002;
    sourceLineNumber_ = value;
  }
  /**
   * <pre>
   * Line number, within the client's source file, where the error was detected.
   * </pre>
   *
   * <code>optional int32 source_line_number = 2;</code>
   */
  private void clearSourceLineNumber() {
    bitField0_ = (bitField0_ & ~0x00000002);
    sourceLineNumber_ = 0;
  }

  public static final int JS_EXCEPTION_CLASSNAME_FIELD_NUMBER = 3;
  private java.lang.String jsExceptionClassname_;
  /**
   * <pre>
   * JavaScript exception class name, if reporting a JavaScript error.
   * </pre>
   *
   * <code>optional string js_exception_classname = 3;</code>
   * @return Whether the jsExceptionClassname field is set.
   */
  @java.lang.Override
  public boolean hasJsExceptionClassname() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * JavaScript exception class name, if reporting a JavaScript error.
   * </pre>
   *
   * <code>optional string js_exception_classname = 3;</code>
   * @return The jsExceptionClassname.
   */
  @java.lang.Override
  public java.lang.String getJsExceptionClassname() {
    return jsExceptionClassname_;
  }
  /**
   * <pre>
   * JavaScript exception class name, if reporting a JavaScript error.
   * </pre>
   *
   * <code>optional string js_exception_classname = 3;</code>
   * @return The bytes for jsExceptionClassname.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getJsExceptionClassnameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(jsExceptionClassname_);
  }
  /**
   * <pre>
   * JavaScript exception class name, if reporting a JavaScript error.
   * </pre>
   *
   * <code>optional string js_exception_classname = 3;</code>
   * @param value The jsExceptionClassname to set.
   */
  private void setJsExceptionClassname(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000004;
    jsExceptionClassname_ = value;
  }
  /**
   * <pre>
   * JavaScript exception class name, if reporting a JavaScript error.
   * </pre>
   *
   * <code>optional string js_exception_classname = 3;</code>
   */
  private void clearJsExceptionClassname() {
    bitField0_ = (bitField0_ & ~0x00000004);
    jsExceptionClassname_ = getDefaultInstance().getJsExceptionClassname();
  }
  /**
   * <pre>
   * JavaScript exception class name, if reporting a JavaScript error.
   * </pre>
   *
   * <code>optional string js_exception_classname = 3;</code>
   * @param value The bytes for jsExceptionClassname to set.
   */
  private void setJsExceptionClassnameBytes(
      com.google.protobuf.ByteString value) {
    jsExceptionClassname_ = value.toStringUtf8();
    bitField0_ |= 0x00000004;
  }

  public static final int JS_EXCEPTION_LOCATIONS_FIELD_NUMBER = 8;
  private com.google.protobuf.Internal.IntList jsExceptionLocations_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto.JsExceptionLocation> jsExceptionLocations_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto.JsExceptionLocation>() {
            @java.lang.Override
            public org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto.JsExceptionLocation convert(java.lang.Integer from) {
              org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto.JsExceptionLocation result = org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto.JsExceptionLocation.forNumber(from);
              return result == null ? org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto.JsExceptionLocation.UNKNOWN : result;
            }
          };
  /**
   * <pre>
   * The location that caused the JavaScript exception. Guaranteed to have the
   * same number of entries as js_exception_line_numbers and
   * js_exception_column_numbers.
   * </pre>
   *
   * <code>repeated .autofill_assistant.UnexpectedErrorInfoProto.JsExceptionLocation js_exception_locations = 8 [packed = true];</code>
   * @return A list containing the jsExceptionLocations.
   */
  @java.lang.Override
  public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto.JsExceptionLocation> getJsExceptionLocationsList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto.JsExceptionLocation>(jsExceptionLocations_, jsExceptionLocations_converter_);
  }
  /**
   * <pre>
   * The location that caused the JavaScript exception. Guaranteed to have the
   * same number of entries as js_exception_line_numbers and
   * js_exception_column_numbers.
   * </pre>
   *
   * <code>repeated .autofill_assistant.UnexpectedErrorInfoProto.JsExceptionLocation js_exception_locations = 8 [packed = true];</code>
   * @return The count of jsExceptionLocations.
   */
  @java.lang.Override
  public int getJsExceptionLocationsCount() {
    return jsExceptionLocations_.size();
  }
  /**
   * <pre>
   * The location that caused the JavaScript exception. Guaranteed to have the
   * same number of entries as js_exception_line_numbers and
   * js_exception_column_numbers.
   * </pre>
   *
   * <code>repeated .autofill_assistant.UnexpectedErrorInfoProto.JsExceptionLocation js_exception_locations = 8 [packed = true];</code>
   * @param index The index of the element to return.
   * @return The jsExceptionLocations at the given index.
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto.JsExceptionLocation getJsExceptionLocations(int index) {
    return jsExceptionLocations_converter_.convert(jsExceptionLocations_.getInt(index));
  }
  private int jsExceptionLocationsMemoizedSerializedSize;
  private void ensureJsExceptionLocationsIsMutable() {
    com.google.protobuf.Internal.IntList tmp = jsExceptionLocations_;
    if (!tmp.isModifiable()) {
      jsExceptionLocations_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
    }
  }
  /**
   * <pre>
   * The location that caused the JavaScript exception. Guaranteed to have the
   * same number of entries as js_exception_line_numbers and
   * js_exception_column_numbers.
   * </pre>
   *
   * <code>repeated .autofill_assistant.UnexpectedErrorInfoProto.JsExceptionLocation js_exception_locations = 8 [packed = true];</code>
   * @param index The index to set the value at.
   * @param value The jsExceptionLocations to set.
   */
  private void setJsExceptionLocations(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto.JsExceptionLocation value) {
    value.getClass();
  ensureJsExceptionLocationsIsMutable();
    jsExceptionLocations_.setInt(index, value.getNumber());
  }
  /**
   * <pre>
   * The location that caused the JavaScript exception. Guaranteed to have the
   * same number of entries as js_exception_line_numbers and
   * js_exception_column_numbers.
   * </pre>
   *
   * <code>repeated .autofill_assistant.UnexpectedErrorInfoProto.JsExceptionLocation js_exception_locations = 8 [packed = true];</code>
   * @param value The jsExceptionLocations to add.
   */
  private void addJsExceptionLocations(org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto.JsExceptionLocation value) {
    value.getClass();
  ensureJsExceptionLocationsIsMutable();
    jsExceptionLocations_.addInt(value.getNumber());
  }
  /**
   * <pre>
   * The location that caused the JavaScript exception. Guaranteed to have the
   * same number of entries as js_exception_line_numbers and
   * js_exception_column_numbers.
   * </pre>
   *
   * <code>repeated .autofill_assistant.UnexpectedErrorInfoProto.JsExceptionLocation js_exception_locations = 8 [packed = true];</code>
   * @param values The jsExceptionLocations to add.
   */
  private void addAllJsExceptionLocations(
      java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto.JsExceptionLocation> values) {
    ensureJsExceptionLocationsIsMutable();
    for (org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto.JsExceptionLocation value : values) {
      jsExceptionLocations_.addInt(value.getNumber());
    }
  }
  /**
   * <pre>
   * The location that caused the JavaScript exception. Guaranteed to have the
   * same number of entries as js_exception_line_numbers and
   * js_exception_column_numbers.
   * </pre>
   *
   * <code>repeated .autofill_assistant.UnexpectedErrorInfoProto.JsExceptionLocation js_exception_locations = 8 [packed = true];</code>
   */
  private void clearJsExceptionLocations() {
    jsExceptionLocations_ = emptyIntList();
  }

  public static final int JS_EXCEPTION_LINE_NUMBERS_FIELD_NUMBER = 4;
  private com.google.protobuf.Internal.IntList jsExceptionLineNumbers_;
  /**
   * <pre>
   * JavaScript exception line numbers, within the js snippet that was sent to
   * devtools runtime by the client, if reporting a JavaScript error. Together
   * with |js_exception_column_numbers| this forms a stack trace.
   * </pre>
   *
   * <code>repeated int32 js_exception_line_numbers = 4;</code>
   * @return A list containing the jsExceptionLineNumbers.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getJsExceptionLineNumbersList() {
    return jsExceptionLineNumbers_;
  }
  /**
   * <pre>
   * JavaScript exception line numbers, within the js snippet that was sent to
   * devtools runtime by the client, if reporting a JavaScript error. Together
   * with |js_exception_column_numbers| this forms a stack trace.
   * </pre>
   *
   * <code>repeated int32 js_exception_line_numbers = 4;</code>
   * @return The count of jsExceptionLineNumbers.
   */
  @java.lang.Override
  public int getJsExceptionLineNumbersCount() {
    return jsExceptionLineNumbers_.size();
  }
  /**
   * <pre>
   * JavaScript exception line numbers, within the js snippet that was sent to
   * devtools runtime by the client, if reporting a JavaScript error. Together
   * with |js_exception_column_numbers| this forms a stack trace.
   * </pre>
   *
   * <code>repeated int32 js_exception_line_numbers = 4;</code>
   * @param index The index of the element to return.
   * @return The jsExceptionLineNumbers at the given index.
   */
  @java.lang.Override
  public int getJsExceptionLineNumbers(int index) {
    return jsExceptionLineNumbers_.getInt(index);
  }
  private void ensureJsExceptionLineNumbersIsMutable() {
    com.google.protobuf.Internal.IntList tmp = jsExceptionLineNumbers_;
    if (!tmp.isModifiable()) {
      jsExceptionLineNumbers_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }
  /**
   * <pre>
   * JavaScript exception line numbers, within the js snippet that was sent to
   * devtools runtime by the client, if reporting a JavaScript error. Together
   * with |js_exception_column_numbers| this forms a stack trace.
   * </pre>
   *
   * <code>repeated int32 js_exception_line_numbers = 4;</code>
   * @param index The index to set the value at.
   * @param value The jsExceptionLineNumbers to set.
   */
  private void setJsExceptionLineNumbers(
      int index, int value) {
    ensureJsExceptionLineNumbersIsMutable();
    jsExceptionLineNumbers_.setInt(index, value);
  }
  /**
   * <pre>
   * JavaScript exception line numbers, within the js snippet that was sent to
   * devtools runtime by the client, if reporting a JavaScript error. Together
   * with |js_exception_column_numbers| this forms a stack trace.
   * </pre>
   *
   * <code>repeated int32 js_exception_line_numbers = 4;</code>
   * @param value The jsExceptionLineNumbers to add.
   */
  private void addJsExceptionLineNumbers(int value) {
    ensureJsExceptionLineNumbersIsMutable();
    jsExceptionLineNumbers_.addInt(value);
  }
  /**
   * <pre>
   * JavaScript exception line numbers, within the js snippet that was sent to
   * devtools runtime by the client, if reporting a JavaScript error. Together
   * with |js_exception_column_numbers| this forms a stack trace.
   * </pre>
   *
   * <code>repeated int32 js_exception_line_numbers = 4;</code>
   * @param values The jsExceptionLineNumbers to add.
   */
  private void addAllJsExceptionLineNumbers(
      java.lang.Iterable<? extends java.lang.Integer> values) {
    ensureJsExceptionLineNumbersIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, jsExceptionLineNumbers_);
  }
  /**
   * <pre>
   * JavaScript exception line numbers, within the js snippet that was sent to
   * devtools runtime by the client, if reporting a JavaScript error. Together
   * with |js_exception_column_numbers| this forms a stack trace.
   * </pre>
   *
   * <code>repeated int32 js_exception_line_numbers = 4;</code>
   */
  private void clearJsExceptionLineNumbers() {
    jsExceptionLineNumbers_ = emptyIntList();
  }

  public static final int JS_EXCEPTION_COLUMN_NUMBERS_FIELD_NUMBER = 5;
  private com.google.protobuf.Internal.IntList jsExceptionColumnNumbers_;
  /**
   * <pre>
   * JavaScript exception column number, within the js snippet that was sent to
   * devtools runtime by the client, if reporting a JavaScript error. Together
   * with |js_exception_line_numbers| this forms a stack trace.
   * </pre>
   *
   * <code>repeated int32 js_exception_column_numbers = 5;</code>
   * @return A list containing the jsExceptionColumnNumbers.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getJsExceptionColumnNumbersList() {
    return jsExceptionColumnNumbers_;
  }
  /**
   * <pre>
   * JavaScript exception column number, within the js snippet that was sent to
   * devtools runtime by the client, if reporting a JavaScript error. Together
   * with |js_exception_line_numbers| this forms a stack trace.
   * </pre>
   *
   * <code>repeated int32 js_exception_column_numbers = 5;</code>
   * @return The count of jsExceptionColumnNumbers.
   */
  @java.lang.Override
  public int getJsExceptionColumnNumbersCount() {
    return jsExceptionColumnNumbers_.size();
  }
  /**
   * <pre>
   * JavaScript exception column number, within the js snippet that was sent to
   * devtools runtime by the client, if reporting a JavaScript error. Together
   * with |js_exception_line_numbers| this forms a stack trace.
   * </pre>
   *
   * <code>repeated int32 js_exception_column_numbers = 5;</code>
   * @param index The index of the element to return.
   * @return The jsExceptionColumnNumbers at the given index.
   */
  @java.lang.Override
  public int getJsExceptionColumnNumbers(int index) {
    return jsExceptionColumnNumbers_.getInt(index);
  }
  private void ensureJsExceptionColumnNumbersIsMutable() {
    com.google.protobuf.Internal.IntList tmp = jsExceptionColumnNumbers_;
    if (!tmp.isModifiable()) {
      jsExceptionColumnNumbers_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }
  /**
   * <pre>
   * JavaScript exception column number, within the js snippet that was sent to
   * devtools runtime by the client, if reporting a JavaScript error. Together
   * with |js_exception_line_numbers| this forms a stack trace.
   * </pre>
   *
   * <code>repeated int32 js_exception_column_numbers = 5;</code>
   * @param index The index to set the value at.
   * @param value The jsExceptionColumnNumbers to set.
   */
  private void setJsExceptionColumnNumbers(
      int index, int value) {
    ensureJsExceptionColumnNumbersIsMutable();
    jsExceptionColumnNumbers_.setInt(index, value);
  }
  /**
   * <pre>
   * JavaScript exception column number, within the js snippet that was sent to
   * devtools runtime by the client, if reporting a JavaScript error. Together
   * with |js_exception_line_numbers| this forms a stack trace.
   * </pre>
   *
   * <code>repeated int32 js_exception_column_numbers = 5;</code>
   * @param value The jsExceptionColumnNumbers to add.
   */
  private void addJsExceptionColumnNumbers(int value) {
    ensureJsExceptionColumnNumbersIsMutable();
    jsExceptionColumnNumbers_.addInt(value);
  }
  /**
   * <pre>
   * JavaScript exception column number, within the js snippet that was sent to
   * devtools runtime by the client, if reporting a JavaScript error. Together
   * with |js_exception_line_numbers| this forms a stack trace.
   * </pre>
   *
   * <code>repeated int32 js_exception_column_numbers = 5;</code>
   * @param values The jsExceptionColumnNumbers to add.
   */
  private void addAllJsExceptionColumnNumbers(
      java.lang.Iterable<? extends java.lang.Integer> values) {
    ensureJsExceptionColumnNumbersIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, jsExceptionColumnNumbers_);
  }
  /**
   * <pre>
   * JavaScript exception column number, within the js snippet that was sent to
   * devtools runtime by the client, if reporting a JavaScript error. Together
   * with |js_exception_line_numbers| this forms a stack trace.
   * </pre>
   *
   * <code>repeated int32 js_exception_column_numbers = 5;</code>
   */
  private void clearJsExceptionColumnNumbers() {
    jsExceptionColumnNumbers_ = emptyIntList();
  }

  public static final int DEVTOOLS_ERROR_CODE_FIELD_NUMBER = 6;
  private int devtoolsErrorCode_;
  /**
   * <pre>
   * Error code returned by devtools, if any. 0 is considered a success.
   * </pre>
   *
   * <code>optional int32 devtools_error_code = 6;</code>
   * @return Whether the devtoolsErrorCode field is set.
   */
  @java.lang.Override
  public boolean hasDevtoolsErrorCode() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * Error code returned by devtools, if any. 0 is considered a success.
   * </pre>
   *
   * <code>optional int32 devtools_error_code = 6;</code>
   * @return The devtoolsErrorCode.
   */
  @java.lang.Override
  public int getDevtoolsErrorCode() {
    return devtoolsErrorCode_;
  }
  /**
   * <pre>
   * Error code returned by devtools, if any. 0 is considered a success.
   * </pre>
   *
   * <code>optional int32 devtools_error_code = 6;</code>
   * @param value The devtoolsErrorCode to set.
   */
  private void setDevtoolsErrorCode(int value) {
    bitField0_ |= 0x00000008;
    devtoolsErrorCode_ = value;
  }
  /**
   * <pre>
   * Error code returned by devtools, if any. 0 is considered a success.
   * </pre>
   *
   * <code>optional int32 devtools_error_code = 6;</code>
   */
  private void clearDevtoolsErrorCode() {
    bitField0_ = (bitField0_ & ~0x00000008);
    devtoolsErrorCode_ = 0;
  }

  public static final int DEVTOOLS_ERROR_MESSAGE_FIELD_NUMBER = 7;
  private java.lang.String devtoolsErrorMessage_;
  /**
   * <pre>
   * Error message returned by devtools, if any.
   * </pre>
   *
   * <code>optional string devtools_error_message = 7;</code>
   * @return Whether the devtoolsErrorMessage field is set.
   */
  @java.lang.Override
  public boolean hasDevtoolsErrorMessage() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * Error message returned by devtools, if any.
   * </pre>
   *
   * <code>optional string devtools_error_message = 7;</code>
   * @return The devtoolsErrorMessage.
   */
  @java.lang.Override
  public java.lang.String getDevtoolsErrorMessage() {
    return devtoolsErrorMessage_;
  }
  /**
   * <pre>
   * Error message returned by devtools, if any.
   * </pre>
   *
   * <code>optional string devtools_error_message = 7;</code>
   * @return The bytes for devtoolsErrorMessage.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDevtoolsErrorMessageBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(devtoolsErrorMessage_);
  }
  /**
   * <pre>
   * Error message returned by devtools, if any.
   * </pre>
   *
   * <code>optional string devtools_error_message = 7;</code>
   * @param value The devtoolsErrorMessage to set.
   */
  private void setDevtoolsErrorMessage(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000010;
    devtoolsErrorMessage_ = value;
  }
  /**
   * <pre>
   * Error message returned by devtools, if any.
   * </pre>
   *
   * <code>optional string devtools_error_message = 7;</code>
   */
  private void clearDevtoolsErrorMessage() {
    bitField0_ = (bitField0_ & ~0x00000010);
    devtoolsErrorMessage_ = getDefaultInstance().getDevtoolsErrorMessage();
  }
  /**
   * <pre>
   * Error message returned by devtools, if any.
   * </pre>
   *
   * <code>optional string devtools_error_message = 7;</code>
   * @param value The bytes for devtoolsErrorMessage to set.
   */
  private void setDevtoolsErrorMessageBytes(
      com.google.protobuf.ByteString value) {
    devtoolsErrorMessage_ = value.toStringUtf8();
    bitField0_ |= 0x00000010;
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Extra debugging information included in case of unexpected errors.
   * Presence of this element either points to a problem in the executed
   * javascript (in which case, the relevant js_exception_xxx fields should be
   * set) or a bug in the client code.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.UnexpectedErrorInfoProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.UnexpectedErrorInfoProto)
      org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Source file, within the client code, where an unexpected error was detected
     * and reported.
     * Only filled for unexpected errors OTHER_ACTION_STATUS and
     * UNEXPECTED_JS_ERROR.
     * This and source_line are only meaningful for the exact version reported in
     * the client context.
     * </pre>
     *
     * <code>optional string source_file = 1;</code>
     * @return Whether the sourceFile field is set.
     */
    @java.lang.Override
    public boolean hasSourceFile() {
      return instance.hasSourceFile();
    }
    /**
     * <pre>
     * Source file, within the client code, where an unexpected error was detected
     * and reported.
     * Only filled for unexpected errors OTHER_ACTION_STATUS and
     * UNEXPECTED_JS_ERROR.
     * This and source_line are only meaningful for the exact version reported in
     * the client context.
     * </pre>
     *
     * <code>optional string source_file = 1;</code>
     * @return The sourceFile.
     */
    @java.lang.Override
    public java.lang.String getSourceFile() {
      return instance.getSourceFile();
    }
    /**
     * <pre>
     * Source file, within the client code, where an unexpected error was detected
     * and reported.
     * Only filled for unexpected errors OTHER_ACTION_STATUS and
     * UNEXPECTED_JS_ERROR.
     * This and source_line are only meaningful for the exact version reported in
     * the client context.
     * </pre>
     *
     * <code>optional string source_file = 1;</code>
     * @return The bytes for sourceFile.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSourceFileBytes() {
      return instance.getSourceFileBytes();
    }
    /**
     * <pre>
     * Source file, within the client code, where an unexpected error was detected
     * and reported.
     * Only filled for unexpected errors OTHER_ACTION_STATUS and
     * UNEXPECTED_JS_ERROR.
     * This and source_line are only meaningful for the exact version reported in
     * the client context.
     * </pre>
     *
     * <code>optional string source_file = 1;</code>
     * @param value The sourceFile to set.
     * @return This builder for chaining.
     */
    public Builder setSourceFile(
        java.lang.String value) {
      copyOnWrite();
      instance.setSourceFile(value);
      return this;
    }
    /**
     * <pre>
     * Source file, within the client code, where an unexpected error was detected
     * and reported.
     * Only filled for unexpected errors OTHER_ACTION_STATUS and
     * UNEXPECTED_JS_ERROR.
     * This and source_line are only meaningful for the exact version reported in
     * the client context.
     * </pre>
     *
     * <code>optional string source_file = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearSourceFile() {
      copyOnWrite();
      instance.clearSourceFile();
      return this;
    }
    /**
     * <pre>
     * Source file, within the client code, where an unexpected error was detected
     * and reported.
     * Only filled for unexpected errors OTHER_ACTION_STATUS and
     * UNEXPECTED_JS_ERROR.
     * This and source_line are only meaningful for the exact version reported in
     * the client context.
     * </pre>
     *
     * <code>optional string source_file = 1;</code>
     * @param value The bytes for sourceFile to set.
     * @return This builder for chaining.
     */
    public Builder setSourceFileBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setSourceFileBytes(value);
      return this;
    }

    /**
     * <pre>
     * Line number, within the client's source file, where the error was detected.
     * </pre>
     *
     * <code>optional int32 source_line_number = 2;</code>
     * @return Whether the sourceLineNumber field is set.
     */
    @java.lang.Override
    public boolean hasSourceLineNumber() {
      return instance.hasSourceLineNumber();
    }
    /**
     * <pre>
     * Line number, within the client's source file, where the error was detected.
     * </pre>
     *
     * <code>optional int32 source_line_number = 2;</code>
     * @return The sourceLineNumber.
     */
    @java.lang.Override
    public int getSourceLineNumber() {
      return instance.getSourceLineNumber();
    }
    /**
     * <pre>
     * Line number, within the client's source file, where the error was detected.
     * </pre>
     *
     * <code>optional int32 source_line_number = 2;</code>
     * @param value The sourceLineNumber to set.
     * @return This builder for chaining.
     */
    public Builder setSourceLineNumber(int value) {
      copyOnWrite();
      instance.setSourceLineNumber(value);
      return this;
    }
    /**
     * <pre>
     * Line number, within the client's source file, where the error was detected.
     * </pre>
     *
     * <code>optional int32 source_line_number = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearSourceLineNumber() {
      copyOnWrite();
      instance.clearSourceLineNumber();
      return this;
    }

    /**
     * <pre>
     * JavaScript exception class name, if reporting a JavaScript error.
     * </pre>
     *
     * <code>optional string js_exception_classname = 3;</code>
     * @return Whether the jsExceptionClassname field is set.
     */
    @java.lang.Override
    public boolean hasJsExceptionClassname() {
      return instance.hasJsExceptionClassname();
    }
    /**
     * <pre>
     * JavaScript exception class name, if reporting a JavaScript error.
     * </pre>
     *
     * <code>optional string js_exception_classname = 3;</code>
     * @return The jsExceptionClassname.
     */
    @java.lang.Override
    public java.lang.String getJsExceptionClassname() {
      return instance.getJsExceptionClassname();
    }
    /**
     * <pre>
     * JavaScript exception class name, if reporting a JavaScript error.
     * </pre>
     *
     * <code>optional string js_exception_classname = 3;</code>
     * @return The bytes for jsExceptionClassname.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getJsExceptionClassnameBytes() {
      return instance.getJsExceptionClassnameBytes();
    }
    /**
     * <pre>
     * JavaScript exception class name, if reporting a JavaScript error.
     * </pre>
     *
     * <code>optional string js_exception_classname = 3;</code>
     * @param value The jsExceptionClassname to set.
     * @return This builder for chaining.
     */
    public Builder setJsExceptionClassname(
        java.lang.String value) {
      copyOnWrite();
      instance.setJsExceptionClassname(value);
      return this;
    }
    /**
     * <pre>
     * JavaScript exception class name, if reporting a JavaScript error.
     * </pre>
     *
     * <code>optional string js_exception_classname = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearJsExceptionClassname() {
      copyOnWrite();
      instance.clearJsExceptionClassname();
      return this;
    }
    /**
     * <pre>
     * JavaScript exception class name, if reporting a JavaScript error.
     * </pre>
     *
     * <code>optional string js_exception_classname = 3;</code>
     * @param value The bytes for jsExceptionClassname to set.
     * @return This builder for chaining.
     */
    public Builder setJsExceptionClassnameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setJsExceptionClassnameBytes(value);
      return this;
    }

    /**
     * <pre>
     * The location that caused the JavaScript exception. Guaranteed to have the
     * same number of entries as js_exception_line_numbers and
     * js_exception_column_numbers.
     * </pre>
     *
     * <code>repeated .autofill_assistant.UnexpectedErrorInfoProto.JsExceptionLocation js_exception_locations = 8 [packed = true];</code>
     * @return A list containing the jsExceptionLocations.
     */
    @java.lang.Override
    public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto.JsExceptionLocation> getJsExceptionLocationsList() {
      return instance.getJsExceptionLocationsList();
    }
    /**
     * <pre>
     * The location that caused the JavaScript exception. Guaranteed to have the
     * same number of entries as js_exception_line_numbers and
     * js_exception_column_numbers.
     * </pre>
     *
     * <code>repeated .autofill_assistant.UnexpectedErrorInfoProto.JsExceptionLocation js_exception_locations = 8 [packed = true];</code>
     * @return The count of jsExceptionLocations.
     */
    @java.lang.Override
    public int getJsExceptionLocationsCount() {
      return instance.getJsExceptionLocationsCount();
    }
    /**
     * <pre>
     * The location that caused the JavaScript exception. Guaranteed to have the
     * same number of entries as js_exception_line_numbers and
     * js_exception_column_numbers.
     * </pre>
     *
     * <code>repeated .autofill_assistant.UnexpectedErrorInfoProto.JsExceptionLocation js_exception_locations = 8 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The jsExceptionLocations at the given index.
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto.JsExceptionLocation getJsExceptionLocations(int index) {
      return instance.getJsExceptionLocations(index);
    }
    /**
     * <pre>
     * The location that caused the JavaScript exception. Guaranteed to have the
     * same number of entries as js_exception_line_numbers and
     * js_exception_column_numbers.
     * </pre>
     *
     * <code>repeated .autofill_assistant.UnexpectedErrorInfoProto.JsExceptionLocation js_exception_locations = 8 [packed = true];</code>
     * @param index The index to set the value at.
     * @param value The jsExceptionLocations to set.
     * @return This builder for chaining.
     */
    public Builder setJsExceptionLocations(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto.JsExceptionLocation value) {
      copyOnWrite();
      instance.setJsExceptionLocations(index, value);
      return this;
    }
    /**
     * <pre>
     * The location that caused the JavaScript exception. Guaranteed to have the
     * same number of entries as js_exception_line_numbers and
     * js_exception_column_numbers.
     * </pre>
     *
     * <code>repeated .autofill_assistant.UnexpectedErrorInfoProto.JsExceptionLocation js_exception_locations = 8 [packed = true];</code>
     * @param value The jsExceptionLocations to add.
     * @return This builder for chaining.
     */
    public Builder addJsExceptionLocations(org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto.JsExceptionLocation value) {
      copyOnWrite();
      instance.addJsExceptionLocations(value);
      return this;
    }
    /**
     * <pre>
     * The location that caused the JavaScript exception. Guaranteed to have the
     * same number of entries as js_exception_line_numbers and
     * js_exception_column_numbers.
     * </pre>
     *
     * <code>repeated .autofill_assistant.UnexpectedErrorInfoProto.JsExceptionLocation js_exception_locations = 8 [packed = true];</code>
     * @param values The jsExceptionLocations to add.
     * @return This builder for chaining.
     */
    public Builder addAllJsExceptionLocations(
        java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto.JsExceptionLocation> values) {
      copyOnWrite();
      instance.addAllJsExceptionLocations(values);  return this;
    }
    /**
     * <pre>
     * The location that caused the JavaScript exception. Guaranteed to have the
     * same number of entries as js_exception_line_numbers and
     * js_exception_column_numbers.
     * </pre>
     *
     * <code>repeated .autofill_assistant.UnexpectedErrorInfoProto.JsExceptionLocation js_exception_locations = 8 [packed = true];</code>
     * @return This builder for chaining.
     */
    public Builder clearJsExceptionLocations() {
      copyOnWrite();
      instance.clearJsExceptionLocations();
      return this;
    }

    /**
     * <pre>
     * JavaScript exception line numbers, within the js snippet that was sent to
     * devtools runtime by the client, if reporting a JavaScript error. Together
     * with |js_exception_column_numbers| this forms a stack trace.
     * </pre>
     *
     * <code>repeated int32 js_exception_line_numbers = 4;</code>
     * @return A list containing the jsExceptionLineNumbers.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getJsExceptionLineNumbersList() {
      return java.util.Collections.unmodifiableList(
          instance.getJsExceptionLineNumbersList());
    }
    /**
     * <pre>
     * JavaScript exception line numbers, within the js snippet that was sent to
     * devtools runtime by the client, if reporting a JavaScript error. Together
     * with |js_exception_column_numbers| this forms a stack trace.
     * </pre>
     *
     * <code>repeated int32 js_exception_line_numbers = 4;</code>
     * @return The count of jsExceptionLineNumbers.
     */
    @java.lang.Override
    public int getJsExceptionLineNumbersCount() {
      return instance.getJsExceptionLineNumbersCount();
    }
    /**
     * <pre>
     * JavaScript exception line numbers, within the js snippet that was sent to
     * devtools runtime by the client, if reporting a JavaScript error. Together
     * with |js_exception_column_numbers| this forms a stack trace.
     * </pre>
     *
     * <code>repeated int32 js_exception_line_numbers = 4;</code>
     * @param index The index of the element to return.
     * @return The jsExceptionLineNumbers at the given index.
     */
    @java.lang.Override
    public int getJsExceptionLineNumbers(int index) {
      return instance.getJsExceptionLineNumbers(index);
    }
    /**
     * <pre>
     * JavaScript exception line numbers, within the js snippet that was sent to
     * devtools runtime by the client, if reporting a JavaScript error. Together
     * with |js_exception_column_numbers| this forms a stack trace.
     * </pre>
     *
     * <code>repeated int32 js_exception_line_numbers = 4;</code>
     * @param value The jsExceptionLineNumbers to set.
     * @return This builder for chaining.
     */
    public Builder setJsExceptionLineNumbers(
        int index, int value) {
      copyOnWrite();
      instance.setJsExceptionLineNumbers(index, value);
      return this;
    }
    /**
     * <pre>
     * JavaScript exception line numbers, within the js snippet that was sent to
     * devtools runtime by the client, if reporting a JavaScript error. Together
     * with |js_exception_column_numbers| this forms a stack trace.
     * </pre>
     *
     * <code>repeated int32 js_exception_line_numbers = 4;</code>
     * @param value The jsExceptionLineNumbers to add.
     * @return This builder for chaining.
     */
    public Builder addJsExceptionLineNumbers(int value) {
      copyOnWrite();
      instance.addJsExceptionLineNumbers(value);
      return this;
    }
    /**
     * <pre>
     * JavaScript exception line numbers, within the js snippet that was sent to
     * devtools runtime by the client, if reporting a JavaScript error. Together
     * with |js_exception_column_numbers| this forms a stack trace.
     * </pre>
     *
     * <code>repeated int32 js_exception_line_numbers = 4;</code>
     * @param values The jsExceptionLineNumbers to add.
     * @return This builder for chaining.
     */
    public Builder addAllJsExceptionLineNumbers(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      copyOnWrite();
      instance.addAllJsExceptionLineNumbers(values);
      return this;
    }
    /**
     * <pre>
     * JavaScript exception line numbers, within the js snippet that was sent to
     * devtools runtime by the client, if reporting a JavaScript error. Together
     * with |js_exception_column_numbers| this forms a stack trace.
     * </pre>
     *
     * <code>repeated int32 js_exception_line_numbers = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearJsExceptionLineNumbers() {
      copyOnWrite();
      instance.clearJsExceptionLineNumbers();
      return this;
    }

    /**
     * <pre>
     * JavaScript exception column number, within the js snippet that was sent to
     * devtools runtime by the client, if reporting a JavaScript error. Together
     * with |js_exception_line_numbers| this forms a stack trace.
     * </pre>
     *
     * <code>repeated int32 js_exception_column_numbers = 5;</code>
     * @return A list containing the jsExceptionColumnNumbers.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getJsExceptionColumnNumbersList() {
      return java.util.Collections.unmodifiableList(
          instance.getJsExceptionColumnNumbersList());
    }
    /**
     * <pre>
     * JavaScript exception column number, within the js snippet that was sent to
     * devtools runtime by the client, if reporting a JavaScript error. Together
     * with |js_exception_line_numbers| this forms a stack trace.
     * </pre>
     *
     * <code>repeated int32 js_exception_column_numbers = 5;</code>
     * @return The count of jsExceptionColumnNumbers.
     */
    @java.lang.Override
    public int getJsExceptionColumnNumbersCount() {
      return instance.getJsExceptionColumnNumbersCount();
    }
    /**
     * <pre>
     * JavaScript exception column number, within the js snippet that was sent to
     * devtools runtime by the client, if reporting a JavaScript error. Together
     * with |js_exception_line_numbers| this forms a stack trace.
     * </pre>
     *
     * <code>repeated int32 js_exception_column_numbers = 5;</code>
     * @param index The index of the element to return.
     * @return The jsExceptionColumnNumbers at the given index.
     */
    @java.lang.Override
    public int getJsExceptionColumnNumbers(int index) {
      return instance.getJsExceptionColumnNumbers(index);
    }
    /**
     * <pre>
     * JavaScript exception column number, within the js snippet that was sent to
     * devtools runtime by the client, if reporting a JavaScript error. Together
     * with |js_exception_line_numbers| this forms a stack trace.
     * </pre>
     *
     * <code>repeated int32 js_exception_column_numbers = 5;</code>
     * @param value The jsExceptionColumnNumbers to set.
     * @return This builder for chaining.
     */
    public Builder setJsExceptionColumnNumbers(
        int index, int value) {
      copyOnWrite();
      instance.setJsExceptionColumnNumbers(index, value);
      return this;
    }
    /**
     * <pre>
     * JavaScript exception column number, within the js snippet that was sent to
     * devtools runtime by the client, if reporting a JavaScript error. Together
     * with |js_exception_line_numbers| this forms a stack trace.
     * </pre>
     *
     * <code>repeated int32 js_exception_column_numbers = 5;</code>
     * @param value The jsExceptionColumnNumbers to add.
     * @return This builder for chaining.
     */
    public Builder addJsExceptionColumnNumbers(int value) {
      copyOnWrite();
      instance.addJsExceptionColumnNumbers(value);
      return this;
    }
    /**
     * <pre>
     * JavaScript exception column number, within the js snippet that was sent to
     * devtools runtime by the client, if reporting a JavaScript error. Together
     * with |js_exception_line_numbers| this forms a stack trace.
     * </pre>
     *
     * <code>repeated int32 js_exception_column_numbers = 5;</code>
     * @param values The jsExceptionColumnNumbers to add.
     * @return This builder for chaining.
     */
    public Builder addAllJsExceptionColumnNumbers(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      copyOnWrite();
      instance.addAllJsExceptionColumnNumbers(values);
      return this;
    }
    /**
     * <pre>
     * JavaScript exception column number, within the js snippet that was sent to
     * devtools runtime by the client, if reporting a JavaScript error. Together
     * with |js_exception_line_numbers| this forms a stack trace.
     * </pre>
     *
     * <code>repeated int32 js_exception_column_numbers = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearJsExceptionColumnNumbers() {
      copyOnWrite();
      instance.clearJsExceptionColumnNumbers();
      return this;
    }

    /**
     * <pre>
     * Error code returned by devtools, if any. 0 is considered a success.
     * </pre>
     *
     * <code>optional int32 devtools_error_code = 6;</code>
     * @return Whether the devtoolsErrorCode field is set.
     */
    @java.lang.Override
    public boolean hasDevtoolsErrorCode() {
      return instance.hasDevtoolsErrorCode();
    }
    /**
     * <pre>
     * Error code returned by devtools, if any. 0 is considered a success.
     * </pre>
     *
     * <code>optional int32 devtools_error_code = 6;</code>
     * @return The devtoolsErrorCode.
     */
    @java.lang.Override
    public int getDevtoolsErrorCode() {
      return instance.getDevtoolsErrorCode();
    }
    /**
     * <pre>
     * Error code returned by devtools, if any. 0 is considered a success.
     * </pre>
     *
     * <code>optional int32 devtools_error_code = 6;</code>
     * @param value The devtoolsErrorCode to set.
     * @return This builder for chaining.
     */
    public Builder setDevtoolsErrorCode(int value) {
      copyOnWrite();
      instance.setDevtoolsErrorCode(value);
      return this;
    }
    /**
     * <pre>
     * Error code returned by devtools, if any. 0 is considered a success.
     * </pre>
     *
     * <code>optional int32 devtools_error_code = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearDevtoolsErrorCode() {
      copyOnWrite();
      instance.clearDevtoolsErrorCode();
      return this;
    }

    /**
     * <pre>
     * Error message returned by devtools, if any.
     * </pre>
     *
     * <code>optional string devtools_error_message = 7;</code>
     * @return Whether the devtoolsErrorMessage field is set.
     */
    @java.lang.Override
    public boolean hasDevtoolsErrorMessage() {
      return instance.hasDevtoolsErrorMessage();
    }
    /**
     * <pre>
     * Error message returned by devtools, if any.
     * </pre>
     *
     * <code>optional string devtools_error_message = 7;</code>
     * @return The devtoolsErrorMessage.
     */
    @java.lang.Override
    public java.lang.String getDevtoolsErrorMessage() {
      return instance.getDevtoolsErrorMessage();
    }
    /**
     * <pre>
     * Error message returned by devtools, if any.
     * </pre>
     *
     * <code>optional string devtools_error_message = 7;</code>
     * @return The bytes for devtoolsErrorMessage.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDevtoolsErrorMessageBytes() {
      return instance.getDevtoolsErrorMessageBytes();
    }
    /**
     * <pre>
     * Error message returned by devtools, if any.
     * </pre>
     *
     * <code>optional string devtools_error_message = 7;</code>
     * @param value The devtoolsErrorMessage to set.
     * @return This builder for chaining.
     */
    public Builder setDevtoolsErrorMessage(
        java.lang.String value) {
      copyOnWrite();
      instance.setDevtoolsErrorMessage(value);
      return this;
    }
    /**
     * <pre>
     * Error message returned by devtools, if any.
     * </pre>
     *
     * <code>optional string devtools_error_message = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearDevtoolsErrorMessage() {
      copyOnWrite();
      instance.clearDevtoolsErrorMessage();
      return this;
    }
    /**
     * <pre>
     * Error message returned by devtools, if any.
     * </pre>
     *
     * <code>optional string devtools_error_message = 7;</code>
     * @param value The bytes for devtoolsErrorMessage to set.
     * @return This builder for chaining.
     */
    public Builder setDevtoolsErrorMessageBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setDevtoolsErrorMessageBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.UnexpectedErrorInfoProto)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "sourceFile_",
            "sourceLineNumber_",
            "jsExceptionClassname_",
            "jsExceptionLineNumbers_",
            "jsExceptionColumnNumbers_",
            "devtoolsErrorCode_",
            "devtoolsErrorMessage_",
            "jsExceptionLocations_",
            org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto.JsExceptionLocation.internalGetVerifier(),
          };
          java.lang.String info =
              "\u0001\b\u0000\u0001\u0001\b\b\u0000\u0003\u0000\u0001\u1008\u0000\u0002\u1004\u0001" +
              "\u0003\u1008\u0002\u0004\u0016\u0005\u0016\u0006\u1004\u0003\u0007\u1008\u0004\b" +
              ",";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.UnexpectedErrorInfoProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto DEFAULT_INSTANCE;
  static {
    UnexpectedErrorInfoProto defaultInstance = new UnexpectedErrorInfoProto();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      UnexpectedErrorInfoProto.class, defaultInstance);
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.UnexpectedErrorInfoProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<UnexpectedErrorInfoProto> PARSER;

  public static com.google.protobuf.Parser<UnexpectedErrorInfoProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

