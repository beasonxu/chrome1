// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: secure_connect.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_secure_5fconnect_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_secure_5fconnect_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "policy_common_definitions.pb.h"
// @@protoc_insertion_point(includes)
#include "components/policy/proto/policy_proto_export.h"
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_secure_5fconnect_2eproto POLICY_PROTO_EXPORT
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct POLICY_PROTO_EXPORT TableStruct_secure_5fconnect_2eproto {
static const uint32_t offsets[];
};
namespace enterprise_management {
class GetManagedAccountsSigninRestrictionResponse;
struct GetManagedAccountsSigninRestrictionResponseDefaultTypeInternal;
POLICY_PROTO_EXPORT extern GetManagedAccountsSigninRestrictionResponseDefaultTypeInternal _GetManagedAccountsSigninRestrictionResponse_default_instance_;
}  // namespace enterprise_management
PROTOBUF_NAMESPACE_OPEN
template<> POLICY_PROTO_EXPORT ::enterprise_management::GetManagedAccountsSigninRestrictionResponse* Arena::CreateMaybeMessage<::enterprise_management::GetManagedAccountsSigninRestrictionResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace enterprise_management {

// ===================================================================

class POLICY_PROTO_EXPORT GetManagedAccountsSigninRestrictionResponse final :
public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:enterprise_management.GetManagedAccountsSigninRestrictionResponse) */ {
public:
inline GetManagedAccountsSigninRestrictionResponse() : GetManagedAccountsSigninRestrictionResponse(nullptr) {}
~GetManagedAccountsSigninRestrictionResponse() override;
explicit PROTOBUF_CONSTEXPR GetManagedAccountsSigninRestrictionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

GetManagedAccountsSigninRestrictionResponse(const GetManagedAccountsSigninRestrictionResponse& from);
GetManagedAccountsSigninRestrictionResponse(GetManagedAccountsSigninRestrictionResponse&& from) noexcept
: GetManagedAccountsSigninRestrictionResponse() {
*this = ::std::move(from);
}

inline GetManagedAccountsSigninRestrictionResponse& operator=(const GetManagedAccountsSigninRestrictionResponse& from) {
CopyFrom(from);
return *this;
}
inline GetManagedAccountsSigninRestrictionResponse& operator=(GetManagedAccountsSigninRestrictionResponse&& from) noexcept {
if (this == &from) return *this;
if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
&& GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
) {
InternalSwap(&from);
} else {
CopyFrom(from);
}
return *this;
}

inline const std::string& unknown_fields() const {
return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
}
inline std::string* mutable_unknown_fields() {
return _internal_metadata_.mutable_unknown_fields<std::string>();
}

static const GetManagedAccountsSigninRestrictionResponse& default_instance() {
return *internal_default_instance();
}
static inline const GetManagedAccountsSigninRestrictionResponse* internal_default_instance() {
return reinterpret_cast<const GetManagedAccountsSigninRestrictionResponse*>(
&_GetManagedAccountsSigninRestrictionResponse_default_instance_);
}
static constexpr int kIndexInFileMessages =
0;

friend void swap(GetManagedAccountsSigninRestrictionResponse& a, GetManagedAccountsSigninRestrictionResponse& b) {
a.Swap(&b);
}
PROTOBUF_NOINLINE void Swap(GetManagedAccountsSigninRestrictionResponse* other) {
if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
if (GetOwningArena() != nullptr &&
GetOwningArena() == other->GetOwningArena()) {
#else  // PROTOBUF_FORCE_COPY_IN_SWAP
if (GetOwningArena() == other->GetOwningArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
InternalSwap(other);
} else {
::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
}
}
void UnsafeArenaSwap(GetManagedAccountsSigninRestrictionResponse* other) {
if (other == this) return;
GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
InternalSwap(other);
}

// implements Message ----------------------------------------------

GetManagedAccountsSigninRestrictionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
return CreateMaybeMessage<GetManagedAccountsSigninRestrictionResponse>(arena);
}
void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
void CopyFrom(const GetManagedAccountsSigninRestrictionResponse& from);
void MergeFrom(const GetManagedAccountsSigninRestrictionResponse& from);
PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
bool IsInitialized() const final;

size_t ByteSizeLong() const final;
const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
uint8_t* _InternalSerialize(
uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
int GetCachedSize() const final { return _cached_size_.Get(); }

private:
void SharedCtor();
void SharedDtor();
void SetCachedSize(int size) const;
void InternalSwap(GetManagedAccountsSigninRestrictionResponse* other);

private:
friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
return "enterprise_management.GetManagedAccountsSigninRestrictionResponse";
}
protected:
explicit GetManagedAccountsSigninRestrictionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
bool is_message_owned = false);
public:

std::string GetTypeName() const final;

// nested types ----------------------------------------------------

// accessors -------------------------------------------------------

enum : int {
kPolicyValueFieldNumber = 1,
kPolicyOptionsFieldNumber = 2,
kHasErrorFieldNumber = 3,
};
// optional string policy_value = 1;
bool has_policy_value() const;
private:
bool _internal_has_policy_value() const;
public:
void clear_policy_value();
const std::string& policy_value() const;
template <typename ArgT0 = const std::string&, typename... ArgT>
void set_policy_value(ArgT0&& arg0, ArgT... args);
std::string* mutable_policy_value();
PROTOBUF_NODISCARD std::string* release_policy_value();
void set_allocated_policy_value(std::string* policy_value);
private:
const std::string& _internal_policy_value() const;
inline PROTOBUF_ALWAYS_INLINE void _internal_set_policy_value(const std::string& value);
std::string* _internal_mutable_policy_value();
public:

// optional .enterprise_management.PolicyOptions policy_options = 2;
bool has_policy_options() const;
private:
bool _internal_has_policy_options() const;
public:
void clear_policy_options();
const ::enterprise_management::PolicyOptions& policy_options() const;
PROTOBUF_NODISCARD ::enterprise_management::PolicyOptions* release_policy_options();
::enterprise_management::PolicyOptions* mutable_policy_options();
void set_allocated_policy_options(::enterprise_management::PolicyOptions* policy_options);
private:
const ::enterprise_management::PolicyOptions& _internal_policy_options() const;
::enterprise_management::PolicyOptions* _internal_mutable_policy_options();
public:
void unsafe_arena_set_allocated_policy_options(
::enterprise_management::PolicyOptions* policy_options);
::enterprise_management::PolicyOptions* unsafe_arena_release_policy_options();

// optional bool has_error = 3;
bool has_has_error() const;
private:
bool _internal_has_has_error() const;
public:
void clear_has_error();
bool has_error() const;
void set_has_error(bool value);
private:
bool _internal_has_error() const;
void _internal_set_has_error(bool value);
public:

// @@protoc_insertion_point(class_scope:enterprise_management.GetManagedAccountsSigninRestrictionResponse)
private:
class _Internal;

template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
typedef void InternalArenaConstructable_;
typedef void DestructorSkippable_;
::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr policy_value_;
::enterprise_management::PolicyOptions* policy_options_;
bool has_error_;
friend struct ::TableStruct_secure_5fconnect_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetManagedAccountsSigninRestrictionResponse

// optional string policy_value = 1;
inline bool GetManagedAccountsSigninRestrictionResponse::_internal_has_policy_value() const {
bool value = (_has_bits_[0] & 0x00000001u) != 0;
return value;
}
inline bool GetManagedAccountsSigninRestrictionResponse::has_policy_value() const {
return _internal_has_policy_value();
}
inline void GetManagedAccountsSigninRestrictionResponse::clear_policy_value() {
policy_value_.ClearToEmpty();
_has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GetManagedAccountsSigninRestrictionResponse::policy_value() const {
// @@protoc_insertion_point(field_get:enterprise_management.GetManagedAccountsSigninRestrictionResponse.policy_value)
return _internal_policy_value();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetManagedAccountsSigninRestrictionResponse::set_policy_value(ArgT0&& arg0, ArgT... args) {
_has_bits_[0] |= 0x00000001u;
policy_value_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
// @@protoc_insertion_point(field_set:enterprise_management.GetManagedAccountsSigninRestrictionResponse.policy_value)
}
inline std::string* GetManagedAccountsSigninRestrictionResponse::mutable_policy_value() {
std::string* _s = _internal_mutable_policy_value();
// @@protoc_insertion_point(field_mutable:enterprise_management.GetManagedAccountsSigninRestrictionResponse.policy_value)
return _s;
}
inline const std::string& GetManagedAccountsSigninRestrictionResponse::_internal_policy_value() const {
return policy_value_.Get();
}
inline void GetManagedAccountsSigninRestrictionResponse::_internal_set_policy_value(const std::string& value) {
_has_bits_[0] |= 0x00000001u;
policy_value_.Set(value, GetArenaForAllocation());
}
inline std::string* GetManagedAccountsSigninRestrictionResponse::_internal_mutable_policy_value() {
_has_bits_[0] |= 0x00000001u;
return policy_value_.Mutable(GetArenaForAllocation());
}
inline std::string* GetManagedAccountsSigninRestrictionResponse::release_policy_value() {
// @@protoc_insertion_point(field_release:enterprise_management.GetManagedAccountsSigninRestrictionResponse.policy_value)
if (!_internal_has_policy_value()) {
return nullptr;
}
_has_bits_[0] &= ~0x00000001u;
auto* p = policy_value_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
if (policy_value_.IsDefault()) {
policy_value_.Set("", GetArenaForAllocation());
}
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
return p;
}
inline void GetManagedAccountsSigninRestrictionResponse::set_allocated_policy_value(std::string* policy_value) {
if (policy_value != nullptr) {
_has_bits_[0] |= 0x00000001u;
} else {
_has_bits_[0] &= ~0x00000001u;
}
policy_value_.SetAllocated(policy_value, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
if (policy_value_.IsDefault()) {
policy_value_.Set("", GetArenaForAllocation());
}
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
// @@protoc_insertion_point(field_set_allocated:enterprise_management.GetManagedAccountsSigninRestrictionResponse.policy_value)
}

// optional .enterprise_management.PolicyOptions policy_options = 2;
inline bool GetManagedAccountsSigninRestrictionResponse::_internal_has_policy_options() const {
bool value = (_has_bits_[0] & 0x00000002u) != 0;
PROTOBUF_ASSUME(!value || policy_options_ != nullptr);
return value;
}
inline bool GetManagedAccountsSigninRestrictionResponse::has_policy_options() const {
return _internal_has_policy_options();
}
inline const ::enterprise_management::PolicyOptions& GetManagedAccountsSigninRestrictionResponse::_internal_policy_options() const {
const ::enterprise_management::PolicyOptions* p = policy_options_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::PolicyOptions&>(
::enterprise_management::_PolicyOptions_default_instance_);
}
inline const ::enterprise_management::PolicyOptions& GetManagedAccountsSigninRestrictionResponse::policy_options() const {
// @@protoc_insertion_point(field_get:enterprise_management.GetManagedAccountsSigninRestrictionResponse.policy_options)
return _internal_policy_options();
}
inline void GetManagedAccountsSigninRestrictionResponse::unsafe_arena_set_allocated_policy_options(
::enterprise_management::PolicyOptions* policy_options) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(policy_options_);
}
policy_options_ = policy_options;
if (policy_options) {
_has_bits_[0] |= 0x00000002u;
} else {
_has_bits_[0] &= ~0x00000002u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.GetManagedAccountsSigninRestrictionResponse.policy_options)
}
inline ::enterprise_management::PolicyOptions* GetManagedAccountsSigninRestrictionResponse::release_policy_options() {
_has_bits_[0] &= ~0x00000002u;
::enterprise_management::PolicyOptions* temp = policy_options_;
policy_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::PolicyOptions* GetManagedAccountsSigninRestrictionResponse::unsafe_arena_release_policy_options() {
// @@protoc_insertion_point(field_release:enterprise_management.GetManagedAccountsSigninRestrictionResponse.policy_options)
_has_bits_[0] &= ~0x00000002u;
::enterprise_management::PolicyOptions* temp = policy_options_;
policy_options_ = nullptr;
return temp;
}
inline ::enterprise_management::PolicyOptions* GetManagedAccountsSigninRestrictionResponse::_internal_mutable_policy_options() {
_has_bits_[0] |= 0x00000002u;
if (policy_options_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::PolicyOptions>(GetArenaForAllocation());
policy_options_ = p;
}
return policy_options_;
}
inline ::enterprise_management::PolicyOptions* GetManagedAccountsSigninRestrictionResponse::mutable_policy_options() {
::enterprise_management::PolicyOptions* _msg = _internal_mutable_policy_options();
// @@protoc_insertion_point(field_mutable:enterprise_management.GetManagedAccountsSigninRestrictionResponse.policy_options)
return _msg;
}
inline void GetManagedAccountsSigninRestrictionResponse::set_allocated_policy_options(::enterprise_management::PolicyOptions* policy_options) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(policy_options_);
}
if (policy_options) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(policy_options));
if (message_arena != submessage_arena) {
policy_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, policy_options, submessage_arena);
}
_has_bits_[0] |= 0x00000002u;
} else {
_has_bits_[0] &= ~0x00000002u;
}
policy_options_ = policy_options;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.GetManagedAccountsSigninRestrictionResponse.policy_options)
}

// optional bool has_error = 3;
inline bool GetManagedAccountsSigninRestrictionResponse::_internal_has_has_error() const {
bool value = (_has_bits_[0] & 0x00000004u) != 0;
return value;
}
inline bool GetManagedAccountsSigninRestrictionResponse::has_has_error() const {
return _internal_has_has_error();
}
inline void GetManagedAccountsSigninRestrictionResponse::clear_has_error() {
has_error_ = false;
_has_bits_[0] &= ~0x00000004u;
}
inline bool GetManagedAccountsSigninRestrictionResponse::_internal_has_error() const {
return has_error_;
}
inline bool GetManagedAccountsSigninRestrictionResponse::has_error() const {
// @@protoc_insertion_point(field_get:enterprise_management.GetManagedAccountsSigninRestrictionResponse.has_error)
return _internal_has_error();
}
inline void GetManagedAccountsSigninRestrictionResponse::_internal_set_has_error(bool value) {
_has_bits_[0] |= 0x00000004u;
has_error_ = value;
}
inline void GetManagedAccountsSigninRestrictionResponse::set_has_error(bool value) {
_internal_set_has_error(value);
// @@protoc_insertion_point(field_set:enterprise_management.GetManagedAccountsSigninRestrictionResponse.has_error)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace enterprise_management

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_secure_5fconnect_2eproto
