// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/site_engagement/SiteEngagementService

#ifndef org_chromium_components_site_engagement_SiteEngagementService_JNI
#define org_chromium_components_site_engagement_SiteEngagementService_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_site_1engagement_SiteEngagementService[];
const char kClassPath_org_chromium_components_site_1engagement_SiteEngagementService[] =
    "org/chromium/components/site_engagement/SiteEngagementService";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_site_1engagement_SiteEngagementService_clazz(nullptr);
#ifndef org_chromium_components_site_1engagement_SiteEngagementService_clazz_defined
#define org_chromium_components_site_1engagement_SiteEngagementService_clazz_defined
inline jclass org_chromium_components_site_1engagement_SiteEngagementService_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_site_1engagement_SiteEngagementService,
      &g_org_chromium_components_site_1engagement_SiteEngagementService_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace site_engagement {

static base::android::ScopedJavaLocalRef<jobject>
    JNI_SiteEngagementService_SiteEngagementServiceForBrowserContext(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& browserContext);

JNI_GENERATOR_EXPORT jobject Java_J_N_Ml4trBg9(
    JNIEnv* env,
    jclass jcaller,
    jobject browserContext) {
  return JNI_SiteEngagementService_SiteEngagementServiceForBrowserContext(env,
      base::android::JavaParamRef<jobject>(env, browserContext)).Release();
}

static void JNI_SiteEngagementService_SetParamValuesForTesting(JNIEnv* env);

JNI_GENERATOR_EXPORT void Java_J_N_MkdEsXBE_1ForTesting(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_SiteEngagementService_SetParamValuesForTesting(env);
}

JNI_GENERATOR_EXPORT jdouble Java_J_N_MVTED07I(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeSiteEngagementServiceAndroid,
    jobject caller,
    jstring url) {
  SiteEngagementServiceAndroid* native =
      reinterpret_cast<SiteEngagementServiceAndroid*>(nativeSiteEngagementServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetScore", 0);
  return native->GetScore(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, url));
}

JNI_GENERATOR_EXPORT void Java_J_N_MYPBNJYD(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeSiteEngagementServiceAndroid,
    jobject caller,
    jstring url,
    jdouble score) {
  SiteEngagementServiceAndroid* native =
      reinterpret_cast<SiteEngagementServiceAndroid*>(nativeSiteEngagementServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "ResetBaseScoreForURL");
  return native->ResetBaseScoreForURL(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, url), score);
}


static std::atomic<jmethodID>
    g_org_chromium_components_site_1engagement_SiteEngagementService_create(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_SiteEngagementService_create(JNIEnv* env,
    jlong nativePointer) {
  jclass clazz = org_chromium_components_site_1engagement_SiteEngagementService_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_site_1engagement_SiteEngagementService_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "create",
          "(J)Lorg/chromium/components/site_engagement/SiteEngagementService;",
          &g_org_chromium_components_site_1engagement_SiteEngagementService_create);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, nativePointer);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_site_1engagement_SiteEngagementService_onNativeDestroyed(nullptr);
static void Java_SiteEngagementService_onNativeDestroyed(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_site_1engagement_SiteEngagementService_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_site_1engagement_SiteEngagementService_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onNativeDestroyed",
          "()V",
          &g_org_chromium_components_site_1engagement_SiteEngagementService_onNativeDestroyed);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

}  // namespace site_engagement

#endif  // org_chromium_components_site_engagement_SiteEngagementService_JNI
