// components/site_engagement/core/mojom/site_engagement_details.mojom-lite.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';


mojo.internal.exportModule('siteEngagement.mojom');








/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
siteEngagement.mojom.SiteEngagementDetailsProviderPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        siteEngagement.mojom.SiteEngagementDetailsProvider.$interfaceName,
        scope);
  }
};



/**
 * @export
 * @implements { siteEngagement.mojom.SiteEngagementDetailsProviderInterface }
 */
siteEngagement.mojom.SiteEngagementDetailsProviderRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!siteEngagement.mojom.SiteEngagementDetailsProviderPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          siteEngagement.mojom.SiteEngagementDetailsProviderPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!siteEngagement.mojom.SiteEngagementDetailsProviderPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @return {!Promise<{
        info: !Array<!siteEngagement.mojom.SiteEngagementDetails>,
   *  }>}
   */

  getSiteEngagementDetails() {
    return this.proxy.sendMessage(
        0,
        siteEngagement.mojom.SiteEngagementDetailsProvider_GetSiteEngagementDetails_ParamsSpec.$,
        siteEngagement.mojom.SiteEngagementDetailsProvider_GetSiteEngagementDetails_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !url.mojom.Url } url
   * @param { !number } score
   */

  setSiteEngagementBaseScoreForUrl(
      url,
      score) {
    this.proxy.sendMessage(
        1,
        siteEngagement.mojom.SiteEngagementDetailsProvider_SetSiteEngagementBaseScoreForUrl_ParamsSpec.$,
        null,
        [
          url,
          score
        ]);
  }
};

/**
 * An object which receives request messages for the SiteEngagementDetailsProvider
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
siteEngagement.mojom.SiteEngagementDetailsProviderReceiver = class {
  /**
   * @param {!siteEngagement.mojom.SiteEngagementDetailsProviderInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!siteEngagement.mojom.SiteEngagementDetailsProviderRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        siteEngagement.mojom.SiteEngagementDetailsProviderRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!siteEngagement.mojom.SiteEngagementDetailsProviderRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        siteEngagement.mojom.SiteEngagementDetailsProvider_GetSiteEngagementDetails_ParamsSpec.$,
        siteEngagement.mojom.SiteEngagementDetailsProvider_GetSiteEngagementDetails_ResponseParamsSpec.$,
        impl.getSiteEngagementDetails.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        siteEngagement.mojom.SiteEngagementDetailsProvider_SetSiteEngagementBaseScoreForUrl_ParamsSpec.$,
        null,
        impl.setSiteEngagementBaseScoreForUrl.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
siteEngagement.mojom.SiteEngagementDetailsProvider = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "site_engagement.mojom.SiteEngagementDetailsProvider";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!siteEngagement.mojom.SiteEngagementDetailsProviderRemote}
   * @export
   */
  static getRemote() {
    let remote = new siteEngagement.mojom.SiteEngagementDetailsProviderRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the SiteEngagementDetailsProvider
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
siteEngagement.mojom.SiteEngagementDetailsProviderCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      siteEngagement.mojom.SiteEngagementDetailsProviderRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!siteEngagement.mojom.SiteEngagementDetailsProviderRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getSiteEngagementDetails =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        siteEngagement.mojom.SiteEngagementDetailsProvider_GetSiteEngagementDetails_ParamsSpec.$,
        siteEngagement.mojom.SiteEngagementDetailsProvider_GetSiteEngagementDetails_ResponseParamsSpec.$,
        this.getSiteEngagementDetails.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setSiteEngagementBaseScoreForUrl =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        siteEngagement.mojom.SiteEngagementDetailsProvider_SetSiteEngagementBaseScoreForUrl_ParamsSpec.$,
        null,
        this.setSiteEngagementBaseScoreForUrl.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};



/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
siteEngagement.mojom.SiteEngagementDetailsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
siteEngagement.mojom.SiteEngagementDetailsProvider_GetSiteEngagementDetails_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
siteEngagement.mojom.SiteEngagementDetailsProvider_GetSiteEngagementDetails_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
siteEngagement.mojom.SiteEngagementDetailsProvider_SetSiteEngagementBaseScoreForUrl_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    siteEngagement.mojom.SiteEngagementDetailsSpec.$,
    'SiteEngagementDetails',
    [
      mojo.internal.StructField(
        'origin', 0,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'totalScore', 8,
        0,
        mojo.internal.Double,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'baseScore', 16,
        0,
        mojo.internal.Double,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'installedBonus', 24,
        0,
        mojo.internal.Double,
        0,
        false /* nullable */),
    ],
    [[0, 40],]);





/** @record */
siteEngagement.mojom.SiteEngagementDetails = class {
  constructor() {
    /** @export { !url.mojom.Url } */
    this.origin;
    /** @export { !number } */
    this.totalScore;
    /** @export { !number } */
    this.baseScore;
    /** @export { !number } */
    this.installedBonus;
  }
};




mojo.internal.Struct(
    siteEngagement.mojom.SiteEngagementDetailsProvider_GetSiteEngagementDetails_ParamsSpec.$,
    'SiteEngagementDetailsProvider_GetSiteEngagementDetails_Params',
    [
    ],
    [[0, 8],]);





/** @record */
siteEngagement.mojom.SiteEngagementDetailsProvider_GetSiteEngagementDetails_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    siteEngagement.mojom.SiteEngagementDetailsProvider_GetSiteEngagementDetails_ResponseParamsSpec.$,
    'SiteEngagementDetailsProvider_GetSiteEngagementDetails_ResponseParams',
    [
      mojo.internal.StructField(
        'info', 0,
        0,
        mojo.internal.Array(siteEngagement.mojom.SiteEngagementDetailsSpec.$, false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
siteEngagement.mojom.SiteEngagementDetailsProvider_GetSiteEngagementDetails_ResponseParams = class {
  constructor() {
    /** @export { !Array<!siteEngagement.mojom.SiteEngagementDetails> } */
    this.info;
  }
};




mojo.internal.Struct(
    siteEngagement.mojom.SiteEngagementDetailsProvider_SetSiteEngagementBaseScoreForUrl_ParamsSpec.$,
    'SiteEngagementDetailsProvider_SetSiteEngagementBaseScoreForUrl_Params',
    [
      mojo.internal.StructField(
        'url', 0,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'score', 8,
        0,
        mojo.internal.Double,
        0,
        false /* nullable */),
    ],
    [[0, 24],]);





/** @record */
siteEngagement.mojom.SiteEngagementDetailsProvider_SetSiteEngagementBaseScoreForUrl_Params = class {
  constructor() {
    /** @export { !url.mojom.Url } */
    this.url;
    /** @export { !number } */
    this.score;
  }
};


