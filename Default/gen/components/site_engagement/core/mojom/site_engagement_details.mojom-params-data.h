// components/site_engagement/core/mojom/site_engagement_details.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_SITE_ENGAGEMENT_CORE_MOJOM_SITE_ENGAGEMENT_DETAILS_MOJOM_PARAMS_DATA_H_
#define COMPONENTS_SITE_ENGAGEMENT_CORE_MOJOM_SITE_ENGAGEMENT_DETAILS_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace site_engagement {
namespace mojom {
namespace internal {

class ValidationContext;
class  SiteEngagementDetailsProvider_GetSiteEngagementDetails_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<SiteEngagementDetailsProvider_GetSiteEngagementDetails_Params_Data>;

  SiteEngagementDetailsProvider_GetSiteEngagementDetails_Params_Data();
  ~SiteEngagementDetailsProvider_GetSiteEngagementDetails_Params_Data() = delete;
};
static_assert(sizeof(SiteEngagementDetailsProvider_GetSiteEngagementDetails_Params_Data) == 8,
              "Bad sizeof(SiteEngagementDetailsProvider_GetSiteEngagementDetails_Params_Data)");
class  SiteEngagementDetailsProvider_GetSiteEngagementDetails_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<internal::SiteEngagementDetails_Data>>> info;

 private:
  friend class mojo::internal::MessageFragment<SiteEngagementDetailsProvider_GetSiteEngagementDetails_ResponseParams_Data>;

  SiteEngagementDetailsProvider_GetSiteEngagementDetails_ResponseParams_Data();
  ~SiteEngagementDetailsProvider_GetSiteEngagementDetails_ResponseParams_Data() = delete;
};
static_assert(sizeof(SiteEngagementDetailsProvider_GetSiteEngagementDetails_ResponseParams_Data) == 16,
              "Bad sizeof(SiteEngagementDetailsProvider_GetSiteEngagementDetails_ResponseParams_Data)");
class  SiteEngagementDetailsProvider_SetSiteEngagementBaseScoreForUrl_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::url::mojom::internal::Url_Data> url;
  double score;

 private:
  friend class mojo::internal::MessageFragment<SiteEngagementDetailsProvider_SetSiteEngagementBaseScoreForUrl_Params_Data>;

  SiteEngagementDetailsProvider_SetSiteEngagementBaseScoreForUrl_Params_Data();
  ~SiteEngagementDetailsProvider_SetSiteEngagementBaseScoreForUrl_Params_Data() = delete;
};
static_assert(sizeof(SiteEngagementDetailsProvider_SetSiteEngagementBaseScoreForUrl_Params_Data) == 24,
              "Bad sizeof(SiteEngagementDetailsProvider_SetSiteEngagementBaseScoreForUrl_Params_Data)");

}  // namespace internal


class SiteEngagementDetailsProvider_GetSiteEngagementDetails_ParamsDataView {
 public:
  SiteEngagementDetailsProvider_GetSiteEngagementDetails_ParamsDataView() = default;

  SiteEngagementDetailsProvider_GetSiteEngagementDetails_ParamsDataView(
      internal::SiteEngagementDetailsProvider_GetSiteEngagementDetails_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::SiteEngagementDetailsProvider_GetSiteEngagementDetails_Params_Data* data_ = nullptr;
};



class SiteEngagementDetailsProvider_GetSiteEngagementDetails_ResponseParamsDataView {
 public:
  SiteEngagementDetailsProvider_GetSiteEngagementDetails_ResponseParamsDataView() = default;

  SiteEngagementDetailsProvider_GetSiteEngagementDetails_ResponseParamsDataView(
      internal::SiteEngagementDetailsProvider_GetSiteEngagementDetails_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetInfoDataView(
      mojo::ArrayDataView<SiteEngagementDetailsDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadInfo(UserType* output) {
    
    auto* pointer = data_->info.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::site_engagement::mojom::SiteEngagementDetailsDataView>>(
        pointer, output, message_);
  }
 private:
  internal::SiteEngagementDetailsProvider_GetSiteEngagementDetails_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SiteEngagementDetailsProvider_SetSiteEngagementBaseScoreForUrl_ParamsDataView {
 public:
  SiteEngagementDetailsProvider_SetSiteEngagementBaseScoreForUrl_ParamsDataView() = default;

  SiteEngagementDetailsProvider_SetSiteEngagementBaseScoreForUrl_ParamsDataView(
      internal::SiteEngagementDetailsProvider_SetSiteEngagementBaseScoreForUrl_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetUrlDataView(
      ::url::mojom::UrlDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadUrl(UserType* output) {
    
    auto* pointer = data_->url.Get();
    return mojo::internal::Deserialize<::url::mojom::UrlDataView>(
        pointer, output, message_);
  }
  double score() const {
    return data_->score;
  }
 private:
  internal::SiteEngagementDetailsProvider_SetSiteEngagementBaseScoreForUrl_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};




inline void SiteEngagementDetailsProvider_GetSiteEngagementDetails_ResponseParamsDataView::GetInfoDataView(
    mojo::ArrayDataView<SiteEngagementDetailsDataView>* output) {
  auto pointer = data_->info.Get();
  *output = mojo::ArrayDataView<SiteEngagementDetailsDataView>(pointer, message_);
}


inline void SiteEngagementDetailsProvider_SetSiteEngagementBaseScoreForUrl_ParamsDataView::GetUrlDataView(
    ::url::mojom::UrlDataView* output) {
  auto pointer = data_->url.Get();
  *output = ::url::mojom::UrlDataView(pointer, message_);
}

}  // namespace mojom
}  // namespace site_engagement

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // COMPONENTS_SITE_ENGAGEMENT_CORE_MOJOM_SITE_ENGAGEMENT_DETAILS_MOJOM_PARAMS_DATA_H_