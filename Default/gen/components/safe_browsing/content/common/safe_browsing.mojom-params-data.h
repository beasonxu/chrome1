// components/safe_browsing/content/common/safe_browsing.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_SAFE_BROWSING_CONTENT_COMMON_SAFE_BROWSING_MOJOM_PARAMS_DATA_H_
#define COMPONENTS_SAFE_BROWSING_CONTENT_COMMON_SAFE_BROWSING_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace safe_browsing {
namespace mojom {
namespace internal {

class ValidationContext;
class  SafeBrowsing_CreateCheckerAndCheck_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t render_frame_id;
  mojo::internal::Handle_Data receiver;
  mojo::internal::Pointer<::url::mojom::internal::Url_Data> url;
  mojo::internal::Pointer<mojo::internal::String_Data> method;
  mojo::internal::Pointer<::network::mojom::internal::HttpRequestHeaders_Data> headers;
  int32_t load_flags;
  int32_t request_destination;
  uint8_t has_user_gesture : 1;
  uint8_t originated_from_service_worker : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<SafeBrowsing_CreateCheckerAndCheck_Params_Data>;

  SafeBrowsing_CreateCheckerAndCheck_Params_Data();
  ~SafeBrowsing_CreateCheckerAndCheck_Params_Data() = delete;
};
static_assert(sizeof(SafeBrowsing_CreateCheckerAndCheck_Params_Data) == 56,
              "Bad sizeof(SafeBrowsing_CreateCheckerAndCheck_Params_Data)");
class  SafeBrowsing_CreateCheckerAndCheck_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Handle_Data slow_check_notifier;
  uint8_t proceed : 1;
  uint8_t showed_interstitial : 1;
  uint8_t padfinal_[3];

 private:
  friend class mojo::internal::MessageFragment<SafeBrowsing_CreateCheckerAndCheck_ResponseParams_Data>;

  SafeBrowsing_CreateCheckerAndCheck_ResponseParams_Data();
  ~SafeBrowsing_CreateCheckerAndCheck_ResponseParams_Data() = delete;
};
static_assert(sizeof(SafeBrowsing_CreateCheckerAndCheck_ResponseParams_Data) == 16,
              "Bad sizeof(SafeBrowsing_CreateCheckerAndCheck_ResponseParams_Data)");
class  SafeBrowsing_Clone_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Handle_Data receiver;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<SafeBrowsing_Clone_Params_Data>;

  SafeBrowsing_Clone_Params_Data();
  ~SafeBrowsing_Clone_Params_Data() = delete;
};
static_assert(sizeof(SafeBrowsing_Clone_Params_Data) == 16,
              "Bad sizeof(SafeBrowsing_Clone_Params_Data)");
class  ThreatReporter_GetThreatDOMDetails_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<ThreatReporter_GetThreatDOMDetails_Params_Data>;

  ThreatReporter_GetThreatDOMDetails_Params_Data();
  ~ThreatReporter_GetThreatDOMDetails_Params_Data() = delete;
};
static_assert(sizeof(ThreatReporter_GetThreatDOMDetails_Params_Data) == 8,
              "Bad sizeof(ThreatReporter_GetThreatDOMDetails_Params_Data)");
class  ThreatReporter_GetThreatDOMDetails_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<internal::ThreatDOMDetailsNode_Data>>> nodes;

 private:
  friend class mojo::internal::MessageFragment<ThreatReporter_GetThreatDOMDetails_ResponseParams_Data>;

  ThreatReporter_GetThreatDOMDetails_ResponseParams_Data();
  ~ThreatReporter_GetThreatDOMDetails_ResponseParams_Data() = delete;
};
static_assert(sizeof(ThreatReporter_GetThreatDOMDetails_ResponseParams_Data) == 16,
              "Bad sizeof(ThreatReporter_GetThreatDOMDetails_ResponseParams_Data)");
class  PhishingDetector_StartPhishingDetection_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::url::mojom::internal::Url_Data> url;

 private:
  friend class mojo::internal::MessageFragment<PhishingDetector_StartPhishingDetection_Params_Data>;

  PhishingDetector_StartPhishingDetection_Params_Data();
  ~PhishingDetector_StartPhishingDetection_Params_Data() = delete;
};
static_assert(sizeof(PhishingDetector_StartPhishingDetection_Params_Data) == 16,
              "Bad sizeof(PhishingDetector_StartPhishingDetection_Params_Data)");
class  PhishingDetector_StartPhishingDetection_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t result;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::String_Data> request_proto;

 private:
  friend class mojo::internal::MessageFragment<PhishingDetector_StartPhishingDetection_ResponseParams_Data>;

  PhishingDetector_StartPhishingDetection_ResponseParams_Data();
  ~PhishingDetector_StartPhishingDetection_ResponseParams_Data() = delete;
};
static_assert(sizeof(PhishingDetector_StartPhishingDetection_ResponseParams_Data) == 24,
              "Bad sizeof(PhishingDetector_StartPhishingDetection_ResponseParams_Data)");
class  PhishingModelSetter_SetPhishingModel_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> model;
  mojo::internal::Pointer<::mojo_base::mojom::internal::ReadOnlyFile_Data> tflite_model;

 private:
  friend class mojo::internal::MessageFragment<PhishingModelSetter_SetPhishingModel_Params_Data>;

  PhishingModelSetter_SetPhishingModel_Params_Data();
  ~PhishingModelSetter_SetPhishingModel_Params_Data() = delete;
};
static_assert(sizeof(PhishingModelSetter_SetPhishingModel_Params_Data) == 24,
              "Bad sizeof(PhishingModelSetter_SetPhishingModel_Params_Data)");
class  PhishingModelSetter_SetPhishingFlatBufferModel_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::mojo_base::mojom::internal::ReadOnlySharedMemoryRegion_Data> region;
  mojo::internal::Pointer<::mojo_base::mojom::internal::ReadOnlyFile_Data> tflite_model;

 private:
  friend class mojo::internal::MessageFragment<PhishingModelSetter_SetPhishingFlatBufferModel_Params_Data>;

  PhishingModelSetter_SetPhishingFlatBufferModel_Params_Data();
  ~PhishingModelSetter_SetPhishingFlatBufferModel_Params_Data() = delete;
};
static_assert(sizeof(PhishingModelSetter_SetPhishingFlatBufferModel_Params_Data) == 24,
              "Bad sizeof(PhishingModelSetter_SetPhishingFlatBufferModel_Params_Data)");
class  PhishingModelSetter_SetTestObserver_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Interface_Data observer;

 private:
  friend class mojo::internal::MessageFragment<PhishingModelSetter_SetTestObserver_Params_Data>;

  PhishingModelSetter_SetTestObserver_Params_Data();
  ~PhishingModelSetter_SetTestObserver_Params_Data() = delete;
};
static_assert(sizeof(PhishingModelSetter_SetTestObserver_Params_Data) == 16,
              "Bad sizeof(PhishingModelSetter_SetTestObserver_Params_Data)");
class  PhishingModelSetter_SetTestObserver_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<PhishingModelSetter_SetTestObserver_ResponseParams_Data>;

  PhishingModelSetter_SetTestObserver_ResponseParams_Data();
  ~PhishingModelSetter_SetTestObserver_ResponseParams_Data() = delete;
};
static_assert(sizeof(PhishingModelSetter_SetTestObserver_ResponseParams_Data) == 8,
              "Bad sizeof(PhishingModelSetter_SetTestObserver_ResponseParams_Data)");
class  PhishingModelSetterTestObserver_PhishingModelUpdated_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<PhishingModelSetterTestObserver_PhishingModelUpdated_Params_Data>;

  PhishingModelSetterTestObserver_PhishingModelUpdated_Params_Data();
  ~PhishingModelSetterTestObserver_PhishingModelUpdated_Params_Data() = delete;
};
static_assert(sizeof(PhishingModelSetterTestObserver_PhishingModelUpdated_Params_Data) == 8,
              "Bad sizeof(PhishingModelSetterTestObserver_PhishingModelUpdated_Params_Data)");

}  // namespace internal


class SafeBrowsing_CreateCheckerAndCheck_ParamsDataView {
 public:
  SafeBrowsing_CreateCheckerAndCheck_ParamsDataView() = default;

  SafeBrowsing_CreateCheckerAndCheck_ParamsDataView(
      internal::SafeBrowsing_CreateCheckerAndCheck_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  int32_t render_frame_id() const {
    return data_->render_frame_id;
  }
  template <typename UserType>
  UserType TakeReceiver() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfaceRequestDataView<::safe_browsing::mojom::SafeBrowsingUrlCheckerInterfaceBase>>(
            &data_->receiver, &result, message_);
    DCHECK(ret);
    return result;
  }
  inline void GetUrlDataView(
      ::url::mojom::UrlDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadUrl(UserType* output) {
    
    auto* pointer = data_->url.Get();
    return mojo::internal::Deserialize<::url::mojom::UrlDataView>(
        pointer, output, message_);
  }
  inline void GetMethodDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadMethod(UserType* output) {
    
    auto* pointer = data_->method.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  inline void GetHeadersDataView(
      ::network::mojom::HttpRequestHeadersDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadHeaders(UserType* output) {
    
    auto* pointer = data_->headers.Get();
    return mojo::internal::Deserialize<::network::mojom::HttpRequestHeadersDataView>(
        pointer, output, message_);
  }
  int32_t load_flags() const {
    return data_->load_flags;
  }
  template <typename UserType>
  [[nodiscard]] bool ReadRequestDestination(UserType* output) const {
    auto data_value = data_->request_destination;
    return mojo::internal::Deserialize<::network::mojom::RequestDestination>(
        data_value, output);
  }
  ::network::mojom::RequestDestination request_destination() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::network::mojom::RequestDestination>(data_->request_destination));
  }
  bool has_user_gesture() const {
    return data_->has_user_gesture;
  }
  bool originated_from_service_worker() const {
    return data_->originated_from_service_worker;
  }
 private:
  internal::SafeBrowsing_CreateCheckerAndCheck_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SafeBrowsing_CreateCheckerAndCheck_ResponseParamsDataView {
 public:
  SafeBrowsing_CreateCheckerAndCheck_ResponseParamsDataView() = default;

  SafeBrowsing_CreateCheckerAndCheck_ResponseParamsDataView(
      internal::SafeBrowsing_CreateCheckerAndCheck_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeSlowCheckNotifier() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfaceRequestDataView<::safe_browsing::mojom::UrlCheckNotifierInterfaceBase>>(
            &data_->slow_check_notifier, &result, message_);
    DCHECK(ret);
    return result;
  }
  bool proceed() const {
    return data_->proceed;
  }
  bool showed_interstitial() const {
    return data_->showed_interstitial;
  }
 private:
  internal::SafeBrowsing_CreateCheckerAndCheck_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SafeBrowsing_Clone_ParamsDataView {
 public:
  SafeBrowsing_Clone_ParamsDataView() = default;

  SafeBrowsing_Clone_ParamsDataView(
      internal::SafeBrowsing_Clone_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeReceiver() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfaceRequestDataView<::safe_browsing::mojom::SafeBrowsingInterfaceBase>>(
            &data_->receiver, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::SafeBrowsing_Clone_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ThreatReporter_GetThreatDOMDetails_ParamsDataView {
 public:
  ThreatReporter_GetThreatDOMDetails_ParamsDataView() = default;

  ThreatReporter_GetThreatDOMDetails_ParamsDataView(
      internal::ThreatReporter_GetThreatDOMDetails_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ThreatReporter_GetThreatDOMDetails_Params_Data* data_ = nullptr;
};



class ThreatReporter_GetThreatDOMDetails_ResponseParamsDataView {
 public:
  ThreatReporter_GetThreatDOMDetails_ResponseParamsDataView() = default;

  ThreatReporter_GetThreatDOMDetails_ResponseParamsDataView(
      internal::ThreatReporter_GetThreatDOMDetails_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetNodesDataView(
      mojo::ArrayDataView<ThreatDOMDetailsNodeDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadNodes(UserType* output) {
    
    auto* pointer = data_->nodes.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::safe_browsing::mojom::ThreatDOMDetailsNodeDataView>>(
        pointer, output, message_);
  }
 private:
  internal::ThreatReporter_GetThreatDOMDetails_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PhishingDetector_StartPhishingDetection_ParamsDataView {
 public:
  PhishingDetector_StartPhishingDetection_ParamsDataView() = default;

  PhishingDetector_StartPhishingDetection_ParamsDataView(
      internal::PhishingDetector_StartPhishingDetection_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetUrlDataView(
      ::url::mojom::UrlDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadUrl(UserType* output) {
    
    auto* pointer = data_->url.Get();
    return mojo::internal::Deserialize<::url::mojom::UrlDataView>(
        pointer, output, message_);
  }
 private:
  internal::PhishingDetector_StartPhishingDetection_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PhishingDetector_StartPhishingDetection_ResponseParamsDataView {
 public:
  PhishingDetector_StartPhishingDetection_ResponseParamsDataView() = default;

  PhishingDetector_StartPhishingDetection_ResponseParamsDataView(
      internal::PhishingDetector_StartPhishingDetection_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadResult(UserType* output) const {
    auto data_value = data_->result;
    return mojo::internal::Deserialize<::safe_browsing::mojom::PhishingDetectorResult>(
        data_value, output);
  }
  PhishingDetectorResult result() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::safe_browsing::mojom::PhishingDetectorResult>(data_->result));
  }
  inline void GetRequestProtoDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadRequestProto(UserType* output) {
    
    auto* pointer = data_->request_proto.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::PhishingDetector_StartPhishingDetection_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PhishingModelSetter_SetPhishingModel_ParamsDataView {
 public:
  PhishingModelSetter_SetPhishingModel_ParamsDataView() = default;

  PhishingModelSetter_SetPhishingModel_ParamsDataView(
      internal::PhishingModelSetter_SetPhishingModel_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetModelDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadModel(UserType* output) {
    
    auto* pointer = data_->model.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  inline void GetTfliteModelDataView(
      ::mojo_base::mojom::ReadOnlyFileDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadTfliteModel(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::mojo_base::mojom::ReadOnlyFileDataView, UserType>(),
    "Attempting to read the optional `tflite_model` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadTfliteModel` instead "
    "of `ReadTfliteModel if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->tflite_model.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::ReadOnlyFileDataView>(
        pointer, output, message_);
  }
 private:
  internal::PhishingModelSetter_SetPhishingModel_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PhishingModelSetter_SetPhishingFlatBufferModel_ParamsDataView {
 public:
  PhishingModelSetter_SetPhishingFlatBufferModel_ParamsDataView() = default;

  PhishingModelSetter_SetPhishingFlatBufferModel_ParamsDataView(
      internal::PhishingModelSetter_SetPhishingFlatBufferModel_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetRegionDataView(
      ::mojo_base::mojom::ReadOnlySharedMemoryRegionDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadRegion(UserType* output) {
    
    auto* pointer = data_->region.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::ReadOnlySharedMemoryRegionDataView>(
        pointer, output, message_);
  }
  inline void GetTfliteModelDataView(
      ::mojo_base::mojom::ReadOnlyFileDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadTfliteModel(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::mojo_base::mojom::ReadOnlyFileDataView, UserType>(),
    "Attempting to read the optional `tflite_model` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadTfliteModel` instead "
    "of `ReadTfliteModel if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->tflite_model.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::ReadOnlyFileDataView>(
        pointer, output, message_);
  }
 private:
  internal::PhishingModelSetter_SetPhishingFlatBufferModel_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PhishingModelSetter_SetTestObserver_ParamsDataView {
 public:
  PhishingModelSetter_SetTestObserver_ParamsDataView() = default;

  PhishingModelSetter_SetTestObserver_ParamsDataView(
      internal::PhishingModelSetter_SetTestObserver_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeObserver() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfacePtrDataView<::safe_browsing::mojom::PhishingModelSetterTestObserverInterfaceBase>>(
            &data_->observer, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::PhishingModelSetter_SetTestObserver_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PhishingModelSetter_SetTestObserver_ResponseParamsDataView {
 public:
  PhishingModelSetter_SetTestObserver_ResponseParamsDataView() = default;

  PhishingModelSetter_SetTestObserver_ResponseParamsDataView(
      internal::PhishingModelSetter_SetTestObserver_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::PhishingModelSetter_SetTestObserver_ResponseParams_Data* data_ = nullptr;
};



class PhishingModelSetterTestObserver_PhishingModelUpdated_ParamsDataView {
 public:
  PhishingModelSetterTestObserver_PhishingModelUpdated_ParamsDataView() = default;

  PhishingModelSetterTestObserver_PhishingModelUpdated_ParamsDataView(
      internal::PhishingModelSetterTestObserver_PhishingModelUpdated_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::PhishingModelSetterTestObserver_PhishingModelUpdated_Params_Data* data_ = nullptr;
};


inline void SafeBrowsing_CreateCheckerAndCheck_ParamsDataView::GetUrlDataView(
    ::url::mojom::UrlDataView* output) {
  auto pointer = data_->url.Get();
  *output = ::url::mojom::UrlDataView(pointer, message_);
}
inline void SafeBrowsing_CreateCheckerAndCheck_ParamsDataView::GetMethodDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->method.Get();
  *output = mojo::StringDataView(pointer, message_);
}
inline void SafeBrowsing_CreateCheckerAndCheck_ParamsDataView::GetHeadersDataView(
    ::network::mojom::HttpRequestHeadersDataView* output) {
  auto pointer = data_->headers.Get();
  *output = ::network::mojom::HttpRequestHeadersDataView(pointer, message_);
}








inline void ThreatReporter_GetThreatDOMDetails_ResponseParamsDataView::GetNodesDataView(
    mojo::ArrayDataView<ThreatDOMDetailsNodeDataView>* output) {
  auto pointer = data_->nodes.Get();
  *output = mojo::ArrayDataView<ThreatDOMDetailsNodeDataView>(pointer, message_);
}


inline void PhishingDetector_StartPhishingDetection_ParamsDataView::GetUrlDataView(
    ::url::mojom::UrlDataView* output) {
  auto pointer = data_->url.Get();
  *output = ::url::mojom::UrlDataView(pointer, message_);
}


inline void PhishingDetector_StartPhishingDetection_ResponseParamsDataView::GetRequestProtoDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->request_proto.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void PhishingModelSetter_SetPhishingModel_ParamsDataView::GetModelDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->model.Get();
  *output = mojo::StringDataView(pointer, message_);
}
inline void PhishingModelSetter_SetPhishingModel_ParamsDataView::GetTfliteModelDataView(
    ::mojo_base::mojom::ReadOnlyFileDataView* output) {
  auto pointer = data_->tflite_model.Get();
  *output = ::mojo_base::mojom::ReadOnlyFileDataView(pointer, message_);
}


inline void PhishingModelSetter_SetPhishingFlatBufferModel_ParamsDataView::GetRegionDataView(
    ::mojo_base::mojom::ReadOnlySharedMemoryRegionDataView* output) {
  auto pointer = data_->region.Get();
  *output = ::mojo_base::mojom::ReadOnlySharedMemoryRegionDataView(pointer, message_);
}
inline void PhishingModelSetter_SetPhishingFlatBufferModel_ParamsDataView::GetTfliteModelDataView(
    ::mojo_base::mojom::ReadOnlyFileDataView* output) {
  auto pointer = data_->tflite_model.Get();
  *output = ::mojo_base::mojom::ReadOnlyFileDataView(pointer, message_);
}







}  // namespace mojom
}  // namespace safe_browsing

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // COMPONENTS_SAFE_BROWSING_CONTENT_COMMON_SAFE_BROWSING_MOJOM_PARAMS_DATA_H_