// components/safe_browsing/content/common/safe_browsing.mojom-shared.cc is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#include "components/safe_browsing/content/common/safe_browsing.mojom-shared.h"

// Used to support stream output operator for enums.
// TODO(dcheng): Consider omitting this somehow if not needed.
#include <ostream>
#include <utility>

#include "base/strings/stringprintf.h"
#include "mojo/public/cpp/bindings/lib/validate_params.h"
#include "mojo/public/cpp/bindings/lib/validation_errors.h"
#include "mojo/public/cpp/bindings/lib/validation_util.h"
#include "third_party/perfetto/include/perfetto/tracing/traced_value.h"

#include "components/safe_browsing/content/common/safe_browsing.mojom-params-data.h"
namespace safe_browsing {
namespace mojom {

static NOINLINE const char* PhishingDetectorResultToStringHelper(PhishingDetectorResult value) {
  // Defined in a helper function to ensure that Clang generates a lookup table.
  switch(value) {
    case PhishingDetectorResult::SUCCESS:
      return "SUCCESS";
    case PhishingDetectorResult::CLASSIFIER_NOT_READY:
      return "CLASSIFIER_NOT_READY";
    case PhishingDetectorResult::CANCELLED:
      return "CANCELLED";
    case PhishingDetectorResult::FORWARD_BACK_TRANSITION:
      return "FORWARD_BACK_TRANSITION";
    case PhishingDetectorResult::INVALID_SCORE:
      return "INVALID_SCORE";
    default:
      return nullptr;
  }
}

std::string PhishingDetectorResultToString(PhishingDetectorResult value) {
  const char *str = PhishingDetectorResultToStringHelper(value);
  if (!str) {
    return base::StringPrintf("Unknown PhishingDetectorResult value: %i", static_cast<int32_t>(value));
  }
  return str;
}

std::ostream& operator<<(std::ostream& os, PhishingDetectorResult value) {
  return os << PhishingDetectorResultToString(value);
}

namespace internal {


// static
bool AttributeNameValue_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 24, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const AttributeNameValue_Data* object =
      static_cast<const AttributeNameValue_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->name, 1, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams name_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->name, validation_context,
                                         &name_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->value, 2, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams value_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->value, validation_context,
                                         &value_validate_params)) {
    return false;
  }

  return true;
}

AttributeNameValue_Data::AttributeNameValue_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool ThreatDOMDetailsNode_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 88, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const ThreatDOMDetailsNode_Data* object =
      static_cast<const ThreatDOMDetailsNode_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->url, 2, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->url, validation_context))
    return false;

  if (!mojo::internal::ValidatePointerNonNullable(
          object->tag_name, 3, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams tag_name_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->tag_name, validation_context,
                                         &tag_name_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->parent, 4, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->parent, validation_context))
    return false;

  if (!mojo::internal::ValidatePointerNonNullable(
          object->children, 6, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams children_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->children, validation_context,
                                         &children_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->child_node_ids, 7, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams child_node_ids_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->child_node_ids, validation_context,
                                         &child_node_ids_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->attributes, 8, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams attributes_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->attributes, validation_context,
                                         &attributes_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidateInlinedUnion(object->child_frame_token, validation_context))
    return false;

  if (!mojo::internal::ValidatePointerNonNullable(
          object->inner_html, 10, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams inner_html_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->inner_html, validation_context,
                                         &inner_html_validate_params)) {
    return false;
  }

  return true;
}

ThreatDOMDetailsNode_Data::ThreatDOMDetailsNode_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool SafeBrowsing_CreateCheckerAndCheck_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 56, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const SafeBrowsing_CreateCheckerAndCheck_Params_Data* object =
      static_cast<const SafeBrowsing_CreateCheckerAndCheck_Params_Data*>(data);

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->receiver, 2, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->receiver,
                                                 validation_context)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->url, 3, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->url, validation_context))
    return false;

  if (!mojo::internal::ValidatePointerNonNullable(
          object->method, 4, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams method_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->method, validation_context,
                                         &method_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->headers, 5, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->headers, validation_context))
    return false;


  if (!::network::mojom::internal::RequestDestination_Data
        ::Validate(object->request_destination, validation_context))
    return false;

  return true;
}

SafeBrowsing_CreateCheckerAndCheck_Params_Data::SafeBrowsing_CreateCheckerAndCheck_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool SafeBrowsing_CreateCheckerAndCheck_ResponseParams_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const SafeBrowsing_CreateCheckerAndCheck_ResponseParams_Data* object =
      static_cast<const SafeBrowsing_CreateCheckerAndCheck_ResponseParams_Data*>(data);

  if (!mojo::internal::ValidateHandleOrInterface(object->slow_check_notifier,
                                                 validation_context)) {
    return false;
  }

  return true;
}

SafeBrowsing_CreateCheckerAndCheck_ResponseParams_Data::SafeBrowsing_CreateCheckerAndCheck_ResponseParams_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool SafeBrowsing_Clone_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const SafeBrowsing_Clone_Params_Data* object =
      static_cast<const SafeBrowsing_Clone_Params_Data*>(data);

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->receiver, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->receiver,
                                                 validation_context)) {
    return false;
  }

  return true;
}

SafeBrowsing_Clone_Params_Data::SafeBrowsing_Clone_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool ThreatReporter_GetThreatDOMDetails_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const ThreatReporter_GetThreatDOMDetails_Params_Data* object =
      static_cast<const ThreatReporter_GetThreatDOMDetails_Params_Data*>(data);

  return true;
}

ThreatReporter_GetThreatDOMDetails_Params_Data::ThreatReporter_GetThreatDOMDetails_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool ThreatReporter_GetThreatDOMDetails_ResponseParams_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const ThreatReporter_GetThreatDOMDetails_ResponseParams_Data* object =
      static_cast<const ThreatReporter_GetThreatDOMDetails_ResponseParams_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->nodes, 1, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams nodes_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->nodes, validation_context,
                                         &nodes_validate_params)) {
    return false;
  }

  return true;
}

ThreatReporter_GetThreatDOMDetails_ResponseParams_Data::ThreatReporter_GetThreatDOMDetails_ResponseParams_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool PhishingDetector_StartPhishingDetection_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const PhishingDetector_StartPhishingDetection_Params_Data* object =
      static_cast<const PhishingDetector_StartPhishingDetection_Params_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->url, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->url, validation_context))
    return false;

  return true;
}

PhishingDetector_StartPhishingDetection_Params_Data::PhishingDetector_StartPhishingDetection_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool PhishingDetector_StartPhishingDetection_ResponseParams_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 24, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const PhishingDetector_StartPhishingDetection_ResponseParams_Data* object =
      static_cast<const PhishingDetector_StartPhishingDetection_ResponseParams_Data*>(data);


  if (!::safe_browsing::mojom::internal::PhishingDetectorResult_Data
        ::Validate(object->result, validation_context))
    return false;

  if (!mojo::internal::ValidatePointerNonNullable(
          object->request_proto, 2, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams request_proto_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->request_proto, validation_context,
                                         &request_proto_validate_params)) {
    return false;
  }

  return true;
}

PhishingDetector_StartPhishingDetection_ResponseParams_Data::PhishingDetector_StartPhishingDetection_ResponseParams_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool PhishingModelSetter_SetPhishingModel_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 24, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const PhishingModelSetter_SetPhishingModel_Params_Data* object =
      static_cast<const PhishingModelSetter_SetPhishingModel_Params_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->model, 1, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams model_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->model, validation_context,
                                         &model_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidateStruct(object->tflite_model, validation_context))
    return false;

  return true;
}

PhishingModelSetter_SetPhishingModel_Params_Data::PhishingModelSetter_SetPhishingModel_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool PhishingModelSetter_SetPhishingFlatBufferModel_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 24, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const PhishingModelSetter_SetPhishingFlatBufferModel_Params_Data* object =
      static_cast<const PhishingModelSetter_SetPhishingFlatBufferModel_Params_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->region, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->region, validation_context))
    return false;

  if (!mojo::internal::ValidateStruct(object->tflite_model, validation_context))
    return false;

  return true;
}

PhishingModelSetter_SetPhishingFlatBufferModel_Params_Data::PhishingModelSetter_SetPhishingFlatBufferModel_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool PhishingModelSetter_SetTestObserver_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const PhishingModelSetter_SetTestObserver_Params_Data* object =
      static_cast<const PhishingModelSetter_SetTestObserver_Params_Data*>(data);

  if (!mojo::internal::ValidateHandleOrInterface(object->observer,
                                                 validation_context)) {
    return false;
  }

  return true;
}

PhishingModelSetter_SetTestObserver_Params_Data::PhishingModelSetter_SetTestObserver_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool PhishingModelSetter_SetTestObserver_ResponseParams_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const PhishingModelSetter_SetTestObserver_ResponseParams_Data* object =
      static_cast<const PhishingModelSetter_SetTestObserver_ResponseParams_Data*>(data);

  return true;
}

PhishingModelSetter_SetTestObserver_ResponseParams_Data::PhishingModelSetter_SetTestObserver_ResponseParams_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool PhishingModelSetterTestObserver_PhishingModelUpdated_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const PhishingModelSetterTestObserver_PhishingModelUpdated_Params_Data* object =
      static_cast<const PhishingModelSetterTestObserver_PhishingModelUpdated_Params_Data*>(data);

  return true;
}

PhishingModelSetterTestObserver_PhishingModelUpdated_Params_Data::PhishingModelSetterTestObserver_PhishingModelUpdated_Params_Data()
    : header_({sizeof(*this), 0}) {}

}  // namespace internal
}  // namespace mojom
}  // namespace safe_browsing

namespace perfetto {

// static
void TraceFormatTraits<::safe_browsing::mojom::PhishingDetectorResult>::WriteIntoTrace(
   perfetto::TracedValue context, ::safe_browsing::mojom::PhishingDetectorResult value) {
  return std::move(context).WriteString(::safe_browsing::mojom::PhishingDetectorResultToString(value));
}

} // namespace perfetto