// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/synced_notification_specifics.proto

#include "components/sync/protocol/synced_notification_specifics.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace sync_pb {
PROTOBUF_CONSTEXPR SyncedNotificationSpecifics::SyncedNotificationSpecifics(
    ::_pbi::ConstantInitialized){}
struct SyncedNotificationSpecificsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncedNotificationSpecificsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncedNotificationSpecificsDefaultTypeInternal() {}
  union {
    SyncedNotificationSpecifics _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT_WITH_PTR PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncedNotificationSpecificsDefaultTypeInternal _SyncedNotificationSpecifics_default_instance_;
}  // namespace sync_pb
namespace sync_pb {

// ===================================================================

class SyncedNotificationSpecifics::_Internal {
 public:
};

SyncedNotificationSpecifics::SyncedNotificationSpecifics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:sync_pb.SyncedNotificationSpecifics)
}
SyncedNotificationSpecifics::SyncedNotificationSpecifics(const SyncedNotificationSpecifics& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite() {
  _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sync_pb.SyncedNotificationSpecifics)
}

inline void SyncedNotificationSpecifics::SharedCtor() {
}

SyncedNotificationSpecifics::~SyncedNotificationSpecifics() {
  // @@protoc_insertion_point(destructor:sync_pb.SyncedNotificationSpecifics)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<std::string>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncedNotificationSpecifics::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SyncedNotificationSpecifics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SyncedNotificationSpecifics::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.SyncedNotificationSpecifics)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<std::string>();
}

const char* SyncedNotificationSpecifics::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<std::string>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncedNotificationSpecifics::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sync_pb.SyncedNotificationSpecifics)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sync_pb.SyncedNotificationSpecifics)
  return target;
}

size_t SyncedNotificationSpecifics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.SyncedNotificationSpecifics)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size();
  }
  int cached_size = ::_pbi::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SyncedNotificationSpecifics::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const SyncedNotificationSpecifics*>(
      &from));
}

void SyncedNotificationSpecifics::MergeFrom(const SyncedNotificationSpecifics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.SyncedNotificationSpecifics)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void SyncedNotificationSpecifics::CopyFrom(const SyncedNotificationSpecifics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.SyncedNotificationSpecifics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncedNotificationSpecifics::IsInitialized() const {
  return true;
}

void SyncedNotificationSpecifics::InternalSwap(SyncedNotificationSpecifics* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

std::string SyncedNotificationSpecifics::GetTypeName() const {
  return "sync_pb.SyncedNotificationSpecifics";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sync_pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::sync_pb::SyncedNotificationSpecifics*
Arena::CreateMaybeMessage< ::sync_pb::SyncedNotificationSpecifics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sync_pb::SyncedNotificationSpecifics >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
