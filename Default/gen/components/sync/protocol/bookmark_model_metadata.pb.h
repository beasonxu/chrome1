// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/bookmark_model_metadata.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_components_2fsync_2fprotocol_2fbookmark_5fmodel_5fmetadata_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_components_2fsync_2fprotocol_2fbookmark_5fmodel_5fmetadata_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "components/sync/protocol/model_type_state.pb.h"
#include "components/sync/protocol/entity_metadata.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_components_2fsync_2fprotocol_2fbookmark_5fmodel_5fmetadata_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_components_2fsync_2fprotocol_2fbookmark_5fmodel_5fmetadata_2eproto {
  static const uint32_t offsets[];
};
namespace sync_pb {
class BookmarkMetadata;
struct BookmarkMetadataDefaultTypeInternal;
extern BookmarkMetadataDefaultTypeInternal _BookmarkMetadata_default_instance_;
class BookmarkModelMetadata;
struct BookmarkModelMetadataDefaultTypeInternal;
extern BookmarkModelMetadataDefaultTypeInternal _BookmarkModelMetadata_default_instance_;
}  // namespace sync_pb
PROTOBUF_NAMESPACE_OPEN
template<> ::sync_pb::BookmarkMetadata* Arena::CreateMaybeMessage<::sync_pb::BookmarkMetadata>(Arena*);
template<> ::sync_pb::BookmarkModelMetadata* Arena::CreateMaybeMessage<::sync_pb::BookmarkModelMetadata>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace sync_pb {

// ===================================================================

class BookmarkMetadata final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:sync_pb.BookmarkMetadata) */ {
 public:
  inline BookmarkMetadata() : BookmarkMetadata(nullptr) {}
  ~BookmarkMetadata() override;
  explicit PROTOBUF_CONSTEXPR BookmarkMetadata(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BookmarkMetadata(const BookmarkMetadata& from);
  BookmarkMetadata(BookmarkMetadata&& from) noexcept
    : BookmarkMetadata() {
    *this = ::std::move(from);
  }

  inline BookmarkMetadata& operator=(const BookmarkMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline BookmarkMetadata& operator=(BookmarkMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const BookmarkMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const BookmarkMetadata* internal_default_instance() {
    return reinterpret_cast<const BookmarkMetadata*>(
               &_BookmarkMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BookmarkMetadata& a, BookmarkMetadata& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(BookmarkMetadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BookmarkMetadata* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BookmarkMetadata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BookmarkMetadata>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const BookmarkMetadata& from);
  void MergeFrom(const BookmarkMetadata& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BookmarkMetadata* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sync_pb.BookmarkMetadata";
  }
  protected:
  explicit BookmarkMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMetadataFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // optional .sync_pb.EntityMetadata metadata = 2;
  bool has_metadata() const;
  private:
  bool _internal_has_metadata() const;
  public:
  void clear_metadata();
  const ::sync_pb::EntityMetadata& metadata() const;
  PROTOBUF_NODISCARD ::sync_pb::EntityMetadata* release_metadata();
  ::sync_pb::EntityMetadata* mutable_metadata();
  void set_allocated_metadata(::sync_pb::EntityMetadata* metadata);
  private:
  const ::sync_pb::EntityMetadata& _internal_metadata() const;
  ::sync_pb::EntityMetadata* _internal_mutable_metadata();
  public:
  void unsafe_arena_set_allocated_metadata(
      ::sync_pb::EntityMetadata* metadata);
  ::sync_pb::EntityMetadata* unsafe_arena_release_metadata();

  // optional int64 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  int64_t id() const;
  void set_id(int64_t value);
  private:
  int64_t _internal_id() const;
  void _internal_set_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:sync_pb.BookmarkMetadata)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::sync_pb::EntityMetadata* metadata_;
  int64_t id_;
  friend struct ::TableStruct_components_2fsync_2fprotocol_2fbookmark_5fmodel_5fmetadata_2eproto;
};
// -------------------------------------------------------------------

class BookmarkModelMetadata final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:sync_pb.BookmarkModelMetadata) */ {
 public:
  inline BookmarkModelMetadata() : BookmarkModelMetadata(nullptr) {}
  ~BookmarkModelMetadata() override;
  explicit PROTOBUF_CONSTEXPR BookmarkModelMetadata(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BookmarkModelMetadata(const BookmarkModelMetadata& from);
  BookmarkModelMetadata(BookmarkModelMetadata&& from) noexcept
    : BookmarkModelMetadata() {
    *this = ::std::move(from);
  }

  inline BookmarkModelMetadata& operator=(const BookmarkModelMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline BookmarkModelMetadata& operator=(BookmarkModelMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const BookmarkModelMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const BookmarkModelMetadata* internal_default_instance() {
    return reinterpret_cast<const BookmarkModelMetadata*>(
               &_BookmarkModelMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(BookmarkModelMetadata& a, BookmarkModelMetadata& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(BookmarkModelMetadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BookmarkModelMetadata* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BookmarkModelMetadata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BookmarkModelMetadata>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const BookmarkModelMetadata& from);
  void MergeFrom(const BookmarkModelMetadata& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BookmarkModelMetadata* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sync_pb.BookmarkModelMetadata";
  }
  protected:
  explicit BookmarkModelMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBookmarksMetadataFieldNumber = 2,
    kModelTypeStateFieldNumber = 1,
    kNumIgnoredUpdatesDueToMissingParentFieldNumber = 7,
    kMaxVersionAmongIgnoredUpdatesDueToMissingParentFieldNumber = 8,
    kBookmarksHierarchyFieldsReuploadedFieldNumber = 6,
  };
  // repeated .sync_pb.BookmarkMetadata bookmarks_metadata = 2;
  int bookmarks_metadata_size() const;
  private:
  int _internal_bookmarks_metadata_size() const;
  public:
  void clear_bookmarks_metadata();
  ::sync_pb::BookmarkMetadata* mutable_bookmarks_metadata(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sync_pb::BookmarkMetadata >*
      mutable_bookmarks_metadata();
  private:
  const ::sync_pb::BookmarkMetadata& _internal_bookmarks_metadata(int index) const;
  ::sync_pb::BookmarkMetadata* _internal_add_bookmarks_metadata();
  public:
  const ::sync_pb::BookmarkMetadata& bookmarks_metadata(int index) const;
  ::sync_pb::BookmarkMetadata* add_bookmarks_metadata();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sync_pb::BookmarkMetadata >&
      bookmarks_metadata() const;

  // optional .sync_pb.ModelTypeState model_type_state = 1;
  bool has_model_type_state() const;
  private:
  bool _internal_has_model_type_state() const;
  public:
  void clear_model_type_state();
  const ::sync_pb::ModelTypeState& model_type_state() const;
  PROTOBUF_NODISCARD ::sync_pb::ModelTypeState* release_model_type_state();
  ::sync_pb::ModelTypeState* mutable_model_type_state();
  void set_allocated_model_type_state(::sync_pb::ModelTypeState* model_type_state);
  private:
  const ::sync_pb::ModelTypeState& _internal_model_type_state() const;
  ::sync_pb::ModelTypeState* _internal_mutable_model_type_state();
  public:
  void unsafe_arena_set_allocated_model_type_state(
      ::sync_pb::ModelTypeState* model_type_state);
  ::sync_pb::ModelTypeState* unsafe_arena_release_model_type_state();

  // optional int64 num_ignored_updates_due_to_missing_parent = 7;
  bool has_num_ignored_updates_due_to_missing_parent() const;
  private:
  bool _internal_has_num_ignored_updates_due_to_missing_parent() const;
  public:
  void clear_num_ignored_updates_due_to_missing_parent();
  int64_t num_ignored_updates_due_to_missing_parent() const;
  void set_num_ignored_updates_due_to_missing_parent(int64_t value);
  private:
  int64_t _internal_num_ignored_updates_due_to_missing_parent() const;
  void _internal_set_num_ignored_updates_due_to_missing_parent(int64_t value);
  public:

  // optional int64 max_version_among_ignored_updates_due_to_missing_parent = 8;
  bool has_max_version_among_ignored_updates_due_to_missing_parent() const;
  private:
  bool _internal_has_max_version_among_ignored_updates_due_to_missing_parent() const;
  public:
  void clear_max_version_among_ignored_updates_due_to_missing_parent();
  int64_t max_version_among_ignored_updates_due_to_missing_parent() const;
  void set_max_version_among_ignored_updates_due_to_missing_parent(int64_t value);
  private:
  int64_t _internal_max_version_among_ignored_updates_due_to_missing_parent() const;
  void _internal_set_max_version_among_ignored_updates_due_to_missing_parent(int64_t value);
  public:

  // optional bool bookmarks_hierarchy_fields_reuploaded = 6;
  bool has_bookmarks_hierarchy_fields_reuploaded() const;
  private:
  bool _internal_has_bookmarks_hierarchy_fields_reuploaded() const;
  public:
  void clear_bookmarks_hierarchy_fields_reuploaded();
  bool bookmarks_hierarchy_fields_reuploaded() const;
  void set_bookmarks_hierarchy_fields_reuploaded(bool value);
  private:
  bool _internal_bookmarks_hierarchy_fields_reuploaded() const;
  void _internal_set_bookmarks_hierarchy_fields_reuploaded(bool value);
  public:

  // @@protoc_insertion_point(class_scope:sync_pb.BookmarkModelMetadata)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sync_pb::BookmarkMetadata > bookmarks_metadata_;
  ::sync_pb::ModelTypeState* model_type_state_;
  int64_t num_ignored_updates_due_to_missing_parent_;
  int64_t max_version_among_ignored_updates_due_to_missing_parent_;
  bool bookmarks_hierarchy_fields_reuploaded_;
  friend struct ::TableStruct_components_2fsync_2fprotocol_2fbookmark_5fmodel_5fmetadata_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BookmarkMetadata

// optional int64 id = 1;
inline bool BookmarkMetadata::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool BookmarkMetadata::has_id() const {
  return _internal_has_id();
}
inline void BookmarkMetadata::clear_id() {
  id_ = int64_t{0};
  _has_bits_[0] &= ~0x00000002u;
}
inline int64_t BookmarkMetadata::_internal_id() const {
  return id_;
}
inline int64_t BookmarkMetadata::id() const {
  // @@protoc_insertion_point(field_get:sync_pb.BookmarkMetadata.id)
  return _internal_id();
}
inline void BookmarkMetadata::_internal_set_id(int64_t value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
}
inline void BookmarkMetadata::set_id(int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:sync_pb.BookmarkMetadata.id)
}

// optional .sync_pb.EntityMetadata metadata = 2;
inline bool BookmarkMetadata::_internal_has_metadata() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || metadata_ != nullptr);
  return value;
}
inline bool BookmarkMetadata::has_metadata() const {
  return _internal_has_metadata();
}
inline const ::sync_pb::EntityMetadata& BookmarkMetadata::_internal_metadata() const {
  const ::sync_pb::EntityMetadata* p = metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::sync_pb::EntityMetadata&>(
      ::sync_pb::_EntityMetadata_default_instance_);
}
inline const ::sync_pb::EntityMetadata& BookmarkMetadata::metadata() const {
  // @@protoc_insertion_point(field_get:sync_pb.BookmarkMetadata.metadata)
  return _internal_metadata();
}
inline void BookmarkMetadata::unsafe_arena_set_allocated_metadata(
    ::sync_pb::EntityMetadata* metadata) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(metadata_);
  }
  metadata_ = metadata;
  if (metadata) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sync_pb.BookmarkMetadata.metadata)
}
inline ::sync_pb::EntityMetadata* BookmarkMetadata::release_metadata() {
  _has_bits_[0] &= ~0x00000001u;
  ::sync_pb::EntityMetadata* temp = metadata_;
  metadata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::sync_pb::EntityMetadata* BookmarkMetadata::unsafe_arena_release_metadata() {
  // @@protoc_insertion_point(field_release:sync_pb.BookmarkMetadata.metadata)
  _has_bits_[0] &= ~0x00000001u;
  ::sync_pb::EntityMetadata* temp = metadata_;
  metadata_ = nullptr;
  return temp;
}
inline ::sync_pb::EntityMetadata* BookmarkMetadata::_internal_mutable_metadata() {
  _has_bits_[0] |= 0x00000001u;
  if (metadata_ == nullptr) {
    auto* p = CreateMaybeMessage<::sync_pb::EntityMetadata>(GetArenaForAllocation());
    metadata_ = p;
  }
  return metadata_;
}
inline ::sync_pb::EntityMetadata* BookmarkMetadata::mutable_metadata() {
  ::sync_pb::EntityMetadata* _msg = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:sync_pb.BookmarkMetadata.metadata)
  return _msg;
}
inline void BookmarkMetadata::set_allocated_metadata(::sync_pb::EntityMetadata* metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(metadata_);
  }
  if (metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(metadata));
    if (message_arena != submessage_arena) {
      metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, metadata, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  metadata_ = metadata;
  // @@protoc_insertion_point(field_set_allocated:sync_pb.BookmarkMetadata.metadata)
}

// -------------------------------------------------------------------

// BookmarkModelMetadata

// optional .sync_pb.ModelTypeState model_type_state = 1;
inline bool BookmarkModelMetadata::_internal_has_model_type_state() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || model_type_state_ != nullptr);
  return value;
}
inline bool BookmarkModelMetadata::has_model_type_state() const {
  return _internal_has_model_type_state();
}
inline const ::sync_pb::ModelTypeState& BookmarkModelMetadata::_internal_model_type_state() const {
  const ::sync_pb::ModelTypeState* p = model_type_state_;
  return p != nullptr ? *p : reinterpret_cast<const ::sync_pb::ModelTypeState&>(
      ::sync_pb::_ModelTypeState_default_instance_);
}
inline const ::sync_pb::ModelTypeState& BookmarkModelMetadata::model_type_state() const {
  // @@protoc_insertion_point(field_get:sync_pb.BookmarkModelMetadata.model_type_state)
  return _internal_model_type_state();
}
inline void BookmarkModelMetadata::unsafe_arena_set_allocated_model_type_state(
    ::sync_pb::ModelTypeState* model_type_state) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(model_type_state_);
  }
  model_type_state_ = model_type_state;
  if (model_type_state) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sync_pb.BookmarkModelMetadata.model_type_state)
}
inline ::sync_pb::ModelTypeState* BookmarkModelMetadata::release_model_type_state() {
  _has_bits_[0] &= ~0x00000001u;
  ::sync_pb::ModelTypeState* temp = model_type_state_;
  model_type_state_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::sync_pb::ModelTypeState* BookmarkModelMetadata::unsafe_arena_release_model_type_state() {
  // @@protoc_insertion_point(field_release:sync_pb.BookmarkModelMetadata.model_type_state)
  _has_bits_[0] &= ~0x00000001u;
  ::sync_pb::ModelTypeState* temp = model_type_state_;
  model_type_state_ = nullptr;
  return temp;
}
inline ::sync_pb::ModelTypeState* BookmarkModelMetadata::_internal_mutable_model_type_state() {
  _has_bits_[0] |= 0x00000001u;
  if (model_type_state_ == nullptr) {
    auto* p = CreateMaybeMessage<::sync_pb::ModelTypeState>(GetArenaForAllocation());
    model_type_state_ = p;
  }
  return model_type_state_;
}
inline ::sync_pb::ModelTypeState* BookmarkModelMetadata::mutable_model_type_state() {
  ::sync_pb::ModelTypeState* _msg = _internal_mutable_model_type_state();
  // @@protoc_insertion_point(field_mutable:sync_pb.BookmarkModelMetadata.model_type_state)
  return _msg;
}
inline void BookmarkModelMetadata::set_allocated_model_type_state(::sync_pb::ModelTypeState* model_type_state) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(model_type_state_);
  }
  if (model_type_state) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(model_type_state));
    if (message_arena != submessage_arena) {
      model_type_state = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, model_type_state, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  model_type_state_ = model_type_state;
  // @@protoc_insertion_point(field_set_allocated:sync_pb.BookmarkModelMetadata.model_type_state)
}

// repeated .sync_pb.BookmarkMetadata bookmarks_metadata = 2;
inline int BookmarkModelMetadata::_internal_bookmarks_metadata_size() const {
  return bookmarks_metadata_.size();
}
inline int BookmarkModelMetadata::bookmarks_metadata_size() const {
  return _internal_bookmarks_metadata_size();
}
inline void BookmarkModelMetadata::clear_bookmarks_metadata() {
  bookmarks_metadata_.Clear();
}
inline ::sync_pb::BookmarkMetadata* BookmarkModelMetadata::mutable_bookmarks_metadata(int index) {
  // @@protoc_insertion_point(field_mutable:sync_pb.BookmarkModelMetadata.bookmarks_metadata)
  return bookmarks_metadata_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sync_pb::BookmarkMetadata >*
BookmarkModelMetadata::mutable_bookmarks_metadata() {
  // @@protoc_insertion_point(field_mutable_list:sync_pb.BookmarkModelMetadata.bookmarks_metadata)
  return &bookmarks_metadata_;
}
inline const ::sync_pb::BookmarkMetadata& BookmarkModelMetadata::_internal_bookmarks_metadata(int index) const {
  return bookmarks_metadata_.Get(index);
}
inline const ::sync_pb::BookmarkMetadata& BookmarkModelMetadata::bookmarks_metadata(int index) const {
  // @@protoc_insertion_point(field_get:sync_pb.BookmarkModelMetadata.bookmarks_metadata)
  return _internal_bookmarks_metadata(index);
}
inline ::sync_pb::BookmarkMetadata* BookmarkModelMetadata::_internal_add_bookmarks_metadata() {
  return bookmarks_metadata_.Add();
}
inline ::sync_pb::BookmarkMetadata* BookmarkModelMetadata::add_bookmarks_metadata() {
  ::sync_pb::BookmarkMetadata* _add = _internal_add_bookmarks_metadata();
  // @@protoc_insertion_point(field_add:sync_pb.BookmarkModelMetadata.bookmarks_metadata)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sync_pb::BookmarkMetadata >&
BookmarkModelMetadata::bookmarks_metadata() const {
  // @@protoc_insertion_point(field_list:sync_pb.BookmarkModelMetadata.bookmarks_metadata)
  return bookmarks_metadata_;
}

// optional bool bookmarks_hierarchy_fields_reuploaded = 6;
inline bool BookmarkModelMetadata::_internal_has_bookmarks_hierarchy_fields_reuploaded() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool BookmarkModelMetadata::has_bookmarks_hierarchy_fields_reuploaded() const {
  return _internal_has_bookmarks_hierarchy_fields_reuploaded();
}
inline void BookmarkModelMetadata::clear_bookmarks_hierarchy_fields_reuploaded() {
  bookmarks_hierarchy_fields_reuploaded_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool BookmarkModelMetadata::_internal_bookmarks_hierarchy_fields_reuploaded() const {
  return bookmarks_hierarchy_fields_reuploaded_;
}
inline bool BookmarkModelMetadata::bookmarks_hierarchy_fields_reuploaded() const {
  // @@protoc_insertion_point(field_get:sync_pb.BookmarkModelMetadata.bookmarks_hierarchy_fields_reuploaded)
  return _internal_bookmarks_hierarchy_fields_reuploaded();
}
inline void BookmarkModelMetadata::_internal_set_bookmarks_hierarchy_fields_reuploaded(bool value) {
  _has_bits_[0] |= 0x00000008u;
  bookmarks_hierarchy_fields_reuploaded_ = value;
}
inline void BookmarkModelMetadata::set_bookmarks_hierarchy_fields_reuploaded(bool value) {
  _internal_set_bookmarks_hierarchy_fields_reuploaded(value);
  // @@protoc_insertion_point(field_set:sync_pb.BookmarkModelMetadata.bookmarks_hierarchy_fields_reuploaded)
}

// optional int64 num_ignored_updates_due_to_missing_parent = 7;
inline bool BookmarkModelMetadata::_internal_has_num_ignored_updates_due_to_missing_parent() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool BookmarkModelMetadata::has_num_ignored_updates_due_to_missing_parent() const {
  return _internal_has_num_ignored_updates_due_to_missing_parent();
}
inline void BookmarkModelMetadata::clear_num_ignored_updates_due_to_missing_parent() {
  num_ignored_updates_due_to_missing_parent_ = int64_t{0};
  _has_bits_[0] &= ~0x00000002u;
}
inline int64_t BookmarkModelMetadata::_internal_num_ignored_updates_due_to_missing_parent() const {
  return num_ignored_updates_due_to_missing_parent_;
}
inline int64_t BookmarkModelMetadata::num_ignored_updates_due_to_missing_parent() const {
  // @@protoc_insertion_point(field_get:sync_pb.BookmarkModelMetadata.num_ignored_updates_due_to_missing_parent)
  return _internal_num_ignored_updates_due_to_missing_parent();
}
inline void BookmarkModelMetadata::_internal_set_num_ignored_updates_due_to_missing_parent(int64_t value) {
  _has_bits_[0] |= 0x00000002u;
  num_ignored_updates_due_to_missing_parent_ = value;
}
inline void BookmarkModelMetadata::set_num_ignored_updates_due_to_missing_parent(int64_t value) {
  _internal_set_num_ignored_updates_due_to_missing_parent(value);
  // @@protoc_insertion_point(field_set:sync_pb.BookmarkModelMetadata.num_ignored_updates_due_to_missing_parent)
}

// optional int64 max_version_among_ignored_updates_due_to_missing_parent = 8;
inline bool BookmarkModelMetadata::_internal_has_max_version_among_ignored_updates_due_to_missing_parent() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool BookmarkModelMetadata::has_max_version_among_ignored_updates_due_to_missing_parent() const {
  return _internal_has_max_version_among_ignored_updates_due_to_missing_parent();
}
inline void BookmarkModelMetadata::clear_max_version_among_ignored_updates_due_to_missing_parent() {
  max_version_among_ignored_updates_due_to_missing_parent_ = int64_t{0};
  _has_bits_[0] &= ~0x00000004u;
}
inline int64_t BookmarkModelMetadata::_internal_max_version_among_ignored_updates_due_to_missing_parent() const {
  return max_version_among_ignored_updates_due_to_missing_parent_;
}
inline int64_t BookmarkModelMetadata::max_version_among_ignored_updates_due_to_missing_parent() const {
  // @@protoc_insertion_point(field_get:sync_pb.BookmarkModelMetadata.max_version_among_ignored_updates_due_to_missing_parent)
  return _internal_max_version_among_ignored_updates_due_to_missing_parent();
}
inline void BookmarkModelMetadata::_internal_set_max_version_among_ignored_updates_due_to_missing_parent(int64_t value) {
  _has_bits_[0] |= 0x00000004u;
  max_version_among_ignored_updates_due_to_missing_parent_ = value;
}
inline void BookmarkModelMetadata::set_max_version_among_ignored_updates_due_to_missing_parent(int64_t value) {
  _internal_set_max_version_among_ignored_updates_due_to_missing_parent(value);
  // @@protoc_insertion_point(field_set:sync_pb.BookmarkModelMetadata.max_version_among_ignored_updates_due_to_missing_parent)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sync_pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_components_2fsync_2fprotocol_2fbookmark_5fmodel_5fmetadata_2eproto
