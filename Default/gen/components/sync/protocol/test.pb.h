// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/test.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_components_2fsync_2fprotocol_2ftest_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_components_2fsync_2fprotocol_2ftest_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_components_2fsync_2fprotocol_2ftest_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_components_2fsync_2fprotocol_2ftest_2eproto {
  static const uint32_t offsets[];
};
namespace sync_pb {
class UnknownFieldsTestA;
struct UnknownFieldsTestADefaultTypeInternal;
extern UnknownFieldsTestADefaultTypeInternal _UnknownFieldsTestA_default_instance_;
class UnknownFieldsTestB;
struct UnknownFieldsTestBDefaultTypeInternal;
extern UnknownFieldsTestBDefaultTypeInternal _UnknownFieldsTestB_default_instance_;
}  // namespace sync_pb
PROTOBUF_NAMESPACE_OPEN
template<> ::sync_pb::UnknownFieldsTestA* Arena::CreateMaybeMessage<::sync_pb::UnknownFieldsTestA>(Arena*);
template<> ::sync_pb::UnknownFieldsTestB* Arena::CreateMaybeMessage<::sync_pb::UnknownFieldsTestB>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace sync_pb {

// ===================================================================

class UnknownFieldsTestA final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:sync_pb.UnknownFieldsTestA) */ {
 public:
  inline UnknownFieldsTestA() : UnknownFieldsTestA(nullptr) {}
  ~UnknownFieldsTestA() override;
  explicit PROTOBUF_CONSTEXPR UnknownFieldsTestA(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UnknownFieldsTestA(const UnknownFieldsTestA& from);
  UnknownFieldsTestA(UnknownFieldsTestA&& from) noexcept
    : UnknownFieldsTestA() {
    *this = ::std::move(from);
  }

  inline UnknownFieldsTestA& operator=(const UnknownFieldsTestA& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnknownFieldsTestA& operator=(UnknownFieldsTestA&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const UnknownFieldsTestA& default_instance() {
    return *internal_default_instance();
  }
  static inline const UnknownFieldsTestA* internal_default_instance() {
    return reinterpret_cast<const UnknownFieldsTestA*>(
               &_UnknownFieldsTestA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(UnknownFieldsTestA& a, UnknownFieldsTestA& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(UnknownFieldsTestA* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnknownFieldsTestA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UnknownFieldsTestA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UnknownFieldsTestA>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const UnknownFieldsTestA& from);
  void MergeFrom(const UnknownFieldsTestA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UnknownFieldsTestA* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sync_pb.UnknownFieldsTestA";
  }
  protected:
  explicit UnknownFieldsTestA(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFooFieldNumber = 1,
  };
  // required bool foo = 1;
  bool has_foo() const;
  private:
  bool _internal_has_foo() const;
  public:
  void clear_foo();
  bool foo() const;
  void set_foo(bool value);
  private:
  bool _internal_foo() const;
  void _internal_set_foo(bool value);
  public:

  // @@protoc_insertion_point(class_scope:sync_pb.UnknownFieldsTestA)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool foo_;
  friend struct ::TableStruct_components_2fsync_2fprotocol_2ftest_2eproto;
};
// -------------------------------------------------------------------

class UnknownFieldsTestB final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:sync_pb.UnknownFieldsTestB) */ {
 public:
  inline UnknownFieldsTestB() : UnknownFieldsTestB(nullptr) {}
  ~UnknownFieldsTestB() override;
  explicit PROTOBUF_CONSTEXPR UnknownFieldsTestB(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UnknownFieldsTestB(const UnknownFieldsTestB& from);
  UnknownFieldsTestB(UnknownFieldsTestB&& from) noexcept
    : UnknownFieldsTestB() {
    *this = ::std::move(from);
  }

  inline UnknownFieldsTestB& operator=(const UnknownFieldsTestB& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnknownFieldsTestB& operator=(UnknownFieldsTestB&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const UnknownFieldsTestB& default_instance() {
    return *internal_default_instance();
  }
  static inline const UnknownFieldsTestB* internal_default_instance() {
    return reinterpret_cast<const UnknownFieldsTestB*>(
               &_UnknownFieldsTestB_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(UnknownFieldsTestB& a, UnknownFieldsTestB& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(UnknownFieldsTestB* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnknownFieldsTestB* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UnknownFieldsTestB* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UnknownFieldsTestB>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const UnknownFieldsTestB& from);
  void MergeFrom(const UnknownFieldsTestB& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UnknownFieldsTestB* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sync_pb.UnknownFieldsTestB";
  }
  protected:
  explicit UnknownFieldsTestB(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFooFieldNumber = 1,
    kBarFieldNumber = 2,
  };
  // required bool foo = 1;
  bool has_foo() const;
  private:
  bool _internal_has_foo() const;
  public:
  void clear_foo();
  bool foo() const;
  void set_foo(bool value);
  private:
  bool _internal_foo() const;
  void _internal_set_foo(bool value);
  public:

  // required bool bar = 2;
  bool has_bar() const;
  private:
  bool _internal_has_bar() const;
  public:
  void clear_bar();
  bool bar() const;
  void set_bar(bool value);
  private:
  bool _internal_bar() const;
  void _internal_set_bar(bool value);
  public:

  // @@protoc_insertion_point(class_scope:sync_pb.UnknownFieldsTestB)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool foo_;
  bool bar_;
  friend struct ::TableStruct_components_2fsync_2fprotocol_2ftest_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UnknownFieldsTestA

// required bool foo = 1;
inline bool UnknownFieldsTestA::_internal_has_foo() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool UnknownFieldsTestA::has_foo() const {
  return _internal_has_foo();
}
inline void UnknownFieldsTestA::clear_foo() {
  foo_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool UnknownFieldsTestA::_internal_foo() const {
  return foo_;
}
inline bool UnknownFieldsTestA::foo() const {
  // @@protoc_insertion_point(field_get:sync_pb.UnknownFieldsTestA.foo)
  return _internal_foo();
}
inline void UnknownFieldsTestA::_internal_set_foo(bool value) {
  _has_bits_[0] |= 0x00000001u;
  foo_ = value;
}
inline void UnknownFieldsTestA::set_foo(bool value) {
  _internal_set_foo(value);
  // @@protoc_insertion_point(field_set:sync_pb.UnknownFieldsTestA.foo)
}

// -------------------------------------------------------------------

// UnknownFieldsTestB

// required bool foo = 1;
inline bool UnknownFieldsTestB::_internal_has_foo() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool UnknownFieldsTestB::has_foo() const {
  return _internal_has_foo();
}
inline void UnknownFieldsTestB::clear_foo() {
  foo_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool UnknownFieldsTestB::_internal_foo() const {
  return foo_;
}
inline bool UnknownFieldsTestB::foo() const {
  // @@protoc_insertion_point(field_get:sync_pb.UnknownFieldsTestB.foo)
  return _internal_foo();
}
inline void UnknownFieldsTestB::_internal_set_foo(bool value) {
  _has_bits_[0] |= 0x00000001u;
  foo_ = value;
}
inline void UnknownFieldsTestB::set_foo(bool value) {
  _internal_set_foo(value);
  // @@protoc_insertion_point(field_set:sync_pb.UnknownFieldsTestB.foo)
}

// required bool bar = 2;
inline bool UnknownFieldsTestB::_internal_has_bar() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool UnknownFieldsTestB::has_bar() const {
  return _internal_has_bar();
}
inline void UnknownFieldsTestB::clear_bar() {
  bar_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool UnknownFieldsTestB::_internal_bar() const {
  return bar_;
}
inline bool UnknownFieldsTestB::bar() const {
  // @@protoc_insertion_point(field_get:sync_pb.UnknownFieldsTestB.bar)
  return _internal_bar();
}
inline void UnknownFieldsTestB::_internal_set_bar(bool value) {
  _has_bits_[0] |= 0x00000002u;
  bar_ = value;
}
inline void UnknownFieldsTestB::set_bar(bool value) {
  _internal_set_bar(value);
  // @@protoc_insertion_point(field_set:sync_pb.UnknownFieldsTestB.bar)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sync_pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_components_2fsync_2fprotocol_2ftest_2eproto
