// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/segmentation_platform/public/proto/aggregation.proto

#include "components/segmentation_platform/public/proto/aggregation.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace segmentation_platform {
namespace proto {
}  // namespace proto
}  // namespace segmentation_platform
namespace segmentation_platform {
namespace proto {
bool Aggregation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> Aggregation_strings[13] = {};

static const char Aggregation_names[] =
  "BUCKETED_COUNT"
  "BUCKETED_COUNT_BOOLEAN"
  "BUCKETED_COUNT_BOOLEAN_TRUE_COUNT"
  "BUCKETED_CUMULATIVE_COUNT"
  "BUCKETED_CUMULATIVE_SUM"
  "BUCKETED_SUM"
  "BUCKETED_SUM_BOOLEAN"
  "BUCKETED_SUM_BOOLEAN_TRUE_COUNT"
  "COUNT"
  "COUNT_BOOLEAN"
  "SUM"
  "SUM_BOOLEAN"
  "UNKNOWN";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry Aggregation_entries[] = {
  { {Aggregation_names + 0, 14}, 3 },
  { {Aggregation_names + 14, 22}, 4 },
  { {Aggregation_names + 36, 33}, 5 },
  { {Aggregation_names + 69, 25}, 6 },
  { {Aggregation_names + 94, 23}, 12 },
  { {Aggregation_names + 117, 12}, 9 },
  { {Aggregation_names + 129, 20}, 10 },
  { {Aggregation_names + 149, 31}, 11 },
  { {Aggregation_names + 180, 5}, 1 },
  { {Aggregation_names + 185, 13}, 2 },
  { {Aggregation_names + 198, 3}, 7 },
  { {Aggregation_names + 201, 11}, 8 },
  { {Aggregation_names + 212, 7}, 0 },
};

static const int Aggregation_entries_by_number[] = {
  12, // 0 -> UNKNOWN
  8, // 1 -> COUNT
  9, // 2 -> COUNT_BOOLEAN
  0, // 3 -> BUCKETED_COUNT
  1, // 4 -> BUCKETED_COUNT_BOOLEAN
  2, // 5 -> BUCKETED_COUNT_BOOLEAN_TRUE_COUNT
  3, // 6 -> BUCKETED_CUMULATIVE_COUNT
  10, // 7 -> SUM
  11, // 8 -> SUM_BOOLEAN
  5, // 9 -> BUCKETED_SUM
  6, // 10 -> BUCKETED_SUM_BOOLEAN
  7, // 11 -> BUCKETED_SUM_BOOLEAN_TRUE_COUNT
  4, // 12 -> BUCKETED_CUMULATIVE_SUM
};

const std::string& Aggregation_Name(
    Aggregation value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          Aggregation_entries,
          Aggregation_entries_by_number,
          13, Aggregation_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      Aggregation_entries,
      Aggregation_entries_by_number,
      13, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     Aggregation_strings[idx].get();
}
bool Aggregation_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Aggregation* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      Aggregation_entries, 13, name, &int_value);
  if (success) {
    *value = static_cast<Aggregation>(int_value);
  }
  return success;
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace segmentation_platform
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
