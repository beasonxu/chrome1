// components/optimization_guide/optimization_guide_internals/webui/optimization_guide_internals.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_OPTIMIZATION_GUIDE_OPTIMIZATION_GUIDE_INTERNALS_WEBUI_OPTIMIZATION_GUIDE_INTERNALS_MOJOM_PARAMS_DATA_H_
#define COMPONENTS_OPTIMIZATION_GUIDE_OPTIMIZATION_GUIDE_INTERNALS_WEBUI_OPTIMIZATION_GUIDE_INTERNALS_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace optimization_guide_internals {
namespace mojom {
namespace internal {

class ValidationContext;
class  PageHandlerFactory_CreatePageHandler_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Interface_Data page;

 private:
  friend class mojo::internal::MessageFragment<PageHandlerFactory_CreatePageHandler_Params_Data>;

  PageHandlerFactory_CreatePageHandler_Params_Data();
  ~PageHandlerFactory_CreatePageHandler_Params_Data() = delete;
};
static_assert(sizeof(PageHandlerFactory_CreatePageHandler_Params_Data) == 16,
              "Bad sizeof(PageHandlerFactory_CreatePageHandler_Params_Data)");
class  Page_OnLogMessageAdded_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::mojo_base::mojom::internal::Time_Data> event_time;
  int32_t log_source;
  uint8_t pad1_[4];
  mojo::internal::Pointer<mojo::internal::String_Data> source_file;
  int64_t source_line;
  mojo::internal::Pointer<mojo::internal::String_Data> message;

 private:
  friend class mojo::internal::MessageFragment<Page_OnLogMessageAdded_Params_Data>;

  Page_OnLogMessageAdded_Params_Data();
  ~Page_OnLogMessageAdded_Params_Data() = delete;
};
static_assert(sizeof(Page_OnLogMessageAdded_Params_Data) == 48,
              "Bad sizeof(Page_OnLogMessageAdded_Params_Data)");

}  // namespace internal


class PageHandlerFactory_CreatePageHandler_ParamsDataView {
 public:
  PageHandlerFactory_CreatePageHandler_ParamsDataView() = default;

  PageHandlerFactory_CreatePageHandler_ParamsDataView(
      internal::PageHandlerFactory_CreatePageHandler_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakePage() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfacePtrDataView<::optimization_guide_internals::mojom::PageInterfaceBase>>(
            &data_->page, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::PageHandlerFactory_CreatePageHandler_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Page_OnLogMessageAdded_ParamsDataView {
 public:
  Page_OnLogMessageAdded_ParamsDataView() = default;

  Page_OnLogMessageAdded_ParamsDataView(
      internal::Page_OnLogMessageAdded_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetEventTimeDataView(
      ::mojo_base::mojom::TimeDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadEventTime(UserType* output) {
    
    auto* pointer = data_->event_time.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::TimeDataView>(
        pointer, output, message_);
  }
  template <typename UserType>
  [[nodiscard]] bool ReadLogSource(UserType* output) const {
    auto data_value = data_->log_source;
    return mojo::internal::Deserialize<::optimization_guide_common::mojom::LogSource>(
        data_value, output);
  }
  ::optimization_guide_common::mojom::LogSource log_source() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::optimization_guide_common::mojom::LogSource>(data_->log_source));
  }
  inline void GetSourceFileDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadSourceFile(UserType* output) {
    
    auto* pointer = data_->source_file.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  int64_t source_line() const {
    return data_->source_line;
  }
  inline void GetMessageDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadMessage(UserType* output) {
    
    auto* pointer = data_->message.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::Page_OnLogMessageAdded_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};




inline void Page_OnLogMessageAdded_ParamsDataView::GetEventTimeDataView(
    ::mojo_base::mojom::TimeDataView* output) {
  auto pointer = data_->event_time.Get();
  *output = ::mojo_base::mojom::TimeDataView(pointer, message_);
}
inline void Page_OnLogMessageAdded_ParamsDataView::GetSourceFileDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->source_file.Get();
  *output = mojo::StringDataView(pointer, message_);
}
inline void Page_OnLogMessageAdded_ParamsDataView::GetMessageDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->message.Get();
  *output = mojo::StringDataView(pointer, message_);
}

}  // namespace mojom
}  // namespace optimization_guide_internals

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // COMPONENTS_OPTIMIZATION_GUIDE_OPTIMIZATION_GUIDE_INTERNALS_WEBUI_OPTIMIZATION_GUIDE_INTERNALS_MOJOM_PARAMS_DATA_H_