// components/optimization_guide/content/mojom/page_text_service.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_OPTIMIZATION_GUIDE_CONTENT_MOJOM_PAGE_TEXT_SERVICE_MOJOM_TEST_UTILS_H_
#define COMPONENTS_OPTIMIZATION_GUIDE_CONTENT_MOJOM_PAGE_TEXT_SERVICE_MOJOM_TEST_UTILS_H_

#include "components/optimization_guide/content/mojom/page_text_service.mojom.h"


namespace optimization_guide {
namespace mojom {


class  PageTextConsumerInterceptorForTesting : public PageTextConsumer {
  virtual PageTextConsumer* GetForwardingInterface() = 0;
  void OnTextDumpChunk(const ::std::u16string& chunk) override;
  void OnChunksEnd() override;
};
class  PageTextConsumerAsyncWaiter {
 public:
  explicit PageTextConsumerAsyncWaiter(PageTextConsumer* proxy);

  PageTextConsumerAsyncWaiter(const PageTextConsumerAsyncWaiter&) = delete;
  PageTextConsumerAsyncWaiter& operator=(const PageTextConsumerAsyncWaiter&) = delete;

  ~PageTextConsumerAsyncWaiter();

 private:
  PageTextConsumer* const proxy_;
};


class  PageTextServiceInterceptorForTesting : public PageTextService {
  virtual PageTextService* GetForwardingInterface() = 0;
  void RequestPageTextDump(PageTextDumpRequestPtr request, ::mojo::PendingRemote<PageTextConsumer> consumer) override;
};
class  PageTextServiceAsyncWaiter {
 public:
  explicit PageTextServiceAsyncWaiter(PageTextService* proxy);

  PageTextServiceAsyncWaiter(const PageTextServiceAsyncWaiter&) = delete;
  PageTextServiceAsyncWaiter& operator=(const PageTextServiceAsyncWaiter&) = delete;

  ~PageTextServiceAsyncWaiter();

 private:
  PageTextService* const proxy_;
};




}  // namespace mojom
}  // namespace optimization_guide

#endif  // COMPONENTS_OPTIMIZATION_GUIDE_CONTENT_MOJOM_PAGE_TEXT_SERVICE_MOJOM_TEST_UTILS_H_