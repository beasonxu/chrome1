// components/optimization_guide/content/mojom/page_text_service.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_OPTIMIZATION_GUIDE_CONTENT_MOJOM_PAGE_TEXT_SERVICE_MOJOM_PARAMS_DATA_H_
#define COMPONENTS_OPTIMIZATION_GUIDE_CONTENT_MOJOM_PAGE_TEXT_SERVICE_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace optimization_guide {
namespace mojom {
namespace internal {

class ValidationContext;
class  PageTextConsumer_OnTextDumpChunk_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::mojo_base::mojom::internal::String16_Data> chunk;

 private:
  friend class mojo::internal::MessageFragment<PageTextConsumer_OnTextDumpChunk_Params_Data>;

  PageTextConsumer_OnTextDumpChunk_Params_Data();
  ~PageTextConsumer_OnTextDumpChunk_Params_Data() = delete;
};
static_assert(sizeof(PageTextConsumer_OnTextDumpChunk_Params_Data) == 16,
              "Bad sizeof(PageTextConsumer_OnTextDumpChunk_Params_Data)");
class  PageTextConsumer_OnChunksEnd_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<PageTextConsumer_OnChunksEnd_Params_Data>;

  PageTextConsumer_OnChunksEnd_Params_Data();
  ~PageTextConsumer_OnChunksEnd_Params_Data() = delete;
};
static_assert(sizeof(PageTextConsumer_OnChunksEnd_Params_Data) == 8,
              "Bad sizeof(PageTextConsumer_OnChunksEnd_Params_Data)");
class  PageTextService_RequestPageTextDump_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::PageTextDumpRequest_Data> request;
  mojo::internal::Interface_Data consumer;

 private:
  friend class mojo::internal::MessageFragment<PageTextService_RequestPageTextDump_Params_Data>;

  PageTextService_RequestPageTextDump_Params_Data();
  ~PageTextService_RequestPageTextDump_Params_Data() = delete;
};
static_assert(sizeof(PageTextService_RequestPageTextDump_Params_Data) == 24,
              "Bad sizeof(PageTextService_RequestPageTextDump_Params_Data)");

}  // namespace internal


class PageTextConsumer_OnTextDumpChunk_ParamsDataView {
 public:
  PageTextConsumer_OnTextDumpChunk_ParamsDataView() = default;

  PageTextConsumer_OnTextDumpChunk_ParamsDataView(
      internal::PageTextConsumer_OnTextDumpChunk_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetChunkDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadChunk(UserType* output) {
    
    auto* pointer = data_->chunk.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, message_);
  }
 private:
  internal::PageTextConsumer_OnTextDumpChunk_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PageTextConsumer_OnChunksEnd_ParamsDataView {
 public:
  PageTextConsumer_OnChunksEnd_ParamsDataView() = default;

  PageTextConsumer_OnChunksEnd_ParamsDataView(
      internal::PageTextConsumer_OnChunksEnd_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::PageTextConsumer_OnChunksEnd_Params_Data* data_ = nullptr;
};



class PageTextService_RequestPageTextDump_ParamsDataView {
 public:
  PageTextService_RequestPageTextDump_ParamsDataView() = default;

  PageTextService_RequestPageTextDump_ParamsDataView(
      internal::PageTextService_RequestPageTextDump_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetRequestDataView(
      PageTextDumpRequestDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadRequest(UserType* output) {
    
    auto* pointer = data_->request.Get();
    return mojo::internal::Deserialize<::optimization_guide::mojom::PageTextDumpRequestDataView>(
        pointer, output, message_);
  }
  template <typename UserType>
  UserType TakeConsumer() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfacePtrDataView<::optimization_guide::mojom::PageTextConsumerInterfaceBase>>(
            &data_->consumer, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::PageTextService_RequestPageTextDump_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};


inline void PageTextConsumer_OnTextDumpChunk_ParamsDataView::GetChunkDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->chunk.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, message_);
}




inline void PageTextService_RequestPageTextDump_ParamsDataView::GetRequestDataView(
    PageTextDumpRequestDataView* output) {
  auto pointer = data_->request.Get();
  *output = PageTextDumpRequestDataView(pointer, message_);
}

}  // namespace mojom
}  // namespace optimization_guide

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // COMPONENTS_OPTIMIZATION_GUIDE_CONTENT_MOJOM_PAGE_TEXT_SERVICE_MOJOM_PARAMS_DATA_H_