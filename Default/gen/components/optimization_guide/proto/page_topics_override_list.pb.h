// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/optimization_guide/proto/page_topics_override_list.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_components_2foptimization_5fguide_2fproto_2fpage_5ftopics_5foverride_5flist_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_components_2foptimization_5fguide_2fproto_2fpage_5ftopics_5foverride_5flist_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_components_2foptimization_5fguide_2fproto_2fpage_5ftopics_5foverride_5flist_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_components_2foptimization_5fguide_2fproto_2fpage_5ftopics_5foverride_5flist_2eproto {
  static const uint32_t offsets[];
};
namespace optimization_guide {
namespace proto {
class AnnotatedPageTopics;
struct AnnotatedPageTopicsDefaultTypeInternal;
extern AnnotatedPageTopicsDefaultTypeInternal _AnnotatedPageTopics_default_instance_;
class PageTopicsOverrideEntry;
struct PageTopicsOverrideEntryDefaultTypeInternal;
extern PageTopicsOverrideEntryDefaultTypeInternal _PageTopicsOverrideEntry_default_instance_;
class PageTopicsOverrideList;
struct PageTopicsOverrideListDefaultTypeInternal;
extern PageTopicsOverrideListDefaultTypeInternal _PageTopicsOverrideList_default_instance_;
}  // namespace proto
}  // namespace optimization_guide
PROTOBUF_NAMESPACE_OPEN
template<> ::optimization_guide::proto::AnnotatedPageTopics* Arena::CreateMaybeMessage<::optimization_guide::proto::AnnotatedPageTopics>(Arena*);
template<> ::optimization_guide::proto::PageTopicsOverrideEntry* Arena::CreateMaybeMessage<::optimization_guide::proto::PageTopicsOverrideEntry>(Arena*);
template<> ::optimization_guide::proto::PageTopicsOverrideList* Arena::CreateMaybeMessage<::optimization_guide::proto::PageTopicsOverrideList>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace optimization_guide {
namespace proto {

// ===================================================================

class PageTopicsOverrideList final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:optimization_guide.proto.PageTopicsOverrideList) */ {
 public:
  inline PageTopicsOverrideList() : PageTopicsOverrideList(nullptr) {}
  ~PageTopicsOverrideList() override;
  explicit PROTOBUF_CONSTEXPR PageTopicsOverrideList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PageTopicsOverrideList(const PageTopicsOverrideList& from);
  PageTopicsOverrideList(PageTopicsOverrideList&& from) noexcept
    : PageTopicsOverrideList() {
    *this = ::std::move(from);
  }

  inline PageTopicsOverrideList& operator=(const PageTopicsOverrideList& from) {
    CopyFrom(from);
    return *this;
  }
  inline PageTopicsOverrideList& operator=(PageTopicsOverrideList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const PageTopicsOverrideList& default_instance() {
    return *internal_default_instance();
  }
  static inline const PageTopicsOverrideList* internal_default_instance() {
    return reinterpret_cast<const PageTopicsOverrideList*>(
               &_PageTopicsOverrideList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PageTopicsOverrideList& a, PageTopicsOverrideList& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(PageTopicsOverrideList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PageTopicsOverrideList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PageTopicsOverrideList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PageTopicsOverrideList>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const PageTopicsOverrideList& from);
  void MergeFrom(const PageTopicsOverrideList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PageTopicsOverrideList* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "optimization_guide.proto.PageTopicsOverrideList";
  }
  protected:
  explicit PageTopicsOverrideList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntriesFieldNumber = 1,
  };
  // repeated .optimization_guide.proto.PageTopicsOverrideEntry entries = 1;
  int entries_size() const;
  private:
  int _internal_entries_size() const;
  public:
  void clear_entries();
  ::optimization_guide::proto::PageTopicsOverrideEntry* mutable_entries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::optimization_guide::proto::PageTopicsOverrideEntry >*
      mutable_entries();
  private:
  const ::optimization_guide::proto::PageTopicsOverrideEntry& _internal_entries(int index) const;
  ::optimization_guide::proto::PageTopicsOverrideEntry* _internal_add_entries();
  public:
  const ::optimization_guide::proto::PageTopicsOverrideEntry& entries(int index) const;
  ::optimization_guide::proto::PageTopicsOverrideEntry* add_entries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::optimization_guide::proto::PageTopicsOverrideEntry >&
      entries() const;

  // @@protoc_insertion_point(class_scope:optimization_guide.proto.PageTopicsOverrideList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::optimization_guide::proto::PageTopicsOverrideEntry > entries_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_components_2foptimization_5fguide_2fproto_2fpage_5ftopics_5foverride_5flist_2eproto;
};
// -------------------------------------------------------------------

class PageTopicsOverrideEntry final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:optimization_guide.proto.PageTopicsOverrideEntry) */ {
 public:
  inline PageTopicsOverrideEntry() : PageTopicsOverrideEntry(nullptr) {}
  ~PageTopicsOverrideEntry() override;
  explicit PROTOBUF_CONSTEXPR PageTopicsOverrideEntry(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PageTopicsOverrideEntry(const PageTopicsOverrideEntry& from);
  PageTopicsOverrideEntry(PageTopicsOverrideEntry&& from) noexcept
    : PageTopicsOverrideEntry() {
    *this = ::std::move(from);
  }

  inline PageTopicsOverrideEntry& operator=(const PageTopicsOverrideEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline PageTopicsOverrideEntry& operator=(PageTopicsOverrideEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const PageTopicsOverrideEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const PageTopicsOverrideEntry* internal_default_instance() {
    return reinterpret_cast<const PageTopicsOverrideEntry*>(
               &_PageTopicsOverrideEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PageTopicsOverrideEntry& a, PageTopicsOverrideEntry& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(PageTopicsOverrideEntry* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PageTopicsOverrideEntry* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PageTopicsOverrideEntry* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PageTopicsOverrideEntry>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const PageTopicsOverrideEntry& from);
  void MergeFrom(const PageTopicsOverrideEntry& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PageTopicsOverrideEntry* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "optimization_guide.proto.PageTopicsOverrideEntry";
  }
  protected:
  explicit PageTopicsOverrideEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDomainFieldNumber = 1,
    kTopicsFieldNumber = 2,
  };
  // optional string domain = 1;
  bool has_domain() const;
  private:
  bool _internal_has_domain() const;
  public:
  void clear_domain();
  const std::string& domain() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_domain(ArgT0&& arg0, ArgT... args);
  std::string* mutable_domain();
  PROTOBUF_NODISCARD std::string* release_domain();
  void set_allocated_domain(std::string* domain);
  private:
  const std::string& _internal_domain() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_domain(const std::string& value);
  std::string* _internal_mutable_domain();
  public:

  // optional .optimization_guide.proto.AnnotatedPageTopics topics = 2;
  bool has_topics() const;
  private:
  bool _internal_has_topics() const;
  public:
  void clear_topics();
  const ::optimization_guide::proto::AnnotatedPageTopics& topics() const;
  PROTOBUF_NODISCARD ::optimization_guide::proto::AnnotatedPageTopics* release_topics();
  ::optimization_guide::proto::AnnotatedPageTopics* mutable_topics();
  void set_allocated_topics(::optimization_guide::proto::AnnotatedPageTopics* topics);
  private:
  const ::optimization_guide::proto::AnnotatedPageTopics& _internal_topics() const;
  ::optimization_guide::proto::AnnotatedPageTopics* _internal_mutable_topics();
  public:
  void unsafe_arena_set_allocated_topics(
      ::optimization_guide::proto::AnnotatedPageTopics* topics);
  ::optimization_guide::proto::AnnotatedPageTopics* unsafe_arena_release_topics();

  // @@protoc_insertion_point(class_scope:optimization_guide.proto.PageTopicsOverrideEntry)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr domain_;
  ::optimization_guide::proto::AnnotatedPageTopics* topics_;
  friend struct ::TableStruct_components_2foptimization_5fguide_2fproto_2fpage_5ftopics_5foverride_5flist_2eproto;
};
// -------------------------------------------------------------------

class AnnotatedPageTopics final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:optimization_guide.proto.AnnotatedPageTopics) */ {
 public:
  inline AnnotatedPageTopics() : AnnotatedPageTopics(nullptr) {}
  ~AnnotatedPageTopics() override;
  explicit PROTOBUF_CONSTEXPR AnnotatedPageTopics(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AnnotatedPageTopics(const AnnotatedPageTopics& from);
  AnnotatedPageTopics(AnnotatedPageTopics&& from) noexcept
    : AnnotatedPageTopics() {
    *this = ::std::move(from);
  }

  inline AnnotatedPageTopics& operator=(const AnnotatedPageTopics& from) {
    CopyFrom(from);
    return *this;
  }
  inline AnnotatedPageTopics& operator=(AnnotatedPageTopics&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const AnnotatedPageTopics& default_instance() {
    return *internal_default_instance();
  }
  static inline const AnnotatedPageTopics* internal_default_instance() {
    return reinterpret_cast<const AnnotatedPageTopics*>(
               &_AnnotatedPageTopics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(AnnotatedPageTopics& a, AnnotatedPageTopics& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(AnnotatedPageTopics* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AnnotatedPageTopics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AnnotatedPageTopics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AnnotatedPageTopics>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const AnnotatedPageTopics& from);
  void MergeFrom(const AnnotatedPageTopics& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AnnotatedPageTopics* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "optimization_guide.proto.AnnotatedPageTopics";
  }
  protected:
  explicit AnnotatedPageTopics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTopicIdsFieldNumber = 1,
  };
  // repeated int32 topic_ids = 1;
  int topic_ids_size() const;
  private:
  int _internal_topic_ids_size() const;
  public:
  void clear_topic_ids();
  private:
  int32_t _internal_topic_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_topic_ids() const;
  void _internal_add_topic_ids(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_topic_ids();
  public:
  int32_t topic_ids(int index) const;
  void set_topic_ids(int index, int32_t value);
  void add_topic_ids(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      topic_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_topic_ids();

  // @@protoc_insertion_point(class_scope:optimization_guide.proto.AnnotatedPageTopics)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > topic_ids_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_components_2foptimization_5fguide_2fproto_2fpage_5ftopics_5foverride_5flist_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PageTopicsOverrideList

// repeated .optimization_guide.proto.PageTopicsOverrideEntry entries = 1;
inline int PageTopicsOverrideList::_internal_entries_size() const {
  return entries_.size();
}
inline int PageTopicsOverrideList::entries_size() const {
  return _internal_entries_size();
}
inline void PageTopicsOverrideList::clear_entries() {
  entries_.Clear();
}
inline ::optimization_guide::proto::PageTopicsOverrideEntry* PageTopicsOverrideList::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:optimization_guide.proto.PageTopicsOverrideList.entries)
  return entries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::optimization_guide::proto::PageTopicsOverrideEntry >*
PageTopicsOverrideList::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:optimization_guide.proto.PageTopicsOverrideList.entries)
  return &entries_;
}
inline const ::optimization_guide::proto::PageTopicsOverrideEntry& PageTopicsOverrideList::_internal_entries(int index) const {
  return entries_.Get(index);
}
inline const ::optimization_guide::proto::PageTopicsOverrideEntry& PageTopicsOverrideList::entries(int index) const {
  // @@protoc_insertion_point(field_get:optimization_guide.proto.PageTopicsOverrideList.entries)
  return _internal_entries(index);
}
inline ::optimization_guide::proto::PageTopicsOverrideEntry* PageTopicsOverrideList::_internal_add_entries() {
  return entries_.Add();
}
inline ::optimization_guide::proto::PageTopicsOverrideEntry* PageTopicsOverrideList::add_entries() {
  ::optimization_guide::proto::PageTopicsOverrideEntry* _add = _internal_add_entries();
  // @@protoc_insertion_point(field_add:optimization_guide.proto.PageTopicsOverrideList.entries)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::optimization_guide::proto::PageTopicsOverrideEntry >&
PageTopicsOverrideList::entries() const {
  // @@protoc_insertion_point(field_list:optimization_guide.proto.PageTopicsOverrideList.entries)
  return entries_;
}

// -------------------------------------------------------------------

// PageTopicsOverrideEntry

// optional string domain = 1;
inline bool PageTopicsOverrideEntry::_internal_has_domain() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PageTopicsOverrideEntry::has_domain() const {
  return _internal_has_domain();
}
inline void PageTopicsOverrideEntry::clear_domain() {
  domain_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PageTopicsOverrideEntry::domain() const {
  // @@protoc_insertion_point(field_get:optimization_guide.proto.PageTopicsOverrideEntry.domain)
  return _internal_domain();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PageTopicsOverrideEntry::set_domain(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 domain_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:optimization_guide.proto.PageTopicsOverrideEntry.domain)
}
inline std::string* PageTopicsOverrideEntry::mutable_domain() {
  std::string* _s = _internal_mutable_domain();
  // @@protoc_insertion_point(field_mutable:optimization_guide.proto.PageTopicsOverrideEntry.domain)
  return _s;
}
inline const std::string& PageTopicsOverrideEntry::_internal_domain() const {
  return domain_.Get();
}
inline void PageTopicsOverrideEntry::_internal_set_domain(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  domain_.Set(value, GetArenaForAllocation());
}
inline std::string* PageTopicsOverrideEntry::_internal_mutable_domain() {
  _has_bits_[0] |= 0x00000001u;
  return domain_.Mutable(GetArenaForAllocation());
}
inline std::string* PageTopicsOverrideEntry::release_domain() {
  // @@protoc_insertion_point(field_release:optimization_guide.proto.PageTopicsOverrideEntry.domain)
  if (!_internal_has_domain()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = domain_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (domain_.IsDefault()) {
    domain_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void PageTopicsOverrideEntry::set_allocated_domain(std::string* domain) {
  if (domain != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  domain_.SetAllocated(domain, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (domain_.IsDefault()) {
    domain_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:optimization_guide.proto.PageTopicsOverrideEntry.domain)
}

// optional .optimization_guide.proto.AnnotatedPageTopics topics = 2;
inline bool PageTopicsOverrideEntry::_internal_has_topics() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || topics_ != nullptr);
  return value;
}
inline bool PageTopicsOverrideEntry::has_topics() const {
  return _internal_has_topics();
}
inline void PageTopicsOverrideEntry::clear_topics() {
  if (topics_ != nullptr) topics_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::optimization_guide::proto::AnnotatedPageTopics& PageTopicsOverrideEntry::_internal_topics() const {
  const ::optimization_guide::proto::AnnotatedPageTopics* p = topics_;
  return p != nullptr ? *p : reinterpret_cast<const ::optimization_guide::proto::AnnotatedPageTopics&>(
      ::optimization_guide::proto::_AnnotatedPageTopics_default_instance_);
}
inline const ::optimization_guide::proto::AnnotatedPageTopics& PageTopicsOverrideEntry::topics() const {
  // @@protoc_insertion_point(field_get:optimization_guide.proto.PageTopicsOverrideEntry.topics)
  return _internal_topics();
}
inline void PageTopicsOverrideEntry::unsafe_arena_set_allocated_topics(
    ::optimization_guide::proto::AnnotatedPageTopics* topics) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(topics_);
  }
  topics_ = topics;
  if (topics) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:optimization_guide.proto.PageTopicsOverrideEntry.topics)
}
inline ::optimization_guide::proto::AnnotatedPageTopics* PageTopicsOverrideEntry::release_topics() {
  _has_bits_[0] &= ~0x00000002u;
  ::optimization_guide::proto::AnnotatedPageTopics* temp = topics_;
  topics_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::optimization_guide::proto::AnnotatedPageTopics* PageTopicsOverrideEntry::unsafe_arena_release_topics() {
  // @@protoc_insertion_point(field_release:optimization_guide.proto.PageTopicsOverrideEntry.topics)
  _has_bits_[0] &= ~0x00000002u;
  ::optimization_guide::proto::AnnotatedPageTopics* temp = topics_;
  topics_ = nullptr;
  return temp;
}
inline ::optimization_guide::proto::AnnotatedPageTopics* PageTopicsOverrideEntry::_internal_mutable_topics() {
  _has_bits_[0] |= 0x00000002u;
  if (topics_ == nullptr) {
    auto* p = CreateMaybeMessage<::optimization_guide::proto::AnnotatedPageTopics>(GetArenaForAllocation());
    topics_ = p;
  }
  return topics_;
}
inline ::optimization_guide::proto::AnnotatedPageTopics* PageTopicsOverrideEntry::mutable_topics() {
  ::optimization_guide::proto::AnnotatedPageTopics* _msg = _internal_mutable_topics();
  // @@protoc_insertion_point(field_mutable:optimization_guide.proto.PageTopicsOverrideEntry.topics)
  return _msg;
}
inline void PageTopicsOverrideEntry::set_allocated_topics(::optimization_guide::proto::AnnotatedPageTopics* topics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete topics_;
  }
  if (topics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(topics);
    if (message_arena != submessage_arena) {
      topics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, topics, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  topics_ = topics;
  // @@protoc_insertion_point(field_set_allocated:optimization_guide.proto.PageTopicsOverrideEntry.topics)
}

// -------------------------------------------------------------------

// AnnotatedPageTopics

// repeated int32 topic_ids = 1;
inline int AnnotatedPageTopics::_internal_topic_ids_size() const {
  return topic_ids_.size();
}
inline int AnnotatedPageTopics::topic_ids_size() const {
  return _internal_topic_ids_size();
}
inline void AnnotatedPageTopics::clear_topic_ids() {
  topic_ids_.Clear();
}
inline int32_t AnnotatedPageTopics::_internal_topic_ids(int index) const {
  return topic_ids_.Get(index);
}
inline int32_t AnnotatedPageTopics::topic_ids(int index) const {
  // @@protoc_insertion_point(field_get:optimization_guide.proto.AnnotatedPageTopics.topic_ids)
  return _internal_topic_ids(index);
}
inline void AnnotatedPageTopics::set_topic_ids(int index, int32_t value) {
  topic_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:optimization_guide.proto.AnnotatedPageTopics.topic_ids)
}
inline void AnnotatedPageTopics::_internal_add_topic_ids(int32_t value) {
  topic_ids_.Add(value);
}
inline void AnnotatedPageTopics::add_topic_ids(int32_t value) {
  _internal_add_topic_ids(value);
  // @@protoc_insertion_point(field_add:optimization_guide.proto.AnnotatedPageTopics.topic_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
AnnotatedPageTopics::_internal_topic_ids() const {
  return topic_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
AnnotatedPageTopics::topic_ids() const {
  // @@protoc_insertion_point(field_list:optimization_guide.proto.AnnotatedPageTopics.topic_ids)
  return _internal_topic_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
AnnotatedPageTopics::_internal_mutable_topic_ids() {
  return &topic_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
AnnotatedPageTopics::mutable_topic_ids() {
  // @@protoc_insertion_point(field_mutable_list:optimization_guide.proto.AnnotatedPageTopics.topic_ids)
  return _internal_mutable_topic_ids();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace optimization_guide

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_components_2foptimization_5fguide_2fproto_2fpage_5ftopics_5foverride_5flist_2eproto
