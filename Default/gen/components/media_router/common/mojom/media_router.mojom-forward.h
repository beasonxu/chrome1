// components/media_router/common/mojom/media_router.mojom-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_MEDIA_ROUTER_COMMON_MOJOM_MEDIA_ROUTER_MOJOM_FORWARD_H_
#define COMPONENTS_MEDIA_ROUTER_COMMON_MOJOM_MEDIA_ROUTER_MOJOM_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"






namespace media_router {
namespace mojom {
class MediaSinkDataView;

class DialMediaSinkDataView;

class CastMediaSinkDataView;

class MediaRouteDataView;

class IssueDataView;

class RouteMessageDataView;

class RoutePresentationConnectionDataView;

class CastSessionStateDataView;

class CastProviderStateDataView;

class MediaSinkExtraDataDataView;
class ProviderStateDataView;

enum class SinkIconType : int32_t;

enum class RouteControllerType : int32_t;

enum class Issue_Severity : int32_t;

enum class Issue_ActionType : int32_t;

enum class RouteMessage_Type : int32_t;
class MediaSink;
using MediaSinkPtr = mojo::StructPtr<MediaSink>;

class DialMediaSink;
using DialMediaSinkPtr = mojo::StructPtr<DialMediaSink>;

class CastMediaSink;
using CastMediaSinkPtr = mojo::StructPtr<CastMediaSink>;

class MediaRoute;
using MediaRoutePtr = mojo::StructPtr<MediaRoute>;

class Issue;
using IssuePtr = mojo::StructPtr<Issue>;

class RouteMessage;
using RouteMessagePtr = mojo::StructPtr<RouteMessage>;

class RoutePresentationConnection;
using RoutePresentationConnectionPtr = mojo::StructPtr<RoutePresentationConnection>;

class CastSessionState;
using CastSessionStatePtr = mojo::InlinedStructPtr<CastSessionState>;

class CastProviderState;
using CastProviderStatePtr = mojo::StructPtr<CastProviderState>;

class MediaSinkExtraData;

using MediaSinkExtraDataPtr = mojo::StructPtr<MediaSinkExtraData>;

class ProviderState;

using ProviderStatePtr = mojo::StructPtr<ProviderState>;

class MediaRouteProvider;

class MediaRouter;




}  // namespace mojom
}  // namespace media_router

#endif  // COMPONENTS_MEDIA_ROUTER_COMMON_MOJOM_MEDIA_ROUTER_MOJOM_FORWARD_H_