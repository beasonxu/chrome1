// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/payments/PaymentManifestWebDataService

#ifndef org_chromium_components_payments_PaymentManifestWebDataService_JNI
#define org_chromium_components_payments_PaymentManifestWebDataService_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_payments_PaymentManifestWebDataService[];
const char kClassPath_org_chromium_components_payments_PaymentManifestWebDataService[] =
    "org/chromium/components/payments/PaymentManifestWebDataService";

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_payments_PaymentManifestWebDataService_00024PaymentManifestWebDataServiceCallback[];
const char
    kClassPath_org_chromium_components_payments_PaymentManifestWebDataService_00024PaymentManifestWebDataServiceCallback[]
    =
    "org/chromium/components/payments/PaymentManifestWebDataService$PaymentManifestWebDataServiceCallback";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_payments_PaymentManifestWebDataService_clazz(nullptr);
#ifndef org_chromium_components_payments_PaymentManifestWebDataService_clazz_defined
#define org_chromium_components_payments_PaymentManifestWebDataService_clazz_defined
inline jclass org_chromium_components_payments_PaymentManifestWebDataService_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_payments_PaymentManifestWebDataService,
      &g_org_chromium_components_payments_PaymentManifestWebDataService_clazz);
}
#endif
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_payments_PaymentManifestWebDataService_00024PaymentManifestWebDataServiceCallback_clazz(nullptr);
#ifndef org_chromium_components_payments_PaymentManifestWebDataService_00024PaymentManifestWebDataServiceCallback_clazz_defined
#define org_chromium_components_payments_PaymentManifestWebDataService_00024PaymentManifestWebDataServiceCallback_clazz_defined
inline jclass
    org_chromium_components_payments_PaymentManifestWebDataService_00024PaymentManifestWebDataServiceCallback_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_payments_PaymentManifestWebDataService_00024PaymentManifestWebDataServiceCallback,
      &g_org_chromium_components_payments_PaymentManifestWebDataService_00024PaymentManifestWebDataServiceCallback_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace payments {

static jlong JNI_PaymentManifestWebDataService_Init(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& caller,
    const base::android::JavaParamRef<jobject>& webContents);

JNI_GENERATOR_EXPORT jlong Java_J_N_MIc9v664(
    JNIEnv* env,
    jclass jcaller,
    jobject caller,
    jobject webContents) {
  return JNI_PaymentManifestWebDataService_Init(env, base::android::JavaParamRef<jobject>(env,
      caller), base::android::JavaParamRef<jobject>(env, webContents));
}

JNI_GENERATOR_EXPORT void Java_J_N_M0aw7fcV(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePaymentManifestWebDataServiceAndroid,
    jobject caller) {
  PaymentManifestWebDataServiceAndroid* native =
      reinterpret_cast<PaymentManifestWebDataServiceAndroid*>(nativePaymentManifestWebDataServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "Destroy");
  return native->Destroy(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT jboolean Java_J_N_Mn_00024mdade(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePaymentManifestWebDataServiceAndroid,
    jobject caller,
    jstring methodName,
    jobject callback) {
  PaymentManifestWebDataServiceAndroid* native =
      reinterpret_cast<PaymentManifestWebDataServiceAndroid*>(nativePaymentManifestWebDataServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetPaymentMethodManifest", false);
  return native->GetPaymentMethodManifest(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, methodName),
      base::android::JavaParamRef<jobject>(env, callback));
}

JNI_GENERATOR_EXPORT jboolean Java_J_N_MoJqMSqV(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePaymentManifestWebDataServiceAndroid,
    jobject caller,
    jstring appPackageName,
    jobject callback) {
  PaymentManifestWebDataServiceAndroid* native =
      reinterpret_cast<PaymentManifestWebDataServiceAndroid*>(nativePaymentManifestWebDataServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetPaymentWebAppManifest", false);
  return native->GetPaymentWebAppManifest(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, appPackageName),
      base::android::JavaParamRef<jobject>(env, callback));
}

JNI_GENERATOR_EXPORT void Java_J_N_MoW5wM_1G(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePaymentManifestWebDataServiceAndroid,
    jobject caller,
    jstring methodName,
    jobjectArray appPackageNames) {
  PaymentManifestWebDataServiceAndroid* native =
      reinterpret_cast<PaymentManifestWebDataServiceAndroid*>(nativePaymentManifestWebDataServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "AddPaymentMethodManifest");
  return native->AddPaymentMethodManifest(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, methodName),
      base::android::JavaParamRef<jobjectArray>(env, appPackageNames));
}

JNI_GENERATOR_EXPORT void Java_J_N_MsHxLyvJ(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePaymentManifestWebDataServiceAndroid,
    jobject caller,
    jobjectArray manifest) {
  PaymentManifestWebDataServiceAndroid* native =
      reinterpret_cast<PaymentManifestWebDataServiceAndroid*>(nativePaymentManifestWebDataServiceAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "AddPaymentWebAppManifest");
  return native->AddPaymentWebAppManifest(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jobjectArray>(env, manifest));
}


static std::atomic<jmethodID>
    g_org_chromium_components_payments_PaymentManifestWebDataService_00024PaymentManifestWebDataServiceCallback_onPaymentMethodManifestFetched(nullptr);
static void Java_PaymentManifestWebDataServiceCallback_onPaymentMethodManifestFetched(JNIEnv* env,
    const base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobjectArray>&
    appIdentifiers) {
  jclass clazz =
      org_chromium_components_payments_PaymentManifestWebDataService_00024PaymentManifestWebDataServiceCallback_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_components_payments_PaymentManifestWebDataService_00024PaymentManifestWebDataServiceCallback_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onPaymentMethodManifestFetched",
          "([Ljava/lang/String;)V",
&g_org_chromium_components_payments_PaymentManifestWebDataService_00024PaymentManifestWebDataServiceCallback_onPaymentMethodManifestFetched);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, appIdentifiers.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_payments_PaymentManifestWebDataService_00024PaymentManifestWebDataServiceCallback_onPaymentWebAppManifestFetched(nullptr);
static void Java_PaymentManifestWebDataServiceCallback_onPaymentWebAppManifestFetched(JNIEnv* env,
    const base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobjectArray>&
    manifest) {
  jclass clazz =
      org_chromium_components_payments_PaymentManifestWebDataService_00024PaymentManifestWebDataServiceCallback_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_components_payments_PaymentManifestWebDataService_00024PaymentManifestWebDataServiceCallback_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onPaymentWebAppManifestFetched",
          "([Lorg/chromium/components/payments/WebAppManifestSection;)V",
&g_org_chromium_components_payments_PaymentManifestWebDataService_00024PaymentManifestWebDataServiceCallback_onPaymentWebAppManifestFetched);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, manifest.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_payments_PaymentManifestWebDataService_createManifest(nullptr);
static base::android::ScopedJavaLocalRef<jobjectArray>
    Java_PaymentManifestWebDataService_createManifest(JNIEnv* env, JniIntWrapper numberOfsections) {
  jclass clazz = org_chromium_components_payments_PaymentManifestWebDataService_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_payments_PaymentManifestWebDataService_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createManifest",
          "(I)[Lorg/chromium/components/payments/WebAppManifestSection;",
          &g_org_chromium_components_payments_PaymentManifestWebDataService_createManifest);

  jobjectArray ret =
      static_cast<jobjectArray>(env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, as_jint(numberOfsections)));
  return base::android::ScopedJavaLocalRef<jobjectArray>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_payments_PaymentManifestWebDataService_addSectionToManifest(nullptr);
static void Java_PaymentManifestWebDataService_addSectionToManifest(JNIEnv* env, const
    base::android::JavaRef<jobjectArray>& manifest,
    JniIntWrapper sectionIndex,
    const base::android::JavaRef<jstring>& id,
    jlong minVersion,
    JniIntWrapper numberOfFingerprints) {
  jclass clazz = org_chromium_components_payments_PaymentManifestWebDataService_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_payments_PaymentManifestWebDataService_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "addSectionToManifest",
          "([Lorg/chromium/components/payments/WebAppManifestSection;ILjava/lang/String;JI)V",
          &g_org_chromium_components_payments_PaymentManifestWebDataService_addSectionToManifest);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, manifest.obj(), as_jint(sectionIndex), id.obj(), minVersion,
              as_jint(numberOfFingerprints));
}

static std::atomic<jmethodID>
    g_org_chromium_components_payments_PaymentManifestWebDataService_addFingerprintToSection(nullptr);
static void Java_PaymentManifestWebDataService_addFingerprintToSection(JNIEnv* env, const
    base::android::JavaRef<jobjectArray>& manifest,
    JniIntWrapper sectionIndex,
    JniIntWrapper fingerprintIndex,
    const base::android::JavaRef<jbyteArray>& fingerprint) {
  jclass clazz = org_chromium_components_payments_PaymentManifestWebDataService_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_payments_PaymentManifestWebDataService_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "addFingerprintToSection",
          "([Lorg/chromium/components/payments/WebAppManifestSection;II[B)V",
&g_org_chromium_components_payments_PaymentManifestWebDataService_addFingerprintToSection);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, manifest.obj(), as_jint(sectionIndex),
              as_jint(fingerprintIndex), fingerprint.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_payments_PaymentManifestWebDataService_getIdFromSection(nullptr);
static base::android::ScopedJavaLocalRef<jstring>
    Java_PaymentManifestWebDataService_getIdFromSection(JNIEnv* env, const
    base::android::JavaRef<jobject>& manifestSection) {
  jclass clazz = org_chromium_components_payments_PaymentManifestWebDataService_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_payments_PaymentManifestWebDataService_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "getIdFromSection",
          "(Lorg/chromium/components/payments/WebAppManifestSection;)Ljava/lang/String;",
          &g_org_chromium_components_payments_PaymentManifestWebDataService_getIdFromSection);

  jstring ret =
      static_cast<jstring>(env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, manifestSection.obj()));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_payments_PaymentManifestWebDataService_getMinVersionFromSection(nullptr);
static jlong Java_PaymentManifestWebDataService_getMinVersionFromSection(JNIEnv* env, const
    base::android::JavaRef<jobject>& manifestSection) {
  jclass clazz = org_chromium_components_payments_PaymentManifestWebDataService_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_payments_PaymentManifestWebDataService_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "getMinVersionFromSection",
          "(Lorg/chromium/components/payments/WebAppManifestSection;)J",
&g_org_chromium_components_payments_PaymentManifestWebDataService_getMinVersionFromSection);

  jlong ret =
      env->CallStaticLongMethod(clazz,
          call_context.base.method_id, manifestSection.obj());
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_payments_PaymentManifestWebDataService_getFingerprintsFromSection(nullptr);
static base::android::ScopedJavaLocalRef<jobjectArray>
    Java_PaymentManifestWebDataService_getFingerprintsFromSection(JNIEnv* env, const
    base::android::JavaRef<jobject>& manifestSection) {
  jclass clazz = org_chromium_components_payments_PaymentManifestWebDataService_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_payments_PaymentManifestWebDataService_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "getFingerprintsFromSection",
          "(Lorg/chromium/components/payments/WebAppManifestSection;)[[B",
&g_org_chromium_components_payments_PaymentManifestWebDataService_getFingerprintsFromSection);

  jobjectArray ret =
      static_cast<jobjectArray>(env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, manifestSection.obj()));
  return base::android::ScopedJavaLocalRef<jobjectArray>(env, ret);
}

}  // namespace payments

#endif  // org_chromium_components_payments_PaymentManifestWebDataService_JNI
