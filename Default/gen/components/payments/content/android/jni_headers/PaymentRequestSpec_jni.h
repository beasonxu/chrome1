// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/payments/PaymentRequestSpec

#ifndef org_chromium_components_payments_PaymentRequestSpec_JNI
#define org_chromium_components_payments_PaymentRequestSpec_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_payments_PaymentRequestSpec[];
const char kClassPath_org_chromium_components_payments_PaymentRequestSpec[] =
    "org/chromium/components/payments/PaymentRequestSpec";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_payments_PaymentRequestSpec_clazz(nullptr);
#ifndef org_chromium_components_payments_PaymentRequestSpec_clazz_defined
#define org_chromium_components_payments_PaymentRequestSpec_clazz_defined
inline jclass org_chromium_components_payments_PaymentRequestSpec_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_payments_PaymentRequestSpec,
      &g_org_chromium_components_payments_PaymentRequestSpec_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace payments {
namespace android {

static jlong JNI_PaymentRequestSpec_Create(JNIEnv* env, const base::android::JavaParamRef<jobject>&
    optionsByteBuffer,
    const base::android::JavaParamRef<jobject>& detailsByteBuffer,
    const base::android::JavaParamRef<jobjectArray>& methodDataByteBuffers,
    const base::android::JavaParamRef<jstring>& appLocale);

JNI_GENERATOR_EXPORT jlong Java_J_N_MAELBHG4(
    JNIEnv* env,
    jclass jcaller,
    jobject optionsByteBuffer,
    jobject detailsByteBuffer,
    jobjectArray methodDataByteBuffers,
    jstring appLocale) {
  return JNI_PaymentRequestSpec_Create(env, base::android::JavaParamRef<jobject>(env,
      optionsByteBuffer), base::android::JavaParamRef<jobject>(env, detailsByteBuffer),
      base::android::JavaParamRef<jobjectArray>(env, methodDataByteBuffers),
      base::android::JavaParamRef<jstring>(env, appLocale));
}

JNI_GENERATOR_EXPORT void Java_J_N_MnD0tUEj(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePaymentRequestSpec,
    jobject detailsByteBuffer) {
  PaymentRequestSpec* native = reinterpret_cast<PaymentRequestSpec*>(nativePaymentRequestSpec);
  CHECK_NATIVE_PTR(env, jcaller, native, "UpdateWith");
  return native->UpdateWith(env, base::android::JavaParamRef<jobject>(env, detailsByteBuffer));
}

JNI_GENERATOR_EXPORT void Java_J_N_MiyjJ0og(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePaymentRequestSpec,
    jobject validationErrorsByteBuffer) {
  PaymentRequestSpec* native = reinterpret_cast<PaymentRequestSpec*>(nativePaymentRequestSpec);
  CHECK_NATIVE_PTR(env, jcaller, native, "Retry");
  return native->Retry(env, base::android::JavaParamRef<jobject>(env, validationErrorsByteBuffer));
}

JNI_GENERATOR_EXPORT void Java_J_N_M_1B2Caox(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePaymentRequestSpec) {
  PaymentRequestSpec* native = reinterpret_cast<PaymentRequestSpec*>(nativePaymentRequestSpec);
  CHECK_NATIVE_PTR(env, jcaller, native, "RecomputeSpecForDetails");
  return native->RecomputeSpecForDetails(env);
}

JNI_GENERATOR_EXPORT jstring Java_J_N_MCGOhrza(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePaymentRequestSpec) {
  PaymentRequestSpec* native = reinterpret_cast<PaymentRequestSpec*>(nativePaymentRequestSpec);
  CHECK_NATIVE_PTR(env, jcaller, native, "SelectedShippingOptionError", NULL);
  return native->SelectedShippingOptionError(env).Release();
}

JNI_GENERATOR_EXPORT void Java_J_N_MiX2Cegu(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePaymentRequestSpec) {
  PaymentRequestSpec* native = reinterpret_cast<PaymentRequestSpec*>(nativePaymentRequestSpec);
  CHECK_NATIVE_PTR(env, jcaller, native, "Destroy");
  return native->Destroy(env);
}

JNI_GENERATOR_EXPORT jbyteArray Java_J_N_MNkVMjnE(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePaymentRequestSpec) {
  PaymentRequestSpec* native = reinterpret_cast<PaymentRequestSpec*>(nativePaymentRequestSpec);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetPaymentDetails", NULL);
  return native->GetPaymentDetails(env).Release();
}

JNI_GENERATOR_EXPORT jobjectArray Java_J_N_MFWoiqvU(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePaymentRequestSpec) {
  PaymentRequestSpec* native = reinterpret_cast<PaymentRequestSpec*>(nativePaymentRequestSpec);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetMethodData", NULL);
  return native->GetMethodData(env).Release();
}

JNI_GENERATOR_EXPORT jbyteArray Java_J_N_Mc7EwNM_00024(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePaymentRequestSpec) {
  PaymentRequestSpec* native = reinterpret_cast<PaymentRequestSpec*>(nativePaymentRequestSpec);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetPaymentOptions", NULL);
  return native->GetPaymentOptions(env).Release();
}

JNI_GENERATOR_EXPORT jboolean Java_J_N_MdW7ZAFa(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePaymentRequestSpec) {
  PaymentRequestSpec* native = reinterpret_cast<PaymentRequestSpec*>(nativePaymentRequestSpec);
  CHECK_NATIVE_PTR(env, jcaller, native, "IsSecurePaymentConfirmationRequested", false);
  return native->IsSecurePaymentConfirmationRequested(env);
}


static std::atomic<jmethodID>
    g_org_chromium_components_payments_PaymentRequestSpec_getNativePointer(nullptr);
static jlong Java_PaymentRequestSpec_getNativePointer(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_payments_PaymentRequestSpec_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_payments_PaymentRequestSpec_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getNativePointer",
          "()J",
          &g_org_chromium_components_payments_PaymentRequestSpec_getNativePointer);

  jlong ret =
      env->CallLongMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

}  // namespace android
}  // namespace payments

#endif  // org_chromium_components_payments_PaymentRequestSpec_JNI
