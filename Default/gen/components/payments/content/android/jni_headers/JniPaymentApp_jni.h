// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/payments/JniPaymentApp

#ifndef org_chromium_components_payments_JniPaymentApp_JNI
#define org_chromium_components_payments_JniPaymentApp_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_payments_JniPaymentApp[];
const char kClassPath_org_chromium_components_payments_JniPaymentApp[] =
    "org/chromium/components/payments/JniPaymentApp";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_payments_JniPaymentApp_clazz(nullptr);
#ifndef org_chromium_components_payments_JniPaymentApp_clazz_defined
#define org_chromium_components_payments_JniPaymentApp_clazz_defined
inline jclass org_chromium_components_payments_JniPaymentApp_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_chromium_components_payments_JniPaymentApp,
      &g_org_chromium_components_payments_JniPaymentApp_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace payments {

JNI_GENERATOR_EXPORT jobjectArray Java_J_N_McL_00024JgEC(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeJniPaymentApp) {
  JniPaymentApp* native = reinterpret_cast<JniPaymentApp*>(nativeJniPaymentApp);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetInstrumentMethodNames", NULL);
  return native->GetInstrumentMethodNames(env).Release();
}

JNI_GENERATOR_EXPORT jboolean Java_J_N_MRag5HOD(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeJniPaymentApp,
    jstring method,
    jobject dataByteBuffer) {
  JniPaymentApp* native = reinterpret_cast<JniPaymentApp*>(nativeJniPaymentApp);
  CHECK_NATIVE_PTR(env, jcaller, native, "IsValidForPaymentMethodData", false);
  return native->IsValidForPaymentMethodData(env, base::android::JavaParamRef<jstring>(env, method),
      base::android::JavaParamRef<jobject>(env, dataByteBuffer));
}

JNI_GENERATOR_EXPORT jboolean Java_J_N_McrEaHZb(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeJniPaymentApp) {
  JniPaymentApp* native = reinterpret_cast<JniPaymentApp*>(nativeJniPaymentApp);
  CHECK_NATIVE_PTR(env, jcaller, native, "HandlesShippingAddress", false);
  return native->HandlesShippingAddress(env);
}

JNI_GENERATOR_EXPORT jboolean Java_J_N_MFs5Lo5_1(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeJniPaymentApp) {
  JniPaymentApp* native = reinterpret_cast<JniPaymentApp*>(nativeJniPaymentApp);
  CHECK_NATIVE_PTR(env, jcaller, native, "HandlesPayerName", false);
  return native->HandlesPayerName(env);
}

JNI_GENERATOR_EXPORT jboolean Java_J_N_MxH2M7Qu(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeJniPaymentApp) {
  JniPaymentApp* native = reinterpret_cast<JniPaymentApp*>(nativeJniPaymentApp);
  CHECK_NATIVE_PTR(env, jcaller, native, "HandlesPayerEmail", false);
  return native->HandlesPayerEmail(env);
}

JNI_GENERATOR_EXPORT jboolean Java_J_N_Mz9bB0kb(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeJniPaymentApp) {
  JniPaymentApp* native = reinterpret_cast<JniPaymentApp*>(nativeJniPaymentApp);
  CHECK_NATIVE_PTR(env, jcaller, native, "HandlesPayerPhone", false);
  return native->HandlesPayerPhone(env);
}

JNI_GENERATOR_EXPORT jboolean Java_J_N_MSRfo5q7(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeJniPaymentApp) {
  JniPaymentApp* native = reinterpret_cast<JniPaymentApp*>(nativeJniPaymentApp);
  CHECK_NATIVE_PTR(env, jcaller, native, "CanMakePayment", false);
  return native->CanMakePayment(env);
}

JNI_GENERATOR_EXPORT jboolean Java_J_N_MOoH91qV(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeJniPaymentApp) {
  JniPaymentApp* native = reinterpret_cast<JniPaymentApp*>(nativeJniPaymentApp);
  CHECK_NATIVE_PTR(env, jcaller, native, "CanPreselect", false);
  return native->CanPreselect(env);
}

JNI_GENERATOR_EXPORT void Java_J_N_MdDxV11A(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeJniPaymentApp,
    jobject callback) {
  JniPaymentApp* native = reinterpret_cast<JniPaymentApp*>(nativeJniPaymentApp);
  CHECK_NATIVE_PTR(env, jcaller, native, "InvokePaymentApp");
  return native->InvokePaymentApp(env, base::android::JavaParamRef<jobject>(env, callback));
}

JNI_GENERATOR_EXPORT void Java_J_N_MKIICwOk(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeJniPaymentApp,
    jobject responseByteBuffer) {
  JniPaymentApp* native = reinterpret_cast<JniPaymentApp*>(nativeJniPaymentApp);
  CHECK_NATIVE_PTR(env, jcaller, native, "UpdateWith");
  return native->UpdateWith(env, base::android::JavaParamRef<jobject>(env, responseByteBuffer));
}

JNI_GENERATOR_EXPORT void Java_J_N_M1KlGngz(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeJniPaymentApp) {
  JniPaymentApp* native = reinterpret_cast<JniPaymentApp*>(nativeJniPaymentApp);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnPaymentDetailsNotUpdated");
  return native->OnPaymentDetailsNotUpdated(env);
}

JNI_GENERATOR_EXPORT jboolean Java_J_N_MY9Q_1PcC(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeJniPaymentApp) {
  JniPaymentApp* native = reinterpret_cast<JniPaymentApp*>(nativeJniPaymentApp);
  CHECK_NATIVE_PTR(env, jcaller, native, "IsWaitingForPaymentDetailsUpdate", false);
  return native->IsWaitingForPaymentDetailsUpdate(env);
}

JNI_GENERATOR_EXPORT void Java_J_N_Mix09tOZ(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeJniPaymentApp,
    jobject callback) {
  JniPaymentApp* native = reinterpret_cast<JniPaymentApp*>(nativeJniPaymentApp);
  CHECK_NATIVE_PTR(env, jcaller, native, "AbortPaymentApp");
  return native->AbortPaymentApp(env, base::android::JavaParamRef<jobject>(env, callback));
}

JNI_GENERATOR_EXPORT jstring Java_J_N_MJ23g7SX(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeJniPaymentApp) {
  JniPaymentApp* native = reinterpret_cast<JniPaymentApp*>(nativeJniPaymentApp);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetApplicationIdentifierToHide", NULL);
  return native->GetApplicationIdentifierToHide(env).Release();
}

JNI_GENERATOR_EXPORT jobjectArray Java_J_N_MMxfB3ye(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeJniPaymentApp) {
  JniPaymentApp* native = reinterpret_cast<JniPaymentApp*>(nativeJniPaymentApp);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetApplicationIdentifiersThatHideThisApp", NULL);
  return native->GetApplicationIdentifiersThatHideThisApp(env).Release();
}

JNI_GENERATOR_EXPORT jlong Java_J_N_MNEirz5D(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeJniPaymentApp) {
  JniPaymentApp* native = reinterpret_cast<JniPaymentApp*>(nativeJniPaymentApp);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetUkmSourceId", 0);
  return native->GetUkmSourceId(env);
}

JNI_GENERATOR_EXPORT void Java_J_N_M_1McFosm(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeJniPaymentApp,
    jobject paymentHandlerHost) {
  JniPaymentApp* native = reinterpret_cast<JniPaymentApp*>(nativeJniPaymentApp);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetPaymentHandlerHost");
  return native->SetPaymentHandlerHost(env, base::android::JavaParamRef<jobject>(env,
      paymentHandlerHost));
}

JNI_GENERATOR_EXPORT void Java_J_N_MvY3Yqx_1(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeJniPaymentApp) {
  JniPaymentApp* native = reinterpret_cast<JniPaymentApp*>(nativeJniPaymentApp);
  CHECK_NATIVE_PTR(env, jcaller, native, "FreeNativeObject");
  return native->FreeNativeObject(env);
}

JNI_GENERATOR_EXPORT jbyteArray Java_J_N_MpldTTna(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeJniPaymentApp,
    jobject paymentResponse) {
  JniPaymentApp* native = reinterpret_cast<JniPaymentApp*>(nativeJniPaymentApp);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetAppSpecificResponseFields", NULL);
  return native->SetAppSpecificResponseFields(env, base::android::JavaParamRef<jobject>(env,
      paymentResponse)).Release();
}


static std::atomic<jmethodID> g_org_chromium_components_payments_JniPaymentApp_Constructor(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_JniPaymentApp_Constructor(JNIEnv* env, const
    base::android::JavaRef<jstring>& id,
    const base::android::JavaRef<jstring>& label,
    const base::android::JavaRef<jstring>& sublabel,
    const base::android::JavaRef<jobject>& icon,
    JniIntWrapper paymentAppType,
    jlong nativeObject) {
  jclass clazz = org_chromium_components_payments_JniPaymentApp_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_payments_JniPaymentApp_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "<init>",
          "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/graphics/Bitmap;IJ)V",
          &g_org_chromium_components_payments_JniPaymentApp_Constructor);

  jobject ret =
      env->NewObject(clazz,
          call_context.base.method_id, id.obj(), label.obj(), sublabel.obj(), icon.obj(),
              as_jint(paymentAppType), nativeObject);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_payments_JniPaymentApp_onAbortResult(nullptr);
static void Java_JniPaymentApp_onAbortResult(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj, jboolean aborted) {
  jclass clazz = org_chromium_components_payments_JniPaymentApp_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_payments_JniPaymentApp_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onAbortResult",
          "(Z)V",
          &g_org_chromium_components_payments_JniPaymentApp_onAbortResult);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, aborted);
}

static std::atomic<jmethodID>
    g_org_chromium_components_payments_JniPaymentApp_onInvokeResult(nullptr);
static void Java_JniPaymentApp_onInvokeResult(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj, const base::android::JavaRef<jstring>& methodName,
    const base::android::JavaRef<jstring>& stringifiedDetails,
    const base::android::JavaRef<jobject>& payerData) {
  jclass clazz = org_chromium_components_payments_JniPaymentApp_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_payments_JniPaymentApp_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onInvokeResult",
          "(Ljava/lang/String;Ljava/lang/String;Lorg/chromium/components/payments/PayerData;)V",
          &g_org_chromium_components_payments_JniPaymentApp_onInvokeResult);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, methodName.obj(), stringifiedDetails.obj(), payerData.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_payments_JniPaymentApp_onInvokeError(nullptr);
static void Java_JniPaymentApp_onInvokeError(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj, const base::android::JavaRef<jstring>& errorMessage) {
  jclass clazz = org_chromium_components_payments_JniPaymentApp_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_payments_JniPaymentApp_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onInvokeError",
          "(Ljava/lang/String;)V",
          &g_org_chromium_components_payments_JniPaymentApp_onInvokeError);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, errorMessage.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_payments_JniPaymentApp_createPayerData(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_JniPaymentApp_createPayerData(JNIEnv* env,
    const base::android::JavaRef<jstring>& payerName,
    const base::android::JavaRef<jstring>& payerPhone,
    const base::android::JavaRef<jstring>& payerEmail,
    const base::android::JavaRef<jobject>& shippingAddress,
    const base::android::JavaRef<jstring>& selectedShippingOptionId) {
  jclass clazz = org_chromium_components_payments_JniPaymentApp_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_payments_JniPaymentApp_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createPayerData",
"(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/chromium/components/payments/Address;Ljava/lang/String;)Lorg/chromium/components/payments/PayerData;",
          &g_org_chromium_components_payments_JniPaymentApp_createPayerData);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, payerName.obj(), payerPhone.obj(), payerEmail.obj(),
              shippingAddress.obj(), selectedShippingOptionId.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_payments_JniPaymentApp_createShippingAddress(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_JniPaymentApp_createShippingAddress(JNIEnv*
    env, const base::android::JavaRef<jstring>& country,
    const base::android::JavaRef<jobjectArray>& addressLine,
    const base::android::JavaRef<jstring>& region,
    const base::android::JavaRef<jstring>& city,
    const base::android::JavaRef<jstring>& dependentLocality,
    const base::android::JavaRef<jstring>& postalCode,
    const base::android::JavaRef<jstring>& sortingCode,
    const base::android::JavaRef<jstring>& organization,
    const base::android::JavaRef<jstring>& recipient,
    const base::android::JavaRef<jstring>& phone) {
  jclass clazz = org_chromium_components_payments_JniPaymentApp_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_payments_JniPaymentApp_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createShippingAddress",
"(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/chromium/components/payments/Address;",
          &g_org_chromium_components_payments_JniPaymentApp_createShippingAddress);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, country.obj(), addressLine.obj(), region.obj(), city.obj(),
              dependentLocality.obj(), postalCode.obj(), sortingCode.obj(), organization.obj(),
              recipient.obj(), phone.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

}  // namespace payments

#endif  // org_chromium_components_payments_JniPaymentApp_JNI
