// components/services/screen_ai/public/mojom/screen_ai_service.mojom-shared.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_SERVICES_SCREEN_AI_PUBLIC_MOJOM_SCREEN_AI_SERVICE_MOJOM_SHARED_H_
#define COMPONENTS_SERVICES_SCREEN_AI_PUBLIC_MOJOM_SCREEN_AI_SERVICE_MOJOM_SHARED_H_

#include <stdint.h>

#include <functional>
#include <iosfwd>
#include <type_traits>
#include <utility>
#include "mojo/public/cpp/bindings/array_data_view.h"
#include "mojo/public/cpp/bindings/enum_traits.h"
#include "mojo/public/cpp/bindings/interface_data_view.h"
#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/serialization.h"
#include "mojo/public/cpp/bindings/map_data_view.h"
#include "mojo/public/cpp/bindings/string_data_view.h"

#include "third_party/perfetto/include/perfetto/tracing/traced_value_forward.h"

#include "components/services/screen_ai/public/mojom/screen_ai_service.mojom-shared-internal.h"
#include "sandbox/policy/mojom/sandbox.mojom-shared.h"
#include "skia/public/mojom/bitmap.mojom-shared.h"
#include "ui/accessibility/mojom/ax_tree_update.mojom-shared.h"
#include "mojo/public/cpp/bindings/lib/interface_serialization.h"






namespace screen_ai {
namespace mojom {


}  // namespace mojom
}  // namespace screen_ai

namespace mojo {
namespace internal {

}  // namespace internal
}  // namespace mojo


namespace screen_ai {
namespace mojom {
// Interface base classes. They are used for type safety check.
class ScreenAIAnnotatorInterfaceBase {};

using ScreenAIAnnotatorPtrDataView =
    mojo::InterfacePtrDataView<ScreenAIAnnotatorInterfaceBase>;
using ScreenAIAnnotatorRequestDataView =
    mojo::InterfaceRequestDataView<ScreenAIAnnotatorInterfaceBase>;
using ScreenAIAnnotatorAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<ScreenAIAnnotatorInterfaceBase>;
using ScreenAIAnnotatorAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<ScreenAIAnnotatorInterfaceBase>;
class Screen2xMainContentExtractorInterfaceBase {};

using Screen2xMainContentExtractorPtrDataView =
    mojo::InterfacePtrDataView<Screen2xMainContentExtractorInterfaceBase>;
using Screen2xMainContentExtractorRequestDataView =
    mojo::InterfaceRequestDataView<Screen2xMainContentExtractorInterfaceBase>;
using Screen2xMainContentExtractorAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<Screen2xMainContentExtractorInterfaceBase>;
using Screen2xMainContentExtractorAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<Screen2xMainContentExtractorInterfaceBase>;
class ScreenAIServiceInterfaceBase {};

using ScreenAIServicePtrDataView =
    mojo::InterfacePtrDataView<ScreenAIServiceInterfaceBase>;
using ScreenAIServiceRequestDataView =
    mojo::InterfaceRequestDataView<ScreenAIServiceInterfaceBase>;
using ScreenAIServiceAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<ScreenAIServiceInterfaceBase>;
using ScreenAIServiceAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<ScreenAIServiceInterfaceBase>;


}  // namespace mojom
}  // namespace screen_ai

namespace std {

}  // namespace std

namespace mojo {

}  // namespace mojo


namespace screen_ai {
namespace mojom {


}  // namespace mojom
}  // namespace screen_ai

// Declare TraceFormatTraits for enums, which should be defined in ::perfetto
// namespace.

#endif  // COMPONENTS_SERVICES_SCREEN_AI_PUBLIC_MOJOM_SCREEN_AI_SERVICE_MOJOM_SHARED_H_