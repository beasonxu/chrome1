// components/services/storage/public/mojom/partition.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_SERVICES_STORAGE_PUBLIC_MOJOM_PARTITION_MOJOM_TEST_UTILS_H_
#define COMPONENTS_SERVICES_STORAGE_PUBLIC_MOJOM_PARTITION_MOJOM_TEST_UTILS_H_

#include "components/services/storage/public/mojom/partition.mojom.h"


namespace storage {
namespace mojom {


class  PartitionInterceptorForTesting : public Partition {
  virtual Partition* GetForwardingInterface() = 0;
  void BindOriginContext(const ::url::Origin& origin, ::mojo::PendingReceiver<::storage::mojom::OriginContext> receiver) override;
  void BindSessionStorageControl(::mojo::PendingReceiver<::storage::mojom::SessionStorageControl> receiver) override;
  void BindLocalStorageControl(::mojo::PendingReceiver<::storage::mojom::LocalStorageControl> receiver) override;
  void BindServiceWorkerStorageControl(::mojo::PendingReceiver<::storage::mojom::ServiceWorkerStorageControl> receiver) override;
};
class  PartitionAsyncWaiter {
 public:
  explicit PartitionAsyncWaiter(Partition* proxy);

  PartitionAsyncWaiter(const PartitionAsyncWaiter&) = delete;
  PartitionAsyncWaiter& operator=(const PartitionAsyncWaiter&) = delete;

  ~PartitionAsyncWaiter();

 private:
  Partition* const proxy_;
};




}  // namespace mojom
}  // namespace storage

#endif  // COMPONENTS_SERVICES_STORAGE_PUBLIC_MOJOM_PARTITION_MOJOM_TEST_UTILS_H_