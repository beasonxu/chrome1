// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/translate/TranslateFeatureList

#ifndef org_chromium_components_translate_TranslateFeatureList_JNI
#define org_chromium_components_translate_TranslateFeatureList_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace translate {
namespace android {

static jboolean JNI_TranslateFeatureList_IsEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jstring>& featureName);

JNI_GENERATOR_EXPORT jboolean Java_J_N_MI_1WWqtz(
    JNIEnv* env,
    jclass jcaller,
    jstring featureName) {
  return JNI_TranslateFeatureList_IsEnabled(env, base::android::JavaParamRef<jstring>(env,
      featureName));
}

static jboolean JNI_TranslateFeatureList_GetFieldTrialParamByFeatureAsBoolean(JNIEnv* env, const
    base::android::JavaParamRef<jstring>& featureName,
    const base::android::JavaParamRef<jstring>& paramName,
    jboolean defaultValue);

JNI_GENERATOR_EXPORT jboolean Java_J_N_MV96drCk(
    JNIEnv* env,
    jclass jcaller,
    jstring featureName,
    jstring paramName,
    jboolean defaultValue) {
  return JNI_TranslateFeatureList_GetFieldTrialParamByFeatureAsBoolean(env,
      base::android::JavaParamRef<jstring>(env, featureName),
      base::android::JavaParamRef<jstring>(env, paramName), defaultValue);
}


}  // namespace android
}  // namespace translate

#endif  // org_chromium_components_translate_TranslateFeatureList_JNI
