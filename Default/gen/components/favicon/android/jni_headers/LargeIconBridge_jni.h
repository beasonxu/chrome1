// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/favicon/LargeIconBridge

#ifndef org_chromium_components_favicon_LargeIconBridge_JNI
#define org_chromium_components_favicon_LargeIconBridge_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_favicon_LargeIconBridge[];
const char kClassPath_org_chromium_components_favicon_LargeIconBridge[] =
    "org/chromium/components/favicon/LargeIconBridge";

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_favicon_LargeIconBridge_00024LargeIconCallback[];
const char kClassPath_org_chromium_components_favicon_LargeIconBridge_00024LargeIconCallback[] =
    "org/chromium/components/favicon/LargeIconBridge$LargeIconCallback";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_favicon_LargeIconBridge_clazz(nullptr);
#ifndef org_chromium_components_favicon_LargeIconBridge_clazz_defined
#define org_chromium_components_favicon_LargeIconBridge_clazz_defined
inline jclass org_chromium_components_favicon_LargeIconBridge_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_favicon_LargeIconBridge,
      &g_org_chromium_components_favicon_LargeIconBridge_clazz);
}
#endif
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_favicon_LargeIconBridge_00024LargeIconCallback_clazz(nullptr);
#ifndef org_chromium_components_favicon_LargeIconBridge_00024LargeIconCallback_clazz_defined
#define org_chromium_components_favicon_LargeIconBridge_00024LargeIconCallback_clazz_defined
inline jclass org_chromium_components_favicon_LargeIconBridge_00024LargeIconCallback_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_favicon_LargeIconBridge_00024LargeIconCallback,
      &g_org_chromium_components_favicon_LargeIconBridge_00024LargeIconCallback_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace favicon {

static jlong JNI_LargeIconBridge_Init(JNIEnv* env);

JNI_GENERATOR_EXPORT jlong Java_J_N_MwrhffLX(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_LargeIconBridge_Init(env);
}

JNI_GENERATOR_EXPORT void Java_J_N_MthPKzcb(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeLargeIconBridge) {
  LargeIconBridge* native = reinterpret_cast<LargeIconBridge*>(nativeLargeIconBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "Destroy");
  return native->Destroy(env);
}

JNI_GENERATOR_EXPORT jboolean Java_J_N_M1pABITV(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeLargeIconBridge,
    jobject browserContextHandle,
    jobject pageUrl,
    jint desiredSizePx,
    jobject callback) {
  LargeIconBridge* native = reinterpret_cast<LargeIconBridge*>(nativeLargeIconBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetLargeIconForURL", false);
  return native->GetLargeIconForURL(env, base::android::JavaParamRef<jobject>(env,
      browserContextHandle), base::android::JavaParamRef<jobject>(env, pageUrl), desiredSizePx,
      base::android::JavaParamRef<jobject>(env, callback));
}


static std::atomic<jmethodID>
    g_org_chromium_components_favicon_LargeIconBridge_00024LargeIconCallback_onLargeIconAvailable(nullptr);
static void Java_LargeIconCallback_onLargeIconAvailable(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>& icon,
    JniIntWrapper fallbackColor,
    jboolean isFallbackColorDefault,
    JniIntWrapper iconType) {
  jclass clazz = org_chromium_components_favicon_LargeIconBridge_00024LargeIconCallback_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_favicon_LargeIconBridge_00024LargeIconCallback_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onLargeIconAvailable",
          "(Landroid/graphics/Bitmap;IZI)V",
&g_org_chromium_components_favicon_LargeIconBridge_00024LargeIconCallback_onLargeIconAvailable);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, icon.obj(), as_jint(fallbackColor), isFallbackColorDefault,
              as_jint(iconType));
}

}  // namespace favicon

#endif  // org_chromium_components_favicon_LargeIconBridge_JNI
