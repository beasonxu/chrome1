// services/network/public/mojom/devtools_observer.mojom-lite-for-compile.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';

goog.require('mojo.internal');
goog.require('mojo.internal.interfaceSupport');

goog.require('network.mojom.FetchResponseSource');
goog.require('network.mojom.IPAddressSpace');
goog.require('network.mojom.RequestPriority');
goog.require('network.mojom.URLRequestReferrerPolicy');
goog.require('network.mojom.ClientSecurityState');
goog.require('network.mojom.CookieAndLineWithAccessResult');
goog.require('network.mojom.CookieWithAccessResult');
goog.require('network.mojom.CorsErrorStatus');
goog.require('network.mojom.HttpRawHeaderPair');
goog.require('network.mojom.HttpRequestHeaders');
goog.require('network.mojom.HttpResponseHeaders');
goog.require('network.mojom.IPEndPoint');
goog.require('network.mojom.LoadTimingInfo');
goog.require('url.mojom.Origin');
goog.require('network.mojom.SSLInfo');
goog.require('mojoBase.mojom.Time');
goog.require('mojoBase.mojom.TimeTicks');
goog.require('network.mojom.TrustTokenOperationResult');
goog.require('network.mojom.TrustTokenParams');
goog.require('network.mojom.URLLoaderCompletionStatus');
goog.require('mojoBase.mojom.UnguessableToken');
goog.require('url.mojom.Url');






goog.provide('network.mojom.DevToolsObserver');
goog.provide('network.mojom.DevToolsObserverReceiver');
goog.provide('network.mojom.DevToolsObserverCallbackRouter');
goog.provide('network.mojom.DevToolsObserverInterface');
goog.provide('network.mojom.DevToolsObserverRemote');
goog.provide('network.mojom.DevToolsObserverPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
network.mojom.DevToolsObserverPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        network.mojom.DevToolsObserver.$interfaceName,
        scope);
  }
};

/** @interface */
network.mojom.DevToolsObserverInterface = class {
  
  /**
   * @param { !string } devtoolRequestId
   * @param { !Array<!network.mojom.CookieWithAccessResult> } cookiesWithAccessResult
   * @param { !Array<!network.mojom.HttpRawHeaderPair> } headers
   * @param { !mojoBase.mojom.TimeTicks } timestamp
   * @param { ?network.mojom.ClientSecurityState } clientSecurityState
   */

  onRawRequest(devtoolRequestId, cookiesWithAccessResult, headers, timestamp, clientSecurityState) {}
  
  /**
   * @param { !string } devtoolRequestId
   * @param { !Array<!network.mojom.CookieAndLineWithAccessResult> } cookiesWithAccessResult
   * @param { !Array<!network.mojom.HttpRawHeaderPair> } headers
   * @param { ?string } rawResponseHeaders
   * @param { !network.mojom.IPAddressSpace } resourceAddressSpace
   * @param { !number } httpStatusCode
   */

  onRawResponse(devtoolRequestId, cookiesWithAccessResult, headers, rawResponseHeaders, resourceAddressSpace, httpStatusCode) {}
  
  /**
   * @param { ?string } devtoolRequestId
   * @param { !url.mojom.Url } url
   * @param { !boolean } isWarning
   * @param { !network.mojom.IPAddressSpace } resourceAddressSpace
   * @param { !network.mojom.ClientSecurityState } clientSecurityState
   */

  onPrivateNetworkRequest(devtoolRequestId, url, isWarning, resourceAddressSpace, clientSecurityState) {}
  
  /**
   * @param { !mojoBase.mojom.UnguessableToken } devtoolRequestId
   * @param { !network.mojom.HttpRequestHeaders } requestHeaders
   * @param { !network.mojom.URLRequestDevToolsInfo } requestInfo
   * @param { !url.mojom.Url } initiatorUrl
   * @param { !string } initiatorDevtoolRequestId
   */

  onCorsPreflightRequest(devtoolRequestId, requestHeaders, requestInfo, initiatorUrl, initiatorDevtoolRequestId) {}
  
  /**
   * @param { !mojoBase.mojom.UnguessableToken } devtoolRequestId
   * @param { !url.mojom.Url } url
   * @param { !network.mojom.URLResponseHeadDevToolsInfo } head
   */

  onCorsPreflightResponse(devtoolRequestId, url, head) {}
  
  /**
   * @param { !mojoBase.mojom.UnguessableToken } devtoolRequestId
   * @param { !network.mojom.URLLoaderCompletionStatus } status
   */

  onCorsPreflightRequestCompleted(devtoolRequestId, status) {}
  
  /**
   * @param { !string } devtoolRequestId
   * @param { !network.mojom.TrustTokenOperationResult } result
   */

  onTrustTokenOperationDone(devtoolRequestId, result) {}
  
  /**
   * @param { ?string } devtoolRequestId
   * @param { ?url.mojom.Origin } initiatorOrigin
   * @param { ?network.mojom.ClientSecurityState } clientSecurityState
   * @param { !url.mojom.Url } url
   * @param { !network.mojom.CorsErrorStatus } status
   * @param { !boolean } isWarning
   */

  onCorsError(devtoolRequestId, initiatorOrigin, clientSecurityState, url, status, isWarning) {}
  
  /**
   * @param { !string } devtoolRequestId
   * @param { !Array<!url.mojom.Url> } urls
   */

  onSubresourceWebBundleMetadata(devtoolRequestId, urls) {}
  
  /**
   * @param { !string } devtoolRequestId
   * @param { !string } errorMessage
   */

  onSubresourceWebBundleMetadataError(devtoolRequestId, errorMessage) {}
  
  /**
   * @param { !string } innerRequestDevtoolsId
   * @param { !url.mojom.Url } url
   * @param { ?string } bundleRequestDevtoolsId
   */

  onSubresourceWebBundleInnerResponse(innerRequestDevtoolsId, url, bundleRequestDevtoolsId) {}
  
  /**
   * @param { !string } innerRequestDevtoolsId
   * @param { !url.mojom.Url } url
   * @param { !string } errorMessage
   * @param { ?string } bundleRequestDevtoolsId
   */

  onSubresourceWebBundleInnerResponseError(innerRequestDevtoolsId, url, errorMessage, bundleRequestDevtoolsId) {}
  
  /**
   * @param { !network.mojom.DevToolsObserverPendingReceiver } listener
   */

  clone(listener) {}
};

/**
 * @export
 * @implements { network.mojom.DevToolsObserverInterface }
 */
network.mojom.DevToolsObserverRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!network.mojom.DevToolsObserverPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          network.mojom.DevToolsObserverPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!network.mojom.DevToolsObserverPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !string } devtoolRequestId
   * @param { !Array<!network.mojom.CookieWithAccessResult> } cookiesWithAccessResult
   * @param { !Array<!network.mojom.HttpRawHeaderPair> } headers
   * @param { !mojoBase.mojom.TimeTicks } timestamp
   * @param { ?network.mojom.ClientSecurityState } clientSecurityState
   */

  onRawRequest(
      devtoolRequestId,
      cookiesWithAccessResult,
      headers,
      timestamp,
      clientSecurityState) {
    this.proxy.sendMessage(
        0,
        network.mojom.DevToolsObserver_OnRawRequest_ParamsSpec.$,
        null,
        [
          devtoolRequestId,
          cookiesWithAccessResult,
          headers,
          timestamp,
          clientSecurityState
        ]);
  }

  
  /**
   * @param { !string } devtoolRequestId
   * @param { !Array<!network.mojom.CookieAndLineWithAccessResult> } cookiesWithAccessResult
   * @param { !Array<!network.mojom.HttpRawHeaderPair> } headers
   * @param { ?string } rawResponseHeaders
   * @param { !network.mojom.IPAddressSpace } resourceAddressSpace
   * @param { !number } httpStatusCode
   */

  onRawResponse(
      devtoolRequestId,
      cookiesWithAccessResult,
      headers,
      rawResponseHeaders,
      resourceAddressSpace,
      httpStatusCode) {
    this.proxy.sendMessage(
        1,
        network.mojom.DevToolsObserver_OnRawResponse_ParamsSpec.$,
        null,
        [
          devtoolRequestId,
          cookiesWithAccessResult,
          headers,
          rawResponseHeaders,
          resourceAddressSpace,
          httpStatusCode
        ]);
  }

  
  /**
   * @param { ?string } devtoolRequestId
   * @param { !url.mojom.Url } url
   * @param { !boolean } isWarning
   * @param { !network.mojom.IPAddressSpace } resourceAddressSpace
   * @param { !network.mojom.ClientSecurityState } clientSecurityState
   */

  onPrivateNetworkRequest(
      devtoolRequestId,
      url,
      isWarning,
      resourceAddressSpace,
      clientSecurityState) {
    this.proxy.sendMessage(
        2,
        network.mojom.DevToolsObserver_OnPrivateNetworkRequest_ParamsSpec.$,
        null,
        [
          devtoolRequestId,
          url,
          isWarning,
          resourceAddressSpace,
          clientSecurityState
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.UnguessableToken } devtoolRequestId
   * @param { !network.mojom.HttpRequestHeaders } requestHeaders
   * @param { !network.mojom.URLRequestDevToolsInfo } requestInfo
   * @param { !url.mojom.Url } initiatorUrl
   * @param { !string } initiatorDevtoolRequestId
   */

  onCorsPreflightRequest(
      devtoolRequestId,
      requestHeaders,
      requestInfo,
      initiatorUrl,
      initiatorDevtoolRequestId) {
    this.proxy.sendMessage(
        3,
        network.mojom.DevToolsObserver_OnCorsPreflightRequest_ParamsSpec.$,
        null,
        [
          devtoolRequestId,
          requestHeaders,
          requestInfo,
          initiatorUrl,
          initiatorDevtoolRequestId
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.UnguessableToken } devtoolRequestId
   * @param { !url.mojom.Url } url
   * @param { !network.mojom.URLResponseHeadDevToolsInfo } head
   */

  onCorsPreflightResponse(
      devtoolRequestId,
      url,
      head) {
    this.proxy.sendMessage(
        4,
        network.mojom.DevToolsObserver_OnCorsPreflightResponse_ParamsSpec.$,
        null,
        [
          devtoolRequestId,
          url,
          head
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.UnguessableToken } devtoolRequestId
   * @param { !network.mojom.URLLoaderCompletionStatus } status
   */

  onCorsPreflightRequestCompleted(
      devtoolRequestId,
      status) {
    this.proxy.sendMessage(
        5,
        network.mojom.DevToolsObserver_OnCorsPreflightRequestCompleted_ParamsSpec.$,
        null,
        [
          devtoolRequestId,
          status
        ]);
  }

  
  /**
   * @param { !string } devtoolRequestId
   * @param { !network.mojom.TrustTokenOperationResult } result
   */

  onTrustTokenOperationDone(
      devtoolRequestId,
      result) {
    this.proxy.sendMessage(
        6,
        network.mojom.DevToolsObserver_OnTrustTokenOperationDone_ParamsSpec.$,
        null,
        [
          devtoolRequestId,
          result
        ]);
  }

  
  /**
   * @param { ?string } devtoolRequestId
   * @param { ?url.mojom.Origin } initiatorOrigin
   * @param { ?network.mojom.ClientSecurityState } clientSecurityState
   * @param { !url.mojom.Url } url
   * @param { !network.mojom.CorsErrorStatus } status
   * @param { !boolean } isWarning
   */

  onCorsError(
      devtoolRequestId,
      initiatorOrigin,
      clientSecurityState,
      url,
      status,
      isWarning) {
    this.proxy.sendMessage(
        7,
        network.mojom.DevToolsObserver_OnCorsError_ParamsSpec.$,
        null,
        [
          devtoolRequestId,
          initiatorOrigin,
          clientSecurityState,
          url,
          status,
          isWarning
        ]);
  }

  
  /**
   * @param { !string } devtoolRequestId
   * @param { !Array<!url.mojom.Url> } urls
   */

  onSubresourceWebBundleMetadata(
      devtoolRequestId,
      urls) {
    this.proxy.sendMessage(
        8,
        network.mojom.DevToolsObserver_OnSubresourceWebBundleMetadata_ParamsSpec.$,
        null,
        [
          devtoolRequestId,
          urls
        ]);
  }

  
  /**
   * @param { !string } devtoolRequestId
   * @param { !string } errorMessage
   */

  onSubresourceWebBundleMetadataError(
      devtoolRequestId,
      errorMessage) {
    this.proxy.sendMessage(
        9,
        network.mojom.DevToolsObserver_OnSubresourceWebBundleMetadataError_ParamsSpec.$,
        null,
        [
          devtoolRequestId,
          errorMessage
        ]);
  }

  
  /**
   * @param { !string } innerRequestDevtoolsId
   * @param { !url.mojom.Url } url
   * @param { ?string } bundleRequestDevtoolsId
   */

  onSubresourceWebBundleInnerResponse(
      innerRequestDevtoolsId,
      url,
      bundleRequestDevtoolsId) {
    this.proxy.sendMessage(
        10,
        network.mojom.DevToolsObserver_OnSubresourceWebBundleInnerResponse_ParamsSpec.$,
        null,
        [
          innerRequestDevtoolsId,
          url,
          bundleRequestDevtoolsId
        ]);
  }

  
  /**
   * @param { !string } innerRequestDevtoolsId
   * @param { !url.mojom.Url } url
   * @param { !string } errorMessage
   * @param { ?string } bundleRequestDevtoolsId
   */

  onSubresourceWebBundleInnerResponseError(
      innerRequestDevtoolsId,
      url,
      errorMessage,
      bundleRequestDevtoolsId) {
    this.proxy.sendMessage(
        11,
        network.mojom.DevToolsObserver_OnSubresourceWebBundleInnerResponseError_ParamsSpec.$,
        null,
        [
          innerRequestDevtoolsId,
          url,
          errorMessage,
          bundleRequestDevtoolsId
        ]);
  }

  
  /**
   * @param { !network.mojom.DevToolsObserverPendingReceiver } listener
   */

  clone(
      listener) {
    this.proxy.sendMessage(
        12,
        network.mojom.DevToolsObserver_Clone_ParamsSpec.$,
        null,
        [
          listener
        ]);
  }
};

/**
 * An object which receives request messages for the DevToolsObserver
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
network.mojom.DevToolsObserverReceiver = class {
  /**
   * @param {!network.mojom.DevToolsObserverInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!network.mojom.DevToolsObserverRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        network.mojom.DevToolsObserverRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.DevToolsObserverRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        network.mojom.DevToolsObserver_OnRawRequest_ParamsSpec.$,
        null,
        impl.onRawRequest.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        network.mojom.DevToolsObserver_OnRawResponse_ParamsSpec.$,
        null,
        impl.onRawResponse.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        network.mojom.DevToolsObserver_OnPrivateNetworkRequest_ParamsSpec.$,
        null,
        impl.onPrivateNetworkRequest.bind(impl));
    this.helper_internal_.registerHandler(
        3,
        network.mojom.DevToolsObserver_OnCorsPreflightRequest_ParamsSpec.$,
        null,
        impl.onCorsPreflightRequest.bind(impl));
    this.helper_internal_.registerHandler(
        4,
        network.mojom.DevToolsObserver_OnCorsPreflightResponse_ParamsSpec.$,
        null,
        impl.onCorsPreflightResponse.bind(impl));
    this.helper_internal_.registerHandler(
        5,
        network.mojom.DevToolsObserver_OnCorsPreflightRequestCompleted_ParamsSpec.$,
        null,
        impl.onCorsPreflightRequestCompleted.bind(impl));
    this.helper_internal_.registerHandler(
        6,
        network.mojom.DevToolsObserver_OnTrustTokenOperationDone_ParamsSpec.$,
        null,
        impl.onTrustTokenOperationDone.bind(impl));
    this.helper_internal_.registerHandler(
        7,
        network.mojom.DevToolsObserver_OnCorsError_ParamsSpec.$,
        null,
        impl.onCorsError.bind(impl));
    this.helper_internal_.registerHandler(
        8,
        network.mojom.DevToolsObserver_OnSubresourceWebBundleMetadata_ParamsSpec.$,
        null,
        impl.onSubresourceWebBundleMetadata.bind(impl));
    this.helper_internal_.registerHandler(
        9,
        network.mojom.DevToolsObserver_OnSubresourceWebBundleMetadataError_ParamsSpec.$,
        null,
        impl.onSubresourceWebBundleMetadataError.bind(impl));
    this.helper_internal_.registerHandler(
        10,
        network.mojom.DevToolsObserver_OnSubresourceWebBundleInnerResponse_ParamsSpec.$,
        null,
        impl.onSubresourceWebBundleInnerResponse.bind(impl));
    this.helper_internal_.registerHandler(
        11,
        network.mojom.DevToolsObserver_OnSubresourceWebBundleInnerResponseError_ParamsSpec.$,
        null,
        impl.onSubresourceWebBundleInnerResponseError.bind(impl));
    this.helper_internal_.registerHandler(
        12,
        network.mojom.DevToolsObserver_Clone_ParamsSpec.$,
        null,
        impl.clone.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
network.mojom.DevToolsObserver = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "network.mojom.DevToolsObserver";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!network.mojom.DevToolsObserverRemote}
   * @export
   */
  static getRemote() {
    let remote = new network.mojom.DevToolsObserverRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the DevToolsObserver
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
network.mojom.DevToolsObserverCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      network.mojom.DevToolsObserverRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.DevToolsObserverRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onRawRequest =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        network.mojom.DevToolsObserver_OnRawRequest_ParamsSpec.$,
        null,
        this.onRawRequest.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onRawResponse =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        network.mojom.DevToolsObserver_OnRawResponse_ParamsSpec.$,
        null,
        this.onRawResponse.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onPrivateNetworkRequest =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        network.mojom.DevToolsObserver_OnPrivateNetworkRequest_ParamsSpec.$,
        null,
        this.onPrivateNetworkRequest.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onCorsPreflightRequest =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        3,
        network.mojom.DevToolsObserver_OnCorsPreflightRequest_ParamsSpec.$,
        null,
        this.onCorsPreflightRequest.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onCorsPreflightResponse =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        4,
        network.mojom.DevToolsObserver_OnCorsPreflightResponse_ParamsSpec.$,
        null,
        this.onCorsPreflightResponse.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onCorsPreflightRequestCompleted =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        5,
        network.mojom.DevToolsObserver_OnCorsPreflightRequestCompleted_ParamsSpec.$,
        null,
        this.onCorsPreflightRequestCompleted.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onTrustTokenOperationDone =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        6,
        network.mojom.DevToolsObserver_OnTrustTokenOperationDone_ParamsSpec.$,
        null,
        this.onTrustTokenOperationDone.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onCorsError =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        7,
        network.mojom.DevToolsObserver_OnCorsError_ParamsSpec.$,
        null,
        this.onCorsError.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onSubresourceWebBundleMetadata =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        8,
        network.mojom.DevToolsObserver_OnSubresourceWebBundleMetadata_ParamsSpec.$,
        null,
        this.onSubresourceWebBundleMetadata.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onSubresourceWebBundleMetadataError =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        9,
        network.mojom.DevToolsObserver_OnSubresourceWebBundleMetadataError_ParamsSpec.$,
        null,
        this.onSubresourceWebBundleMetadataError.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onSubresourceWebBundleInnerResponse =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        10,
        network.mojom.DevToolsObserver_OnSubresourceWebBundleInnerResponse_ParamsSpec.$,
        null,
        this.onSubresourceWebBundleInnerResponse.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onSubresourceWebBundleInnerResponseError =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        11,
        network.mojom.DevToolsObserver_OnSubresourceWebBundleInnerResponseError_ParamsSpec.$,
        null,
        this.onSubresourceWebBundleInnerResponseError.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clone =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        12,
        network.mojom.DevToolsObserver_Clone_ParamsSpec.$,
        null,
        this.clone.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('network.mojom.URLRequestDevToolsInfoSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.URLRequestDevToolsInfoSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.URLResponseHeadDevToolsInfoSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.URLResponseHeadDevToolsInfoSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.DevToolsObserver_OnRawRequest_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.DevToolsObserver_OnRawRequest_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.DevToolsObserver_OnRawResponse_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.DevToolsObserver_OnRawResponse_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.DevToolsObserver_OnPrivateNetworkRequest_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.DevToolsObserver_OnPrivateNetworkRequest_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.DevToolsObserver_OnCorsPreflightRequest_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.DevToolsObserver_OnCorsPreflightRequest_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.DevToolsObserver_OnCorsPreflightResponse_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.DevToolsObserver_OnCorsPreflightResponse_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.DevToolsObserver_OnCorsPreflightRequestCompleted_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.DevToolsObserver_OnCorsPreflightRequestCompleted_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.DevToolsObserver_OnTrustTokenOperationDone_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.DevToolsObserver_OnTrustTokenOperationDone_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.DevToolsObserver_OnCorsError_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.DevToolsObserver_OnCorsError_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.DevToolsObserver_OnSubresourceWebBundleMetadata_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.DevToolsObserver_OnSubresourceWebBundleMetadata_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.DevToolsObserver_OnSubresourceWebBundleMetadataError_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.DevToolsObserver_OnSubresourceWebBundleMetadataError_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.DevToolsObserver_OnSubresourceWebBundleInnerResponse_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.DevToolsObserver_OnSubresourceWebBundleInnerResponse_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.DevToolsObserver_OnSubresourceWebBundleInnerResponseError_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.DevToolsObserver_OnSubresourceWebBundleInnerResponseError_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.DevToolsObserver_Clone_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.DevToolsObserver_Clone_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    network.mojom.URLRequestDevToolsInfoSpec.$,
    'URLRequestDevToolsInfo',
    [
      mojo.internal.StructField(
        'method', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'url', 8,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'priority', 16,
        0,
        network.mojom.RequestPrioritySpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'referrerPolicy', 20,
        0,
        network.mojom.URLRequestReferrerPolicySpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'trustTokenParams', 24,
        0,
        network.mojom.TrustTokenParamsSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'hasUserGesture', 32,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'resourceType', 36,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
    ],
    [[0, 48],]);



goog.provide('network.mojom.URLRequestDevToolsInfo');

/** @record */
network.mojom.URLRequestDevToolsInfo = class {
  constructor() {
    /** @export { !string } */
    this.method;
    /** @export { !url.mojom.Url } */
    this.url;
    /** @export { !network.mojom.RequestPriority } */
    this.priority;
    /** @export { !network.mojom.URLRequestReferrerPolicy } */
    this.referrerPolicy;
    /** @export { (network.mojom.TrustTokenParams|undefined) } */
    this.trustTokenParams;
    /** @export { !boolean } */
    this.hasUserGesture;
    /** @export { !number } */
    this.resourceType;
  }
};




mojo.internal.Struct(
    network.mojom.URLResponseHeadDevToolsInfoSpec.$,
    'URLResponseHeadDevToolsInfo',
    [
      mojo.internal.StructField(
        'responseTime', 0,
        0,
        mojoBase.mojom.TimeSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'headers', 8,
        0,
        network.mojom.HttpResponseHeadersSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'mimeType', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'loadTiming', 24,
        0,
        network.mojom.LoadTimingInfoSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'certStatus', 32,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'encodedDataLength', 40,
        0,
        mojo.internal.Int64,
        BigInt(0),
        false /* nullable */),
      mojo.internal.StructField(
        'wasInPrefetchCache', 36,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'wasFetchedViaServiceWorker', 36,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'cacheStorageCacheName', 48,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'alpnNegotiatedProtocol', 56,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'wasFetchedViaSpdy', 36,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'serviceWorkerResponseSource', 64,
        0,
        network.mojom.FetchResponseSourceSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'sslInfo', 72,
        0,
        network.mojom.SSLInfoSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'remoteEndpoint', 80,
        0,
        network.mojom.IPEndPointSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'emittedExtraInfo', 36,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 96],]);



goog.provide('network.mojom.URLResponseHeadDevToolsInfo');

/** @record */
network.mojom.URLResponseHeadDevToolsInfo = class {
  constructor() {
    /** @export { !mojoBase.mojom.Time } */
    this.responseTime;
    /** @export { !network.mojom.HttpResponseHeaders } */
    this.headers;
    /** @export { !string } */
    this.mimeType;
    /** @export { !network.mojom.LoadTimingInfo } */
    this.loadTiming;
    /** @export { !number } */
    this.certStatus;
    /** @export { !boolean } */
    this.wasInPrefetchCache;
    /** @export { !boolean } */
    this.wasFetchedViaServiceWorker;
    /** @export { !boolean } */
    this.wasFetchedViaSpdy;
    /** @export { !boolean } */
    this.emittedExtraInfo;
    /** @export { !bigint } */
    this.encodedDataLength;
    /** @export { !string } */
    this.cacheStorageCacheName;
    /** @export { !string } */
    this.alpnNegotiatedProtocol;
    /** @export { !network.mojom.FetchResponseSource } */
    this.serviceWorkerResponseSource;
    /** @export { (network.mojom.SSLInfo|undefined) } */
    this.sslInfo;
    /** @export { !network.mojom.IPEndPoint } */
    this.remoteEndpoint;
  }
};




mojo.internal.Struct(
    network.mojom.DevToolsObserver_OnRawRequest_ParamsSpec.$,
    'DevToolsObserver_OnRawRequest_Params',
    [
      mojo.internal.StructField(
        'devtoolRequestId', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'cookiesWithAccessResult', 8,
        0,
        mojo.internal.Array(network.mojom.CookieWithAccessResultSpec.$, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'headers', 16,
        0,
        mojo.internal.Array(network.mojom.HttpRawHeaderPairSpec.$, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'timestamp', 24,
        0,
        mojoBase.mojom.TimeTicksSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'clientSecurityState', 32,
        0,
        network.mojom.ClientSecurityStateSpec.$,
        null,
        true /* nullable */),
    ],
    [[0, 48],]);



goog.provide('network.mojom.DevToolsObserver_OnRawRequest_Params');

/** @record */
network.mojom.DevToolsObserver_OnRawRequest_Params = class {
  constructor() {
    /** @export { !string } */
    this.devtoolRequestId;
    /** @export { !Array<!network.mojom.CookieWithAccessResult> } */
    this.cookiesWithAccessResult;
    /** @export { !Array<!network.mojom.HttpRawHeaderPair> } */
    this.headers;
    /** @export { !mojoBase.mojom.TimeTicks } */
    this.timestamp;
    /** @export { (network.mojom.ClientSecurityState|undefined) } */
    this.clientSecurityState;
  }
};




mojo.internal.Struct(
    network.mojom.DevToolsObserver_OnRawResponse_ParamsSpec.$,
    'DevToolsObserver_OnRawResponse_Params',
    [
      mojo.internal.StructField(
        'devtoolRequestId', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'cookiesWithAccessResult', 8,
        0,
        mojo.internal.Array(network.mojom.CookieAndLineWithAccessResultSpec.$, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'headers', 16,
        0,
        mojo.internal.Array(network.mojom.HttpRawHeaderPairSpec.$, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'rawResponseHeaders', 24,
        0,
        mojo.internal.String,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'resourceAddressSpace', 32,
        0,
        network.mojom.IPAddressSpaceSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'httpStatusCode', 36,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ],
    [[0, 48],]);



goog.provide('network.mojom.DevToolsObserver_OnRawResponse_Params');

/** @record */
network.mojom.DevToolsObserver_OnRawResponse_Params = class {
  constructor() {
    /** @export { !string } */
    this.devtoolRequestId;
    /** @export { !Array<!network.mojom.CookieAndLineWithAccessResult> } */
    this.cookiesWithAccessResult;
    /** @export { !Array<!network.mojom.HttpRawHeaderPair> } */
    this.headers;
    /** @export { (string|undefined) } */
    this.rawResponseHeaders;
    /** @export { !network.mojom.IPAddressSpace } */
    this.resourceAddressSpace;
    /** @export { !number } */
    this.httpStatusCode;
  }
};




mojo.internal.Struct(
    network.mojom.DevToolsObserver_OnPrivateNetworkRequest_ParamsSpec.$,
    'DevToolsObserver_OnPrivateNetworkRequest_Params',
    [
      mojo.internal.StructField(
        'devtoolRequestId', 0,
        0,
        mojo.internal.String,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'url', 8,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'isWarning', 16,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'resourceAddressSpace', 20,
        0,
        network.mojom.IPAddressSpaceSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'clientSecurityState', 24,
        0,
        network.mojom.ClientSecurityStateSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 40],]);



goog.provide('network.mojom.DevToolsObserver_OnPrivateNetworkRequest_Params');

/** @record */
network.mojom.DevToolsObserver_OnPrivateNetworkRequest_Params = class {
  constructor() {
    /** @export { (string|undefined) } */
    this.devtoolRequestId;
    /** @export { !url.mojom.Url } */
    this.url;
    /** @export { !boolean } */
    this.isWarning;
    /** @export { !network.mojom.IPAddressSpace } */
    this.resourceAddressSpace;
    /** @export { !network.mojom.ClientSecurityState } */
    this.clientSecurityState;
  }
};




mojo.internal.Struct(
    network.mojom.DevToolsObserver_OnCorsPreflightRequest_ParamsSpec.$,
    'DevToolsObserver_OnCorsPreflightRequest_Params',
    [
      mojo.internal.StructField(
        'devtoolRequestId', 0,
        0,
        mojoBase.mojom.UnguessableTokenSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'requestHeaders', 8,
        0,
        network.mojom.HttpRequestHeadersSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'requestInfo', 16,
        0,
        network.mojom.URLRequestDevToolsInfoSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'initiatorUrl', 24,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'initiatorDevtoolRequestId', 32,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ],
    [[0, 48],]);



goog.provide('network.mojom.DevToolsObserver_OnCorsPreflightRequest_Params');

/** @record */
network.mojom.DevToolsObserver_OnCorsPreflightRequest_Params = class {
  constructor() {
    /** @export { !mojoBase.mojom.UnguessableToken } */
    this.devtoolRequestId;
    /** @export { !network.mojom.HttpRequestHeaders } */
    this.requestHeaders;
    /** @export { !network.mojom.URLRequestDevToolsInfo } */
    this.requestInfo;
    /** @export { !url.mojom.Url } */
    this.initiatorUrl;
    /** @export { !string } */
    this.initiatorDevtoolRequestId;
  }
};




mojo.internal.Struct(
    network.mojom.DevToolsObserver_OnCorsPreflightResponse_ParamsSpec.$,
    'DevToolsObserver_OnCorsPreflightResponse_Params',
    [
      mojo.internal.StructField(
        'devtoolRequestId', 0,
        0,
        mojoBase.mojom.UnguessableTokenSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'url', 8,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'head', 16,
        0,
        network.mojom.URLResponseHeadDevToolsInfoSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 32],]);



goog.provide('network.mojom.DevToolsObserver_OnCorsPreflightResponse_Params');

/** @record */
network.mojom.DevToolsObserver_OnCorsPreflightResponse_Params = class {
  constructor() {
    /** @export { !mojoBase.mojom.UnguessableToken } */
    this.devtoolRequestId;
    /** @export { !url.mojom.Url } */
    this.url;
    /** @export { !network.mojom.URLResponseHeadDevToolsInfo } */
    this.head;
  }
};




mojo.internal.Struct(
    network.mojom.DevToolsObserver_OnCorsPreflightRequestCompleted_ParamsSpec.$,
    'DevToolsObserver_OnCorsPreflightRequestCompleted_Params',
    [
      mojo.internal.StructField(
        'devtoolRequestId', 0,
        0,
        mojoBase.mojom.UnguessableTokenSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'status', 8,
        0,
        network.mojom.URLLoaderCompletionStatusSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.DevToolsObserver_OnCorsPreflightRequestCompleted_Params');

/** @record */
network.mojom.DevToolsObserver_OnCorsPreflightRequestCompleted_Params = class {
  constructor() {
    /** @export { !mojoBase.mojom.UnguessableToken } */
    this.devtoolRequestId;
    /** @export { !network.mojom.URLLoaderCompletionStatus } */
    this.status;
  }
};




mojo.internal.Struct(
    network.mojom.DevToolsObserver_OnTrustTokenOperationDone_ParamsSpec.$,
    'DevToolsObserver_OnTrustTokenOperationDone_Params',
    [
      mojo.internal.StructField(
        'devtoolRequestId', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'result', 8,
        0,
        network.mojom.TrustTokenOperationResultSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.DevToolsObserver_OnTrustTokenOperationDone_Params');

/** @record */
network.mojom.DevToolsObserver_OnTrustTokenOperationDone_Params = class {
  constructor() {
    /** @export { !string } */
    this.devtoolRequestId;
    /** @export { !network.mojom.TrustTokenOperationResult } */
    this.result;
  }
};




mojo.internal.Struct(
    network.mojom.DevToolsObserver_OnCorsError_ParamsSpec.$,
    'DevToolsObserver_OnCorsError_Params',
    [
      mojo.internal.StructField(
        'devtoolRequestId', 0,
        0,
        mojo.internal.String,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'initiatorOrigin', 8,
        0,
        url.mojom.OriginSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'clientSecurityState', 16,
        0,
        network.mojom.ClientSecurityStateSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'url', 24,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'status', 32,
        0,
        network.mojom.CorsErrorStatusSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'isWarning', 40,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 56],]);



goog.provide('network.mojom.DevToolsObserver_OnCorsError_Params');

/** @record */
network.mojom.DevToolsObserver_OnCorsError_Params = class {
  constructor() {
    /** @export { (string|undefined) } */
    this.devtoolRequestId;
    /** @export { (url.mojom.Origin|undefined) } */
    this.initiatorOrigin;
    /** @export { (network.mojom.ClientSecurityState|undefined) } */
    this.clientSecurityState;
    /** @export { !url.mojom.Url } */
    this.url;
    /** @export { !network.mojom.CorsErrorStatus } */
    this.status;
    /** @export { !boolean } */
    this.isWarning;
  }
};




mojo.internal.Struct(
    network.mojom.DevToolsObserver_OnSubresourceWebBundleMetadata_ParamsSpec.$,
    'DevToolsObserver_OnSubresourceWebBundleMetadata_Params',
    [
      mojo.internal.StructField(
        'devtoolRequestId', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'urls', 8,
        0,
        mojo.internal.Array(url.mojom.UrlSpec.$, false),
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.DevToolsObserver_OnSubresourceWebBundleMetadata_Params');

/** @record */
network.mojom.DevToolsObserver_OnSubresourceWebBundleMetadata_Params = class {
  constructor() {
    /** @export { !string } */
    this.devtoolRequestId;
    /** @export { !Array<!url.mojom.Url> } */
    this.urls;
  }
};




mojo.internal.Struct(
    network.mojom.DevToolsObserver_OnSubresourceWebBundleMetadataError_ParamsSpec.$,
    'DevToolsObserver_OnSubresourceWebBundleMetadataError_Params',
    [
      mojo.internal.StructField(
        'devtoolRequestId', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'errorMessage', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.DevToolsObserver_OnSubresourceWebBundleMetadataError_Params');

/** @record */
network.mojom.DevToolsObserver_OnSubresourceWebBundleMetadataError_Params = class {
  constructor() {
    /** @export { !string } */
    this.devtoolRequestId;
    /** @export { !string } */
    this.errorMessage;
  }
};




mojo.internal.Struct(
    network.mojom.DevToolsObserver_OnSubresourceWebBundleInnerResponse_ParamsSpec.$,
    'DevToolsObserver_OnSubresourceWebBundleInnerResponse_Params',
    [
      mojo.internal.StructField(
        'innerRequestDevtoolsId', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'url', 8,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'bundleRequestDevtoolsId', 16,
        0,
        mojo.internal.String,
        null,
        true /* nullable */),
    ],
    [[0, 32],]);



goog.provide('network.mojom.DevToolsObserver_OnSubresourceWebBundleInnerResponse_Params');

/** @record */
network.mojom.DevToolsObserver_OnSubresourceWebBundleInnerResponse_Params = class {
  constructor() {
    /** @export { !string } */
    this.innerRequestDevtoolsId;
    /** @export { !url.mojom.Url } */
    this.url;
    /** @export { (string|undefined) } */
    this.bundleRequestDevtoolsId;
  }
};




mojo.internal.Struct(
    network.mojom.DevToolsObserver_OnSubresourceWebBundleInnerResponseError_ParamsSpec.$,
    'DevToolsObserver_OnSubresourceWebBundleInnerResponseError_Params',
    [
      mojo.internal.StructField(
        'innerRequestDevtoolsId', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'url', 8,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'errorMessage', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'bundleRequestDevtoolsId', 24,
        0,
        mojo.internal.String,
        null,
        true /* nullable */),
    ],
    [[0, 40],]);



goog.provide('network.mojom.DevToolsObserver_OnSubresourceWebBundleInnerResponseError_Params');

/** @record */
network.mojom.DevToolsObserver_OnSubresourceWebBundleInnerResponseError_Params = class {
  constructor() {
    /** @export { !string } */
    this.innerRequestDevtoolsId;
    /** @export { !url.mojom.Url } */
    this.url;
    /** @export { !string } */
    this.errorMessage;
    /** @export { (string|undefined) } */
    this.bundleRequestDevtoolsId;
  }
};




mojo.internal.Struct(
    network.mojom.DevToolsObserver_Clone_ParamsSpec.$,
    'DevToolsObserver_Clone_Params',
    [
      mojo.internal.StructField(
        'listener', 0,
        0,
        mojo.internal.InterfaceRequest(network.mojom.DevToolsObserverPendingReceiver),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.DevToolsObserver_Clone_Params');

/** @record */
network.mojom.DevToolsObserver_Clone_Params = class {
  constructor() {
    /** @export { !network.mojom.DevToolsObserverPendingReceiver } */
    this.listener;
  }
};


