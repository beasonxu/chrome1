// services/network/public/mojom/network_context.mojom.m.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import {mojo} from '../../../../mojo/public/js/bindings.js';

import {
  FilePath as mojoBase_mojom_FilePath,
  FilePathSpec as mojoBase_mojom_FilePathSpec
} from '../../../../mojo/public/mojom/base/file_path.mojom.m.js';

import {
  ReadOnlyFile as mojoBase_mojom_ReadOnlyFile,
  ReadOnlyFileSpec as mojoBase_mojom_ReadOnlyFileSpec
} from '../../../../mojo/public/mojom/base/read_only_file.mojom.m.js';

import {
  Time as mojoBase_mojom_Time,
  TimeSpec as mojoBase_mojom_TimeSpec,
  TimeDelta as mojoBase_mojom_TimeDelta,
  TimeDeltaSpec as mojoBase_mojom_TimeDeltaSpec
} from '../../../../mojo/public/mojom/base/time.mojom.m.js';

import {
  UnguessableToken as mojoBase_mojom_UnguessableToken,
  UnguessableTokenSpec as mojoBase_mojom_UnguessableTokenSpec
} from '../../../../mojo/public/mojom/base/unguessable_token.mojom.m.js';

import {
  DictionaryValue as mojoBase_mojom_DictionaryValue,
  DictionaryValueSpec as mojoBase_mojom_DictionaryValueSpec
} from '../../../../mojo/public/mojom/base/values.mojom.m.js';

import {
  Origin as url_mojom_Origin,
  OriginSpec as url_mojom_OriginSpec
} from '../../../../url/mojom/origin.mojom.m.js';

import {
  Url as url_mojom_Url,
  UrlSpec as url_mojom_UrlSpec
} from '../../../../url/mojom/url.mojom.m.js';

import {
  ProxyResolverFactoryRemote as proxyResolver_mojom_ProxyResolverFactoryRemote,
  ProxyResolverFactoryPendingReceiver as proxyResolver_mojom_ProxyResolverFactoryPendingReceiver,
  ProxyServer as proxyResolver_mojom_ProxyServer,
  ProxyServerSpec as proxyResolver_mojom_ProxyServerSpec
} from '../../../proxy_resolver/public/mojom/proxy_resolver.mojom.m.js';

import {
  AddressList as network_mojom_AddressList,
  AddressListSpec as network_mojom_AddressListSpec
} from './address_list.mojom.m.js';

import {
  CertVerifierServiceRemote as certVerifier_mojom_CertVerifierServiceRemote,
  CertVerifierServicePendingReceiver as certVerifier_mojom_CertVerifierServicePendingReceiver
} from './cert_verifier_service.mojom.m.js';

import {
  ClientSecurityState as network_mojom_ClientSecurityState,
  ClientSecurityStateSpec as network_mojom_ClientSecurityStateSpec
} from './client_security_state.mojom.m.js';

import {
  CookieAccessObserverRemote as network_mojom_CookieAccessObserverRemote,
  CookieAccessObserverPendingReceiver as network_mojom_CookieAccessObserverPendingReceiver
} from './cookie_access_observer.mojom.m.js';

import {
  CookieManagerRemote as network_mojom_CookieManagerRemote,
  CookieManagerPendingReceiver as network_mojom_CookieManagerPendingReceiver,
  CookieManagerParams as network_mojom_CookieManagerParams,
  CookieManagerParamsSpec as network_mojom_CookieManagerParamsSpec
} from './cookie_manager.mojom.m.js';

import {
  CorsOriginAccessPatterns as network_mojom_CorsOriginAccessPatterns,
  CorsOriginAccessPatternsSpec as network_mojom_CorsOriginAccessPatternsSpec,
  CorsOriginPattern as network_mojom_CorsOriginPattern,
  CorsOriginPatternSpec as network_mojom_CorsOriginPatternSpec
} from './cors_origin_pattern.mojom.m.js';

import {
  CrossOriginEmbedderPolicyReporterRemote as network_mojom_CrossOriginEmbedderPolicyReporterRemote,
  CrossOriginEmbedderPolicyReporterPendingReceiver as network_mojom_CrossOriginEmbedderPolicyReporterPendingReceiver
} from './cross_origin_embedder_policy.mojom.m.js';

import {
  DefaultCredentials as network_mojom_DefaultCredentials,
  DefaultCredentialsSpec as network_mojom_DefaultCredentialsSpec
} from './default_credentials.mojom.m.js';

import {
  DevToolsObserverRemote as network_mojom_DevToolsObserverRemote,
  DevToolsObserverPendingReceiver as network_mojom_DevToolsObserverPendingReceiver
} from './devtools_observer.mojom.m.js';

import {
  FirstPartySetsAccessDelegateRemote as network_mojom_FirstPartySetsAccessDelegateRemote,
  FirstPartySetsAccessDelegatePendingReceiver as network_mojom_FirstPartySetsAccessDelegatePendingReceiver,
  FirstPartySetsAccessDelegateParams as network_mojom_FirstPartySetsAccessDelegateParams,
  FirstPartySetsAccessDelegateParamsSpec as network_mojom_FirstPartySetsAccessDelegateParamsSpec
} from './first_party_sets_access_delegate.mojom.m.js';

import {
  HostResolverRemote as network_mojom_HostResolverRemote,
  HostResolverPendingReceiver as network_mojom_HostResolverPendingReceiver,
  ResolveHostClientRemote as network_mojom_ResolveHostClientRemote,
  ResolveHostClientPendingReceiver as network_mojom_ResolveHostClientPendingReceiver,
  DnsConfigOverrides as network_mojom_DnsConfigOverrides,
  DnsConfigOverridesSpec as network_mojom_DnsConfigOverridesSpec,
  ResolveHostParameters as network_mojom_ResolveHostParameters,
  ResolveHostParametersSpec as network_mojom_ResolveHostParametersSpec
} from './host_resolver.mojom.m.js';

import {
  HttpCacheBackendFileOperationsFactoryRemote as network_mojom_HttpCacheBackendFileOperationsFactoryRemote,
  HttpCacheBackendFileOperationsFactoryPendingReceiver as network_mojom_HttpCacheBackendFileOperationsFactoryPendingReceiver
} from './http_cache_backend_file_operations.mojom.m.js';

import {
  HttpRequestHeaders as network_mojom_HttpRequestHeaders,
  HttpRequestHeadersSpec as network_mojom_HttpRequestHeadersSpec
} from './http_request_headers.mojom.m.js';

import {
  IPAddress as network_mojom_IPAddress,
  IPAddressSpec as network_mojom_IPAddressSpec
} from './ip_address.mojom.m.js';

import {
  IPEndPoint as network_mojom_IPEndPoint,
  IPEndPointSpec as network_mojom_IPEndPointSpec
} from './ip_endpoint.mojom.m.js';

import {
  IsolationInfo as network_mojom_IsolationInfo,
  IsolationInfoSpec as network_mojom_IsolationInfoSpec
} from './isolation_info.mojom.m.js';

import {
  MdnsResponderRemote as network_mojom_MdnsResponderRemote,
  MdnsResponderPendingReceiver as network_mojom_MdnsResponderPendingReceiver
} from './mdns_responder.mojom.m.js';

import {
  MutableNetworkTrafficAnnotationTag as network_mojom_MutableNetworkTrafficAnnotationTag,
  MutableNetworkTrafficAnnotationTagSpec as network_mojom_MutableNetworkTrafficAnnotationTagSpec
} from './mutable_network_traffic_annotation_tag.mojom.m.js';

import {
  NetLogExporterRemote as network_mojom_NetLogExporterRemote,
  NetLogExporterPendingReceiver as network_mojom_NetLogExporterPendingReceiver
} from './net_log.mojom.m.js';

import {
  NetworkIsolationKey as network_mojom_NetworkIsolationKey,
  NetworkIsolationKeySpec as network_mojom_NetworkIsolationKeySpec
} from './network_isolation_key.mojom.m.js';

import {
  AuthChallengeInfo as network_mojom_AuthChallengeInfo,
  AuthChallengeInfoSpec as network_mojom_AuthChallengeInfoSpec,
  AuthCredentials as network_mojom_AuthCredentials,
  AuthCredentialsSpec as network_mojom_AuthCredentialsSpec,
  CertVerifyResult as network_mojom_CertVerifyResult,
  CertVerifyResultSpec as network_mojom_CertVerifyResultSpec,
  HostPortPair as network_mojom_HostPortPair,
  HostPortPairSpec as network_mojom_HostPortPairSpec,
  HttpResponseHeaders as network_mojom_HttpResponseHeaders,
  HttpResponseHeadersSpec as network_mojom_HttpResponseHeadersSpec,
  X509Certificate as network_mojom_X509Certificate,
  X509CertificateSpec as network_mojom_X509CertificateSpec
} from './network_param.mojom.m.js';

import {
  P2PSocketManagerRemote as network_mojom_P2PSocketManagerRemote,
  P2PSocketManagerPendingReceiver as network_mojom_P2PSocketManagerPendingReceiver
} from './p2p.mojom.m.js';

import {
  P2PTrustedSocketManagerRemote as network_mojom_P2PTrustedSocketManagerRemote,
  P2PTrustedSocketManagerPendingReceiver as network_mojom_P2PTrustedSocketManagerPendingReceiver,
  P2PTrustedSocketManagerClientRemote as network_mojom_P2PTrustedSocketManagerClientRemote,
  P2PTrustedSocketManagerClientPendingReceiver as network_mojom_P2PTrustedSocketManagerClientPendingReceiver
} from './p2p_trusted.mojom.m.js';

import {
  ProxyList as network_mojom_ProxyList,
  ProxyListSpec as network_mojom_ProxyListSpec,
  ProxyRules as network_mojom_ProxyRules,
  ProxyRulesSpec as network_mojom_ProxyRulesSpec
} from './proxy_config.mojom.m.js';

import {
  ProxyConfigClientRemote as network_mojom_ProxyConfigClientRemote,
  ProxyConfigClientPendingReceiver as network_mojom_ProxyConfigClientPendingReceiver,
  ProxyConfigPollerClientRemote as network_mojom_ProxyConfigPollerClientRemote,
  ProxyConfigPollerClientPendingReceiver as network_mojom_ProxyConfigPollerClientPendingReceiver,
  ProxyErrorClientRemote as network_mojom_ProxyErrorClientRemote,
  ProxyErrorClientPendingReceiver as network_mojom_ProxyErrorClientPendingReceiver,
  ProxyConfigWithAnnotation as network_mojom_ProxyConfigWithAnnotation,
  ProxyConfigWithAnnotationSpec as network_mojom_ProxyConfigWithAnnotationSpec
} from './proxy_config_with_annotation.mojom.m.js';

import {
  ProxyLookupClientRemote as network_mojom_ProxyLookupClientRemote,
  ProxyLookupClientPendingReceiver as network_mojom_ProxyLookupClientPendingReceiver
} from './proxy_lookup_client.mojom.m.js';

import {
  ProxyResolvingSocketFactoryRemote as network_mojom_ProxyResolvingSocketFactoryRemote,
  ProxyResolvingSocketFactoryPendingReceiver as network_mojom_ProxyResolvingSocketFactoryPendingReceiver
} from './proxy_resolving_socket.mojom.m.js';

import {
  ReportingApiObserverRemote as network_mojom_ReportingApiObserverRemote,
  ReportingApiObserverPendingReceiver as network_mojom_ReportingApiObserverPendingReceiver
} from './reporting_service.mojom.m.js';

import {
  RestrictedCookieManagerRole as network_mojom_RestrictedCookieManagerRole,
  RestrictedCookieManagerRoleSpec as network_mojom_RestrictedCookieManagerRoleSpec,
  RestrictedCookieManagerRemote as network_mojom_RestrictedCookieManagerRemote,
  RestrictedCookieManagerPendingReceiver as network_mojom_RestrictedCookieManagerPendingReceiver
} from './restricted_cookie_manager.mojom.m.js';

import {
  SiteForCookies as network_mojom_SiteForCookies,
  SiteForCookiesSpec as network_mojom_SiteForCookiesSpec
} from './site_for_cookies.mojom.m.js';

import {
  SocketBrokerRemote as network_mojom_SocketBrokerRemote,
  SocketBrokerPendingReceiver as network_mojom_SocketBrokerPendingReceiver
} from './socket_broker.mojom.m.js';

import {
  SSLConfigClientRemote as network_mojom_SSLConfigClientRemote,
  SSLConfigClientPendingReceiver as network_mojom_SSLConfigClientPendingReceiver,
  SSLConfig as network_mojom_SSLConfig,
  SSLConfigSpec as network_mojom_SSLConfigSpec
} from './ssl_config.mojom.m.js';

import {
  SocketObserverRemote as network_mojom_SocketObserverRemote,
  SocketObserverPendingReceiver as network_mojom_SocketObserverPendingReceiver,
  TCPBoundSocketRemote as network_mojom_TCPBoundSocketRemote,
  TCPBoundSocketPendingReceiver as network_mojom_TCPBoundSocketPendingReceiver,
  TCPConnectedSocketRemote as network_mojom_TCPConnectedSocketRemote,
  TCPConnectedSocketPendingReceiver as network_mojom_TCPConnectedSocketPendingReceiver,
  TCPServerSocketRemote as network_mojom_TCPServerSocketRemote,
  TCPServerSocketPendingReceiver as network_mojom_TCPServerSocketPendingReceiver,
  TCPConnectedSocketOptions as network_mojom_TCPConnectedSocketOptions,
  TCPConnectedSocketOptionsSpec as network_mojom_TCPConnectedSocketOptionsSpec
} from './tcp_socket.mojom.m.js';

import {
  TransferableDirectory as network_mojom_TransferableDirectory,
  TransferableDirectorySpec as network_mojom_TransferableDirectorySpec
} from './transferable_directory.mojom.m.js';

import {
  DeleteStoredTrustTokensStatus as network_mojom_DeleteStoredTrustTokensStatus,
  DeleteStoredTrustTokensStatusSpec as network_mojom_DeleteStoredTrustTokensStatusSpec,
  TrustTokenQueryAnswererRemote as network_mojom_TrustTokenQueryAnswererRemote,
  TrustTokenQueryAnswererPendingReceiver as network_mojom_TrustTokenQueryAnswererPendingReceiver,
  FulfillTrustTokenIssuanceAnswer as network_mojom_FulfillTrustTokenIssuanceAnswer,
  FulfillTrustTokenIssuanceAnswerSpec as network_mojom_FulfillTrustTokenIssuanceAnswerSpec,
  FulfillTrustTokenIssuanceRequest as network_mojom_FulfillTrustTokenIssuanceRequest,
  FulfillTrustTokenIssuanceRequestSpec as network_mojom_FulfillTrustTokenIssuanceRequestSpec,
  StoredTrustTokensForIssuer as network_mojom_StoredTrustTokensForIssuer,
  StoredTrustTokensForIssuerSpec as network_mojom_StoredTrustTokensForIssuerSpec
} from './trust_tokens.mojom.m.js';

import {
  UDPSocketRemote as network_mojom_UDPSocketRemote,
  UDPSocketPendingReceiver as network_mojom_UDPSocketPendingReceiver,
  UDPSocketListenerRemote as network_mojom_UDPSocketListenerRemote,
  UDPSocketListenerPendingReceiver as network_mojom_UDPSocketListenerPendingReceiver
} from './udp_socket.mojom.m.js';

import {
  URLLoaderFactoryRemote as network_mojom_URLLoaderFactoryRemote,
  URLLoaderFactoryPendingReceiver as network_mojom_URLLoaderFactoryPendingReceiver
} from './url_loader_factory.mojom.m.js';

import {
  URLLoaderNetworkServiceObserverRemote as network_mojom_URLLoaderNetworkServiceObserverRemote,
  URLLoaderNetworkServiceObserverPendingReceiver as network_mojom_URLLoaderNetworkServiceObserverPendingReceiver
} from './url_loader_network_service_observer.mojom.m.js';

import {
  URLRequest as network_mojom_URLRequest,
  URLRequestSpec as network_mojom_URLRequestSpec
} from './url_request.mojom.m.js';

import {
  WebTransportHandshakeClientRemote as network_mojom_WebTransportHandshakeClientRemote,
  WebTransportHandshakeClientPendingReceiver as network_mojom_WebTransportHandshakeClientPendingReceiver,
  WebTransportCertificateFingerprint as network_mojom_WebTransportCertificateFingerprint,
  WebTransportCertificateFingerprintSpec as network_mojom_WebTransportCertificateFingerprintSpec
} from './web_transport.mojom.m.js';

import {
  WebSocketAuthenticationHandlerRemote as network_mojom_WebSocketAuthenticationHandlerRemote,
  WebSocketAuthenticationHandlerPendingReceiver as network_mojom_WebSocketAuthenticationHandlerPendingReceiver,
  WebSocketHandshakeClientRemote as network_mojom_WebSocketHandshakeClientRemote,
  WebSocketHandshakeClientPendingReceiver as network_mojom_WebSocketHandshakeClientPendingReceiver,
  HttpHeader as network_mojom_HttpHeader,
  HttpHeaderSpec as network_mojom_HttpHeaderSpec
} from './websocket.mojom.m.js';


/**
 * @const { !number }
 */
export const WEB_SOCKET_OPTION_NONE = 0;


/**
 * @const { !number }
 */
export const WEB_SOCKET_OPTION_BLOCK_ALL_COOKIES = 1;


/**
 * @const { !number }
 */
export const WEB_SOCKET_OPTION_BLOCK_THIRD_PARTY_COOKIES = 2;


/**
 * @const { !number }
 */
export const BROWSER_PROCESS_ID = 0;


/**
 * @const { !number }
 */
export const INVALID_PROCESS_ID = -1;


/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const TrustTokenRedemptionPolicySpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 */
export const TrustTokenRedemptionPolicy = {
  
  kForbid: 0,
  kPotentiallyPermit: 1,
  MIN_VALUE: 0,
  MAX_VALUE: 1,
};

/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const SCTAuditingModeSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 */
export const SCTAuditingMode = {
  
  kDisabled: 0,
  kEnhancedSafeBrowsingReporting: 1,
  kHashdance: 2,
  MIN_VALUE: 0,
  MAX_VALUE: 2,
};



/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export class CustomProxyConnectionObserverPendingReceiver {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle, 'network.mojom.CustomProxyConnectionObserver', scope);
  }
}

/** @interface */
export class CustomProxyConnectionObserverInterface {
  
  /**
   * @param { !proxyResolver_mojom_ProxyServer } badProxy
   * @param { !number } netError
   */

  onFallback(badProxy, netError) {}
  
  /**
   * @param { !proxyResolver_mojom_ProxyServer } proxyServer
   * @param { !network_mojom_HttpResponseHeaders } responseHeaders
   */

  onTunnelHeadersReceived(proxyServer, responseHeaders) {}
}

/**
 * @implements { CustomProxyConnectionObserverInterface }
 */
export class CustomProxyConnectionObserverRemote {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!CustomProxyConnectionObserverPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          CustomProxyConnectionObserverPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!CustomProxyConnectionObserverPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !proxyResolver_mojom_ProxyServer } badProxy
   * @param { !number } netError
   */

  onFallback(
      badProxy,
      netError) {
    this.proxy.sendMessage(
        0,
        CustomProxyConnectionObserver_OnFallback_ParamsSpec.$,
        null,
        [
          badProxy,
          netError
        ]);
  }

  
  /**
   * @param { !proxyResolver_mojom_ProxyServer } proxyServer
   * @param { !network_mojom_HttpResponseHeaders } responseHeaders
   */

  onTunnelHeadersReceived(
      proxyServer,
      responseHeaders) {
    this.proxy.sendMessage(
        1,
        CustomProxyConnectionObserver_OnTunnelHeadersReceived_ParamsSpec.$,
        null,
        [
          proxyServer,
          responseHeaders
        ]);
  }
}

/**
 * An object which receives request messages for the CustomProxyConnectionObserver
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class CustomProxyConnectionObserverReceiver {
  /**
   * @param {!CustomProxyConnectionObserverInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!CustomProxyConnectionObserverRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        CustomProxyConnectionObserverRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!CustomProxyConnectionObserverRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        CustomProxyConnectionObserver_OnFallback_ParamsSpec.$,
        null,
        impl.onFallback.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        CustomProxyConnectionObserver_OnTunnelHeadersReceived_ParamsSpec.$,
        null,
        impl.onTunnelHeadersReceived.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
}

export class CustomProxyConnectionObserver {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "network.mojom.CustomProxyConnectionObserver";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!CustomProxyConnectionObserverRemote}
   */
  static getRemote() {
    let remote = new CustomProxyConnectionObserverRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
}


/**
 * An object which receives request messages for the CustomProxyConnectionObserver
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class CustomProxyConnectionObserverCallbackRouter {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      CustomProxyConnectionObserverRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!CustomProxyConnectionObserverRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onFallback =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        CustomProxyConnectionObserver_OnFallback_ParamsSpec.$,
        null,
        this.onFallback.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onTunnelHeadersReceived =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        CustomProxyConnectionObserver_OnTunnelHeadersReceived_ParamsSpec.$,
        null,
        this.onTunnelHeadersReceived.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
}


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export class CustomProxyConfigClientPendingReceiver {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle, 'network.mojom.CustomProxyConfigClient', scope);
  }
}

/** @interface */
export class CustomProxyConfigClientInterface {
  
  /**
   * @param { !CustomProxyConfig } proxyConfig
   * @return {!Promise}
   */

  onCustomProxyConfigUpdated(proxyConfig) {}
  
  /**
   * @param { !mojoBase_mojom_TimeDelta } bypassDuration
   * @param { !network_mojom_ProxyList } badProxies
   * @return {!Promise}
   */

  markProxiesAsBad(bypassDuration, badProxies) {}
  
  /**
   */

  clearBadProxiesCache() {}
}

/**
 * @implements { CustomProxyConfigClientInterface }
 */
export class CustomProxyConfigClientRemote {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!CustomProxyConfigClientPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          CustomProxyConfigClientPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!CustomProxyConfigClientPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !CustomProxyConfig } proxyConfig
   * @return {!Promise}
   */

  onCustomProxyConfigUpdated(
      proxyConfig) {
    return this.proxy.sendMessage(
        0,
        CustomProxyConfigClient_OnCustomProxyConfigUpdated_ParamsSpec.$,
        CustomProxyConfigClient_OnCustomProxyConfigUpdated_ResponseParamsSpec.$,
        [
          proxyConfig
        ]);
  }

  
  /**
   * @param { !mojoBase_mojom_TimeDelta } bypassDuration
   * @param { !network_mojom_ProxyList } badProxies
   * @return {!Promise}
   */

  markProxiesAsBad(
      bypassDuration,
      badProxies) {
    return this.proxy.sendMessage(
        1,
        CustomProxyConfigClient_MarkProxiesAsBad_ParamsSpec.$,
        CustomProxyConfigClient_MarkProxiesAsBad_ResponseParamsSpec.$,
        [
          bypassDuration,
          badProxies
        ]);
  }

  
  /**
   */

  clearBadProxiesCache() {
    this.proxy.sendMessage(
        2,
        CustomProxyConfigClient_ClearBadProxiesCache_ParamsSpec.$,
        null,
        [
        ]);
  }
}

/**
 * An object which receives request messages for the CustomProxyConfigClient
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class CustomProxyConfigClientReceiver {
  /**
   * @param {!CustomProxyConfigClientInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!CustomProxyConfigClientRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        CustomProxyConfigClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!CustomProxyConfigClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        CustomProxyConfigClient_OnCustomProxyConfigUpdated_ParamsSpec.$,
        CustomProxyConfigClient_OnCustomProxyConfigUpdated_ResponseParamsSpec.$,
        impl.onCustomProxyConfigUpdated.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        CustomProxyConfigClient_MarkProxiesAsBad_ParamsSpec.$,
        CustomProxyConfigClient_MarkProxiesAsBad_ResponseParamsSpec.$,
        impl.markProxiesAsBad.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        CustomProxyConfigClient_ClearBadProxiesCache_ParamsSpec.$,
        null,
        impl.clearBadProxiesCache.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
}

export class CustomProxyConfigClient {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "network.mojom.CustomProxyConfigClient";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!CustomProxyConfigClientRemote}
   */
  static getRemote() {
    let remote = new CustomProxyConfigClientRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
}


/**
 * An object which receives request messages for the CustomProxyConfigClient
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class CustomProxyConfigClientCallbackRouter {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      CustomProxyConfigClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!CustomProxyConfigClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onCustomProxyConfigUpdated =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        CustomProxyConfigClient_OnCustomProxyConfigUpdated_ParamsSpec.$,
        CustomProxyConfigClient_OnCustomProxyConfigUpdated_ResponseParamsSpec.$,
        this.onCustomProxyConfigUpdated.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.markProxiesAsBad =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        CustomProxyConfigClient_MarkProxiesAsBad_ParamsSpec.$,
        CustomProxyConfigClient_MarkProxiesAsBad_ResponseParamsSpec.$,
        this.markProxiesAsBad.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearBadProxiesCache =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        CustomProxyConfigClient_ClearBadProxiesCache_ParamsSpec.$,
        null,
        this.clearBadProxiesCache.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
}


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export class TrustedHeaderClientPendingReceiver {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle, 'network.mojom.TrustedHeaderClient', scope);
  }
}

/** @interface */
export class TrustedHeaderClientInterface {
  
  /**
   * @param { !network_mojom_HttpRequestHeaders } headers
   * @return {!Promise<{
        result: !number,
        headers: ?network_mojom_HttpRequestHeaders,
   *  }>}
   */

  onBeforeSendHeaders(headers) {}
  
  /**
   * @param { !string } headers
   * @param { !network_mojom_IPEndPoint } remoteEndpoint
   * @return {!Promise<{
        result: !number,
        headers: ?string,
        preserveFragmentOnRedirectUrl: ?url_mojom_Url,
   *  }>}
   */

  onHeadersReceived(headers, remoteEndpoint) {}
}

/**
 * @implements { TrustedHeaderClientInterface }
 */
export class TrustedHeaderClientRemote {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!TrustedHeaderClientPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          TrustedHeaderClientPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!TrustedHeaderClientPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !network_mojom_HttpRequestHeaders } headers
   * @return {!Promise<{
        result: !number,
        headers: ?network_mojom_HttpRequestHeaders,
   *  }>}
   */

  onBeforeSendHeaders(
      headers) {
    return this.proxy.sendMessage(
        0,
        TrustedHeaderClient_OnBeforeSendHeaders_ParamsSpec.$,
        TrustedHeaderClient_OnBeforeSendHeaders_ResponseParamsSpec.$,
        [
          headers
        ]);
  }

  
  /**
   * @param { !string } headers
   * @param { !network_mojom_IPEndPoint } remoteEndpoint
   * @return {!Promise<{
        result: !number,
        headers: ?string,
        preserveFragmentOnRedirectUrl: ?url_mojom_Url,
   *  }>}
   */

  onHeadersReceived(
      headers,
      remoteEndpoint) {
    return this.proxy.sendMessage(
        1,
        TrustedHeaderClient_OnHeadersReceived_ParamsSpec.$,
        TrustedHeaderClient_OnHeadersReceived_ResponseParamsSpec.$,
        [
          headers,
          remoteEndpoint
        ]);
  }
}

/**
 * An object which receives request messages for the TrustedHeaderClient
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class TrustedHeaderClientReceiver {
  /**
   * @param {!TrustedHeaderClientInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!TrustedHeaderClientRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        TrustedHeaderClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!TrustedHeaderClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        TrustedHeaderClient_OnBeforeSendHeaders_ParamsSpec.$,
        TrustedHeaderClient_OnBeforeSendHeaders_ResponseParamsSpec.$,
        impl.onBeforeSendHeaders.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        TrustedHeaderClient_OnHeadersReceived_ParamsSpec.$,
        TrustedHeaderClient_OnHeadersReceived_ResponseParamsSpec.$,
        impl.onHeadersReceived.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
}

export class TrustedHeaderClient {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "network.mojom.TrustedHeaderClient";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!TrustedHeaderClientRemote}
   */
  static getRemote() {
    let remote = new TrustedHeaderClientRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
}


/**
 * An object which receives request messages for the TrustedHeaderClient
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class TrustedHeaderClientCallbackRouter {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      TrustedHeaderClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!TrustedHeaderClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onBeforeSendHeaders =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        TrustedHeaderClient_OnBeforeSendHeaders_ParamsSpec.$,
        TrustedHeaderClient_OnBeforeSendHeaders_ResponseParamsSpec.$,
        this.onBeforeSendHeaders.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onHeadersReceived =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        TrustedHeaderClient_OnHeadersReceived_ParamsSpec.$,
        TrustedHeaderClient_OnHeadersReceived_ResponseParamsSpec.$,
        this.onHeadersReceived.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
}


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export class TrustedURLLoaderHeaderClientPendingReceiver {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle, 'network.mojom.TrustedURLLoaderHeaderClient', scope);
  }
}

/** @interface */
export class TrustedURLLoaderHeaderClientInterface {
  
  /**
   * @param { !number } requestId
   * @param { !TrustedHeaderClientPendingReceiver } headerClient
   */

  onLoaderCreated(requestId, headerClient) {}
  
  /**
   * @param { !network_mojom_URLRequest } request
   * @param { !TrustedHeaderClientPendingReceiver } headerClient
   */

  onLoaderForCorsPreflightCreated(request, headerClient) {}
}

/**
 * @implements { TrustedURLLoaderHeaderClientInterface }
 */
export class TrustedURLLoaderHeaderClientRemote {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!TrustedURLLoaderHeaderClientPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          TrustedURLLoaderHeaderClientPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!TrustedURLLoaderHeaderClientPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !number } requestId
   * @param { !TrustedHeaderClientPendingReceiver } headerClient
   */

  onLoaderCreated(
      requestId,
      headerClient) {
    this.proxy.sendMessage(
        0,
        TrustedURLLoaderHeaderClient_OnLoaderCreated_ParamsSpec.$,
        null,
        [
          requestId,
          headerClient
        ]);
  }

  
  /**
   * @param { !network_mojom_URLRequest } request
   * @param { !TrustedHeaderClientPendingReceiver } headerClient
   */

  onLoaderForCorsPreflightCreated(
      request,
      headerClient) {
    this.proxy.sendMessage(
        1,
        TrustedURLLoaderHeaderClient_OnLoaderForCorsPreflightCreated_ParamsSpec.$,
        null,
        [
          request,
          headerClient
        ]);
  }
}

/**
 * An object which receives request messages for the TrustedURLLoaderHeaderClient
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class TrustedURLLoaderHeaderClientReceiver {
  /**
   * @param {!TrustedURLLoaderHeaderClientInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!TrustedURLLoaderHeaderClientRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        TrustedURLLoaderHeaderClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!TrustedURLLoaderHeaderClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        TrustedURLLoaderHeaderClient_OnLoaderCreated_ParamsSpec.$,
        null,
        impl.onLoaderCreated.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        TrustedURLLoaderHeaderClient_OnLoaderForCorsPreflightCreated_ParamsSpec.$,
        null,
        impl.onLoaderForCorsPreflightCreated.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
}

export class TrustedURLLoaderHeaderClient {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "network.mojom.TrustedURLLoaderHeaderClient";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!TrustedURLLoaderHeaderClientRemote}
   */
  static getRemote() {
    let remote = new TrustedURLLoaderHeaderClientRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
}


/**
 * An object which receives request messages for the TrustedURLLoaderHeaderClient
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class TrustedURLLoaderHeaderClientCallbackRouter {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      TrustedURLLoaderHeaderClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!TrustedURLLoaderHeaderClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onLoaderCreated =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        TrustedURLLoaderHeaderClient_OnLoaderCreated_ParamsSpec.$,
        null,
        this.onLoaderCreated.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onLoaderForCorsPreflightCreated =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        TrustedURLLoaderHeaderClient_OnLoaderForCorsPreflightCreated_ParamsSpec.$,
        null,
        this.onLoaderForCorsPreflightCreated.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
}


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export class NetworkContextClientPendingReceiver {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle, 'network.mojom.NetworkContextClient', scope);
  }
}

/** @interface */
export class NetworkContextClientInterface {
  
  /**
   * @param { !number } processId
   * @param { !boolean } async
   * @param { !Array<!mojoBase_mojom_FilePath> } filePaths
   * @param { !url_mojom_Url } destinationUrl
   * @return {!Promise<{
        netError: !number,
        files: !Array<!mojoBase_mojom_ReadOnlyFile>,
   *  }>}
   */

  onFileUploadRequested(processId, async, filePaths, destinationUrl) {}
  
  /**
   * @param { !Array<!url_mojom_Origin> } origins
   * @return {!Promise<{
        origins: !Array<!url_mojom_Origin>,
   *  }>}
   */

  onCanSendReportingReports(origins) {}
  
  /**
   * @param { !url_mojom_Origin } origin
   * @return {!Promise<{
        allowed: !boolean,
   *  }>}
   */

  onCanSendDomainReliabilityUpload(origin) {}
  
  /**
   * @param { !string } serverAuthToken
   * @param { !boolean } canDelegate
   * @param { !string } authNegotiateAndroidAccountType
   * @param { !string } spn
   * @return {!Promise<{
        result: !number,
        authToken: !string,
   *  }>}
   */

  onGenerateHttpNegotiateAuthToken(serverAuthToken, canDelegate, authNegotiateAndroidAccountType, spn) {}
  
  /**
   * @param { !network_mojom_FulfillTrustTokenIssuanceRequest } request
   * @return {!Promise<{
        response: !network_mojom_FulfillTrustTokenIssuanceAnswer,
   *  }>}
   */

  onTrustTokenIssuanceDivertedToSystem(request) {}
  
  /**
   * @return {!Promise<{
        allowed: !boolean,
   *  }>}
   */

  onCanSendSCTAuditingReport() {}
  
  /**
   */

  onNewSCTAuditingReportSent() {}
}

/**
 * @implements { NetworkContextClientInterface }
 */
export class NetworkContextClientRemote {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!NetworkContextClientPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          NetworkContextClientPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!NetworkContextClientPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !number } processId
   * @param { !boolean } async
   * @param { !Array<!mojoBase_mojom_FilePath> } filePaths
   * @param { !url_mojom_Url } destinationUrl
   * @return {!Promise<{
        netError: !number,
        files: !Array<!mojoBase_mojom_ReadOnlyFile>,
   *  }>}
   */

  onFileUploadRequested(
      processId,
      async,
      filePaths,
      destinationUrl) {
    return this.proxy.sendMessage(
        0,
        NetworkContextClient_OnFileUploadRequested_ParamsSpec.$,
        NetworkContextClient_OnFileUploadRequested_ResponseParamsSpec.$,
        [
          processId,
          async,
          filePaths,
          destinationUrl
        ]);
  }

  
  /**
   * @param { !Array<!url_mojom_Origin> } origins
   * @return {!Promise<{
        origins: !Array<!url_mojom_Origin>,
   *  }>}
   */

  onCanSendReportingReports(
      origins) {
    return this.proxy.sendMessage(
        1,
        NetworkContextClient_OnCanSendReportingReports_ParamsSpec.$,
        NetworkContextClient_OnCanSendReportingReports_ResponseParamsSpec.$,
        [
          origins
        ]);
  }

  
  /**
   * @param { !url_mojom_Origin } origin
   * @return {!Promise<{
        allowed: !boolean,
   *  }>}
   */

  onCanSendDomainReliabilityUpload(
      origin) {
    return this.proxy.sendMessage(
        2,
        NetworkContextClient_OnCanSendDomainReliabilityUpload_ParamsSpec.$,
        NetworkContextClient_OnCanSendDomainReliabilityUpload_ResponseParamsSpec.$,
        [
          origin
        ]);
  }

  
  /**
   * @param { !string } serverAuthToken
   * @param { !boolean } canDelegate
   * @param { !string } authNegotiateAndroidAccountType
   * @param { !string } spn
   * @return {!Promise<{
        result: !number,
        authToken: !string,
   *  }>}
   */

  onGenerateHttpNegotiateAuthToken(
      serverAuthToken,
      canDelegate,
      authNegotiateAndroidAccountType,
      spn) {
    return this.proxy.sendMessage(
        3,
        NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ParamsSpec.$,
        NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ResponseParamsSpec.$,
        [
          serverAuthToken,
          canDelegate,
          authNegotiateAndroidAccountType,
          spn
        ]);
  }

  
  /**
   * @param { !network_mojom_FulfillTrustTokenIssuanceRequest } request
   * @return {!Promise<{
        response: !network_mojom_FulfillTrustTokenIssuanceAnswer,
   *  }>}
   */

  onTrustTokenIssuanceDivertedToSystem(
      request) {
    return this.proxy.sendMessage(
        4,
        NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ParamsSpec.$,
        NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ResponseParamsSpec.$,
        [
          request
        ]);
  }

  
  /**
   * @return {!Promise<{
        allowed: !boolean,
   *  }>}
   */

  onCanSendSCTAuditingReport() {
    return this.proxy.sendMessage(
        5,
        NetworkContextClient_OnCanSendSCTAuditingReport_ParamsSpec.$,
        NetworkContextClient_OnCanSendSCTAuditingReport_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   */

  onNewSCTAuditingReportSent() {
    this.proxy.sendMessage(
        6,
        NetworkContextClient_OnNewSCTAuditingReportSent_ParamsSpec.$,
        null,
        [
        ]);
  }
}

/**
 * An object which receives request messages for the NetworkContextClient
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class NetworkContextClientReceiver {
  /**
   * @param {!NetworkContextClientInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!NetworkContextClientRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        NetworkContextClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!NetworkContextClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        NetworkContextClient_OnFileUploadRequested_ParamsSpec.$,
        NetworkContextClient_OnFileUploadRequested_ResponseParamsSpec.$,
        impl.onFileUploadRequested.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        NetworkContextClient_OnCanSendReportingReports_ParamsSpec.$,
        NetworkContextClient_OnCanSendReportingReports_ResponseParamsSpec.$,
        impl.onCanSendReportingReports.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        NetworkContextClient_OnCanSendDomainReliabilityUpload_ParamsSpec.$,
        NetworkContextClient_OnCanSendDomainReliabilityUpload_ResponseParamsSpec.$,
        impl.onCanSendDomainReliabilityUpload.bind(impl));
    this.helper_internal_.registerHandler(
        3,
        NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ParamsSpec.$,
        NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ResponseParamsSpec.$,
        impl.onGenerateHttpNegotiateAuthToken.bind(impl));
    this.helper_internal_.registerHandler(
        4,
        NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ParamsSpec.$,
        NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ResponseParamsSpec.$,
        impl.onTrustTokenIssuanceDivertedToSystem.bind(impl));
    this.helper_internal_.registerHandler(
        5,
        NetworkContextClient_OnCanSendSCTAuditingReport_ParamsSpec.$,
        NetworkContextClient_OnCanSendSCTAuditingReport_ResponseParamsSpec.$,
        impl.onCanSendSCTAuditingReport.bind(impl));
    this.helper_internal_.registerHandler(
        6,
        NetworkContextClient_OnNewSCTAuditingReportSent_ParamsSpec.$,
        null,
        impl.onNewSCTAuditingReportSent.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
}

export class NetworkContextClient {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "network.mojom.NetworkContextClient";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!NetworkContextClientRemote}
   */
  static getRemote() {
    let remote = new NetworkContextClientRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
}


/**
 * An object which receives request messages for the NetworkContextClient
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class NetworkContextClientCallbackRouter {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      NetworkContextClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!NetworkContextClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onFileUploadRequested =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        NetworkContextClient_OnFileUploadRequested_ParamsSpec.$,
        NetworkContextClient_OnFileUploadRequested_ResponseParamsSpec.$,
        this.onFileUploadRequested.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onCanSendReportingReports =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        NetworkContextClient_OnCanSendReportingReports_ParamsSpec.$,
        NetworkContextClient_OnCanSendReportingReports_ResponseParamsSpec.$,
        this.onCanSendReportingReports.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onCanSendDomainReliabilityUpload =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        NetworkContextClient_OnCanSendDomainReliabilityUpload_ParamsSpec.$,
        NetworkContextClient_OnCanSendDomainReliabilityUpload_ResponseParamsSpec.$,
        this.onCanSendDomainReliabilityUpload.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onGenerateHttpNegotiateAuthToken =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        3,
        NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ParamsSpec.$,
        NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ResponseParamsSpec.$,
        this.onGenerateHttpNegotiateAuthToken.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onTrustTokenIssuanceDivertedToSystem =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        4,
        NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ParamsSpec.$,
        NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ResponseParamsSpec.$,
        this.onTrustTokenIssuanceDivertedToSystem.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onCanSendSCTAuditingReport =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        5,
        NetworkContextClient_OnCanSendSCTAuditingReport_ParamsSpec.$,
        NetworkContextClient_OnCanSendSCTAuditingReport_ResponseParamsSpec.$,
        this.onCanSendSCTAuditingReport.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onNewSCTAuditingReportSent =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        6,
        NetworkContextClient_OnNewSCTAuditingReportSent_ParamsSpec.$,
        null,
        this.onNewSCTAuditingReportSent.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
}


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export class NetworkContextPendingReceiver {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle, 'network.mojom.NetworkContext', scope);
  }
}

/** @interface */
export class NetworkContextInterface {
  
  /**
   * @param { !NetworkContextClientRemote } client
   */

  setClient(client) {}
  
  /**
   * @param { !network_mojom_URLLoaderFactoryPendingReceiver } urlLoaderFactory
   * @param { !URLLoaderFactoryParams } params
   */

  createURLLoaderFactory(urlLoaderFactory, params) {}
  
  /**
   */

  resetURLLoaderFactories() {}
  
  /**
   * @param { !network_mojom_CookieManagerPendingReceiver } cookieManager
   */

  getCookieManager(cookieManager) {}
  
  /**
   * @param { !network_mojom_RestrictedCookieManagerPendingReceiver } restrictedCookieManager
   * @param { !network_mojom_RestrictedCookieManagerRole } role
   * @param { !url_mojom_Origin } origin
   * @param { !network_mojom_IsolationInfo } isolationInfo
   * @param { ?network_mojom_CookieAccessObserverRemote } cookieObserver
   */

  getRestrictedCookieManager(restrictedCookieManager, role, origin, isolationInfo, cookieObserver) {}
  
  /**
   * @param { !network_mojom_TrustTokenQueryAnswererPendingReceiver } trustTokenQueryAnswerer
   * @param { !url_mojom_Origin } topFrameOrigin
   */

  getTrustTokenQueryAnswerer(trustTokenQueryAnswerer, topFrameOrigin) {}
  
  /**
   * @param { ?ClearDataFilter } filter
   * @return {!Promise}
   */

  clearTrustTokenData(filter) {}
  
  /**
   * @return {!Promise<{
        tokens: !Array<!network_mojom_StoredTrustTokensForIssuer>,
   *  }>}
   */

  getStoredTrustTokenCounts() {}
  
  /**
   * @param { !url_mojom_Origin } issuer
   * @return {!Promise<{
        status: !network_mojom_DeleteStoredTrustTokensStatus,
   *  }>}
   */

  deleteStoredTrustTokens(issuer) {}
  
  /**
   * @param { !boolean } block
   */

  setBlockTrustTokens(block) {}
  
  /**
   * @param { !mojoBase_mojom_Time } startTime
   * @param { !mojoBase_mojom_Time } endTime
   * @return {!Promise}
   */

  clearNetworkingHistoryBetween(startTime, endTime) {}
  
  /**
   * @param { !mojoBase_mojom_Time } startTime
   * @param { !mojoBase_mojom_Time } endTime
   * @param { ?ClearDataFilter } filter
   * @return {!Promise}
   */

  clearHttpCache(startTime, endTime, filter) {}
  
  /**
   * @param { !mojoBase_mojom_Time } startTime
   * @param { !mojoBase_mojom_Time } endTime
   * @return {!Promise<{
        isUpperBound: !boolean,
        sizeOrError: !bigint,
   *  }>}
   */

  computeHttpCacheSize(startTime, endTime) {}
  
  /**
   * @param { !url_mojom_Url } url
   * @param { !string } httpMethod
   * @param { !network_mojom_NetworkIsolationKey } key
   * @param { !boolean } isSubframeDocumentResource
   * @param { !boolean } includeCredentials
   */

  notifyExternalCacheHit(url, httpMethod, key, isSubframeDocumentResource, includeCredentials) {}
  
  /**
   * @param { ?ClearDataFilter } filter
   * @return {!Promise}
   */

  clearHostCache(filter) {}
  
  /**
   * @param { !mojoBase_mojom_Time } startTime
   * @param { !mojoBase_mojom_Time } endTime
   * @return {!Promise}
   */

  clearHttpAuthCache(startTime, endTime) {}
  
  /**
   * @param { ?ClearDataFilter } filter
   * @return {!Promise}
   */

  clearReportingCacheReports(filter) {}
  
  /**
   * @param { ?ClearDataFilter } filter
   * @return {!Promise}
   */

  clearReportingCacheClients(filter) {}
  
  /**
   * @param { ?ClearDataFilter } filter
   * @return {!Promise}
   */

  clearNetworkErrorLogging(filter) {}
  
  /**
   * @param { ?ClearDataFilter } filter
   * @param { !NetworkContext_DomainReliabilityClearMode } mode
   * @return {!Promise}
   */

  clearDomainReliability(filter, mode) {}
  
  /**
   * @param { !mojoBase_mojom_UnguessableToken } reportingSource
   * @param { !url_mojom_Origin } origin
   * @param { !network_mojom_IsolationInfo } isolationInfo
   * @param { !Object<!string, !string> } endpoints
   */

  setDocumentReportingEndpoints(reportingSource, origin, isolationInfo, endpoints) {}
  
  /**
   * @param { !mojoBase_mojom_UnguessableToken } reportingSource
   */

  sendReportsAndRemoveSource(reportingSource) {}
  
  /**
   * @param { !string } type
   * @param { !string } group
   * @param { !url_mojom_Url } url
   * @param { ?mojoBase_mojom_UnguessableToken } reportingSource
   * @param { !network_mojom_NetworkIsolationKey } networkIsolationKey
   * @param { ?string } userAgent
   * @param { !mojoBase_mojom_DictionaryValue } body
   */

  queueReport(type, group, url, reportingSource, networkIsolationKey, userAgent, body) {}
  
  /**
   * @param { !SignedExchangeReport } report
   * @param { !network_mojom_NetworkIsolationKey } networkIsolationKey
   */

  queueSignedExchangeReport(report, networkIsolationKey) {}
  
  /**
   * @return {!Promise}
   */

  closeAllConnections() {}
  
  /**
   * @return {!Promise}
   */

  closeIdleConnections() {}
  
  /**
   * @param { !mojoBase_mojom_UnguessableToken } throttlingProfileId
   * @param { ?NetworkConditions } conditions
   */

  setNetworkConditions(throttlingProfileId, conditions) {}
  
  /**
   * @param { !string } newAcceptLanguage
   */

  setAcceptLanguage(newAcceptLanguage) {}
  
  /**
   * @param { !boolean } enableReferrers
   */

  setEnableReferrers(enableReferrers) {}
  
  /**
   * @param { !CTPolicy } ctPolicy
   */

  setCTPolicy(ctPolicy) {}
  
  /**
   * @param { !string } host
   * @param { !mojoBase_mojom_Time } expiry
   * @param { !boolean } enforce
   * @param { !url_mojom_Url } reportUri
   * @param { !network_mojom_NetworkIsolationKey } networkIsolationKey
   * @return {!Promise<{
        success: !boolean,
   *  }>}
   */

  addExpectCT(host, expiry, enforce, reportUri, networkIsolationKey) {}
  
  /**
   * @param { !url_mojom_Url } reportUri
   * @return {!Promise<{
        success: !boolean,
   *  }>}
   */

  setExpectCTTestReport(reportUri) {}
  
  /**
   * @param { !string } domain
   * @param { !network_mojom_NetworkIsolationKey } networkIsolationKey
   * @return {!Promise<{
        state: !mojoBase_mojom_DictionaryValue,
   *  }>}
   */

  getExpectCTState(domain, networkIsolationKey) {}
  
  /**
   * @param { !network_mojom_UDPSocketPendingReceiver } receiver
   * @param { ?network_mojom_UDPSocketListenerRemote } listener
   */

  createUDPSocket(receiver, listener) {}
  
  /**
   * @param { !network_mojom_IPEndPoint } localAddr
   * @param { !number } backlog
   * @param { !network_mojom_MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !network_mojom_TCPServerSocketPendingReceiver } socket
   * @return {!Promise<{
        result: !number,
        localAddrOut: ?network_mojom_IPEndPoint,
   *  }>}
   */

  createTCPServerSocket(localAddr, backlog, trafficAnnotation, socket) {}
  
  /**
   * @param { ?network_mojom_IPEndPoint } localAddr
   * @param { !network_mojom_AddressList } remoteAddrList
   * @param { ?network_mojom_TCPConnectedSocketOptions } tcpConnectedSocketOptions
   * @param { !network_mojom_MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !network_mojom_TCPConnectedSocketPendingReceiver } socket
   * @param { ?network_mojom_SocketObserverRemote } observer
   * @return {!Promise<{
        result: !number,
        localAddr: ?network_mojom_IPEndPoint,
        peerAddr: ?network_mojom_IPEndPoint,
        receiveStream: ?MojoHandle,
        sendStream: ?MojoHandle,
   *  }>}
   */

  createTCPConnectedSocket(localAddr, remoteAddrList, tcpConnectedSocketOptions, trafficAnnotation, socket, observer) {}
  
  /**
   * @param { !network_mojom_IPEndPoint } localAddr
   * @param { !network_mojom_MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !network_mojom_TCPBoundSocketPendingReceiver } socket
   * @return {!Promise<{
        result: !number,
        localAddr: ?network_mojom_IPEndPoint,
   *  }>}
   */

  createTCPBoundSocket(localAddr, trafficAnnotation, socket) {}
  
  /**
   * @param { !network_mojom_ProxyResolvingSocketFactoryPendingReceiver } factory
   */

  createProxyResolvingSocketFactory(factory) {}
  
  /**
   * @param { !url_mojom_Url } url
   * @param { !network_mojom_NetworkIsolationKey } networkIsolationKey
   * @param { !network_mojom_ProxyLookupClientRemote } proxyLookupClient
   */

  lookUpProxyForURL(url, networkIsolationKey, proxyLookupClient) {}
  
  /**
   * @return {!Promise}
   */

  forceReloadProxyConfig() {}
  
  /**
   * @return {!Promise}
   */

  clearBadProxiesCache() {}
  
  /**
   * @param { !url_mojom_Url } url
   * @param { !Array<!string> } requestedProtocols
   * @param { !network_mojom_SiteForCookies } siteForCookies
   * @param { !network_mojom_IsolationInfo } isolationInfo
   * @param { !Array<!network_mojom_HttpHeader> } additionalHeaders
   * @param { !number } processId
   * @param { !url_mojom_Origin } origin
   * @param { !number } options
   * @param { !network_mojom_MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !network_mojom_WebSocketHandshakeClientRemote } handshakeClient
   * @param { ?network_mojom_URLLoaderNetworkServiceObserverRemote } urlLoaderNetworkObserver
   * @param { ?network_mojom_WebSocketAuthenticationHandlerRemote } authHandler
   * @param { ?TrustedHeaderClientRemote } headerClient
   * @param { ?mojoBase_mojom_UnguessableToken } throttlingProfileId
   */

  createWebSocket(url, requestedProtocols, siteForCookies, isolationInfo, additionalHeaders, processId, origin, options, trafficAnnotation, handshakeClient, urlLoaderNetworkObserver, authHandler, headerClient, throttlingProfileId) {}
  
  /**
   * @param { !url_mojom_Url } url
   * @param { !url_mojom_Origin } origin
   * @param { !network_mojom_NetworkIsolationKey } networkIsolationKey
   * @param { !Array<!network_mojom_WebTransportCertificateFingerprint> } fingerprints
   * @param { !network_mojom_WebTransportHandshakeClientRemote } handshakeClient
   */

  createWebTransport(url, origin, networkIsolationKey, fingerprints, handshakeClient) {}
  
  /**
   * @param { !network_mojom_NetLogExporterPendingReceiver } receiver
   */

  createNetLogExporter(receiver) {}
  
  /**
   * @param { !number } numStreams
   * @param { !url_mojom_Url } url
   * @param { !boolean } allowCredentials
   * @param { !network_mojom_NetworkIsolationKey } networkIsolationKey
   */

  preconnectSockets(numStreams, url, allowCredentials, networkIsolationKey) {}
  
  /**
   * @param { !network_mojom_NetworkIsolationKey } networkIsolationKey
   * @param { !network_mojom_P2PTrustedSocketManagerClientRemote } client
   * @param { !network_mojom_P2PTrustedSocketManagerPendingReceiver } trustedSocketManager
   * @param { !network_mojom_P2PSocketManagerPendingReceiver } socketManager
   */

  createP2PSocketManager(networkIsolationKey, client, trustedSocketManager, socketManager) {}
  
  /**
   * @param { !network_mojom_MdnsResponderPendingReceiver } responderReceiver
   */

  createMdnsResponder(responderReceiver) {}
  
  /**
   * @param { !network_mojom_HostPortPair } host
   * @param { !network_mojom_NetworkIsolationKey } networkIsolationKey
   * @param { ?network_mojom_ResolveHostParameters } optionalParameters
   * @param { !network_mojom_ResolveHostClientRemote } responseClient
   */

  resolveHost(host, networkIsolationKey, optionalParameters, responseClient) {}
  
  /**
   * @param { ?network_mojom_DnsConfigOverrides } configOverrides
   * @param { !network_mojom_HostResolverPendingReceiver } hostResolver
   */

  createHostResolver(configOverrides, hostResolver) {}
  
  /**
   * @param { !network_mojom_X509Certificate } certificate
   * @param { !url_mojom_Url } url
   * @param { !network_mojom_NetworkIsolationKey } networkIsolationKey
   * @param { !string } ocspResponse
   * @param { !string } sctList
   * @return {!Promise<{
        errorCode: !number,
        cvResult: !network_mojom_CertVerifyResult,
        pkpBypassed: !boolean,
        pinningFailureLog: !string,
   *  }>}
   */

  verifyCertForSignedExchange(certificate, url, networkIsolationKey, ocspResponse, sctList) {}
  
  /**
   * @param { !string } host
   * @param { !mojoBase_mojom_Time } expiry
   * @param { !boolean } includeSubdomains
   * @return {!Promise}
   */

  addHSTS(host, expiry, includeSubdomains) {}
  
  /**
   * @param { !string } host
   * @return {!Promise<{
        result: !boolean,
   *  }>}
   */

  isHSTSActiveForHost(host) {}
  
  /**
   * @param { !string } domain
   * @return {!Promise<{
        state: !mojoBase_mojom_DictionaryValue,
   *  }>}
   */

  getHSTSState(domain) {}
  
  /**
   * @param { !url_mojom_Origin } sourceOrigin
   * @param { !Array<!network_mojom_CorsOriginPattern> } allowPatterns
   * @param { !Array<!network_mojom_CorsOriginPattern> } blockPatterns
   * @return {!Promise}
   */

  setCorsOriginAccessListsForOrigin(sourceOrigin, allowPatterns, blockPatterns) {}
  
  /**
   * @param { !string } host
   * @return {!Promise<{
        result: !boolean,
   *  }>}
   */

  deleteDynamicDataForHost(host) {}
  
  /**
   * @param { !boolean } splitAuthCacheByNetworkIsolationKey
   */

  setSplitAuthCacheByNetworkIsolationKey(splitAuthCacheByNetworkIsolationKey) {}
  
  /**
   * @return {!Promise<{
        cacheKey: !mojoBase_mojom_UnguessableToken,
   *  }>}
   */

  saveHttpAuthCacheProxyEntries() {}
  
  /**
   * @param { !mojoBase_mojom_UnguessableToken } cacheKey
   * @return {!Promise}
   */

  loadHttpAuthCacheProxyEntries(cacheKey) {}
  
  /**
   * @param { !network_mojom_AuthChallengeInfo } challenge
   * @param { !network_mojom_NetworkIsolationKey } networkIsolationKey
   * @param { !network_mojom_AuthCredentials } credentials
   * @return {!Promise}
   */

  addAuthCacheEntry(challenge, networkIsolationKey, credentials) {}
  
  /**
   * @param { !boolean } value
   */

  setCorsNonWildcardRequestHeadersSupport(value) {}
  
  /**
   * @param { !url_mojom_Url } url
   * @param { !network_mojom_NetworkIsolationKey } networkIsolationKey
   * @return {!Promise<{
        credentials: ?network_mojom_AuthCredentials,
   *  }>}
   */

  lookupServerBasicAuthCredentials(url, networkIsolationKey) {}
  
  /**
   * @return {!Promise}
   */

  enableStaticKeyPinningForTesting() {}
  
  /**
   * @param { !network_mojom_X509Certificate } certificate
   * @param { !string } hostname
   * @param { !string } ocspResponse
   * @param { !string } sctList
   * @return {!Promise<{
        errorCode: !number,
   *  }>}
   */

  verifyCertificateForTesting(certificate, hostname, ocspResponse, sctList) {}
  
  /**
   * @param { !url_mojom_Origin } origin
   * @param { !url_mojom_Url } uploadUrl
   * @return {!Promise}
   */

  addDomainReliabilityContextForTesting(origin, uploadUrl) {}
  
  /**
   * @return {!Promise}
   */

  forceDomainReliabilityUploadsForTesting() {}
  
  /**
   */

  setCTLogListAlwaysTimelyForTesting() {}
  
  /**
   * @param { !SCTAuditingMode } mode
   */

  setSCTAuditingMode(mode) {}
  
  /**
   * @param { !network_mojom_ReportingApiObserverRemote } observer
   */

  addReportingApiObserver(observer) {}
}

/**
 * @implements { NetworkContextInterface }
 */
export class NetworkContextRemote {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!NetworkContextPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          NetworkContextPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!NetworkContextPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !NetworkContextClientRemote } client
   */

  setClient(
      client) {
    this.proxy.sendMessage(
        0,
        NetworkContext_SetClient_ParamsSpec.$,
        null,
        [
          client
        ]);
  }

  
  /**
   * @param { !network_mojom_URLLoaderFactoryPendingReceiver } urlLoaderFactory
   * @param { !URLLoaderFactoryParams } params
   */

  createURLLoaderFactory(
      urlLoaderFactory,
      params) {
    this.proxy.sendMessage(
        1,
        NetworkContext_CreateURLLoaderFactory_ParamsSpec.$,
        null,
        [
          urlLoaderFactory,
          params
        ]);
  }

  
  /**
   */

  resetURLLoaderFactories() {
    this.proxy.sendMessage(
        2,
        NetworkContext_ResetURLLoaderFactories_ParamsSpec.$,
        null,
        [
        ]);
  }

  
  /**
   * @param { !network_mojom_CookieManagerPendingReceiver } cookieManager
   */

  getCookieManager(
      cookieManager) {
    this.proxy.sendMessage(
        3,
        NetworkContext_GetCookieManager_ParamsSpec.$,
        null,
        [
          cookieManager
        ]);
  }

  
  /**
   * @param { !network_mojom_RestrictedCookieManagerPendingReceiver } restrictedCookieManager
   * @param { !network_mojom_RestrictedCookieManagerRole } role
   * @param { !url_mojom_Origin } origin
   * @param { !network_mojom_IsolationInfo } isolationInfo
   * @param { ?network_mojom_CookieAccessObserverRemote } cookieObserver
   */

  getRestrictedCookieManager(
      restrictedCookieManager,
      role,
      origin,
      isolationInfo,
      cookieObserver) {
    this.proxy.sendMessage(
        4,
        NetworkContext_GetRestrictedCookieManager_ParamsSpec.$,
        null,
        [
          restrictedCookieManager,
          role,
          origin,
          isolationInfo,
          cookieObserver
        ]);
  }

  
  /**
   * @param { !network_mojom_TrustTokenQueryAnswererPendingReceiver } trustTokenQueryAnswerer
   * @param { !url_mojom_Origin } topFrameOrigin
   */

  getTrustTokenQueryAnswerer(
      trustTokenQueryAnswerer,
      topFrameOrigin) {
    this.proxy.sendMessage(
        5,
        NetworkContext_GetTrustTokenQueryAnswerer_ParamsSpec.$,
        null,
        [
          trustTokenQueryAnswerer,
          topFrameOrigin
        ]);
  }

  
  /**
   * @param { ?ClearDataFilter } filter
   * @return {!Promise}
   */

  clearTrustTokenData(
      filter) {
    return this.proxy.sendMessage(
        6,
        NetworkContext_ClearTrustTokenData_ParamsSpec.$,
        NetworkContext_ClearTrustTokenData_ResponseParamsSpec.$,
        [
          filter
        ]);
  }

  
  /**
   * @return {!Promise<{
        tokens: !Array<!network_mojom_StoredTrustTokensForIssuer>,
   *  }>}
   */

  getStoredTrustTokenCounts() {
    return this.proxy.sendMessage(
        7,
        NetworkContext_GetStoredTrustTokenCounts_ParamsSpec.$,
        NetworkContext_GetStoredTrustTokenCounts_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !url_mojom_Origin } issuer
   * @return {!Promise<{
        status: !network_mojom_DeleteStoredTrustTokensStatus,
   *  }>}
   */

  deleteStoredTrustTokens(
      issuer) {
    return this.proxy.sendMessage(
        8,
        NetworkContext_DeleteStoredTrustTokens_ParamsSpec.$,
        NetworkContext_DeleteStoredTrustTokens_ResponseParamsSpec.$,
        [
          issuer
        ]);
  }

  
  /**
   * @param { !boolean } block
   */

  setBlockTrustTokens(
      block) {
    this.proxy.sendMessage(
        9,
        NetworkContext_SetBlockTrustTokens_ParamsSpec.$,
        null,
        [
          block
        ]);
  }

  
  /**
   * @param { !mojoBase_mojom_Time } startTime
   * @param { !mojoBase_mojom_Time } endTime
   * @return {!Promise}
   */

  clearNetworkingHistoryBetween(
      startTime,
      endTime) {
    return this.proxy.sendMessage(
        10,
        NetworkContext_ClearNetworkingHistoryBetween_ParamsSpec.$,
        NetworkContext_ClearNetworkingHistoryBetween_ResponseParamsSpec.$,
        [
          startTime,
          endTime
        ]);
  }

  
  /**
   * @param { !mojoBase_mojom_Time } startTime
   * @param { !mojoBase_mojom_Time } endTime
   * @param { ?ClearDataFilter } filter
   * @return {!Promise}
   */

  clearHttpCache(
      startTime,
      endTime,
      filter) {
    return this.proxy.sendMessage(
        11,
        NetworkContext_ClearHttpCache_ParamsSpec.$,
        NetworkContext_ClearHttpCache_ResponseParamsSpec.$,
        [
          startTime,
          endTime,
          filter
        ]);
  }

  
  /**
   * @param { !mojoBase_mojom_Time } startTime
   * @param { !mojoBase_mojom_Time } endTime
   * @return {!Promise<{
        isUpperBound: !boolean,
        sizeOrError: !bigint,
   *  }>}
   */

  computeHttpCacheSize(
      startTime,
      endTime) {
    return this.proxy.sendMessage(
        12,
        NetworkContext_ComputeHttpCacheSize_ParamsSpec.$,
        NetworkContext_ComputeHttpCacheSize_ResponseParamsSpec.$,
        [
          startTime,
          endTime
        ]);
  }

  
  /**
   * @param { !url_mojom_Url } url
   * @param { !string } httpMethod
   * @param { !network_mojom_NetworkIsolationKey } key
   * @param { !boolean } isSubframeDocumentResource
   * @param { !boolean } includeCredentials
   */

  notifyExternalCacheHit(
      url,
      httpMethod,
      key,
      isSubframeDocumentResource,
      includeCredentials) {
    this.proxy.sendMessage(
        13,
        NetworkContext_NotifyExternalCacheHit_ParamsSpec.$,
        null,
        [
          url,
          httpMethod,
          key,
          isSubframeDocumentResource,
          includeCredentials
        ]);
  }

  
  /**
   * @param { ?ClearDataFilter } filter
   * @return {!Promise}
   */

  clearHostCache(
      filter) {
    return this.proxy.sendMessage(
        14,
        NetworkContext_ClearHostCache_ParamsSpec.$,
        NetworkContext_ClearHostCache_ResponseParamsSpec.$,
        [
          filter
        ]);
  }

  
  /**
   * @param { !mojoBase_mojom_Time } startTime
   * @param { !mojoBase_mojom_Time } endTime
   * @return {!Promise}
   */

  clearHttpAuthCache(
      startTime,
      endTime) {
    return this.proxy.sendMessage(
        15,
        NetworkContext_ClearHttpAuthCache_ParamsSpec.$,
        NetworkContext_ClearHttpAuthCache_ResponseParamsSpec.$,
        [
          startTime,
          endTime
        ]);
  }

  
  /**
   * @param { ?ClearDataFilter } filter
   * @return {!Promise}
   */

  clearReportingCacheReports(
      filter) {
    return this.proxy.sendMessage(
        16,
        NetworkContext_ClearReportingCacheReports_ParamsSpec.$,
        NetworkContext_ClearReportingCacheReports_ResponseParamsSpec.$,
        [
          filter
        ]);
  }

  
  /**
   * @param { ?ClearDataFilter } filter
   * @return {!Promise}
   */

  clearReportingCacheClients(
      filter) {
    return this.proxy.sendMessage(
        17,
        NetworkContext_ClearReportingCacheClients_ParamsSpec.$,
        NetworkContext_ClearReportingCacheClients_ResponseParamsSpec.$,
        [
          filter
        ]);
  }

  
  /**
   * @param { ?ClearDataFilter } filter
   * @return {!Promise}
   */

  clearNetworkErrorLogging(
      filter) {
    return this.proxy.sendMessage(
        18,
        NetworkContext_ClearNetworkErrorLogging_ParamsSpec.$,
        NetworkContext_ClearNetworkErrorLogging_ResponseParamsSpec.$,
        [
          filter
        ]);
  }

  
  /**
   * @param { ?ClearDataFilter } filter
   * @param { !NetworkContext_DomainReliabilityClearMode } mode
   * @return {!Promise}
   */

  clearDomainReliability(
      filter,
      mode) {
    return this.proxy.sendMessage(
        19,
        NetworkContext_ClearDomainReliability_ParamsSpec.$,
        NetworkContext_ClearDomainReliability_ResponseParamsSpec.$,
        [
          filter,
          mode
        ]);
  }

  
  /**
   * @param { !mojoBase_mojom_UnguessableToken } reportingSource
   * @param { !url_mojom_Origin } origin
   * @param { !network_mojom_IsolationInfo } isolationInfo
   * @param { !Object<!string, !string> } endpoints
   */

  setDocumentReportingEndpoints(
      reportingSource,
      origin,
      isolationInfo,
      endpoints) {
    this.proxy.sendMessage(
        20,
        NetworkContext_SetDocumentReportingEndpoints_ParamsSpec.$,
        null,
        [
          reportingSource,
          origin,
          isolationInfo,
          endpoints
        ]);
  }

  
  /**
   * @param { !mojoBase_mojom_UnguessableToken } reportingSource
   */

  sendReportsAndRemoveSource(
      reportingSource) {
    this.proxy.sendMessage(
        21,
        NetworkContext_SendReportsAndRemoveSource_ParamsSpec.$,
        null,
        [
          reportingSource
        ]);
  }

  
  /**
   * @param { !string } type
   * @param { !string } group
   * @param { !url_mojom_Url } url
   * @param { ?mojoBase_mojom_UnguessableToken } reportingSource
   * @param { !network_mojom_NetworkIsolationKey } networkIsolationKey
   * @param { ?string } userAgent
   * @param { !mojoBase_mojom_DictionaryValue } body
   */

  queueReport(
      type,
      group,
      url,
      reportingSource,
      networkIsolationKey,
      userAgent,
      body) {
    this.proxy.sendMessage(
        22,
        NetworkContext_QueueReport_ParamsSpec.$,
        null,
        [
          type,
          group,
          url,
          reportingSource,
          networkIsolationKey,
          userAgent,
          body
        ]);
  }

  
  /**
   * @param { !SignedExchangeReport } report
   * @param { !network_mojom_NetworkIsolationKey } networkIsolationKey
   */

  queueSignedExchangeReport(
      report,
      networkIsolationKey) {
    this.proxy.sendMessage(
        23,
        NetworkContext_QueueSignedExchangeReport_ParamsSpec.$,
        null,
        [
          report,
          networkIsolationKey
        ]);
  }

  
  /**
   * @return {!Promise}
   */

  closeAllConnections() {
    return this.proxy.sendMessage(
        24,
        NetworkContext_CloseAllConnections_ParamsSpec.$,
        NetworkContext_CloseAllConnections_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @return {!Promise}
   */

  closeIdleConnections() {
    return this.proxy.sendMessage(
        25,
        NetworkContext_CloseIdleConnections_ParamsSpec.$,
        NetworkContext_CloseIdleConnections_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !mojoBase_mojom_UnguessableToken } throttlingProfileId
   * @param { ?NetworkConditions } conditions
   */

  setNetworkConditions(
      throttlingProfileId,
      conditions) {
    this.proxy.sendMessage(
        26,
        NetworkContext_SetNetworkConditions_ParamsSpec.$,
        null,
        [
          throttlingProfileId,
          conditions
        ]);
  }

  
  /**
   * @param { !string } newAcceptLanguage
   */

  setAcceptLanguage(
      newAcceptLanguage) {
    this.proxy.sendMessage(
        27,
        NetworkContext_SetAcceptLanguage_ParamsSpec.$,
        null,
        [
          newAcceptLanguage
        ]);
  }

  
  /**
   * @param { !boolean } enableReferrers
   */

  setEnableReferrers(
      enableReferrers) {
    this.proxy.sendMessage(
        28,
        NetworkContext_SetEnableReferrers_ParamsSpec.$,
        null,
        [
          enableReferrers
        ]);
  }

  
  /**
   * @param { !CTPolicy } ctPolicy
   */

  setCTPolicy(
      ctPolicy) {
    this.proxy.sendMessage(
        29,
        NetworkContext_SetCTPolicy_ParamsSpec.$,
        null,
        [
          ctPolicy
        ]);
  }

  
  /**
   * @param { !string } host
   * @param { !mojoBase_mojom_Time } expiry
   * @param { !boolean } enforce
   * @param { !url_mojom_Url } reportUri
   * @param { !network_mojom_NetworkIsolationKey } networkIsolationKey
   * @return {!Promise<{
        success: !boolean,
   *  }>}
   */

  addExpectCT(
      host,
      expiry,
      enforce,
      reportUri,
      networkIsolationKey) {
    return this.proxy.sendMessage(
        30,
        NetworkContext_AddExpectCT_ParamsSpec.$,
        NetworkContext_AddExpectCT_ResponseParamsSpec.$,
        [
          host,
          expiry,
          enforce,
          reportUri,
          networkIsolationKey
        ]);
  }

  
  /**
   * @param { !url_mojom_Url } reportUri
   * @return {!Promise<{
        success: !boolean,
   *  }>}
   */

  setExpectCTTestReport(
      reportUri) {
    return this.proxy.sendMessage(
        31,
        NetworkContext_SetExpectCTTestReport_ParamsSpec.$,
        NetworkContext_SetExpectCTTestReport_ResponseParamsSpec.$,
        [
          reportUri
        ]);
  }

  
  /**
   * @param { !string } domain
   * @param { !network_mojom_NetworkIsolationKey } networkIsolationKey
   * @return {!Promise<{
        state: !mojoBase_mojom_DictionaryValue,
   *  }>}
   */

  getExpectCTState(
      domain,
      networkIsolationKey) {
    return this.proxy.sendMessage(
        32,
        NetworkContext_GetExpectCTState_ParamsSpec.$,
        NetworkContext_GetExpectCTState_ResponseParamsSpec.$,
        [
          domain,
          networkIsolationKey
        ]);
  }

  
  /**
   * @param { !network_mojom_UDPSocketPendingReceiver } receiver
   * @param { ?network_mojom_UDPSocketListenerRemote } listener
   */

  createUDPSocket(
      receiver,
      listener) {
    this.proxy.sendMessage(
        33,
        NetworkContext_CreateUDPSocket_ParamsSpec.$,
        null,
        [
          receiver,
          listener
        ]);
  }

  
  /**
   * @param { !network_mojom_IPEndPoint } localAddr
   * @param { !number } backlog
   * @param { !network_mojom_MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !network_mojom_TCPServerSocketPendingReceiver } socket
   * @return {!Promise<{
        result: !number,
        localAddrOut: ?network_mojom_IPEndPoint,
   *  }>}
   */

  createTCPServerSocket(
      localAddr,
      backlog,
      trafficAnnotation,
      socket) {
    return this.proxy.sendMessage(
        34,
        NetworkContext_CreateTCPServerSocket_ParamsSpec.$,
        NetworkContext_CreateTCPServerSocket_ResponseParamsSpec.$,
        [
          localAddr,
          backlog,
          trafficAnnotation,
          socket
        ]);
  }

  
  /**
   * @param { ?network_mojom_IPEndPoint } localAddr
   * @param { !network_mojom_AddressList } remoteAddrList
   * @param { ?network_mojom_TCPConnectedSocketOptions } tcpConnectedSocketOptions
   * @param { !network_mojom_MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !network_mojom_TCPConnectedSocketPendingReceiver } socket
   * @param { ?network_mojom_SocketObserverRemote } observer
   * @return {!Promise<{
        result: !number,
        localAddr: ?network_mojom_IPEndPoint,
        peerAddr: ?network_mojom_IPEndPoint,
        receiveStream: ?MojoHandle,
        sendStream: ?MojoHandle,
   *  }>}
   */

  createTCPConnectedSocket(
      localAddr,
      remoteAddrList,
      tcpConnectedSocketOptions,
      trafficAnnotation,
      socket,
      observer) {
    return this.proxy.sendMessage(
        35,
        NetworkContext_CreateTCPConnectedSocket_ParamsSpec.$,
        NetworkContext_CreateTCPConnectedSocket_ResponseParamsSpec.$,
        [
          localAddr,
          remoteAddrList,
          tcpConnectedSocketOptions,
          trafficAnnotation,
          socket,
          observer
        ]);
  }

  
  /**
   * @param { !network_mojom_IPEndPoint } localAddr
   * @param { !network_mojom_MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !network_mojom_TCPBoundSocketPendingReceiver } socket
   * @return {!Promise<{
        result: !number,
        localAddr: ?network_mojom_IPEndPoint,
   *  }>}
   */

  createTCPBoundSocket(
      localAddr,
      trafficAnnotation,
      socket) {
    return this.proxy.sendMessage(
        36,
        NetworkContext_CreateTCPBoundSocket_ParamsSpec.$,
        NetworkContext_CreateTCPBoundSocket_ResponseParamsSpec.$,
        [
          localAddr,
          trafficAnnotation,
          socket
        ]);
  }

  
  /**
   * @param { !network_mojom_ProxyResolvingSocketFactoryPendingReceiver } factory
   */

  createProxyResolvingSocketFactory(
      factory) {
    this.proxy.sendMessage(
        37,
        NetworkContext_CreateProxyResolvingSocketFactory_ParamsSpec.$,
        null,
        [
          factory
        ]);
  }

  
  /**
   * @param { !url_mojom_Url } url
   * @param { !network_mojom_NetworkIsolationKey } networkIsolationKey
   * @param { !network_mojom_ProxyLookupClientRemote } proxyLookupClient
   */

  lookUpProxyForURL(
      url,
      networkIsolationKey,
      proxyLookupClient) {
    this.proxy.sendMessage(
        38,
        NetworkContext_LookUpProxyForURL_ParamsSpec.$,
        null,
        [
          url,
          networkIsolationKey,
          proxyLookupClient
        ]);
  }

  
  /**
   * @return {!Promise}
   */

  forceReloadProxyConfig() {
    return this.proxy.sendMessage(
        39,
        NetworkContext_ForceReloadProxyConfig_ParamsSpec.$,
        NetworkContext_ForceReloadProxyConfig_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @return {!Promise}
   */

  clearBadProxiesCache() {
    return this.proxy.sendMessage(
        40,
        NetworkContext_ClearBadProxiesCache_ParamsSpec.$,
        NetworkContext_ClearBadProxiesCache_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !url_mojom_Url } url
   * @param { !Array<!string> } requestedProtocols
   * @param { !network_mojom_SiteForCookies } siteForCookies
   * @param { !network_mojom_IsolationInfo } isolationInfo
   * @param { !Array<!network_mojom_HttpHeader> } additionalHeaders
   * @param { !number } processId
   * @param { !url_mojom_Origin } origin
   * @param { !number } options
   * @param { !network_mojom_MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !network_mojom_WebSocketHandshakeClientRemote } handshakeClient
   * @param { ?network_mojom_URLLoaderNetworkServiceObserverRemote } urlLoaderNetworkObserver
   * @param { ?network_mojom_WebSocketAuthenticationHandlerRemote } authHandler
   * @param { ?TrustedHeaderClientRemote } headerClient
   * @param { ?mojoBase_mojom_UnguessableToken } throttlingProfileId
   */

  createWebSocket(
      url,
      requestedProtocols,
      siteForCookies,
      isolationInfo,
      additionalHeaders,
      processId,
      origin,
      options,
      trafficAnnotation,
      handshakeClient,
      urlLoaderNetworkObserver,
      authHandler,
      headerClient,
      throttlingProfileId) {
    this.proxy.sendMessage(
        41,
        NetworkContext_CreateWebSocket_ParamsSpec.$,
        null,
        [
          url,
          requestedProtocols,
          siteForCookies,
          isolationInfo,
          additionalHeaders,
          processId,
          origin,
          options,
          trafficAnnotation,
          handshakeClient,
          urlLoaderNetworkObserver,
          authHandler,
          headerClient,
          throttlingProfileId
        ]);
  }

  
  /**
   * @param { !url_mojom_Url } url
   * @param { !url_mojom_Origin } origin
   * @param { !network_mojom_NetworkIsolationKey } networkIsolationKey
   * @param { !Array<!network_mojom_WebTransportCertificateFingerprint> } fingerprints
   * @param { !network_mojom_WebTransportHandshakeClientRemote } handshakeClient
   */

  createWebTransport(
      url,
      origin,
      networkIsolationKey,
      fingerprints,
      handshakeClient) {
    this.proxy.sendMessage(
        42,
        NetworkContext_CreateWebTransport_ParamsSpec.$,
        null,
        [
          url,
          origin,
          networkIsolationKey,
          fingerprints,
          handshakeClient
        ]);
  }

  
  /**
   * @param { !network_mojom_NetLogExporterPendingReceiver } receiver
   */

  createNetLogExporter(
      receiver) {
    this.proxy.sendMessage(
        43,
        NetworkContext_CreateNetLogExporter_ParamsSpec.$,
        null,
        [
          receiver
        ]);
  }

  
  /**
   * @param { !number } numStreams
   * @param { !url_mojom_Url } url
   * @param { !boolean } allowCredentials
   * @param { !network_mojom_NetworkIsolationKey } networkIsolationKey
   */

  preconnectSockets(
      numStreams,
      url,
      allowCredentials,
      networkIsolationKey) {
    this.proxy.sendMessage(
        44,
        NetworkContext_PreconnectSockets_ParamsSpec.$,
        null,
        [
          numStreams,
          url,
          allowCredentials,
          networkIsolationKey
        ]);
  }

  
  /**
   * @param { !network_mojom_NetworkIsolationKey } networkIsolationKey
   * @param { !network_mojom_P2PTrustedSocketManagerClientRemote } client
   * @param { !network_mojom_P2PTrustedSocketManagerPendingReceiver } trustedSocketManager
   * @param { !network_mojom_P2PSocketManagerPendingReceiver } socketManager
   */

  createP2PSocketManager(
      networkIsolationKey,
      client,
      trustedSocketManager,
      socketManager) {
    this.proxy.sendMessage(
        45,
        NetworkContext_CreateP2PSocketManager_ParamsSpec.$,
        null,
        [
          networkIsolationKey,
          client,
          trustedSocketManager,
          socketManager
        ]);
  }

  
  /**
   * @param { !network_mojom_MdnsResponderPendingReceiver } responderReceiver
   */

  createMdnsResponder(
      responderReceiver) {
    this.proxy.sendMessage(
        46,
        NetworkContext_CreateMdnsResponder_ParamsSpec.$,
        null,
        [
          responderReceiver
        ]);
  }

  
  /**
   * @param { !network_mojom_HostPortPair } host
   * @param { !network_mojom_NetworkIsolationKey } networkIsolationKey
   * @param { ?network_mojom_ResolveHostParameters } optionalParameters
   * @param { !network_mojom_ResolveHostClientRemote } responseClient
   */

  resolveHost(
      host,
      networkIsolationKey,
      optionalParameters,
      responseClient) {
    this.proxy.sendMessage(
        47,
        NetworkContext_ResolveHost_ParamsSpec.$,
        null,
        [
          host,
          networkIsolationKey,
          optionalParameters,
          responseClient
        ]);
  }

  
  /**
   * @param { ?network_mojom_DnsConfigOverrides } configOverrides
   * @param { !network_mojom_HostResolverPendingReceiver } hostResolver
   */

  createHostResolver(
      configOverrides,
      hostResolver) {
    this.proxy.sendMessage(
        48,
        NetworkContext_CreateHostResolver_ParamsSpec.$,
        null,
        [
          configOverrides,
          hostResolver
        ]);
  }

  
  /**
   * @param { !network_mojom_X509Certificate } certificate
   * @param { !url_mojom_Url } url
   * @param { !network_mojom_NetworkIsolationKey } networkIsolationKey
   * @param { !string } ocspResponse
   * @param { !string } sctList
   * @return {!Promise<{
        errorCode: !number,
        cvResult: !network_mojom_CertVerifyResult,
        pkpBypassed: !boolean,
        pinningFailureLog: !string,
   *  }>}
   */

  verifyCertForSignedExchange(
      certificate,
      url,
      networkIsolationKey,
      ocspResponse,
      sctList) {
    return this.proxy.sendMessage(
        49,
        NetworkContext_VerifyCertForSignedExchange_ParamsSpec.$,
        NetworkContext_VerifyCertForSignedExchange_ResponseParamsSpec.$,
        [
          certificate,
          url,
          networkIsolationKey,
          ocspResponse,
          sctList
        ]);
  }

  
  /**
   * @param { !string } host
   * @param { !mojoBase_mojom_Time } expiry
   * @param { !boolean } includeSubdomains
   * @return {!Promise}
   */

  addHSTS(
      host,
      expiry,
      includeSubdomains) {
    return this.proxy.sendMessage(
        50,
        NetworkContext_AddHSTS_ParamsSpec.$,
        NetworkContext_AddHSTS_ResponseParamsSpec.$,
        [
          host,
          expiry,
          includeSubdomains
        ]);
  }

  
  /**
   * @param { !string } host
   * @return {!Promise<{
        result: !boolean,
   *  }>}
   */

  isHSTSActiveForHost(
      host) {
    return this.proxy.sendMessage(
        51,
        NetworkContext_IsHSTSActiveForHost_ParamsSpec.$,
        NetworkContext_IsHSTSActiveForHost_ResponseParamsSpec.$,
        [
          host
        ]);
  }

  
  /**
   * @param { !string } domain
   * @return {!Promise<{
        state: !mojoBase_mojom_DictionaryValue,
   *  }>}
   */

  getHSTSState(
      domain) {
    return this.proxy.sendMessage(
        52,
        NetworkContext_GetHSTSState_ParamsSpec.$,
        NetworkContext_GetHSTSState_ResponseParamsSpec.$,
        [
          domain
        ]);
  }

  
  /**
   * @param { !url_mojom_Origin } sourceOrigin
   * @param { !Array<!network_mojom_CorsOriginPattern> } allowPatterns
   * @param { !Array<!network_mojom_CorsOriginPattern> } blockPatterns
   * @return {!Promise}
   */

  setCorsOriginAccessListsForOrigin(
      sourceOrigin,
      allowPatterns,
      blockPatterns) {
    return this.proxy.sendMessage(
        53,
        NetworkContext_SetCorsOriginAccessListsForOrigin_ParamsSpec.$,
        NetworkContext_SetCorsOriginAccessListsForOrigin_ResponseParamsSpec.$,
        [
          sourceOrigin,
          allowPatterns,
          blockPatterns
        ]);
  }

  
  /**
   * @param { !string } host
   * @return {!Promise<{
        result: !boolean,
   *  }>}
   */

  deleteDynamicDataForHost(
      host) {
    return this.proxy.sendMessage(
        54,
        NetworkContext_DeleteDynamicDataForHost_ParamsSpec.$,
        NetworkContext_DeleteDynamicDataForHost_ResponseParamsSpec.$,
        [
          host
        ]);
  }

  
  /**
   * @param { !boolean } splitAuthCacheByNetworkIsolationKey
   */

  setSplitAuthCacheByNetworkIsolationKey(
      splitAuthCacheByNetworkIsolationKey) {
    this.proxy.sendMessage(
        55,
        NetworkContext_SetSplitAuthCacheByNetworkIsolationKey_ParamsSpec.$,
        null,
        [
          splitAuthCacheByNetworkIsolationKey
        ]);
  }

  
  /**
   * @return {!Promise<{
        cacheKey: !mojoBase_mojom_UnguessableToken,
   *  }>}
   */

  saveHttpAuthCacheProxyEntries() {
    return this.proxy.sendMessage(
        56,
        NetworkContext_SaveHttpAuthCacheProxyEntries_ParamsSpec.$,
        NetworkContext_SaveHttpAuthCacheProxyEntries_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !mojoBase_mojom_UnguessableToken } cacheKey
   * @return {!Promise}
   */

  loadHttpAuthCacheProxyEntries(
      cacheKey) {
    return this.proxy.sendMessage(
        57,
        NetworkContext_LoadHttpAuthCacheProxyEntries_ParamsSpec.$,
        NetworkContext_LoadHttpAuthCacheProxyEntries_ResponseParamsSpec.$,
        [
          cacheKey
        ]);
  }

  
  /**
   * @param { !network_mojom_AuthChallengeInfo } challenge
   * @param { !network_mojom_NetworkIsolationKey } networkIsolationKey
   * @param { !network_mojom_AuthCredentials } credentials
   * @return {!Promise}
   */

  addAuthCacheEntry(
      challenge,
      networkIsolationKey,
      credentials) {
    return this.proxy.sendMessage(
        58,
        NetworkContext_AddAuthCacheEntry_ParamsSpec.$,
        NetworkContext_AddAuthCacheEntry_ResponseParamsSpec.$,
        [
          challenge,
          networkIsolationKey,
          credentials
        ]);
  }

  
  /**
   * @param { !boolean } value
   */

  setCorsNonWildcardRequestHeadersSupport(
      value) {
    this.proxy.sendMessage(
        59,
        NetworkContext_SetCorsNonWildcardRequestHeadersSupport_ParamsSpec.$,
        null,
        [
          value
        ]);
  }

  
  /**
   * @param { !url_mojom_Url } url
   * @param { !network_mojom_NetworkIsolationKey } networkIsolationKey
   * @return {!Promise<{
        credentials: ?network_mojom_AuthCredentials,
   *  }>}
   */

  lookupServerBasicAuthCredentials(
      url,
      networkIsolationKey) {
    return this.proxy.sendMessage(
        60,
        NetworkContext_LookupServerBasicAuthCredentials_ParamsSpec.$,
        NetworkContext_LookupServerBasicAuthCredentials_ResponseParamsSpec.$,
        [
          url,
          networkIsolationKey
        ]);
  }

  
  /**
   * @return {!Promise}
   */

  enableStaticKeyPinningForTesting() {
    return this.proxy.sendMessage(
        61,
        NetworkContext_EnableStaticKeyPinningForTesting_ParamsSpec.$,
        NetworkContext_EnableStaticKeyPinningForTesting_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !network_mojom_X509Certificate } certificate
   * @param { !string } hostname
   * @param { !string } ocspResponse
   * @param { !string } sctList
   * @return {!Promise<{
        errorCode: !number,
   *  }>}
   */

  verifyCertificateForTesting(
      certificate,
      hostname,
      ocspResponse,
      sctList) {
    return this.proxy.sendMessage(
        62,
        NetworkContext_VerifyCertificateForTesting_ParamsSpec.$,
        NetworkContext_VerifyCertificateForTesting_ResponseParamsSpec.$,
        [
          certificate,
          hostname,
          ocspResponse,
          sctList
        ]);
  }

  
  /**
   * @param { !url_mojom_Origin } origin
   * @param { !url_mojom_Url } uploadUrl
   * @return {!Promise}
   */

  addDomainReliabilityContextForTesting(
      origin,
      uploadUrl) {
    return this.proxy.sendMessage(
        63,
        NetworkContext_AddDomainReliabilityContextForTesting_ParamsSpec.$,
        NetworkContext_AddDomainReliabilityContextForTesting_ResponseParamsSpec.$,
        [
          origin,
          uploadUrl
        ]);
  }

  
  /**
   * @return {!Promise}
   */

  forceDomainReliabilityUploadsForTesting() {
    return this.proxy.sendMessage(
        64,
        NetworkContext_ForceDomainReliabilityUploadsForTesting_ParamsSpec.$,
        NetworkContext_ForceDomainReliabilityUploadsForTesting_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   */

  setCTLogListAlwaysTimelyForTesting() {
    this.proxy.sendMessage(
        65,
        NetworkContext_SetCTLogListAlwaysTimelyForTesting_ParamsSpec.$,
        null,
        [
        ]);
  }

  
  /**
   * @param { !SCTAuditingMode } mode
   */

  setSCTAuditingMode(
      mode) {
    this.proxy.sendMessage(
        66,
        NetworkContext_SetSCTAuditingMode_ParamsSpec.$,
        null,
        [
          mode
        ]);
  }

  
  /**
   * @param { !network_mojom_ReportingApiObserverRemote } observer
   */

  addReportingApiObserver(
      observer) {
    this.proxy.sendMessage(
        67,
        NetworkContext_AddReportingApiObserver_ParamsSpec.$,
        null,
        [
          observer
        ]);
  }
}

/**
 * An object which receives request messages for the NetworkContext
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class NetworkContextReceiver {
  /**
   * @param {!NetworkContextInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!NetworkContextRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        NetworkContextRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!NetworkContextRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        NetworkContext_SetClient_ParamsSpec.$,
        null,
        impl.setClient.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        NetworkContext_CreateURLLoaderFactory_ParamsSpec.$,
        null,
        impl.createURLLoaderFactory.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        NetworkContext_ResetURLLoaderFactories_ParamsSpec.$,
        null,
        impl.resetURLLoaderFactories.bind(impl));
    this.helper_internal_.registerHandler(
        3,
        NetworkContext_GetCookieManager_ParamsSpec.$,
        null,
        impl.getCookieManager.bind(impl));
    this.helper_internal_.registerHandler(
        4,
        NetworkContext_GetRestrictedCookieManager_ParamsSpec.$,
        null,
        impl.getRestrictedCookieManager.bind(impl));
    this.helper_internal_.registerHandler(
        5,
        NetworkContext_GetTrustTokenQueryAnswerer_ParamsSpec.$,
        null,
        impl.getTrustTokenQueryAnswerer.bind(impl));
    this.helper_internal_.registerHandler(
        6,
        NetworkContext_ClearTrustTokenData_ParamsSpec.$,
        NetworkContext_ClearTrustTokenData_ResponseParamsSpec.$,
        impl.clearTrustTokenData.bind(impl));
    this.helper_internal_.registerHandler(
        7,
        NetworkContext_GetStoredTrustTokenCounts_ParamsSpec.$,
        NetworkContext_GetStoredTrustTokenCounts_ResponseParamsSpec.$,
        impl.getStoredTrustTokenCounts.bind(impl));
    this.helper_internal_.registerHandler(
        8,
        NetworkContext_DeleteStoredTrustTokens_ParamsSpec.$,
        NetworkContext_DeleteStoredTrustTokens_ResponseParamsSpec.$,
        impl.deleteStoredTrustTokens.bind(impl));
    this.helper_internal_.registerHandler(
        9,
        NetworkContext_SetBlockTrustTokens_ParamsSpec.$,
        null,
        impl.setBlockTrustTokens.bind(impl));
    this.helper_internal_.registerHandler(
        10,
        NetworkContext_ClearNetworkingHistoryBetween_ParamsSpec.$,
        NetworkContext_ClearNetworkingHistoryBetween_ResponseParamsSpec.$,
        impl.clearNetworkingHistoryBetween.bind(impl));
    this.helper_internal_.registerHandler(
        11,
        NetworkContext_ClearHttpCache_ParamsSpec.$,
        NetworkContext_ClearHttpCache_ResponseParamsSpec.$,
        impl.clearHttpCache.bind(impl));
    this.helper_internal_.registerHandler(
        12,
        NetworkContext_ComputeHttpCacheSize_ParamsSpec.$,
        NetworkContext_ComputeHttpCacheSize_ResponseParamsSpec.$,
        impl.computeHttpCacheSize.bind(impl));
    this.helper_internal_.registerHandler(
        13,
        NetworkContext_NotifyExternalCacheHit_ParamsSpec.$,
        null,
        impl.notifyExternalCacheHit.bind(impl));
    this.helper_internal_.registerHandler(
        14,
        NetworkContext_ClearHostCache_ParamsSpec.$,
        NetworkContext_ClearHostCache_ResponseParamsSpec.$,
        impl.clearHostCache.bind(impl));
    this.helper_internal_.registerHandler(
        15,
        NetworkContext_ClearHttpAuthCache_ParamsSpec.$,
        NetworkContext_ClearHttpAuthCache_ResponseParamsSpec.$,
        impl.clearHttpAuthCache.bind(impl));
    this.helper_internal_.registerHandler(
        16,
        NetworkContext_ClearReportingCacheReports_ParamsSpec.$,
        NetworkContext_ClearReportingCacheReports_ResponseParamsSpec.$,
        impl.clearReportingCacheReports.bind(impl));
    this.helper_internal_.registerHandler(
        17,
        NetworkContext_ClearReportingCacheClients_ParamsSpec.$,
        NetworkContext_ClearReportingCacheClients_ResponseParamsSpec.$,
        impl.clearReportingCacheClients.bind(impl));
    this.helper_internal_.registerHandler(
        18,
        NetworkContext_ClearNetworkErrorLogging_ParamsSpec.$,
        NetworkContext_ClearNetworkErrorLogging_ResponseParamsSpec.$,
        impl.clearNetworkErrorLogging.bind(impl));
    this.helper_internal_.registerHandler(
        19,
        NetworkContext_ClearDomainReliability_ParamsSpec.$,
        NetworkContext_ClearDomainReliability_ResponseParamsSpec.$,
        impl.clearDomainReliability.bind(impl));
    this.helper_internal_.registerHandler(
        20,
        NetworkContext_SetDocumentReportingEndpoints_ParamsSpec.$,
        null,
        impl.setDocumentReportingEndpoints.bind(impl));
    this.helper_internal_.registerHandler(
        21,
        NetworkContext_SendReportsAndRemoveSource_ParamsSpec.$,
        null,
        impl.sendReportsAndRemoveSource.bind(impl));
    this.helper_internal_.registerHandler(
        22,
        NetworkContext_QueueReport_ParamsSpec.$,
        null,
        impl.queueReport.bind(impl));
    this.helper_internal_.registerHandler(
        23,
        NetworkContext_QueueSignedExchangeReport_ParamsSpec.$,
        null,
        impl.queueSignedExchangeReport.bind(impl));
    this.helper_internal_.registerHandler(
        24,
        NetworkContext_CloseAllConnections_ParamsSpec.$,
        NetworkContext_CloseAllConnections_ResponseParamsSpec.$,
        impl.closeAllConnections.bind(impl));
    this.helper_internal_.registerHandler(
        25,
        NetworkContext_CloseIdleConnections_ParamsSpec.$,
        NetworkContext_CloseIdleConnections_ResponseParamsSpec.$,
        impl.closeIdleConnections.bind(impl));
    this.helper_internal_.registerHandler(
        26,
        NetworkContext_SetNetworkConditions_ParamsSpec.$,
        null,
        impl.setNetworkConditions.bind(impl));
    this.helper_internal_.registerHandler(
        27,
        NetworkContext_SetAcceptLanguage_ParamsSpec.$,
        null,
        impl.setAcceptLanguage.bind(impl));
    this.helper_internal_.registerHandler(
        28,
        NetworkContext_SetEnableReferrers_ParamsSpec.$,
        null,
        impl.setEnableReferrers.bind(impl));
    this.helper_internal_.registerHandler(
        29,
        NetworkContext_SetCTPolicy_ParamsSpec.$,
        null,
        impl.setCTPolicy.bind(impl));
    this.helper_internal_.registerHandler(
        30,
        NetworkContext_AddExpectCT_ParamsSpec.$,
        NetworkContext_AddExpectCT_ResponseParamsSpec.$,
        impl.addExpectCT.bind(impl));
    this.helper_internal_.registerHandler(
        31,
        NetworkContext_SetExpectCTTestReport_ParamsSpec.$,
        NetworkContext_SetExpectCTTestReport_ResponseParamsSpec.$,
        impl.setExpectCTTestReport.bind(impl));
    this.helper_internal_.registerHandler(
        32,
        NetworkContext_GetExpectCTState_ParamsSpec.$,
        NetworkContext_GetExpectCTState_ResponseParamsSpec.$,
        impl.getExpectCTState.bind(impl));
    this.helper_internal_.registerHandler(
        33,
        NetworkContext_CreateUDPSocket_ParamsSpec.$,
        null,
        impl.createUDPSocket.bind(impl));
    this.helper_internal_.registerHandler(
        34,
        NetworkContext_CreateTCPServerSocket_ParamsSpec.$,
        NetworkContext_CreateTCPServerSocket_ResponseParamsSpec.$,
        impl.createTCPServerSocket.bind(impl));
    this.helper_internal_.registerHandler(
        35,
        NetworkContext_CreateTCPConnectedSocket_ParamsSpec.$,
        NetworkContext_CreateTCPConnectedSocket_ResponseParamsSpec.$,
        impl.createTCPConnectedSocket.bind(impl));
    this.helper_internal_.registerHandler(
        36,
        NetworkContext_CreateTCPBoundSocket_ParamsSpec.$,
        NetworkContext_CreateTCPBoundSocket_ResponseParamsSpec.$,
        impl.createTCPBoundSocket.bind(impl));
    this.helper_internal_.registerHandler(
        37,
        NetworkContext_CreateProxyResolvingSocketFactory_ParamsSpec.$,
        null,
        impl.createProxyResolvingSocketFactory.bind(impl));
    this.helper_internal_.registerHandler(
        38,
        NetworkContext_LookUpProxyForURL_ParamsSpec.$,
        null,
        impl.lookUpProxyForURL.bind(impl));
    this.helper_internal_.registerHandler(
        39,
        NetworkContext_ForceReloadProxyConfig_ParamsSpec.$,
        NetworkContext_ForceReloadProxyConfig_ResponseParamsSpec.$,
        impl.forceReloadProxyConfig.bind(impl));
    this.helper_internal_.registerHandler(
        40,
        NetworkContext_ClearBadProxiesCache_ParamsSpec.$,
        NetworkContext_ClearBadProxiesCache_ResponseParamsSpec.$,
        impl.clearBadProxiesCache.bind(impl));
    this.helper_internal_.registerHandler(
        41,
        NetworkContext_CreateWebSocket_ParamsSpec.$,
        null,
        impl.createWebSocket.bind(impl));
    this.helper_internal_.registerHandler(
        42,
        NetworkContext_CreateWebTransport_ParamsSpec.$,
        null,
        impl.createWebTransport.bind(impl));
    this.helper_internal_.registerHandler(
        43,
        NetworkContext_CreateNetLogExporter_ParamsSpec.$,
        null,
        impl.createNetLogExporter.bind(impl));
    this.helper_internal_.registerHandler(
        44,
        NetworkContext_PreconnectSockets_ParamsSpec.$,
        null,
        impl.preconnectSockets.bind(impl));
    this.helper_internal_.registerHandler(
        45,
        NetworkContext_CreateP2PSocketManager_ParamsSpec.$,
        null,
        impl.createP2PSocketManager.bind(impl));
    this.helper_internal_.registerHandler(
        46,
        NetworkContext_CreateMdnsResponder_ParamsSpec.$,
        null,
        impl.createMdnsResponder.bind(impl));
    this.helper_internal_.registerHandler(
        47,
        NetworkContext_ResolveHost_ParamsSpec.$,
        null,
        impl.resolveHost.bind(impl));
    this.helper_internal_.registerHandler(
        48,
        NetworkContext_CreateHostResolver_ParamsSpec.$,
        null,
        impl.createHostResolver.bind(impl));
    this.helper_internal_.registerHandler(
        49,
        NetworkContext_VerifyCertForSignedExchange_ParamsSpec.$,
        NetworkContext_VerifyCertForSignedExchange_ResponseParamsSpec.$,
        impl.verifyCertForSignedExchange.bind(impl));
    this.helper_internal_.registerHandler(
        50,
        NetworkContext_AddHSTS_ParamsSpec.$,
        NetworkContext_AddHSTS_ResponseParamsSpec.$,
        impl.addHSTS.bind(impl));
    this.helper_internal_.registerHandler(
        51,
        NetworkContext_IsHSTSActiveForHost_ParamsSpec.$,
        NetworkContext_IsHSTSActiveForHost_ResponseParamsSpec.$,
        impl.isHSTSActiveForHost.bind(impl));
    this.helper_internal_.registerHandler(
        52,
        NetworkContext_GetHSTSState_ParamsSpec.$,
        NetworkContext_GetHSTSState_ResponseParamsSpec.$,
        impl.getHSTSState.bind(impl));
    this.helper_internal_.registerHandler(
        53,
        NetworkContext_SetCorsOriginAccessListsForOrigin_ParamsSpec.$,
        NetworkContext_SetCorsOriginAccessListsForOrigin_ResponseParamsSpec.$,
        impl.setCorsOriginAccessListsForOrigin.bind(impl));
    this.helper_internal_.registerHandler(
        54,
        NetworkContext_DeleteDynamicDataForHost_ParamsSpec.$,
        NetworkContext_DeleteDynamicDataForHost_ResponseParamsSpec.$,
        impl.deleteDynamicDataForHost.bind(impl));
    this.helper_internal_.registerHandler(
        55,
        NetworkContext_SetSplitAuthCacheByNetworkIsolationKey_ParamsSpec.$,
        null,
        impl.setSplitAuthCacheByNetworkIsolationKey.bind(impl));
    this.helper_internal_.registerHandler(
        56,
        NetworkContext_SaveHttpAuthCacheProxyEntries_ParamsSpec.$,
        NetworkContext_SaveHttpAuthCacheProxyEntries_ResponseParamsSpec.$,
        impl.saveHttpAuthCacheProxyEntries.bind(impl));
    this.helper_internal_.registerHandler(
        57,
        NetworkContext_LoadHttpAuthCacheProxyEntries_ParamsSpec.$,
        NetworkContext_LoadHttpAuthCacheProxyEntries_ResponseParamsSpec.$,
        impl.loadHttpAuthCacheProxyEntries.bind(impl));
    this.helper_internal_.registerHandler(
        58,
        NetworkContext_AddAuthCacheEntry_ParamsSpec.$,
        NetworkContext_AddAuthCacheEntry_ResponseParamsSpec.$,
        impl.addAuthCacheEntry.bind(impl));
    this.helper_internal_.registerHandler(
        59,
        NetworkContext_SetCorsNonWildcardRequestHeadersSupport_ParamsSpec.$,
        null,
        impl.setCorsNonWildcardRequestHeadersSupport.bind(impl));
    this.helper_internal_.registerHandler(
        60,
        NetworkContext_LookupServerBasicAuthCredentials_ParamsSpec.$,
        NetworkContext_LookupServerBasicAuthCredentials_ResponseParamsSpec.$,
        impl.lookupServerBasicAuthCredentials.bind(impl));
    this.helper_internal_.registerHandler(
        61,
        NetworkContext_EnableStaticKeyPinningForTesting_ParamsSpec.$,
        NetworkContext_EnableStaticKeyPinningForTesting_ResponseParamsSpec.$,
        impl.enableStaticKeyPinningForTesting.bind(impl));
    this.helper_internal_.registerHandler(
        62,
        NetworkContext_VerifyCertificateForTesting_ParamsSpec.$,
        NetworkContext_VerifyCertificateForTesting_ResponseParamsSpec.$,
        impl.verifyCertificateForTesting.bind(impl));
    this.helper_internal_.registerHandler(
        63,
        NetworkContext_AddDomainReliabilityContextForTesting_ParamsSpec.$,
        NetworkContext_AddDomainReliabilityContextForTesting_ResponseParamsSpec.$,
        impl.addDomainReliabilityContextForTesting.bind(impl));
    this.helper_internal_.registerHandler(
        64,
        NetworkContext_ForceDomainReliabilityUploadsForTesting_ParamsSpec.$,
        NetworkContext_ForceDomainReliabilityUploadsForTesting_ResponseParamsSpec.$,
        impl.forceDomainReliabilityUploadsForTesting.bind(impl));
    this.helper_internal_.registerHandler(
        65,
        NetworkContext_SetCTLogListAlwaysTimelyForTesting_ParamsSpec.$,
        null,
        impl.setCTLogListAlwaysTimelyForTesting.bind(impl));
    this.helper_internal_.registerHandler(
        66,
        NetworkContext_SetSCTAuditingMode_ParamsSpec.$,
        null,
        impl.setSCTAuditingMode.bind(impl));
    this.helper_internal_.registerHandler(
        67,
        NetworkContext_AddReportingApiObserver_ParamsSpec.$,
        null,
        impl.addReportingApiObserver.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
}

export class NetworkContext {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "network.mojom.NetworkContext";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!NetworkContextRemote}
   */
  static getRemote() {
    let remote = new NetworkContextRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
}

/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const NetworkContext_DomainReliabilityClearModeSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 */
export const NetworkContext_DomainReliabilityClearMode = {
  
  CLEAR_CONTEXTS: 0,
  CLEAR_BEACONS: 1,
  MIN_VALUE: 0,
  MAX_VALUE: 1,
};

/**
 * An object which receives request messages for the NetworkContext
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class NetworkContextCallbackRouter {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      NetworkContextRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!NetworkContextRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setClient =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        NetworkContext_SetClient_ParamsSpec.$,
        null,
        this.setClient.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createURLLoaderFactory =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        NetworkContext_CreateURLLoaderFactory_ParamsSpec.$,
        null,
        this.createURLLoaderFactory.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.resetURLLoaderFactories =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        NetworkContext_ResetURLLoaderFactories_ParamsSpec.$,
        null,
        this.resetURLLoaderFactories.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getCookieManager =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        3,
        NetworkContext_GetCookieManager_ParamsSpec.$,
        null,
        this.getCookieManager.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getRestrictedCookieManager =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        4,
        NetworkContext_GetRestrictedCookieManager_ParamsSpec.$,
        null,
        this.getRestrictedCookieManager.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getTrustTokenQueryAnswerer =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        5,
        NetworkContext_GetTrustTokenQueryAnswerer_ParamsSpec.$,
        null,
        this.getTrustTokenQueryAnswerer.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearTrustTokenData =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        6,
        NetworkContext_ClearTrustTokenData_ParamsSpec.$,
        NetworkContext_ClearTrustTokenData_ResponseParamsSpec.$,
        this.clearTrustTokenData.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getStoredTrustTokenCounts =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        7,
        NetworkContext_GetStoredTrustTokenCounts_ParamsSpec.$,
        NetworkContext_GetStoredTrustTokenCounts_ResponseParamsSpec.$,
        this.getStoredTrustTokenCounts.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.deleteStoredTrustTokens =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        8,
        NetworkContext_DeleteStoredTrustTokens_ParamsSpec.$,
        NetworkContext_DeleteStoredTrustTokens_ResponseParamsSpec.$,
        this.deleteStoredTrustTokens.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setBlockTrustTokens =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        9,
        NetworkContext_SetBlockTrustTokens_ParamsSpec.$,
        null,
        this.setBlockTrustTokens.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearNetworkingHistoryBetween =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        10,
        NetworkContext_ClearNetworkingHistoryBetween_ParamsSpec.$,
        NetworkContext_ClearNetworkingHistoryBetween_ResponseParamsSpec.$,
        this.clearNetworkingHistoryBetween.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearHttpCache =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        11,
        NetworkContext_ClearHttpCache_ParamsSpec.$,
        NetworkContext_ClearHttpCache_ResponseParamsSpec.$,
        this.clearHttpCache.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.computeHttpCacheSize =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        12,
        NetworkContext_ComputeHttpCacheSize_ParamsSpec.$,
        NetworkContext_ComputeHttpCacheSize_ResponseParamsSpec.$,
        this.computeHttpCacheSize.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.notifyExternalCacheHit =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        13,
        NetworkContext_NotifyExternalCacheHit_ParamsSpec.$,
        null,
        this.notifyExternalCacheHit.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearHostCache =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        14,
        NetworkContext_ClearHostCache_ParamsSpec.$,
        NetworkContext_ClearHostCache_ResponseParamsSpec.$,
        this.clearHostCache.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearHttpAuthCache =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        15,
        NetworkContext_ClearHttpAuthCache_ParamsSpec.$,
        NetworkContext_ClearHttpAuthCache_ResponseParamsSpec.$,
        this.clearHttpAuthCache.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearReportingCacheReports =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        16,
        NetworkContext_ClearReportingCacheReports_ParamsSpec.$,
        NetworkContext_ClearReportingCacheReports_ResponseParamsSpec.$,
        this.clearReportingCacheReports.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearReportingCacheClients =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        17,
        NetworkContext_ClearReportingCacheClients_ParamsSpec.$,
        NetworkContext_ClearReportingCacheClients_ResponseParamsSpec.$,
        this.clearReportingCacheClients.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearNetworkErrorLogging =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        18,
        NetworkContext_ClearNetworkErrorLogging_ParamsSpec.$,
        NetworkContext_ClearNetworkErrorLogging_ResponseParamsSpec.$,
        this.clearNetworkErrorLogging.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearDomainReliability =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        19,
        NetworkContext_ClearDomainReliability_ParamsSpec.$,
        NetworkContext_ClearDomainReliability_ResponseParamsSpec.$,
        this.clearDomainReliability.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setDocumentReportingEndpoints =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        20,
        NetworkContext_SetDocumentReportingEndpoints_ParamsSpec.$,
        null,
        this.setDocumentReportingEndpoints.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.sendReportsAndRemoveSource =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        21,
        NetworkContext_SendReportsAndRemoveSource_ParamsSpec.$,
        null,
        this.sendReportsAndRemoveSource.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.queueReport =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        22,
        NetworkContext_QueueReport_ParamsSpec.$,
        null,
        this.queueReport.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.queueSignedExchangeReport =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        23,
        NetworkContext_QueueSignedExchangeReport_ParamsSpec.$,
        null,
        this.queueSignedExchangeReport.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.closeAllConnections =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        24,
        NetworkContext_CloseAllConnections_ParamsSpec.$,
        NetworkContext_CloseAllConnections_ResponseParamsSpec.$,
        this.closeAllConnections.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.closeIdleConnections =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        25,
        NetworkContext_CloseIdleConnections_ParamsSpec.$,
        NetworkContext_CloseIdleConnections_ResponseParamsSpec.$,
        this.closeIdleConnections.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setNetworkConditions =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        26,
        NetworkContext_SetNetworkConditions_ParamsSpec.$,
        null,
        this.setNetworkConditions.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setAcceptLanguage =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        27,
        NetworkContext_SetAcceptLanguage_ParamsSpec.$,
        null,
        this.setAcceptLanguage.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setEnableReferrers =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        28,
        NetworkContext_SetEnableReferrers_ParamsSpec.$,
        null,
        this.setEnableReferrers.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setCTPolicy =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        29,
        NetworkContext_SetCTPolicy_ParamsSpec.$,
        null,
        this.setCTPolicy.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.addExpectCT =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        30,
        NetworkContext_AddExpectCT_ParamsSpec.$,
        NetworkContext_AddExpectCT_ResponseParamsSpec.$,
        this.addExpectCT.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setExpectCTTestReport =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        31,
        NetworkContext_SetExpectCTTestReport_ParamsSpec.$,
        NetworkContext_SetExpectCTTestReport_ResponseParamsSpec.$,
        this.setExpectCTTestReport.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getExpectCTState =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        32,
        NetworkContext_GetExpectCTState_ParamsSpec.$,
        NetworkContext_GetExpectCTState_ResponseParamsSpec.$,
        this.getExpectCTState.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createUDPSocket =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        33,
        NetworkContext_CreateUDPSocket_ParamsSpec.$,
        null,
        this.createUDPSocket.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createTCPServerSocket =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        34,
        NetworkContext_CreateTCPServerSocket_ParamsSpec.$,
        NetworkContext_CreateTCPServerSocket_ResponseParamsSpec.$,
        this.createTCPServerSocket.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createTCPConnectedSocket =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        35,
        NetworkContext_CreateTCPConnectedSocket_ParamsSpec.$,
        NetworkContext_CreateTCPConnectedSocket_ResponseParamsSpec.$,
        this.createTCPConnectedSocket.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createTCPBoundSocket =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        36,
        NetworkContext_CreateTCPBoundSocket_ParamsSpec.$,
        NetworkContext_CreateTCPBoundSocket_ResponseParamsSpec.$,
        this.createTCPBoundSocket.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createProxyResolvingSocketFactory =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        37,
        NetworkContext_CreateProxyResolvingSocketFactory_ParamsSpec.$,
        null,
        this.createProxyResolvingSocketFactory.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.lookUpProxyForURL =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        38,
        NetworkContext_LookUpProxyForURL_ParamsSpec.$,
        null,
        this.lookUpProxyForURL.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.forceReloadProxyConfig =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        39,
        NetworkContext_ForceReloadProxyConfig_ParamsSpec.$,
        NetworkContext_ForceReloadProxyConfig_ResponseParamsSpec.$,
        this.forceReloadProxyConfig.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearBadProxiesCache =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        40,
        NetworkContext_ClearBadProxiesCache_ParamsSpec.$,
        NetworkContext_ClearBadProxiesCache_ResponseParamsSpec.$,
        this.clearBadProxiesCache.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createWebSocket =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        41,
        NetworkContext_CreateWebSocket_ParamsSpec.$,
        null,
        this.createWebSocket.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createWebTransport =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        42,
        NetworkContext_CreateWebTransport_ParamsSpec.$,
        null,
        this.createWebTransport.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createNetLogExporter =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        43,
        NetworkContext_CreateNetLogExporter_ParamsSpec.$,
        null,
        this.createNetLogExporter.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.preconnectSockets =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        44,
        NetworkContext_PreconnectSockets_ParamsSpec.$,
        null,
        this.preconnectSockets.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createP2PSocketManager =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        45,
        NetworkContext_CreateP2PSocketManager_ParamsSpec.$,
        null,
        this.createP2PSocketManager.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createMdnsResponder =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        46,
        NetworkContext_CreateMdnsResponder_ParamsSpec.$,
        null,
        this.createMdnsResponder.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.resolveHost =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        47,
        NetworkContext_ResolveHost_ParamsSpec.$,
        null,
        this.resolveHost.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createHostResolver =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        48,
        NetworkContext_CreateHostResolver_ParamsSpec.$,
        null,
        this.createHostResolver.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.verifyCertForSignedExchange =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        49,
        NetworkContext_VerifyCertForSignedExchange_ParamsSpec.$,
        NetworkContext_VerifyCertForSignedExchange_ResponseParamsSpec.$,
        this.verifyCertForSignedExchange.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.addHSTS =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        50,
        NetworkContext_AddHSTS_ParamsSpec.$,
        NetworkContext_AddHSTS_ResponseParamsSpec.$,
        this.addHSTS.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.isHSTSActiveForHost =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        51,
        NetworkContext_IsHSTSActiveForHost_ParamsSpec.$,
        NetworkContext_IsHSTSActiveForHost_ResponseParamsSpec.$,
        this.isHSTSActiveForHost.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getHSTSState =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        52,
        NetworkContext_GetHSTSState_ParamsSpec.$,
        NetworkContext_GetHSTSState_ResponseParamsSpec.$,
        this.getHSTSState.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setCorsOriginAccessListsForOrigin =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        53,
        NetworkContext_SetCorsOriginAccessListsForOrigin_ParamsSpec.$,
        NetworkContext_SetCorsOriginAccessListsForOrigin_ResponseParamsSpec.$,
        this.setCorsOriginAccessListsForOrigin.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.deleteDynamicDataForHost =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        54,
        NetworkContext_DeleteDynamicDataForHost_ParamsSpec.$,
        NetworkContext_DeleteDynamicDataForHost_ResponseParamsSpec.$,
        this.deleteDynamicDataForHost.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setSplitAuthCacheByNetworkIsolationKey =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        55,
        NetworkContext_SetSplitAuthCacheByNetworkIsolationKey_ParamsSpec.$,
        null,
        this.setSplitAuthCacheByNetworkIsolationKey.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.saveHttpAuthCacheProxyEntries =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        56,
        NetworkContext_SaveHttpAuthCacheProxyEntries_ParamsSpec.$,
        NetworkContext_SaveHttpAuthCacheProxyEntries_ResponseParamsSpec.$,
        this.saveHttpAuthCacheProxyEntries.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.loadHttpAuthCacheProxyEntries =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        57,
        NetworkContext_LoadHttpAuthCacheProxyEntries_ParamsSpec.$,
        NetworkContext_LoadHttpAuthCacheProxyEntries_ResponseParamsSpec.$,
        this.loadHttpAuthCacheProxyEntries.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.addAuthCacheEntry =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        58,
        NetworkContext_AddAuthCacheEntry_ParamsSpec.$,
        NetworkContext_AddAuthCacheEntry_ResponseParamsSpec.$,
        this.addAuthCacheEntry.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setCorsNonWildcardRequestHeadersSupport =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        59,
        NetworkContext_SetCorsNonWildcardRequestHeadersSupport_ParamsSpec.$,
        null,
        this.setCorsNonWildcardRequestHeadersSupport.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.lookupServerBasicAuthCredentials =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        60,
        NetworkContext_LookupServerBasicAuthCredentials_ParamsSpec.$,
        NetworkContext_LookupServerBasicAuthCredentials_ResponseParamsSpec.$,
        this.lookupServerBasicAuthCredentials.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.enableStaticKeyPinningForTesting =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        61,
        NetworkContext_EnableStaticKeyPinningForTesting_ParamsSpec.$,
        NetworkContext_EnableStaticKeyPinningForTesting_ResponseParamsSpec.$,
        this.enableStaticKeyPinningForTesting.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.verifyCertificateForTesting =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        62,
        NetworkContext_VerifyCertificateForTesting_ParamsSpec.$,
        NetworkContext_VerifyCertificateForTesting_ResponseParamsSpec.$,
        this.verifyCertificateForTesting.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.addDomainReliabilityContextForTesting =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        63,
        NetworkContext_AddDomainReliabilityContextForTesting_ParamsSpec.$,
        NetworkContext_AddDomainReliabilityContextForTesting_ResponseParamsSpec.$,
        this.addDomainReliabilityContextForTesting.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.forceDomainReliabilityUploadsForTesting =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        64,
        NetworkContext_ForceDomainReliabilityUploadsForTesting_ParamsSpec.$,
        NetworkContext_ForceDomainReliabilityUploadsForTesting_ResponseParamsSpec.$,
        this.forceDomainReliabilityUploadsForTesting.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setCTLogListAlwaysTimelyForTesting =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        65,
        NetworkContext_SetCTLogListAlwaysTimelyForTesting_ParamsSpec.$,
        null,
        this.setCTLogListAlwaysTimelyForTesting.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setSCTAuditingMode =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        66,
        NetworkContext_SetSCTAuditingMode_ParamsSpec.$,
        null,
        this.setSCTAuditingMode.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.addReportingApiObserver =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        67,
        NetworkContext_AddReportingApiObserver_ParamsSpec.$,
        null,
        this.addReportingApiObserver.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
}

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const CustomProxyConfigSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const CertVerifierServiceRemoteParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const HttpAuthStaticNetworkContextParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const CTPolicySpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContextFilePathsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContextParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkConditionsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const ClearDataFilterSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SignedExchangeReportSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const URLLoaderFactoryOverrideSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const URLLoaderFactoryParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const CustomProxyConnectionObserver_OnFallback_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const CustomProxyConnectionObserver_OnTunnelHeadersReceived_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const CustomProxyConfigClient_OnCustomProxyConfigUpdated_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const CustomProxyConfigClient_OnCustomProxyConfigUpdated_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const CustomProxyConfigClient_MarkProxiesAsBad_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const CustomProxyConfigClient_MarkProxiesAsBad_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const CustomProxyConfigClient_ClearBadProxiesCache_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const TrustedHeaderClient_OnBeforeSendHeaders_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const TrustedHeaderClient_OnBeforeSendHeaders_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const TrustedHeaderClient_OnHeadersReceived_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const TrustedHeaderClient_OnHeadersReceived_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const TrustedURLLoaderHeaderClient_OnLoaderCreated_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const TrustedURLLoaderHeaderClient_OnLoaderForCorsPreflightCreated_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContextClient_OnFileUploadRequested_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContextClient_OnFileUploadRequested_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContextClient_OnCanSendReportingReports_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContextClient_OnCanSendReportingReports_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContextClient_OnCanSendDomainReliabilityUpload_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContextClient_OnCanSendDomainReliabilityUpload_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContextClient_OnCanSendSCTAuditingReport_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContextClient_OnCanSendSCTAuditingReport_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContextClient_OnNewSCTAuditingReportSent_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_SetClient_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_CreateURLLoaderFactory_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ResetURLLoaderFactories_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_GetCookieManager_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_GetRestrictedCookieManager_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_GetTrustTokenQueryAnswerer_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ClearTrustTokenData_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ClearTrustTokenData_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_GetStoredTrustTokenCounts_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_GetStoredTrustTokenCounts_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_DeleteStoredTrustTokens_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_DeleteStoredTrustTokens_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_SetBlockTrustTokens_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ClearNetworkingHistoryBetween_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ClearNetworkingHistoryBetween_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ClearHttpCache_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ClearHttpCache_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ComputeHttpCacheSize_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ComputeHttpCacheSize_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_NotifyExternalCacheHit_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ClearHostCache_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ClearHostCache_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ClearHttpAuthCache_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ClearHttpAuthCache_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ClearReportingCacheReports_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ClearReportingCacheReports_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ClearReportingCacheClients_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ClearReportingCacheClients_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ClearNetworkErrorLogging_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ClearNetworkErrorLogging_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ClearDomainReliability_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ClearDomainReliability_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_SetDocumentReportingEndpoints_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_SendReportsAndRemoveSource_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_QueueReport_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_QueueSignedExchangeReport_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_CloseAllConnections_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_CloseAllConnections_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_CloseIdleConnections_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_CloseIdleConnections_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_SetNetworkConditions_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_SetAcceptLanguage_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_SetEnableReferrers_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_SetCTPolicy_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_AddExpectCT_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_AddExpectCT_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_SetExpectCTTestReport_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_SetExpectCTTestReport_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_GetExpectCTState_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_GetExpectCTState_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_CreateUDPSocket_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_CreateTCPServerSocket_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_CreateTCPServerSocket_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_CreateTCPConnectedSocket_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_CreateTCPConnectedSocket_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_CreateTCPBoundSocket_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_CreateTCPBoundSocket_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_CreateProxyResolvingSocketFactory_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_LookUpProxyForURL_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ForceReloadProxyConfig_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ForceReloadProxyConfig_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ClearBadProxiesCache_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ClearBadProxiesCache_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_CreateWebSocket_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_CreateWebTransport_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_CreateNetLogExporter_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_PreconnectSockets_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_CreateP2PSocketManager_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_CreateMdnsResponder_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ResolveHost_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_CreateHostResolver_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_VerifyCertForSignedExchange_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_VerifyCertForSignedExchange_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_AddHSTS_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_AddHSTS_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_IsHSTSActiveForHost_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_IsHSTSActiveForHost_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_GetHSTSState_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_GetHSTSState_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_SetCorsOriginAccessListsForOrigin_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_SetCorsOriginAccessListsForOrigin_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_DeleteDynamicDataForHost_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_DeleteDynamicDataForHost_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_SetSplitAuthCacheByNetworkIsolationKey_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_SaveHttpAuthCacheProxyEntries_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_SaveHttpAuthCacheProxyEntries_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_LoadHttpAuthCacheProxyEntries_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_LoadHttpAuthCacheProxyEntries_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_AddAuthCacheEntry_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_AddAuthCacheEntry_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_SetCorsNonWildcardRequestHeadersSupport_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_LookupServerBasicAuthCredentials_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_LookupServerBasicAuthCredentials_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_EnableStaticKeyPinningForTesting_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_EnableStaticKeyPinningForTesting_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_VerifyCertificateForTesting_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_VerifyCertificateForTesting_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_AddDomainReliabilityContextForTesting_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_AddDomainReliabilityContextForTesting_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ForceDomainReliabilityUploadsForTesting_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_ForceDomainReliabilityUploadsForTesting_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_SetCTLogListAlwaysTimelyForTesting_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_SetSCTAuditingMode_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const NetworkContext_AddReportingApiObserver_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    CustomProxyConfigSpec.$,
    'CustomProxyConfig',
    [
      mojo.internal.StructField(
        'rules', 0,
        0,
        network_mojom_ProxyRulesSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'shouldOverrideExistingConfig', 8,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'allowNonIdempotentMethods', 8,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'connectTunnelHeaders', 16,
        0,
        network_mojom_HttpRequestHeadersSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class CustomProxyConfig {
  constructor() {
    /** @type { !network_mojom_ProxyRules } */
    this.rules;
    /** @type { !boolean } */
    this.shouldOverrideExistingConfig;
    /** @type { !boolean } */
    this.allowNonIdempotentMethods;
    /** @type { !network_mojom_HttpRequestHeaders } */
    this.connectTunnelHeaders;
  }
}



mojo.internal.Struct(
    CertVerifierServiceRemoteParamsSpec.$,
    'CertVerifierServiceRemoteParams',
    [
      mojo.internal.StructField(
        'certVerifierService', 0,
        0,
        mojo.internal.InterfaceProxy(certVerifier_mojom_CertVerifierServiceRemote),
        null,
        true /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class CertVerifierServiceRemoteParams {
  constructor() {
    /** @type { (certVerifier_mojom_CertVerifierServiceRemote|undefined) } */
    this.certVerifierService;
  }
}



mojo.internal.Struct(
    HttpAuthStaticNetworkContextParamsSpec.$,
    'HttpAuthStaticNetworkContextParams',
    [
      mojo.internal.StructField(
        'allowDefaultCredentials', 0,
        0,
        network_mojom_DefaultCredentialsSpec.$,
        network_mojom_DefaultCredentials.ALLOW_DEFAULT_CREDENTIALS,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class HttpAuthStaticNetworkContextParams {
  constructor() {
    /** @type { !network_mojom_DefaultCredentials } */
    this.allowDefaultCredentials;
  }
}



mojo.internal.Struct(
    CTPolicySpec.$,
    'CTPolicy',
    [
      mojo.internal.StructField(
        'requiredHosts', 0,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'excludedHosts', 8,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'excludedSpkis', 16,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'excludedLegacySpkis', 24,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 40],]);



/**
 * @record
 */
export class CTPolicy {
  constructor() {
    /** @type { !Array<!string> } */
    this.requiredHosts;
    /** @type { !Array<!string> } */
    this.excludedHosts;
    /** @type { !Array<!string> } */
    this.excludedSpkis;
    /** @type { !Array<!string> } */
    this.excludedLegacySpkis;
  }
}



mojo.internal.Struct(
    NetworkContextFilePathsSpec.$,
    'NetworkContextFilePaths',
    [
      mojo.internal.StructField(
        'dataDirectory', 0,
        0,
        network_mojom_TransferableDirectorySpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'unsandboxedDataPath', 16,
        0,
        mojoBase_mojom_FilePathSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'cookieDatabaseName', 24,
        0,
        mojoBase_mojom_FilePathSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'trustTokenDatabaseName', 32,
        0,
        mojoBase_mojom_FilePathSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'httpServerPropertiesFileName', 40,
        0,
        mojoBase_mojom_FilePathSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'transportSecurityPersisterFileName', 48,
        0,
        mojoBase_mojom_FilePathSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'reportingAndNelStoreDatabaseName', 56,
        0,
        mojoBase_mojom_FilePathSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'sctAuditingPendingReportsFileName', 64,
        0,
        mojoBase_mojom_FilePathSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'triggerMigration', 72,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 88],]);



/**
 * @record
 */
export class NetworkContextFilePaths {
  constructor() {
    /** @type { !network_mojom_TransferableDirectory } */
    this.dataDirectory;
    /** @type { (mojoBase_mojom_FilePath|undefined) } */
    this.unsandboxedDataPath;
    /** @type { (mojoBase_mojom_FilePath|undefined) } */
    this.cookieDatabaseName;
    /** @type { (mojoBase_mojom_FilePath|undefined) } */
    this.trustTokenDatabaseName;
    /** @type { (mojoBase_mojom_FilePath|undefined) } */
    this.httpServerPropertiesFileName;
    /** @type { (mojoBase_mojom_FilePath|undefined) } */
    this.transportSecurityPersisterFileName;
    /** @type { (mojoBase_mojom_FilePath|undefined) } */
    this.reportingAndNelStoreDatabaseName;
    /** @type { (mojoBase_mojom_FilePath|undefined) } */
    this.sctAuditingPendingReportsFileName;
    /** @type { !boolean } */
    this.triggerMigration;
  }
}



mojo.internal.Struct(
    NetworkContextParamsSpec.$,
    'NetworkContextParams',
    [
      mojo.internal.StructField(
        'userAgent', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'acceptLanguage', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'enableBrotli', 16,
        0,
        mojo.internal.Bool,
        true,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'quicUserAgentId', 24,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'enableReferrers', 16,
        1,
        mojo.internal.Bool,
        true,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'validateReferrerPolicyOnInitialRequest', 16,
        2,
        mojo.internal.Bool,
        true,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'proxyResolverFactory', 32,
        0,
        mojo.internal.InterfaceProxy(proxyResolver_mojom_ProxyResolverFactoryRemote),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'enableEncryptedCookies', 16,
        3,
        mojo.internal.Bool,
        true,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'restoreOldSessionCookies', 16,
        4,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'persistSessionCookies', 16,
        5,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'httpCacheEnabled', 16,
        6,
        mojo.internal.Bool,
        true,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'httpCacheMaxSize', 20,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'httpCacheDirectory', 40,
        0,
        network_mojom_TransferableDirectorySpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'httpCacheFileOperationsFactory', 56,
        0,
        mojo.internal.InterfaceProxy(network_mojom_HttpCacheBackendFileOperationsFactoryRemote),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'checkClearTextPermitted', 16,
        7,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'disableIdleSocketsCloseOnMemoryPressure', 17,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'initialSslConfig', 64,
        0,
        network_mojom_SSLConfigSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'sslConfigClientReceiver', 72,
        0,
        mojo.internal.InterfaceRequest(network_mojom_SSLConfigClientPendingReceiver),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'initialProxyConfig', 80,
        0,
        network_mojom_ProxyConfigWithAnnotationSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'proxyConfigClientReceiver', 76,
        0,
        mojo.internal.InterfaceRequest(network_mojom_ProxyConfigClientPendingReceiver),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'initialCustomProxyConfig', 88,
        0,
        CustomProxyConfigSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'customProxyConfigClientReceiver', 96,
        0,
        mojo.internal.InterfaceRequest(CustomProxyConfigClientPendingReceiver),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'customProxyConnectionObserverRemote', 100,
        0,
        mojo.internal.InterfaceProxy(CustomProxyConnectionObserverRemote),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'proxyConfigPollerClient', 108,
        0,
        mojo.internal.InterfaceProxy(network_mojom_ProxyConfigPollerClientRemote),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'proxyErrorClient', 116,
        0,
        mojo.internal.InterfaceProxy(network_mojom_ProxyErrorClientRemote),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'socketBroker', 124,
        0,
        mojo.internal.InterfaceProxy(network_mojom_SocketBrokerRemote),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'pacQuickCheckEnabled', 17,
        1,
        mojo.internal.Bool,
        true,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'enableCertificateReporting', 17,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'enforceChromeCtPolicy', 17,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'enableExpectCtReporting', 17,
        4,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'sctAuditingMode', 132,
        0,
        SCTAuditingModeSpec.$,
        SCTAuditingMode.kDisabled,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'ctPolicy', 136,
        0,
        CTPolicySpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'certVerifierParams', 144,
        0,
        CertVerifierServiceRemoteParamsSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'cookieManagerParams', 152,
        0,
        network_mojom_CookieManagerParamsSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'cookieManager', 160,
        0,
        mojo.internal.InterfaceRequest(network_mojom_CookieManagerPendingReceiver),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'enableDomainReliability', 17,
        5,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'domainReliabilityUploadReporter', 168,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'discardDomainReliablityUploads', 17,
        6,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'reportingDeliveryInterval', 176,
        0,
        mojoBase_mojom_TimeDeltaSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'skipReportingSendPermissionCheck', 17,
        7,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'corsOriginAccessList', 184,
        0,
        mojo.internal.Array(network_mojom_CorsOriginAccessPatternsSpec.$, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'corsExemptHeaderList', 192,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'allowAnyCorsExemptHeaderForBrowser', 18,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'hstsPolicyBypassList', 200,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'httpAuthStaticNetworkContextParams', 208,
        0,
        HttpAuthStaticNetworkContextParamsSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'resetHttpCacheBackend', 18,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'splitAuthCacheByNetworkIsolationKey', 18,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'requireNetworkIsolationKey', 18,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'filePaths', 216,
        0,
        NetworkContextFilePathsSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'blockTrustTokens', 18,
        4,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'firstPartySetsAccessDelegateParams', 224,
        0,
        network_mojom_FirstPartySetsAccessDelegateParamsSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'firstPartySetsAccessDelegateReceiver', 164,
        0,
        mojo.internal.InterfaceRequest(network_mojom_FirstPartySetsAccessDelegatePendingReceiver),
        null,
        true /* nullable */,
        0),
    ],
    [[0, 240],]);



/**
 * @record
 */
export class NetworkContextParams {
  constructor() {
    /** @type { !string } */
    this.userAgent;
    /** @type { !string } */
    this.acceptLanguage;
    /** @type { !boolean } */
    this.enableBrotli;
    /** @type { !boolean } */
    this.enableReferrers;
    /** @type { !boolean } */
    this.validateReferrerPolicyOnInitialRequest;
    /** @type { !boolean } */
    this.enableEncryptedCookies;
    /** @type { !boolean } */
    this.restoreOldSessionCookies;
    /** @type { !boolean } */
    this.persistSessionCookies;
    /** @type { !boolean } */
    this.httpCacheEnabled;
    /** @type { !boolean } */
    this.checkClearTextPermitted;
    /** @type { !boolean } */
    this.disableIdleSocketsCloseOnMemoryPressure;
    /** @type { !boolean } */
    this.pacQuickCheckEnabled;
    /** @type { !boolean } */
    this.enableCertificateReporting;
    /** @type { !boolean } */
    this.enforceChromeCtPolicy;
    /** @type { !boolean } */
    this.enableExpectCtReporting;
    /** @type { !boolean } */
    this.enableDomainReliability;
    /** @type { !boolean } */
    this.discardDomainReliablityUploads;
    /** @type { !boolean } */
    this.skipReportingSendPermissionCheck;
    /** @type { !boolean } */
    this.allowAnyCorsExemptHeaderForBrowser;
    /** @type { !boolean } */
    this.resetHttpCacheBackend;
    /** @type { !boolean } */
    this.splitAuthCacheByNetworkIsolationKey;
    /** @type { !boolean } */
    this.requireNetworkIsolationKey;
    /** @type { !boolean } */
    this.blockTrustTokens;
    /** @type { !number } */
    this.httpCacheMaxSize;
    /** @type { !string } */
    this.quicUserAgentId;
    /** @type { (proxyResolver_mojom_ProxyResolverFactoryRemote|undefined) } */
    this.proxyResolverFactory;
    /** @type { (network_mojom_TransferableDirectory|undefined) } */
    this.httpCacheDirectory;
    /** @type { (network_mojom_HttpCacheBackendFileOperationsFactoryRemote|undefined) } */
    this.httpCacheFileOperationsFactory;
    /** @type { (network_mojom_SSLConfig|undefined) } */
    this.initialSslConfig;
    /** @type { (network_mojom_SSLConfigClientPendingReceiver|undefined) } */
    this.sslConfigClientReceiver;
    /** @type { (network_mojom_ProxyConfigClientPendingReceiver|undefined) } */
    this.proxyConfigClientReceiver;
    /** @type { (network_mojom_ProxyConfigWithAnnotation|undefined) } */
    this.initialProxyConfig;
    /** @type { (CustomProxyConfig|undefined) } */
    this.initialCustomProxyConfig;
    /** @type { (CustomProxyConfigClientPendingReceiver|undefined) } */
    this.customProxyConfigClientReceiver;
    /** @type { (CustomProxyConnectionObserverRemote|undefined) } */
    this.customProxyConnectionObserverRemote;
    /** @type { (network_mojom_ProxyConfigPollerClientRemote|undefined) } */
    this.proxyConfigPollerClient;
    /** @type { (network_mojom_ProxyErrorClientRemote|undefined) } */
    this.proxyErrorClient;
    /** @type { (network_mojom_SocketBrokerRemote|undefined) } */
    this.socketBroker;
    /** @type { !SCTAuditingMode } */
    this.sctAuditingMode;
    /** @type { (CTPolicy|undefined) } */
    this.ctPolicy;
    /** @type { !CertVerifierServiceRemoteParams } */
    this.certVerifierParams;
    /** @type { (network_mojom_CookieManagerParams|undefined) } */
    this.cookieManagerParams;
    /** @type { (network_mojom_CookieManagerPendingReceiver|undefined) } */
    this.cookieManager;
    /** @type { (network_mojom_FirstPartySetsAccessDelegatePendingReceiver|undefined) } */
    this.firstPartySetsAccessDelegateReceiver;
    /** @type { !string } */
    this.domainReliabilityUploadReporter;
    /** @type { (mojoBase_mojom_TimeDelta|undefined) } */
    this.reportingDeliveryInterval;
    /** @type { !Array<!network_mojom_CorsOriginAccessPatterns> } */
    this.corsOriginAccessList;
    /** @type { !Array<!string> } */
    this.corsExemptHeaderList;
    /** @type { !Array<!string> } */
    this.hstsPolicyBypassList;
    /** @type { (HttpAuthStaticNetworkContextParams|undefined) } */
    this.httpAuthStaticNetworkContextParams;
    /** @type { (NetworkContextFilePaths|undefined) } */
    this.filePaths;
    /** @type { (network_mojom_FirstPartySetsAccessDelegateParams|undefined) } */
    this.firstPartySetsAccessDelegateParams;
  }
}



mojo.internal.Struct(
    NetworkConditionsSpec.$,
    'NetworkConditions',
    [
      mojo.internal.StructField(
        'offline', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'latency', 8,
        0,
        mojoBase_mojom_TimeDeltaSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'downloadThroughput', 16,
        0,
        mojo.internal.Double,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'uploadThroughput', 24,
        0,
        mojo.internal.Double,
        0,
        false /* nullable */,
        0),
    ],
    [[0, 40],]);



/**
 * @record
 */
export class NetworkConditions {
  constructor() {
    /** @type { !boolean } */
    this.offline;
    /** @type { !mojoBase_mojom_TimeDelta } */
    this.latency;
    /** @type { !number } */
    this.downloadThroughput;
    /** @type { !number } */
    this.uploadThroughput;
  }
}


/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const ClearDataFilter_TypeSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 */
export const ClearDataFilter_Type = {
  
  DELETE_MATCHES: 0,
  KEEP_MATCHES: 1,
  MIN_VALUE: 0,
  MAX_VALUE: 1,
};


mojo.internal.Struct(
    ClearDataFilterSpec.$,
    'ClearDataFilter',
    [
      mojo.internal.StructField(
        'type', 0,
        0,
        ClearDataFilter_TypeSpec.$,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'domains', 8,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'origins', 16,
        0,
        mojo.internal.Array(url_mojom_OriginSpec.$, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class ClearDataFilter {
  constructor() {
    /** @type { !ClearDataFilter_Type } */
    this.type;
    /** @type { !Array<!string> } */
    this.domains;
    /** @type { !Array<!url_mojom_Origin> } */
    this.origins;
  }
}



mojo.internal.Struct(
    SignedExchangeReportSpec.$,
    'SignedExchangeReport',
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'type', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'outerUrl', 16,
        0,
        url_mojom_UrlSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'innerUrl', 24,
        0,
        url_mojom_UrlSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'certUrl', 32,
        0,
        url_mojom_UrlSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'referrer', 40,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'serverIpAddress', 48,
        0,
        network_mojom_IPAddressSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'protocol', 56,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'method', 64,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'statusCode', 4,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'elapsedTime', 72,
        0,
        mojoBase_mojom_TimeDeltaSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 88],]);



/**
 * @record
 */
export class SignedExchangeReport {
  constructor() {
    /** @type { !boolean } */
    this.success;
    /** @type { !number } */
    this.statusCode;
    /** @type { !string } */
    this.type;
    /** @type { !url_mojom_Url } */
    this.outerUrl;
    /** @type { !url_mojom_Url } */
    this.innerUrl;
    /** @type { !url_mojom_Url } */
    this.certUrl;
    /** @type { !string } */
    this.referrer;
    /** @type { !network_mojom_IPAddress } */
    this.serverIpAddress;
    /** @type { !string } */
    this.protocol;
    /** @type { !string } */
    this.method;
    /** @type { !mojoBase_mojom_TimeDelta } */
    this.elapsedTime;
  }
}



mojo.internal.Struct(
    URLLoaderFactoryOverrideSpec.$,
    'URLLoaderFactoryOverride',
    [
      mojo.internal.StructField(
        'overridingFactory', 0,
        0,
        mojo.internal.InterfaceProxy(network_mojom_URLLoaderFactoryRemote),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'overriddenFactoryReceiver', 8,
        0,
        mojo.internal.InterfaceRequest(network_mojom_URLLoaderFactoryPendingReceiver),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'skipCorsEnabledSchemeCheck', 12,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class URLLoaderFactoryOverride {
  constructor() {
    /** @type { !network_mojom_URLLoaderFactoryRemote } */
    this.overridingFactory;
    /** @type { (network_mojom_URLLoaderFactoryPendingReceiver|undefined) } */
    this.overriddenFactoryReceiver;
    /** @type { !boolean } */
    this.skipCorsEnabledSchemeCheck;
  }
}



mojo.internal.Struct(
    URLLoaderFactoryParamsSpec.$,
    'URLLoaderFactoryParams',
    [
      mojo.internal.StructField(
        'processId', 0,
        0,
        mojo.internal.Int32,
        INVALID_PROCESS_ID,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'requestInitiatorOriginLock', 8,
        0,
        url_mojom_OriginSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'isCorbEnabled', 4,
        0,
        mojo.internal.Bool,
        true,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'ignoreIsolatedWorldOrigin', 4,
        1,
        mojo.internal.Bool,
        true,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'unsafeNonWebbyInitiator', 4,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'disableWebSecurity', 4,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'headerClient', 16,
        0,
        mojo.internal.InterfaceProxy(TrustedURLLoaderHeaderClientRemote),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'isolationInfo', 24,
        0,
        network_mojom_IsolationInfoSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'disableSecureDns', 4,
        4,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'isTrusted', 4,
        5,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'automaticallyAssignIsolationInfo', 4,
        6,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'provideLoadingStateUpdates', 4,
        7,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'topFrameId', 32,
        0,
        mojoBase_mojom_UnguessableTokenSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'factoryOverride', 40,
        0,
        URLLoaderFactoryOverrideSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'clientSecurityState', 48,
        0,
        network_mojom_ClientSecurityStateSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'coepReporter', 56,
        0,
        mojo.internal.InterfaceProxy(network_mojom_CrossOriginEmbedderPolicyReporterRemote),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'cookieObserver', 64,
        0,
        mojo.internal.InterfaceProxy(network_mojom_CookieAccessObserverRemote),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'urlLoaderNetworkObserver', 72,
        0,
        mojo.internal.InterfaceProxy(network_mojom_URLLoaderNetworkServiceObserverRemote),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'devtoolsObserver', 80,
        0,
        mojo.internal.InterfaceProxy(network_mojom_DevToolsObserverRemote),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'trustTokenRedemptionPolicy', 88,
        0,
        TrustTokenRedemptionPolicySpec.$,
        TrustTokenRedemptionPolicy.kPotentiallyPermit,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'debugTag', 96,
        0,
        mojo.internal.String,
        "",
        false /* nullable */,
        0),
    ],
    [[0, 112],]);



/**
 * @record
 */
export class URLLoaderFactoryParams {
  constructor() {
    /** @type { !number } */
    this.processId;
    /** @type { !boolean } */
    this.isCorbEnabled;
    /** @type { !boolean } */
    this.ignoreIsolatedWorldOrigin;
    /** @type { !boolean } */
    this.unsafeNonWebbyInitiator;
    /** @type { !boolean } */
    this.disableWebSecurity;
    /** @type { !boolean } */
    this.disableSecureDns;
    /** @type { !boolean } */
    this.isTrusted;
    /** @type { !boolean } */
    this.automaticallyAssignIsolationInfo;
    /** @type { !boolean } */
    this.provideLoadingStateUpdates;
    /** @type { (url_mojom_Origin|undefined) } */
    this.requestInitiatorOriginLock;
    /** @type { (TrustedURLLoaderHeaderClientRemote|undefined) } */
    this.headerClient;
    /** @type { !network_mojom_IsolationInfo } */
    this.isolationInfo;
    /** @type { (mojoBase_mojom_UnguessableToken|undefined) } */
    this.topFrameId;
    /** @type { (URLLoaderFactoryOverride|undefined) } */
    this.factoryOverride;
    /** @type { (network_mojom_ClientSecurityState|undefined) } */
    this.clientSecurityState;
    /** @type { (network_mojom_CrossOriginEmbedderPolicyReporterRemote|undefined) } */
    this.coepReporter;
    /** @type { (network_mojom_CookieAccessObserverRemote|undefined) } */
    this.cookieObserver;
    /** @type { (network_mojom_URLLoaderNetworkServiceObserverRemote|undefined) } */
    this.urlLoaderNetworkObserver;
    /** @type { (network_mojom_DevToolsObserverRemote|undefined) } */
    this.devtoolsObserver;
    /** @type { !TrustTokenRedemptionPolicy } */
    this.trustTokenRedemptionPolicy;
    /** @type { !string } */
    this.debugTag;
  }
}



mojo.internal.Struct(
    CustomProxyConnectionObserver_OnFallback_ParamsSpec.$,
    'CustomProxyConnectionObserver_OnFallback_Params',
    [
      mojo.internal.StructField(
        'badProxy', 0,
        0,
        proxyResolver_mojom_ProxyServerSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'netError', 8,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class CustomProxyConnectionObserver_OnFallback_Params {
  constructor() {
    /** @type { !proxyResolver_mojom_ProxyServer } */
    this.badProxy;
    /** @type { !number } */
    this.netError;
  }
}



mojo.internal.Struct(
    CustomProxyConnectionObserver_OnTunnelHeadersReceived_ParamsSpec.$,
    'CustomProxyConnectionObserver_OnTunnelHeadersReceived_Params',
    [
      mojo.internal.StructField(
        'proxyServer', 0,
        0,
        proxyResolver_mojom_ProxyServerSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'responseHeaders', 8,
        0,
        network_mojom_HttpResponseHeadersSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class CustomProxyConnectionObserver_OnTunnelHeadersReceived_Params {
  constructor() {
    /** @type { !proxyResolver_mojom_ProxyServer } */
    this.proxyServer;
    /** @type { !network_mojom_HttpResponseHeaders } */
    this.responseHeaders;
  }
}



mojo.internal.Struct(
    CustomProxyConfigClient_OnCustomProxyConfigUpdated_ParamsSpec.$,
    'CustomProxyConfigClient_OnCustomProxyConfigUpdated_Params',
    [
      mojo.internal.StructField(
        'proxyConfig', 0,
        0,
        CustomProxyConfigSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class CustomProxyConfigClient_OnCustomProxyConfigUpdated_Params {
  constructor() {
    /** @type { !CustomProxyConfig } */
    this.proxyConfig;
  }
}



mojo.internal.Struct(
    CustomProxyConfigClient_OnCustomProxyConfigUpdated_ResponseParamsSpec.$,
    'CustomProxyConfigClient_OnCustomProxyConfigUpdated_ResponseParams',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class CustomProxyConfigClient_OnCustomProxyConfigUpdated_ResponseParams {
  constructor() {
  }
}



mojo.internal.Struct(
    CustomProxyConfigClient_MarkProxiesAsBad_ParamsSpec.$,
    'CustomProxyConfigClient_MarkProxiesAsBad_Params',
    [
      mojo.internal.StructField(
        'bypassDuration', 0,
        0,
        mojoBase_mojom_TimeDeltaSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'badProxies', 8,
        0,
        network_mojom_ProxyListSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class CustomProxyConfigClient_MarkProxiesAsBad_Params {
  constructor() {
    /** @type { !mojoBase_mojom_TimeDelta } */
    this.bypassDuration;
    /** @type { !network_mojom_ProxyList } */
    this.badProxies;
  }
}



mojo.internal.Struct(
    CustomProxyConfigClient_MarkProxiesAsBad_ResponseParamsSpec.$,
    'CustomProxyConfigClient_MarkProxiesAsBad_ResponseParams',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class CustomProxyConfigClient_MarkProxiesAsBad_ResponseParams {
  constructor() {
  }
}



mojo.internal.Struct(
    CustomProxyConfigClient_ClearBadProxiesCache_ParamsSpec.$,
    'CustomProxyConfigClient_ClearBadProxiesCache_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class CustomProxyConfigClient_ClearBadProxiesCache_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    TrustedHeaderClient_OnBeforeSendHeaders_ParamsSpec.$,
    'TrustedHeaderClient_OnBeforeSendHeaders_Params',
    [
      mojo.internal.StructField(
        'headers', 0,
        0,
        network_mojom_HttpRequestHeadersSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class TrustedHeaderClient_OnBeforeSendHeaders_Params {
  constructor() {
    /** @type { !network_mojom_HttpRequestHeaders } */
    this.headers;
  }
}



mojo.internal.Struct(
    TrustedHeaderClient_OnBeforeSendHeaders_ResponseParamsSpec.$,
    'TrustedHeaderClient_OnBeforeSendHeaders_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'headers', 8,
        0,
        network_mojom_HttpRequestHeadersSpec.$,
        null,
        true /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class TrustedHeaderClient_OnBeforeSendHeaders_ResponseParams {
  constructor() {
    /** @type { !number } */
    this.result;
    /** @type { (network_mojom_HttpRequestHeaders|undefined) } */
    this.headers;
  }
}



mojo.internal.Struct(
    TrustedHeaderClient_OnHeadersReceived_ParamsSpec.$,
    'TrustedHeaderClient_OnHeadersReceived_Params',
    [
      mojo.internal.StructField(
        'headers', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'remoteEndpoint', 8,
        0,
        network_mojom_IPEndPointSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class TrustedHeaderClient_OnHeadersReceived_Params {
  constructor() {
    /** @type { !string } */
    this.headers;
    /** @type { !network_mojom_IPEndPoint } */
    this.remoteEndpoint;
  }
}



mojo.internal.Struct(
    TrustedHeaderClient_OnHeadersReceived_ResponseParamsSpec.$,
    'TrustedHeaderClient_OnHeadersReceived_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'headers', 8,
        0,
        mojo.internal.String,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'preserveFragmentOnRedirectUrl', 16,
        0,
        url_mojom_UrlSpec.$,
        null,
        true /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class TrustedHeaderClient_OnHeadersReceived_ResponseParams {
  constructor() {
    /** @type { !number } */
    this.result;
    /** @type { (string|undefined) } */
    this.headers;
    /** @type { (url_mojom_Url|undefined) } */
    this.preserveFragmentOnRedirectUrl;
  }
}



mojo.internal.Struct(
    TrustedURLLoaderHeaderClient_OnLoaderCreated_ParamsSpec.$,
    'TrustedURLLoaderHeaderClient_OnLoaderCreated_Params',
    [
      mojo.internal.StructField(
        'requestId', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'headerClient', 4,
        0,
        mojo.internal.InterfaceRequest(TrustedHeaderClientPendingReceiver),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class TrustedURLLoaderHeaderClient_OnLoaderCreated_Params {
  constructor() {
    /** @type { !number } */
    this.requestId;
    /** @type { !TrustedHeaderClientPendingReceiver } */
    this.headerClient;
  }
}



mojo.internal.Struct(
    TrustedURLLoaderHeaderClient_OnLoaderForCorsPreflightCreated_ParamsSpec.$,
    'TrustedURLLoaderHeaderClient_OnLoaderForCorsPreflightCreated_Params',
    [
      mojo.internal.StructField(
        'request', 0,
        0,
        network_mojom_URLRequestSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'headerClient', 8,
        0,
        mojo.internal.InterfaceRequest(TrustedHeaderClientPendingReceiver),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class TrustedURLLoaderHeaderClient_OnLoaderForCorsPreflightCreated_Params {
  constructor() {
    /** @type { !network_mojom_URLRequest } */
    this.request;
    /** @type { !TrustedHeaderClientPendingReceiver } */
    this.headerClient;
  }
}



mojo.internal.Struct(
    NetworkContextClient_OnFileUploadRequested_ParamsSpec.$,
    'NetworkContextClient_OnFileUploadRequested_Params',
    [
      mojo.internal.StructField(
        'processId', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'async', 4,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'filePaths', 8,
        0,
        mojo.internal.Array(mojoBase_mojom_FilePathSpec.$, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'destinationUrl', 16,
        0,
        url_mojom_UrlSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class NetworkContextClient_OnFileUploadRequested_Params {
  constructor() {
    /** @type { !number } */
    this.processId;
    /** @type { !boolean } */
    this.async;
    /** @type { !Array<!mojoBase_mojom_FilePath> } */
    this.filePaths;
    /** @type { !url_mojom_Url } */
    this.destinationUrl;
  }
}



mojo.internal.Struct(
    NetworkContextClient_OnFileUploadRequested_ResponseParamsSpec.$,
    'NetworkContextClient_OnFileUploadRequested_ResponseParams',
    [
      mojo.internal.StructField(
        'netError', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'files', 8,
        0,
        mojo.internal.Array(mojoBase_mojom_ReadOnlyFileSpec.$, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class NetworkContextClient_OnFileUploadRequested_ResponseParams {
  constructor() {
    /** @type { !number } */
    this.netError;
    /** @type { !Array<!mojoBase_mojom_ReadOnlyFile> } */
    this.files;
  }
}



mojo.internal.Struct(
    NetworkContextClient_OnCanSendReportingReports_ParamsSpec.$,
    'NetworkContextClient_OnCanSendReportingReports_Params',
    [
      mojo.internal.StructField(
        'origins', 0,
        0,
        mojo.internal.Array(url_mojom_OriginSpec.$, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContextClient_OnCanSendReportingReports_Params {
  constructor() {
    /** @type { !Array<!url_mojom_Origin> } */
    this.origins;
  }
}



mojo.internal.Struct(
    NetworkContextClient_OnCanSendReportingReports_ResponseParamsSpec.$,
    'NetworkContextClient_OnCanSendReportingReports_ResponseParams',
    [
      mojo.internal.StructField(
        'origins', 0,
        0,
        mojo.internal.Array(url_mojom_OriginSpec.$, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContextClient_OnCanSendReportingReports_ResponseParams {
  constructor() {
    /** @type { !Array<!url_mojom_Origin> } */
    this.origins;
  }
}



mojo.internal.Struct(
    NetworkContextClient_OnCanSendDomainReliabilityUpload_ParamsSpec.$,
    'NetworkContextClient_OnCanSendDomainReliabilityUpload_Params',
    [
      mojo.internal.StructField(
        'origin', 0,
        0,
        url_mojom_OriginSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContextClient_OnCanSendDomainReliabilityUpload_Params {
  constructor() {
    /** @type { !url_mojom_Origin } */
    this.origin;
  }
}



mojo.internal.Struct(
    NetworkContextClient_OnCanSendDomainReliabilityUpload_ResponseParamsSpec.$,
    'NetworkContextClient_OnCanSendDomainReliabilityUpload_ResponseParams',
    [
      mojo.internal.StructField(
        'allowed', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContextClient_OnCanSendDomainReliabilityUpload_ResponseParams {
  constructor() {
    /** @type { !boolean } */
    this.allowed;
  }
}



mojo.internal.Struct(
    NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ParamsSpec.$,
    'NetworkContextClient_OnGenerateHttpNegotiateAuthToken_Params',
    [
      mojo.internal.StructField(
        'serverAuthToken', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'canDelegate', 8,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'authNegotiateAndroidAccountType', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'spn', 24,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 40],]);



/**
 * @record
 */
export class NetworkContextClient_OnGenerateHttpNegotiateAuthToken_Params {
  constructor() {
    /** @type { !string } */
    this.serverAuthToken;
    /** @type { !boolean } */
    this.canDelegate;
    /** @type { !string } */
    this.authNegotiateAndroidAccountType;
    /** @type { !string } */
    this.spn;
  }
}



mojo.internal.Struct(
    NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ResponseParamsSpec.$,
    'NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'authToken', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ResponseParams {
  constructor() {
    /** @type { !number } */
    this.result;
    /** @type { !string } */
    this.authToken;
  }
}



mojo.internal.Struct(
    NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ParamsSpec.$,
    'NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_Params',
    [
      mojo.internal.StructField(
        'request', 0,
        0,
        network_mojom_FulfillTrustTokenIssuanceRequestSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_Params {
  constructor() {
    /** @type { !network_mojom_FulfillTrustTokenIssuanceRequest } */
    this.request;
  }
}



mojo.internal.Struct(
    NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ResponseParamsSpec.$,
    'NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ResponseParams',
    [
      mojo.internal.StructField(
        'response', 0,
        0,
        network_mojom_FulfillTrustTokenIssuanceAnswerSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ResponseParams {
  constructor() {
    /** @type { !network_mojom_FulfillTrustTokenIssuanceAnswer } */
    this.response;
  }
}



mojo.internal.Struct(
    NetworkContextClient_OnCanSendSCTAuditingReport_ParamsSpec.$,
    'NetworkContextClient_OnCanSendSCTAuditingReport_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContextClient_OnCanSendSCTAuditingReport_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContextClient_OnCanSendSCTAuditingReport_ResponseParamsSpec.$,
    'NetworkContextClient_OnCanSendSCTAuditingReport_ResponseParams',
    [
      mojo.internal.StructField(
        'allowed', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContextClient_OnCanSendSCTAuditingReport_ResponseParams {
  constructor() {
    /** @type { !boolean } */
    this.allowed;
  }
}



mojo.internal.Struct(
    NetworkContextClient_OnNewSCTAuditingReportSent_ParamsSpec.$,
    'NetworkContextClient_OnNewSCTAuditingReportSent_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContextClient_OnNewSCTAuditingReportSent_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_SetClient_ParamsSpec.$,
    'NetworkContext_SetClient_Params',
    [
      mojo.internal.StructField(
        'client', 0,
        0,
        mojo.internal.InterfaceProxy(NetworkContextClientRemote),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_SetClient_Params {
  constructor() {
    /** @type { !NetworkContextClientRemote } */
    this.client;
  }
}



mojo.internal.Struct(
    NetworkContext_CreateURLLoaderFactory_ParamsSpec.$,
    'NetworkContext_CreateURLLoaderFactory_Params',
    [
      mojo.internal.StructField(
        'urlLoaderFactory', 0,
        0,
        mojo.internal.InterfaceRequest(network_mojom_URLLoaderFactoryPendingReceiver),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'params', 8,
        0,
        URLLoaderFactoryParamsSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class NetworkContext_CreateURLLoaderFactory_Params {
  constructor() {
    /** @type { !network_mojom_URLLoaderFactoryPendingReceiver } */
    this.urlLoaderFactory;
    /** @type { !URLLoaderFactoryParams } */
    this.params;
  }
}



mojo.internal.Struct(
    NetworkContext_ResetURLLoaderFactories_ParamsSpec.$,
    'NetworkContext_ResetURLLoaderFactories_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_ResetURLLoaderFactories_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_GetCookieManager_ParamsSpec.$,
    'NetworkContext_GetCookieManager_Params',
    [
      mojo.internal.StructField(
        'cookieManager', 0,
        0,
        mojo.internal.InterfaceRequest(network_mojom_CookieManagerPendingReceiver),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_GetCookieManager_Params {
  constructor() {
    /** @type { !network_mojom_CookieManagerPendingReceiver } */
    this.cookieManager;
  }
}



mojo.internal.Struct(
    NetworkContext_GetRestrictedCookieManager_ParamsSpec.$,
    'NetworkContext_GetRestrictedCookieManager_Params',
    [
      mojo.internal.StructField(
        'restrictedCookieManager', 0,
        0,
        mojo.internal.InterfaceRequest(network_mojom_RestrictedCookieManagerPendingReceiver),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'role', 4,
        0,
        network_mojom_RestrictedCookieManagerRoleSpec.$,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'origin', 8,
        0,
        url_mojom_OriginSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'isolationInfo', 16,
        0,
        network_mojom_IsolationInfoSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'cookieObserver', 24,
        0,
        mojo.internal.InterfaceProxy(network_mojom_CookieAccessObserverRemote),
        null,
        true /* nullable */,
        0),
    ],
    [[0, 40],]);



/**
 * @record
 */
export class NetworkContext_GetRestrictedCookieManager_Params {
  constructor() {
    /** @type { !network_mojom_RestrictedCookieManagerPendingReceiver } */
    this.restrictedCookieManager;
    /** @type { !network_mojom_RestrictedCookieManagerRole } */
    this.role;
    /** @type { !url_mojom_Origin } */
    this.origin;
    /** @type { !network_mojom_IsolationInfo } */
    this.isolationInfo;
    /** @type { (network_mojom_CookieAccessObserverRemote|undefined) } */
    this.cookieObserver;
  }
}



mojo.internal.Struct(
    NetworkContext_GetTrustTokenQueryAnswerer_ParamsSpec.$,
    'NetworkContext_GetTrustTokenQueryAnswerer_Params',
    [
      mojo.internal.StructField(
        'trustTokenQueryAnswerer', 0,
        0,
        mojo.internal.InterfaceRequest(network_mojom_TrustTokenQueryAnswererPendingReceiver),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'topFrameOrigin', 8,
        0,
        url_mojom_OriginSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class NetworkContext_GetTrustTokenQueryAnswerer_Params {
  constructor() {
    /** @type { !network_mojom_TrustTokenQueryAnswererPendingReceiver } */
    this.trustTokenQueryAnswerer;
    /** @type { !url_mojom_Origin } */
    this.topFrameOrigin;
  }
}



mojo.internal.Struct(
    NetworkContext_ClearTrustTokenData_ParamsSpec.$,
    'NetworkContext_ClearTrustTokenData_Params',
    [
      mojo.internal.StructField(
        'filter', 0,
        0,
        ClearDataFilterSpec.$,
        null,
        true /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_ClearTrustTokenData_Params {
  constructor() {
    /** @type { (ClearDataFilter|undefined) } */
    this.filter;
  }
}



mojo.internal.Struct(
    NetworkContext_ClearTrustTokenData_ResponseParamsSpec.$,
    'NetworkContext_ClearTrustTokenData_ResponseParams',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_ClearTrustTokenData_ResponseParams {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_GetStoredTrustTokenCounts_ParamsSpec.$,
    'NetworkContext_GetStoredTrustTokenCounts_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_GetStoredTrustTokenCounts_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_GetStoredTrustTokenCounts_ResponseParamsSpec.$,
    'NetworkContext_GetStoredTrustTokenCounts_ResponseParams',
    [
      mojo.internal.StructField(
        'tokens', 0,
        0,
        mojo.internal.Array(network_mojom_StoredTrustTokensForIssuerSpec.$, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_GetStoredTrustTokenCounts_ResponseParams {
  constructor() {
    /** @type { !Array<!network_mojom_StoredTrustTokensForIssuer> } */
    this.tokens;
  }
}



mojo.internal.Struct(
    NetworkContext_DeleteStoredTrustTokens_ParamsSpec.$,
    'NetworkContext_DeleteStoredTrustTokens_Params',
    [
      mojo.internal.StructField(
        'issuer', 0,
        0,
        url_mojom_OriginSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_DeleteStoredTrustTokens_Params {
  constructor() {
    /** @type { !url_mojom_Origin } */
    this.issuer;
  }
}



mojo.internal.Struct(
    NetworkContext_DeleteStoredTrustTokens_ResponseParamsSpec.$,
    'NetworkContext_DeleteStoredTrustTokens_ResponseParams',
    [
      mojo.internal.StructField(
        'status', 0,
        0,
        network_mojom_DeleteStoredTrustTokensStatusSpec.$,
        0,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_DeleteStoredTrustTokens_ResponseParams {
  constructor() {
    /** @type { !network_mojom_DeleteStoredTrustTokensStatus } */
    this.status;
  }
}



mojo.internal.Struct(
    NetworkContext_SetBlockTrustTokens_ParamsSpec.$,
    'NetworkContext_SetBlockTrustTokens_Params',
    [
      mojo.internal.StructField(
        'block', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_SetBlockTrustTokens_Params {
  constructor() {
    /** @type { !boolean } */
    this.block;
  }
}



mojo.internal.Struct(
    NetworkContext_ClearNetworkingHistoryBetween_ParamsSpec.$,
    'NetworkContext_ClearNetworkingHistoryBetween_Params',
    [
      mojo.internal.StructField(
        'startTime', 0,
        0,
        mojoBase_mojom_TimeSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'endTime', 8,
        0,
        mojoBase_mojom_TimeSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class NetworkContext_ClearNetworkingHistoryBetween_Params {
  constructor() {
    /** @type { !mojoBase_mojom_Time } */
    this.startTime;
    /** @type { !mojoBase_mojom_Time } */
    this.endTime;
  }
}



mojo.internal.Struct(
    NetworkContext_ClearNetworkingHistoryBetween_ResponseParamsSpec.$,
    'NetworkContext_ClearNetworkingHistoryBetween_ResponseParams',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_ClearNetworkingHistoryBetween_ResponseParams {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_ClearHttpCache_ParamsSpec.$,
    'NetworkContext_ClearHttpCache_Params',
    [
      mojo.internal.StructField(
        'startTime', 0,
        0,
        mojoBase_mojom_TimeSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'endTime', 8,
        0,
        mojoBase_mojom_TimeSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'filter', 16,
        0,
        ClearDataFilterSpec.$,
        null,
        true /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class NetworkContext_ClearHttpCache_Params {
  constructor() {
    /** @type { !mojoBase_mojom_Time } */
    this.startTime;
    /** @type { !mojoBase_mojom_Time } */
    this.endTime;
    /** @type { (ClearDataFilter|undefined) } */
    this.filter;
  }
}



mojo.internal.Struct(
    NetworkContext_ClearHttpCache_ResponseParamsSpec.$,
    'NetworkContext_ClearHttpCache_ResponseParams',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_ClearHttpCache_ResponseParams {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_ComputeHttpCacheSize_ParamsSpec.$,
    'NetworkContext_ComputeHttpCacheSize_Params',
    [
      mojo.internal.StructField(
        'startTime', 0,
        0,
        mojoBase_mojom_TimeSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'endTime', 8,
        0,
        mojoBase_mojom_TimeSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class NetworkContext_ComputeHttpCacheSize_Params {
  constructor() {
    /** @type { !mojoBase_mojom_Time } */
    this.startTime;
    /** @type { !mojoBase_mojom_Time } */
    this.endTime;
  }
}



mojo.internal.Struct(
    NetworkContext_ComputeHttpCacheSize_ResponseParamsSpec.$,
    'NetworkContext_ComputeHttpCacheSize_ResponseParams',
    [
      mojo.internal.StructField(
        'isUpperBound', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'sizeOrError', 8,
        0,
        mojo.internal.Int64,
        BigInt(0),
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class NetworkContext_ComputeHttpCacheSize_ResponseParams {
  constructor() {
    /** @type { !boolean } */
    this.isUpperBound;
    /** @type { !bigint } */
    this.sizeOrError;
  }
}



mojo.internal.Struct(
    NetworkContext_NotifyExternalCacheHit_ParamsSpec.$,
    'NetworkContext_NotifyExternalCacheHit_Params',
    [
      mojo.internal.StructField(
        'url', 0,
        0,
        url_mojom_UrlSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'httpMethod', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'key', 16,
        0,
        network_mojom_NetworkIsolationKeySpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'isSubframeDocumentResource', 24,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'includeCredentials', 24,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 40],]);



/**
 * @record
 */
export class NetworkContext_NotifyExternalCacheHit_Params {
  constructor() {
    /** @type { !url_mojom_Url } */
    this.url;
    /** @type { !string } */
    this.httpMethod;
    /** @type { !network_mojom_NetworkIsolationKey } */
    this.key;
    /** @type { !boolean } */
    this.isSubframeDocumentResource;
    /** @type { !boolean } */
    this.includeCredentials;
  }
}



mojo.internal.Struct(
    NetworkContext_ClearHostCache_ParamsSpec.$,
    'NetworkContext_ClearHostCache_Params',
    [
      mojo.internal.StructField(
        'filter', 0,
        0,
        ClearDataFilterSpec.$,
        null,
        true /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_ClearHostCache_Params {
  constructor() {
    /** @type { (ClearDataFilter|undefined) } */
    this.filter;
  }
}



mojo.internal.Struct(
    NetworkContext_ClearHostCache_ResponseParamsSpec.$,
    'NetworkContext_ClearHostCache_ResponseParams',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_ClearHostCache_ResponseParams {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_ClearHttpAuthCache_ParamsSpec.$,
    'NetworkContext_ClearHttpAuthCache_Params',
    [
      mojo.internal.StructField(
        'startTime', 0,
        0,
        mojoBase_mojom_TimeSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'endTime', 8,
        0,
        mojoBase_mojom_TimeSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class NetworkContext_ClearHttpAuthCache_Params {
  constructor() {
    /** @type { !mojoBase_mojom_Time } */
    this.startTime;
    /** @type { !mojoBase_mojom_Time } */
    this.endTime;
  }
}



mojo.internal.Struct(
    NetworkContext_ClearHttpAuthCache_ResponseParamsSpec.$,
    'NetworkContext_ClearHttpAuthCache_ResponseParams',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_ClearHttpAuthCache_ResponseParams {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_ClearReportingCacheReports_ParamsSpec.$,
    'NetworkContext_ClearReportingCacheReports_Params',
    [
      mojo.internal.StructField(
        'filter', 0,
        0,
        ClearDataFilterSpec.$,
        null,
        true /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_ClearReportingCacheReports_Params {
  constructor() {
    /** @type { (ClearDataFilter|undefined) } */
    this.filter;
  }
}



mojo.internal.Struct(
    NetworkContext_ClearReportingCacheReports_ResponseParamsSpec.$,
    'NetworkContext_ClearReportingCacheReports_ResponseParams',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_ClearReportingCacheReports_ResponseParams {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_ClearReportingCacheClients_ParamsSpec.$,
    'NetworkContext_ClearReportingCacheClients_Params',
    [
      mojo.internal.StructField(
        'filter', 0,
        0,
        ClearDataFilterSpec.$,
        null,
        true /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_ClearReportingCacheClients_Params {
  constructor() {
    /** @type { (ClearDataFilter|undefined) } */
    this.filter;
  }
}



mojo.internal.Struct(
    NetworkContext_ClearReportingCacheClients_ResponseParamsSpec.$,
    'NetworkContext_ClearReportingCacheClients_ResponseParams',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_ClearReportingCacheClients_ResponseParams {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_ClearNetworkErrorLogging_ParamsSpec.$,
    'NetworkContext_ClearNetworkErrorLogging_Params',
    [
      mojo.internal.StructField(
        'filter', 0,
        0,
        ClearDataFilterSpec.$,
        null,
        true /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_ClearNetworkErrorLogging_Params {
  constructor() {
    /** @type { (ClearDataFilter|undefined) } */
    this.filter;
  }
}



mojo.internal.Struct(
    NetworkContext_ClearNetworkErrorLogging_ResponseParamsSpec.$,
    'NetworkContext_ClearNetworkErrorLogging_ResponseParams',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_ClearNetworkErrorLogging_ResponseParams {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_ClearDomainReliability_ParamsSpec.$,
    'NetworkContext_ClearDomainReliability_Params',
    [
      mojo.internal.StructField(
        'filter', 0,
        0,
        ClearDataFilterSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'mode', 8,
        0,
        NetworkContext_DomainReliabilityClearModeSpec.$,
        0,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class NetworkContext_ClearDomainReliability_Params {
  constructor() {
    /** @type { (ClearDataFilter|undefined) } */
    this.filter;
    /** @type { !NetworkContext_DomainReliabilityClearMode } */
    this.mode;
  }
}



mojo.internal.Struct(
    NetworkContext_ClearDomainReliability_ResponseParamsSpec.$,
    'NetworkContext_ClearDomainReliability_ResponseParams',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_ClearDomainReliability_ResponseParams {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_SetDocumentReportingEndpoints_ParamsSpec.$,
    'NetworkContext_SetDocumentReportingEndpoints_Params',
    [
      mojo.internal.StructField(
        'reportingSource', 0,
        0,
        mojoBase_mojom_UnguessableTokenSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'origin', 8,
        0,
        url_mojom_OriginSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'isolationInfo', 16,
        0,
        network_mojom_IsolationInfoSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'endpoints', 24,
        0,
        mojo.internal.Map(mojo.internal.String, mojo.internal.String, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 40],]);



/**
 * @record
 */
export class NetworkContext_SetDocumentReportingEndpoints_Params {
  constructor() {
    /** @type { !mojoBase_mojom_UnguessableToken } */
    this.reportingSource;
    /** @type { !url_mojom_Origin } */
    this.origin;
    /** @type { !network_mojom_IsolationInfo } */
    this.isolationInfo;
    /** @type { !Object<!string, !string> } */
    this.endpoints;
  }
}



mojo.internal.Struct(
    NetworkContext_SendReportsAndRemoveSource_ParamsSpec.$,
    'NetworkContext_SendReportsAndRemoveSource_Params',
    [
      mojo.internal.StructField(
        'reportingSource', 0,
        0,
        mojoBase_mojom_UnguessableTokenSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_SendReportsAndRemoveSource_Params {
  constructor() {
    /** @type { !mojoBase_mojom_UnguessableToken } */
    this.reportingSource;
  }
}



mojo.internal.Struct(
    NetworkContext_QueueReport_ParamsSpec.$,
    'NetworkContext_QueueReport_Params',
    [
      mojo.internal.StructField(
        'type', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'group', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'url', 16,
        0,
        url_mojom_UrlSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'reportingSource', 24,
        0,
        mojoBase_mojom_UnguessableTokenSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'networkIsolationKey', 32,
        0,
        network_mojom_NetworkIsolationKeySpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'userAgent', 40,
        0,
        mojo.internal.String,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'body', 48,
        0,
        mojoBase_mojom_DictionaryValueSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 64],]);



/**
 * @record
 */
export class NetworkContext_QueueReport_Params {
  constructor() {
    /** @type { !string } */
    this.type;
    /** @type { !string } */
    this.group;
    /** @type { !url_mojom_Url } */
    this.url;
    /** @type { (mojoBase_mojom_UnguessableToken|undefined) } */
    this.reportingSource;
    /** @type { !network_mojom_NetworkIsolationKey } */
    this.networkIsolationKey;
    /** @type { (string|undefined) } */
    this.userAgent;
    /** @type { !mojoBase_mojom_DictionaryValue } */
    this.body;
  }
}



mojo.internal.Struct(
    NetworkContext_QueueSignedExchangeReport_ParamsSpec.$,
    'NetworkContext_QueueSignedExchangeReport_Params',
    [
      mojo.internal.StructField(
        'report', 0,
        0,
        SignedExchangeReportSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'networkIsolationKey', 8,
        0,
        network_mojom_NetworkIsolationKeySpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class NetworkContext_QueueSignedExchangeReport_Params {
  constructor() {
    /** @type { !SignedExchangeReport } */
    this.report;
    /** @type { !network_mojom_NetworkIsolationKey } */
    this.networkIsolationKey;
  }
}



mojo.internal.Struct(
    NetworkContext_CloseAllConnections_ParamsSpec.$,
    'NetworkContext_CloseAllConnections_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_CloseAllConnections_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_CloseAllConnections_ResponseParamsSpec.$,
    'NetworkContext_CloseAllConnections_ResponseParams',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_CloseAllConnections_ResponseParams {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_CloseIdleConnections_ParamsSpec.$,
    'NetworkContext_CloseIdleConnections_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_CloseIdleConnections_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_CloseIdleConnections_ResponseParamsSpec.$,
    'NetworkContext_CloseIdleConnections_ResponseParams',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_CloseIdleConnections_ResponseParams {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_SetNetworkConditions_ParamsSpec.$,
    'NetworkContext_SetNetworkConditions_Params',
    [
      mojo.internal.StructField(
        'throttlingProfileId', 0,
        0,
        mojoBase_mojom_UnguessableTokenSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'conditions', 8,
        0,
        NetworkConditionsSpec.$,
        null,
        true /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class NetworkContext_SetNetworkConditions_Params {
  constructor() {
    /** @type { !mojoBase_mojom_UnguessableToken } */
    this.throttlingProfileId;
    /** @type { (NetworkConditions|undefined) } */
    this.conditions;
  }
}



mojo.internal.Struct(
    NetworkContext_SetAcceptLanguage_ParamsSpec.$,
    'NetworkContext_SetAcceptLanguage_Params',
    [
      mojo.internal.StructField(
        'newAcceptLanguage', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_SetAcceptLanguage_Params {
  constructor() {
    /** @type { !string } */
    this.newAcceptLanguage;
  }
}



mojo.internal.Struct(
    NetworkContext_SetEnableReferrers_ParamsSpec.$,
    'NetworkContext_SetEnableReferrers_Params',
    [
      mojo.internal.StructField(
        'enableReferrers', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_SetEnableReferrers_Params {
  constructor() {
    /** @type { !boolean } */
    this.enableReferrers;
  }
}



mojo.internal.Struct(
    NetworkContext_SetCTPolicy_ParamsSpec.$,
    'NetworkContext_SetCTPolicy_Params',
    [
      mojo.internal.StructField(
        'ctPolicy', 0,
        0,
        CTPolicySpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_SetCTPolicy_Params {
  constructor() {
    /** @type { !CTPolicy } */
    this.ctPolicy;
  }
}



mojo.internal.Struct(
    NetworkContext_AddExpectCT_ParamsSpec.$,
    'NetworkContext_AddExpectCT_Params',
    [
      mojo.internal.StructField(
        'host', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'expiry', 8,
        0,
        mojoBase_mojom_TimeSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'enforce', 16,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'reportUri', 24,
        0,
        url_mojom_UrlSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'networkIsolationKey', 32,
        0,
        network_mojom_NetworkIsolationKeySpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 48],]);



/**
 * @record
 */
export class NetworkContext_AddExpectCT_Params {
  constructor() {
    /** @type { !string } */
    this.host;
    /** @type { !mojoBase_mojom_Time } */
    this.expiry;
    /** @type { !boolean } */
    this.enforce;
    /** @type { !url_mojom_Url } */
    this.reportUri;
    /** @type { !network_mojom_NetworkIsolationKey } */
    this.networkIsolationKey;
  }
}



mojo.internal.Struct(
    NetworkContext_AddExpectCT_ResponseParamsSpec.$,
    'NetworkContext_AddExpectCT_ResponseParams',
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_AddExpectCT_ResponseParams {
  constructor() {
    /** @type { !boolean } */
    this.success;
  }
}



mojo.internal.Struct(
    NetworkContext_SetExpectCTTestReport_ParamsSpec.$,
    'NetworkContext_SetExpectCTTestReport_Params',
    [
      mojo.internal.StructField(
        'reportUri', 0,
        0,
        url_mojom_UrlSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_SetExpectCTTestReport_Params {
  constructor() {
    /** @type { !url_mojom_Url } */
    this.reportUri;
  }
}



mojo.internal.Struct(
    NetworkContext_SetExpectCTTestReport_ResponseParamsSpec.$,
    'NetworkContext_SetExpectCTTestReport_ResponseParams',
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_SetExpectCTTestReport_ResponseParams {
  constructor() {
    /** @type { !boolean } */
    this.success;
  }
}



mojo.internal.Struct(
    NetworkContext_GetExpectCTState_ParamsSpec.$,
    'NetworkContext_GetExpectCTState_Params',
    [
      mojo.internal.StructField(
        'domain', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'networkIsolationKey', 8,
        0,
        network_mojom_NetworkIsolationKeySpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class NetworkContext_GetExpectCTState_Params {
  constructor() {
    /** @type { !string } */
    this.domain;
    /** @type { !network_mojom_NetworkIsolationKey } */
    this.networkIsolationKey;
  }
}



mojo.internal.Struct(
    NetworkContext_GetExpectCTState_ResponseParamsSpec.$,
    'NetworkContext_GetExpectCTState_ResponseParams',
    [
      mojo.internal.StructField(
        'state', 0,
        0,
        mojoBase_mojom_DictionaryValueSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_GetExpectCTState_ResponseParams {
  constructor() {
    /** @type { !mojoBase_mojom_DictionaryValue } */
    this.state;
  }
}



mojo.internal.Struct(
    NetworkContext_CreateUDPSocket_ParamsSpec.$,
    'NetworkContext_CreateUDPSocket_Params',
    [
      mojo.internal.StructField(
        'receiver', 0,
        0,
        mojo.internal.InterfaceRequest(network_mojom_UDPSocketPendingReceiver),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'listener', 4,
        0,
        mojo.internal.InterfaceProxy(network_mojom_UDPSocketListenerRemote),
        null,
        true /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class NetworkContext_CreateUDPSocket_Params {
  constructor() {
    /** @type { !network_mojom_UDPSocketPendingReceiver } */
    this.receiver;
    /** @type { (network_mojom_UDPSocketListenerRemote|undefined) } */
    this.listener;
  }
}



mojo.internal.Struct(
    NetworkContext_CreateTCPServerSocket_ParamsSpec.$,
    'NetworkContext_CreateTCPServerSocket_Params',
    [
      mojo.internal.StructField(
        'localAddr', 0,
        0,
        network_mojom_IPEndPointSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'backlog', 8,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'trafficAnnotation', 16,
        0,
        network_mojom_MutableNetworkTrafficAnnotationTagSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'socket', 12,
        0,
        mojo.internal.InterfaceRequest(network_mojom_TCPServerSocketPendingReceiver),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class NetworkContext_CreateTCPServerSocket_Params {
  constructor() {
    /** @type { !network_mojom_IPEndPoint } */
    this.localAddr;
    /** @type { !number } */
    this.backlog;
    /** @type { !network_mojom_TCPServerSocketPendingReceiver } */
    this.socket;
    /** @type { !network_mojom_MutableNetworkTrafficAnnotationTag } */
    this.trafficAnnotation;
  }
}



mojo.internal.Struct(
    NetworkContext_CreateTCPServerSocket_ResponseParamsSpec.$,
    'NetworkContext_CreateTCPServerSocket_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'localAddrOut', 8,
        0,
        network_mojom_IPEndPointSpec.$,
        null,
        true /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class NetworkContext_CreateTCPServerSocket_ResponseParams {
  constructor() {
    /** @type { !number } */
    this.result;
    /** @type { (network_mojom_IPEndPoint|undefined) } */
    this.localAddrOut;
  }
}



mojo.internal.Struct(
    NetworkContext_CreateTCPConnectedSocket_ParamsSpec.$,
    'NetworkContext_CreateTCPConnectedSocket_Params',
    [
      mojo.internal.StructField(
        'localAddr', 0,
        0,
        network_mojom_IPEndPointSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'remoteAddrList', 8,
        0,
        network_mojom_AddressListSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'tcpConnectedSocketOptions', 16,
        0,
        network_mojom_TCPConnectedSocketOptionsSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'trafficAnnotation', 24,
        0,
        network_mojom_MutableNetworkTrafficAnnotationTagSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'socket', 32,
        0,
        mojo.internal.InterfaceRequest(network_mojom_TCPConnectedSocketPendingReceiver),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'observer', 36,
        0,
        mojo.internal.InterfaceProxy(network_mojom_SocketObserverRemote),
        null,
        true /* nullable */,
        0),
    ],
    [[0, 56],]);



/**
 * @record
 */
export class NetworkContext_CreateTCPConnectedSocket_Params {
  constructor() {
    /** @type { (network_mojom_IPEndPoint|undefined) } */
    this.localAddr;
    /** @type { !network_mojom_AddressList } */
    this.remoteAddrList;
    /** @type { (network_mojom_TCPConnectedSocketOptions|undefined) } */
    this.tcpConnectedSocketOptions;
    /** @type { !network_mojom_MutableNetworkTrafficAnnotationTag } */
    this.trafficAnnotation;
    /** @type { !network_mojom_TCPConnectedSocketPendingReceiver } */
    this.socket;
    /** @type { (network_mojom_SocketObserverRemote|undefined) } */
    this.observer;
  }
}



mojo.internal.Struct(
    NetworkContext_CreateTCPConnectedSocket_ResponseParamsSpec.$,
    'NetworkContext_CreateTCPConnectedSocket_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'localAddr', 8,
        0,
        network_mojom_IPEndPointSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'peerAddr', 16,
        0,
        network_mojom_IPEndPointSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'receiveStream', 4,
        0,
        mojo.internal.Handle,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'sendStream', 24,
        0,
        mojo.internal.Handle,
        null,
        true /* nullable */,
        0),
    ],
    [[0, 40],]);



/**
 * @record
 */
export class NetworkContext_CreateTCPConnectedSocket_ResponseParams {
  constructor() {
    /** @type { !number } */
    this.result;
    /** @type { (MojoHandle|undefined) } */
    this.receiveStream;
    /** @type { (network_mojom_IPEndPoint|undefined) } */
    this.localAddr;
    /** @type { (network_mojom_IPEndPoint|undefined) } */
    this.peerAddr;
    /** @type { (MojoHandle|undefined) } */
    this.sendStream;
  }
}



mojo.internal.Struct(
    NetworkContext_CreateTCPBoundSocket_ParamsSpec.$,
    'NetworkContext_CreateTCPBoundSocket_Params',
    [
      mojo.internal.StructField(
        'localAddr', 0,
        0,
        network_mojom_IPEndPointSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'trafficAnnotation', 8,
        0,
        network_mojom_MutableNetworkTrafficAnnotationTagSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'socket', 16,
        0,
        mojo.internal.InterfaceRequest(network_mojom_TCPBoundSocketPendingReceiver),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class NetworkContext_CreateTCPBoundSocket_Params {
  constructor() {
    /** @type { !network_mojom_IPEndPoint } */
    this.localAddr;
    /** @type { !network_mojom_MutableNetworkTrafficAnnotationTag } */
    this.trafficAnnotation;
    /** @type { !network_mojom_TCPBoundSocketPendingReceiver } */
    this.socket;
  }
}



mojo.internal.Struct(
    NetworkContext_CreateTCPBoundSocket_ResponseParamsSpec.$,
    'NetworkContext_CreateTCPBoundSocket_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'localAddr', 8,
        0,
        network_mojom_IPEndPointSpec.$,
        null,
        true /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class NetworkContext_CreateTCPBoundSocket_ResponseParams {
  constructor() {
    /** @type { !number } */
    this.result;
    /** @type { (network_mojom_IPEndPoint|undefined) } */
    this.localAddr;
  }
}



mojo.internal.Struct(
    NetworkContext_CreateProxyResolvingSocketFactory_ParamsSpec.$,
    'NetworkContext_CreateProxyResolvingSocketFactory_Params',
    [
      mojo.internal.StructField(
        'factory', 0,
        0,
        mojo.internal.InterfaceRequest(network_mojom_ProxyResolvingSocketFactoryPendingReceiver),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_CreateProxyResolvingSocketFactory_Params {
  constructor() {
    /** @type { !network_mojom_ProxyResolvingSocketFactoryPendingReceiver } */
    this.factory;
  }
}



mojo.internal.Struct(
    NetworkContext_LookUpProxyForURL_ParamsSpec.$,
    'NetworkContext_LookUpProxyForURL_Params',
    [
      mojo.internal.StructField(
        'url', 0,
        0,
        url_mojom_UrlSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'networkIsolationKey', 8,
        0,
        network_mojom_NetworkIsolationKeySpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'proxyLookupClient', 16,
        0,
        mojo.internal.InterfaceProxy(network_mojom_ProxyLookupClientRemote),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class NetworkContext_LookUpProxyForURL_Params {
  constructor() {
    /** @type { !url_mojom_Url } */
    this.url;
    /** @type { !network_mojom_NetworkIsolationKey } */
    this.networkIsolationKey;
    /** @type { !network_mojom_ProxyLookupClientRemote } */
    this.proxyLookupClient;
  }
}



mojo.internal.Struct(
    NetworkContext_ForceReloadProxyConfig_ParamsSpec.$,
    'NetworkContext_ForceReloadProxyConfig_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_ForceReloadProxyConfig_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_ForceReloadProxyConfig_ResponseParamsSpec.$,
    'NetworkContext_ForceReloadProxyConfig_ResponseParams',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_ForceReloadProxyConfig_ResponseParams {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_ClearBadProxiesCache_ParamsSpec.$,
    'NetworkContext_ClearBadProxiesCache_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_ClearBadProxiesCache_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_ClearBadProxiesCache_ResponseParamsSpec.$,
    'NetworkContext_ClearBadProxiesCache_ResponseParams',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_ClearBadProxiesCache_ResponseParams {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_CreateWebSocket_ParamsSpec.$,
    'NetworkContext_CreateWebSocket_Params',
    [
      mojo.internal.StructField(
        'url', 0,
        0,
        url_mojom_UrlSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'requestedProtocols', 8,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'siteForCookies', 16,
        0,
        network_mojom_SiteForCookiesSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'isolationInfo', 24,
        0,
        network_mojom_IsolationInfoSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'additionalHeaders', 32,
        0,
        mojo.internal.Array(network_mojom_HttpHeaderSpec.$, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'processId', 40,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'origin', 48,
        0,
        url_mojom_OriginSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'options', 44,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'trafficAnnotation', 56,
        0,
        network_mojom_MutableNetworkTrafficAnnotationTagSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'handshakeClient', 64,
        0,
        mojo.internal.InterfaceProxy(network_mojom_WebSocketHandshakeClientRemote),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'urlLoaderNetworkObserver', 72,
        0,
        mojo.internal.InterfaceProxy(network_mojom_URLLoaderNetworkServiceObserverRemote),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'authHandler', 80,
        0,
        mojo.internal.InterfaceProxy(network_mojom_WebSocketAuthenticationHandlerRemote),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'headerClient', 88,
        0,
        mojo.internal.InterfaceProxy(TrustedHeaderClientRemote),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'throttlingProfileId', 96,
        0,
        mojoBase_mojom_UnguessableTokenSpec.$,
        null,
        true /* nullable */,
        0),
    ],
    [[0, 112],]);



/**
 * @record
 */
export class NetworkContext_CreateWebSocket_Params {
  constructor() {
    /** @type { !url_mojom_Url } */
    this.url;
    /** @type { !Array<!string> } */
    this.requestedProtocols;
    /** @type { !network_mojom_SiteForCookies } */
    this.siteForCookies;
    /** @type { !network_mojom_IsolationInfo } */
    this.isolationInfo;
    /** @type { !Array<!network_mojom_HttpHeader> } */
    this.additionalHeaders;
    /** @type { !number } */
    this.processId;
    /** @type { !number } */
    this.options;
    /** @type { !url_mojom_Origin } */
    this.origin;
    /** @type { !network_mojom_MutableNetworkTrafficAnnotationTag } */
    this.trafficAnnotation;
    /** @type { !network_mojom_WebSocketHandshakeClientRemote } */
    this.handshakeClient;
    /** @type { (network_mojom_URLLoaderNetworkServiceObserverRemote|undefined) } */
    this.urlLoaderNetworkObserver;
    /** @type { (network_mojom_WebSocketAuthenticationHandlerRemote|undefined) } */
    this.authHandler;
    /** @type { (TrustedHeaderClientRemote|undefined) } */
    this.headerClient;
    /** @type { (mojoBase_mojom_UnguessableToken|undefined) } */
    this.throttlingProfileId;
  }
}



mojo.internal.Struct(
    NetworkContext_CreateWebTransport_ParamsSpec.$,
    'NetworkContext_CreateWebTransport_Params',
    [
      mojo.internal.StructField(
        'url', 0,
        0,
        url_mojom_UrlSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'origin', 8,
        0,
        url_mojom_OriginSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'networkIsolationKey', 16,
        0,
        network_mojom_NetworkIsolationKeySpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'fingerprints', 24,
        0,
        mojo.internal.Array(network_mojom_WebTransportCertificateFingerprintSpec.$, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'handshakeClient', 32,
        0,
        mojo.internal.InterfaceProxy(network_mojom_WebTransportHandshakeClientRemote),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 48],]);



/**
 * @record
 */
export class NetworkContext_CreateWebTransport_Params {
  constructor() {
    /** @type { !url_mojom_Url } */
    this.url;
    /** @type { !url_mojom_Origin } */
    this.origin;
    /** @type { !network_mojom_NetworkIsolationKey } */
    this.networkIsolationKey;
    /** @type { !Array<!network_mojom_WebTransportCertificateFingerprint> } */
    this.fingerprints;
    /** @type { !network_mojom_WebTransportHandshakeClientRemote } */
    this.handshakeClient;
  }
}



mojo.internal.Struct(
    NetworkContext_CreateNetLogExporter_ParamsSpec.$,
    'NetworkContext_CreateNetLogExporter_Params',
    [
      mojo.internal.StructField(
        'receiver', 0,
        0,
        mojo.internal.InterfaceRequest(network_mojom_NetLogExporterPendingReceiver),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_CreateNetLogExporter_Params {
  constructor() {
    /** @type { !network_mojom_NetLogExporterPendingReceiver } */
    this.receiver;
  }
}



mojo.internal.Struct(
    NetworkContext_PreconnectSockets_ParamsSpec.$,
    'NetworkContext_PreconnectSockets_Params',
    [
      mojo.internal.StructField(
        'numStreams', 0,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'url', 8,
        0,
        url_mojom_UrlSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'allowCredentials', 4,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'networkIsolationKey', 16,
        0,
        network_mojom_NetworkIsolationKeySpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class NetworkContext_PreconnectSockets_Params {
  constructor() {
    /** @type { !number } */
    this.numStreams;
    /** @type { !boolean } */
    this.allowCredentials;
    /** @type { !url_mojom_Url } */
    this.url;
    /** @type { !network_mojom_NetworkIsolationKey } */
    this.networkIsolationKey;
  }
}



mojo.internal.Struct(
    NetworkContext_CreateP2PSocketManager_ParamsSpec.$,
    'NetworkContext_CreateP2PSocketManager_Params',
    [
      mojo.internal.StructField(
        'networkIsolationKey', 0,
        0,
        network_mojom_NetworkIsolationKeySpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'client', 8,
        0,
        mojo.internal.InterfaceProxy(network_mojom_P2PTrustedSocketManagerClientRemote),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'trustedSocketManager', 16,
        0,
        mojo.internal.InterfaceRequest(network_mojom_P2PTrustedSocketManagerPendingReceiver),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'socketManager', 20,
        0,
        mojo.internal.InterfaceRequest(network_mojom_P2PSocketManagerPendingReceiver),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class NetworkContext_CreateP2PSocketManager_Params {
  constructor() {
    /** @type { !network_mojom_NetworkIsolationKey } */
    this.networkIsolationKey;
    /** @type { !network_mojom_P2PTrustedSocketManagerClientRemote } */
    this.client;
    /** @type { !network_mojom_P2PTrustedSocketManagerPendingReceiver } */
    this.trustedSocketManager;
    /** @type { !network_mojom_P2PSocketManagerPendingReceiver } */
    this.socketManager;
  }
}



mojo.internal.Struct(
    NetworkContext_CreateMdnsResponder_ParamsSpec.$,
    'NetworkContext_CreateMdnsResponder_Params',
    [
      mojo.internal.StructField(
        'responderReceiver', 0,
        0,
        mojo.internal.InterfaceRequest(network_mojom_MdnsResponderPendingReceiver),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_CreateMdnsResponder_Params {
  constructor() {
    /** @type { !network_mojom_MdnsResponderPendingReceiver } */
    this.responderReceiver;
  }
}



mojo.internal.Struct(
    NetworkContext_ResolveHost_ParamsSpec.$,
    'NetworkContext_ResolveHost_Params',
    [
      mojo.internal.StructField(
        'host', 0,
        0,
        network_mojom_HostPortPairSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'networkIsolationKey', 8,
        0,
        network_mojom_NetworkIsolationKeySpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'optionalParameters', 16,
        0,
        network_mojom_ResolveHostParametersSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'responseClient', 24,
        0,
        mojo.internal.InterfaceProxy(network_mojom_ResolveHostClientRemote),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 40],]);



/**
 * @record
 */
export class NetworkContext_ResolveHost_Params {
  constructor() {
    /** @type { !network_mojom_HostPortPair } */
    this.host;
    /** @type { !network_mojom_NetworkIsolationKey } */
    this.networkIsolationKey;
    /** @type { (network_mojom_ResolveHostParameters|undefined) } */
    this.optionalParameters;
    /** @type { !network_mojom_ResolveHostClientRemote } */
    this.responseClient;
  }
}



mojo.internal.Struct(
    NetworkContext_CreateHostResolver_ParamsSpec.$,
    'NetworkContext_CreateHostResolver_Params',
    [
      mojo.internal.StructField(
        'configOverrides', 0,
        0,
        network_mojom_DnsConfigOverridesSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'hostResolver', 8,
        0,
        mojo.internal.InterfaceRequest(network_mojom_HostResolverPendingReceiver),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class NetworkContext_CreateHostResolver_Params {
  constructor() {
    /** @type { (network_mojom_DnsConfigOverrides|undefined) } */
    this.configOverrides;
    /** @type { !network_mojom_HostResolverPendingReceiver } */
    this.hostResolver;
  }
}



mojo.internal.Struct(
    NetworkContext_VerifyCertForSignedExchange_ParamsSpec.$,
    'NetworkContext_VerifyCertForSignedExchange_Params',
    [
      mojo.internal.StructField(
        'certificate', 0,
        0,
        network_mojom_X509CertificateSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'url', 8,
        0,
        url_mojom_UrlSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'networkIsolationKey', 16,
        0,
        network_mojom_NetworkIsolationKeySpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'ocspResponse', 24,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'sctList', 32,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 48],]);



/**
 * @record
 */
export class NetworkContext_VerifyCertForSignedExchange_Params {
  constructor() {
    /** @type { !network_mojom_X509Certificate } */
    this.certificate;
    /** @type { !url_mojom_Url } */
    this.url;
    /** @type { !network_mojom_NetworkIsolationKey } */
    this.networkIsolationKey;
    /** @type { !string } */
    this.ocspResponse;
    /** @type { !string } */
    this.sctList;
  }
}



mojo.internal.Struct(
    NetworkContext_VerifyCertForSignedExchange_ResponseParamsSpec.$,
    'NetworkContext_VerifyCertForSignedExchange_ResponseParams',
    [
      mojo.internal.StructField(
        'errorCode', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'cvResult', 8,
        0,
        network_mojom_CertVerifyResultSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'pkpBypassed', 4,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'pinningFailureLog', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class NetworkContext_VerifyCertForSignedExchange_ResponseParams {
  constructor() {
    /** @type { !number } */
    this.errorCode;
    /** @type { !boolean } */
    this.pkpBypassed;
    /** @type { !network_mojom_CertVerifyResult } */
    this.cvResult;
    /** @type { !string } */
    this.pinningFailureLog;
  }
}



mojo.internal.Struct(
    NetworkContext_AddHSTS_ParamsSpec.$,
    'NetworkContext_AddHSTS_Params',
    [
      mojo.internal.StructField(
        'host', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'expiry', 8,
        0,
        mojoBase_mojom_TimeSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'includeSubdomains', 16,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class NetworkContext_AddHSTS_Params {
  constructor() {
    /** @type { !string } */
    this.host;
    /** @type { !mojoBase_mojom_Time } */
    this.expiry;
    /** @type { !boolean } */
    this.includeSubdomains;
  }
}



mojo.internal.Struct(
    NetworkContext_AddHSTS_ResponseParamsSpec.$,
    'NetworkContext_AddHSTS_ResponseParams',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_AddHSTS_ResponseParams {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_IsHSTSActiveForHost_ParamsSpec.$,
    'NetworkContext_IsHSTSActiveForHost_Params',
    [
      mojo.internal.StructField(
        'host', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_IsHSTSActiveForHost_Params {
  constructor() {
    /** @type { !string } */
    this.host;
  }
}



mojo.internal.Struct(
    NetworkContext_IsHSTSActiveForHost_ResponseParamsSpec.$,
    'NetworkContext_IsHSTSActiveForHost_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_IsHSTSActiveForHost_ResponseParams {
  constructor() {
    /** @type { !boolean } */
    this.result;
  }
}



mojo.internal.Struct(
    NetworkContext_GetHSTSState_ParamsSpec.$,
    'NetworkContext_GetHSTSState_Params',
    [
      mojo.internal.StructField(
        'domain', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_GetHSTSState_Params {
  constructor() {
    /** @type { !string } */
    this.domain;
  }
}



mojo.internal.Struct(
    NetworkContext_GetHSTSState_ResponseParamsSpec.$,
    'NetworkContext_GetHSTSState_ResponseParams',
    [
      mojo.internal.StructField(
        'state', 0,
        0,
        mojoBase_mojom_DictionaryValueSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_GetHSTSState_ResponseParams {
  constructor() {
    /** @type { !mojoBase_mojom_DictionaryValue } */
    this.state;
  }
}



mojo.internal.Struct(
    NetworkContext_SetCorsOriginAccessListsForOrigin_ParamsSpec.$,
    'NetworkContext_SetCorsOriginAccessListsForOrigin_Params',
    [
      mojo.internal.StructField(
        'sourceOrigin', 0,
        0,
        url_mojom_OriginSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'allowPatterns', 8,
        0,
        mojo.internal.Array(network_mojom_CorsOriginPatternSpec.$, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'blockPatterns', 16,
        0,
        mojo.internal.Array(network_mojom_CorsOriginPatternSpec.$, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class NetworkContext_SetCorsOriginAccessListsForOrigin_Params {
  constructor() {
    /** @type { !url_mojom_Origin } */
    this.sourceOrigin;
    /** @type { !Array<!network_mojom_CorsOriginPattern> } */
    this.allowPatterns;
    /** @type { !Array<!network_mojom_CorsOriginPattern> } */
    this.blockPatterns;
  }
}



mojo.internal.Struct(
    NetworkContext_SetCorsOriginAccessListsForOrigin_ResponseParamsSpec.$,
    'NetworkContext_SetCorsOriginAccessListsForOrigin_ResponseParams',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_SetCorsOriginAccessListsForOrigin_ResponseParams {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_DeleteDynamicDataForHost_ParamsSpec.$,
    'NetworkContext_DeleteDynamicDataForHost_Params',
    [
      mojo.internal.StructField(
        'host', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_DeleteDynamicDataForHost_Params {
  constructor() {
    /** @type { !string } */
    this.host;
  }
}



mojo.internal.Struct(
    NetworkContext_DeleteDynamicDataForHost_ResponseParamsSpec.$,
    'NetworkContext_DeleteDynamicDataForHost_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_DeleteDynamicDataForHost_ResponseParams {
  constructor() {
    /** @type { !boolean } */
    this.result;
  }
}



mojo.internal.Struct(
    NetworkContext_SetSplitAuthCacheByNetworkIsolationKey_ParamsSpec.$,
    'NetworkContext_SetSplitAuthCacheByNetworkIsolationKey_Params',
    [
      mojo.internal.StructField(
        'splitAuthCacheByNetworkIsolationKey', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_SetSplitAuthCacheByNetworkIsolationKey_Params {
  constructor() {
    /** @type { !boolean } */
    this.splitAuthCacheByNetworkIsolationKey;
  }
}



mojo.internal.Struct(
    NetworkContext_SaveHttpAuthCacheProxyEntries_ParamsSpec.$,
    'NetworkContext_SaveHttpAuthCacheProxyEntries_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_SaveHttpAuthCacheProxyEntries_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_SaveHttpAuthCacheProxyEntries_ResponseParamsSpec.$,
    'NetworkContext_SaveHttpAuthCacheProxyEntries_ResponseParams',
    [
      mojo.internal.StructField(
        'cacheKey', 0,
        0,
        mojoBase_mojom_UnguessableTokenSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_SaveHttpAuthCacheProxyEntries_ResponseParams {
  constructor() {
    /** @type { !mojoBase_mojom_UnguessableToken } */
    this.cacheKey;
  }
}



mojo.internal.Struct(
    NetworkContext_LoadHttpAuthCacheProxyEntries_ParamsSpec.$,
    'NetworkContext_LoadHttpAuthCacheProxyEntries_Params',
    [
      mojo.internal.StructField(
        'cacheKey', 0,
        0,
        mojoBase_mojom_UnguessableTokenSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_LoadHttpAuthCacheProxyEntries_Params {
  constructor() {
    /** @type { !mojoBase_mojom_UnguessableToken } */
    this.cacheKey;
  }
}



mojo.internal.Struct(
    NetworkContext_LoadHttpAuthCacheProxyEntries_ResponseParamsSpec.$,
    'NetworkContext_LoadHttpAuthCacheProxyEntries_ResponseParams',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_LoadHttpAuthCacheProxyEntries_ResponseParams {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_AddAuthCacheEntry_ParamsSpec.$,
    'NetworkContext_AddAuthCacheEntry_Params',
    [
      mojo.internal.StructField(
        'challenge', 0,
        0,
        network_mojom_AuthChallengeInfoSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'networkIsolationKey', 8,
        0,
        network_mojom_NetworkIsolationKeySpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'credentials', 16,
        0,
        network_mojom_AuthCredentialsSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class NetworkContext_AddAuthCacheEntry_Params {
  constructor() {
    /** @type { !network_mojom_AuthChallengeInfo } */
    this.challenge;
    /** @type { !network_mojom_NetworkIsolationKey } */
    this.networkIsolationKey;
    /** @type { !network_mojom_AuthCredentials } */
    this.credentials;
  }
}



mojo.internal.Struct(
    NetworkContext_AddAuthCacheEntry_ResponseParamsSpec.$,
    'NetworkContext_AddAuthCacheEntry_ResponseParams',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_AddAuthCacheEntry_ResponseParams {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_SetCorsNonWildcardRequestHeadersSupport_ParamsSpec.$,
    'NetworkContext_SetCorsNonWildcardRequestHeadersSupport_Params',
    [
      mojo.internal.StructField(
        'value', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_SetCorsNonWildcardRequestHeadersSupport_Params {
  constructor() {
    /** @type { !boolean } */
    this.value;
  }
}



mojo.internal.Struct(
    NetworkContext_LookupServerBasicAuthCredentials_ParamsSpec.$,
    'NetworkContext_LookupServerBasicAuthCredentials_Params',
    [
      mojo.internal.StructField(
        'url', 0,
        0,
        url_mojom_UrlSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'networkIsolationKey', 8,
        0,
        network_mojom_NetworkIsolationKeySpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class NetworkContext_LookupServerBasicAuthCredentials_Params {
  constructor() {
    /** @type { !url_mojom_Url } */
    this.url;
    /** @type { !network_mojom_NetworkIsolationKey } */
    this.networkIsolationKey;
  }
}



mojo.internal.Struct(
    NetworkContext_LookupServerBasicAuthCredentials_ResponseParamsSpec.$,
    'NetworkContext_LookupServerBasicAuthCredentials_ResponseParams',
    [
      mojo.internal.StructField(
        'credentials', 0,
        0,
        network_mojom_AuthCredentialsSpec.$,
        null,
        true /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_LookupServerBasicAuthCredentials_ResponseParams {
  constructor() {
    /** @type { (network_mojom_AuthCredentials|undefined) } */
    this.credentials;
  }
}



mojo.internal.Struct(
    NetworkContext_EnableStaticKeyPinningForTesting_ParamsSpec.$,
    'NetworkContext_EnableStaticKeyPinningForTesting_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_EnableStaticKeyPinningForTesting_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_EnableStaticKeyPinningForTesting_ResponseParamsSpec.$,
    'NetworkContext_EnableStaticKeyPinningForTesting_ResponseParams',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_EnableStaticKeyPinningForTesting_ResponseParams {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_VerifyCertificateForTesting_ParamsSpec.$,
    'NetworkContext_VerifyCertificateForTesting_Params',
    [
      mojo.internal.StructField(
        'certificate', 0,
        0,
        network_mojom_X509CertificateSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'hostname', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'ocspResponse', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'sctList', 24,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 40],]);



/**
 * @record
 */
export class NetworkContext_VerifyCertificateForTesting_Params {
  constructor() {
    /** @type { !network_mojom_X509Certificate } */
    this.certificate;
    /** @type { !string } */
    this.hostname;
    /** @type { !string } */
    this.ocspResponse;
    /** @type { !string } */
    this.sctList;
  }
}



mojo.internal.Struct(
    NetworkContext_VerifyCertificateForTesting_ResponseParamsSpec.$,
    'NetworkContext_VerifyCertificateForTesting_ResponseParams',
    [
      mojo.internal.StructField(
        'errorCode', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_VerifyCertificateForTesting_ResponseParams {
  constructor() {
    /** @type { !number } */
    this.errorCode;
  }
}



mojo.internal.Struct(
    NetworkContext_AddDomainReliabilityContextForTesting_ParamsSpec.$,
    'NetworkContext_AddDomainReliabilityContextForTesting_Params',
    [
      mojo.internal.StructField(
        'origin', 0,
        0,
        url_mojom_OriginSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'uploadUrl', 8,
        0,
        url_mojom_UrlSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class NetworkContext_AddDomainReliabilityContextForTesting_Params {
  constructor() {
    /** @type { !url_mojom_Origin } */
    this.origin;
    /** @type { !url_mojom_Url } */
    this.uploadUrl;
  }
}



mojo.internal.Struct(
    NetworkContext_AddDomainReliabilityContextForTesting_ResponseParamsSpec.$,
    'NetworkContext_AddDomainReliabilityContextForTesting_ResponseParams',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_AddDomainReliabilityContextForTesting_ResponseParams {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_ForceDomainReliabilityUploadsForTesting_ParamsSpec.$,
    'NetworkContext_ForceDomainReliabilityUploadsForTesting_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_ForceDomainReliabilityUploadsForTesting_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_ForceDomainReliabilityUploadsForTesting_ResponseParamsSpec.$,
    'NetworkContext_ForceDomainReliabilityUploadsForTesting_ResponseParams',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_ForceDomainReliabilityUploadsForTesting_ResponseParams {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_SetCTLogListAlwaysTimelyForTesting_ParamsSpec.$,
    'NetworkContext_SetCTLogListAlwaysTimelyForTesting_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class NetworkContext_SetCTLogListAlwaysTimelyForTesting_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    NetworkContext_SetSCTAuditingMode_ParamsSpec.$,
    'NetworkContext_SetSCTAuditingMode_Params',
    [
      mojo.internal.StructField(
        'mode', 0,
        0,
        SCTAuditingModeSpec.$,
        0,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_SetSCTAuditingMode_Params {
  constructor() {
    /** @type { !SCTAuditingMode } */
    this.mode;
  }
}



mojo.internal.Struct(
    NetworkContext_AddReportingApiObserver_ParamsSpec.$,
    'NetworkContext_AddReportingApiObserver_Params',
    [
      mojo.internal.StructField(
        'observer', 0,
        0,
        mojo.internal.InterfaceProxy(network_mojom_ReportingApiObserverRemote),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class NetworkContext_AddReportingApiObserver_Params {
  constructor() {
    /** @type { !network_mojom_ReportingApiObserverRemote } */
    this.observer;
  }
}

