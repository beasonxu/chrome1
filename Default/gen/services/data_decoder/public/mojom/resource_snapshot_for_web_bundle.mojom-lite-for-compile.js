// services/data_decoder/public/mojom/resource_snapshot_for_web_bundle.mojom-lite-for-compile.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';

goog.require('mojo.internal');
goog.require('mojo.internal.interfaceSupport');

goog.require('url.mojom.Url');
goog.require('mojoBase.mojom.BigBuffer');






goog.provide('dataDecoder.mojom.ResourceSnapshotForWebBundle');
goog.provide('dataDecoder.mojom.ResourceSnapshotForWebBundleReceiver');
goog.provide('dataDecoder.mojom.ResourceSnapshotForWebBundleCallbackRouter');
goog.provide('dataDecoder.mojom.ResourceSnapshotForWebBundleInterface');
goog.provide('dataDecoder.mojom.ResourceSnapshotForWebBundleRemote');
goog.provide('dataDecoder.mojom.ResourceSnapshotForWebBundlePendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
dataDecoder.mojom.ResourceSnapshotForWebBundlePendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        dataDecoder.mojom.ResourceSnapshotForWebBundle.$interfaceName,
        scope);
  }
};

/** @interface */
dataDecoder.mojom.ResourceSnapshotForWebBundleInterface = class {
  
  /**
   * @return {!Promise<{
        count: !bigint,
   *  }>}
   */

  getResourceCount() {}
  
  /**
   * @param { !bigint } index
   * @return {!Promise<{
        info: ?dataDecoder.mojom.SerializedResourceInfo,
   *  }>}
   */

  getResourceInfo(index) {}
  
  /**
   * @param { !bigint } index
   * @return {!Promise<{
        data: ?mojoBase.mojom.BigBuffer,
   *  }>}
   */

  getResourceBody(index) {}
};

/**
 * @export
 * @implements { dataDecoder.mojom.ResourceSnapshotForWebBundleInterface }
 */
dataDecoder.mojom.ResourceSnapshotForWebBundleRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!dataDecoder.mojom.ResourceSnapshotForWebBundlePendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          dataDecoder.mojom.ResourceSnapshotForWebBundlePendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!dataDecoder.mojom.ResourceSnapshotForWebBundlePendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @return {!Promise<{
        count: !bigint,
   *  }>}
   */

  getResourceCount() {
    return this.proxy.sendMessage(
        0,
        dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceCount_ParamsSpec.$,
        dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceCount_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !bigint } index
   * @return {!Promise<{
        info: ?dataDecoder.mojom.SerializedResourceInfo,
   *  }>}
   */

  getResourceInfo(
      index) {
    return this.proxy.sendMessage(
        1,
        dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceInfo_ParamsSpec.$,
        dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceInfo_ResponseParamsSpec.$,
        [
          index
        ]);
  }

  
  /**
   * @param { !bigint } index
   * @return {!Promise<{
        data: ?mojoBase.mojom.BigBuffer,
   *  }>}
   */

  getResourceBody(
      index) {
    return this.proxy.sendMessage(
        2,
        dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceBody_ParamsSpec.$,
        dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceBody_ResponseParamsSpec.$,
        [
          index
        ]);
  }
};

/**
 * An object which receives request messages for the ResourceSnapshotForWebBundle
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
dataDecoder.mojom.ResourceSnapshotForWebBundleReceiver = class {
  /**
   * @param {!dataDecoder.mojom.ResourceSnapshotForWebBundleInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!dataDecoder.mojom.ResourceSnapshotForWebBundleRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        dataDecoder.mojom.ResourceSnapshotForWebBundleRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!dataDecoder.mojom.ResourceSnapshotForWebBundleRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceCount_ParamsSpec.$,
        dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceCount_ResponseParamsSpec.$,
        impl.getResourceCount.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceInfo_ParamsSpec.$,
        dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceInfo_ResponseParamsSpec.$,
        impl.getResourceInfo.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceBody_ParamsSpec.$,
        dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceBody_ResponseParamsSpec.$,
        impl.getResourceBody.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
dataDecoder.mojom.ResourceSnapshotForWebBundle = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "data_decoder.mojom.ResourceSnapshotForWebBundle";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!dataDecoder.mojom.ResourceSnapshotForWebBundleRemote}
   * @export
   */
  static getRemote() {
    let remote = new dataDecoder.mojom.ResourceSnapshotForWebBundleRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the ResourceSnapshotForWebBundle
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
dataDecoder.mojom.ResourceSnapshotForWebBundleCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      dataDecoder.mojom.ResourceSnapshotForWebBundleRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!dataDecoder.mojom.ResourceSnapshotForWebBundleRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getResourceCount =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceCount_ParamsSpec.$,
        dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceCount_ResponseParamsSpec.$,
        this.getResourceCount.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getResourceInfo =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceInfo_ParamsSpec.$,
        dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceInfo_ResponseParamsSpec.$,
        this.getResourceInfo.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getResourceBody =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceBody_ParamsSpec.$,
        dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceBody_ResponseParamsSpec.$,
        this.getResourceBody.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('dataDecoder.mojom.SerializedResourceInfoSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
dataDecoder.mojom.SerializedResourceInfoSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceCount_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceCount_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceCount_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceCount_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceInfo_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceInfo_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceInfo_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceInfo_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceBody_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceBody_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceBody_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceBody_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    dataDecoder.mojom.SerializedResourceInfoSpec.$,
    'SerializedResourceInfo',
    [
      mojo.internal.StructField(
        'url', 0,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'mimeType', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'size', 16,
        0,
        mojo.internal.Uint64,
        BigInt(0),
        false /* nullable */),
    ],
    [[0, 32],]);



goog.provide('dataDecoder.mojom.SerializedResourceInfo');

/** @record */
dataDecoder.mojom.SerializedResourceInfo = class {
  constructor() {
    /** @export { !url.mojom.Url } */
    this.url;
    /** @export { !string } */
    this.mimeType;
    /** @export { !bigint } */
    this.size;
  }
};




mojo.internal.Struct(
    dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceCount_ParamsSpec.$,
    'ResourceSnapshotForWebBundle_GetResourceCount_Params',
    [
    ],
    [[0, 8],]);



goog.provide('dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceCount_Params');

/** @record */
dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceCount_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceCount_ResponseParamsSpec.$,
    'ResourceSnapshotForWebBundle_GetResourceCount_ResponseParams',
    [
      mojo.internal.StructField(
        'count', 0,
        0,
        mojo.internal.Uint64,
        BigInt(0),
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceCount_ResponseParams');

/** @record */
dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceCount_ResponseParams = class {
  constructor() {
    /** @export { !bigint } */
    this.count;
  }
};




mojo.internal.Struct(
    dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceInfo_ParamsSpec.$,
    'ResourceSnapshotForWebBundle_GetResourceInfo_Params',
    [
      mojo.internal.StructField(
        'index', 0,
        0,
        mojo.internal.Uint64,
        BigInt(0),
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceInfo_Params');

/** @record */
dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceInfo_Params = class {
  constructor() {
    /** @export { !bigint } */
    this.index;
  }
};




mojo.internal.Struct(
    dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceInfo_ResponseParamsSpec.$,
    'ResourceSnapshotForWebBundle_GetResourceInfo_ResponseParams',
    [
      mojo.internal.StructField(
        'info', 0,
        0,
        dataDecoder.mojom.SerializedResourceInfoSpec.$,
        null,
        true /* nullable */),
    ],
    [[0, 16],]);



goog.provide('dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceInfo_ResponseParams');

/** @record */
dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceInfo_ResponseParams = class {
  constructor() {
    /** @export { (dataDecoder.mojom.SerializedResourceInfo|undefined) } */
    this.info;
  }
};




mojo.internal.Struct(
    dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceBody_ParamsSpec.$,
    'ResourceSnapshotForWebBundle_GetResourceBody_Params',
    [
      mojo.internal.StructField(
        'index', 0,
        0,
        mojo.internal.Uint64,
        BigInt(0),
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceBody_Params');

/** @record */
dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceBody_Params = class {
  constructor() {
    /** @export { !bigint } */
    this.index;
  }
};




mojo.internal.Struct(
    dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceBody_ResponseParamsSpec.$,
    'ResourceSnapshotForWebBundle_GetResourceBody_ResponseParams',
    [
      mojo.internal.StructField(
        'data', 0,
        0,
        mojoBase.mojom.BigBufferSpec.$,
        null,
        true /* nullable */),
    ],
    [[0, 24],]);



goog.provide('dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceBody_ResponseParams');

/** @record */
dataDecoder.mojom.ResourceSnapshotForWebBundle_GetResourceBody_ResponseParams = class {
  constructor() {
    /** @export { (mojoBase.mojom.BigBuffer|undefined) } */
    this.data;
  }
};


