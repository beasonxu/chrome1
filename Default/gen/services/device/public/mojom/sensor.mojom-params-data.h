// services/device/public/mojom/sensor.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SERVICES_DEVICE_PUBLIC_MOJOM_SENSOR_MOJOM_PARAMS_DATA_H_
#define SERVICES_DEVICE_PUBLIC_MOJOM_SENSOR_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace device {
namespace mojom {
namespace internal {

class ValidationContext;
class  Sensor_GetDefaultConfiguration_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<Sensor_GetDefaultConfiguration_Params_Data>;

  Sensor_GetDefaultConfiguration_Params_Data();
  ~Sensor_GetDefaultConfiguration_Params_Data() = delete;
};
static_assert(sizeof(Sensor_GetDefaultConfiguration_Params_Data) == 8,
              "Bad sizeof(Sensor_GetDefaultConfiguration_Params_Data)");
class  Sensor_GetDefaultConfiguration_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::SensorConfiguration_Data> configuration;

 private:
  friend class mojo::internal::MessageFragment<Sensor_GetDefaultConfiguration_ResponseParams_Data>;

  Sensor_GetDefaultConfiguration_ResponseParams_Data();
  ~Sensor_GetDefaultConfiguration_ResponseParams_Data() = delete;
};
static_assert(sizeof(Sensor_GetDefaultConfiguration_ResponseParams_Data) == 16,
              "Bad sizeof(Sensor_GetDefaultConfiguration_ResponseParams_Data)");
class  Sensor_AddConfiguration_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::SensorConfiguration_Data> configuration;

 private:
  friend class mojo::internal::MessageFragment<Sensor_AddConfiguration_Params_Data>;

  Sensor_AddConfiguration_Params_Data();
  ~Sensor_AddConfiguration_Params_Data() = delete;
};
static_assert(sizeof(Sensor_AddConfiguration_Params_Data) == 16,
              "Bad sizeof(Sensor_AddConfiguration_Params_Data)");
class  Sensor_AddConfiguration_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t success : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<Sensor_AddConfiguration_ResponseParams_Data>;

  Sensor_AddConfiguration_ResponseParams_Data();
  ~Sensor_AddConfiguration_ResponseParams_Data() = delete;
};
static_assert(sizeof(Sensor_AddConfiguration_ResponseParams_Data) == 16,
              "Bad sizeof(Sensor_AddConfiguration_ResponseParams_Data)");
class  Sensor_RemoveConfiguration_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::SensorConfiguration_Data> configuration;

 private:
  friend class mojo::internal::MessageFragment<Sensor_RemoveConfiguration_Params_Data>;

  Sensor_RemoveConfiguration_Params_Data();
  ~Sensor_RemoveConfiguration_Params_Data() = delete;
};
static_assert(sizeof(Sensor_RemoveConfiguration_Params_Data) == 16,
              "Bad sizeof(Sensor_RemoveConfiguration_Params_Data)");
class  Sensor_Suspend_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<Sensor_Suspend_Params_Data>;

  Sensor_Suspend_Params_Data();
  ~Sensor_Suspend_Params_Data() = delete;
};
static_assert(sizeof(Sensor_Suspend_Params_Data) == 8,
              "Bad sizeof(Sensor_Suspend_Params_Data)");
class  Sensor_Resume_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<Sensor_Resume_Params_Data>;

  Sensor_Resume_Params_Data();
  ~Sensor_Resume_Params_Data() = delete;
};
static_assert(sizeof(Sensor_Resume_Params_Data) == 8,
              "Bad sizeof(Sensor_Resume_Params_Data)");
class  Sensor_ConfigureReadingChangeNotifications_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t enabled : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<Sensor_ConfigureReadingChangeNotifications_Params_Data>;

  Sensor_ConfigureReadingChangeNotifications_Params_Data();
  ~Sensor_ConfigureReadingChangeNotifications_Params_Data() = delete;
};
static_assert(sizeof(Sensor_ConfigureReadingChangeNotifications_Params_Data) == 16,
              "Bad sizeof(Sensor_ConfigureReadingChangeNotifications_Params_Data)");
class  SensorClient_RaiseError_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<SensorClient_RaiseError_Params_Data>;

  SensorClient_RaiseError_Params_Data();
  ~SensorClient_RaiseError_Params_Data() = delete;
};
static_assert(sizeof(SensorClient_RaiseError_Params_Data) == 8,
              "Bad sizeof(SensorClient_RaiseError_Params_Data)");
class  SensorClient_SensorReadingChanged_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<SensorClient_SensorReadingChanged_Params_Data>;

  SensorClient_SensorReadingChanged_Params_Data();
  ~SensorClient_SensorReadingChanged_Params_Data() = delete;
};
static_assert(sizeof(SensorClient_SensorReadingChanged_Params_Data) == 8,
              "Bad sizeof(SensorClient_SensorReadingChanged_Params_Data)");

}  // namespace internal


class Sensor_GetDefaultConfiguration_ParamsDataView {
 public:
  Sensor_GetDefaultConfiguration_ParamsDataView() = default;

  Sensor_GetDefaultConfiguration_ParamsDataView(
      internal::Sensor_GetDefaultConfiguration_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::Sensor_GetDefaultConfiguration_Params_Data* data_ = nullptr;
};



class Sensor_GetDefaultConfiguration_ResponseParamsDataView {
 public:
  Sensor_GetDefaultConfiguration_ResponseParamsDataView() = default;

  Sensor_GetDefaultConfiguration_ResponseParamsDataView(
      internal::Sensor_GetDefaultConfiguration_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetConfigurationDataView(
      SensorConfigurationDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadConfiguration(UserType* output) {
    
    auto* pointer = data_->configuration.Get();
    return mojo::internal::Deserialize<::device::mojom::SensorConfigurationDataView>(
        pointer, output, message_);
  }
 private:
  internal::Sensor_GetDefaultConfiguration_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Sensor_AddConfiguration_ParamsDataView {
 public:
  Sensor_AddConfiguration_ParamsDataView() = default;

  Sensor_AddConfiguration_ParamsDataView(
      internal::Sensor_AddConfiguration_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetConfigurationDataView(
      SensorConfigurationDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadConfiguration(UserType* output) {
    
    auto* pointer = data_->configuration.Get();
    return mojo::internal::Deserialize<::device::mojom::SensorConfigurationDataView>(
        pointer, output, message_);
  }
 private:
  internal::Sensor_AddConfiguration_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Sensor_AddConfiguration_ResponseParamsDataView {
 public:
  Sensor_AddConfiguration_ResponseParamsDataView() = default;

  Sensor_AddConfiguration_ResponseParamsDataView(
      internal::Sensor_AddConfiguration_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool success() const {
    return data_->success;
  }
 private:
  internal::Sensor_AddConfiguration_ResponseParams_Data* data_ = nullptr;
};



class Sensor_RemoveConfiguration_ParamsDataView {
 public:
  Sensor_RemoveConfiguration_ParamsDataView() = default;

  Sensor_RemoveConfiguration_ParamsDataView(
      internal::Sensor_RemoveConfiguration_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetConfigurationDataView(
      SensorConfigurationDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadConfiguration(UserType* output) {
    
    auto* pointer = data_->configuration.Get();
    return mojo::internal::Deserialize<::device::mojom::SensorConfigurationDataView>(
        pointer, output, message_);
  }
 private:
  internal::Sensor_RemoveConfiguration_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Sensor_Suspend_ParamsDataView {
 public:
  Sensor_Suspend_ParamsDataView() = default;

  Sensor_Suspend_ParamsDataView(
      internal::Sensor_Suspend_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::Sensor_Suspend_Params_Data* data_ = nullptr;
};



class Sensor_Resume_ParamsDataView {
 public:
  Sensor_Resume_ParamsDataView() = default;

  Sensor_Resume_ParamsDataView(
      internal::Sensor_Resume_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::Sensor_Resume_Params_Data* data_ = nullptr;
};



class Sensor_ConfigureReadingChangeNotifications_ParamsDataView {
 public:
  Sensor_ConfigureReadingChangeNotifications_ParamsDataView() = default;

  Sensor_ConfigureReadingChangeNotifications_ParamsDataView(
      internal::Sensor_ConfigureReadingChangeNotifications_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool enabled() const {
    return data_->enabled;
  }
 private:
  internal::Sensor_ConfigureReadingChangeNotifications_Params_Data* data_ = nullptr;
};



class SensorClient_RaiseError_ParamsDataView {
 public:
  SensorClient_RaiseError_ParamsDataView() = default;

  SensorClient_RaiseError_ParamsDataView(
      internal::SensorClient_RaiseError_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::SensorClient_RaiseError_Params_Data* data_ = nullptr;
};



class SensorClient_SensorReadingChanged_ParamsDataView {
 public:
  SensorClient_SensorReadingChanged_ParamsDataView() = default;

  SensorClient_SensorReadingChanged_ParamsDataView(
      internal::SensorClient_SensorReadingChanged_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::SensorClient_SensorReadingChanged_Params_Data* data_ = nullptr;
};




inline void Sensor_GetDefaultConfiguration_ResponseParamsDataView::GetConfigurationDataView(
    SensorConfigurationDataView* output) {
  auto pointer = data_->configuration.Get();
  *output = SensorConfigurationDataView(pointer, message_);
}


inline void Sensor_AddConfiguration_ParamsDataView::GetConfigurationDataView(
    SensorConfigurationDataView* output) {
  auto pointer = data_->configuration.Get();
  *output = SensorConfigurationDataView(pointer, message_);
}




inline void Sensor_RemoveConfiguration_ParamsDataView::GetConfigurationDataView(
    SensorConfigurationDataView* output) {
  auto pointer = data_->configuration.Get();
  *output = SensorConfigurationDataView(pointer, message_);
}











}  // namespace mojom
}  // namespace device

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // SERVICES_DEVICE_PUBLIC_MOJOM_SENSOR_MOJOM_PARAMS_DATA_H_