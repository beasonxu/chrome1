// services/device/public/mojom/usb_device.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SERVICES_DEVICE_PUBLIC_MOJOM_USB_DEVICE_MOJOM_BLINK_FORWARD_H_
#define SERVICES_DEVICE_PUBLIC_MOJOM_USB_DEVICE_MOJOM_BLINK_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"
#include "third_party/blink/public/platform/web_common.h"




namespace device {
namespace mojom {

enum class UsbOpenDeviceError : int32_t;

enum class UsbClaimInterfaceResult : int32_t;

enum class UsbTransferDirection : int32_t;

enum class UsbControlTransferType : int32_t;

enum class UsbControlTransferRecipient : int32_t;

enum class UsbTransferType : int32_t;

enum class UsbSynchronizationType : int32_t;

enum class UsbUsageType : int32_t;

enum class UsbTransferStatus : int32_t;
class UsbDeviceInterfaceBase;
class UsbDeviceClientInterfaceBase;
}  // namespace device
}  // namespace mojom


namespace device {
namespace mojom {
namespace blink {
// Aliases for definition in the parent namespace.
using UsbOpenDeviceError = UsbOpenDeviceError;
using UsbClaimInterfaceResult = UsbClaimInterfaceResult;
using UsbTransferDirection = UsbTransferDirection;
using UsbControlTransferType = UsbControlTransferType;
using UsbControlTransferRecipient = UsbControlTransferRecipient;
using UsbTransferType = UsbTransferType;
using UsbSynchronizationType = UsbSynchronizationType;
using UsbUsageType = UsbUsageType;
using UsbTransferStatus = UsbTransferStatus;
using UsbDeviceInterfaceBase = UsbDeviceInterfaceBase;
using UsbDeviceClientInterfaceBase = UsbDeviceClientInterfaceBase;

constexpr uint8_t kUsbAudioClass = 0x01U;

constexpr uint8_t kUsbHidClass = 0x03U;

constexpr uint8_t kUsbMassStorageClass = 0x08U;

constexpr uint8_t kUsbSmartCardClass = 0x0BU;

constexpr uint8_t kUsbVideoClass = 0x0EU;

constexpr uint8_t kUsbAudioVideoClass = 0x10U;

constexpr uint8_t kUsbWirelessClass = 0xE0U;
class UsbEndpointInfo;
using UsbEndpointInfoPtr = mojo::StructPtr<UsbEndpointInfo>;

class UsbAlternateInterfaceInfo;
using UsbAlternateInterfaceInfoPtr = mojo::StructPtr<UsbAlternateInterfaceInfo>;

class UsbInterfaceInfo;
using UsbInterfaceInfoPtr = mojo::StructPtr<UsbInterfaceInfo>;

class UsbConfigurationInfo;
using UsbConfigurationInfoPtr = mojo::StructPtr<UsbConfigurationInfo>;

class UsbDeviceInfo;
using UsbDeviceInfoPtr = mojo::StructPtr<UsbDeviceInfo>;

class UsbControlTransferParams;
using UsbControlTransferParamsPtr = mojo::StructPtr<UsbControlTransferParams>;

class UsbIsochronousPacket;
using UsbIsochronousPacketPtr = mojo::InlinedStructPtr<UsbIsochronousPacket>;

class UsbDevice;

class UsbDeviceClient;




}  // namespace blink
}  // namespace mojom
}  // namespace device

#endif  // SERVICES_DEVICE_PUBLIC_MOJOM_USB_DEVICE_MOJOM_BLINK_FORWARD_H_