// services/device/public/mojom/pressure_manager.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SERVICES_DEVICE_PUBLIC_MOJOM_PRESSURE_MANAGER_MOJOM_TEST_UTILS_H_
#define SERVICES_DEVICE_PUBLIC_MOJOM_PRESSURE_MANAGER_MOJOM_TEST_UTILS_H_

#include "services/device/public/mojom/pressure_manager.mojom.h"


namespace device {
namespace mojom {


class  PressureManagerInterceptorForTesting : public PressureManager {
  virtual PressureManager* GetForwardingInterface() = 0;
  void AddClient(::mojo::PendingRemote<PressureClient> client, AddClientCallback callback) override;
};
class  PressureManagerAsyncWaiter {
 public:
  explicit PressureManagerAsyncWaiter(PressureManager* proxy);

  PressureManagerAsyncWaiter(const PressureManagerAsyncWaiter&) = delete;
  PressureManagerAsyncWaiter& operator=(const PressureManagerAsyncWaiter&) = delete;

  ~PressureManagerAsyncWaiter();
  void AddClient(
      ::mojo::PendingRemote<PressureClient> client, bool* out_success);

 private:
  PressureManager* const proxy_;
};


class  PressureClientInterceptorForTesting : public PressureClient {
  virtual PressureClient* GetForwardingInterface() = 0;
  void PressureStateChanged(::device::mojom::PressureStatePtr state, ::base::Time timestamp) override;
};
class  PressureClientAsyncWaiter {
 public:
  explicit PressureClientAsyncWaiter(PressureClient* proxy);

  PressureClientAsyncWaiter(const PressureClientAsyncWaiter&) = delete;
  PressureClientAsyncWaiter& operator=(const PressureClientAsyncWaiter&) = delete;

  ~PressureClientAsyncWaiter();

 private:
  PressureClient* const proxy_;
};




}  // namespace mojom
}  // namespace device

#endif  // SERVICES_DEVICE_PUBLIC_MOJOM_PRESSURE_MANAGER_MOJOM_TEST_UTILS_H_