// services/device/public/mojom/serial.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SERVICES_DEVICE_PUBLIC_MOJOM_SERIAL_MOJOM_BLINK_FORWARD_H_
#define SERVICES_DEVICE_PUBLIC_MOJOM_SERIAL_MOJOM_BLINK_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"




namespace device {
namespace mojom {

enum class SerialSendError : int32_t;

enum class SerialReceiveError : int32_t;

enum class SerialDataBits : int32_t;

enum class SerialParityBit : int32_t;

enum class SerialStopBits : int32_t;

enum class SerialPortFlushMode : int32_t;

enum class DeviceType : int32_t;
class SerialPortManagerInterfaceBase;
class SerialPortManagerClientInterfaceBase;
class SerialPortInterfaceBase;
class SerialPortClientInterfaceBase;
class SerialPortConnectionWatcherInterfaceBase;
}  // namespace device
}  // namespace mojom


namespace device {
namespace mojom {
namespace blink {
// Aliases for definition in the parent namespace.
using SerialSendError = SerialSendError;
using SerialReceiveError = SerialReceiveError;
using SerialDataBits = SerialDataBits;
using SerialParityBit = SerialParityBit;
using SerialStopBits = SerialStopBits;
using SerialPortFlushMode = SerialPortFlushMode;
using DeviceType = DeviceType;
using SerialPortManagerInterfaceBase = SerialPortManagerInterfaceBase;
using SerialPortManagerClientInterfaceBase = SerialPortManagerClientInterfaceBase;
using SerialPortInterfaceBase = SerialPortInterfaceBase;
using SerialPortClientInterfaceBase = SerialPortClientInterfaceBase;
using SerialPortConnectionWatcherInterfaceBase = SerialPortConnectionWatcherInterfaceBase;
class SerialPortInfo;
using SerialPortInfoPtr = mojo::StructPtr<SerialPortInfo>;

class SerialConnectionOptions;
using SerialConnectionOptionsPtr = mojo::StructPtr<SerialConnectionOptions>;

class SerialConnectionInfo;
using SerialConnectionInfoPtr = mojo::StructPtr<SerialConnectionInfo>;

class SerialHostControlSignals;
using SerialHostControlSignalsPtr = mojo::StructPtr<SerialHostControlSignals>;

class SerialPortControlSignals;
using SerialPortControlSignalsPtr = mojo::InlinedStructPtr<SerialPortControlSignals>;

class SerialPortManager;

class SerialPortManagerClient;

class SerialPort;

class SerialPortClient;

class SerialPortConnectionWatcher;




}  // namespace blink
}  // namespace mojom
}  // namespace device

#endif  // SERVICES_DEVICE_PUBLIC_MOJOM_SERIAL_MOJOM_BLINK_FORWARD_H_