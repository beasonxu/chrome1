// device/bluetooth/public/mojom/device.mojom.m.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import {mojo} from '../../../../mojo/public/js/bindings.js';

import {
  UUID as bluetooth_mojom_UUID,
  UUIDSpec as bluetooth_mojom_UUIDSpec
} from './uuid.mojom.m.js';


/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const PropertySpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 */
export const Property = {
  
  NONE: 0,
  BROADCAST: 1,
  READ: 2,
  WRITE_WITHOUT_RESPONSE: 4,
  WRITE: 8,
  NOTIFY: 16,
  INDICATE: 32,
  AUTHENTICATED_SIGNED_WRITES: 64,
  EXTENDED_PROPERTIES: 128,
  RELIABLE_WRITE: 256,
  WRITABLE_AUXILIARIES: 512,
  READ_ENCRYPTED: 1024,
  WRITE_ENCRYPTED: 2048,
  READ_ENCRYPTED_AUTHENTICATED: 4096,
  WRITE_ENCRYPTED_AUTHENTICATED: 8192,
  MIN_VALUE: 0,
  MAX_VALUE: 8192,
};

/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const GattResultSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 */
export const GattResult = {
  
  SUCCESS: 0,
  UNKNOWN: 1,
  FAILED: 2,
  IN_PROGRESS: 3,
  INVALID_LENGTH: 4,
  NOT_PERMITTED: 5,
  NOT_AUTHORIZED: 6,
  NOT_PAIRED: 7,
  NOT_SUPPORTED: 8,
  SERVICE_NOT_FOUND: 9,
  CHARACTERISTIC_NOT_FOUND: 10,
  DESCRIPTOR_NOT_FOUND: 11,
  MIN_VALUE: 0,
  MAX_VALUE: 11,
};



/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export class DevicePendingReceiver {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle, 'bluetooth.mojom.Device', scope);
  }
}

/** @interface */
export class DeviceInterface {
  
  /**
   */

  disconnect() {}
  
  /**
   * @return {!Promise<{
        info: ?DeviceInfo,
   *  }>}
   */

  getInfo() {}
  
  /**
   * @return {!Promise<{
        services: !Array<!ServiceInfo>,
   *  }>}
   */

  getServices() {}
  
  /**
   * @param { !string } serviceId
   * @return {!Promise<{
        characteristics: ?Array<!CharacteristicInfo>,
   *  }>}
   */

  getCharacteristics(serviceId) {}
  
  /**
   * @param { !string } serviceId
   * @param { !string } characteristicId
   * @return {!Promise<{
        result: !GattResult,
        value: ?Array<!number>,
   *  }>}
   */

  readValueForCharacteristic(serviceId, characteristicId) {}
  
  /**
   * @param { !string } serviceId
   * @param { !string } characteristicId
   * @param { !Array<!number> } value
   * @return {!Promise<{
        result: !GattResult,
   *  }>}
   */

  writeValueForCharacteristic(serviceId, characteristicId, value) {}
  
  /**
   * @param { !string } serviceId
   * @param { !string } characteristicId
   * @return {!Promise<{
        descriptors: ?Array<!DescriptorInfo>,
   *  }>}
   */

  getDescriptors(serviceId, characteristicId) {}
  
  /**
   * @param { !string } serviceId
   * @param { !string } characteristicId
   * @param { !string } descriptorId
   * @return {!Promise<{
        result: !GattResult,
        value: ?Array<!number>,
   *  }>}
   */

  readValueForDescriptor(serviceId, characteristicId, descriptorId) {}
  
  /**
   * @param { !string } serviceId
   * @param { !string } characteristicId
   * @param { !string } descriptorId
   * @param { !Array<!number> } value
   * @return {!Promise<{
        result: !GattResult,
   *  }>}
   */

  writeValueForDescriptor(serviceId, characteristicId, descriptorId, value) {}
}

/**
 * @implements { DeviceInterface }
 */
export class DeviceRemote {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!DevicePendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          DevicePendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!DevicePendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   */

  disconnect() {
    this.proxy.sendMessage(
        0,
        Device_Disconnect_ParamsSpec.$,
        null,
        [
        ]);
  }

  
  /**
   * @return {!Promise<{
        info: ?DeviceInfo,
   *  }>}
   */

  getInfo() {
    return this.proxy.sendMessage(
        1,
        Device_GetInfo_ParamsSpec.$,
        Device_GetInfo_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @return {!Promise<{
        services: !Array<!ServiceInfo>,
   *  }>}
   */

  getServices() {
    return this.proxy.sendMessage(
        2,
        Device_GetServices_ParamsSpec.$,
        Device_GetServices_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !string } serviceId
   * @return {!Promise<{
        characteristics: ?Array<!CharacteristicInfo>,
   *  }>}
   */

  getCharacteristics(
      serviceId) {
    return this.proxy.sendMessage(
        3,
        Device_GetCharacteristics_ParamsSpec.$,
        Device_GetCharacteristics_ResponseParamsSpec.$,
        [
          serviceId
        ]);
  }

  
  /**
   * @param { !string } serviceId
   * @param { !string } characteristicId
   * @return {!Promise<{
        result: !GattResult,
        value: ?Array<!number>,
   *  }>}
   */

  readValueForCharacteristic(
      serviceId,
      characteristicId) {
    return this.proxy.sendMessage(
        4,
        Device_ReadValueForCharacteristic_ParamsSpec.$,
        Device_ReadValueForCharacteristic_ResponseParamsSpec.$,
        [
          serviceId,
          characteristicId
        ]);
  }

  
  /**
   * @param { !string } serviceId
   * @param { !string } characteristicId
   * @param { !Array<!number> } value
   * @return {!Promise<{
        result: !GattResult,
   *  }>}
   */

  writeValueForCharacteristic(
      serviceId,
      characteristicId,
      value) {
    return this.proxy.sendMessage(
        5,
        Device_WriteValueForCharacteristic_ParamsSpec.$,
        Device_WriteValueForCharacteristic_ResponseParamsSpec.$,
        [
          serviceId,
          characteristicId,
          value
        ]);
  }

  
  /**
   * @param { !string } serviceId
   * @param { !string } characteristicId
   * @return {!Promise<{
        descriptors: ?Array<!DescriptorInfo>,
   *  }>}
   */

  getDescriptors(
      serviceId,
      characteristicId) {
    return this.proxy.sendMessage(
        6,
        Device_GetDescriptors_ParamsSpec.$,
        Device_GetDescriptors_ResponseParamsSpec.$,
        [
          serviceId,
          characteristicId
        ]);
  }

  
  /**
   * @param { !string } serviceId
   * @param { !string } characteristicId
   * @param { !string } descriptorId
   * @return {!Promise<{
        result: !GattResult,
        value: ?Array<!number>,
   *  }>}
   */

  readValueForDescriptor(
      serviceId,
      characteristicId,
      descriptorId) {
    return this.proxy.sendMessage(
        7,
        Device_ReadValueForDescriptor_ParamsSpec.$,
        Device_ReadValueForDescriptor_ResponseParamsSpec.$,
        [
          serviceId,
          characteristicId,
          descriptorId
        ]);
  }

  
  /**
   * @param { !string } serviceId
   * @param { !string } characteristicId
   * @param { !string } descriptorId
   * @param { !Array<!number> } value
   * @return {!Promise<{
        result: !GattResult,
   *  }>}
   */

  writeValueForDescriptor(
      serviceId,
      characteristicId,
      descriptorId,
      value) {
    return this.proxy.sendMessage(
        8,
        Device_WriteValueForDescriptor_ParamsSpec.$,
        Device_WriteValueForDescriptor_ResponseParamsSpec.$,
        [
          serviceId,
          characteristicId,
          descriptorId,
          value
        ]);
  }
}

/**
 * An object which receives request messages for the Device
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class DeviceReceiver {
  /**
   * @param {!DeviceInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!DeviceRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        DeviceRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!DeviceRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        Device_Disconnect_ParamsSpec.$,
        null,
        impl.disconnect.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        Device_GetInfo_ParamsSpec.$,
        Device_GetInfo_ResponseParamsSpec.$,
        impl.getInfo.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        Device_GetServices_ParamsSpec.$,
        Device_GetServices_ResponseParamsSpec.$,
        impl.getServices.bind(impl));
    this.helper_internal_.registerHandler(
        3,
        Device_GetCharacteristics_ParamsSpec.$,
        Device_GetCharacteristics_ResponseParamsSpec.$,
        impl.getCharacteristics.bind(impl));
    this.helper_internal_.registerHandler(
        4,
        Device_ReadValueForCharacteristic_ParamsSpec.$,
        Device_ReadValueForCharacteristic_ResponseParamsSpec.$,
        impl.readValueForCharacteristic.bind(impl));
    this.helper_internal_.registerHandler(
        5,
        Device_WriteValueForCharacteristic_ParamsSpec.$,
        Device_WriteValueForCharacteristic_ResponseParamsSpec.$,
        impl.writeValueForCharacteristic.bind(impl));
    this.helper_internal_.registerHandler(
        6,
        Device_GetDescriptors_ParamsSpec.$,
        Device_GetDescriptors_ResponseParamsSpec.$,
        impl.getDescriptors.bind(impl));
    this.helper_internal_.registerHandler(
        7,
        Device_ReadValueForDescriptor_ParamsSpec.$,
        Device_ReadValueForDescriptor_ResponseParamsSpec.$,
        impl.readValueForDescriptor.bind(impl));
    this.helper_internal_.registerHandler(
        8,
        Device_WriteValueForDescriptor_ParamsSpec.$,
        Device_WriteValueForDescriptor_ResponseParamsSpec.$,
        impl.writeValueForDescriptor.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
}

export class Device {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "bluetooth.mojom.Device";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!DeviceRemote}
   */
  static getRemote() {
    let remote = new DeviceRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
}


/**
 * An object which receives request messages for the Device
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class DeviceCallbackRouter {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      DeviceRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!DeviceRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.disconnect =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        Device_Disconnect_ParamsSpec.$,
        null,
        this.disconnect.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getInfo =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        Device_GetInfo_ParamsSpec.$,
        Device_GetInfo_ResponseParamsSpec.$,
        this.getInfo.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getServices =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        Device_GetServices_ParamsSpec.$,
        Device_GetServices_ResponseParamsSpec.$,
        this.getServices.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getCharacteristics =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        3,
        Device_GetCharacteristics_ParamsSpec.$,
        Device_GetCharacteristics_ResponseParamsSpec.$,
        this.getCharacteristics.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.readValueForCharacteristic =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        4,
        Device_ReadValueForCharacteristic_ParamsSpec.$,
        Device_ReadValueForCharacteristic_ResponseParamsSpec.$,
        this.readValueForCharacteristic.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.writeValueForCharacteristic =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        5,
        Device_WriteValueForCharacteristic_ParamsSpec.$,
        Device_WriteValueForCharacteristic_ResponseParamsSpec.$,
        this.writeValueForCharacteristic.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getDescriptors =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        6,
        Device_GetDescriptors_ParamsSpec.$,
        Device_GetDescriptors_ResponseParamsSpec.$,
        this.getDescriptors.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.readValueForDescriptor =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        7,
        Device_ReadValueForDescriptor_ParamsSpec.$,
        Device_ReadValueForDescriptor_ResponseParamsSpec.$,
        this.readValueForDescriptor.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.writeValueForDescriptor =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        8,
        Device_WriteValueForDescriptor_ParamsSpec.$,
        Device_WriteValueForDescriptor_ResponseParamsSpec.$,
        this.writeValueForDescriptor.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
}

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const RSSIWrapperSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const DeviceInfoSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const ServiceInfoSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const CharacteristicInfoSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const DescriptorInfoSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Device_Disconnect_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Device_GetInfo_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Device_GetInfo_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Device_GetServices_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Device_GetServices_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Device_GetCharacteristics_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Device_GetCharacteristics_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Device_ReadValueForCharacteristic_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Device_ReadValueForCharacteristic_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Device_WriteValueForCharacteristic_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Device_WriteValueForCharacteristic_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Device_GetDescriptors_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Device_GetDescriptors_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Device_ReadValueForDescriptor_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Device_ReadValueForDescriptor_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Device_WriteValueForDescriptor_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Device_WriteValueForDescriptor_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    RSSIWrapperSpec.$,
    'RSSIWrapper',
    [
      mojo.internal.StructField(
        'value', 0,
        0,
        mojo.internal.Int8,
        0,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class RSSIWrapper {
  constructor() {
    /** @type { !number } */
    this.value;
  }
}



mojo.internal.Struct(
    DeviceInfoSpec.$,
    'DeviceInfo',
    [
      mojo.internal.StructField(
        'name', 0,
        0,
        mojo.internal.String,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'nameForDisplay', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'address', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'isGattConnected', 24,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'rssi', 32,
        0,
        RSSIWrapperSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'serviceUuids', 40,
        0,
        mojo.internal.Array(bluetooth_mojom_UUIDSpec.$, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'manufacturerDataMap', 48,
        0,
        mojo.internal.Map(mojo.internal.Uint16, mojo.internal.Array(mojo.internal.Uint8, false), false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'serviceDataMap', 56,
        0,
        mojo.internal.Map(bluetooth_mojom_UUIDSpec.$, mojo.internal.Array(mojo.internal.Uint8, false), false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 72],]);



/**
 * @record
 */
export class DeviceInfo {
  constructor() {
    /** @type { (string|undefined) } */
    this.name;
    /** @type { !string } */
    this.nameForDisplay;
    /** @type { !string } */
    this.address;
    /** @type { !boolean } */
    this.isGattConnected;
    /** @type { (RSSIWrapper|undefined) } */
    this.rssi;
    /** @type { !Array<!bluetooth_mojom_UUID> } */
    this.serviceUuids;
    /** @type { !Object<!number, !Array<!number>> } */
    this.manufacturerDataMap;
    /** @type { !Map<!bluetooth_mojom_UUID, !Array<!number>> } */
    this.serviceDataMap;
  }
}



mojo.internal.Struct(
    ServiceInfoSpec.$,
    'ServiceInfo',
    [
      mojo.internal.StructField(
        'id', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'uuid', 8,
        0,
        bluetooth_mojom_UUIDSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'isPrimary', 16,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class ServiceInfo {
  constructor() {
    /** @type { !string } */
    this.id;
    /** @type { !bluetooth_mojom_UUID } */
    this.uuid;
    /** @type { !boolean } */
    this.isPrimary;
  }
}



mojo.internal.Struct(
    CharacteristicInfoSpec.$,
    'CharacteristicInfo',
    [
      mojo.internal.StructField(
        'id', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'uuid', 8,
        0,
        bluetooth_mojom_UUIDSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'properties', 16,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'lastKnownValue', 24,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 40],]);



/**
 * @record
 */
export class CharacteristicInfo {
  constructor() {
    /** @type { !string } */
    this.id;
    /** @type { !bluetooth_mojom_UUID } */
    this.uuid;
    /** @type { !number } */
    this.properties;
    /** @type { !Array<!number> } */
    this.lastKnownValue;
  }
}



mojo.internal.Struct(
    DescriptorInfoSpec.$,
    'DescriptorInfo',
    [
      mojo.internal.StructField(
        'id', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'uuid', 8,
        0,
        bluetooth_mojom_UUIDSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'lastKnownValue', 16,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class DescriptorInfo {
  constructor() {
    /** @type { !string } */
    this.id;
    /** @type { !bluetooth_mojom_UUID } */
    this.uuid;
    /** @type { !Array<!number> } */
    this.lastKnownValue;
  }
}



mojo.internal.Struct(
    Device_Disconnect_ParamsSpec.$,
    'Device_Disconnect_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class Device_Disconnect_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    Device_GetInfo_ParamsSpec.$,
    'Device_GetInfo_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class Device_GetInfo_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    Device_GetInfo_ResponseParamsSpec.$,
    'Device_GetInfo_ResponseParams',
    [
      mojo.internal.StructField(
        'info', 0,
        0,
        DeviceInfoSpec.$,
        null,
        true /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class Device_GetInfo_ResponseParams {
  constructor() {
    /** @type { (DeviceInfo|undefined) } */
    this.info;
  }
}



mojo.internal.Struct(
    Device_GetServices_ParamsSpec.$,
    'Device_GetServices_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class Device_GetServices_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    Device_GetServices_ResponseParamsSpec.$,
    'Device_GetServices_ResponseParams',
    [
      mojo.internal.StructField(
        'services', 0,
        0,
        mojo.internal.Array(ServiceInfoSpec.$, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class Device_GetServices_ResponseParams {
  constructor() {
    /** @type { !Array<!ServiceInfo> } */
    this.services;
  }
}



mojo.internal.Struct(
    Device_GetCharacteristics_ParamsSpec.$,
    'Device_GetCharacteristics_Params',
    [
      mojo.internal.StructField(
        'serviceId', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class Device_GetCharacteristics_Params {
  constructor() {
    /** @type { !string } */
    this.serviceId;
  }
}



mojo.internal.Struct(
    Device_GetCharacteristics_ResponseParamsSpec.$,
    'Device_GetCharacteristics_ResponseParams',
    [
      mojo.internal.StructField(
        'characteristics', 0,
        0,
        mojo.internal.Array(CharacteristicInfoSpec.$, false),
        null,
        true /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class Device_GetCharacteristics_ResponseParams {
  constructor() {
    /** @type { (Array<!CharacteristicInfo>|undefined) } */
    this.characteristics;
  }
}



mojo.internal.Struct(
    Device_ReadValueForCharacteristic_ParamsSpec.$,
    'Device_ReadValueForCharacteristic_Params',
    [
      mojo.internal.StructField(
        'serviceId', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'characteristicId', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class Device_ReadValueForCharacteristic_Params {
  constructor() {
    /** @type { !string } */
    this.serviceId;
    /** @type { !string } */
    this.characteristicId;
  }
}



mojo.internal.Struct(
    Device_ReadValueForCharacteristic_ResponseParamsSpec.$,
    'Device_ReadValueForCharacteristic_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        GattResultSpec.$,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'value', 8,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        true /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class Device_ReadValueForCharacteristic_ResponseParams {
  constructor() {
    /** @type { !GattResult } */
    this.result;
    /** @type { (Array<!number>|undefined) } */
    this.value;
  }
}



mojo.internal.Struct(
    Device_WriteValueForCharacteristic_ParamsSpec.$,
    'Device_WriteValueForCharacteristic_Params',
    [
      mojo.internal.StructField(
        'serviceId', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'characteristicId', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'value', 16,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class Device_WriteValueForCharacteristic_Params {
  constructor() {
    /** @type { !string } */
    this.serviceId;
    /** @type { !string } */
    this.characteristicId;
    /** @type { !Array<!number> } */
    this.value;
  }
}



mojo.internal.Struct(
    Device_WriteValueForCharacteristic_ResponseParamsSpec.$,
    'Device_WriteValueForCharacteristic_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        GattResultSpec.$,
        0,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class Device_WriteValueForCharacteristic_ResponseParams {
  constructor() {
    /** @type { !GattResult } */
    this.result;
  }
}



mojo.internal.Struct(
    Device_GetDescriptors_ParamsSpec.$,
    'Device_GetDescriptors_Params',
    [
      mojo.internal.StructField(
        'serviceId', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'characteristicId', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class Device_GetDescriptors_Params {
  constructor() {
    /** @type { !string } */
    this.serviceId;
    /** @type { !string } */
    this.characteristicId;
  }
}



mojo.internal.Struct(
    Device_GetDescriptors_ResponseParamsSpec.$,
    'Device_GetDescriptors_ResponseParams',
    [
      mojo.internal.StructField(
        'descriptors', 0,
        0,
        mojo.internal.Array(DescriptorInfoSpec.$, false),
        null,
        true /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class Device_GetDescriptors_ResponseParams {
  constructor() {
    /** @type { (Array<!DescriptorInfo>|undefined) } */
    this.descriptors;
  }
}



mojo.internal.Struct(
    Device_ReadValueForDescriptor_ParamsSpec.$,
    'Device_ReadValueForDescriptor_Params',
    [
      mojo.internal.StructField(
        'serviceId', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'characteristicId', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'descriptorId', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class Device_ReadValueForDescriptor_Params {
  constructor() {
    /** @type { !string } */
    this.serviceId;
    /** @type { !string } */
    this.characteristicId;
    /** @type { !string } */
    this.descriptorId;
  }
}



mojo.internal.Struct(
    Device_ReadValueForDescriptor_ResponseParamsSpec.$,
    'Device_ReadValueForDescriptor_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        GattResultSpec.$,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'value', 8,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        true /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class Device_ReadValueForDescriptor_ResponseParams {
  constructor() {
    /** @type { !GattResult } */
    this.result;
    /** @type { (Array<!number>|undefined) } */
    this.value;
  }
}



mojo.internal.Struct(
    Device_WriteValueForDescriptor_ParamsSpec.$,
    'Device_WriteValueForDescriptor_Params',
    [
      mojo.internal.StructField(
        'serviceId', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'characteristicId', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'descriptorId', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'value', 24,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 40],]);



/**
 * @record
 */
export class Device_WriteValueForDescriptor_Params {
  constructor() {
    /** @type { !string } */
    this.serviceId;
    /** @type { !string } */
    this.characteristicId;
    /** @type { !string } */
    this.descriptorId;
    /** @type { !Array<!number> } */
    this.value;
  }
}



mojo.internal.Struct(
    Device_WriteValueForDescriptor_ResponseParamsSpec.$,
    'Device_WriteValueForDescriptor_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        GattResultSpec.$,
        0,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class Device_WriteValueForDescriptor_ResponseParams {
  constructor() {
    /** @type { !GattResult } */
    this.result;
  }
}

