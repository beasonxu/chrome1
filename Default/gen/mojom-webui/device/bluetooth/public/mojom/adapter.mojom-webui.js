// mojom-webui/device/bluetooth/public/mojom/adapter.mojom-webui.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import {mojo} from '//resources/mojo/mojo/public/js/bindings.js';

import {
  DeviceRemote as bluetooth_mojom_DeviceRemote,
  DevicePendingReceiver as bluetooth_mojom_DevicePendingReceiver,
  DeviceInfo as bluetooth_mojom_DeviceInfo,
  DeviceInfoSpec as bluetooth_mojom_DeviceInfoSpec
} from './device.mojom-webui.js';

import {
  UUID as bluetooth_mojom_UUID,
  UUIDSpec as bluetooth_mojom_UUIDSpec
} from './uuid.mojom-webui.js';


/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const ConnectResultSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 */
export const ConnectResult = {
  
  SUCCESS: 0,
  AUTH_CANCELED: 1,
  AUTH_FAILED: 2,
  AUTH_REJECTED: 3,
  AUTH_TIMEOUT: 4,
  FAILED: 5,
  INPROGRESS: 6,
  UNKNOWN: 7,
  UNSUPPORTED_DEVICE: 8,
  DEVICE_NO_LONGER_IN_RANGE: 9,
  MIN_VALUE: 0,
  MAX_VALUE: 9,
};



/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export class AdvertisementPendingReceiver {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle, 'bluetooth.mojom.Advertisement', scope);
  }
}

/** @interface */
export class AdvertisementInterface {
  
  /**
   * @return {!Promise}
   */

  unregister() {}
}

/**
 * @implements { AdvertisementInterface }
 */
export class AdvertisementRemote {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!AdvertisementPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          AdvertisementPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!AdvertisementPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @return {!Promise}
   */

  unregister() {
    return this.proxy.sendMessage(
        0,
        Advertisement_Unregister_ParamsSpec.$,
        Advertisement_Unregister_ResponseParamsSpec.$,
        [
        ]);
  }
}

/**
 * An object which receives request messages for the Advertisement
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class AdvertisementReceiver {
  /**
   * @param {!AdvertisementInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!AdvertisementRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        AdvertisementRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!AdvertisementRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        Advertisement_Unregister_ParamsSpec.$,
        Advertisement_Unregister_ResponseParamsSpec.$,
        impl.unregister.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
}

export class Advertisement {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "bluetooth.mojom.Advertisement";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!AdvertisementRemote}
   */
  static getRemote() {
    let remote = new AdvertisementRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
}


/**
 * An object which receives request messages for the Advertisement
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class AdvertisementCallbackRouter {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      AdvertisementRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!AdvertisementRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.unregister =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        Advertisement_Unregister_ParamsSpec.$,
        Advertisement_Unregister_ResponseParamsSpec.$,
        this.unregister.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
}


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export class DiscoverySessionPendingReceiver {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle, 'bluetooth.mojom.DiscoverySession', scope);
  }
}

/** @interface */
export class DiscoverySessionInterface {
  
  /**
   * @return {!Promise<{
        active: !boolean,
   *  }>}
   */

  isActive() {}
  
  /**
   * @return {!Promise<{
        success: !boolean,
   *  }>}
   */

  stop() {}
}

/**
 * @implements { DiscoverySessionInterface }
 */
export class DiscoverySessionRemote {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!DiscoverySessionPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          DiscoverySessionPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!DiscoverySessionPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @return {!Promise<{
        active: !boolean,
   *  }>}
   */

  isActive() {
    return this.proxy.sendMessage(
        0,
        DiscoverySession_IsActive_ParamsSpec.$,
        DiscoverySession_IsActive_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @return {!Promise<{
        success: !boolean,
   *  }>}
   */

  stop() {
    return this.proxy.sendMessage(
        1,
        DiscoverySession_Stop_ParamsSpec.$,
        DiscoverySession_Stop_ResponseParamsSpec.$,
        [
        ]);
  }
}

/**
 * An object which receives request messages for the DiscoverySession
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class DiscoverySessionReceiver {
  /**
   * @param {!DiscoverySessionInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!DiscoverySessionRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        DiscoverySessionRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!DiscoverySessionRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        DiscoverySession_IsActive_ParamsSpec.$,
        DiscoverySession_IsActive_ResponseParamsSpec.$,
        impl.isActive.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        DiscoverySession_Stop_ParamsSpec.$,
        DiscoverySession_Stop_ResponseParamsSpec.$,
        impl.stop.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
}

export class DiscoverySession {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "bluetooth.mojom.DiscoverySession";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!DiscoverySessionRemote}
   */
  static getRemote() {
    let remote = new DiscoverySessionRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
}


/**
 * An object which receives request messages for the DiscoverySession
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class DiscoverySessionCallbackRouter {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      DiscoverySessionRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!DiscoverySessionRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.isActive =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        DiscoverySession_IsActive_ParamsSpec.$,
        DiscoverySession_IsActive_ResponseParamsSpec.$,
        this.isActive.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.stop =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        DiscoverySession_Stop_ParamsSpec.$,
        DiscoverySession_Stop_ResponseParamsSpec.$,
        this.stop.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
}


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export class SocketPendingReceiver {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle, 'bluetooth.mojom.Socket', scope);
  }
}

/** @interface */
export class SocketInterface {
  
  /**
   * @return {!Promise}
   */

  disconnect() {}
}

/**
 * @implements { SocketInterface }
 */
export class SocketRemote {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!SocketPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          SocketPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!SocketPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @return {!Promise}
   */

  disconnect() {
    return this.proxy.sendMessage(
        0,
        Socket_Disconnect_ParamsSpec.$,
        Socket_Disconnect_ResponseParamsSpec.$,
        [
        ]);
  }
}

/**
 * An object which receives request messages for the Socket
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class SocketReceiver {
  /**
   * @param {!SocketInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!SocketRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        SocketRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!SocketRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        Socket_Disconnect_ParamsSpec.$,
        Socket_Disconnect_ResponseParamsSpec.$,
        impl.disconnect.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
}

export class Socket {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "bluetooth.mojom.Socket";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!SocketRemote}
   */
  static getRemote() {
    let remote = new SocketRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
}


/**
 * An object which receives request messages for the Socket
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class SocketCallbackRouter {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      SocketRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!SocketRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.disconnect =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        Socket_Disconnect_ParamsSpec.$,
        Socket_Disconnect_ResponseParamsSpec.$,
        this.disconnect.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
}


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export class ServerSocketPendingReceiver {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle, 'bluetooth.mojom.ServerSocket', scope);
  }
}

/** @interface */
export class ServerSocketInterface {
  
  /**
   * @return {!Promise<{
        result: ?AcceptConnectionResult,
   *  }>}
   */

  accept() {}
  
  /**
   * @return {!Promise}
   */

  disconnect() {}
}

/**
 * @implements { ServerSocketInterface }
 */
export class ServerSocketRemote {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!ServerSocketPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          ServerSocketPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!ServerSocketPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @return {!Promise<{
        result: ?AcceptConnectionResult,
   *  }>}
   */

  accept() {
    return this.proxy.sendMessage(
        0,
        ServerSocket_Accept_ParamsSpec.$,
        ServerSocket_Accept_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @return {!Promise}
   */

  disconnect() {
    return this.proxy.sendMessage(
        1,
        ServerSocket_Disconnect_ParamsSpec.$,
        ServerSocket_Disconnect_ResponseParamsSpec.$,
        [
        ]);
  }
}

/**
 * An object which receives request messages for the ServerSocket
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class ServerSocketReceiver {
  /**
   * @param {!ServerSocketInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!ServerSocketRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        ServerSocketRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!ServerSocketRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        ServerSocket_Accept_ParamsSpec.$,
        ServerSocket_Accept_ResponseParamsSpec.$,
        impl.accept.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        ServerSocket_Disconnect_ParamsSpec.$,
        ServerSocket_Disconnect_ResponseParamsSpec.$,
        impl.disconnect.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
}

export class ServerSocket {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "bluetooth.mojom.ServerSocket";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!ServerSocketRemote}
   */
  static getRemote() {
    let remote = new ServerSocketRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
}


/**
 * An object which receives request messages for the ServerSocket
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class ServerSocketCallbackRouter {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      ServerSocketRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!ServerSocketRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.accept =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        ServerSocket_Accept_ParamsSpec.$,
        ServerSocket_Accept_ResponseParamsSpec.$,
        this.accept.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.disconnect =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        ServerSocket_Disconnect_ParamsSpec.$,
        ServerSocket_Disconnect_ResponseParamsSpec.$,
        this.disconnect.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
}


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export class AdapterPendingReceiver {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle, 'bluetooth.mojom.Adapter', scope);
  }
}

/** @interface */
export class AdapterInterface {
  
  /**
   * @param { !string } address
   * @return {!Promise<{
        result: !ConnectResult,
        device: ?bluetooth_mojom_DeviceRemote,
   *  }>}
   */

  connectToDevice(address) {}
  
  /**
   * @return {!Promise<{
        devices: !Array<!bluetooth_mojom_DeviceInfo>,
   *  }>}
   */

  getDevices() {}
  
  /**
   * @return {!Promise<{
        info: !AdapterInfo,
   *  }>}
   */

  getInfo() {}
  
  /**
   * @param { !AdapterObserverRemote } observer
   * @return {!Promise}
   */

  addObserver(observer) {}
  
  /**
   * @param { !bluetooth_mojom_UUID } serviceId
   * @param { !Array<!number> } serviceData
   * @param { !boolean } useScanResponse
   * @return {!Promise<{
        advertisement: ?AdvertisementRemote,
   *  }>}
   */

  registerAdvertisement(serviceId, serviceData, useScanResponse) {}
  
  /**
   * @param { !boolean } discoverable
   * @return {!Promise<{
        success: !boolean,
   *  }>}
   */

  setDiscoverable(discoverable) {}
  
  /**
   * @param { !string } name
   * @return {!Promise<{
        success: !boolean,
   *  }>}
   */

  setName(name) {}
  
  /**
   * @param { !string } clientName
   * @return {!Promise<{
        session: ?DiscoverySessionRemote,
   *  }>}
   */

  startDiscoverySession(clientName) {}
  
  /**
   * @param { !string } address
   * @param { !bluetooth_mojom_UUID } serviceUuid
   * @return {!Promise<{
        result: ?ConnectToServiceResult,
   *  }>}
   */

  connectToServiceInsecurely(address, serviceUuid) {}
  
  /**
   * @param { !string } serviceName
   * @param { !bluetooth_mojom_UUID } serviceUuid
   * @return {!Promise<{
        serverSocket: ?ServerSocketRemote,
   *  }>}
   */

  createRfcommServiceInsecurely(serviceName, serviceUuid) {}
}

/**
 * @implements { AdapterInterface }
 */
export class AdapterRemote {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!AdapterPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          AdapterPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!AdapterPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !string } address
   * @return {!Promise<{
        result: !ConnectResult,
        device: ?bluetooth_mojom_DeviceRemote,
   *  }>}
   */

  connectToDevice(
      address) {
    return this.proxy.sendMessage(
        0,
        Adapter_ConnectToDevice_ParamsSpec.$,
        Adapter_ConnectToDevice_ResponseParamsSpec.$,
        [
          address
        ]);
  }

  
  /**
   * @return {!Promise<{
        devices: !Array<!bluetooth_mojom_DeviceInfo>,
   *  }>}
   */

  getDevices() {
    return this.proxy.sendMessage(
        1,
        Adapter_GetDevices_ParamsSpec.$,
        Adapter_GetDevices_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @return {!Promise<{
        info: !AdapterInfo,
   *  }>}
   */

  getInfo() {
    return this.proxy.sendMessage(
        2,
        Adapter_GetInfo_ParamsSpec.$,
        Adapter_GetInfo_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !AdapterObserverRemote } observer
   * @return {!Promise}
   */

  addObserver(
      observer) {
    return this.proxy.sendMessage(
        3,
        Adapter_AddObserver_ParamsSpec.$,
        Adapter_AddObserver_ResponseParamsSpec.$,
        [
          observer
        ]);
  }

  
  /**
   * @param { !bluetooth_mojom_UUID } serviceId
   * @param { !Array<!number> } serviceData
   * @param { !boolean } useScanResponse
   * @return {!Promise<{
        advertisement: ?AdvertisementRemote,
   *  }>}
   */

  registerAdvertisement(
      serviceId,
      serviceData,
      useScanResponse) {
    return this.proxy.sendMessage(
        4,
        Adapter_RegisterAdvertisement_ParamsSpec.$,
        Adapter_RegisterAdvertisement_ResponseParamsSpec.$,
        [
          serviceId,
          serviceData,
          useScanResponse
        ]);
  }

  
  /**
   * @param { !boolean } discoverable
   * @return {!Promise<{
        success: !boolean,
   *  }>}
   */

  setDiscoverable(
      discoverable) {
    return this.proxy.sendMessage(
        5,
        Adapter_SetDiscoverable_ParamsSpec.$,
        Adapter_SetDiscoverable_ResponseParamsSpec.$,
        [
          discoverable
        ]);
  }

  
  /**
   * @param { !string } name
   * @return {!Promise<{
        success: !boolean,
   *  }>}
   */

  setName(
      name) {
    return this.proxy.sendMessage(
        6,
        Adapter_SetName_ParamsSpec.$,
        Adapter_SetName_ResponseParamsSpec.$,
        [
          name
        ]);
  }

  
  /**
   * @param { !string } clientName
   * @return {!Promise<{
        session: ?DiscoverySessionRemote,
   *  }>}
   */

  startDiscoverySession(
      clientName) {
    return this.proxy.sendMessage(
        7,
        Adapter_StartDiscoverySession_ParamsSpec.$,
        Adapter_StartDiscoverySession_ResponseParamsSpec.$,
        [
          clientName
        ]);
  }

  
  /**
   * @param { !string } address
   * @param { !bluetooth_mojom_UUID } serviceUuid
   * @return {!Promise<{
        result: ?ConnectToServiceResult,
   *  }>}
   */

  connectToServiceInsecurely(
      address,
      serviceUuid) {
    return this.proxy.sendMessage(
        8,
        Adapter_ConnectToServiceInsecurely_ParamsSpec.$,
        Adapter_ConnectToServiceInsecurely_ResponseParamsSpec.$,
        [
          address,
          serviceUuid
        ]);
  }

  
  /**
   * @param { !string } serviceName
   * @param { !bluetooth_mojom_UUID } serviceUuid
   * @return {!Promise<{
        serverSocket: ?ServerSocketRemote,
   *  }>}
   */

  createRfcommServiceInsecurely(
      serviceName,
      serviceUuid) {
    return this.proxy.sendMessage(
        9,
        Adapter_CreateRfcommServiceInsecurely_ParamsSpec.$,
        Adapter_CreateRfcommServiceInsecurely_ResponseParamsSpec.$,
        [
          serviceName,
          serviceUuid
        ]);
  }
}

/**
 * An object which receives request messages for the Adapter
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class AdapterReceiver {
  /**
   * @param {!AdapterInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!AdapterRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        AdapterRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!AdapterRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        Adapter_ConnectToDevice_ParamsSpec.$,
        Adapter_ConnectToDevice_ResponseParamsSpec.$,
        impl.connectToDevice.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        Adapter_GetDevices_ParamsSpec.$,
        Adapter_GetDevices_ResponseParamsSpec.$,
        impl.getDevices.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        Adapter_GetInfo_ParamsSpec.$,
        Adapter_GetInfo_ResponseParamsSpec.$,
        impl.getInfo.bind(impl));
    this.helper_internal_.registerHandler(
        3,
        Adapter_AddObserver_ParamsSpec.$,
        Adapter_AddObserver_ResponseParamsSpec.$,
        impl.addObserver.bind(impl));
    this.helper_internal_.registerHandler(
        4,
        Adapter_RegisterAdvertisement_ParamsSpec.$,
        Adapter_RegisterAdvertisement_ResponseParamsSpec.$,
        impl.registerAdvertisement.bind(impl));
    this.helper_internal_.registerHandler(
        5,
        Adapter_SetDiscoverable_ParamsSpec.$,
        Adapter_SetDiscoverable_ResponseParamsSpec.$,
        impl.setDiscoverable.bind(impl));
    this.helper_internal_.registerHandler(
        6,
        Adapter_SetName_ParamsSpec.$,
        Adapter_SetName_ResponseParamsSpec.$,
        impl.setName.bind(impl));
    this.helper_internal_.registerHandler(
        7,
        Adapter_StartDiscoverySession_ParamsSpec.$,
        Adapter_StartDiscoverySession_ResponseParamsSpec.$,
        impl.startDiscoverySession.bind(impl));
    this.helper_internal_.registerHandler(
        8,
        Adapter_ConnectToServiceInsecurely_ParamsSpec.$,
        Adapter_ConnectToServiceInsecurely_ResponseParamsSpec.$,
        impl.connectToServiceInsecurely.bind(impl));
    this.helper_internal_.registerHandler(
        9,
        Adapter_CreateRfcommServiceInsecurely_ParamsSpec.$,
        Adapter_CreateRfcommServiceInsecurely_ResponseParamsSpec.$,
        impl.createRfcommServiceInsecurely.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
}

export class Adapter {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "bluetooth.mojom.Adapter";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!AdapterRemote}
   */
  static getRemote() {
    let remote = new AdapterRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
}


/**
 * An object which receives request messages for the Adapter
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class AdapterCallbackRouter {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      AdapterRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!AdapterRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.connectToDevice =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        Adapter_ConnectToDevice_ParamsSpec.$,
        Adapter_ConnectToDevice_ResponseParamsSpec.$,
        this.connectToDevice.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getDevices =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        Adapter_GetDevices_ParamsSpec.$,
        Adapter_GetDevices_ResponseParamsSpec.$,
        this.getDevices.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getInfo =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        Adapter_GetInfo_ParamsSpec.$,
        Adapter_GetInfo_ResponseParamsSpec.$,
        this.getInfo.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.addObserver =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        3,
        Adapter_AddObserver_ParamsSpec.$,
        Adapter_AddObserver_ResponseParamsSpec.$,
        this.addObserver.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.registerAdvertisement =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        4,
        Adapter_RegisterAdvertisement_ParamsSpec.$,
        Adapter_RegisterAdvertisement_ResponseParamsSpec.$,
        this.registerAdvertisement.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setDiscoverable =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        5,
        Adapter_SetDiscoverable_ParamsSpec.$,
        Adapter_SetDiscoverable_ResponseParamsSpec.$,
        this.setDiscoverable.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setName =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        6,
        Adapter_SetName_ParamsSpec.$,
        Adapter_SetName_ResponseParamsSpec.$,
        this.setName.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.startDiscoverySession =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        7,
        Adapter_StartDiscoverySession_ParamsSpec.$,
        Adapter_StartDiscoverySession_ResponseParamsSpec.$,
        this.startDiscoverySession.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.connectToServiceInsecurely =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        8,
        Adapter_ConnectToServiceInsecurely_ParamsSpec.$,
        Adapter_ConnectToServiceInsecurely_ResponseParamsSpec.$,
        this.connectToServiceInsecurely.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createRfcommServiceInsecurely =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        9,
        Adapter_CreateRfcommServiceInsecurely_ParamsSpec.$,
        Adapter_CreateRfcommServiceInsecurely_ResponseParamsSpec.$,
        this.createRfcommServiceInsecurely.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
}


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export class AdapterObserverPendingReceiver {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle, 'bluetooth.mojom.AdapterObserver', scope);
  }
}

/** @interface */
export class AdapterObserverInterface {
  
  /**
   * @param { !boolean } present
   */

  presentChanged(present) {}
  
  /**
   * @param { !boolean } powered
   */

  poweredChanged(powered) {}
  
  /**
   * @param { !boolean } discoverable
   */

  discoverableChanged(discoverable) {}
  
  /**
   * @param { !boolean } discovering
   */

  discoveringChanged(discovering) {}
  
  /**
   * @param { !bluetooth_mojom_DeviceInfo } device
   */

  deviceAdded(device) {}
  
  /**
   * @param { !bluetooth_mojom_DeviceInfo } device
   */

  deviceChanged(device) {}
  
  /**
   * @param { !bluetooth_mojom_DeviceInfo } device
   */

  deviceRemoved(device) {}
}

/**
 * @implements { AdapterObserverInterface }
 */
export class AdapterObserverRemote {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!AdapterObserverPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          AdapterObserverPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!AdapterObserverPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !boolean } present
   */

  presentChanged(
      present) {
    this.proxy.sendMessage(
        0,
        AdapterObserver_PresentChanged_ParamsSpec.$,
        null,
        [
          present
        ]);
  }

  
  /**
   * @param { !boolean } powered
   */

  poweredChanged(
      powered) {
    this.proxy.sendMessage(
        1,
        AdapterObserver_PoweredChanged_ParamsSpec.$,
        null,
        [
          powered
        ]);
  }

  
  /**
   * @param { !boolean } discoverable
   */

  discoverableChanged(
      discoverable) {
    this.proxy.sendMessage(
        2,
        AdapterObserver_DiscoverableChanged_ParamsSpec.$,
        null,
        [
          discoverable
        ]);
  }

  
  /**
   * @param { !boolean } discovering
   */

  discoveringChanged(
      discovering) {
    this.proxy.sendMessage(
        3,
        AdapterObserver_DiscoveringChanged_ParamsSpec.$,
        null,
        [
          discovering
        ]);
  }

  
  /**
   * @param { !bluetooth_mojom_DeviceInfo } device
   */

  deviceAdded(
      device) {
    this.proxy.sendMessage(
        4,
        AdapterObserver_DeviceAdded_ParamsSpec.$,
        null,
        [
          device
        ]);
  }

  
  /**
   * @param { !bluetooth_mojom_DeviceInfo } device
   */

  deviceChanged(
      device) {
    this.proxy.sendMessage(
        5,
        AdapterObserver_DeviceChanged_ParamsSpec.$,
        null,
        [
          device
        ]);
  }

  
  /**
   * @param { !bluetooth_mojom_DeviceInfo } device
   */

  deviceRemoved(
      device) {
    this.proxy.sendMessage(
        6,
        AdapterObserver_DeviceRemoved_ParamsSpec.$,
        null,
        [
          device
        ]);
  }
}

/**
 * An object which receives request messages for the AdapterObserver
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class AdapterObserverReceiver {
  /**
   * @param {!AdapterObserverInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!AdapterObserverRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        AdapterObserverRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!AdapterObserverRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        AdapterObserver_PresentChanged_ParamsSpec.$,
        null,
        impl.presentChanged.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        AdapterObserver_PoweredChanged_ParamsSpec.$,
        null,
        impl.poweredChanged.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        AdapterObserver_DiscoverableChanged_ParamsSpec.$,
        null,
        impl.discoverableChanged.bind(impl));
    this.helper_internal_.registerHandler(
        3,
        AdapterObserver_DiscoveringChanged_ParamsSpec.$,
        null,
        impl.discoveringChanged.bind(impl));
    this.helper_internal_.registerHandler(
        4,
        AdapterObserver_DeviceAdded_ParamsSpec.$,
        null,
        impl.deviceAdded.bind(impl));
    this.helper_internal_.registerHandler(
        5,
        AdapterObserver_DeviceChanged_ParamsSpec.$,
        null,
        impl.deviceChanged.bind(impl));
    this.helper_internal_.registerHandler(
        6,
        AdapterObserver_DeviceRemoved_ParamsSpec.$,
        null,
        impl.deviceRemoved.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
}

export class AdapterObserver {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "bluetooth.mojom.AdapterObserver";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!AdapterObserverRemote}
   */
  static getRemote() {
    let remote = new AdapterObserverRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
}


/**
 * An object which receives request messages for the AdapterObserver
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class AdapterObserverCallbackRouter {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      AdapterObserverRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!AdapterObserverRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.presentChanged =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        AdapterObserver_PresentChanged_ParamsSpec.$,
        null,
        this.presentChanged.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.poweredChanged =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        AdapterObserver_PoweredChanged_ParamsSpec.$,
        null,
        this.poweredChanged.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.discoverableChanged =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        AdapterObserver_DiscoverableChanged_ParamsSpec.$,
        null,
        this.discoverableChanged.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.discoveringChanged =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        3,
        AdapterObserver_DiscoveringChanged_ParamsSpec.$,
        null,
        this.discoveringChanged.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.deviceAdded =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        4,
        AdapterObserver_DeviceAdded_ParamsSpec.$,
        null,
        this.deviceAdded.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.deviceChanged =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        5,
        AdapterObserver_DeviceChanged_ParamsSpec.$,
        null,
        this.deviceChanged.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.deviceRemoved =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        6,
        AdapterObserver_DeviceRemoved_ParamsSpec.$,
        null,
        this.deviceRemoved.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
}

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const ConnectToServiceResultSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const AcceptConnectionResultSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const AdapterInfoSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Advertisement_Unregister_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Advertisement_Unregister_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const DiscoverySession_IsActive_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const DiscoverySession_IsActive_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const DiscoverySession_Stop_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const DiscoverySession_Stop_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Socket_Disconnect_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Socket_Disconnect_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const ServerSocket_Accept_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const ServerSocket_Accept_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const ServerSocket_Disconnect_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const ServerSocket_Disconnect_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Adapter_ConnectToDevice_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Adapter_ConnectToDevice_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Adapter_GetDevices_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Adapter_GetDevices_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Adapter_GetInfo_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Adapter_GetInfo_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Adapter_AddObserver_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Adapter_AddObserver_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Adapter_RegisterAdvertisement_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Adapter_RegisterAdvertisement_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Adapter_SetDiscoverable_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Adapter_SetDiscoverable_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Adapter_SetName_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Adapter_SetName_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Adapter_StartDiscoverySession_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Adapter_StartDiscoverySession_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Adapter_ConnectToServiceInsecurely_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Adapter_ConnectToServiceInsecurely_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Adapter_CreateRfcommServiceInsecurely_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Adapter_CreateRfcommServiceInsecurely_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const AdapterObserver_PresentChanged_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const AdapterObserver_PoweredChanged_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const AdapterObserver_DiscoverableChanged_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const AdapterObserver_DiscoveringChanged_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const AdapterObserver_DeviceAdded_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const AdapterObserver_DeviceChanged_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const AdapterObserver_DeviceRemoved_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    ConnectToServiceResultSpec.$,
    'ConnectToServiceResult',
    [
      mojo.internal.StructField(
        'socket', 0,
        0,
        mojo.internal.InterfaceProxy(SocketRemote),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'receiveStream', 8,
        0,
        mojo.internal.Handle,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'sendStream', 12,
        0,
        mojo.internal.Handle,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class ConnectToServiceResult {
  constructor() {
    /** @type { !SocketRemote } */
    this.socket;
    /** @type { !MojoHandle } */
    this.receiveStream;
    /** @type { !MojoHandle } */
    this.sendStream;
  }
}



mojo.internal.Struct(
    AcceptConnectionResultSpec.$,
    'AcceptConnectionResult',
    [
      mojo.internal.StructField(
        'device', 0,
        0,
        bluetooth_mojom_DeviceInfoSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'socket', 8,
        0,
        mojo.internal.InterfaceProxy(SocketRemote),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'receiveStream', 16,
        0,
        mojo.internal.Handle,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'sendStream', 20,
        0,
        mojo.internal.Handle,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class AcceptConnectionResult {
  constructor() {
    /** @type { !bluetooth_mojom_DeviceInfo } */
    this.device;
    /** @type { !SocketRemote } */
    this.socket;
    /** @type { !MojoHandle } */
    this.receiveStream;
    /** @type { !MojoHandle } */
    this.sendStream;
  }
}



mojo.internal.Struct(
    AdapterInfoSpec.$,
    'AdapterInfo',
    [
      mojo.internal.StructField(
        'address', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'name', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'systemName', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'floss', 24,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'initialized', 24,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'present', 24,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'powered', 24,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'discoverable', 24,
        4,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'discovering', 24,
        5,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 40],]);



/**
 * @record
 */
export class AdapterInfo {
  constructor() {
    /** @type { !string } */
    this.address;
    /** @type { !string } */
    this.name;
    /** @type { !string } */
    this.systemName;
    /** @type { !boolean } */
    this.floss;
    /** @type { !boolean } */
    this.initialized;
    /** @type { !boolean } */
    this.present;
    /** @type { !boolean } */
    this.powered;
    /** @type { !boolean } */
    this.discoverable;
    /** @type { !boolean } */
    this.discovering;
  }
}



mojo.internal.Struct(
    Advertisement_Unregister_ParamsSpec.$,
    'Advertisement_Unregister_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class Advertisement_Unregister_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    Advertisement_Unregister_ResponseParamsSpec.$,
    'Advertisement_Unregister_ResponseParams',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class Advertisement_Unregister_ResponseParams {
  constructor() {
  }
}



mojo.internal.Struct(
    DiscoverySession_IsActive_ParamsSpec.$,
    'DiscoverySession_IsActive_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class DiscoverySession_IsActive_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    DiscoverySession_IsActive_ResponseParamsSpec.$,
    'DiscoverySession_IsActive_ResponseParams',
    [
      mojo.internal.StructField(
        'active', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class DiscoverySession_IsActive_ResponseParams {
  constructor() {
    /** @type { !boolean } */
    this.active;
  }
}



mojo.internal.Struct(
    DiscoverySession_Stop_ParamsSpec.$,
    'DiscoverySession_Stop_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class DiscoverySession_Stop_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    DiscoverySession_Stop_ResponseParamsSpec.$,
    'DiscoverySession_Stop_ResponseParams',
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class DiscoverySession_Stop_ResponseParams {
  constructor() {
    /** @type { !boolean } */
    this.success;
  }
}



mojo.internal.Struct(
    Socket_Disconnect_ParamsSpec.$,
    'Socket_Disconnect_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class Socket_Disconnect_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    Socket_Disconnect_ResponseParamsSpec.$,
    'Socket_Disconnect_ResponseParams',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class Socket_Disconnect_ResponseParams {
  constructor() {
  }
}



mojo.internal.Struct(
    ServerSocket_Accept_ParamsSpec.$,
    'ServerSocket_Accept_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class ServerSocket_Accept_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    ServerSocket_Accept_ResponseParamsSpec.$,
    'ServerSocket_Accept_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        AcceptConnectionResultSpec.$,
        null,
        true /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class ServerSocket_Accept_ResponseParams {
  constructor() {
    /** @type { (AcceptConnectionResult|undefined) } */
    this.result;
  }
}



mojo.internal.Struct(
    ServerSocket_Disconnect_ParamsSpec.$,
    'ServerSocket_Disconnect_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class ServerSocket_Disconnect_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    ServerSocket_Disconnect_ResponseParamsSpec.$,
    'ServerSocket_Disconnect_ResponseParams',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class ServerSocket_Disconnect_ResponseParams {
  constructor() {
  }
}



mojo.internal.Struct(
    Adapter_ConnectToDevice_ParamsSpec.$,
    'Adapter_ConnectToDevice_Params',
    [
      mojo.internal.StructField(
        'address', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class Adapter_ConnectToDevice_Params {
  constructor() {
    /** @type { !string } */
    this.address;
  }
}



mojo.internal.Struct(
    Adapter_ConnectToDevice_ResponseParamsSpec.$,
    'Adapter_ConnectToDevice_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        ConnectResultSpec.$,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'device', 4,
        0,
        mojo.internal.InterfaceProxy(bluetooth_mojom_DeviceRemote),
        null,
        true /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class Adapter_ConnectToDevice_ResponseParams {
  constructor() {
    /** @type { !ConnectResult } */
    this.result;
    /** @type { (bluetooth_mojom_DeviceRemote|undefined) } */
    this.device;
  }
}



mojo.internal.Struct(
    Adapter_GetDevices_ParamsSpec.$,
    'Adapter_GetDevices_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class Adapter_GetDevices_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    Adapter_GetDevices_ResponseParamsSpec.$,
    'Adapter_GetDevices_ResponseParams',
    [
      mojo.internal.StructField(
        'devices', 0,
        0,
        mojo.internal.Array(bluetooth_mojom_DeviceInfoSpec.$, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class Adapter_GetDevices_ResponseParams {
  constructor() {
    /** @type { !Array<!bluetooth_mojom_DeviceInfo> } */
    this.devices;
  }
}



mojo.internal.Struct(
    Adapter_GetInfo_ParamsSpec.$,
    'Adapter_GetInfo_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class Adapter_GetInfo_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    Adapter_GetInfo_ResponseParamsSpec.$,
    'Adapter_GetInfo_ResponseParams',
    [
      mojo.internal.StructField(
        'info', 0,
        0,
        AdapterInfoSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class Adapter_GetInfo_ResponseParams {
  constructor() {
    /** @type { !AdapterInfo } */
    this.info;
  }
}



mojo.internal.Struct(
    Adapter_AddObserver_ParamsSpec.$,
    'Adapter_AddObserver_Params',
    [
      mojo.internal.StructField(
        'observer', 0,
        0,
        mojo.internal.InterfaceProxy(AdapterObserverRemote),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class Adapter_AddObserver_Params {
  constructor() {
    /** @type { !AdapterObserverRemote } */
    this.observer;
  }
}



mojo.internal.Struct(
    Adapter_AddObserver_ResponseParamsSpec.$,
    'Adapter_AddObserver_ResponseParams',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class Adapter_AddObserver_ResponseParams {
  constructor() {
  }
}



mojo.internal.Struct(
    Adapter_RegisterAdvertisement_ParamsSpec.$,
    'Adapter_RegisterAdvertisement_Params',
    [
      mojo.internal.StructField(
        'serviceId', 0,
        0,
        bluetooth_mojom_UUIDSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'serviceData', 8,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'useScanResponse', 16,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class Adapter_RegisterAdvertisement_Params {
  constructor() {
    /** @type { !bluetooth_mojom_UUID } */
    this.serviceId;
    /** @type { !Array<!number> } */
    this.serviceData;
    /** @type { !boolean } */
    this.useScanResponse;
  }
}



mojo.internal.Struct(
    Adapter_RegisterAdvertisement_ResponseParamsSpec.$,
    'Adapter_RegisterAdvertisement_ResponseParams',
    [
      mojo.internal.StructField(
        'advertisement', 0,
        0,
        mojo.internal.InterfaceProxy(AdvertisementRemote),
        null,
        true /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class Adapter_RegisterAdvertisement_ResponseParams {
  constructor() {
    /** @type { (AdvertisementRemote|undefined) } */
    this.advertisement;
  }
}



mojo.internal.Struct(
    Adapter_SetDiscoverable_ParamsSpec.$,
    'Adapter_SetDiscoverable_Params',
    [
      mojo.internal.StructField(
        'discoverable', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class Adapter_SetDiscoverable_Params {
  constructor() {
    /** @type { !boolean } */
    this.discoverable;
  }
}



mojo.internal.Struct(
    Adapter_SetDiscoverable_ResponseParamsSpec.$,
    'Adapter_SetDiscoverable_ResponseParams',
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class Adapter_SetDiscoverable_ResponseParams {
  constructor() {
    /** @type { !boolean } */
    this.success;
  }
}



mojo.internal.Struct(
    Adapter_SetName_ParamsSpec.$,
    'Adapter_SetName_Params',
    [
      mojo.internal.StructField(
        'name', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class Adapter_SetName_Params {
  constructor() {
    /** @type { !string } */
    this.name;
  }
}



mojo.internal.Struct(
    Adapter_SetName_ResponseParamsSpec.$,
    'Adapter_SetName_ResponseParams',
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class Adapter_SetName_ResponseParams {
  constructor() {
    /** @type { !boolean } */
    this.success;
  }
}



mojo.internal.Struct(
    Adapter_StartDiscoverySession_ParamsSpec.$,
    'Adapter_StartDiscoverySession_Params',
    [
      mojo.internal.StructField(
        'clientName', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class Adapter_StartDiscoverySession_Params {
  constructor() {
    /** @type { !string } */
    this.clientName;
  }
}



mojo.internal.Struct(
    Adapter_StartDiscoverySession_ResponseParamsSpec.$,
    'Adapter_StartDiscoverySession_ResponseParams',
    [
      mojo.internal.StructField(
        'session', 0,
        0,
        mojo.internal.InterfaceProxy(DiscoverySessionRemote),
        null,
        true /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class Adapter_StartDiscoverySession_ResponseParams {
  constructor() {
    /** @type { (DiscoverySessionRemote|undefined) } */
    this.session;
  }
}



mojo.internal.Struct(
    Adapter_ConnectToServiceInsecurely_ParamsSpec.$,
    'Adapter_ConnectToServiceInsecurely_Params',
    [
      mojo.internal.StructField(
        'address', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'serviceUuid', 8,
        0,
        bluetooth_mojom_UUIDSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class Adapter_ConnectToServiceInsecurely_Params {
  constructor() {
    /** @type { !string } */
    this.address;
    /** @type { !bluetooth_mojom_UUID } */
    this.serviceUuid;
  }
}



mojo.internal.Struct(
    Adapter_ConnectToServiceInsecurely_ResponseParamsSpec.$,
    'Adapter_ConnectToServiceInsecurely_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        ConnectToServiceResultSpec.$,
        null,
        true /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class Adapter_ConnectToServiceInsecurely_ResponseParams {
  constructor() {
    /** @type { (ConnectToServiceResult|undefined) } */
    this.result;
  }
}



mojo.internal.Struct(
    Adapter_CreateRfcommServiceInsecurely_ParamsSpec.$,
    'Adapter_CreateRfcommServiceInsecurely_Params',
    [
      mojo.internal.StructField(
        'serviceName', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'serviceUuid', 8,
        0,
        bluetooth_mojom_UUIDSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class Adapter_CreateRfcommServiceInsecurely_Params {
  constructor() {
    /** @type { !string } */
    this.serviceName;
    /** @type { !bluetooth_mojom_UUID } */
    this.serviceUuid;
  }
}



mojo.internal.Struct(
    Adapter_CreateRfcommServiceInsecurely_ResponseParamsSpec.$,
    'Adapter_CreateRfcommServiceInsecurely_ResponseParams',
    [
      mojo.internal.StructField(
        'serverSocket', 0,
        0,
        mojo.internal.InterfaceProxy(ServerSocketRemote),
        null,
        true /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class Adapter_CreateRfcommServiceInsecurely_ResponseParams {
  constructor() {
    /** @type { (ServerSocketRemote|undefined) } */
    this.serverSocket;
  }
}



mojo.internal.Struct(
    AdapterObserver_PresentChanged_ParamsSpec.$,
    'AdapterObserver_PresentChanged_Params',
    [
      mojo.internal.StructField(
        'present', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class AdapterObserver_PresentChanged_Params {
  constructor() {
    /** @type { !boolean } */
    this.present;
  }
}



mojo.internal.Struct(
    AdapterObserver_PoweredChanged_ParamsSpec.$,
    'AdapterObserver_PoweredChanged_Params',
    [
      mojo.internal.StructField(
        'powered', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class AdapterObserver_PoweredChanged_Params {
  constructor() {
    /** @type { !boolean } */
    this.powered;
  }
}



mojo.internal.Struct(
    AdapterObserver_DiscoverableChanged_ParamsSpec.$,
    'AdapterObserver_DiscoverableChanged_Params',
    [
      mojo.internal.StructField(
        'discoverable', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class AdapterObserver_DiscoverableChanged_Params {
  constructor() {
    /** @type { !boolean } */
    this.discoverable;
  }
}



mojo.internal.Struct(
    AdapterObserver_DiscoveringChanged_ParamsSpec.$,
    'AdapterObserver_DiscoveringChanged_Params',
    [
      mojo.internal.StructField(
        'discovering', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class AdapterObserver_DiscoveringChanged_Params {
  constructor() {
    /** @type { !boolean } */
    this.discovering;
  }
}



mojo.internal.Struct(
    AdapterObserver_DeviceAdded_ParamsSpec.$,
    'AdapterObserver_DeviceAdded_Params',
    [
      mojo.internal.StructField(
        'device', 0,
        0,
        bluetooth_mojom_DeviceInfoSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class AdapterObserver_DeviceAdded_Params {
  constructor() {
    /** @type { !bluetooth_mojom_DeviceInfo } */
    this.device;
  }
}



mojo.internal.Struct(
    AdapterObserver_DeviceChanged_ParamsSpec.$,
    'AdapterObserver_DeviceChanged_Params',
    [
      mojo.internal.StructField(
        'device', 0,
        0,
        bluetooth_mojom_DeviceInfoSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class AdapterObserver_DeviceChanged_Params {
  constructor() {
    /** @type { !bluetooth_mojom_DeviceInfo } */
    this.device;
  }
}



mojo.internal.Struct(
    AdapterObserver_DeviceRemoved_ParamsSpec.$,
    'AdapterObserver_DeviceRemoved_Params',
    [
      mojo.internal.StructField(
        'device', 0,
        0,
        bluetooth_mojom_DeviceInfoSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class AdapterObserver_DeviceRemoved_Params {
  constructor() {
    /** @type { !bluetooth_mojom_DeviceInfo } */
    this.device;
  }
}

