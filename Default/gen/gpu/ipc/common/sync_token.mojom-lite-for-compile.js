// gpu/ipc/common/sync_token.mojom-lite-for-compile.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';

goog.require('mojo.internal');





goog.provide('gpu.mojom.CommandBufferNamespace');
goog.provide('gpu.mojom.CommandBufferNamespaceSpec');
/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
gpu.mojom.CommandBufferNamespaceSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
gpu.mojom.CommandBufferNamespace = {
  
  INVALID: -1,
  GPU_IO: 0,
  IN_PROCESS: 1,
  MOJO: 2,
  MOJO_LOCAL: 3,
  NUM_COMMAND_BUFFER_NAMESPACES: 4,
  MIN_VALUE: -1,
  MAX_VALUE: 4,
};



goog.provide('gpu.mojom.SyncTokenSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
gpu.mojom.SyncTokenSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    gpu.mojom.SyncTokenSpec.$,
    'SyncToken',
    [
      mojo.internal.StructField(
        'verifiedFlush', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'namespaceId', 4,
        0,
        gpu.mojom.CommandBufferNamespaceSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'commandBufferId', 8,
        0,
        mojo.internal.Uint64,
        BigInt(0),
        false /* nullable */),
      mojo.internal.StructField(
        'releaseCount', 16,
        0,
        mojo.internal.Uint64,
        BigInt(0),
        false /* nullable */),
    ],
    [[0, 32],]);



goog.provide('gpu.mojom.SyncToken');

/** @record */
gpu.mojom.SyncToken = class {
  constructor() {
    /** @export { !boolean } */
    this.verifiedFlush;
    /** @export { !gpu.mojom.CommandBufferNamespace } */
    this.namespaceId;
    /** @export { !bigint } */
    this.commandBufferId;
    /** @export { !bigint } */
    this.releaseCount;
  }
};


