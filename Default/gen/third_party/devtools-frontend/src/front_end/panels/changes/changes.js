import*as e from"../../core/common/common.js";import*as t from"../../core/host/host.js";import*as i from"../../core/i18n/i18n.js";import*as o from"../../core/root/root.js";import{formatCSSChangesFromDiff as r}from"../utils/utils.js";import*as s from"../../third_party/diff/diff.js";import*as n from"../../ui/components/diff_view/diff_view.js";import*as a from"../../ui/legacy/legacy.js";import*as c from"../../models/workspace_diff/workspace_diff.js";import*as l from"../../core/platform/platform.js";import*as d from"../../models/workspace/workspace.js";import*as h from"../snippets/snippets.js";const f=new CSSStyleSheet;f.replaceSync("[slot=insertion-point-main]{flex-direction:column;display:flex}[slot=insertion-point-sidebar]{overflow:auto}.diff-container{flex:1;overflow:auto}:focus.selected{--override-selected-color:#fff;background-color:var(--legacy-selection-bg-color);color:var(--override-selected-color)}.-theme-with-dark-background :focus.selected,:host-context(.-theme-with-dark-background) :focus.selected{--override-selected-color:rgb(0 0 0)}.changes-toolbar{background-color:var(--color-background-elevation-1);border-top:var(--legacy-divider-border)}\n/*# sourceURL=changesView.css */\n");const u=new CSSStyleSheet;u.replaceSync(".tree-outline{--override-script-snippet-tree-item-color:hsl(48deg 70% 50%);--override-stylesheet-tree-item-color:hsl(256deg 50% 50%);--override-image-font-tree-item-color:hsl(109deg 33% 50%)}.-theme-with-dark-background .tree-outline,:host-context(.-theme-with-dark-background) .tree-outline{--override-script-snippet-tree-item-color:rgb(217 181 38);--override-stylesheet-tree-item-color:rgb(98 64 191);--override-image-font-tree-item-color:rgb(101 170 85)}li .icon{margin:-3px -5px;background:var(--color-background-elevation-2)}.tree-outline li{min-height:20px}.tree-outline li:hover:not(.selected) .selection{display:block;background-color:var(--item-hover-color)}.navigator-script-tree-item .icon,.navigator-sm-script-tree-item .icon,.navigator-snippet-tree-item .icon{background:var(--override-script-snippet-tree-item-color)}.navigator-sm-stylesheet-tree-item .icon,.navigator-stylesheet-tree-item .icon{background:var(--override-stylesheet-tree-item-color)}.navigator-font-tree-item .icon,.navigator-image-tree-item .icon{background:var(--override-image-font-tree-item-color)}@media (forced-colors:active){.navigator-font-tree-item .icon,.navigator-image-tree-item .icon,.navigator-script-tree-item .icon,.navigator-sm-script-tree-item .icon,.navigator-sm-stylesheet-tree-item .icon,.navigator-snippet-tree-item .icon,.navigator-stylesheet-tree-item .icon,li .icon{background-color:ButtonText;background-image:none;forced-color-adjust:none}}\n/*# sourceURL=changesSidebar.css */\n");const p={sFromSourceMap:"{PH1} (from source map)"},m=i.i18n.registerUIStrings("panels/changes/ChangesSidebar.ts",p),g=i.i18n.getLocalizedString.bind(void 0,m);class S extends(e.ObjectWrapper.eventMixin(a.Widget.Widget)){treeoutline;treeElements;workspaceDiff;constructor(e){super(),this.treeoutline=new a.TreeOutline.TreeOutlineInShadow,this.treeoutline.setFocusable(!1),this.treeoutline.setComparator(((e,t)=>l.StringUtilities.compare(e.titleAsText(),t.titleAsText()))),this.treeoutline.addEventListener(a.TreeOutline.Events.ElementSelected,this.selectionChanged,this),a.ARIAUtils.markAsTablist(this.treeoutline.contentElement),this.element.appendChild(this.treeoutline.element),this.treeElements=new Map,this.workspaceDiff=e,this.workspaceDiff.modifiedUISourceCodes().forEach(this.addUISourceCode.bind(this)),this.workspaceDiff.addEventListener("ModifiedStatusChanged",this.uiSourceCodeMofiedStatusChanged,this)}selectUISourceCode(e,t){const i=this.treeElements.get(e);i&&i.select(t)}selectedUISourceCode(){return this.treeoutline.selectedTreeElement?this.treeoutline.selectedTreeElement.uiSourceCode:null}selectionChanged(){this.dispatchEventToListeners("SelectedUISourceCodeChanged")}uiSourceCodeMofiedStatusChanged(e){e.data.isModified?this.addUISourceCode(e.data.uiSourceCode):this.removeUISourceCode(e.data.uiSourceCode)}removeUISourceCode(e){const t=this.treeElements.get(e);if(this.treeElements.delete(e),this.treeoutline.selectedTreeElement===t){const e=t.previousSibling||t.nextSibling;e?e.select(!0):(t.deselect(),this.selectionChanged())}t&&(this.treeoutline.removeChild(t),t.dispose()),0===this.treeoutline.rootElement().childCount()&&this.treeoutline.setFocusable(!1)}addUISourceCode(e){const t=new C(e);this.treeElements.set(e,t),this.treeoutline.setFocusable(!0),this.treeoutline.appendChild(t),this.treeoutline.selectedTreeElement||t.select(!0)}wasShown(){super.wasShown(),this.treeoutline.registerCSSFiles([u])}}class C extends a.TreeOutline.TreeElement{uiSourceCode;eventListeners;constructor(e){super(),this.uiSourceCode=e,this.listItemElement.classList.add("navigator-"+e.contentType().name()+"-tree-item"),a.ARIAUtils.markAsTab(this.listItemElement);let t="largeicon-navigator-file";h.ScriptSnippetFileSystem.isSnippetsUISourceCode(this.uiSourceCode)&&(t="largeicon-navigator-snippet");const i=a.Icon.Icon.create(t,"icon");this.setLeadingIcons([i]),this.eventListeners=[e.addEventListener(d.UISourceCode.Events.TitleChanged,this.updateTitle,this),e.addEventListener(d.UISourceCode.Events.WorkingCopyChanged,this.updateTitle,this),e.addEventListener(d.UISourceCode.Events.WorkingCopyCommitted,this.updateTitle,this)],this.updateTitle()}updateTitle(){let e=this.uiSourceCode.displayName();this.uiSourceCode.isDirty()&&(e="*"+e),this.title=e;let t=this.uiSourceCode.url();this.uiSourceCode.contentType().isFromSourceMap()&&(t=g(p.sFromSourceMap,{PH1:this.uiSourceCode.displayName()})),this.tooltip=t}dispose(){e.EventTarget.removeEventListeners(this.eventListeners)}}var b=Object.freeze({__proto__:null,ChangesSidebar:S,UISourceCodeTreeElement:C});const v={revertAllChangesToCurrentFile:"Revert all changes to current file",copyAllChangesFromCurrentFile:"Copy all changes from current file",noChanges:"No changes",binaryData:"Binary data",sInsertions:"{n, plural, =1 {# insertion (+)} other {# insertions (+)}}",sDeletions:"{n, plural, =1 {# deletion (-)} other {# deletions (-)}}",copy:"Copy"},w=i.i18n.registerUIStrings("panels/changes/ChangesView.ts",v),y=i.i18n.getLocalizedString.bind(void 0,w);let I,T;class E extends a.Widget.VBox{emptyWidget;workspaceDiff;changesSidebar;selectedUISourceCode;#e;diffContainer;toolbar;diffStats;diffView;copyButton;copyButtonSeparator;constructor(){super(!0);const e=new a.SplitWidget.SplitWidget(!0,!1),t=new a.Widget.Widget;e.setMainWidget(t),e.show(this.contentElement),this.emptyWidget=new a.EmptyWidget.EmptyWidget(""),this.emptyWidget.show(t.element),this.workspaceDiff=c.WorkspaceDiff.workspaceDiff(),this.changesSidebar=new S(this.workspaceDiff),this.changesSidebar.addEventListener("SelectedUISourceCodeChanged",this.selectedUISourceCodeChanged,this),e.setSidebarWidget(this.changesSidebar),this.selectedUISourceCode=null,this.diffContainer=t.element.createChild("div","diff-container"),a.ARIAUtils.markAsTabpanel(this.diffContainer),this.diffContainer.addEventListener("click",(e=>this.click(e))),this.diffView=this.diffContainer.appendChild(new n.DiffView.DiffView),this.toolbar=new a.Toolbar.Toolbar("changes-toolbar",t.element);const i=new a.Toolbar.ToolbarButton(y(v.revertAllChangesToCurrentFile),"largeicon-undo");i.addEventListener(a.Toolbar.ToolbarButton.Events.Click,this.revert.bind(this)),this.toolbar.appendToolbarItem(i),this.diffStats=new a.Toolbar.ToolbarText(""),this.toolbar.appendToolbarItem(this.diffStats),this.copyButton=new a.Toolbar.ToolbarButton(y(v.copyAllChangesFromCurrentFile),"largeicon-copy",v.copy),this.copyButton.addEventListener(a.Toolbar.ToolbarButton.Events.Click,this.copyChanges.bind(this)),this.copyButtonSeparator=new a.Toolbar.ToolbarSeparator,this.toolbar.setEnabled(!1),this.hideDiff(y(v.noChanges)),this.selectedUISourceCodeChanged()}static instance(e={forceNew:null}){const{forceNew:t}=e;return I&&!t||(I=new E),I}selectedUISourceCodeChanged(){this.revealUISourceCode(this.changesSidebar.selectedUISourceCode()),this.selectedUISourceCode?.contentType()===e.ResourceType.resourceTypes.Stylesheet?(this.toolbar.appendToolbarItem(this.copyButtonSeparator),this.toolbar.appendToolbarItem(this.copyButton)):(this.toolbar.removeToolbarItem(this.copyButtonSeparator),this.toolbar.removeToolbarItem(this.copyButton))}revert(){const e=this.selectedUISourceCode;e&&this.workspaceDiff.revertToOriginal(e)}async copyChanges(){const e=this.selectedUISourceCode;if(!e)return;const i=await this.workspaceDiff.requestDiff(e,{shouldFormatDiff:!0});if(!i||i?.diff.length<2)return;const o=await r(i.diff);t.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(o)}click(t){if(this.selectedUISourceCode)for(const i of t.composedPath()){if(!(i instanceof HTMLElement))continue;if(i.ownerDocument.getSelection()?.toString())break;if(i.classList.contains("diff-line-content")&&i.hasAttribute("data-line-number")){let r=Number(i.dataset.lineNumber)-1;o.Runtime.experiments.isEnabled(o.Runtime.ExperimentName.PRECISE_CHANGES)&&this.#e&&(r=this.#e.formattedToOriginal(r,0)[0]),e.Revealer.reveal(this.selectedUISourceCode.uiLocation(r,0),!1),t.consume(!0);break}if(i.classList.contains("diff-listing"))break}}revealUISourceCode(e){this.selectedUISourceCode!==e&&(this.selectedUISourceCode&&this.workspaceDiff.unsubscribeFromDiffChange(this.selectedUISourceCode,this.refreshDiff,this),e&&this.isShowing()&&this.workspaceDiff.subscribeToDiffChange(e,this.refreshDiff,this),this.selectedUISourceCode=e,this.refreshDiff())}wasShown(){this.refreshDiff(),this.registerCSSFiles([f])}async refreshDiff(){if(!this.isShowing())return;if(!this.selectedUISourceCode)return void this.renderDiffRows();const e=this.selectedUISourceCode;if(!e.contentType().isTextType())return void this.hideDiff(y(v.binaryData));const t=await this.workspaceDiff.requestDiff(e,{shouldFormatDiff:o.Runtime.experiments.isEnabled(o.Runtime.ExperimentName.PRECISE_CHANGES)});this.selectedUISourceCode===e&&(this.#e=t?.formattedCurrentMapping,this.renderDiffRows(t?.diff))}hideDiff(e){this.diffStats.setText(""),this.toolbar.setEnabled(!1),this.diffContainer.style.display="none",this.emptyWidget.text=e,this.emptyWidget.showWidget()}renderDiffRows(e){if(!e||1===e.length&&e[0][0]===s.Diff.Operation.Equal)this.hideDiff(y(v.noChanges));else{this.diffStats.setText(function(e){const t=e.reduce(((e,t)=>e+(t[0]===s.Diff.Operation.Insert?t[1].length:0)),0),i=e.reduce(((e,t)=>e+(t[0]===s.Diff.Operation.Delete?t[1].length:0)),0),o=y(v.sDeletions,{n:i});return`${y(v.sInsertions,{n:t})}, ${o}`}(e)),this.toolbar.setEnabled(!0),this.emptyWidget.hideWidget();const t=this.selectedUISourceCode.mimeType();this.diffContainer.style.display="block",this.diffView.data={diff:e,mimeType:t}}}}class k{static instance(e={forceNew:!1}){const{forceNew:t}=e;return T&&!t||(T=new k),T}async reveal(e,t){if(!(e instanceof c.WorkspaceDiff.DiffUILocation))throw new Error("Internal error: not a diff ui location");await a.ViewManager.ViewManager.instance().showView("changes.changes"),E.instance().changesSidebar.selectUISourceCode(e.uiSourceCode,t)}}var D=Object.freeze({__proto__:null,ChangesView:E,DiffUILocationRevealer:k});export{b as ChangesSidebar,D as ChangesView};
