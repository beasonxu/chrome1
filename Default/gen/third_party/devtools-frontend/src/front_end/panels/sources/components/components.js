import*as e from"../../../core/i18n/i18n.js";import*as t from"../../../models/persistence/persistence.js";import*as r from"../../../models/workspace/workspace.js";import*as o from"../../../ui/components/buttons/buttons.js";import*as i from"../../../ui/components/helpers/helpers.js";import*as a from"../../../ui/legacy/legacy.js";import*as s from"../../../ui/lit-html/lit-html.js";const n=new CSSStyleSheet;n.replaceSync(":host{flex-grow:1;padding:6px}.row{display:flex;flex-direction:row;color:var(--color-syntax-1);font-family:var(--monospace-font-family);font-size:var(--monospace-font-size);align-items:center;line-height:24px}.row devtools-button{line-height:1;margin-left:.5em}.padded{margin-left:2em}.separator{margin-right:.5em;color:var(--color-text-primary)}.editable{cursor:text;color:var(--color-text-primary);overflow-wrap:anywhere;min-height:18px;line-height:18px;min-width:.5em;background:0 0;border:none;outline:0;display:inline-block}.editable.red{color:var(--color-syntax-1)}.editable:focus,.editable:hover{box-shadow:0 0 0 1px var(--color-details-hairline);border-radius:2px}.row .inline-button{opacity:0%;visibility:hidden;transition:opacity .2s}.row:focus-within .inline-button,.row:hover .inline-button{opacity:100%;visibility:visible}.center-wrapper{height:100%;display:flex;justify-content:center;align-items:center}.centered{margin:1em;max-width:300px;text-align:center}.error-header{font-weight:700;margin-bottom:1em}.error-body{line-height:1.5em;color:var(--color-text-secondary)}.add-block{margin-top:3px}\n/*# sourceURL=HeadersView.css */\n");const d={addHeader:"Add a header",removeHeader:"Remove this header",removeBlock:"Remove this '`ApplyTo`'-section",errorWhenParsing:"Error when parsing ''{PH1}''.",parsingErrorExplainer:"This is most likely due to a syntax error in ''{PH1}''. Try opening this file in an external editor to fix the error or delete the file and re-create the override.",addHeaderOverride:"Add header override"},h=e.i18n.registerUIStrings("panels/sources/components/HeadersView.ts",d),l=e.i18n.getLocalizedString.bind(void 0,h),c=new URL("../../../Images/plus_icon.svg",import.meta.url).toString(),m=new URL("../../../Images/minus_icon.svg",import.meta.url).toString();class u extends a.View.SimpleView{#e=new p;#t;constructor(t){super(e.i18n.lockedString("HeadersView")),this.#t=t,this.#t.addEventListener(r.UISourceCode.Events.WorkingCopyChanged,this.#r,this),this.#t.addEventListener(r.UISourceCode.Events.WorkingCopyCommitted,this.#o,this),this.element.appendChild(this.#e),this.#i()}async#i(){const e=await this.#t.requestContent();this.#a(e.content||"")}#a(e){let r=!1,o=[];e=e||"[]";try{if(o=JSON.parse(e),!o.every(t.NetworkPersistenceManager.isHeaderOverride))throw"Type mismatch after parsing"}catch(e){console.error("Failed to parse",this.#t.url(),"for locally overriding headers."),r=!0}const i=o.map((e=>({applyTo:e.applyTo,headers:Object.entries(e.headers).map((([e,t])=>({name:e,value:t})))})));this.#e.data={headerOverrides:i,uiSourceCode:this.#t,parsingError:r}}commitEditing(){this.#t.commitWorkingCopy(),t.NetworkPersistenceManager.NetworkPersistenceManager.instance().updateInterceptionPatterns()}#r(){this.#a(this.#t.workingCopy())}#o(){this.#a(this.#t.workingCopy())}getComponent(){return this.#e}dispose(){this.#t.removeEventListener(r.UISourceCode.Events.WorkingCopyChanged,this.#r,this),this.#t.removeEventListener(r.UISourceCode.Events.WorkingCopyCommitted,this.#o,this)}}class p extends HTMLElement{static litTagName=s.literal`devtools-sources-headers-view`;#s=this.attachShadow({mode:"open"});#n=this.#d.bind(this);#h=[];#t=null;#l=!1;#c=null;constructor(){super(),this.#s.addEventListener("focusin",this.#m.bind(this)),this.#s.addEventListener("focusout",this.#u.bind(this)),this.#s.addEventListener("click",this.#p.bind(this)),this.#s.addEventListener("input",this.#v.bind(this)),this.#s.addEventListener("keydown",this.#g.bind(this))}connectedCallback(){this.#s.adoptedStyleSheets=[n]}set data(e){this.#h=e.headerOverrides,this.#t=e.uiSourceCode,this.#l=e.parsingError,i.ScheduledRender.scheduleRender(this,this.#n)}#g(e){const t=e,r=e.target;r.matches(".editable")&&"Enter"===t.key&&(e.preventDefault(),this.#w(r))}#w(e){const t=Array.from(this.#s.querySelectorAll(".editable")),r=t.indexOf(e);-1!==r&&r+1<t.length&&t[r+1].focus()}#C(e){const t=window.getSelection(),r=document.createRange();r.selectNodeContents(e),t?.removeAllRanges(),t?.addRange(r)}#m(e){const t=e.target;t.matches(".editable")&&this.#C(t)}#u(){window.getSelection()?.removeAllRanges()}#y(e){const t=new Set(e.map((e=>e.name)));let r=1;for(;t.has("headerName"+r);)r++;return"headerName"+r}#p(e){const t=e.target,r=t.closest(".row"),o=Number(r?.dataset.blockIndex||0),i=Number(r?.dataset.headerIndex||0);t.matches(".add-header")?(this.#h[o].headers.splice(i+1,0,{name:this.#y(this.#h[o].headers),value:"headerValue"}),this.#c={blockIndex:o,headerIndex:i+1},this.#b()):t.matches(".remove-header")?(this.#h[o].headers.splice(i,1),0===this.#h[o].headers.length&&this.#h[o].headers.push({name:this.#y(this.#h[o].headers),value:"headerValue"}),this.#b()):t.matches(".add-block")?(this.#h.push({applyTo:"*",headers:[{name:"headerName",value:"headerValue"}]}),this.#c={blockIndex:this.#h.length-1},this.#b()):t.matches(".remove-block")&&(this.#h.splice(o,1),this.#b())}#v(e){const t=e.target,r=t.closest(".row"),o=Number(r.dataset.blockIndex),i=Number(r.dataset.headerIndex);t.matches(".header-name")&&(this.#h[o].headers[i].name=t.innerText,this.#b()),t.matches(".header-value")&&(this.#h[o].headers[i].value=t.innerText,this.#b()),t.matches(".apply-to")&&(this.#h[o].applyTo=t.innerText,this.#b())}#b(){const e=this.#h.map((e=>({applyTo:e.applyTo,headers:e.headers.reduce(((e,t)=>({...e,[t.name]:t.value})),{})})));this.#t?.setWorkingCopy(JSON.stringify(e,null,2))}#d(){if(!i.ScheduledRender.isScheduledRender(this))throw new Error("HeadersView render was not scheduled");if(this.#l){const e=this.#t?.name()||".headers";s.render(s.html` <div class="center-wrapper"> <div class="centered"> <div class="error-header">${l(d.errorWhenParsing,{PH1:e})}</div> <div class="error-body">${l(d.parsingErrorExplainer,{PH1:e})}</div> </div> </div> `,this.#s,{host:this})}else if(s.render(s.html` ${this.#h.map(((e,t)=>s.html` ${this.#x(e.applyTo,t)} ${e.headers.map(((e,r)=>s.html` ${this.#f(e,t,r)} `))} `))} <${o.Button.Button.litTagName} .variant="${"secondary"}" class="add-block"> ${l(d.addHeaderOverride)} </${o.Button.Button.litTagName}> `,this.#s,{host:this}),this.#c){let e=null;e=this.#c.headerIndex?this.#s.querySelector(`[data-block-index="${this.#c.blockIndex}"][data-header-index="${this.#c.headerIndex}"] .header-name`):this.#s.querySelector(`[data-block-index="${this.#c.blockIndex}"] .apply-to`),e&&e.focus(),this.#c=null}}#x(t,r){return s.html` <div class="row" data-block-index="${r}"> <div>${e.i18n.lockedString("Apply to")}</div> <div class="separator">:</div> ${this.#S(t,"apply-to")} <${o.Button.Button.litTagName} title="${l(d.removeBlock)}" .size="${"SMALL"}" .iconUrl="${m}" .variant="${"round"}" class="remove-block inline-button"></${o.Button.Button.litTagName}> </div> `}#f(e,t,r){return s.html` <div class="row padded" data-block-index="${t}" data-header-index="${r}"> ${this.#S(e.name,"header-name red")} <div class="separator">:</div> ${this.#S(e.value,"header-value")} <${o.Button.Button.litTagName} title="${l(d.addHeader)}" .size="${"SMALL"}" .iconUrl="${c}" .variant="${"round"}" class="add-header inline-button"></${o.Button.Button.litTagName}> <${o.Button.Button.litTagName} title="${l(d.removeHeader)}" .size="${"SMALL"}" .iconUrl="${m}" .variant="${"round"}" class="remove-header inline-button"></${o.Button.Button.litTagName}> </div> `}#S(e,t){return s.html`<span contenteditable="true" class="editable ${t}" tabindex="0" .innerText="${s.Directives.live(e)}"></span>`}}i.CustomElements.defineComponent("devtools-sources-headers-view",p);var v=Object.freeze({__proto__:null,HeadersView:u,HeadersViewComponent:p});export{v as HeadersView};
