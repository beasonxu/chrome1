{"version":3,"file":"lighthouse-helpers.js","sourceRoot":"","sources":["../../../../../../../../../third_party/devtools-frontend/src/test/e2e/helpers/lighthouse-helpers.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {click, goToResource, waitFor, waitForElementWithTextContent, waitForFunction} from '../../shared/helper.js';\n\nimport {waitForQuotaUsage} from './application-helpers.js';\n\nimport {type ElementHandle} from 'puppeteer';\n\nexport async function waitForLighthousePanelContentLoaded() {\n  await waitFor('.view-container[aria-label=\"Lighthouse panel\"]');\n}\n\nexport async function navigateToLighthouseTab(path?: string): Promise<ElementHandle<Element>> {\n  await click('#tab-lighthouse');\n  await waitForLighthousePanelContentLoaded();\n  if (path) {\n    await goToResource(path);\n  }\n\n  return waitFor('.lighthouse-start-view-fr');\n}\n\n// Instead of watching the worker or controller/panel internals, we wait for the Lighthouse renderer\n// to create the new report DOM. And we pull the LHR and artifacts off the lh-root node.\nexport async function waitForResult() {\n  return await waitForFunction(async () => {\n    const reportEl = await waitFor('.lh-root');\n    const result = await reportEl.evaluate(elem => {\n      // @ts-expect-error we installed this obj on a DOM element\n      const lhr = elem._lighthouseResultForTesting;\n      // @ts-expect-error we installed this obj on a DOM element\n      const artifacts = elem._lighthouseArtifactsForTesting;\n      // Delete so any subsequent runs don't accidentally reuse this.\n      // @ts-expect-error\n      delete elem._lighthouseResultForTesting;\n      // @ts-expect-error\n      delete elem._lighthouseArtifactsForTesting;\n      return {lhr, artifacts};\n    });\n    return {...result, reportEl};\n  });\n}\n\n// Can't reference ToolbarSettingCheckbox inside e2e\ntype CheckboxLabel = Element&{checkboxElement: HTMLInputElement};\n\n/**\n * Set the category checkboxes\n * @param selectedCategoryIds One of 'performance'|'accessibility'|'best-practices'|'seo'|'pwa'|'lighthouse-plugin-publisher-ads'\n */\nexport async function selectCategories(selectedCategoryIds: string[]) {\n  const startViewHandle = await waitFor('.lighthouse-start-view-fr');\n  const checkboxHandles = await startViewHandle.$$('[is=dt-checkbox]');\n  for (const checkboxHandle of checkboxHandles) {\n    await checkboxHandle.evaluate((dtCheckboxElem, selectedCategoryIds: string[]) => {\n      const elem = dtCheckboxElem as CheckboxLabel;\n      const categoryId = elem.getAttribute('data-lh-category') || '';\n      elem.checkboxElement.checked = selectedCategoryIds.includes(categoryId);\n      elem.checkboxElement.dispatchEvent(new Event('change'));  // Need change event to update the backing setting.\n    }, selectedCategoryIds);\n  }\n}\n\nexport async function selectMode(device: 'mobile'|'desktop') {\n  const startViewHandle = await waitFor('.lighthouse-start-view-fr');\n  await startViewHandle.$eval(`input[value=\"${device}\"][name=\"lighthouse.device_type\"]`, radioElem => {\n    (radioElem as HTMLInputElement).checked = true;\n    (radioElem as HTMLInputElement)\n        .dispatchEvent(new Event('change'));  // Need change event to update the backing setting.\n  });\n}\n\nexport async function setClearStorage(enabled: boolean) {\n  const toolbarHandle = await waitFor('.lighthouse-settings-pane .toolbar');\n  const label = await waitForElementWithTextContent('Clear storage', toolbarHandle);\n  await label.evaluate((label, enabled: boolean) => {\n    const rootNode = label.getRootNode() as ShadowRoot;\n    const checkboxId = label.getAttribute('for') as string;\n    const checkboxElem = rootNode.getElementById(checkboxId) as HTMLInputElement;\n    checkboxElem.checked = enabled;\n    checkboxElem.dispatchEvent(new Event('change'));  // Need change event to update the backing setting.\n  }, enabled);\n}\n\nexport async function setLegacyNavigation(enabled: boolean) {\n  const toolbarHandle = await waitFor('.lighthouse-settings-pane .toolbar');\n  const label = await waitForElementWithTextContent('Legacy navigation', toolbarHandle);\n  await label.evaluate((label, enabled: boolean) => {\n    const rootNode = label.getRootNode() as ShadowRoot;\n    const checkboxId = label.getAttribute('for') as string;\n    const checkboxElem = rootNode.getElementById(checkboxId) as HTMLInputElement;\n    checkboxElem.checked = enabled;\n    checkboxElem.dispatchEvent(new Event('change'));  // Need change event to update the backing setting.\n  }, enabled);\n}\n\nexport async function setThrottlingMethod(throttlingMethod: 'simulate'|'devtools') {\n  const toolbarHandle = await waitFor('.lighthouse-settings-pane .toolbar');\n  await toolbarHandle.evaluate((toolbar, throttlingMethod) => {\n    const selectElem = toolbar.shadowRoot?.querySelector('select') as HTMLSelectElement;\n    const optionElem = selectElem.querySelector(`option[value=\"${throttlingMethod}\"]`) as HTMLOptionElement;\n    optionElem.selected = true;\n    selectElem.dispatchEvent(new Event('change'));  // Need change event to update the backing setting.\n  }, throttlingMethod);\n}\n\nexport async function clickStartButton() {\n  const panel = await waitFor('.lighthouse-start-view-fr');\n  const button = await waitFor('button', panel);\n  await button.click();\n}\n\nexport async function isGenerateReportButtonDisabled() {\n  const button = await waitFor('.lighthouse-start-view-fr .primary-button');\n  return button.evaluate(element => (element as HTMLButtonElement).disabled);\n}\n\nexport async function openStorageView() {\n  await click('#tab-resources');\n  const STORAGE_SELECTOR = '[aria-label=\"Storage\"]';\n  await waitFor('.storage-group-list-item');\n  await waitFor(STORAGE_SELECTOR);\n  await click(STORAGE_SELECTOR);\n}\n\nexport async function clearSiteData() {\n  await goToResource('empty.html');\n  await openStorageView();\n  await click('#storage-view-clear-button');\n  await waitForQuotaUsage(quota => quota === 0);\n}\n\nexport async function waitForStorageUsage(p: (quota: number) => boolean) {\n  await openStorageView();\n  await waitForQuotaUsage(p);\n  await click('#tab-lighthouse');\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getAuditsBreakdown(lhr: any, flakyAudits: string[] = []) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const auditResults = Object.values(lhr.audits) as any[];\n  const irrelevantDisplayModes = new Set(['notApplicable', 'manual']);\n  const applicableAudits = auditResults.filter(\n      audit => !irrelevantDisplayModes.has(audit.scoreDisplayMode),\n  );\n\n  const informativeAudits = applicableAudits.filter(\n      audit => audit.scoreDisplayMode === 'informative',\n  );\n\n  const erroredAudits = applicableAudits.filter(\n      audit => audit.score === null && audit && !informativeAudits.includes(audit),\n  );\n\n  // 0.5 is the minimum score before we consider an audit \"failed\"\n  // https://github.com/GoogleChrome/lighthouse/blob/d956ec929d2b67028279f5e40d7e9a515a0b7404/report/renderer/util.js#L27\n  const failedAudits = applicableAudits.filter(\n      audit => audit.score !== null && audit.score < 0.5 && !flakyAudits.includes(audit.id),\n  );\n\n  return {auditResults, erroredAudits, failedAudits};\n}\n"]}