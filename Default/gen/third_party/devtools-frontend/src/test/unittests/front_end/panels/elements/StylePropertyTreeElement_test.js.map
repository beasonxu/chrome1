{"version":3,"file":"StylePropertyTreeElement_test.js","sourceRoot":"","sources":["../../../../../../../../../../../third_party/devtools-frontend/src/test/unittests/front_end/panels/elements/StylePropertyTreeElement_test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,GAAG,MAAM,0CAA0C,CAAC;AAIhE,OAAO,EAAC,0BAA0B,EAAC,MAAM,iCAAiC,CAAC;AAE3E,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAC;AAEtB,0BAA0B,CAAC,cAAc,EAAE,KAAK,IAAI,EAAE;IACpD,IAAI,QAA+B,CAAC;IAEpC,MAAM,gCAAgC,GAClC,CAAC,kBAAkB,EAAE,eAAe,EAAE,YAAY,EAAE,WAAW,EAAE,wBAAwB,CAAC,CAAC;IAC/F,MAAM,mCAAmC,GAAG,CAAC,uBAAuB,EAAE,6BAA6B,CAAC,CAAC;IACrG,MAAM,iCAAiC,GAAG,CAAC,sBAAsB,CAAC,CAAC;IACnE,MAAM,gCAAgC,GAAG,CAAC,qBAAqB,CAAC,CAAC;IAEjE,MAAM,CAAC,KAAK,IAAI,EAAE;QAChB,QAAQ,GAAG,MAAM,MAAM,CAAC,sDAAsD,CAAC,CAAC;IAClF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8BAA8B,EAAE,GAAG,EAAE;QACtC,MAAM,UAAU,GAAG,QAAQ,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;QAE3E,MAAM,gBAAgB,GAAG,IAAI,GAAG,CAAC,gBAAgB,CAAC,gBAAgB,CAC9D,UAAU,CAAC,QAAQ,EAA2B,EAAE,UAAU,CAAC,IAAI,EAA0B,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAC7G,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;QAC3B,MAAM,WAAW,GAAG,IAAI,GAAG,CAAC,WAAW,CAAC,WAAW,CAC/C,gBAAgB,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;QAC1F,MAAM,wBAAwB,GAAG,IAAI,QAAQ,CAAC,wBAAwB,CAAC,wBAAwB,CAC3F,UAAU,EAAE,gBAAgB,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAE1E,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,aAAa,CAAC,CAAC;QAE7C,MAAM,WAAW,GAAG,wBAAwB,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;QAE1E,MAAM,aAAa,GAAG,WAAW,CAAC,aAAa,EAAE,CAAC;QAClD,MAAM,gBAAgB,GAAG,WAAW,CAAC,gBAAgB,EAAE,CAAC;QACxD,MAAM,cAAc,GAAG,WAAW,CAAC,cAAc,EAAE,CAAC;QACpD,MAAM,aAAa,GAAG,WAAW,CAAC,aAAa,EAAE,CAAC;QAElD,MAAM,aAAa,GAAG,CAAC,yBAAmC,EAAE,YAAyC,EAAE,EAAE;YACvG,MAAM,iBAAiB,GAAG,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,KAAK,CAAC,CAAC;YACjF,MAAM,CAAC,SAAS,CAAC,iBAAiB,EAAE,yBAAyB,CAAC,CAAC;QACjE,CAAC,CAAC;QAEF,aAAa,CAAC,gCAAgC,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC;QACrE,aAAa,CAAC,mCAAmC,EAAE,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC3E,aAAa,CAAC,iCAAiC,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC;QACvE,aAAa,CAAC,gCAAgC,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC;IACvE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../../../../front_end/core/sdk/sdk.js';\n\nimport type * as ElementsModule from '../../../../../front_end/panels/elements/elements.js';\nimport type * as LegacyUI from '../../../../../front_end/ui/legacy/legacy.js';\nimport {describeWithRealConnection} from '../../helpers/RealConnection.js';\n\nconst {assert} = chai;\n\ndescribeWithRealConnection('Context menu', async () => {\n  let Elements: typeof ElementsModule;\n\n  const expectedHeaderSectionItemsLabels =\n      ['Copy declaration', 'Copy property', 'Copy value', 'Copy rule', 'Copy declaration as JS'];\n  const expectedClipboardSectionItemsLabels = ['Copy all declarations', 'Copy all declarations as JS'];\n  const expectedDefaultSectionItemsLabels = ['Copy all CSS changes'];\n  const expectedFooterSectionItemsLabels = ['View computed value'];\n\n  before(async () => {\n    Elements = await import('../../../../../front_end/panels/elements/elements.js');\n  });\n\n  it('should create a context menu', () => {\n    const stylesPane = Elements.StylesSidebarPane.StylesSidebarPane.instance();\n\n    const cssMatchedStyles = new SDK.CSSMatchedStyles.CSSMatchedStyles(\n        stylesPane.cssModel() as SDK.CSSModel.CSSModel, stylesPane.node() as SDK.DOMModel.DOMNode, null, null, [], [],\n        [], [], [], undefined);\n    const cssProperty = new SDK.CSSProperty.CSSProperty(\n        cssMatchedStyles.nodeStyles()[0], 0, '', '', true, false, true, false, '', undefined);\n    const stylePropertyTreeElement = new Elements.StylePropertyTreeElement.StylePropertyTreeElement(\n        stylesPane, cssMatchedStyles, cssProperty, false, false, false, true);\n\n    const event = new CustomEvent('contextmenu');\n\n    const contextMenu = stylePropertyTreeElement.createCopyContextMenu(event);\n\n    const headerSection = contextMenu.headerSection();\n    const clipboardSection = contextMenu.clipboardSection();\n    const defaultSection = contextMenu.defaultSection();\n    const footerSection = contextMenu.footerSection();\n\n    const verifySection = (expectedSectionItemLabels: string[], sectionItems: LegacyUI.ContextMenu.Item[]) => {\n      const sectionItemLabels = sectionItems.map(item => item.buildDescriptor().label);\n      assert.deepEqual(sectionItemLabels, expectedSectionItemLabels);\n    };\n\n    verifySection(expectedHeaderSectionItemsLabels, headerSection.items);\n    verifySection(expectedClipboardSectionItemsLabels, clipboardSection.items);\n    verifySection(expectedDefaultSectionItemsLabels, defaultSection.items);\n    verifySection(expectedFooterSectionItemsLabels, footerSection.items);\n  });\n});\n"]}