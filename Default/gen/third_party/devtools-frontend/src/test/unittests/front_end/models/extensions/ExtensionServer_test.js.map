{"version":3,"file":"ExtensionServer_test.js","sourceRoot":"","sources":["../../../../../../../../../../../third_party/devtools-frontend/src/test/unittests/front_end/models/extensions/ExtensionServer_test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,UAAU,MAAM,0DAA0D,CAAC;AAGvF,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAC;AAEtB,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;IAC1B,SAAS,OAAO;QACd,OAAQ,MAA4C,CAAC,MAAM,CAAC;IAC9D,CAAC;IAED,UAAU,CAAC,OAAO,CAAC,CAAC;IACpB,SAAS,CAAC,OAAO,CAAC,CAAC;IAEnB,EAAE,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;QACjD,MAAM,MAAM,GAAG,UAAU,CAAC,eAAe,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QACrF,MAAM,mBAAmB,GAAG;YAC1B,SAAS,EAAE,YAAY;YACvB,IAAI,EAAE,eAAe;YACrB,sBAAsB,EAAE,IAAI;SAC7B,CAAC;QACF,MAAM,CAAC,mBAAmB,CAAC,mBAAmB,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxE,MAAM,MAAM,GAAoC,EAAE,CAAC;QAClD,MAAqD,CAAC,MAAM,GAAG,MAAM,CAAC;QAEvE,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,GAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;QAExF,MAAM,cAAc;YAClB,KAAK,CAAC,SAAS,CAAC,SAAiB;gBAC/B,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YACnC,CAAC;YACD,KAAK,CAAC,aAAa,CAAC,IAAY;gBAC9B,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAC9B,CAAC;SACF;QACD,MAAM,MAAM,CAAC,QAAQ,EAAE,QAAQ,CAAC,+BAA+B,CAAC,IAAI,cAAc,EAAE,EAAE,MAAM,EAAE,iBAAiB,CAAC,CAAC;QAEjH,MAAM,OAAO,GAAG,UAAU,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,QAAQ,EAAE,CAAC;QAClF,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,MAAM,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;QAEpC,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,SAAS,CAAC;YACpC,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,EAAE;SACV,CAAC,CAAC;QAEH,MAAM,UAAU,GAAG,MAAM,MAAM,CAAC,aAAa,CAAC;YAC5C,IAAI,EAAE,QAAQ;SACf,CAAC,CAAC;QAEH,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAChD,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,EAAE,iBAAiB,CAAC,CAAC;QAC3E,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,EAAE,MAAM,CAAC,CAAC;QAC3D,MAAM,CAAC,eAAe,CAAC,MAAM,EAAE,4BAA4B,CAAC,CAAC;QAC7D,MAAM,CAAC,eAAe,CAAC,UAAU,EAAE,mBAAmB,CAAC,CAAC;IAC1D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Extensions from '../../../../../front_end/models/extensions/extensions.js';\nimport {type Chrome} from '../../../../../extension-api/ExtensionAPI.js';\n\nconst {assert} = chai;\n\ndescribe('Extensions', () => {\n  function cleanup() {\n    delete (window as {chrome?: Chrome.DevTools.Chrome}).chrome;\n  }\n\n  beforeEach(cleanup);\n  afterEach(cleanup);\n\n  it('can register a recorder extension', async () => {\n    const server = Extensions.ExtensionServer.ExtensionServer.instance({forceNew: true});\n    const extensionDescriptor = {\n      startPage: 'blank.html',\n      name: 'TestExtension',\n      exposeExperimentalAPIs: true,\n    };\n    server.addExtensionForTest(extensionDescriptor, window.location.origin);\n    const chrome: Partial<Chrome.DevTools.Chrome> = {};\n    (window as {chrome?: Partial<Chrome.DevTools.Chrome>}).chrome = chrome;\n\n    self.injectedExtensionAPI(extensionDescriptor, 'main', 'dark', [], () => {}, 1, window);\n\n    class RecorderPlugin {\n      async stringify(recording: object) {\n        return JSON.stringify(recording);\n      }\n      async stringifyStep(step: object) {\n        return JSON.stringify(step);\n      }\n    }\n    await chrome.devtools?.recorder.registerRecorderExtensionPlugin(new RecorderPlugin(), 'Test', 'text/javascript');\n\n    const manager = Extensions.RecorderPluginManager.RecorderPluginManager.instance();\n    assert.strictEqual(manager.plugins().length, 1);\n    const plugin = manager.plugins()[0];\n\n    const result = await plugin.stringify({\n      name: 'test',\n      steps: [],\n    });\n\n    const stepResult = await plugin.stringifyStep({\n      type: 'scroll',\n    });\n\n    assert.strictEqual(manager.plugins().length, 1);\n    assert.strictEqual(manager.plugins()[0].getMediaType(), 'text/javascript');\n    assert.strictEqual(manager.plugins()[0].getName(), 'Test');\n    assert.deepStrictEqual(result, '{\"name\":\"test\",\"steps\":[]}');\n    assert.deepStrictEqual(stepResult, '{\"type\":\"scroll\"}');\n  });\n});\n"]}