{"version":3,"file":"NetworkPersistenceManager_test.js","sourceRoot":"","sources":["../../../../../../../../../../../third_party/devtools-frontend/src/test/unittests/front_end/models/persistence/NetworkPersistenceManager_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nconst {assert} = chai;\n\nimport * as Persistence from '../../../../../front_end/models/persistence/persistence.js';\nimport * as Host from '../../../../../front_end/core/host/host.js';\nimport * as Root from '../../../../../front_end/core/root/root.js';\nimport * as SDK from '../../../../../front_end/core/sdk/sdk.js';\nimport type * as Platform from '../../../../../front_end/core/platform/platform.js';\nimport {describeWithMockConnection} from '../../helpers/MockConnection.js';\nimport {initializeGlobalVars, deinitializeGlobalVars, createTarget} from '../../helpers/EnvironmentHelpers.js';\nimport {createFileSystemUISourceCode} from '../../helpers/UISourceCodeHelpers.js';\nimport {createWorkspaceProject, setUpEnvironment} from '../../helpers/OverridesHelpers.js';\n\ndescribeWithMockConnection('NetworkPersistenceManager', () => {\n  let networkPersistenceManager: Persistence.NetworkPersistenceManager.NetworkPersistenceManager;\n\n  beforeEach(async () => {\n    SDK.NetworkManager.MultitargetNetworkManager.dispose();\n    Root.Runtime.experiments.register(Root.Runtime.ExperimentName.HEADER_OVERRIDES, '');\n    Root.Runtime.experiments.enableForTest(Root.Runtime.ExperimentName.HEADER_OVERRIDES);\n    const target = createTarget();\n    networkPersistenceManager =\n        await createWorkspaceProject('file:///path/to/overrides' as Platform.DevToolsPath.UrlString, [\n          {\n            name: '.headers',\n            path: 'www.example.com/',\n            content: `[\n            {\n              \"applyTo\": \"index.html\",\n              \"headers\": {\n                \"index-only\": \"only added to index.html\"\n              }\n            },\n            {\n              \"applyTo\": \"*.css\",\n              \"headers\": {\n                \"css-only\": \"only added to css files\"\n              }\n            },\n            {\n              \"applyTo\": \"path/to/*.js\",\n              \"headers\": {\n                \"another-header\": \"only added to specific path\"\n              }\n            }\n          ]`,\n          },\n          {\n            name: '.headers',\n            path: '',\n            content: `[\n            {\n              \"applyTo\": \"*\",\n              \"headers\": {\n                \"age\": \"overridden\"\n              }\n            }\n          ]`,\n          },\n          {name: 'helloWorld.html', path: 'www.example.com/', content: 'Hello World!'},\n        ]);\n    sinon.stub(target.fetchAgent(), 'invoke_enable');\n    await networkPersistenceManager.updateInterceptionPatternsForTests();\n  });\n\n  it('merges request headers with override without overlap', async () => {\n    const interceptedRequest = {\n      request: {\n        url: 'https://www.example.com/',\n      },\n      responseHeaders: [\n        {name: 'server', value: 'DevTools mock server'},\n      ],\n    } as SDK.NetworkManager.InterceptedRequest;\n\n    const expected = [\n      {name: 'server', value: 'DevTools mock server'},\n      {name: 'age', value: 'overridden'},\n      {name: 'index-only', value: 'only added to index.html'},\n    ];\n    assert.deepEqual(await networkPersistenceManager.handleHeaderInterception(interceptedRequest), expected);\n  });\n\n  it('merges request headers with override with overlap', async () => {\n    const interceptedRequest = {\n      request: {\n        url: 'https://www.example.com/index.html',\n      },\n      responseHeaders: [\n        {name: 'server', value: 'DevTools mock server'},\n        {name: 'age', value: '1'},\n      ],\n    } as SDK.NetworkManager.InterceptedRequest;\n\n    const expected = [\n      {name: 'server', value: 'DevTools mock server'},\n      {name: 'age', value: 'overridden'},\n      {name: 'index-only', value: 'only added to index.html'},\n    ];\n    assert.deepEqual(await networkPersistenceManager.handleHeaderInterception(interceptedRequest), expected);\n  });\n\n  it('merges request headers with override with file type wildcard', async () => {\n    const interceptedRequest = {\n      request: {\n        url: 'https://www.example.com/styles.css',\n      },\n      responseHeaders: [\n        {name: 'server', value: 'DevTools mock server'},\n        {name: 'age', value: '1'},\n      ],\n    } as SDK.NetworkManager.InterceptedRequest;\n\n    const expected = [\n      {name: 'server', value: 'DevTools mock server'},\n      {name: 'age', value: 'overridden'},\n      {name: 'css-only', value: 'only added to css files'},\n    ];\n    assert.deepEqual(await networkPersistenceManager.handleHeaderInterception(interceptedRequest), expected);\n  });\n\n  it('merges request headers with override with specific path', async () => {\n    const interceptedRequest = {\n      request: {\n        url: 'https://www.example.com/path/to/script.js',\n      },\n      responseHeaders: [\n        {name: 'server', value: 'DevTools mock server'},\n        {name: 'age', value: '1'},\n      ],\n    } as SDK.NetworkManager.InterceptedRequest;\n\n    const expected = [\n      {name: 'server', value: 'DevTools mock server'},\n      {name: 'age', value: 'overridden'},\n      {name: 'another-header', value: 'only added to specific path'},\n    ];\n    assert.deepEqual(await networkPersistenceManager.handleHeaderInterception(interceptedRequest), expected);\n  });\n\n  it('merges request headers only when domain matches', async () => {\n    const interceptedRequest = {\n      request: {\n        url: 'https://www.web.dev/index.html',\n      },\n      responseHeaders: [\n        {name: 'server', value: 'DevTools mock server'},\n      ],\n    } as SDK.NetworkManager.InterceptedRequest;\n\n    const expected = [\n      {name: 'server', value: 'DevTools mock server'},\n      {name: 'age', value: 'overridden'},\n    ];\n    assert.deepEqual(await networkPersistenceManager.handleHeaderInterception(interceptedRequest), expected);\n  });\n\n  it('translates URLs into raw and encoded paths', async () => {\n    let toTest = [\n      // Simple tests.\n      {\n        url: 'www.example.com/',\n        raw: 'www.example.com/index.html',\n        encoded: 'www.example.com/index.html',\n      },\n      {\n        url: 'www.example.com/simple',\n        raw: 'www.example.com/simple',\n        encoded: 'www.example.com/simple',\n      },\n      {\n        url: 'www.example.com/hello/foo/bar',\n        raw: 'www.example.com/hello/foo/bar',\n        encoded: 'www.example.com/hello/foo/bar',\n      },\n      {\n        url: 'www.example.com/.',\n        raw: 'www.example.com/.',\n        encoded: 'www.example.com/',\n      },\n      {\n        url: 'localhost:8090/endswith.',\n        raw: 'localhost:8090/endswith.',\n        encoded: 'localhost:8090/endswith.',\n      },\n      // Query parameters.\n      {\n        url: 'example.com/fo?o/bar',\n        raw: 'example.com/fo?o%2Fbar',\n        encoded: 'example.com/fo%3Fo%252Fbar',\n      },\n      {\n        url: 'example.com/foo?/bar',\n        raw: 'example.com/foo?%2Fbar',\n        encoded: 'example.com/foo%3F%252Fbar',\n      },\n      {\n        url: 'example.com/foo/?bar',\n        raw: 'example.com/foo/?bar',\n        encoded: 'example.com/foo/%3Fbar',\n      },\n      {\n        url: 'example.com/?foo/bar/3',\n        raw: 'example.com/?foo%2Fbar%2F3',\n        encoded: 'example.com/%3Ffoo%252Fbar%252F3',\n      },\n      {\n        url: 'example.com/foo/bar/?3hello/bar',\n        raw: 'example.com/foo/bar/?3hello%2Fbar',\n        encoded: 'example.com/foo/bar/%3F3hello%252Fbar',\n      },\n      {url: 'https://www.example.com/?foo=bar', raw: 'www.example.com/?foo=bar', encoded: 'www.example.com/%3Ffoo=bar'},\n      {\n        url: 'http://www.example.com/?foo=bar/',\n        raw: 'www.example.com/?foo=bar%2F',\n        encoded: 'www.example.com/%3Ffoo=bar%252F',\n      },\n      {\n        url: 'http://www.example.com/?foo=bar?',\n        raw: 'www.example.com/?foo=bar?',\n        encoded: 'www.example.com/%3Ffoo=bar%3F',\n      },\n      // Hash parameters.\n      {\n        url: 'example.com/?foo/bar/3#hello/bar',\n        raw: 'example.com/?foo%2Fbar%2F3',\n        encoded: 'example.com/%3Ffoo%252Fbar%252F3',\n      },\n      {\n        url: 'example.com/#foo/bar/3hello/bar',\n        raw: 'example.com/index.html',\n        encoded: 'example.com/index.html',\n      },\n      {\n        url: 'example.com/foo/bar/#?3hello/bar',\n        raw: 'example.com/foo/bar/index.html',\n        encoded: 'example.com/foo/bar/index.html',\n      },\n      {\n        url: 'example.com/foo.js#',\n        raw: 'example.com/foo.js',\n        encoded: 'example.com/foo.js',\n      },\n      {\n        url: 'http://www.web.dev/path/page.html#anchor',\n        raw: 'www.web.dev/path/page.html',\n        encoded: 'www.web.dev/path/page.html',\n      },\n      {\n        url: 'http://www.example.com/file&$*?.html',\n        raw: 'www.example.com/file&$%2A?.html',\n        encoded: 'www.example.com/file&$%252A%3F.html',\n      },\n      {\n        url: 'localhost:8090/',\n        raw: 'localhost:8090/index.html',\n        encoded: 'localhost:8090/index.html',\n      },\n      {url: 'localhost:8090/lpt1', raw: 'localhost:8090/lpt1', encoded: 'localhost:8090/lpt1'},\n      {\n        url: 'example.com/foo .js',\n        raw: 'example.com/foo%20.js',\n        encoded: 'example.com/foo%2520.js',\n      },\n      {\n        url: 'example.com///foo.js',\n        raw: 'example.com/foo.js',\n        encoded: 'example.com/foo.js',\n      },\n      {\n        url: 'example.com///',\n        raw: 'example.com/index.html',\n        encoded: 'example.com/index.html',\n      },\n      // Very long file names.\n      {\n        url: 'example.com' +\n            '/THIS/PATH/IS_MORE_THAN/200/Chars'.repeat(8),\n        raw: 'example.com/longurls/Chars-141a715a',\n        encoded: 'example.com/longurls/Chars-141a715a',\n      },\n      {\n        url: ('example.com' +\n              '/THIS/PATH/IS_LESS_THAN/200/Chars'.repeat(5))\n                 .slice(0, -1),\n        raw:\n            'example.com/THIS/PATH/IS_LESS_THAN/200/Chars/THIS/PATH/IS_LESS_THAN/200/Chars/THIS/PATH/IS_LESS_THAN/200/Chars/THIS/PATH/IS_LESS_THAN/200/Chars/THIS/PATH/IS_LESS_THAN/200/Char',\n        encoded:\n            'example.com/THIS/PATH/IS_LESS_THAN/200/Chars/THIS/PATH/IS_LESS_THAN/200/Chars/THIS/PATH/IS_LESS_THAN/200/Chars/THIS/PATH/IS_LESS_THAN/200/Chars/THIS/PATH/IS_LESS_THAN/200/Char',\n      },\n    ];\n    if (Host.Platform.isWin()) {\n      toTest = [\n        {\n          url: 'https://www.example.com/?foo=bar',\n          raw: 'www.example.com/%3Ffoo=bar',\n          encoded: 'www.example.com/%253Ffoo=bar',\n        },\n        {\n          url: 'http://www.web.dev/path/page.html#anchor',\n          raw: 'www.web.dev/path/page.html',\n          encoded: 'www.web.dev/path/page.html',\n        },\n        {\n          url: 'http://www.example.com/?foo=bar/',\n          raw: 'www.example.com/%3Ffoo=bar%2F',\n          encoded: 'www.example.com/%253Ffoo=bar%252F',\n        },\n        {\n          url: 'http://www.example.com/?foo=bar?',\n          raw: 'www.example.com/%3Ffoo=bar%3F',\n          encoded: 'www.example.com/%253Ffoo=bar%253F',\n        },\n        {\n          url: 'http://www.example.com/file&$*?.html',\n          raw: 'www.example.com/file&$%2A%3F.html',\n          encoded: 'www.example.com/file&$%252A%253F.html',\n        },\n        {\n          url: 'localhost:8090/',\n          raw: 'localhost%3A8090/index.html',\n          encoded: 'localhost%253A8090/index.html',\n        },\n        // Windows cannot end with . (period) and space.\n        {\n          url: 'example.com/foo.js.',\n          raw: 'example.com/foo.js%2E',\n          encoded: 'example.com/foo.js%252E',\n        },\n        {\n          url: 'localhost:8090/endswith.',\n          raw: 'localhost%3A8090/endswith%2E',\n          encoded: 'localhost%253A8090/endswith%252E',\n        },\n        {\n          url: 'example.com/foo.js ',\n          raw: 'example.com/foo.js%20',\n          encoded: 'example.com/foo.js%2520',\n        },\n        // Reserved filenames on Windows.\n        {\n          url: 'example.com/CON',\n          raw: 'example.com/%43%4F%4E',\n          encoded: 'example.com/%2543%254F%254E',\n        },\n        {\n          url: 'example.com/cOn',\n          raw: 'example.com/%63%4F%6E',\n          encoded: 'example.com/%2563%254F%256E',\n        },\n        {\n          url: 'example.com/cOn/hello',\n          raw: 'example.com/%63%4F%6E/hello',\n          encoded: 'example.com/%2563%254F%256E/hello',\n        },\n        {\n          url: 'example.com/PRN',\n          raw: 'example.com/%50%52%4E',\n          encoded: 'example.com/%2550%2552%254E',\n        },\n        {\n          url: 'example.com/AUX',\n          raw: 'example.com/%41%55%58',\n          encoded: 'example.com/%2541%2555%2558',\n        },\n        {\n          url: 'example.com/NUL',\n          raw: 'example.com/%4E%55%4C',\n          encoded: 'example.com/%254E%2555%254C',\n        },\n        {\n          url: 'example.com/COM1',\n          raw: 'example.com/%43%4F%4D%31',\n          encoded: 'example.com/%2543%254F%254D%2531',\n        },\n        {\n          url: 'example.com/COM2',\n          raw: 'example.com/%43%4F%4D%32',\n          encoded: 'example.com/%2543%254F%254D%2532',\n        },\n        {\n          url: 'example.com/COM3',\n          raw: 'example.com/%43%4F%4D%33',\n          encoded: 'example.com/%2543%254F%254D%2533',\n        },\n        {\n          url: 'example.com/COM4',\n          raw: 'example.com/%43%4F%4D%34',\n          encoded: 'example.com/%2543%254F%254D%2534',\n        },\n        {\n          url: 'example.com/COM5',\n          raw: 'example.com/%43%4F%4D%35',\n          encoded: 'example.com/%2543%254F%254D%2535',\n        },\n        {\n          url: 'example.com/COM6',\n          raw: 'example.com/%43%4F%4D%36',\n          encoded: 'example.com/%2543%254F%254D%2536',\n        },\n        {\n          url: 'example.com/COM7',\n          raw: 'example.com/%43%4F%4D%37',\n          encoded: 'example.com/%2543%254F%254D%2537',\n        },\n        {\n          url: 'example.com/COM8',\n          raw: 'example.com/%43%4F%4D%38',\n          encoded: 'example.com/%2543%254F%254D%2538',\n        },\n        {\n          url: 'example.com/COM9',\n          raw: 'example.com/%43%4F%4D%39',\n          encoded: 'example.com/%2543%254F%254D%2539',\n        },\n        {\n          url: 'localhost:8090/lpt1',\n          raw: 'localhost%3A8090/%6C%70%74%31',\n          encoded: 'localhost%253A8090/%256C%2570%2574%2531',\n        },\n        {\n          url: 'example.com/LPT1',\n          raw: 'example.com/%4C%50%54%31',\n          encoded: 'example.com/%254C%2550%2554%2531',\n        },\n        {\n          url: 'example.com/LPT2',\n          raw: 'example.com/%4C%50%54%32',\n          encoded: 'example.com/%254C%2550%2554%2532',\n        },\n        {\n          url: 'example.com/LPT3',\n          raw: 'example.com/%4C%50%54%33',\n          encoded: 'example.com/%254C%2550%2554%2533',\n        },\n        {\n          url: 'example.com/LPT4',\n          raw: 'example.com/%4C%50%54%34',\n          encoded: 'example.com/%254C%2550%2554%2534',\n        },\n        {\n          url: 'example.com/LPT5',\n          raw: 'example.com/%4C%50%54%35',\n          encoded: 'example.com/%254C%2550%2554%2535',\n        },\n        {\n          url: 'example.com/LPT6',\n          raw: 'example.com/%4C%50%54%36',\n          encoded: 'example.com/%254C%2550%2554%2536',\n        },\n        {\n          url: 'example.com/LPT7',\n          raw: 'example.com/%4C%50%54%37',\n          encoded: 'example.com/%254C%2550%2554%2537',\n        },\n        {\n          url: 'example.com/LPT8',\n          raw: 'example.com/%4C%50%54%38',\n          encoded: 'example.com/%254C%2550%2554%2538',\n        },\n        {\n          url: 'example.com/LPT9',\n          raw: 'example.com/%4C%50%54%39',\n          encoded: 'example.com/%254C%2550%2554%2539',\n        },\n\n      ];\n    }\n    toTest.forEach(testStrings => {\n      assert.deepEqual(\n          networkPersistenceManager.rawPathFromUrl(testStrings.url as Platform.DevToolsPath.UrlString),\n          testStrings.raw);\n      assert.deepEqual(\n          networkPersistenceManager.encodedPathFromUrl(testStrings.url as Platform.DevToolsPath.UrlString),\n          testStrings.encoded);\n    });\n  });\n});\n\ndescribeWithMockConnection('NetworkPersistenceManager', () => {\n  beforeEach(() => {\n    SDK.NetworkManager.MultitargetNetworkManager.dispose();\n    Root.Runtime.experiments.register(Root.Runtime.ExperimentName.HEADER_OVERRIDES, '');\n    Root.Runtime.experiments.enableForTest(Root.Runtime.ExperimentName.HEADER_OVERRIDES);\n  });\n\n  it('updates active state when target detach and attach', async () => {\n    const {networkPersistenceManager} = await setUpEnvironment();\n    const {project} =\n        createFileSystemUISourceCode({url: 'file:///tmp' as Platform.DevToolsPath.UrlString, mimeType: 'text/plain'});\n    await networkPersistenceManager.setProject(project);\n    const targetManager = SDK.TargetManager.TargetManager.instance();\n    assert.isNull(targetManager.mainTarget());\n    assert.isFalse(networkPersistenceManager.active());\n\n    const target = await createTarget();\n    assert.isTrue(networkPersistenceManager.active());\n\n    targetManager.removeTarget(target);\n\n    assert.isFalse(networkPersistenceManager.active());\n  });\n});\n\ndescribe('NetworkPersistenceManager', () => {\n  before(async () => {\n    await initializeGlobalVars();\n  });\n  after(async () => {\n    await deinitializeGlobalVars();\n  });\n\n  it('escapes patterns to be used in RegExes', () => {\n    assert.strictEqual(Persistence.NetworkPersistenceManager.escapeRegex('www.example.com/'), 'www\\\\.example\\\\.com/');\n    assert.strictEqual(\n        Persistence.NetworkPersistenceManager.escapeRegex('www.example.com/index.html'),\n        'www\\\\.example\\\\.com/index\\\\.html');\n    assert.strictEqual(\n        Persistence.NetworkPersistenceManager.escapeRegex('www.example.com/*'), 'www\\\\.example\\\\.com/.*');\n    assert.strictEqual(\n        Persistence.NetworkPersistenceManager.escapeRegex('www.example.com/*.js'), 'www\\\\.example\\\\.com/.*\\\\.js');\n    assert.strictEqual(\n        Persistence.NetworkPersistenceManager.escapeRegex('www.example.com/file([{with-special$_^chars}])'),\n        'www\\\\.example\\\\.com/file\\\\(\\\\[\\\\{with\\\\-special\\\\$_\\\\^chars\\\\}\\\\]\\\\)');\n    assert.strictEqual(\n        Persistence.NetworkPersistenceManager.escapeRegex('www.example.com/page.html?foo=bar'),\n        'www\\\\.example\\\\.com/page\\\\.html\\\\?foo=bar');\n    assert.strictEqual(\n        Persistence.NetworkPersistenceManager.escapeRegex('www.example.com/*?foo=bar'),\n        'www\\\\.example\\\\.com/.*\\\\?foo=bar');\n  });\n\n  it('detects when the tail of a path matches with a default index file', () => {\n    assert.deepEqual(\n        Persistence.NetworkPersistenceManager.extractDirectoryIndex('index.html'), {head: '', tail: 'index.html'});\n    assert.deepEqual(\n        Persistence.NetworkPersistenceManager.extractDirectoryIndex('index.htm'), {head: '', tail: 'index.htm'});\n    assert.deepEqual(\n        Persistence.NetworkPersistenceManager.extractDirectoryIndex('index.php'), {head: '', tail: 'index.php'});\n    assert.deepEqual(Persistence.NetworkPersistenceManager.extractDirectoryIndex('index.ht'), {head: 'index.ht'});\n    assert.deepEqual(Persistence.NetworkPersistenceManager.extractDirectoryIndex('*.html'), {head: '', tail: '*.html'});\n    assert.deepEqual(Persistence.NetworkPersistenceManager.extractDirectoryIndex('*.htm'), {head: '', tail: '*.htm'});\n    assert.deepEqual(\n        Persistence.NetworkPersistenceManager.extractDirectoryIndex('path/*.html'), {head: 'path/', tail: '*.html'});\n    assert.deepEqual(Persistence.NetworkPersistenceManager.extractDirectoryIndex('foo*.html'), {head: 'foo*.html'});\n    assert.deepEqual(Persistence.NetworkPersistenceManager.extractDirectoryIndex('a*'), {head: 'a*'});\n    assert.deepEqual(Persistence.NetworkPersistenceManager.extractDirectoryIndex('a/*'), {head: 'a/', tail: '*'});\n  });\n\n  it('merges headers which do not overlap', async () => {\n    const {networkPersistenceManager} = await setUpEnvironment();\n    const baseHeaders = [{\n      name: 'age',\n      value: '0',\n    }];\n    const overrideHeaders = {\n      'accept-ranges': 'bytes',\n    };\n    const merged = [\n      {name: 'age', value: '0'},\n      {name: 'accept-ranges', value: 'bytes'},\n    ];\n    assert.deepEqual(networkPersistenceManager.mergeHeaders(baseHeaders, overrideHeaders), merged);\n  });\n\n  it('merges headers which overlap', async () => {\n    const {networkPersistenceManager} = await setUpEnvironment();\n    const baseHeaders = [{\n      name: 'age',\n      value: '0',\n    }];\n    const overrideHeaders = {\n      'accept-ranges': 'bytes',\n      'age': '1',\n    };\n    const merged = [\n      {name: 'age', value: '1'},\n      {name: 'accept-ranges', value: 'bytes'},\n    ];\n    assert.deepEqual(networkPersistenceManager.mergeHeaders(baseHeaders, overrideHeaders), merged);\n  });\n\n  it('generates header patterns', async () => {\n    const {networkPersistenceManager} = await setUpEnvironment();\n    const headers = `[\n      {\n        \"applyTo\": \"*\",\n        \"headers\": {\n          \"age\": \"0\"\n        }\n      },\n      {\n        \"applyTo\": \"page.html\",\n        \"headers\": {\n          \"age\": \"1\"\n        }\n      },\n      {\n        \"applyTo\": \"index.html\",\n        \"headers\": {\n          \"age\": \"2\"\n        }\n      },\n      {\n        \"applyTo\": \"nested/path/*.js\",\n        \"headers\": {\n          \"age\": \"3\"\n        }\n      },\n      {\n        \"applyTo\": \"*/path/*.js\",\n        \"headers\": {\n          \"age\": \"4\"\n        }\n      }\n    ]`;\n\n    const {uiSourceCode} = createFileSystemUISourceCode({\n      url: 'file:///path/to/overrides/www.example.com/.headers' as Platform.DevToolsPath.UrlString,\n      content: headers,\n      mimeType: 'text/plain',\n      fileSystemPath: 'file:///path/to/overrides',\n    });\n\n    const expectedPatterns = [\n      'http?://www.example.com/*',\n      'http?://www.example.com/page.html',\n      'http?://www.example.com/index.html',\n      'http?://www.example.com/',\n      'http?://www.example.com/nested/path/*.js',\n      'http?://www.example.com/*/path/*.js',\n    ];\n\n    const {headerPatterns, path, overridesWithRegex} =\n        await networkPersistenceManager.generateHeaderPatterns(uiSourceCode);\n    assert.deepEqual(Array.from(headerPatterns).sort(), expectedPatterns.sort());\n\n    const expectedMapping = [\n      {\n        applyTo: /^https?:\\/\\/www\\.example\\.com\\/(.*)?$/.toString(),\n        headers: {age: '0'},\n      },\n      {\n        applyTo: /^https?:\\/\\/www\\.example\\.com\\/page\\.html$/.toString(),\n        headers: {age: '1'},\n      },\n      {\n        applyTo: /^https?:\\/\\/www\\.example\\.com\\/(index\\.html)?$/.toString(),\n        headers: {age: '2'},\n      },\n      {\n        applyTo: /^https?:\\/\\/www\\.example\\.com\\/nested\\/path\\/.*\\.js$/.toString(),\n        headers: {age: '3'},\n      },\n      {\n        applyTo: /^https?:\\/\\/www\\.example\\.com\\/.*\\/path\\/.*\\.js$/.toString(),\n        headers: {age: '4'},\n      },\n    ];\n\n    assert.strictEqual(path, 'www.example.com/');\n    const actualMapping = overridesWithRegex.map(\n        override => ({applyTo: override.applyToRegex.toString(), headers: override.headers}),\n    );\n    assert.deepEqual(actualMapping, expectedMapping);\n  });\n});\n"]}