{"version":3,"file":"TimelineUIUtils_test.js","sourceRoot":"","sources":["../../../../../../../../../../../third_party/devtools-frontend/src/test/unittests/front_end/panels/timeline/TimelineUIUtils_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../../../../front_end/core/sdk/sdk.js';\nimport * as TimelineModel from '../../../../../front_end/models/timeline_model/timeline_model.js';\nimport * as Timeline from '../../../../../front_end/panels/timeline/timeline.js';\nimport {FakeStorage} from '../../helpers/TimelineHelpers.js';\n\nconst {assert} = chai;\n\ninterface FakeLayoutShiftProperties {\n  startTime: number;\n  hadRecentInput: boolean;\n  weightedScoreDelta?: number;\n}\n\nfunction makeFakeLayoutShift(properties: FakeLayoutShiftProperties): SDK.TracingModel.Event {\n  const fakeLayoutShift = {\n    args: {\n      data: {\n        had_recent_input: properties.hadRecentInput,\n        weighted_score_delta: properties.weightedScoreDelta,\n      },\n    },\n    startTime: properties.startTime,\n  } as unknown as SDK.TracingModel.Event;\n\n  return fakeLayoutShift;\n}\n\ndescribe('groupLayoutShiftsIntoClusters', () => {\n  it('does not include layout shifts that have recent user input', () => {\n    const shiftWithUserInput = makeFakeLayoutShift({\n      hadRecentInput: true,\n      weightedScoreDelta: 0.01,\n      startTime: 2000,\n    });\n    const layoutShifts: SDK.TracingModel.Event[] = [shiftWithUserInput];\n    Timeline.TimelineUIUtils.assignLayoutShiftsToClusters(layoutShifts);\n    assert.isUndefined(shiftWithUserInput.args.data._current_cluster_id);\n  });\n\n  it('does not include layout shifts that have no weighted_score_delta', () => {\n    const shiftWithNoWeightedScore = makeFakeLayoutShift({\n      hadRecentInput: false,\n      weightedScoreDelta: undefined,\n      startTime: 2000,\n    });\n    const layoutShifts: SDK.TracingModel.Event[] = [shiftWithNoWeightedScore];\n    Timeline.TimelineUIUtils.assignLayoutShiftsToClusters(layoutShifts);\n    assert.isUndefined(shiftWithNoWeightedScore.args.data._current_cluster_id);\n  });\n\n  it('correctly combines events that are within the same session', () => {\n    const shiftOne = makeFakeLayoutShift({\n      hadRecentInput: false,\n      weightedScoreDelta: 0.01,\n      startTime: 2000,\n    });\n\n    const shiftTwo = makeFakeLayoutShift({\n      hadRecentInput: false,\n      weightedScoreDelta: 0.02,\n      startTime: shiftOne.startTime + 100,\n    });\n    const layoutShifts: SDK.TracingModel.Event[] = [shiftOne, shiftTwo];\n    Timeline.TimelineUIUtils.assignLayoutShiftsToClusters(layoutShifts);\n\n    assert.strictEqual(shiftOne.args.data._current_cluster_id, 1);\n    assert.strictEqual(shiftTwo.args.data._current_cluster_id, 1);\n    assert.strictEqual(shiftOne.args.data._current_cluster_score, 0.03);\n    assert.strictEqual(shiftTwo.args.data._current_cluster_score, 0.03);\n  });\n\n  it('correctly splits events into multiple clusters', () => {\n    const shiftOne = makeFakeLayoutShift({\n      hadRecentInput: false,\n      weightedScoreDelta: 0.01,\n      startTime: 2000,\n    });\n\n    const shiftTwo = makeFakeLayoutShift({\n      hadRecentInput: false,\n      weightedScoreDelta: 0.02,\n      startTime: shiftOne.startTime + 100,\n    });\n\n    const shiftThree = makeFakeLayoutShift({\n      hadRecentInput: false,\n      weightedScoreDelta: 0.05,\n      startTime: 10000,\n    });\n\n    const layoutShifts: SDK.TracingModel.Event[] = [shiftOne, shiftTwo, shiftThree];\n    Timeline.TimelineUIUtils.assignLayoutShiftsToClusters(layoutShifts);\n\n    assert.strictEqual(shiftOne.args.data._current_cluster_id, 1);\n    assert.strictEqual(shiftTwo.args.data._current_cluster_id, 1);\n    assert.strictEqual(shiftOne.args.data._current_cluster_score, 0.03);\n    assert.strictEqual(shiftTwo.args.data._current_cluster_score, 0.03);\n\n    assert.strictEqual(shiftThree.args.data._current_cluster_id, 2);\n    assert.strictEqual(shiftThree.args.data._current_cluster_score, 0.05);\n  });\n});\n\ndescribe('TimelineUIUtils', () => {\n  let tracingModel: SDK.TracingModel.TracingModel;\n  let process: SDK.TracingModel.Process;\n  let thread: SDK.TracingModel.Thread;\n  const SCRIPT_ID = 'SCRIPT_ID';\n\n  beforeEach(() => {\n    tracingModel = new SDK.TracingModel.TracingModel(new FakeStorage());\n    process = new SDK.TracingModel.Process(tracingModel, 1);\n    thread = new SDK.TracingModel.Thread(process, 1);\n  });\n\n  it('creates top frame location text for function calls', async () => {\n    const event =\n        new SDK.TracingModel.Event('devtools.timeline', 'FunctionCall', SDK.TracingModel.Phase.Complete, 10, thread);\n\n    event.addArgs({\n      data: {\n        functionName: 'test',\n        url: 'test.js',\n        scriptId: SCRIPT_ID,\n        lineNumber: 0,\n        columnNumber: 0,\n      },\n    });\n    assert.strictEqual(\n        'test.js:1:1', await Timeline.TimelineUIUtils.TimelineUIUtils.buildDetailsTextForTraceEvent(event));\n  });\n\n  it('creates top frame location text as a fallback', async () => {\n    // 'TimerInstall' is chosen such that we run into the 'default' case.\n    const event =\n        new SDK.TracingModel.Event('devtools.timeline', 'TimerInstall', SDK.TracingModel.Phase.Complete, 10, thread);\n\n    event.addArgs({\n      data: {\n        stackTrace: [\n          {\n            functionName: 'test',\n            url: 'test.js',\n            scriptId: SCRIPT_ID,\n            lineNumber: 0,\n            columnNumber: 0,\n          },\n        ],\n      },\n    });\n    const data = TimelineModel.TimelineModel.TimelineData.forEvent(event);\n    data.stackTrace = event.args.data.stackTrace;\n    assert.strictEqual(\n        'test.js:1:1', await Timeline.TimelineUIUtils.TimelineUIUtils.buildDetailsTextForTraceEvent(event));\n  });\n});\n"]}