{"version":3,"file":"SourceMapManager_test.js","sourceRoot":"","sources":["../../../../../../../../../../../third_party/devtools-frontend/src/test/unittests/front_end/core/sdk/SourceMapManager_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Host from '../../../../../front_end/core/host/host.js';\nimport type * as Platform from '../../../../../front_end/core/platform/platform.js';\nimport * as SDK from '../../../../../front_end/core/sdk/sdk.js';\nimport type * as Protocol from '../../../../../front_end/generated/protocol.js';\nimport {createTarget} from '../../helpers/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../helpers/MockConnection.js';\n\nconst {assert} = chai;\n\ninterface LoadResult {\n  success: boolean;\n  content: string;\n  errorDescription: Host.ResourceLoader.LoadErrorDescription;\n}\n\ndescribeWithMockConnection('SourceMapManager', () => {\n  const sourceMapContent = JSON.stringify({\n    'version': 3,\n    'file': '/script.js',\n    'mappings': '',\n    'sources': [\n      '/original-script.js',\n    ],\n  });\n\n  const loadSourceMap = async(_url: string): Promise<LoadResult> => {\n    return {\n      success: true,\n      content: sourceMapContent,\n      errorDescription: {message: '', statusCode: 0, netError: 0, netErrorName: '', urlValid: true},\n    };\n  };\n\n  it('uses url for a worker\\'s source maps from frame', async () => {\n    SDK.PageResourceLoader.PageResourceLoader.instance(\n        {forceNew: true, loadOverride: loadSourceMap, maxConcurrentLoads: 1, loadTimeout: 2000});\n\n    const frameUrl = 'https://frame-host/index.html' as Platform.DevToolsPath.UrlString;\n    const scriptUrl = 'https://script-host/script.js' as Platform.DevToolsPath.UrlString;\n    const sourceUrl = 'script.js' as Platform.DevToolsPath.UrlString;\n    const sourceMapUrl = 'script.js.map' as Platform.DevToolsPath.UrlString;\n\n    const mainTarget =\n        createTarget({id: 'main' as Protocol.Target.TargetID, name: 'main', type: SDK.Target.Type.Frame});\n    mainTarget.setInspectedURL(frameUrl);\n\n    const workerTarget = createTarget({\n      id: 'worker' as Protocol.Target.TargetID,\n      name: 'worker',\n      type: SDK.Target.Type.Worker,\n      parentTarget: mainTarget,\n    });\n\n    const debuggerModel = workerTarget.model(SDK.DebuggerModel.DebuggerModel);\n    assert.isNotNull(debuggerModel);\n    if (debuggerModel === null) {\n      return;\n    }\n\n    const sourceMapManager = debuggerModel.sourceMapManager();\n\n    const script = new SDK.Script.Script(\n        debuggerModel, '1' as Protocol.Runtime.ScriptId, scriptUrl, 0, 0, 0, 0, 0, '', false, false, sourceMapUrl,\n        false, 0, null, null, null, null, null, null);\n\n    sourceMapManager.attachSourceMap(script, sourceUrl, sourceMapUrl);\n\n    const sourceMap = await sourceMapManager.sourceMapForClientPromise(script);\n    // Check that the URLs are resolved relative to the frame.\n    assert.strictEqual(sourceMap?.url(), 'https://frame-host/script.js.map' as Platform.DevToolsPath.UrlString);\n    assert.deepEqual(\n        sourceMap?.sourceURLs(), ['https://frame-host/original-script.js' as Platform.DevToolsPath.UrlString]);\n  });\n});\n"]}