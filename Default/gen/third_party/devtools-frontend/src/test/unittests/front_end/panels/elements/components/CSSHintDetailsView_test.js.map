{"version":3,"file":"CSSHintDetailsView_test.js","sourceRoot":"","sources":["../../../../../../../../../../../../third_party/devtools-frontend/src/test/unittests/front_end/panels/elements/components/CSSHintDetailsView_test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,kBAAkB,MAAM,sEAAsE,CAAC;AAE3G,OAAO,EAAC,uBAAuB,EAAC,MAAM,wCAAwC,CAAC;AAC/E,OAAO,EAAC,gBAAgB,EAAE,oBAAoB,EAAC,MAAM,gCAAgC,CAAC;AAEtF,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAC;AAEtB,uBAAuB,CAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;IACrD,IAAI,QAA+B,CAAC;IAEpC,MAAM,CAAC,KAAK,IAAI,EAAE;QACd,QAAQ,GAAG,MAAM,MAAM,CAAC,yDAAyD,CAAC,CAAC;IACvF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;QACrC,MAAM,WAAW,GAAG,IAAI,QAAQ,CAAC,gBAAgB,CAAC,IAAI,8EAElD,yNAAyN,EACzN,qJAAqJ,EACrJ,eAAe,CAClB,CAAC;QAEF,MAAM,cAAc,GAAG,IAAI,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;QACjG,oBAAoB,CAAC,cAAc,CAAC,CAAC;QAErC,gBAAgB,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QAE5C,MAAM,UAAU,GAAG,cAAc,CAAC,UAAU,CAAC;QAE7C,MAAM,mBAAmB,GAAG,UAAU,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,IAAI,CAAC;QACpF,MAAM,wBAAwB,GAAG,UAAU,CAAC,aAAa,CAAC,0BAA0B,CAAC,KAAK,IAAI,CAAC;QAC/F,MAAM,sBAAsB,GAAG,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,IAAI,CAAC;QAEhF,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;QACnC,MAAM,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC;QACxC,MAAM,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;QAC1C,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,gBAAgB,CAAC,IAAI,8EAE3C,yNAAyN,EACzN,qJAAqJ,CACxJ,CAAC;QAEF,MAAM,cAAc,GAAG,IAAI,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAC1F,oBAAoB,CAAC,cAAc,CAAC,CAAC;QAErC,gBAAgB,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QAE5C,MAAM,UAAU,GAAG,cAAc,CAAC,UAAU,CAAC;QAE7C,MAAM,mBAAmB,GAAG,UAAU,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,IAAI,CAAC;QACpF,MAAM,wBAAwB,GAAG,UAAU,CAAC,aAAa,CAAC,0BAA0B,CAAC,KAAK,IAAI,CAAC;QAC/F,MAAM,sBAAsB,GAAG,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,IAAI,CAAC;QAEhF,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;QACnC,MAAM,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC;QACxC,MAAM,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as ElementsComponents from '../../../../../../front_end/panels/elements/components/components.js';\nimport type * as ElementsModule from '../../../../../../front_end/panels/elements/elements.js';\nimport {describeWithEnvironment} from '../../../helpers/EnvironmentHelpers.js';\nimport {assertShadowRoot, renderElementIntoDOM} from '../../../helpers/DOMHelpers.js';\n\nconst {assert} = chai;\n\ndescribeWithEnvironment('CSSHintDetailsView', async () => {\n    let Elements: typeof ElementsModule;\n\n    before(async () => {\n        Elements = await import('../../../../../../front_end/panels/elements/elements.js');\n    });\n\n    it('renders every section', async () => {\n      const hintMessage = new Elements.CSSRuleValidator.Hint(\n          Elements.CSSRuleValidator.HintType.INACTIVE_PROPERTY,\n          'This element has <code class=\"unbreakable-text\"><span class=\"property\">flex-wrap</span>: nowrap</code> rule, therefore <code class=\"unbreakable-text\"><span class=\"property\">align-content</span></code> has no effect.',\n          'For this property to work, please remove or change the value of <code class=\"unbreakable-text\"><span class=\"property\">flex-wrap</span></code> rule.',\n          'align-content',\n      );\n\n      const popupComponent = new ElementsComponents.CSSHintDetailsView.CSSHintDetailsView(hintMessage);\n      renderElementIntoDOM(popupComponent);\n\n      assertShadowRoot(popupComponent.shadowRoot);\n\n      const shadowRoot = popupComponent.shadowRoot;\n\n      const popupReasonRendered = shadowRoot.querySelector('.hint-popup-reason') !== null;\n      const popupPossibleFixRendered = shadowRoot.querySelector('.hint-popup-possible-fix') !== null;\n      const popupLearnMoreRendered = shadowRoot.querySelector('#learn-more') !== null;\n\n      assert.isTrue(popupReasonRendered);\n      assert.isTrue(popupPossibleFixRendered);\n      assert.isTrue(popupLearnMoreRendered);\n    });\n\n    it('does not render learn more', async () => {\n      const hint = new Elements.CSSRuleValidator.Hint(\n          Elements.CSSRuleValidator.HintType.INACTIVE_PROPERTY,\n          'This element has <code class=\"unbreakable-text\"><span class=\"property\">flex-wrap</span>: nowrap</code> rule, therefore <code class=\"unbreakable-text\"><span class=\"property\">align-content</span></code> has no effect.',\n          'For this property to work, please remove or change the value of <code class=\"unbreakable-text\"><span class=\"property\">flex-wrap</span></code> rule.',\n      );\n\n      const popupComponent = new ElementsComponents.CSSHintDetailsView.CSSHintDetailsView(hint);\n      renderElementIntoDOM(popupComponent);\n\n      assertShadowRoot(popupComponent.shadowRoot);\n\n      const shadowRoot = popupComponent.shadowRoot;\n\n      const popupReasonRendered = shadowRoot.querySelector('.hint-popup-reason') !== null;\n      const popupPossibleFixRendered = shadowRoot.querySelector('.hint-popup-possible-fix') !== null;\n      const popupLearnMoreRendered = shadowRoot.querySelector('#learn-more') !== null;\n\n      assert.isTrue(popupReasonRendered);\n      assert.isTrue(popupPossibleFixRendered);\n      assert.isFalse(popupLearnMoreRendered);\n    });\n});\n"]}