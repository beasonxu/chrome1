{"version":3,"file":"DOMUtilities_test.js","sourceRoot":"","sources":["../../../../../../../../../../../third_party/devtools-frontend/src/test/unittests/front_end/core/platform/DOMUtilities_test.ts"],"names":[],"mappings":"AAAA,gEAAgE;AAChE,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,QAAQ,MAAM,oDAAoD,CAAC;AAC/E,OAAO,EAAC,oBAAoB,EAAC,MAAM,6BAA6B,CAAC;AAEjE,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAC;AAEtB,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;IAC5B,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;QACjC,EAAE,CAAC,uDAAuD,EAAE,GAAG,EAAE;YAC/D,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAC7C,GAAG,CAAC,SAAS,GAAG,WAAW,CAAC;YAC5B,oBAAoB,CAAC,GAAG,CAAC,CAAC;YAC1B,GAAG,CAAC,KAAK,EAAE,CAAC;YACZ,MAAM,aAAa,GAAG,QAAQ,CAAC,YAAY,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YACxE,MAAM,CAAC,WAAW,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kEAAkE,EAAE,GAAG,EAAE;YAC1E,MAAM,aAAc,SAAQ,WAAW;gBACrC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;gBAC3C,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBAE1C,iBAAiB;oBACf,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,gCAAgC,CAAC;oBACzD,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACrC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;gBACtB,CAAC;aACF;YACD,cAAc,CAAC,MAAM,CAAC,8BAA8B,EAAE,aAAa,CAAC,CAAC;YAErE,MAAM,SAAS,GAAG,IAAI,aAAa,EAAE,CAAC;YACtC,oBAAoB,CAAC,SAAS,CAAC,CAAC;YAChC,MAAM,aAAa,GAAG,QAAQ,CAAC,YAAY,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YACxE,MAAM,CAAC,WAAW,CAAC,aAAa,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (c) 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../../../../front_end/core/platform/platform.js';\nimport {renderElementIntoDOM} from '../../helpers/DOMHelpers.js';\n\nconst {assert} = chai;\n\ndescribe('DOMUtilities', () => {\n  describe('deepActiveElement', () => {\n    it('returns the active element if there is no shadow root', () => {\n      const btn = document.createElement('button');\n      btn.innerText = 'Click me!';\n      renderElementIntoDOM(btn);\n      btn.focus();\n      const activeElement = Platform.DOMUtilities.deepActiveElement(document);\n      assert.strictEqual(activeElement, btn);\n    });\n\n    it('dives through the shadow root and finds the right active element', () => {\n      class TestComponent extends HTMLElement {\n        shadow = this.attachShadow({mode: 'open'});\n        button = document.createElement('button');\n\n        connectedCallback(): void {\n          this.button.innerText = 'Click me from the shadow root!';\n          this.shadow.appendChild(this.button);\n          this.button.focus();\n        }\n      }\n      customElements.define('dom-utilities-test-component', TestComponent);\n\n      const component = new TestComponent();\n      renderElementIntoDOM(component);\n      const activeElement = Platform.DOMUtilities.deepActiveElement(document);\n      assert.strictEqual(activeElement, component.button);\n    });\n  });\n});\n"]}