{"version":3,"file":"OverridesHelpers.js","sourceRoot":"","sources":["../../../../../../../../../../third_party/devtools-frontend/src/test/unittests/front_end/helpers/OverridesHelpers.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../../../front_end/core/sdk/sdk.js';\nimport * as Bindings from '../../../../front_end/models/bindings/bindings.js';\nimport * as Persistence from '../../../../front_end/models/persistence/persistence.js';\nimport * as Workspace from '../../../../front_end/models/workspace/workspace.js';\nimport type * as Platform from '../../../../front_end/core/platform/platform.js';\nimport * as Common from '../../../../front_end/core/common/common.js';\n\nexport async function setUpEnvironment() {\n  const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n  const targetManager = SDK.TargetManager.TargetManager.instance();\n  const debuggerWorkspaceBinding =\n      Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance({forceNew: true, targetManager, workspace});\n  const breakpointManager = Bindings.BreakpointManager.BreakpointManager.instance(\n      {forceNew: true, targetManager, workspace, debuggerWorkspaceBinding});\n  Persistence.Persistence.PersistenceImpl.instance({forceNew: true, workspace, breakpointManager});\n  const networkPersistenceManager =\n      Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance({forceNew: true, workspace});\n  return {networkPersistenceManager};\n}\n\nexport async function createWorkspaceProject(\n    baseUrl: Platform.DevToolsPath.UrlString, files: Array<{path: string, content: string, name: string}>) {\n  const {networkPersistenceManager} = await setUpEnvironment();\n  const fileSystem = {\n    fileSystemPath: () => baseUrl,\n    fileSystemBaseURL: baseUrl + '/',\n  } as unknown as Persistence.FileSystemWorkspaceBinding.FileSystem;\n\n  const uiSourceCodes = new Map<string, Workspace.UISourceCode.UISourceCode>();\n  for (const file of files) {\n    const url = Common.ParsedURL.ParsedURL.concatenate(baseUrl, '/', file.path, file.name);\n    uiSourceCodes.set(url, {\n      requestContent: () => Promise.resolve({content: file.content}),\n      url: () => url,\n      project: () => {\n        return {...fileSystem, requestFileBlob: () => new Blob([file.content])};\n      },\n      name: () => file.name,\n    } as unknown as Workspace.UISourceCode.UISourceCode);\n  }\n\n  const mockProject = {\n    uiSourceCodes: () => Array.from(uiSourceCodes.values()),\n    id: () => baseUrl,\n    fileSystemPath: () => baseUrl,\n    uiSourceCodeForURL: (url: string) => {\n      return uiSourceCodes.get(url) || null;\n    },\n  } as unknown as Workspace.Workspace.Project;\n\n  await networkPersistenceManager.setProject(mockProject);\n  return networkPersistenceManager;\n}\n"]}