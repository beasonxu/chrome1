{"version":3,"file":"BreakpointManager_test.js","sourceRoot":"","sources":["../../../../../../../../../../../third_party/devtools-frontend/src/test/unittests/front_end/models/bindings/BreakpointManager_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nconst {assert} = chai;\nimport * as Root from '../../../../../front_end/core/root/root.js';\nimport * as SDK from '../../../../../front_end/core/sdk/sdk.js';\nimport * as Workspace from '../../../../../front_end/models/workspace/workspace.js';\nimport * as Bindings from '../../../../../front_end/models/bindings/bindings.js';\nimport type * as Platform from '../../../../../front_end/core/platform/platform.js';\nimport type * as Protocol from '../../../../../front_end/generated/protocol.js';\nimport * as Common from '../../../../../front_end/core/common/common.js';\nimport * as Persistence from '../../../../../front_end/models/persistence/persistence.js';\n\nimport {describeWithRealConnection} from '../../helpers/RealConnection.js';\nimport {createContentProviderUISourceCode, createFileSystemUISourceCode} from '../../helpers/UISourceCodeHelpers.js';\nimport {assertNotNullOrUndefined} from '../../../../../front_end/core/platform/platform.js';\nimport {TestPlugin} from '../../helpers/LanguagePluginHelpers.js';\nimport {type Chrome} from '../../../../../extension-api/ExtensionAPI.js';\n\ndescribeWithRealConnection('BreakpointManager', () => {\n  const URL = 'file:///tmp/example.html' as Platform.DevToolsPath.UrlString;\n  const SCRIPT_ID = 'SCRIPT_ID' as Protocol.Runtime.ScriptId;\n  const BREAKPOINT_ID = 'BREAKPOINT_ID' as Protocol.Debugger.BreakpointId;\n  const JS_MIME_TYPE = 'text/javascript';\n\n  let target: SDK.Target.Target;\n  let breakpointManager: Bindings.BreakpointManager.BreakpointManager;\n  class TestDebuggerModel extends SDK.DebuggerModel.DebuggerModel {\n    constructor(target: SDK.Target.Target) {\n      super(target);\n    }\n\n    async setBreakpointByURL(\n        _url: Platform.DevToolsPath.UrlString, _lineNumber: number, _columnNumber?: number,\n        _condition?: string): Promise<SDK.DebuggerModel.SetBreakpointResult> {\n      return Promise.resolve(\n          {breakpointId: BREAKPOINT_ID, locations: [new SDK.DebuggerModel.Location(this, SCRIPT_ID, 42)]});\n    }\n\n    async removeBreakpoint(): Promise<void> {\n      return;\n    }\n\n    scriptForId(scriptId: string): SDK.Script.Script|null {\n      if (scriptId === SCRIPT_ID) {\n        return new SDK.Script.Script(\n            this, scriptId as Protocol.Runtime.ScriptId, URL, 0, 0, 0, 0, 0, '', false, false, undefined, false, 0,\n            null, null, null, null, null, null);\n      }\n      return null;\n    }\n\n    isReadyToPause(): boolean {\n      return true;\n    }\n  }\n\n  function createFakeScriptMapping(\n      debuggerModel: TestDebuggerModel, uiSourceCode: Workspace.UISourceCode.UISourceCode,\n      SCRIPT_ID: Protocol.Runtime.ScriptId): Bindings.DebuggerWorkspaceBinding.DebuggerSourceMapping {\n    const sdkLocation = new SDK.DebuggerModel.Location(debuggerModel, SCRIPT_ID as Protocol.Runtime.ScriptId, 13);\n    const uiLocation = new Workspace.UISourceCode.UILocation(uiSourceCode, 42);\n    const mapping: Bindings.DebuggerWorkspaceBinding.DebuggerSourceMapping = {\n      rawLocationToUILocation: (_: SDK.DebuggerModel.Location) => uiLocation,\n      uiLocationToRawLocations:\n          (_uiSourceCode: Workspace.UISourceCode.UISourceCode, _lineNumber: number,\n           _columnNumber?: number) => [sdkLocation],\n    };\n    return mapping;\n  }\n\n  // Tests if a breakpoint set on a filesystem file was successfully moved to the network file when we expect it.\n  async function runBreakpointMovedTest(fileSystem: {\n    uiSourceCode: Workspace.UISourceCode.UISourceCode,\n    project: Persistence.FileSystemWorkspaceBinding.FileSystem,\n  }) {\n    const debuggerModel = new TestDebuggerModel(target);\n    const breakpoint = await breakpointManager.setBreakpoint(fileSystem.uiSourceCode, 0, 0, '', true);\n\n    const content = await fileSystem.project.requestFileContent(fileSystem.uiSourceCode);\n    const metadata = await fileSystem.project.requestMetadata(fileSystem.uiSourceCode);\n    assertNotNullOrUndefined(metadata);\n    assertNotNullOrUndefined(content.content);\n\n    const networkURL = 'http://www.google.com/example.js' as Platform.DevToolsPath.UrlString;\n    const network = createContentProviderUISourceCode({\n      url: networkURL,\n      content: content.content,\n      mimeType: fileSystem.uiSourceCode.mimeType(),\n      metadata,\n      projectType: Workspace.Workspace.projectTypes.Network,\n    });\n\n    const script = new SDK.Script.Script(\n        debuggerModel, SCRIPT_ID, networkURL, 0, 0, 43, 0, 0, '0', true, false, undefined, false, 10, null, null, null,\n        null, null, null);\n\n    // Check that only the filesystem project UISourceCode has a breakpoint.\n    assert.lengthOf(breakpointManager.breakpointLocationsForUISourceCode(fileSystem.uiSourceCode), 1);\n    assert.isEmpty(breakpointManager.breakpointLocationsForUISourceCode(network.uiSourceCode));\n\n    // Get the UISourceCode and await binding updates. This call should make sure to update all breakpoints.\n    await breakpointManager.getUISourceCodeWithUpdatedBreakpointInfo(script);\n\n    // Check that the network project UISourceCode has a breakpoint now.\n    const uiLocations = breakpointManager.breakpointLocationsForUISourceCode(network.uiSourceCode);\n    assert.lengthOf(uiLocations, 1);\n\n    // We need to remove the breakpoint on the file system and on the network project.\n    await breakpoint.remove(false);\n    await uiLocations[0].breakpoint.remove(false);\n\n    Workspace.Workspace.WorkspaceImpl.instance().removeProject(network.project);\n    Workspace.Workspace.WorkspaceImpl.instance().removeProject(fileSystem.project);\n  }\n\n  beforeEach(() => {\n    breakpointManager = Bindings.BreakpointManager.BreakpointManager.instance();\n    assertNotNullOrUndefined(breakpointManager);\n\n    const targetManager = SDK.TargetManager.TargetManager.instance();\n    const mainTarget = targetManager.mainTarget();\n    assertNotNullOrUndefined(mainTarget);\n    target = mainTarget;\n  });\n\n  it('allows awaiting the restoration of breakpoints', async () => {\n    Root.Runtime.experiments.enableForTest(Root.Runtime.ExperimentName.INSTRUMENTATION_BREAKPOINTS);\n\n    const {uiSourceCode, project} = createContentProviderUISourceCode({url: URL, mimeType: JS_MIME_TYPE});\n    const breakpoint = await breakpointManager.setBreakpoint(uiSourceCode, 0, 0, '', true);\n\n    // Create a new DebuggerModel and notify the breakpoint engine about it.\n    const debuggerModel = new TestDebuggerModel(target);\n    breakpoint.modelAdded(debuggerModel);\n\n    // Make sure that we await all updates that are triggered by adding the model.\n    await breakpoint.updateBreakpoint();\n\n    // Retrieve the ModelBreakpoint that is linked to our DebuggerModel.\n    const modelBreakpoint = breakpoint.modelBreakpoint(debuggerModel);\n    assertNotNullOrUndefined(modelBreakpoint);\n\n    // Make sure that we do not have a linked script yet.\n    assert.isNull(modelBreakpoint.currentState);\n\n    // Create a fake mapping that can be used to set a breakpoint.\n    const mapping = createFakeScriptMapping(debuggerModel, uiSourceCode, SCRIPT_ID);\n    Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().addSourceMapping(mapping);\n\n    // Now await restoring the breakpoint.\n    // A successful restore should update the ModelBreakpoint of the DebuggerModel\n    // to reflect a state, in which we have successfully set a breakpoint (i.e. a script id\n    // is available).\n    const script = debuggerModel.scriptForId(SCRIPT_ID);\n    assertNotNullOrUndefined(script);\n    await breakpointManager.restoreBreakpointsForScript(script);\n    assertNotNullOrUndefined(modelBreakpoint.currentState);\n    assert.lengthOf(modelBreakpoint.currentState.positions, 1);\n    assert.strictEqual(modelBreakpoint.currentState.positions[0].scriptId, SCRIPT_ID);\n\n    // Clean up.\n    await breakpoint.remove(false);\n    breakpointManager.modelRemoved(debuggerModel);\n    Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().removeSourceMapping(mapping);\n    Workspace.Workspace.WorkspaceImpl.instance().removeProject(project);\n    Root.Runtime.experiments.disableForTest(Root.Runtime.ExperimentName.INSTRUMENTATION_BREAKPOINTS);\n  });\n\n  it('allows awaiting the restoration of breakpoints with language plugins', async () => {\n    Root.Runtime.experiments.enableForTest(Root.Runtime.ExperimentName.INSTRUMENTATION_BREAKPOINTS);\n    Root.Runtime.experiments.enableForTest(Root.Runtime.ExperimentName.WASM_DWARF_DEBUGGING);\n\n    const pluginManager =\n        Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().initPluginManagerForTest();\n    assertNotNullOrUndefined(pluginManager);\n\n    const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n    assertNotNullOrUndefined(debuggerModel);\n\n    const {uiSourceCode, project} =\n        createContentProviderUISourceCode({url: 'test.cc' as Platform.DevToolsPath.UrlString, mimeType: JS_MIME_TYPE});\n    assertNotNullOrUndefined(uiSourceCode);\n    const breakpoint = await breakpointManager.setBreakpoint(uiSourceCode, 0, 0, '', true);\n\n    // Make sure that we await all updates that are triggered by adding the model.\n    await breakpoint.updateBreakpoint();\n\n    // Retrieve the ModelBreakpoint that is linked to our DebuggerModel.\n    const modelBreakpoint = breakpoint.modelBreakpoint(debuggerModel);\n    assertNotNullOrUndefined(modelBreakpoint);\n\n    // Make sure that we do not have a linked script yet.\n    assert.isNull(modelBreakpoint.currentState);\n\n    class Plugin extends TestPlugin {\n      constructor() {\n        super('InstrumentationBreakpoints');\n      }\n\n      handleScript(script: SDK.Script.Script) {\n        return script.scriptId === SCRIPT_ID;\n      }\n\n      async sourceLocationToRawLocation(sourceLocation: Chrome.DevTools.SourceLocation):\n          Promise<Chrome.DevTools.RawLocationRange[]> {\n        const {rawModuleId, columnNumber, lineNumber, sourceFileURL} = sourceLocation;\n        if (lineNumber === 0 && columnNumber === 0 && sourceFileURL === 'test.cc') {\n          return [{rawModuleId, startOffset: 0, endOffset: 0}];\n        }\n        return [];\n      }\n\n      async addRawModule(_rawModuleId: string, _symbolsURL: string, _rawModule: Chrome.DevTools.RawModule):\n          Promise<string[]> {\n        return ['test.cc'];  // need to return something to get the script associated with the plugin.\n      }\n    }\n    // Create a plugin that is able to produce a mapping for our script.\n    pluginManager.addPlugin(new Plugin());\n\n    const script = debuggerModel.parsedScriptSource(\n        SCRIPT_ID, URL, 0, 0, 0, 0, 0, '', undefined, false, undefined, false, false, 0, null, null, null, null, null,\n        null);\n    await pluginManager.getSourcesForScript(script);  // wait for plugin source setup to finish.\n\n    await breakpointManager.restoreBreakpointsForScript(script);\n    assertNotNullOrUndefined(modelBreakpoint.currentState);\n    assert.lengthOf(modelBreakpoint.currentState.positions, 1);\n    assert.strictEqual(modelBreakpoint.currentState.positions[0].scriptId, SCRIPT_ID);\n\n    // Clean up.\n    await breakpoint.remove(false);\n    Root.Runtime.experiments.disableForTest(Root.Runtime.ExperimentName.INSTRUMENTATION_BREAKPOINTS);\n    Root.Runtime.experiments.disableForTest(Root.Runtime.ExperimentName.WASM_DWARF_DEBUGGING);\n    Workspace.Workspace.WorkspaceImpl.instance().removeProject(project);\n    Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().initPluginManagerForTest();\n    debuggerModel.globalObjectCleared();\n  });\n\n  it('allows awaiting on scheduled update in debugger', async () => {\n    const {uiSourceCode, project} = createContentProviderUISourceCode({url: URL, mimeType: JS_MIME_TYPE});\n\n    const debuggerModel = new TestDebuggerModel(target);\n    const breakpoint = await breakpointManager.setBreakpoint(uiSourceCode, 42, 0, '', true);\n\n    const modelBreakpoint = new Bindings.BreakpointManager.ModelBreakpoint(\n        debuggerModel, breakpoint, breakpointManager.debuggerWorkspaceBinding);\n    const mapping = createFakeScriptMapping(debuggerModel, uiSourceCode, SCRIPT_ID);\n    Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().addSourceMapping(mapping);\n    assert.isNull(breakpoint.currentState);\n    const update = modelBreakpoint.scheduleUpdateInDebugger();\n    assert.isNull(breakpoint.currentState);\n    const result = await update;\n    // Make sure that no error occurred.\n    assert.isTrue(result === Bindings.BreakpointManager.DebuggerUpdateResult.OK);\n    assert.strictEqual(breakpoint.currentState?.positions[0]?.lineNumber, 13);\n    Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().removeSourceMapping(mapping);\n    await breakpoint.remove(false);\n    Workspace.Workspace.WorkspaceImpl.instance().removeProject(project);\n  });\n\n  it('allows awaiting on removal of breakpoint in debugger', async () => {\n    const {uiSourceCode, project} = createContentProviderUISourceCode({url: URL, mimeType: JS_MIME_TYPE});\n    // Set up breakpoint with UISourceCode, and fake DebuggerModel.\n    const debuggerModel = new TestDebuggerModel(target);\n    const removeSpy = sinon.spy(debuggerModel, 'removeBreakpoint');\n    const setSpy = sinon.spy(debuggerModel, 'setBreakpointByURL');\n\n    // We need to stub the debuggerModel of the real connection to make sure that we\n    // can await the removal of the breakpoint (since it will await updating all\n    // DebuggerModels, including the one with the real connection).\n    const realDebugger = target.model(SDK.DebuggerModel.DebuggerModel);\n    assertNotNullOrUndefined(realDebugger);\n    sinon.stub(realDebugger, 'setBreakpointByURL')\n        .callsFake(() => Promise.resolve({breakpointId: BREAKPOINT_ID, locations: []}));\n    sinon.stub(realDebugger, 'removeBreakpoint').callsFake(() => Promise.resolve());\n\n    const mapping = createFakeScriptMapping(debuggerModel, uiSourceCode, SCRIPT_ID);\n    Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().addSourceMapping(mapping);\n\n    const breakpoint = await breakpointManager.setBreakpoint(uiSourceCode, 42, 0, '', true);\n    breakpoint.modelAdded(debuggerModel);\n\n    // Make sure that the location could be resolved, and that we could set a breakpoint.\n    const modelBreakpoint = breakpoint.modelBreakpoint(debuggerModel);\n    assertNotNullOrUndefined(modelBreakpoint);\n    await modelBreakpoint.scheduleUpdateInDebugger();\n    assertNotNullOrUndefined(modelBreakpoint.currentState);\n    assert.isTrue(setSpy.calledOnce);\n\n    // Test if awaiting breakpoint.remove is actually removing the state.\n    await breakpoint.remove(false);\n    assert.isNull(modelBreakpoint.currentState);\n    assert.isTrue(removeSpy.calledOnce);\n\n    Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().removeSourceMapping(mapping);\n    Workspace.Workspace.WorkspaceImpl.instance().removeProject(project);\n  });\n\n  it('can wait for file system breakpoints to be mapped to network ui source code', async () => {\n    const url = 'file://example.js' as Platform.DevToolsPath.UrlString;\n    const content = 'console.log(3)';\n    const metadata = new Workspace.UISourceCode.UISourceCodeMetadata(new Date(), content.length);\n\n    const fileSystem =\n        createFileSystemUISourceCode({url, content, mimeType: JS_MIME_TYPE, metadata, autoMapping: true});\n\n    await runBreakpointMovedTest(fileSystem);\n  });\n\n  describe('with persistence network overrides enabled', () => {\n    let currentPersistenceSetting: boolean;\n\n    beforeEach(() => {\n      // Temporarily enable overrides for test.\n      currentPersistenceSetting =\n          Common.Settings.Settings.instance().moduleSetting('persistenceNetworkOverridesEnabled').get();\n    });\n\n    afterEach(() => {\n      // Reset default setting.\n      Common.Settings.Settings.instance()\n          .moduleSetting('persistenceNetworkOverridesEnabled')\n          .set(currentPersistenceSetting);\n    });\n\n    it('can wait for breakpoints in overrides to be mapped to network ui source code', async () => {\n      Common.Settings.Settings.instance().moduleSetting('persistenceNetworkOverridesEnabled').set('true');\n      const metadata = new Workspace.UISourceCode.UISourceCodeMetadata(new Date(), 0);\n      const url = 'file://path/to/overrides/www.google.com/example.js' as Platform.DevToolsPath.UrlString;\n      const fileSystem = createFileSystemUISourceCode({\n        url,\n        metadata,\n        mimeType: JS_MIME_TYPE,\n        autoMapping: true,\n        type: 'overrides',\n        fileSystemPath: 'file://path/to/overrides',\n      });\n\n      // Add a spy to make sure that the binding is coming from the NetworkPersistenceManager, and not the Automapping.\n      const spy = sinon.spy(Persistence.Persistence.PersistenceImpl.instance(), 'addBinding');\n      await Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance().setProject(fileSystem.project);\n      await runBreakpointMovedTest(fileSystem);\n      assert.isTrue(spy.calledOnce);\n    });\n  });\n\n  describe('Breakpoints', () => {\n    it('are removed after a location clash', async () => {\n      const {uiSourceCode, project} = createContentProviderUISourceCode({url: URL, mimeType: JS_MIME_TYPE});\n      // Use TestDebuggerModel, which always returns the same location to create a location crash.\n      const debuggerModel = new TestDebuggerModel(target);\n\n      // Create first breakpoint that resolves to that location.\n      const breakpoint = await breakpointManager.setBreakpoint(uiSourceCode, 42, 0, '', true);\n      breakpoint.modelAdded(debuggerModel);\n      assert.isFalse(breakpoint.getIsRemoved());\n\n      // Create second breakpoint that will resolve to the same location.\n      const slidingBreakpoint = await breakpointManager.setBreakpoint(uiSourceCode, 43, 0, '', true);\n      const removedSpy = sinon.spy(slidingBreakpoint, 'remove');\n      slidingBreakpoint.modelAdded(debuggerModel);\n\n      const mapping = createFakeScriptMapping(debuggerModel, uiSourceCode, SCRIPT_ID);\n      Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().addSourceMapping(mapping);\n\n      await breakpoint.updateBreakpoint();\n      await slidingBreakpoint.updateBreakpoint();\n\n      // First breakpoint is kept, while second is removed.\n      assert.isFalse(breakpoint.getIsRemoved());\n      assert.isTrue(slidingBreakpoint.getIsRemoved());\n\n      // Breakpoint was removed and is not kept in storage.\n      assert.isTrue(removedSpy.calledOnceWith(true));\n\n      await breakpoint.remove(false);\n      Workspace.Workspace.WorkspaceImpl.instance().removeProject(project);\n      Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().removeSourceMapping(mapping);\n    });\n\n    it('are removed and kept in storage after a back-end error', async () => {\n      const {uiSourceCode, project} = createContentProviderUISourceCode({url: URL, mimeType: JS_MIME_TYPE});\n\n      // Use TestDebuggerModel, which always returns the same location to create a location crash.\n      const debuggerModel = new TestDebuggerModel(target);\n\n      // Simulates a back-end error.\n      sinon.stub(debuggerModel, 'setBreakpointByURL').callsFake(() => {\n        return Promise.resolve({locations: [], breakpointId: null} as SDK.DebuggerModel.SetBreakpointResult);\n      });\n      const mapping = createFakeScriptMapping(debuggerModel, uiSourceCode, SCRIPT_ID);\n      Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().addSourceMapping(mapping);\n\n      const breakpoint = await breakpointManager.setBreakpoint(uiSourceCode, 42, 0, '', true);\n      breakpoint.modelAdded(debuggerModel);\n      const removedSpy = sinon.spy(breakpoint, 'remove');\n      await breakpoint.updateBreakpoint();\n\n      // Breakpoint was removed and is kept in storage.\n      assert.isTrue(breakpoint.getIsRemoved());\n      assert.isTrue(removedSpy.calledWith(true));\n\n      Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().removeSourceMapping(mapping);\n      Workspace.Workspace.WorkspaceImpl.instance().removeProject(project);\n    });\n  });\n});\n"]}