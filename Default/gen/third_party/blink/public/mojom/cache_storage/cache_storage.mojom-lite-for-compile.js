// third_party/blink/public/mojom/cache_storage/cache_storage.mojom-lite-for-compile.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';

goog.require('mojo.internal');
goog.require('mojo.internal.interfaceSupport');

goog.require('blink.mojom.BlobReaderClient');
goog.require('blink.mojom.FetchAPIRequest');
goog.require('blink.mojom.FetchAPIResponse');
goog.require('mojoBase.mojom.String16');
goog.require('mojoBase.mojom.Time');
goog.require('url.mojom.Url');
goog.require('mojoBase.mojom.BigBuffer');




goog.provide('blink.mojom.CacheStorageError');
goog.provide('blink.mojom.CacheStorageErrorSpec');
/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
blink.mojom.CacheStorageErrorSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
blink.mojom.CacheStorageError = {
  
  kSuccess: 0,
  kErrorExists: 1,
  kErrorStorage: 2,
  kErrorNotFound: 3,
  kErrorQuotaExceeded: 4,
  kErrorCacheNameNotFound: 5,
  kErrorQueryTooLarge: 6,
  kErrorNotImplemented: 7,
  kErrorDuplicateOperation: 8,
  kErrorCrossOriginResourcePolicy: 9,
  MIN_VALUE: 0,
  MAX_VALUE: 9,
};

goog.provide('blink.mojom.OperationType');
goog.provide('blink.mojom.OperationTypeSpec');
/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
blink.mojom.OperationTypeSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
blink.mojom.OperationType = {
  
  kUndefined: 0,
  kPut: 1,
  kDelete: 2,
  MIN_VALUE: 0,
  MAX_VALUE: 2,
};



goog.provide('blink.mojom.CacheStorageCache');
goog.provide('blink.mojom.CacheStorageCacheReceiver');
goog.provide('blink.mojom.CacheStorageCacheCallbackRouter');
goog.provide('blink.mojom.CacheStorageCacheInterface');
goog.provide('blink.mojom.CacheStorageCacheRemote');
goog.provide('blink.mojom.CacheStorageCachePendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
blink.mojom.CacheStorageCachePendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        blink.mojom.CacheStorageCache.$interfaceName,
        scope);
  }
};

/** @interface */
blink.mojom.CacheStorageCacheInterface = class {
  
  /**
   * @param { !blink.mojom.FetchAPIRequest } request
   * @param { !blink.mojom.CacheQueryOptions } queryOptions
   * @param { !boolean } inRelatedFetchEvent
   * @param { !boolean } inRangeFetchEvent
   * @param { !bigint } traceId
   * @return {!Promise<{
        result: !blink.mojom.MatchResult,
   *  }>}
   */

  match(request, queryOptions, inRelatedFetchEvent, inRangeFetchEvent, traceId) {}
  
  /**
   * @param { ?blink.mojom.FetchAPIRequest } request
   * @param { !blink.mojom.CacheQueryOptions } queryOptions
   * @param { !bigint } traceId
   * @return {!Promise<{
        result: !blink.mojom.MatchAllResult,
   *  }>}
   */

  matchAll(request, queryOptions, traceId) {}
  
  /**
   * @param { ?blink.mojom.FetchAPIRequest } request
   * @param { !blink.mojom.CacheQueryOptions } queryOptions
   * @param { !bigint } traceId
   * @return {!Promise<{
        result: !blink.mojom.GetAllMatchedEntriesResult,
   *  }>}
   */

  getAllMatchedEntries(request, queryOptions, traceId) {}
  
  /**
   * @param { ?blink.mojom.FetchAPIRequest } request
   * @param { !blink.mojom.CacheQueryOptions } queryOptions
   * @param { !bigint } traceId
   * @return {!Promise<{
        result: !blink.mojom.CacheKeysResult,
   *  }>}
   */

  keys(request, queryOptions, traceId) {}
  
  /**
   * @param { !Array<!blink.mojom.BatchOperation> } batchOperations
   * @param { !bigint } traceId
   * @return {!Promise<{
        result: !blink.mojom.CacheStorageVerboseError,
   *  }>}
   */

  batch(batchOperations, traceId) {}
  
  /**
   * @param { !url.mojom.Url } url
   * @param { !mojoBase.mojom.Time } expectedResponseTime
   * @param { !mojoBase.mojom.BigBuffer } data
   * @param { !bigint } traceId
   * @return {!Promise<{
        result: !blink.mojom.CacheStorageError,
   *  }>}
   */

  writeSideData(url, expectedResponseTime, data, traceId) {}
};

/**
 * @export
 * @implements { blink.mojom.CacheStorageCacheInterface }
 */
blink.mojom.CacheStorageCacheRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!blink.mojom.CacheStorageCachePendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          blink.mojom.CacheStorageCachePendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!blink.mojom.CacheStorageCachePendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !blink.mojom.FetchAPIRequest } request
   * @param { !blink.mojom.CacheQueryOptions } queryOptions
   * @param { !boolean } inRelatedFetchEvent
   * @param { !boolean } inRangeFetchEvent
   * @param { !bigint } traceId
   * @return {!Promise<{
        result: !blink.mojom.MatchResult,
   *  }>}
   */

  match(
      request,
      queryOptions,
      inRelatedFetchEvent,
      inRangeFetchEvent,
      traceId) {
    return this.proxy.sendMessage(
        0,
        blink.mojom.CacheStorageCache_Match_ParamsSpec.$,
        blink.mojom.CacheStorageCache_Match_ResponseParamsSpec.$,
        [
          request,
          queryOptions,
          inRelatedFetchEvent,
          inRangeFetchEvent,
          traceId
        ]);
  }

  
  /**
   * @param { ?blink.mojom.FetchAPIRequest } request
   * @param { !blink.mojom.CacheQueryOptions } queryOptions
   * @param { !bigint } traceId
   * @return {!Promise<{
        result: !blink.mojom.MatchAllResult,
   *  }>}
   */

  matchAll(
      request,
      queryOptions,
      traceId) {
    return this.proxy.sendMessage(
        1,
        blink.mojom.CacheStorageCache_MatchAll_ParamsSpec.$,
        blink.mojom.CacheStorageCache_MatchAll_ResponseParamsSpec.$,
        [
          request,
          queryOptions,
          traceId
        ]);
  }

  
  /**
   * @param { ?blink.mojom.FetchAPIRequest } request
   * @param { !blink.mojom.CacheQueryOptions } queryOptions
   * @param { !bigint } traceId
   * @return {!Promise<{
        result: !blink.mojom.GetAllMatchedEntriesResult,
   *  }>}
   */

  getAllMatchedEntries(
      request,
      queryOptions,
      traceId) {
    return this.proxy.sendMessage(
        2,
        blink.mojom.CacheStorageCache_GetAllMatchedEntries_ParamsSpec.$,
        blink.mojom.CacheStorageCache_GetAllMatchedEntries_ResponseParamsSpec.$,
        [
          request,
          queryOptions,
          traceId
        ]);
  }

  
  /**
   * @param { ?blink.mojom.FetchAPIRequest } request
   * @param { !blink.mojom.CacheQueryOptions } queryOptions
   * @param { !bigint } traceId
   * @return {!Promise<{
        result: !blink.mojom.CacheKeysResult,
   *  }>}
   */

  keys(
      request,
      queryOptions,
      traceId) {
    return this.proxy.sendMessage(
        3,
        blink.mojom.CacheStorageCache_Keys_ParamsSpec.$,
        blink.mojom.CacheStorageCache_Keys_ResponseParamsSpec.$,
        [
          request,
          queryOptions,
          traceId
        ]);
  }

  
  /**
   * @param { !Array<!blink.mojom.BatchOperation> } batchOperations
   * @param { !bigint } traceId
   * @return {!Promise<{
        result: !blink.mojom.CacheStorageVerboseError,
   *  }>}
   */

  batch(
      batchOperations,
      traceId) {
    return this.proxy.sendMessage(
        4,
        blink.mojom.CacheStorageCache_Batch_ParamsSpec.$,
        blink.mojom.CacheStorageCache_Batch_ResponseParamsSpec.$,
        [
          batchOperations,
          traceId
        ]);
  }

  
  /**
   * @param { !url.mojom.Url } url
   * @param { !mojoBase.mojom.Time } expectedResponseTime
   * @param { !mojoBase.mojom.BigBuffer } data
   * @param { !bigint } traceId
   * @return {!Promise<{
        result: !blink.mojom.CacheStorageError,
   *  }>}
   */

  writeSideData(
      url,
      expectedResponseTime,
      data,
      traceId) {
    return this.proxy.sendMessage(
        5,
        blink.mojom.CacheStorageCache_WriteSideData_ParamsSpec.$,
        blink.mojom.CacheStorageCache_WriteSideData_ResponseParamsSpec.$,
        [
          url,
          expectedResponseTime,
          data,
          traceId
        ]);
  }
};

/**
 * An object which receives request messages for the CacheStorageCache
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
blink.mojom.CacheStorageCacheReceiver = class {
  /**
   * @param {!blink.mojom.CacheStorageCacheInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!blink.mojom.CacheStorageCacheRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        blink.mojom.CacheStorageCacheRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!blink.mojom.CacheStorageCacheRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        blink.mojom.CacheStorageCache_Match_ParamsSpec.$,
        blink.mojom.CacheStorageCache_Match_ResponseParamsSpec.$,
        impl.match.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        blink.mojom.CacheStorageCache_MatchAll_ParamsSpec.$,
        blink.mojom.CacheStorageCache_MatchAll_ResponseParamsSpec.$,
        impl.matchAll.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        blink.mojom.CacheStorageCache_GetAllMatchedEntries_ParamsSpec.$,
        blink.mojom.CacheStorageCache_GetAllMatchedEntries_ResponseParamsSpec.$,
        impl.getAllMatchedEntries.bind(impl));
    this.helper_internal_.registerHandler(
        3,
        blink.mojom.CacheStorageCache_Keys_ParamsSpec.$,
        blink.mojom.CacheStorageCache_Keys_ResponseParamsSpec.$,
        impl.keys.bind(impl));
    this.helper_internal_.registerHandler(
        4,
        blink.mojom.CacheStorageCache_Batch_ParamsSpec.$,
        blink.mojom.CacheStorageCache_Batch_ResponseParamsSpec.$,
        impl.batch.bind(impl));
    this.helper_internal_.registerHandler(
        5,
        blink.mojom.CacheStorageCache_WriteSideData_ParamsSpec.$,
        blink.mojom.CacheStorageCache_WriteSideData_ResponseParamsSpec.$,
        impl.writeSideData.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
blink.mojom.CacheStorageCache = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "blink.mojom.CacheStorageCache";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!blink.mojom.CacheStorageCacheRemote}
   * @export
   */
  static getRemote() {
    let remote = new blink.mojom.CacheStorageCacheRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the CacheStorageCache
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
blink.mojom.CacheStorageCacheCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      blink.mojom.CacheStorageCacheRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!blink.mojom.CacheStorageCacheRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.match =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        blink.mojom.CacheStorageCache_Match_ParamsSpec.$,
        blink.mojom.CacheStorageCache_Match_ResponseParamsSpec.$,
        this.match.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.matchAll =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        blink.mojom.CacheStorageCache_MatchAll_ParamsSpec.$,
        blink.mojom.CacheStorageCache_MatchAll_ResponseParamsSpec.$,
        this.matchAll.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getAllMatchedEntries =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        blink.mojom.CacheStorageCache_GetAllMatchedEntries_ParamsSpec.$,
        blink.mojom.CacheStorageCache_GetAllMatchedEntries_ResponseParamsSpec.$,
        this.getAllMatchedEntries.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.keys =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        3,
        blink.mojom.CacheStorageCache_Keys_ParamsSpec.$,
        blink.mojom.CacheStorageCache_Keys_ResponseParamsSpec.$,
        this.keys.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.batch =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        4,
        blink.mojom.CacheStorageCache_Batch_ParamsSpec.$,
        blink.mojom.CacheStorageCache_Batch_ResponseParamsSpec.$,
        this.batch.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.writeSideData =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        5,
        blink.mojom.CacheStorageCache_WriteSideData_ParamsSpec.$,
        blink.mojom.CacheStorageCache_WriteSideData_ResponseParamsSpec.$,
        this.writeSideData.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('blink.mojom.CacheStorage');
goog.provide('blink.mojom.CacheStorageReceiver');
goog.provide('blink.mojom.CacheStorageCallbackRouter');
goog.provide('blink.mojom.CacheStorageInterface');
goog.provide('blink.mojom.CacheStorageRemote');
goog.provide('blink.mojom.CacheStoragePendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
blink.mojom.CacheStoragePendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        blink.mojom.CacheStorage.$interfaceName,
        scope);
  }
};

/** @interface */
blink.mojom.CacheStorageInterface = class {
  
  /**
   * @param { !mojoBase.mojom.String16 } cacheName
   * @param { !bigint } traceId
   * @return {!Promise<{
        result: !blink.mojom.CacheStorageError,
   *  }>}
   */

  has(cacheName, traceId) {}
  
  /**
   * @param { !mojoBase.mojom.String16 } cacheName
   * @param { !bigint } traceId
   * @return {!Promise<{
        result: !blink.mojom.CacheStorageError,
   *  }>}
   */

  delete(cacheName, traceId) {}
  
  /**
   * @param { !bigint } traceId
   * @return {!Promise<{
        keys: !Array<!mojoBase.mojom.String16>,
   *  }>}
   */

  keys(traceId) {}
  
  /**
   * @param { !blink.mojom.FetchAPIRequest } request
   * @param { !blink.mojom.MultiCacheQueryOptions } matchOptions
   * @param { !boolean } inRelatedFetchEvent
   * @param { !boolean } inRangeFetchEvent
   * @param { !bigint } traceId
   * @return {!Promise<{
        result: !blink.mojom.MatchResult,
   *  }>}
   */

  match(request, matchOptions, inRelatedFetchEvent, inRangeFetchEvent, traceId) {}
  
  /**
   * @param { !mojoBase.mojom.String16 } cacheName
   * @param { !bigint } traceId
   * @return {!Promise<{
        result: !blink.mojom.OpenResult,
   *  }>}
   */

  open(cacheName, traceId) {}
};

/**
 * @export
 * @implements { blink.mojom.CacheStorageInterface }
 */
blink.mojom.CacheStorageRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!blink.mojom.CacheStoragePendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          blink.mojom.CacheStoragePendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!blink.mojom.CacheStoragePendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !mojoBase.mojom.String16 } cacheName
   * @param { !bigint } traceId
   * @return {!Promise<{
        result: !blink.mojom.CacheStorageError,
   *  }>}
   */

  has(
      cacheName,
      traceId) {
    return this.proxy.sendMessage(
        0,
        blink.mojom.CacheStorage_Has_ParamsSpec.$,
        blink.mojom.CacheStorage_Has_ResponseParamsSpec.$,
        [
          cacheName,
          traceId
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.String16 } cacheName
   * @param { !bigint } traceId
   * @return {!Promise<{
        result: !blink.mojom.CacheStorageError,
   *  }>}
   */

  delete(
      cacheName,
      traceId) {
    return this.proxy.sendMessage(
        1,
        blink.mojom.CacheStorage_Delete_ParamsSpec.$,
        blink.mojom.CacheStorage_Delete_ResponseParamsSpec.$,
        [
          cacheName,
          traceId
        ]);
  }

  
  /**
   * @param { !bigint } traceId
   * @return {!Promise<{
        keys: !Array<!mojoBase.mojom.String16>,
   *  }>}
   */

  keys(
      traceId) {
    return this.proxy.sendMessage(
        2,
        blink.mojom.CacheStorage_Keys_ParamsSpec.$,
        blink.mojom.CacheStorage_Keys_ResponseParamsSpec.$,
        [
          traceId
        ]);
  }

  
  /**
   * @param { !blink.mojom.FetchAPIRequest } request
   * @param { !blink.mojom.MultiCacheQueryOptions } matchOptions
   * @param { !boolean } inRelatedFetchEvent
   * @param { !boolean } inRangeFetchEvent
   * @param { !bigint } traceId
   * @return {!Promise<{
        result: !blink.mojom.MatchResult,
   *  }>}
   */

  match(
      request,
      matchOptions,
      inRelatedFetchEvent,
      inRangeFetchEvent,
      traceId) {
    return this.proxy.sendMessage(
        3,
        blink.mojom.CacheStorage_Match_ParamsSpec.$,
        blink.mojom.CacheStorage_Match_ResponseParamsSpec.$,
        [
          request,
          matchOptions,
          inRelatedFetchEvent,
          inRangeFetchEvent,
          traceId
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.String16 } cacheName
   * @param { !bigint } traceId
   * @return {!Promise<{
        result: !blink.mojom.OpenResult,
   *  }>}
   */

  open(
      cacheName,
      traceId) {
    return this.proxy.sendMessage(
        4,
        blink.mojom.CacheStorage_Open_ParamsSpec.$,
        blink.mojom.CacheStorage_Open_ResponseParamsSpec.$,
        [
          cacheName,
          traceId
        ]);
  }
};

/**
 * An object which receives request messages for the CacheStorage
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
blink.mojom.CacheStorageReceiver = class {
  /**
   * @param {!blink.mojom.CacheStorageInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!blink.mojom.CacheStorageRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        blink.mojom.CacheStorageRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!blink.mojom.CacheStorageRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        blink.mojom.CacheStorage_Has_ParamsSpec.$,
        blink.mojom.CacheStorage_Has_ResponseParamsSpec.$,
        impl.has.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        blink.mojom.CacheStorage_Delete_ParamsSpec.$,
        blink.mojom.CacheStorage_Delete_ResponseParamsSpec.$,
        impl.delete.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        blink.mojom.CacheStorage_Keys_ParamsSpec.$,
        blink.mojom.CacheStorage_Keys_ResponseParamsSpec.$,
        impl.keys.bind(impl));
    this.helper_internal_.registerHandler(
        3,
        blink.mojom.CacheStorage_Match_ParamsSpec.$,
        blink.mojom.CacheStorage_Match_ResponseParamsSpec.$,
        impl.match.bind(impl));
    this.helper_internal_.registerHandler(
        4,
        blink.mojom.CacheStorage_Open_ParamsSpec.$,
        blink.mojom.CacheStorage_Open_ResponseParamsSpec.$,
        impl.open.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
blink.mojom.CacheStorage = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "blink.mojom.CacheStorage";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!blink.mojom.CacheStorageRemote}
   * @export
   */
  static getRemote() {
    let remote = new blink.mojom.CacheStorageRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the CacheStorage
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
blink.mojom.CacheStorageCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      blink.mojom.CacheStorageRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!blink.mojom.CacheStorageRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.has =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        blink.mojom.CacheStorage_Has_ParamsSpec.$,
        blink.mojom.CacheStorage_Has_ResponseParamsSpec.$,
        this.has.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.delete =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        blink.mojom.CacheStorage_Delete_ParamsSpec.$,
        blink.mojom.CacheStorage_Delete_ResponseParamsSpec.$,
        this.delete.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.keys =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        blink.mojom.CacheStorage_Keys_ParamsSpec.$,
        blink.mojom.CacheStorage_Keys_ResponseParamsSpec.$,
        this.keys.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.match =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        3,
        blink.mojom.CacheStorage_Match_ParamsSpec.$,
        blink.mojom.CacheStorage_Match_ResponseParamsSpec.$,
        this.match.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.open =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        4,
        blink.mojom.CacheStorage_Open_ParamsSpec.$,
        blink.mojom.CacheStorage_Open_ResponseParamsSpec.$,
        this.open.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('blink.mojom.CacheStorageVerboseErrorSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.CacheStorageVerboseErrorSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.CacheQueryOptionsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.CacheQueryOptionsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.MultiCacheQueryOptionsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.MultiCacheQueryOptionsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.BatchOperationSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.BatchOperationSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.EagerResponseSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.EagerResponseSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.CacheEntrySpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.CacheEntrySpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.CacheStorageCache_Match_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.CacheStorageCache_Match_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.CacheStorageCache_Match_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.CacheStorageCache_Match_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.CacheStorageCache_MatchAll_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.CacheStorageCache_MatchAll_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.CacheStorageCache_MatchAll_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.CacheStorageCache_MatchAll_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.CacheStorageCache_GetAllMatchedEntries_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.CacheStorageCache_GetAllMatchedEntries_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.CacheStorageCache_GetAllMatchedEntries_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.CacheStorageCache_GetAllMatchedEntries_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.CacheStorageCache_Keys_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.CacheStorageCache_Keys_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.CacheStorageCache_Keys_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.CacheStorageCache_Keys_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.CacheStorageCache_Batch_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.CacheStorageCache_Batch_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.CacheStorageCache_Batch_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.CacheStorageCache_Batch_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.CacheStorageCache_WriteSideData_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.CacheStorageCache_WriteSideData_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.CacheStorageCache_WriteSideData_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.CacheStorageCache_WriteSideData_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.CacheStorage_Has_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.CacheStorage_Has_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.CacheStorage_Has_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.CacheStorage_Has_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.CacheStorage_Delete_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.CacheStorage_Delete_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.CacheStorage_Delete_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.CacheStorage_Delete_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.CacheStorage_Keys_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.CacheStorage_Keys_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.CacheStorage_Keys_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.CacheStorage_Keys_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.CacheStorage_Match_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.CacheStorage_Match_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.CacheStorage_Match_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.CacheStorage_Match_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.CacheStorage_Open_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.CacheStorage_Open_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.CacheStorage_Open_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.CacheStorage_Open_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.OpenResultSpec');
/**
 * @const { {$:!mojo.internal.MojomType} }
 * @export
 */
blink.mojom.OpenResultSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.MatchResultSpec');
/**
 * @const { {$:!mojo.internal.MojomType} }
 * @export
 */
blink.mojom.MatchResultSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.MatchAllResultSpec');
/**
 * @const { {$:!mojo.internal.MojomType} }
 * @export
 */
blink.mojom.MatchAllResultSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.GetAllMatchedEntriesResultSpec');
/**
 * @const { {$:!mojo.internal.MojomType} }
 * @export
 */
blink.mojom.GetAllMatchedEntriesResultSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.CacheKeysResultSpec');
/**
 * @const { {$:!mojo.internal.MojomType} }
 * @export
 */
blink.mojom.CacheKeysResultSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    blink.mojom.CacheStorageVerboseErrorSpec.$,
    'CacheStorageVerboseError',
    [
      mojo.internal.StructField(
        'value', 0,
        0,
        blink.mojom.CacheStorageErrorSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'message', 8,
        0,
        mojo.internal.String,
        null,
        true /* nullable */),
    ],
    [[0, 24],]);



goog.provide('blink.mojom.CacheStorageVerboseError');

/** @record */
blink.mojom.CacheStorageVerboseError = class {
  constructor() {
    /** @export { !blink.mojom.CacheStorageError } */
    this.value;
    /** @export { (string|undefined) } */
    this.message;
  }
};




mojo.internal.Struct(
    blink.mojom.CacheQueryOptionsSpec.$,
    'CacheQueryOptions',
    [
      mojo.internal.StructField(
        'ignoreSearch', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'ignoreMethod', 0,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'ignoreVary', 0,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('blink.mojom.CacheQueryOptions');

/** @record */
blink.mojom.CacheQueryOptions = class {
  constructor() {
    /** @export { !boolean } */
    this.ignoreSearch;
    /** @export { !boolean } */
    this.ignoreMethod;
    /** @export { !boolean } */
    this.ignoreVary;
  }
};




mojo.internal.Struct(
    blink.mojom.MultiCacheQueryOptionsSpec.$,
    'MultiCacheQueryOptions',
    [
      mojo.internal.StructField(
        'queryOptions', 0,
        0,
        blink.mojom.CacheQueryOptionsSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'cacheName', 8,
        0,
        mojoBase.mojom.String16Spec.$,
        null,
        true /* nullable */),
    ],
    [[0, 24],]);



goog.provide('blink.mojom.MultiCacheQueryOptions');

/** @record */
blink.mojom.MultiCacheQueryOptions = class {
  constructor() {
    /** @export { !blink.mojom.CacheQueryOptions } */
    this.queryOptions;
    /** @export { (mojoBase.mojom.String16|undefined) } */
    this.cacheName;
  }
};




mojo.internal.Struct(
    blink.mojom.BatchOperationSpec.$,
    'BatchOperation',
    [
      mojo.internal.StructField(
        'operationType', 0,
        0,
        blink.mojom.OperationTypeSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'request', 8,
        0,
        blink.mojom.FetchAPIRequestSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'response', 16,
        0,
        blink.mojom.FetchAPIResponseSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'matchOptions', 24,
        0,
        blink.mojom.CacheQueryOptionsSpec.$,
        null,
        true /* nullable */),
    ],
    [[0, 40],]);



goog.provide('blink.mojom.BatchOperation');

/** @record */
blink.mojom.BatchOperation = class {
  constructor() {
    /** @export { !blink.mojom.OperationType } */
    this.operationType;
    /** @export { !blink.mojom.FetchAPIRequest } */
    this.request;
    /** @export { (blink.mojom.FetchAPIResponse|undefined) } */
    this.response;
    /** @export { (blink.mojom.CacheQueryOptions|undefined) } */
    this.matchOptions;
  }
};




mojo.internal.Struct(
    blink.mojom.EagerResponseSpec.$,
    'EagerResponse',
    [
      mojo.internal.StructField(
        'response', 0,
        0,
        blink.mojom.FetchAPIResponseSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'pipe', 8,
        0,
        mojo.internal.Handle,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'clientReceiver', 12,
        0,
        mojo.internal.InterfaceRequest(blink.mojom.BlobReaderClientPendingReceiver),
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('blink.mojom.EagerResponse');

/** @record */
blink.mojom.EagerResponse = class {
  constructor() {
    /** @export { !blink.mojom.FetchAPIResponse } */
    this.response;
    /** @export { !MojoHandle } */
    this.pipe;
    /** @export { !blink.mojom.BlobReaderClientPendingReceiver } */
    this.clientReceiver;
  }
};




mojo.internal.Struct(
    blink.mojom.CacheEntrySpec.$,
    'CacheEntry',
    [
      mojo.internal.StructField(
        'request', 0,
        0,
        blink.mojom.FetchAPIRequestSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'response', 8,
        0,
        blink.mojom.FetchAPIResponseSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('blink.mojom.CacheEntry');

/** @record */
blink.mojom.CacheEntry = class {
  constructor() {
    /** @export { !blink.mojom.FetchAPIRequest } */
    this.request;
    /** @export { !blink.mojom.FetchAPIResponse } */
    this.response;
  }
};




mojo.internal.Struct(
    blink.mojom.CacheStorageCache_Match_ParamsSpec.$,
    'CacheStorageCache_Match_Params',
    [
      mojo.internal.StructField(
        'request', 0,
        0,
        blink.mojom.FetchAPIRequestSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'queryOptions', 8,
        0,
        blink.mojom.CacheQueryOptionsSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'inRelatedFetchEvent', 16,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'inRangeFetchEvent', 16,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'traceId', 24,
        0,
        mojo.internal.Int64,
        BigInt(0),
        false /* nullable */),
    ],
    [[0, 40],]);



goog.provide('blink.mojom.CacheStorageCache_Match_Params');

/** @record */
blink.mojom.CacheStorageCache_Match_Params = class {
  constructor() {
    /** @export { !blink.mojom.FetchAPIRequest } */
    this.request;
    /** @export { !blink.mojom.CacheQueryOptions } */
    this.queryOptions;
    /** @export { !boolean } */
    this.inRelatedFetchEvent;
    /** @export { !boolean } */
    this.inRangeFetchEvent;
    /** @export { !bigint } */
    this.traceId;
  }
};




mojo.internal.Struct(
    blink.mojom.CacheStorageCache_Match_ResponseParamsSpec.$,
    'CacheStorageCache_Match_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        blink.mojom.MatchResultSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('blink.mojom.CacheStorageCache_Match_ResponseParams');

/** @record */
blink.mojom.CacheStorageCache_Match_ResponseParams = class {
  constructor() {
    /** @export { !blink.mojom.MatchResult } */
    this.result;
  }
};




mojo.internal.Struct(
    blink.mojom.CacheStorageCache_MatchAll_ParamsSpec.$,
    'CacheStorageCache_MatchAll_Params',
    [
      mojo.internal.StructField(
        'request', 0,
        0,
        blink.mojom.FetchAPIRequestSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'queryOptions', 8,
        0,
        blink.mojom.CacheQueryOptionsSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'traceId', 16,
        0,
        mojo.internal.Int64,
        BigInt(0),
        false /* nullable */),
    ],
    [[0, 32],]);



goog.provide('blink.mojom.CacheStorageCache_MatchAll_Params');

/** @record */
blink.mojom.CacheStorageCache_MatchAll_Params = class {
  constructor() {
    /** @export { (blink.mojom.FetchAPIRequest|undefined) } */
    this.request;
    /** @export { !blink.mojom.CacheQueryOptions } */
    this.queryOptions;
    /** @export { !bigint } */
    this.traceId;
  }
};




mojo.internal.Struct(
    blink.mojom.CacheStorageCache_MatchAll_ResponseParamsSpec.$,
    'CacheStorageCache_MatchAll_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        blink.mojom.MatchAllResultSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('blink.mojom.CacheStorageCache_MatchAll_ResponseParams');

/** @record */
blink.mojom.CacheStorageCache_MatchAll_ResponseParams = class {
  constructor() {
    /** @export { !blink.mojom.MatchAllResult } */
    this.result;
  }
};




mojo.internal.Struct(
    blink.mojom.CacheStorageCache_GetAllMatchedEntries_ParamsSpec.$,
    'CacheStorageCache_GetAllMatchedEntries_Params',
    [
      mojo.internal.StructField(
        'request', 0,
        0,
        blink.mojom.FetchAPIRequestSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'queryOptions', 8,
        0,
        blink.mojom.CacheQueryOptionsSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'traceId', 16,
        0,
        mojo.internal.Int64,
        BigInt(0),
        false /* nullable */),
    ],
    [[0, 32],]);



goog.provide('blink.mojom.CacheStorageCache_GetAllMatchedEntries_Params');

/** @record */
blink.mojom.CacheStorageCache_GetAllMatchedEntries_Params = class {
  constructor() {
    /** @export { (blink.mojom.FetchAPIRequest|undefined) } */
    this.request;
    /** @export { !blink.mojom.CacheQueryOptions } */
    this.queryOptions;
    /** @export { !bigint } */
    this.traceId;
  }
};




mojo.internal.Struct(
    blink.mojom.CacheStorageCache_GetAllMatchedEntries_ResponseParamsSpec.$,
    'CacheStorageCache_GetAllMatchedEntries_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        blink.mojom.GetAllMatchedEntriesResultSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('blink.mojom.CacheStorageCache_GetAllMatchedEntries_ResponseParams');

/** @record */
blink.mojom.CacheStorageCache_GetAllMatchedEntries_ResponseParams = class {
  constructor() {
    /** @export { !blink.mojom.GetAllMatchedEntriesResult } */
    this.result;
  }
};




mojo.internal.Struct(
    blink.mojom.CacheStorageCache_Keys_ParamsSpec.$,
    'CacheStorageCache_Keys_Params',
    [
      mojo.internal.StructField(
        'request', 0,
        0,
        blink.mojom.FetchAPIRequestSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'queryOptions', 8,
        0,
        blink.mojom.CacheQueryOptionsSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'traceId', 16,
        0,
        mojo.internal.Int64,
        BigInt(0),
        false /* nullable */),
    ],
    [[0, 32],]);



goog.provide('blink.mojom.CacheStorageCache_Keys_Params');

/** @record */
blink.mojom.CacheStorageCache_Keys_Params = class {
  constructor() {
    /** @export { (blink.mojom.FetchAPIRequest|undefined) } */
    this.request;
    /** @export { !blink.mojom.CacheQueryOptions } */
    this.queryOptions;
    /** @export { !bigint } */
    this.traceId;
  }
};




mojo.internal.Struct(
    blink.mojom.CacheStorageCache_Keys_ResponseParamsSpec.$,
    'CacheStorageCache_Keys_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        blink.mojom.CacheKeysResultSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('blink.mojom.CacheStorageCache_Keys_ResponseParams');

/** @record */
blink.mojom.CacheStorageCache_Keys_ResponseParams = class {
  constructor() {
    /** @export { !blink.mojom.CacheKeysResult } */
    this.result;
  }
};




mojo.internal.Struct(
    blink.mojom.CacheStorageCache_Batch_ParamsSpec.$,
    'CacheStorageCache_Batch_Params',
    [
      mojo.internal.StructField(
        'batchOperations', 0,
        0,
        mojo.internal.Array(blink.mojom.BatchOperationSpec.$, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'traceId', 8,
        0,
        mojo.internal.Int64,
        BigInt(0),
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('blink.mojom.CacheStorageCache_Batch_Params');

/** @record */
blink.mojom.CacheStorageCache_Batch_Params = class {
  constructor() {
    /** @export { !Array<!blink.mojom.BatchOperation> } */
    this.batchOperations;
    /** @export { !bigint } */
    this.traceId;
  }
};




mojo.internal.Struct(
    blink.mojom.CacheStorageCache_Batch_ResponseParamsSpec.$,
    'CacheStorageCache_Batch_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        blink.mojom.CacheStorageVerboseErrorSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('blink.mojom.CacheStorageCache_Batch_ResponseParams');

/** @record */
blink.mojom.CacheStorageCache_Batch_ResponseParams = class {
  constructor() {
    /** @export { !blink.mojom.CacheStorageVerboseError } */
    this.result;
  }
};




mojo.internal.Struct(
    blink.mojom.CacheStorageCache_WriteSideData_ParamsSpec.$,
    'CacheStorageCache_WriteSideData_Params',
    [
      mojo.internal.StructField(
        'url', 0,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'expectedResponseTime', 8,
        0,
        mojoBase.mojom.TimeSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'data', 16,
        0,
        mojoBase.mojom.BigBufferSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'traceId', 32,
        0,
        mojo.internal.Int64,
        BigInt(0),
        false /* nullable */),
    ],
    [[0, 48],]);



goog.provide('blink.mojom.CacheStorageCache_WriteSideData_Params');

/** @record */
blink.mojom.CacheStorageCache_WriteSideData_Params = class {
  constructor() {
    /** @export { !url.mojom.Url } */
    this.url;
    /** @export { !mojoBase.mojom.Time } */
    this.expectedResponseTime;
    /** @export { !mojoBase.mojom.BigBuffer } */
    this.data;
    /** @export { !bigint } */
    this.traceId;
  }
};




mojo.internal.Struct(
    blink.mojom.CacheStorageCache_WriteSideData_ResponseParamsSpec.$,
    'CacheStorageCache_WriteSideData_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        blink.mojom.CacheStorageErrorSpec.$,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('blink.mojom.CacheStorageCache_WriteSideData_ResponseParams');

/** @record */
blink.mojom.CacheStorageCache_WriteSideData_ResponseParams = class {
  constructor() {
    /** @export { !blink.mojom.CacheStorageError } */
    this.result;
  }
};




mojo.internal.Struct(
    blink.mojom.CacheStorage_Has_ParamsSpec.$,
    'CacheStorage_Has_Params',
    [
      mojo.internal.StructField(
        'cacheName', 0,
        0,
        mojoBase.mojom.String16Spec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'traceId', 8,
        0,
        mojo.internal.Int64,
        BigInt(0),
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('blink.mojom.CacheStorage_Has_Params');

/** @record */
blink.mojom.CacheStorage_Has_Params = class {
  constructor() {
    /** @export { !mojoBase.mojom.String16 } */
    this.cacheName;
    /** @export { !bigint } */
    this.traceId;
  }
};




mojo.internal.Struct(
    blink.mojom.CacheStorage_Has_ResponseParamsSpec.$,
    'CacheStorage_Has_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        blink.mojom.CacheStorageErrorSpec.$,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('blink.mojom.CacheStorage_Has_ResponseParams');

/** @record */
blink.mojom.CacheStorage_Has_ResponseParams = class {
  constructor() {
    /** @export { !blink.mojom.CacheStorageError } */
    this.result;
  }
};




mojo.internal.Struct(
    blink.mojom.CacheStorage_Delete_ParamsSpec.$,
    'CacheStorage_Delete_Params',
    [
      mojo.internal.StructField(
        'cacheName', 0,
        0,
        mojoBase.mojom.String16Spec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'traceId', 8,
        0,
        mojo.internal.Int64,
        BigInt(0),
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('blink.mojom.CacheStorage_Delete_Params');

/** @record */
blink.mojom.CacheStorage_Delete_Params = class {
  constructor() {
    /** @export { !mojoBase.mojom.String16 } */
    this.cacheName;
    /** @export { !bigint } */
    this.traceId;
  }
};




mojo.internal.Struct(
    blink.mojom.CacheStorage_Delete_ResponseParamsSpec.$,
    'CacheStorage_Delete_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        blink.mojom.CacheStorageErrorSpec.$,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('blink.mojom.CacheStorage_Delete_ResponseParams');

/** @record */
blink.mojom.CacheStorage_Delete_ResponseParams = class {
  constructor() {
    /** @export { !blink.mojom.CacheStorageError } */
    this.result;
  }
};




mojo.internal.Struct(
    blink.mojom.CacheStorage_Keys_ParamsSpec.$,
    'CacheStorage_Keys_Params',
    [
      mojo.internal.StructField(
        'traceId', 0,
        0,
        mojo.internal.Int64,
        BigInt(0),
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('blink.mojom.CacheStorage_Keys_Params');

/** @record */
blink.mojom.CacheStorage_Keys_Params = class {
  constructor() {
    /** @export { !bigint } */
    this.traceId;
  }
};




mojo.internal.Struct(
    blink.mojom.CacheStorage_Keys_ResponseParamsSpec.$,
    'CacheStorage_Keys_ResponseParams',
    [
      mojo.internal.StructField(
        'keys', 0,
        0,
        mojo.internal.Array(mojoBase.mojom.String16Spec.$, false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('blink.mojom.CacheStorage_Keys_ResponseParams');

/** @record */
blink.mojom.CacheStorage_Keys_ResponseParams = class {
  constructor() {
    /** @export { !Array<!mojoBase.mojom.String16> } */
    this.keys;
  }
};




mojo.internal.Struct(
    blink.mojom.CacheStorage_Match_ParamsSpec.$,
    'CacheStorage_Match_Params',
    [
      mojo.internal.StructField(
        'request', 0,
        0,
        blink.mojom.FetchAPIRequestSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'matchOptions', 8,
        0,
        blink.mojom.MultiCacheQueryOptionsSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'inRelatedFetchEvent', 16,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'inRangeFetchEvent', 16,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'traceId', 24,
        0,
        mojo.internal.Int64,
        BigInt(0),
        false /* nullable */),
    ],
    [[0, 40],]);



goog.provide('blink.mojom.CacheStorage_Match_Params');

/** @record */
blink.mojom.CacheStorage_Match_Params = class {
  constructor() {
    /** @export { !blink.mojom.FetchAPIRequest } */
    this.request;
    /** @export { !blink.mojom.MultiCacheQueryOptions } */
    this.matchOptions;
    /** @export { !boolean } */
    this.inRelatedFetchEvent;
    /** @export { !boolean } */
    this.inRangeFetchEvent;
    /** @export { !bigint } */
    this.traceId;
  }
};




mojo.internal.Struct(
    blink.mojom.CacheStorage_Match_ResponseParamsSpec.$,
    'CacheStorage_Match_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        blink.mojom.MatchResultSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('blink.mojom.CacheStorage_Match_ResponseParams');

/** @record */
blink.mojom.CacheStorage_Match_ResponseParams = class {
  constructor() {
    /** @export { !blink.mojom.MatchResult } */
    this.result;
  }
};




mojo.internal.Struct(
    blink.mojom.CacheStorage_Open_ParamsSpec.$,
    'CacheStorage_Open_Params',
    [
      mojo.internal.StructField(
        'cacheName', 0,
        0,
        mojoBase.mojom.String16Spec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'traceId', 8,
        0,
        mojo.internal.Int64,
        BigInt(0),
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('blink.mojom.CacheStorage_Open_Params');

/** @record */
blink.mojom.CacheStorage_Open_Params = class {
  constructor() {
    /** @export { !mojoBase.mojom.String16 } */
    this.cacheName;
    /** @export { !bigint } */
    this.traceId;
  }
};




mojo.internal.Struct(
    blink.mojom.CacheStorage_Open_ResponseParamsSpec.$,
    'CacheStorage_Open_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        blink.mojom.OpenResultSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('blink.mojom.CacheStorage_Open_ResponseParams');

/** @record */
blink.mojom.CacheStorage_Open_ResponseParams = class {
  constructor() {
    /** @export { !blink.mojom.OpenResult } */
    this.result;
  }
};


goog.provide('blink.mojom.OpenResult');


mojo.internal.Union(
    blink.mojom.OpenResultSpec.$, 'OpenResult',
    {
      'status': {
        'ordinal': 0,
        'type': blink.mojom.CacheStorageErrorSpec.$,
      },
      'cache': {
        'ordinal': 1,
        'type': mojo.internal.AssociatedInterfaceProxy(blink.mojom.CacheStorageCacheRemote),
      },
    });

/**
 * @typedef { {
 *   status: (!blink.mojom.CacheStorageError|undefined),
 *   cache: (!Object|undefined),
 * } }
 */
blink.mojom.OpenResult;
goog.provide('blink.mojom.MatchResult');


mojo.internal.Union(
    blink.mojom.MatchResultSpec.$, 'MatchResult',
    {
      'status': {
        'ordinal': 0,
        'type': blink.mojom.CacheStorageErrorSpec.$,
      },
      'response': {
        'ordinal': 1,
        'type': blink.mojom.FetchAPIResponseSpec.$,
      },
      'eagerResponse': {
        'ordinal': 2,
        'type': blink.mojom.EagerResponseSpec.$,
      },
    });

/**
 * @typedef { {
 *   status: (!blink.mojom.CacheStorageError|undefined),
 *   response: (!blink.mojom.FetchAPIResponse|undefined),
 *   eagerResponse: (!blink.mojom.EagerResponse|undefined),
 * } }
 */
blink.mojom.MatchResult;
goog.provide('blink.mojom.MatchAllResult');


mojo.internal.Union(
    blink.mojom.MatchAllResultSpec.$, 'MatchAllResult',
    {
      'status': {
        'ordinal': 0,
        'type': blink.mojom.CacheStorageErrorSpec.$,
      },
      'responses': {
        'ordinal': 1,
        'type': mojo.internal.Array(blink.mojom.FetchAPIResponseSpec.$, false),
      },
    });

/**
 * @typedef { {
 *   status: (!blink.mojom.CacheStorageError|undefined),
 *   responses: (!Array<!blink.mojom.FetchAPIResponse>|undefined),
 * } }
 */
blink.mojom.MatchAllResult;
goog.provide('blink.mojom.GetAllMatchedEntriesResult');


mojo.internal.Union(
    blink.mojom.GetAllMatchedEntriesResultSpec.$, 'GetAllMatchedEntriesResult',
    {
      'status': {
        'ordinal': 0,
        'type': blink.mojom.CacheStorageErrorSpec.$,
      },
      'entries': {
        'ordinal': 1,
        'type': mojo.internal.Array(blink.mojom.CacheEntrySpec.$, false),
      },
    });

/**
 * @typedef { {
 *   status: (!blink.mojom.CacheStorageError|undefined),
 *   entries: (!Array<!blink.mojom.CacheEntry>|undefined),
 * } }
 */
blink.mojom.GetAllMatchedEntriesResult;
goog.provide('blink.mojom.CacheKeysResult');


mojo.internal.Union(
    blink.mojom.CacheKeysResultSpec.$, 'CacheKeysResult',
    {
      'status': {
        'ordinal': 0,
        'type': blink.mojom.CacheStorageErrorSpec.$,
      },
      'keys': {
        'ordinal': 1,
        'type': mojo.internal.Array(blink.mojom.FetchAPIRequestSpec.$, false),
      },
    });

/**
 * @typedef { {
 *   status: (!blink.mojom.CacheStorageError|undefined),
 *   keys: (!Array<!blink.mojom.FetchAPIRequest>|undefined),
 * } }
 */
blink.mojom.CacheKeysResult;
