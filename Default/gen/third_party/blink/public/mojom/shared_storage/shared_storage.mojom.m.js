// third_party/blink/public/mojom/shared_storage/shared_storage.mojom.m.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import {mojo} from '../../../../../mojo/public/js/bindings.js';

import {
  String16 as mojoBase_mojom_String16,
  String16Spec as mojoBase_mojom_String16Spec
} from '../../../../../mojo/public/mojom/base/string16.mojom.m.js';

import {
  Url as url_mojom_Url,
  UrlSpec as url_mojom_UrlSpec
} from '../../../../../url/mojom/url.mojom.m.js';




/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export class SharedStorageDocumentServicePendingReceiver {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle, 'blink.mojom.SharedStorageDocumentService', scope);
  }
}

/** @interface */
export class SharedStorageDocumentServiceInterface {
  
  /**
   * @param { !url_mojom_Url } scriptSourceUrl
   * @return {!Promise<{
        success: !boolean,
        errorMessage: !string,
   *  }>}
   */

  addModuleOnWorklet(scriptSourceUrl) {}
  
  /**
   * @param { !string } name
   * @param { !Array<!number> } serializedData
   * @return {!Promise<{
        success: !boolean,
        errorMessage: !string,
   *  }>}
   */

  runOperationOnWorklet(name, serializedData) {}
  
  /**
   * @param { !string } name
   * @param { !Array<!SharedStorageUrlWithMetadata> } urlsWithMetadata
   * @param { !Array<!number> } serializedData
   * @return {!Promise<{
        success: !boolean,
        errorMessage: !string,
        opaqueUrl: !url_mojom_Url,
   *  }>}
   */

  runURLSelectionOperationOnWorklet(name, urlsWithMetadata, serializedData) {}
  
  /**
   * @param { !SharedStorageKeyArgument } key
   * @param { !SharedStorageValueArgument } value
   * @param { !boolean } ignoreIfPresent
   * @return {!Promise<{
        success: !boolean,
        errorMessage: !string,
   *  }>}
   */

  sharedStorageSet(key, value, ignoreIfPresent) {}
  
  /**
   * @param { !SharedStorageKeyArgument } key
   * @param { !SharedStorageValueArgument } value
   * @return {!Promise<{
        success: !boolean,
        errorMessage: !string,
   *  }>}
   */

  sharedStorageAppend(key, value) {}
  
  /**
   * @param { !SharedStorageKeyArgument } key
   * @return {!Promise<{
        success: !boolean,
        errorMessage: !string,
   *  }>}
   */

  sharedStorageDelete(key) {}
  
  /**
   * @return {!Promise<{
        success: !boolean,
        errorMessage: !string,
   *  }>}
   */

  sharedStorageClear() {}
}

/**
 * @implements { SharedStorageDocumentServiceInterface }
 */
export class SharedStorageDocumentServiceRemote {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!SharedStorageDocumentServicePendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          SharedStorageDocumentServicePendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!SharedStorageDocumentServicePendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !url_mojom_Url } scriptSourceUrl
   * @return {!Promise<{
        success: !boolean,
        errorMessage: !string,
   *  }>}
   */

  addModuleOnWorklet(
      scriptSourceUrl) {
    return this.proxy.sendMessage(
        0,
        SharedStorageDocumentService_AddModuleOnWorklet_ParamsSpec.$,
        SharedStorageDocumentService_AddModuleOnWorklet_ResponseParamsSpec.$,
        [
          scriptSourceUrl
        ]);
  }

  
  /**
   * @param { !string } name
   * @param { !Array<!number> } serializedData
   * @return {!Promise<{
        success: !boolean,
        errorMessage: !string,
   *  }>}
   */

  runOperationOnWorklet(
      name,
      serializedData) {
    return this.proxy.sendMessage(
        1,
        SharedStorageDocumentService_RunOperationOnWorklet_ParamsSpec.$,
        SharedStorageDocumentService_RunOperationOnWorklet_ResponseParamsSpec.$,
        [
          name,
          serializedData
        ]);
  }

  
  /**
   * @param { !string } name
   * @param { !Array<!SharedStorageUrlWithMetadata> } urlsWithMetadata
   * @param { !Array<!number> } serializedData
   * @return {!Promise<{
        success: !boolean,
        errorMessage: !string,
        opaqueUrl: !url_mojom_Url,
   *  }>}
   */

  runURLSelectionOperationOnWorklet(
      name,
      urlsWithMetadata,
      serializedData) {
    return this.proxy.sendMessage(
        2,
        SharedStorageDocumentService_RunURLSelectionOperationOnWorklet_ParamsSpec.$,
        SharedStorageDocumentService_RunURLSelectionOperationOnWorklet_ResponseParamsSpec.$,
        [
          name,
          urlsWithMetadata,
          serializedData
        ]);
  }

  
  /**
   * @param { !SharedStorageKeyArgument } key
   * @param { !SharedStorageValueArgument } value
   * @param { !boolean } ignoreIfPresent
   * @return {!Promise<{
        success: !boolean,
        errorMessage: !string,
   *  }>}
   */

  sharedStorageSet(
      key,
      value,
      ignoreIfPresent) {
    return this.proxy.sendMessage(
        3,
        SharedStorageDocumentService_SharedStorageSet_ParamsSpec.$,
        SharedStorageDocumentService_SharedStorageSet_ResponseParamsSpec.$,
        [
          key,
          value,
          ignoreIfPresent
        ]);
  }

  
  /**
   * @param { !SharedStorageKeyArgument } key
   * @param { !SharedStorageValueArgument } value
   * @return {!Promise<{
        success: !boolean,
        errorMessage: !string,
   *  }>}
   */

  sharedStorageAppend(
      key,
      value) {
    return this.proxy.sendMessage(
        4,
        SharedStorageDocumentService_SharedStorageAppend_ParamsSpec.$,
        SharedStorageDocumentService_SharedStorageAppend_ResponseParamsSpec.$,
        [
          key,
          value
        ]);
  }

  
  /**
   * @param { !SharedStorageKeyArgument } key
   * @return {!Promise<{
        success: !boolean,
        errorMessage: !string,
   *  }>}
   */

  sharedStorageDelete(
      key) {
    return this.proxy.sendMessage(
        5,
        SharedStorageDocumentService_SharedStorageDelete_ParamsSpec.$,
        SharedStorageDocumentService_SharedStorageDelete_ResponseParamsSpec.$,
        [
          key
        ]);
  }

  
  /**
   * @return {!Promise<{
        success: !boolean,
        errorMessage: !string,
   *  }>}
   */

  sharedStorageClear() {
    return this.proxy.sendMessage(
        6,
        SharedStorageDocumentService_SharedStorageClear_ParamsSpec.$,
        SharedStorageDocumentService_SharedStorageClear_ResponseParamsSpec.$,
        [
        ]);
  }
}

/**
 * An object which receives request messages for the SharedStorageDocumentService
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class SharedStorageDocumentServiceReceiver {
  /**
   * @param {!SharedStorageDocumentServiceInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!SharedStorageDocumentServiceRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        SharedStorageDocumentServiceRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!SharedStorageDocumentServiceRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        SharedStorageDocumentService_AddModuleOnWorklet_ParamsSpec.$,
        SharedStorageDocumentService_AddModuleOnWorklet_ResponseParamsSpec.$,
        impl.addModuleOnWorklet.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        SharedStorageDocumentService_RunOperationOnWorklet_ParamsSpec.$,
        SharedStorageDocumentService_RunOperationOnWorklet_ResponseParamsSpec.$,
        impl.runOperationOnWorklet.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        SharedStorageDocumentService_RunURLSelectionOperationOnWorklet_ParamsSpec.$,
        SharedStorageDocumentService_RunURLSelectionOperationOnWorklet_ResponseParamsSpec.$,
        impl.runURLSelectionOperationOnWorklet.bind(impl));
    this.helper_internal_.registerHandler(
        3,
        SharedStorageDocumentService_SharedStorageSet_ParamsSpec.$,
        SharedStorageDocumentService_SharedStorageSet_ResponseParamsSpec.$,
        impl.sharedStorageSet.bind(impl));
    this.helper_internal_.registerHandler(
        4,
        SharedStorageDocumentService_SharedStorageAppend_ParamsSpec.$,
        SharedStorageDocumentService_SharedStorageAppend_ResponseParamsSpec.$,
        impl.sharedStorageAppend.bind(impl));
    this.helper_internal_.registerHandler(
        5,
        SharedStorageDocumentService_SharedStorageDelete_ParamsSpec.$,
        SharedStorageDocumentService_SharedStorageDelete_ResponseParamsSpec.$,
        impl.sharedStorageDelete.bind(impl));
    this.helper_internal_.registerHandler(
        6,
        SharedStorageDocumentService_SharedStorageClear_ParamsSpec.$,
        SharedStorageDocumentService_SharedStorageClear_ResponseParamsSpec.$,
        impl.sharedStorageClear.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
}

export class SharedStorageDocumentService {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "blink.mojom.SharedStorageDocumentService";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!SharedStorageDocumentServiceRemote}
   */
  static getRemote() {
    let remote = new SharedStorageDocumentServiceRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
}


/**
 * An object which receives request messages for the SharedStorageDocumentService
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class SharedStorageDocumentServiceCallbackRouter {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      SharedStorageDocumentServiceRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!SharedStorageDocumentServiceRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.addModuleOnWorklet =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        SharedStorageDocumentService_AddModuleOnWorklet_ParamsSpec.$,
        SharedStorageDocumentService_AddModuleOnWorklet_ResponseParamsSpec.$,
        this.addModuleOnWorklet.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.runOperationOnWorklet =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        SharedStorageDocumentService_RunOperationOnWorklet_ParamsSpec.$,
        SharedStorageDocumentService_RunOperationOnWorklet_ResponseParamsSpec.$,
        this.runOperationOnWorklet.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.runURLSelectionOperationOnWorklet =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        SharedStorageDocumentService_RunURLSelectionOperationOnWorklet_ParamsSpec.$,
        SharedStorageDocumentService_RunURLSelectionOperationOnWorklet_ResponseParamsSpec.$,
        this.runURLSelectionOperationOnWorklet.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.sharedStorageSet =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        3,
        SharedStorageDocumentService_SharedStorageSet_ParamsSpec.$,
        SharedStorageDocumentService_SharedStorageSet_ResponseParamsSpec.$,
        this.sharedStorageSet.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.sharedStorageAppend =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        4,
        SharedStorageDocumentService_SharedStorageAppend_ParamsSpec.$,
        SharedStorageDocumentService_SharedStorageAppend_ResponseParamsSpec.$,
        this.sharedStorageAppend.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.sharedStorageDelete =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        5,
        SharedStorageDocumentService_SharedStorageDelete_ParamsSpec.$,
        SharedStorageDocumentService_SharedStorageDelete_ResponseParamsSpec.$,
        this.sharedStorageDelete.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.sharedStorageClear =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        6,
        SharedStorageDocumentService_SharedStorageClear_ParamsSpec.$,
        SharedStorageDocumentService_SharedStorageClear_ResponseParamsSpec.$,
        this.sharedStorageClear.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
}

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SharedStorageKeyArgumentSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SharedStorageValueArgumentSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SharedStorageUrlWithMetadataSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SharedStorageDocumentService_AddModuleOnWorklet_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SharedStorageDocumentService_AddModuleOnWorklet_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SharedStorageDocumentService_RunOperationOnWorklet_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SharedStorageDocumentService_RunOperationOnWorklet_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SharedStorageDocumentService_RunURLSelectionOperationOnWorklet_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SharedStorageDocumentService_RunURLSelectionOperationOnWorklet_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SharedStorageDocumentService_SharedStorageSet_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SharedStorageDocumentService_SharedStorageSet_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SharedStorageDocumentService_SharedStorageAppend_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SharedStorageDocumentService_SharedStorageAppend_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SharedStorageDocumentService_SharedStorageDelete_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SharedStorageDocumentService_SharedStorageDelete_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SharedStorageDocumentService_SharedStorageClear_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SharedStorageDocumentService_SharedStorageClear_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    SharedStorageKeyArgumentSpec.$,
    'SharedStorageKeyArgument',
    [
      mojo.internal.StructField(
        'data', 0,
        0,
        mojoBase_mojom_String16Spec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class SharedStorageKeyArgument {
  constructor() {
    /** @type { !mojoBase_mojom_String16 } */
    this.data;
  }
}



mojo.internal.Struct(
    SharedStorageValueArgumentSpec.$,
    'SharedStorageValueArgument',
    [
      mojo.internal.StructField(
        'data', 0,
        0,
        mojoBase_mojom_String16Spec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class SharedStorageValueArgument {
  constructor() {
    /** @type { !mojoBase_mojom_String16 } */
    this.data;
  }
}



mojo.internal.Struct(
    SharedStorageUrlWithMetadataSpec.$,
    'SharedStorageUrlWithMetadata',
    [
      mojo.internal.StructField(
        'url', 0,
        0,
        url_mojom_UrlSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'reportingMetadata', 8,
        0,
        mojo.internal.Map(mojo.internal.String, url_mojom_UrlSpec.$, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class SharedStorageUrlWithMetadata {
  constructor() {
    /** @type { !url_mojom_Url } */
    this.url;
    /** @type { !Object<!string, !url_mojom_Url> } */
    this.reportingMetadata;
  }
}



mojo.internal.Struct(
    SharedStorageDocumentService_AddModuleOnWorklet_ParamsSpec.$,
    'SharedStorageDocumentService_AddModuleOnWorklet_Params',
    [
      mojo.internal.StructField(
        'scriptSourceUrl', 0,
        0,
        url_mojom_UrlSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class SharedStorageDocumentService_AddModuleOnWorklet_Params {
  constructor() {
    /** @type { !url_mojom_Url } */
    this.scriptSourceUrl;
  }
}



mojo.internal.Struct(
    SharedStorageDocumentService_AddModuleOnWorklet_ResponseParamsSpec.$,
    'SharedStorageDocumentService_AddModuleOnWorklet_ResponseParams',
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'errorMessage', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class SharedStorageDocumentService_AddModuleOnWorklet_ResponseParams {
  constructor() {
    /** @type { !boolean } */
    this.success;
    /** @type { !string } */
    this.errorMessage;
  }
}



mojo.internal.Struct(
    SharedStorageDocumentService_RunOperationOnWorklet_ParamsSpec.$,
    'SharedStorageDocumentService_RunOperationOnWorklet_Params',
    [
      mojo.internal.StructField(
        'name', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'serializedData', 8,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class SharedStorageDocumentService_RunOperationOnWorklet_Params {
  constructor() {
    /** @type { !string } */
    this.name;
    /** @type { !Array<!number> } */
    this.serializedData;
  }
}



mojo.internal.Struct(
    SharedStorageDocumentService_RunOperationOnWorklet_ResponseParamsSpec.$,
    'SharedStorageDocumentService_RunOperationOnWorklet_ResponseParams',
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'errorMessage', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class SharedStorageDocumentService_RunOperationOnWorklet_ResponseParams {
  constructor() {
    /** @type { !boolean } */
    this.success;
    /** @type { !string } */
    this.errorMessage;
  }
}



mojo.internal.Struct(
    SharedStorageDocumentService_RunURLSelectionOperationOnWorklet_ParamsSpec.$,
    'SharedStorageDocumentService_RunURLSelectionOperationOnWorklet_Params',
    [
      mojo.internal.StructField(
        'name', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'urlsWithMetadata', 8,
        0,
        mojo.internal.Array(SharedStorageUrlWithMetadataSpec.$, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'serializedData', 16,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class SharedStorageDocumentService_RunURLSelectionOperationOnWorklet_Params {
  constructor() {
    /** @type { !string } */
    this.name;
    /** @type { !Array<!SharedStorageUrlWithMetadata> } */
    this.urlsWithMetadata;
    /** @type { !Array<!number> } */
    this.serializedData;
  }
}



mojo.internal.Struct(
    SharedStorageDocumentService_RunURLSelectionOperationOnWorklet_ResponseParamsSpec.$,
    'SharedStorageDocumentService_RunURLSelectionOperationOnWorklet_ResponseParams',
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'errorMessage', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'opaqueUrl', 16,
        0,
        url_mojom_UrlSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class SharedStorageDocumentService_RunURLSelectionOperationOnWorklet_ResponseParams {
  constructor() {
    /** @type { !boolean } */
    this.success;
    /** @type { !string } */
    this.errorMessage;
    /** @type { !url_mojom_Url } */
    this.opaqueUrl;
  }
}



mojo.internal.Struct(
    SharedStorageDocumentService_SharedStorageSet_ParamsSpec.$,
    'SharedStorageDocumentService_SharedStorageSet_Params',
    [
      mojo.internal.StructField(
        'key', 0,
        0,
        SharedStorageKeyArgumentSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'value', 8,
        0,
        SharedStorageValueArgumentSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'ignoreIfPresent', 16,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class SharedStorageDocumentService_SharedStorageSet_Params {
  constructor() {
    /** @type { !SharedStorageKeyArgument } */
    this.key;
    /** @type { !SharedStorageValueArgument } */
    this.value;
    /** @type { !boolean } */
    this.ignoreIfPresent;
  }
}



mojo.internal.Struct(
    SharedStorageDocumentService_SharedStorageSet_ResponseParamsSpec.$,
    'SharedStorageDocumentService_SharedStorageSet_ResponseParams',
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'errorMessage', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class SharedStorageDocumentService_SharedStorageSet_ResponseParams {
  constructor() {
    /** @type { !boolean } */
    this.success;
    /** @type { !string } */
    this.errorMessage;
  }
}



mojo.internal.Struct(
    SharedStorageDocumentService_SharedStorageAppend_ParamsSpec.$,
    'SharedStorageDocumentService_SharedStorageAppend_Params',
    [
      mojo.internal.StructField(
        'key', 0,
        0,
        SharedStorageKeyArgumentSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'value', 8,
        0,
        SharedStorageValueArgumentSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class SharedStorageDocumentService_SharedStorageAppend_Params {
  constructor() {
    /** @type { !SharedStorageKeyArgument } */
    this.key;
    /** @type { !SharedStorageValueArgument } */
    this.value;
  }
}



mojo.internal.Struct(
    SharedStorageDocumentService_SharedStorageAppend_ResponseParamsSpec.$,
    'SharedStorageDocumentService_SharedStorageAppend_ResponseParams',
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'errorMessage', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class SharedStorageDocumentService_SharedStorageAppend_ResponseParams {
  constructor() {
    /** @type { !boolean } */
    this.success;
    /** @type { !string } */
    this.errorMessage;
  }
}



mojo.internal.Struct(
    SharedStorageDocumentService_SharedStorageDelete_ParamsSpec.$,
    'SharedStorageDocumentService_SharedStorageDelete_Params',
    [
      mojo.internal.StructField(
        'key', 0,
        0,
        SharedStorageKeyArgumentSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class SharedStorageDocumentService_SharedStorageDelete_Params {
  constructor() {
    /** @type { !SharedStorageKeyArgument } */
    this.key;
  }
}



mojo.internal.Struct(
    SharedStorageDocumentService_SharedStorageDelete_ResponseParamsSpec.$,
    'SharedStorageDocumentService_SharedStorageDelete_ResponseParams',
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'errorMessage', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class SharedStorageDocumentService_SharedStorageDelete_ResponseParams {
  constructor() {
    /** @type { !boolean } */
    this.success;
    /** @type { !string } */
    this.errorMessage;
  }
}



mojo.internal.Struct(
    SharedStorageDocumentService_SharedStorageClear_ParamsSpec.$,
    'SharedStorageDocumentService_SharedStorageClear_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class SharedStorageDocumentService_SharedStorageClear_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    SharedStorageDocumentService_SharedStorageClear_ResponseParamsSpec.$,
    'SharedStorageDocumentService_SharedStorageClear_ResponseParams',
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'errorMessage', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class SharedStorageDocumentService_SharedStorageClear_ResponseParams {
  constructor() {
    /** @type { !boolean } */
    this.success;
    /** @type { !string } */
    this.errorMessage;
  }
}

