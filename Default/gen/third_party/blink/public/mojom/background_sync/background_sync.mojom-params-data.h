// third_party/blink/public/mojom/background_sync/background_sync.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_BACKGROUND_SYNC_BACKGROUND_SYNC_MOJOM_PARAMS_DATA_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_BACKGROUND_SYNC_BACKGROUND_SYNC_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace blink {
namespace mojom {
namespace internal {

class ValidationContext;
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) OneShotBackgroundSyncService_Register_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::SyncRegistrationOptions_Data> options;
  int64_t service_worker_registration_id;

 private:
  friend class mojo::internal::MessageFragment<OneShotBackgroundSyncService_Register_Params_Data>;

  OneShotBackgroundSyncService_Register_Params_Data();
  ~OneShotBackgroundSyncService_Register_Params_Data() = delete;
};
static_assert(sizeof(OneShotBackgroundSyncService_Register_Params_Data) == 24,
              "Bad sizeof(OneShotBackgroundSyncService_Register_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) OneShotBackgroundSyncService_Register_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t err;
  uint8_t pad0_[4];
  mojo::internal::Pointer<internal::SyncRegistrationOptions_Data> options;

 private:
  friend class mojo::internal::MessageFragment<OneShotBackgroundSyncService_Register_ResponseParams_Data>;

  OneShotBackgroundSyncService_Register_ResponseParams_Data();
  ~OneShotBackgroundSyncService_Register_ResponseParams_Data() = delete;
};
static_assert(sizeof(OneShotBackgroundSyncService_Register_ResponseParams_Data) == 24,
              "Bad sizeof(OneShotBackgroundSyncService_Register_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) OneShotBackgroundSyncService_DidResolveRegistration_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::BackgroundSyncRegistrationInfo_Data> registration_info;

 private:
  friend class mojo::internal::MessageFragment<OneShotBackgroundSyncService_DidResolveRegistration_Params_Data>;

  OneShotBackgroundSyncService_DidResolveRegistration_Params_Data();
  ~OneShotBackgroundSyncService_DidResolveRegistration_Params_Data() = delete;
};
static_assert(sizeof(OneShotBackgroundSyncService_DidResolveRegistration_Params_Data) == 16,
              "Bad sizeof(OneShotBackgroundSyncService_DidResolveRegistration_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) OneShotBackgroundSyncService_GetRegistrations_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t service_worker_registration_id;

 private:
  friend class mojo::internal::MessageFragment<OneShotBackgroundSyncService_GetRegistrations_Params_Data>;

  OneShotBackgroundSyncService_GetRegistrations_Params_Data();
  ~OneShotBackgroundSyncService_GetRegistrations_Params_Data() = delete;
};
static_assert(sizeof(OneShotBackgroundSyncService_GetRegistrations_Params_Data) == 16,
              "Bad sizeof(OneShotBackgroundSyncService_GetRegistrations_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) OneShotBackgroundSyncService_GetRegistrations_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t err;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<internal::SyncRegistrationOptions_Data>>> registrations;

 private:
  friend class mojo::internal::MessageFragment<OneShotBackgroundSyncService_GetRegistrations_ResponseParams_Data>;

  OneShotBackgroundSyncService_GetRegistrations_ResponseParams_Data();
  ~OneShotBackgroundSyncService_GetRegistrations_ResponseParams_Data() = delete;
};
static_assert(sizeof(OneShotBackgroundSyncService_GetRegistrations_ResponseParams_Data) == 24,
              "Bad sizeof(OneShotBackgroundSyncService_GetRegistrations_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) PeriodicBackgroundSyncService_Register_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::SyncRegistrationOptions_Data> options;
  int64_t service_worker_registration_id;

 private:
  friend class mojo::internal::MessageFragment<PeriodicBackgroundSyncService_Register_Params_Data>;

  PeriodicBackgroundSyncService_Register_Params_Data();
  ~PeriodicBackgroundSyncService_Register_Params_Data() = delete;
};
static_assert(sizeof(PeriodicBackgroundSyncService_Register_Params_Data) == 24,
              "Bad sizeof(PeriodicBackgroundSyncService_Register_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) PeriodicBackgroundSyncService_Register_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t err;
  uint8_t pad0_[4];
  mojo::internal::Pointer<internal::SyncRegistrationOptions_Data> options;

 private:
  friend class mojo::internal::MessageFragment<PeriodicBackgroundSyncService_Register_ResponseParams_Data>;

  PeriodicBackgroundSyncService_Register_ResponseParams_Data();
  ~PeriodicBackgroundSyncService_Register_ResponseParams_Data() = delete;
};
static_assert(sizeof(PeriodicBackgroundSyncService_Register_ResponseParams_Data) == 24,
              "Bad sizeof(PeriodicBackgroundSyncService_Register_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) PeriodicBackgroundSyncService_Unregister_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t service_worker_registration_id;
  mojo::internal::Pointer<mojo::internal::String_Data> tag;

 private:
  friend class mojo::internal::MessageFragment<PeriodicBackgroundSyncService_Unregister_Params_Data>;

  PeriodicBackgroundSyncService_Unregister_Params_Data();
  ~PeriodicBackgroundSyncService_Unregister_Params_Data() = delete;
};
static_assert(sizeof(PeriodicBackgroundSyncService_Unregister_Params_Data) == 24,
              "Bad sizeof(PeriodicBackgroundSyncService_Unregister_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) PeriodicBackgroundSyncService_Unregister_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t err;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<PeriodicBackgroundSyncService_Unregister_ResponseParams_Data>;

  PeriodicBackgroundSyncService_Unregister_ResponseParams_Data();
  ~PeriodicBackgroundSyncService_Unregister_ResponseParams_Data() = delete;
};
static_assert(sizeof(PeriodicBackgroundSyncService_Unregister_ResponseParams_Data) == 16,
              "Bad sizeof(PeriodicBackgroundSyncService_Unregister_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) PeriodicBackgroundSyncService_GetRegistrations_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t service_worker_registration_id;

 private:
  friend class mojo::internal::MessageFragment<PeriodicBackgroundSyncService_GetRegistrations_Params_Data>;

  PeriodicBackgroundSyncService_GetRegistrations_Params_Data();
  ~PeriodicBackgroundSyncService_GetRegistrations_Params_Data() = delete;
};
static_assert(sizeof(PeriodicBackgroundSyncService_GetRegistrations_Params_Data) == 16,
              "Bad sizeof(PeriodicBackgroundSyncService_GetRegistrations_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) PeriodicBackgroundSyncService_GetRegistrations_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t err;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<internal::SyncRegistrationOptions_Data>>> registrations;

 private:
  friend class mojo::internal::MessageFragment<PeriodicBackgroundSyncService_GetRegistrations_ResponseParams_Data>;

  PeriodicBackgroundSyncService_GetRegistrations_ResponseParams_Data();
  ~PeriodicBackgroundSyncService_GetRegistrations_ResponseParams_Data() = delete;
};
static_assert(sizeof(PeriodicBackgroundSyncService_GetRegistrations_ResponseParams_Data) == 24,
              "Bad sizeof(PeriodicBackgroundSyncService_GetRegistrations_ResponseParams_Data)");

}  // namespace internal


class OneShotBackgroundSyncService_Register_ParamsDataView {
 public:
  OneShotBackgroundSyncService_Register_ParamsDataView() = default;

  OneShotBackgroundSyncService_Register_ParamsDataView(
      internal::OneShotBackgroundSyncService_Register_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetOptionsDataView(
      SyncRegistrationOptionsDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadOptions(UserType* output) {
    
    auto* pointer = data_->options.Get();
    return mojo::internal::Deserialize<::blink::mojom::SyncRegistrationOptionsDataView>(
        pointer, output, message_);
  }
  int64_t service_worker_registration_id() const {
    return data_->service_worker_registration_id;
  }
 private:
  internal::OneShotBackgroundSyncService_Register_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class OneShotBackgroundSyncService_Register_ResponseParamsDataView {
 public:
  OneShotBackgroundSyncService_Register_ResponseParamsDataView() = default;

  OneShotBackgroundSyncService_Register_ResponseParamsDataView(
      internal::OneShotBackgroundSyncService_Register_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadErr(UserType* output) const {
    auto data_value = data_->err;
    return mojo::internal::Deserialize<::blink::mojom::BackgroundSyncError>(
        data_value, output);
  }
  BackgroundSyncError err() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::blink::mojom::BackgroundSyncError>(data_->err));
  }
  inline void GetOptionsDataView(
      SyncRegistrationOptionsDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadOptions(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::blink::mojom::SyncRegistrationOptionsDataView, UserType>(),
    "Attempting to read the optional `options` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadOptions` instead "
    "of `ReadOptions if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->options.Get();
    return mojo::internal::Deserialize<::blink::mojom::SyncRegistrationOptionsDataView>(
        pointer, output, message_);
  }
 private:
  internal::OneShotBackgroundSyncService_Register_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class OneShotBackgroundSyncService_DidResolveRegistration_ParamsDataView {
 public:
  OneShotBackgroundSyncService_DidResolveRegistration_ParamsDataView() = default;

  OneShotBackgroundSyncService_DidResolveRegistration_ParamsDataView(
      internal::OneShotBackgroundSyncService_DidResolveRegistration_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetRegistrationInfoDataView(
      BackgroundSyncRegistrationInfoDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadRegistrationInfo(UserType* output) {
    
    auto* pointer = data_->registration_info.Get();
    return mojo::internal::Deserialize<::blink::mojom::BackgroundSyncRegistrationInfoDataView>(
        pointer, output, message_);
  }
 private:
  internal::OneShotBackgroundSyncService_DidResolveRegistration_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class OneShotBackgroundSyncService_GetRegistrations_ParamsDataView {
 public:
  OneShotBackgroundSyncService_GetRegistrations_ParamsDataView() = default;

  OneShotBackgroundSyncService_GetRegistrations_ParamsDataView(
      internal::OneShotBackgroundSyncService_GetRegistrations_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int64_t service_worker_registration_id() const {
    return data_->service_worker_registration_id;
  }
 private:
  internal::OneShotBackgroundSyncService_GetRegistrations_Params_Data* data_ = nullptr;
};



class OneShotBackgroundSyncService_GetRegistrations_ResponseParamsDataView {
 public:
  OneShotBackgroundSyncService_GetRegistrations_ResponseParamsDataView() = default;

  OneShotBackgroundSyncService_GetRegistrations_ResponseParamsDataView(
      internal::OneShotBackgroundSyncService_GetRegistrations_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadErr(UserType* output) const {
    auto data_value = data_->err;
    return mojo::internal::Deserialize<::blink::mojom::BackgroundSyncError>(
        data_value, output);
  }
  BackgroundSyncError err() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::blink::mojom::BackgroundSyncError>(data_->err));
  }
  inline void GetRegistrationsDataView(
      mojo::ArrayDataView<SyncRegistrationOptionsDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadRegistrations(UserType* output) {
    
    auto* pointer = data_->registrations.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::blink::mojom::SyncRegistrationOptionsDataView>>(
        pointer, output, message_);
  }
 private:
  internal::OneShotBackgroundSyncService_GetRegistrations_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PeriodicBackgroundSyncService_Register_ParamsDataView {
 public:
  PeriodicBackgroundSyncService_Register_ParamsDataView() = default;

  PeriodicBackgroundSyncService_Register_ParamsDataView(
      internal::PeriodicBackgroundSyncService_Register_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetOptionsDataView(
      SyncRegistrationOptionsDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadOptions(UserType* output) {
    
    auto* pointer = data_->options.Get();
    return mojo::internal::Deserialize<::blink::mojom::SyncRegistrationOptionsDataView>(
        pointer, output, message_);
  }
  int64_t service_worker_registration_id() const {
    return data_->service_worker_registration_id;
  }
 private:
  internal::PeriodicBackgroundSyncService_Register_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PeriodicBackgroundSyncService_Register_ResponseParamsDataView {
 public:
  PeriodicBackgroundSyncService_Register_ResponseParamsDataView() = default;

  PeriodicBackgroundSyncService_Register_ResponseParamsDataView(
      internal::PeriodicBackgroundSyncService_Register_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadErr(UserType* output) const {
    auto data_value = data_->err;
    return mojo::internal::Deserialize<::blink::mojom::BackgroundSyncError>(
        data_value, output);
  }
  BackgroundSyncError err() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::blink::mojom::BackgroundSyncError>(data_->err));
  }
  inline void GetOptionsDataView(
      SyncRegistrationOptionsDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadOptions(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::blink::mojom::SyncRegistrationOptionsDataView, UserType>(),
    "Attempting to read the optional `options` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadOptions` instead "
    "of `ReadOptions if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->options.Get();
    return mojo::internal::Deserialize<::blink::mojom::SyncRegistrationOptionsDataView>(
        pointer, output, message_);
  }
 private:
  internal::PeriodicBackgroundSyncService_Register_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PeriodicBackgroundSyncService_Unregister_ParamsDataView {
 public:
  PeriodicBackgroundSyncService_Unregister_ParamsDataView() = default;

  PeriodicBackgroundSyncService_Unregister_ParamsDataView(
      internal::PeriodicBackgroundSyncService_Unregister_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  int64_t service_worker_registration_id() const {
    return data_->service_worker_registration_id;
  }
  inline void GetTagDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadTag(UserType* output) {
    
    auto* pointer = data_->tag.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::PeriodicBackgroundSyncService_Unregister_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PeriodicBackgroundSyncService_Unregister_ResponseParamsDataView {
 public:
  PeriodicBackgroundSyncService_Unregister_ResponseParamsDataView() = default;

  PeriodicBackgroundSyncService_Unregister_ResponseParamsDataView(
      internal::PeriodicBackgroundSyncService_Unregister_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadErr(UserType* output) const {
    auto data_value = data_->err;
    return mojo::internal::Deserialize<::blink::mojom::BackgroundSyncError>(
        data_value, output);
  }
  BackgroundSyncError err() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::blink::mojom::BackgroundSyncError>(data_->err));
  }
 private:
  internal::PeriodicBackgroundSyncService_Unregister_ResponseParams_Data* data_ = nullptr;
};



class PeriodicBackgroundSyncService_GetRegistrations_ParamsDataView {
 public:
  PeriodicBackgroundSyncService_GetRegistrations_ParamsDataView() = default;

  PeriodicBackgroundSyncService_GetRegistrations_ParamsDataView(
      internal::PeriodicBackgroundSyncService_GetRegistrations_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int64_t service_worker_registration_id() const {
    return data_->service_worker_registration_id;
  }
 private:
  internal::PeriodicBackgroundSyncService_GetRegistrations_Params_Data* data_ = nullptr;
};



class PeriodicBackgroundSyncService_GetRegistrations_ResponseParamsDataView {
 public:
  PeriodicBackgroundSyncService_GetRegistrations_ResponseParamsDataView() = default;

  PeriodicBackgroundSyncService_GetRegistrations_ResponseParamsDataView(
      internal::PeriodicBackgroundSyncService_GetRegistrations_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadErr(UserType* output) const {
    auto data_value = data_->err;
    return mojo::internal::Deserialize<::blink::mojom::BackgroundSyncError>(
        data_value, output);
  }
  BackgroundSyncError err() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::blink::mojom::BackgroundSyncError>(data_->err));
  }
  inline void GetRegistrationsDataView(
      mojo::ArrayDataView<SyncRegistrationOptionsDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadRegistrations(UserType* output) {
    
    auto* pointer = data_->registrations.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::blink::mojom::SyncRegistrationOptionsDataView>>(
        pointer, output, message_);
  }
 private:
  internal::PeriodicBackgroundSyncService_GetRegistrations_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};


inline void OneShotBackgroundSyncService_Register_ParamsDataView::GetOptionsDataView(
    SyncRegistrationOptionsDataView* output) {
  auto pointer = data_->options.Get();
  *output = SyncRegistrationOptionsDataView(pointer, message_);
}


inline void OneShotBackgroundSyncService_Register_ResponseParamsDataView::GetOptionsDataView(
    SyncRegistrationOptionsDataView* output) {
  auto pointer = data_->options.Get();
  *output = SyncRegistrationOptionsDataView(pointer, message_);
}


inline void OneShotBackgroundSyncService_DidResolveRegistration_ParamsDataView::GetRegistrationInfoDataView(
    BackgroundSyncRegistrationInfoDataView* output) {
  auto pointer = data_->registration_info.Get();
  *output = BackgroundSyncRegistrationInfoDataView(pointer, message_);
}




inline void OneShotBackgroundSyncService_GetRegistrations_ResponseParamsDataView::GetRegistrationsDataView(
    mojo::ArrayDataView<SyncRegistrationOptionsDataView>* output) {
  auto pointer = data_->registrations.Get();
  *output = mojo::ArrayDataView<SyncRegistrationOptionsDataView>(pointer, message_);
}


inline void PeriodicBackgroundSyncService_Register_ParamsDataView::GetOptionsDataView(
    SyncRegistrationOptionsDataView* output) {
  auto pointer = data_->options.Get();
  *output = SyncRegistrationOptionsDataView(pointer, message_);
}


inline void PeriodicBackgroundSyncService_Register_ResponseParamsDataView::GetOptionsDataView(
    SyncRegistrationOptionsDataView* output) {
  auto pointer = data_->options.Get();
  *output = SyncRegistrationOptionsDataView(pointer, message_);
}


inline void PeriodicBackgroundSyncService_Unregister_ParamsDataView::GetTagDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->tag.Get();
  *output = mojo::StringDataView(pointer, message_);
}






inline void PeriodicBackgroundSyncService_GetRegistrations_ResponseParamsDataView::GetRegistrationsDataView(
    mojo::ArrayDataView<SyncRegistrationOptionsDataView>* output) {
  auto pointer = data_->registrations.Get();
  *output = mojo::ArrayDataView<SyncRegistrationOptionsDataView>(pointer, message_);
}

}  // namespace mojom
}  // namespace blink

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_BACKGROUND_SYNC_BACKGROUND_SYNC_MOJOM_PARAMS_DATA_H_