// third_party/blink/public/mojom/worker/shared_worker_connector.mojom-blink-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_WORKER_SHARED_WORKER_CONNECTOR_MOJOM_BLINK_TEST_UTILS_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_WORKER_SHARED_WORKER_CONNECTOR_MOJOM_BLINK_TEST_UTILS_H_

#include "third_party/blink/public/mojom/worker/shared_worker_connector.mojom-blink.h"
#include "third_party/blink/renderer/core/core_export.h"


namespace blink {
namespace mojom {
namespace blink {


class CORE_EXPORT SharedWorkerConnectorInterceptorForTesting : public SharedWorkerConnector {
  virtual SharedWorkerConnector* GetForwardingInterface() = 0;
  void Connect(::blink::mojom::blink::SharedWorkerInfoPtr info, ::mojo::PendingRemote<::blink::mojom::blink::SharedWorkerClient> client, ::blink::mojom::blink::SharedWorkerCreationContextType creation_context_type, ::blink::MessagePortDescriptor message_port, ::mojo::PendingRemote<::blink::mojom::blink::BlobURLToken> blob_url_token, int64_t client_ukm_source_id) override;
};
class CORE_EXPORT SharedWorkerConnectorAsyncWaiter {
 public:
  explicit SharedWorkerConnectorAsyncWaiter(SharedWorkerConnector* proxy);

  SharedWorkerConnectorAsyncWaiter(const SharedWorkerConnectorAsyncWaiter&) = delete;
  SharedWorkerConnectorAsyncWaiter& operator=(const SharedWorkerConnectorAsyncWaiter&) = delete;

  ~SharedWorkerConnectorAsyncWaiter();

 private:
  SharedWorkerConnector* const proxy_;
};




}  // namespace blink
}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_WORKER_SHARED_WORKER_CONNECTOR_MOJOM_BLINK_TEST_UTILS_H_