// third_party/blink/public/mojom/input/input_handler.mojom-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_INPUT_INPUT_HANDLER_MOJOM_FORWARD_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_INPUT_INPUT_HANDLER_MOJOM_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"



namespace mojo {
enum class NativeEnum;
}  // namespace mojo


namespace blink {
namespace mojom {
class KeyDataDataView;

class PointerDataDataView;

class WheelDataDataView;

class MouseDataDataView;

class ScrollUpdateDataView;

class ScrollDataDataView;

class PinchBeginDataDataView;

class PinchUpdateDataDataView;

class PinchEndDataDataView;

class FlingDataDataView;

class TapDataDataView;

class GestureDataDataView;

class TouchPointDataView;

class TouchDataDataView;

class EventDataView;

class DidOverscrollParamsDataView;

class TouchActionOptionalDataView;

class EditCommandDataView;

class SelectAroundCaretResultDataView;


enum class SelectionGranularity : int32_t;

enum class PanAction : int32_t;

enum class FocusState : int32_t;
class KeyData;
using KeyDataPtr = mojo::StructPtr<KeyData>;

class PointerData;
using PointerDataPtr = mojo::StructPtr<PointerData>;

class WheelData;
using WheelDataPtr = mojo::StructPtr<WheelData>;

class MouseData;
using MouseDataPtr = mojo::StructPtr<MouseData>;

class ScrollUpdate;
using ScrollUpdatePtr = mojo::InlinedStructPtr<ScrollUpdate>;

class ScrollData;
using ScrollDataPtr = mojo::StructPtr<ScrollData>;

class PinchBeginData;
using PinchBeginDataPtr = mojo::InlinedStructPtr<PinchBeginData>;

class PinchUpdateData;
using PinchUpdateDataPtr = mojo::InlinedStructPtr<PinchUpdateData>;

class PinchEndData;
using PinchEndDataPtr = mojo::InlinedStructPtr<PinchEndData>;

class FlingData;
using FlingDataPtr = mojo::InlinedStructPtr<FlingData>;

class TapData;
using TapDataPtr = mojo::InlinedStructPtr<TapData>;

class GestureData;
using GestureDataPtr = mojo::StructPtr<GestureData>;

class TouchPoint;
using TouchPointPtr = mojo::StructPtr<TouchPoint>;

class TouchData;
using TouchDataPtr = mojo::StructPtr<TouchData>;

class Event;
using EventPtr = mojo::StructPtr<Event>;

class DidOverscrollParams;
using DidOverscrollParamsPtr = mojo::StructPtr<DidOverscrollParams>;

class TouchActionOptional;
using TouchActionOptionalPtr = mojo::InlinedStructPtr<TouchActionOptional>;

class EditCommand;
using EditCommandPtr = mojo::InlinedStructPtr<EditCommand>;

class SelectAroundCaretResult;
using SelectAroundCaretResultPtr = mojo::InlinedStructPtr<SelectAroundCaretResult>;

class WidgetInputHandlerHost;

class FrameWidgetInputHandler;

class WidgetInputHandler;




}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_INPUT_INPUT_HANDLER_MOJOM_FORWARD_H_