// third_party/blink/public/mojom/input/synchronous_compositor.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_INPUT_SYNCHRONOUS_COMPOSITOR_MOJOM_PARAMS_DATA_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_INPUT_SYNCHRONOUS_COMPOSITOR_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace blink {
namespace mojom {
namespace internal {

class ValidationContext;
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SynchronousCompositor_DemandDrawHwAsync_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::SyncCompositorDemandDrawHwParams_Data> draw_params;

 private:
  friend class mojo::internal::MessageFragment<SynchronousCompositor_DemandDrawHwAsync_Params_Data>;

  SynchronousCompositor_DemandDrawHwAsync_Params_Data();
  ~SynchronousCompositor_DemandDrawHwAsync_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_DemandDrawHwAsync_Params_Data) == 16,
              "Bad sizeof(SynchronousCompositor_DemandDrawHwAsync_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SynchronousCompositor_DemandDrawHw_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::SyncCompositorDemandDrawHwParams_Data> draw_params;

 private:
  friend class mojo::internal::MessageFragment<SynchronousCompositor_DemandDrawHw_Params_Data>;

  SynchronousCompositor_DemandDrawHw_Params_Data();
  ~SynchronousCompositor_DemandDrawHw_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_DemandDrawHw_Params_Data) == 16,
              "Bad sizeof(SynchronousCompositor_DemandDrawHw_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SynchronousCompositor_DemandDrawHw_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::SyncCompositorCommonRendererParams_Data> result;
  uint32_t layer_tree_frame_sink_id;
  uint32_t metadata_version;
  mojo::internal::Pointer<::viz::mojom::internal::LocalSurfaceId_Data> local_surface_id;
  mojo::internal::Pointer<::viz::mojom::internal::CompositorFrame_Data> frame;
  mojo::internal::Pointer<::viz::mojom::internal::HitTestRegionList_Data> hit_test_region_list;

 private:
  friend class mojo::internal::MessageFragment<SynchronousCompositor_DemandDrawHw_ResponseParams_Data>;

  SynchronousCompositor_DemandDrawHw_ResponseParams_Data();
  ~SynchronousCompositor_DemandDrawHw_ResponseParams_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_DemandDrawHw_ResponseParams_Data) == 48,
              "Bad sizeof(SynchronousCompositor_DemandDrawHw_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SynchronousCompositor_SetSharedMemory_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::mojo_base::mojom::internal::WritableSharedMemoryRegion_Data> shm_region;

 private:
  friend class mojo::internal::MessageFragment<SynchronousCompositor_SetSharedMemory_Params_Data>;

  SynchronousCompositor_SetSharedMemory_Params_Data();
  ~SynchronousCompositor_SetSharedMemory_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_SetSharedMemory_Params_Data) == 16,
              "Bad sizeof(SynchronousCompositor_SetSharedMemory_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SynchronousCompositor_SetSharedMemory_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t success : 1;
  uint8_t pad0_[7];
  mojo::internal::Pointer<internal::SyncCompositorCommonRendererParams_Data> result;

 private:
  friend class mojo::internal::MessageFragment<SynchronousCompositor_SetSharedMemory_ResponseParams_Data>;

  SynchronousCompositor_SetSharedMemory_ResponseParams_Data();
  ~SynchronousCompositor_SetSharedMemory_ResponseParams_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_SetSharedMemory_ResponseParams_Data) == 24,
              "Bad sizeof(SynchronousCompositor_SetSharedMemory_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SynchronousCompositor_DemandDrawSw_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::SyncCompositorDemandDrawSwParams_Data> draw_params;

 private:
  friend class mojo::internal::MessageFragment<SynchronousCompositor_DemandDrawSw_Params_Data>;

  SynchronousCompositor_DemandDrawSw_Params_Data();
  ~SynchronousCompositor_DemandDrawSw_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_DemandDrawSw_Params_Data) == 16,
              "Bad sizeof(SynchronousCompositor_DemandDrawSw_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SynchronousCompositor_DemandDrawSw_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::SyncCompositorCommonRendererParams_Data> result;
  uint32_t metadata_version;
  uint8_t pad1_[4];
  mojo::internal::Pointer<::viz::mojom::internal::CompositorFrameMetadata_Data> meta_data;

 private:
  friend class mojo::internal::MessageFragment<SynchronousCompositor_DemandDrawSw_ResponseParams_Data>;

  SynchronousCompositor_DemandDrawSw_ResponseParams_Data();
  ~SynchronousCompositor_DemandDrawSw_ResponseParams_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_DemandDrawSw_ResponseParams_Data) == 32,
              "Bad sizeof(SynchronousCompositor_DemandDrawSw_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SynchronousCompositor_WillSkipDraw_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<SynchronousCompositor_WillSkipDraw_Params_Data>;

  SynchronousCompositor_WillSkipDraw_Params_Data();
  ~SynchronousCompositor_WillSkipDraw_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_WillSkipDraw_Params_Data) == 8,
              "Bad sizeof(SynchronousCompositor_WillSkipDraw_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SynchronousCompositor_ZeroSharedMemory_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<SynchronousCompositor_ZeroSharedMemory_Params_Data>;

  SynchronousCompositor_ZeroSharedMemory_Params_Data();
  ~SynchronousCompositor_ZeroSharedMemory_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_ZeroSharedMemory_Params_Data) == 8,
              "Bad sizeof(SynchronousCompositor_ZeroSharedMemory_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SynchronousCompositor_ZoomBy_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  float delta;
  uint8_t pad0_[4];
  mojo::internal::Pointer<::gfx::mojom::internal::Point_Data> anchor;

 private:
  friend class mojo::internal::MessageFragment<SynchronousCompositor_ZoomBy_Params_Data>;

  SynchronousCompositor_ZoomBy_Params_Data();
  ~SynchronousCompositor_ZoomBy_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_ZoomBy_Params_Data) == 24,
              "Bad sizeof(SynchronousCompositor_ZoomBy_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SynchronousCompositor_ZoomBy_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::SyncCompositorCommonRendererParams_Data> result;

 private:
  friend class mojo::internal::MessageFragment<SynchronousCompositor_ZoomBy_ResponseParams_Data>;

  SynchronousCompositor_ZoomBy_ResponseParams_Data();
  ~SynchronousCompositor_ZoomBy_ResponseParams_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_ZoomBy_ResponseParams_Data) == 16,
              "Bad sizeof(SynchronousCompositor_ZoomBy_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SynchronousCompositor_SetMemoryPolicy_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint32_t bytes_limit;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<SynchronousCompositor_SetMemoryPolicy_Params_Data>;

  SynchronousCompositor_SetMemoryPolicy_Params_Data();
  ~SynchronousCompositor_SetMemoryPolicy_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_SetMemoryPolicy_Params_Data) == 16,
              "Bad sizeof(SynchronousCompositor_SetMemoryPolicy_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SynchronousCompositor_ReclaimResources_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint32_t layer_tree_frame_sink_id;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<::viz::mojom::internal::ReturnedResource_Data>>> resources;

 private:
  friend class mojo::internal::MessageFragment<SynchronousCompositor_ReclaimResources_Params_Data>;

  SynchronousCompositor_ReclaimResources_Params_Data();
  ~SynchronousCompositor_ReclaimResources_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_ReclaimResources_Params_Data) == 24,
              "Bad sizeof(SynchronousCompositor_ReclaimResources_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SynchronousCompositor_OnCompositorFrameTransitionDirectiveProcessed_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint32_t layer_tree_frame_sink_id;
  uint32_t sequence_id;

 private:
  friend class mojo::internal::MessageFragment<SynchronousCompositor_OnCompositorFrameTransitionDirectiveProcessed_Params_Data>;

  SynchronousCompositor_OnCompositorFrameTransitionDirectiveProcessed_Params_Data();
  ~SynchronousCompositor_OnCompositorFrameTransitionDirectiveProcessed_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_OnCompositorFrameTransitionDirectiveProcessed_Params_Data) == 16,
              "Bad sizeof(SynchronousCompositor_OnCompositorFrameTransitionDirectiveProcessed_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SynchronousCompositor_SetScroll_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::gfx::mojom::internal::PointF_Data> offset;

 private:
  friend class mojo::internal::MessageFragment<SynchronousCompositor_SetScroll_Params_Data>;

  SynchronousCompositor_SetScroll_Params_Data();
  ~SynchronousCompositor_SetScroll_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_SetScroll_Params_Data) == 16,
              "Bad sizeof(SynchronousCompositor_SetScroll_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SynchronousCompositor_BeginFrame_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::viz::mojom::internal::BeginFrameArgs_Data> args;
  mojo::internal::Pointer<mojo::internal::Map_Data<uint32_t, mojo::internal::Pointer<::viz::mojom::internal::FrameTimingDetails_Data>>> timing_details;

 private:
  friend class mojo::internal::MessageFragment<SynchronousCompositor_BeginFrame_Params_Data>;

  SynchronousCompositor_BeginFrame_Params_Data();
  ~SynchronousCompositor_BeginFrame_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_BeginFrame_Params_Data) == 24,
              "Bad sizeof(SynchronousCompositor_BeginFrame_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SynchronousCompositor_SetBeginFrameSourcePaused_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t paused : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<SynchronousCompositor_SetBeginFrameSourcePaused_Params_Data>;

  SynchronousCompositor_SetBeginFrameSourcePaused_Params_Data();
  ~SynchronousCompositor_SetBeginFrameSourcePaused_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_SetBeginFrameSourcePaused_Params_Data) == 16,
              "Bad sizeof(SynchronousCompositor_SetBeginFrameSourcePaused_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params_Data>;

  SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params_Data();
  ~SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params_Data) == 8,
              "Bad sizeof(SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SynchronousCompositorHost_UpdateState_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::SyncCompositorCommonRendererParams_Data> params;

 private:
  friend class mojo::internal::MessageFragment<SynchronousCompositorHost_UpdateState_Params_Data>;

  SynchronousCompositorHost_UpdateState_Params_Data();
  ~SynchronousCompositorHost_UpdateState_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositorHost_UpdateState_Params_Data) == 16,
              "Bad sizeof(SynchronousCompositorHost_UpdateState_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SynchronousCompositorHost_SetNeedsBeginFrames_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t needs_begin_frames : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<SynchronousCompositorHost_SetNeedsBeginFrames_Params_Data>;

  SynchronousCompositorHost_SetNeedsBeginFrames_Params_Data();
  ~SynchronousCompositorHost_SetNeedsBeginFrames_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositorHost_SetNeedsBeginFrames_Params_Data) == 16,
              "Bad sizeof(SynchronousCompositorHost_SetNeedsBeginFrames_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SynchronousCompositorControlHost_ReturnFrame_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint32_t layer_tree_frame_sink_id;
  uint32_t metadata_version;
  mojo::internal::Pointer<::viz::mojom::internal::LocalSurfaceId_Data> local_surface_id;
  mojo::internal::Pointer<::viz::mojom::internal::CompositorFrame_Data> frame;
  mojo::internal::Pointer<::viz::mojom::internal::HitTestRegionList_Data> hit_test_region_list;

 private:
  friend class mojo::internal::MessageFragment<SynchronousCompositorControlHost_ReturnFrame_Params_Data>;

  SynchronousCompositorControlHost_ReturnFrame_Params_Data();
  ~SynchronousCompositorControlHost_ReturnFrame_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositorControlHost_ReturnFrame_Params_Data) == 40,
              "Bad sizeof(SynchronousCompositorControlHost_ReturnFrame_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SynchronousCompositorControlHost_BeginFrameResponse_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::SyncCompositorCommonRendererParams_Data> params;

 private:
  friend class mojo::internal::MessageFragment<SynchronousCompositorControlHost_BeginFrameResponse_Params_Data>;

  SynchronousCompositorControlHost_BeginFrameResponse_Params_Data();
  ~SynchronousCompositorControlHost_BeginFrameResponse_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositorControlHost_BeginFrameResponse_Params_Data) == 16,
              "Bad sizeof(SynchronousCompositorControlHost_BeginFrameResponse_Params_Data)");

}  // namespace internal


class SynchronousCompositor_DemandDrawHwAsync_ParamsDataView {
 public:
  SynchronousCompositor_DemandDrawHwAsync_ParamsDataView() = default;

  SynchronousCompositor_DemandDrawHwAsync_ParamsDataView(
      internal::SynchronousCompositor_DemandDrawHwAsync_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetDrawParamsDataView(
      SyncCompositorDemandDrawHwParamsDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadDrawParams(UserType* output) {
    
    auto* pointer = data_->draw_params.Get();
    return mojo::internal::Deserialize<::blink::mojom::SyncCompositorDemandDrawHwParamsDataView>(
        pointer, output, message_);
  }
 private:
  internal::SynchronousCompositor_DemandDrawHwAsync_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SynchronousCompositor_DemandDrawHw_ParamsDataView {
 public:
  SynchronousCompositor_DemandDrawHw_ParamsDataView() = default;

  SynchronousCompositor_DemandDrawHw_ParamsDataView(
      internal::SynchronousCompositor_DemandDrawHw_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetDrawParamsDataView(
      SyncCompositorDemandDrawHwParamsDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadDrawParams(UserType* output) {
    
    auto* pointer = data_->draw_params.Get();
    return mojo::internal::Deserialize<::blink::mojom::SyncCompositorDemandDrawHwParamsDataView>(
        pointer, output, message_);
  }
 private:
  internal::SynchronousCompositor_DemandDrawHw_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SynchronousCompositor_DemandDrawHw_ResponseParamsDataView {
 public:
  SynchronousCompositor_DemandDrawHw_ResponseParamsDataView() = default;

  SynchronousCompositor_DemandDrawHw_ResponseParamsDataView(
      internal::SynchronousCompositor_DemandDrawHw_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetResultDataView(
      SyncCompositorCommonRendererParamsDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadResult(UserType* output) {
    
    auto* pointer = data_->result.Get();
    return mojo::internal::Deserialize<::blink::mojom::SyncCompositorCommonRendererParamsDataView>(
        pointer, output, message_);
  }
  uint32_t layer_tree_frame_sink_id() const {
    return data_->layer_tree_frame_sink_id;
  }
  uint32_t metadata_version() const {
    return data_->metadata_version;
  }
  inline void GetLocalSurfaceIdDataView(
      ::viz::mojom::LocalSurfaceIdDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadLocalSurfaceId(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::viz::mojom::LocalSurfaceIdDataView, UserType>(),
    "Attempting to read the optional `local_surface_id` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadLocalSurfaceId` instead "
    "of `ReadLocalSurfaceId if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->local_surface_id.Get();
    return mojo::internal::Deserialize<::viz::mojom::LocalSurfaceIdDataView>(
        pointer, output, message_);
  }
  inline void GetFrameDataView(
      ::viz::mojom::CompositorFrameDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadFrame(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::viz::mojom::CompositorFrameDataView, UserType>(),
    "Attempting to read the optional `frame` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadFrame` instead "
    "of `ReadFrame if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->frame.Get();
    return mojo::internal::Deserialize<::viz::mojom::CompositorFrameDataView>(
        pointer, output, message_);
  }
  inline void GetHitTestRegionListDataView(
      ::viz::mojom::HitTestRegionListDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadHitTestRegionList(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::viz::mojom::HitTestRegionListDataView, UserType>(),
    "Attempting to read the optional `hit_test_region_list` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadHitTestRegionList` instead "
    "of `ReadHitTestRegionList if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->hit_test_region_list.Get();
    return mojo::internal::Deserialize<::viz::mojom::HitTestRegionListDataView>(
        pointer, output, message_);
  }
 private:
  internal::SynchronousCompositor_DemandDrawHw_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SynchronousCompositor_SetSharedMemory_ParamsDataView {
 public:
  SynchronousCompositor_SetSharedMemory_ParamsDataView() = default;

  SynchronousCompositor_SetSharedMemory_ParamsDataView(
      internal::SynchronousCompositor_SetSharedMemory_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetShmRegionDataView(
      ::mojo_base::mojom::WritableSharedMemoryRegionDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadShmRegion(UserType* output) {
    
    auto* pointer = data_->shm_region.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::WritableSharedMemoryRegionDataView>(
        pointer, output, message_);
  }
 private:
  internal::SynchronousCompositor_SetSharedMemory_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SynchronousCompositor_SetSharedMemory_ResponseParamsDataView {
 public:
  SynchronousCompositor_SetSharedMemory_ResponseParamsDataView() = default;

  SynchronousCompositor_SetSharedMemory_ResponseParamsDataView(
      internal::SynchronousCompositor_SetSharedMemory_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  bool success() const {
    return data_->success;
  }
  inline void GetResultDataView(
      SyncCompositorCommonRendererParamsDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadResult(UserType* output) {
    
    auto* pointer = data_->result.Get();
    return mojo::internal::Deserialize<::blink::mojom::SyncCompositorCommonRendererParamsDataView>(
        pointer, output, message_);
  }
 private:
  internal::SynchronousCompositor_SetSharedMemory_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SynchronousCompositor_DemandDrawSw_ParamsDataView {
 public:
  SynchronousCompositor_DemandDrawSw_ParamsDataView() = default;

  SynchronousCompositor_DemandDrawSw_ParamsDataView(
      internal::SynchronousCompositor_DemandDrawSw_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetDrawParamsDataView(
      SyncCompositorDemandDrawSwParamsDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadDrawParams(UserType* output) {
    
    auto* pointer = data_->draw_params.Get();
    return mojo::internal::Deserialize<::blink::mojom::SyncCompositorDemandDrawSwParamsDataView>(
        pointer, output, message_);
  }
 private:
  internal::SynchronousCompositor_DemandDrawSw_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SynchronousCompositor_DemandDrawSw_ResponseParamsDataView {
 public:
  SynchronousCompositor_DemandDrawSw_ResponseParamsDataView() = default;

  SynchronousCompositor_DemandDrawSw_ResponseParamsDataView(
      internal::SynchronousCompositor_DemandDrawSw_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetResultDataView(
      SyncCompositorCommonRendererParamsDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadResult(UserType* output) {
    
    auto* pointer = data_->result.Get();
    return mojo::internal::Deserialize<::blink::mojom::SyncCompositorCommonRendererParamsDataView>(
        pointer, output, message_);
  }
  uint32_t metadata_version() const {
    return data_->metadata_version;
  }
  inline void GetMetaDataDataView(
      ::viz::mojom::CompositorFrameMetadataDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadMetaData(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::viz::mojom::CompositorFrameMetadataDataView, UserType>(),
    "Attempting to read the optional `meta_data` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadMetaData` instead "
    "of `ReadMetaData if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->meta_data.Get();
    return mojo::internal::Deserialize<::viz::mojom::CompositorFrameMetadataDataView>(
        pointer, output, message_);
  }
 private:
  internal::SynchronousCompositor_DemandDrawSw_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SynchronousCompositor_WillSkipDraw_ParamsDataView {
 public:
  SynchronousCompositor_WillSkipDraw_ParamsDataView() = default;

  SynchronousCompositor_WillSkipDraw_ParamsDataView(
      internal::SynchronousCompositor_WillSkipDraw_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::SynchronousCompositor_WillSkipDraw_Params_Data* data_ = nullptr;
};



class SynchronousCompositor_ZeroSharedMemory_ParamsDataView {
 public:
  SynchronousCompositor_ZeroSharedMemory_ParamsDataView() = default;

  SynchronousCompositor_ZeroSharedMemory_ParamsDataView(
      internal::SynchronousCompositor_ZeroSharedMemory_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::SynchronousCompositor_ZeroSharedMemory_Params_Data* data_ = nullptr;
};



class SynchronousCompositor_ZoomBy_ParamsDataView {
 public:
  SynchronousCompositor_ZoomBy_ParamsDataView() = default;

  SynchronousCompositor_ZoomBy_ParamsDataView(
      internal::SynchronousCompositor_ZoomBy_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  float delta() const {
    return data_->delta;
  }
  inline void GetAnchorDataView(
      ::gfx::mojom::PointDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAnchor(UserType* output) {
    
    auto* pointer = data_->anchor.Get();
    return mojo::internal::Deserialize<::gfx::mojom::PointDataView>(
        pointer, output, message_);
  }
 private:
  internal::SynchronousCompositor_ZoomBy_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SynchronousCompositor_ZoomBy_ResponseParamsDataView {
 public:
  SynchronousCompositor_ZoomBy_ResponseParamsDataView() = default;

  SynchronousCompositor_ZoomBy_ResponseParamsDataView(
      internal::SynchronousCompositor_ZoomBy_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetResultDataView(
      SyncCompositorCommonRendererParamsDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadResult(UserType* output) {
    
    auto* pointer = data_->result.Get();
    return mojo::internal::Deserialize<::blink::mojom::SyncCompositorCommonRendererParamsDataView>(
        pointer, output, message_);
  }
 private:
  internal::SynchronousCompositor_ZoomBy_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SynchronousCompositor_SetMemoryPolicy_ParamsDataView {
 public:
  SynchronousCompositor_SetMemoryPolicy_ParamsDataView() = default;

  SynchronousCompositor_SetMemoryPolicy_ParamsDataView(
      internal::SynchronousCompositor_SetMemoryPolicy_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  uint32_t bytes_limit() const {
    return data_->bytes_limit;
  }
 private:
  internal::SynchronousCompositor_SetMemoryPolicy_Params_Data* data_ = nullptr;
};



class SynchronousCompositor_ReclaimResources_ParamsDataView {
 public:
  SynchronousCompositor_ReclaimResources_ParamsDataView() = default;

  SynchronousCompositor_ReclaimResources_ParamsDataView(
      internal::SynchronousCompositor_ReclaimResources_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  uint32_t layer_tree_frame_sink_id() const {
    return data_->layer_tree_frame_sink_id;
  }
  inline void GetResourcesDataView(
      mojo::ArrayDataView<::viz::mojom::ReturnedResourceDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadResources(UserType* output) {
    
    auto* pointer = data_->resources.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::viz::mojom::ReturnedResourceDataView>>(
        pointer, output, message_);
  }
 private:
  internal::SynchronousCompositor_ReclaimResources_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SynchronousCompositor_OnCompositorFrameTransitionDirectiveProcessed_ParamsDataView {
 public:
  SynchronousCompositor_OnCompositorFrameTransitionDirectiveProcessed_ParamsDataView() = default;

  SynchronousCompositor_OnCompositorFrameTransitionDirectiveProcessed_ParamsDataView(
      internal::SynchronousCompositor_OnCompositorFrameTransitionDirectiveProcessed_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  uint32_t layer_tree_frame_sink_id() const {
    return data_->layer_tree_frame_sink_id;
  }
  uint32_t sequence_id() const {
    return data_->sequence_id;
  }
 private:
  internal::SynchronousCompositor_OnCompositorFrameTransitionDirectiveProcessed_Params_Data* data_ = nullptr;
};



class SynchronousCompositor_SetScroll_ParamsDataView {
 public:
  SynchronousCompositor_SetScroll_ParamsDataView() = default;

  SynchronousCompositor_SetScroll_ParamsDataView(
      internal::SynchronousCompositor_SetScroll_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetOffsetDataView(
      ::gfx::mojom::PointFDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadOffset(UserType* output) {
    
    auto* pointer = data_->offset.Get();
    return mojo::internal::Deserialize<::gfx::mojom::PointFDataView>(
        pointer, output, message_);
  }
 private:
  internal::SynchronousCompositor_SetScroll_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SynchronousCompositor_BeginFrame_ParamsDataView {
 public:
  SynchronousCompositor_BeginFrame_ParamsDataView() = default;

  SynchronousCompositor_BeginFrame_ParamsDataView(
      internal::SynchronousCompositor_BeginFrame_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetArgsDataView(
      ::viz::mojom::BeginFrameArgsDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadArgs(UserType* output) {
    
    auto* pointer = data_->args.Get();
    return mojo::internal::Deserialize<::viz::mojom::BeginFrameArgsDataView>(
        pointer, output, message_);
  }
  inline void GetTimingDetailsDataView(
      mojo::MapDataView<uint32_t, ::viz::mojom::FrameTimingDetailsDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadTimingDetails(UserType* output) {
    
    auto* pointer = data_->timing_details.Get();
    return mojo::internal::Deserialize<mojo::MapDataView<uint32_t, ::viz::mojom::FrameTimingDetailsDataView>>(
        pointer, output, message_);
  }
 private:
  internal::SynchronousCompositor_BeginFrame_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SynchronousCompositor_SetBeginFrameSourcePaused_ParamsDataView {
 public:
  SynchronousCompositor_SetBeginFrameSourcePaused_ParamsDataView() = default;

  SynchronousCompositor_SetBeginFrameSourcePaused_ParamsDataView(
      internal::SynchronousCompositor_SetBeginFrameSourcePaused_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool paused() const {
    return data_->paused;
  }
 private:
  internal::SynchronousCompositor_SetBeginFrameSourcePaused_Params_Data* data_ = nullptr;
};



class SynchronousCompositorHost_LayerTreeFrameSinkCreated_ParamsDataView {
 public:
  SynchronousCompositorHost_LayerTreeFrameSinkCreated_ParamsDataView() = default;

  SynchronousCompositorHost_LayerTreeFrameSinkCreated_ParamsDataView(
      internal::SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params_Data* data_ = nullptr;
};



class SynchronousCompositorHost_UpdateState_ParamsDataView {
 public:
  SynchronousCompositorHost_UpdateState_ParamsDataView() = default;

  SynchronousCompositorHost_UpdateState_ParamsDataView(
      internal::SynchronousCompositorHost_UpdateState_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetParamsDataView(
      SyncCompositorCommonRendererParamsDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadParams(UserType* output) {
    
    auto* pointer = data_->params.Get();
    return mojo::internal::Deserialize<::blink::mojom::SyncCompositorCommonRendererParamsDataView>(
        pointer, output, message_);
  }
 private:
  internal::SynchronousCompositorHost_UpdateState_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SynchronousCompositorHost_SetNeedsBeginFrames_ParamsDataView {
 public:
  SynchronousCompositorHost_SetNeedsBeginFrames_ParamsDataView() = default;

  SynchronousCompositorHost_SetNeedsBeginFrames_ParamsDataView(
      internal::SynchronousCompositorHost_SetNeedsBeginFrames_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool needs_begin_frames() const {
    return data_->needs_begin_frames;
  }
 private:
  internal::SynchronousCompositorHost_SetNeedsBeginFrames_Params_Data* data_ = nullptr;
};



class SynchronousCompositorControlHost_ReturnFrame_ParamsDataView {
 public:
  SynchronousCompositorControlHost_ReturnFrame_ParamsDataView() = default;

  SynchronousCompositorControlHost_ReturnFrame_ParamsDataView(
      internal::SynchronousCompositorControlHost_ReturnFrame_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  uint32_t layer_tree_frame_sink_id() const {
    return data_->layer_tree_frame_sink_id;
  }
  uint32_t metadata_version() const {
    return data_->metadata_version;
  }
  inline void GetLocalSurfaceIdDataView(
      ::viz::mojom::LocalSurfaceIdDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadLocalSurfaceId(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::viz::mojom::LocalSurfaceIdDataView, UserType>(),
    "Attempting to read the optional `local_surface_id` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadLocalSurfaceId` instead "
    "of `ReadLocalSurfaceId if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->local_surface_id.Get();
    return mojo::internal::Deserialize<::viz::mojom::LocalSurfaceIdDataView>(
        pointer, output, message_);
  }
  inline void GetFrameDataView(
      ::viz::mojom::CompositorFrameDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadFrame(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::viz::mojom::CompositorFrameDataView, UserType>(),
    "Attempting to read the optional `frame` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadFrame` instead "
    "of `ReadFrame if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->frame.Get();
    return mojo::internal::Deserialize<::viz::mojom::CompositorFrameDataView>(
        pointer, output, message_);
  }
  inline void GetHitTestRegionListDataView(
      ::viz::mojom::HitTestRegionListDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadHitTestRegionList(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::viz::mojom::HitTestRegionListDataView, UserType>(),
    "Attempting to read the optional `hit_test_region_list` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadHitTestRegionList` instead "
    "of `ReadHitTestRegionList if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->hit_test_region_list.Get();
    return mojo::internal::Deserialize<::viz::mojom::HitTestRegionListDataView>(
        pointer, output, message_);
  }
 private:
  internal::SynchronousCompositorControlHost_ReturnFrame_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SynchronousCompositorControlHost_BeginFrameResponse_ParamsDataView {
 public:
  SynchronousCompositorControlHost_BeginFrameResponse_ParamsDataView() = default;

  SynchronousCompositorControlHost_BeginFrameResponse_ParamsDataView(
      internal::SynchronousCompositorControlHost_BeginFrameResponse_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetParamsDataView(
      SyncCompositorCommonRendererParamsDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadParams(UserType* output) {
    
    auto* pointer = data_->params.Get();
    return mojo::internal::Deserialize<::blink::mojom::SyncCompositorCommonRendererParamsDataView>(
        pointer, output, message_);
  }
 private:
  internal::SynchronousCompositorControlHost_BeginFrameResponse_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};


inline void SynchronousCompositor_DemandDrawHwAsync_ParamsDataView::GetDrawParamsDataView(
    SyncCompositorDemandDrawHwParamsDataView* output) {
  auto pointer = data_->draw_params.Get();
  *output = SyncCompositorDemandDrawHwParamsDataView(pointer, message_);
}


inline void SynchronousCompositor_DemandDrawHw_ParamsDataView::GetDrawParamsDataView(
    SyncCompositorDemandDrawHwParamsDataView* output) {
  auto pointer = data_->draw_params.Get();
  *output = SyncCompositorDemandDrawHwParamsDataView(pointer, message_);
}


inline void SynchronousCompositor_DemandDrawHw_ResponseParamsDataView::GetResultDataView(
    SyncCompositorCommonRendererParamsDataView* output) {
  auto pointer = data_->result.Get();
  *output = SyncCompositorCommonRendererParamsDataView(pointer, message_);
}
inline void SynchronousCompositor_DemandDrawHw_ResponseParamsDataView::GetLocalSurfaceIdDataView(
    ::viz::mojom::LocalSurfaceIdDataView* output) {
  auto pointer = data_->local_surface_id.Get();
  *output = ::viz::mojom::LocalSurfaceIdDataView(pointer, message_);
}
inline void SynchronousCompositor_DemandDrawHw_ResponseParamsDataView::GetFrameDataView(
    ::viz::mojom::CompositorFrameDataView* output) {
  auto pointer = data_->frame.Get();
  *output = ::viz::mojom::CompositorFrameDataView(pointer, message_);
}
inline void SynchronousCompositor_DemandDrawHw_ResponseParamsDataView::GetHitTestRegionListDataView(
    ::viz::mojom::HitTestRegionListDataView* output) {
  auto pointer = data_->hit_test_region_list.Get();
  *output = ::viz::mojom::HitTestRegionListDataView(pointer, message_);
}


inline void SynchronousCompositor_SetSharedMemory_ParamsDataView::GetShmRegionDataView(
    ::mojo_base::mojom::WritableSharedMemoryRegionDataView* output) {
  auto pointer = data_->shm_region.Get();
  *output = ::mojo_base::mojom::WritableSharedMemoryRegionDataView(pointer, message_);
}


inline void SynchronousCompositor_SetSharedMemory_ResponseParamsDataView::GetResultDataView(
    SyncCompositorCommonRendererParamsDataView* output) {
  auto pointer = data_->result.Get();
  *output = SyncCompositorCommonRendererParamsDataView(pointer, message_);
}


inline void SynchronousCompositor_DemandDrawSw_ParamsDataView::GetDrawParamsDataView(
    SyncCompositorDemandDrawSwParamsDataView* output) {
  auto pointer = data_->draw_params.Get();
  *output = SyncCompositorDemandDrawSwParamsDataView(pointer, message_);
}


inline void SynchronousCompositor_DemandDrawSw_ResponseParamsDataView::GetResultDataView(
    SyncCompositorCommonRendererParamsDataView* output) {
  auto pointer = data_->result.Get();
  *output = SyncCompositorCommonRendererParamsDataView(pointer, message_);
}
inline void SynchronousCompositor_DemandDrawSw_ResponseParamsDataView::GetMetaDataDataView(
    ::viz::mojom::CompositorFrameMetadataDataView* output) {
  auto pointer = data_->meta_data.Get();
  *output = ::viz::mojom::CompositorFrameMetadataDataView(pointer, message_);
}






inline void SynchronousCompositor_ZoomBy_ParamsDataView::GetAnchorDataView(
    ::gfx::mojom::PointDataView* output) {
  auto pointer = data_->anchor.Get();
  *output = ::gfx::mojom::PointDataView(pointer, message_);
}


inline void SynchronousCompositor_ZoomBy_ResponseParamsDataView::GetResultDataView(
    SyncCompositorCommonRendererParamsDataView* output) {
  auto pointer = data_->result.Get();
  *output = SyncCompositorCommonRendererParamsDataView(pointer, message_);
}




inline void SynchronousCompositor_ReclaimResources_ParamsDataView::GetResourcesDataView(
    mojo::ArrayDataView<::viz::mojom::ReturnedResourceDataView>* output) {
  auto pointer = data_->resources.Get();
  *output = mojo::ArrayDataView<::viz::mojom::ReturnedResourceDataView>(pointer, message_);
}




inline void SynchronousCompositor_SetScroll_ParamsDataView::GetOffsetDataView(
    ::gfx::mojom::PointFDataView* output) {
  auto pointer = data_->offset.Get();
  *output = ::gfx::mojom::PointFDataView(pointer, message_);
}


inline void SynchronousCompositor_BeginFrame_ParamsDataView::GetArgsDataView(
    ::viz::mojom::BeginFrameArgsDataView* output) {
  auto pointer = data_->args.Get();
  *output = ::viz::mojom::BeginFrameArgsDataView(pointer, message_);
}
inline void SynchronousCompositor_BeginFrame_ParamsDataView::GetTimingDetailsDataView(
    mojo::MapDataView<uint32_t, ::viz::mojom::FrameTimingDetailsDataView>* output) {
  auto pointer = data_->timing_details.Get();
  *output = mojo::MapDataView<uint32_t, ::viz::mojom::FrameTimingDetailsDataView>(pointer, message_);
}






inline void SynchronousCompositorHost_UpdateState_ParamsDataView::GetParamsDataView(
    SyncCompositorCommonRendererParamsDataView* output) {
  auto pointer = data_->params.Get();
  *output = SyncCompositorCommonRendererParamsDataView(pointer, message_);
}




inline void SynchronousCompositorControlHost_ReturnFrame_ParamsDataView::GetLocalSurfaceIdDataView(
    ::viz::mojom::LocalSurfaceIdDataView* output) {
  auto pointer = data_->local_surface_id.Get();
  *output = ::viz::mojom::LocalSurfaceIdDataView(pointer, message_);
}
inline void SynchronousCompositorControlHost_ReturnFrame_ParamsDataView::GetFrameDataView(
    ::viz::mojom::CompositorFrameDataView* output) {
  auto pointer = data_->frame.Get();
  *output = ::viz::mojom::CompositorFrameDataView(pointer, message_);
}
inline void SynchronousCompositorControlHost_ReturnFrame_ParamsDataView::GetHitTestRegionListDataView(
    ::viz::mojom::HitTestRegionListDataView* output) {
  auto pointer = data_->hit_test_region_list.Get();
  *output = ::viz::mojom::HitTestRegionListDataView(pointer, message_);
}


inline void SynchronousCompositorControlHost_BeginFrameResponse_ParamsDataView::GetParamsDataView(
    SyncCompositorCommonRendererParamsDataView* output) {
  auto pointer = data_->params.Get();
  *output = SyncCompositorCommonRendererParamsDataView(pointer, message_);
}

}  // namespace mojom
}  // namespace blink

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_INPUT_SYNCHRONOUS_COMPOSITOR_MOJOM_PARAMS_DATA_H_