// third_party/blink/public/mojom/input/input_handler.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_INPUT_INPUT_HANDLER_MOJOM_PARAMS_DATA_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_INPUT_INPUT_HANDLER_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace blink {
namespace mojom {
namespace internal {

class ValidationContext;
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandlerHost_SetTouchActionFromMain_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t touch_action;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandlerHost_SetTouchActionFromMain_Params_Data>;

  WidgetInputHandlerHost_SetTouchActionFromMain_Params_Data();
  ~WidgetInputHandlerHost_SetTouchActionFromMain_Params_Data() = delete;
};
static_assert(sizeof(WidgetInputHandlerHost_SetTouchActionFromMain_Params_Data) == 16,
              "Bad sizeof(WidgetInputHandlerHost_SetTouchActionFromMain_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandlerHost_SetPanAction_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t pan_action;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandlerHost_SetPanAction_Params_Data>;

  WidgetInputHandlerHost_SetPanAction_Params_Data();
  ~WidgetInputHandlerHost_SetPanAction_Params_Data() = delete;
};
static_assert(sizeof(WidgetInputHandlerHost_SetPanAction_Params_Data) == 16,
              "Bad sizeof(WidgetInputHandlerHost_SetPanAction_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandlerHost_DidOverscroll_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::DidOverscrollParams_Data> params;

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandlerHost_DidOverscroll_Params_Data>;

  WidgetInputHandlerHost_DidOverscroll_Params_Data();
  ~WidgetInputHandlerHost_DidOverscroll_Params_Data() = delete;
};
static_assert(sizeof(WidgetInputHandlerHost_DidOverscroll_Params_Data) == 16,
              "Bad sizeof(WidgetInputHandlerHost_DidOverscroll_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandlerHost_DidStartScrollingViewport_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandlerHost_DidStartScrollingViewport_Params_Data>;

  WidgetInputHandlerHost_DidStartScrollingViewport_Params_Data();
  ~WidgetInputHandlerHost_DidStartScrollingViewport_Params_Data() = delete;
};
static_assert(sizeof(WidgetInputHandlerHost_DidStartScrollingViewport_Params_Data) == 8,
              "Bad sizeof(WidgetInputHandlerHost_DidStartScrollingViewport_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandlerHost_ImeCancelComposition_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandlerHost_ImeCancelComposition_Params_Data>;

  WidgetInputHandlerHost_ImeCancelComposition_Params_Data();
  ~WidgetInputHandlerHost_ImeCancelComposition_Params_Data() = delete;
};
static_assert(sizeof(WidgetInputHandlerHost_ImeCancelComposition_Params_Data) == 8,
              "Bad sizeof(WidgetInputHandlerHost_ImeCancelComposition_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandlerHost_ImeCompositionRangeChanged_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::gfx::mojom::internal::Range_Data> range;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<::gfx::mojom::internal::Rect_Data>>> bounds;

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandlerHost_ImeCompositionRangeChanged_Params_Data>;

  WidgetInputHandlerHost_ImeCompositionRangeChanged_Params_Data();
  ~WidgetInputHandlerHost_ImeCompositionRangeChanged_Params_Data() = delete;
};
static_assert(sizeof(WidgetInputHandlerHost_ImeCompositionRangeChanged_Params_Data) == 24,
              "Bad sizeof(WidgetInputHandlerHost_ImeCompositionRangeChanged_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandlerHost_SetMouseCapture_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t capture : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandlerHost_SetMouseCapture_Params_Data>;

  WidgetInputHandlerHost_SetMouseCapture_Params_Data();
  ~WidgetInputHandlerHost_SetMouseCapture_Params_Data() = delete;
};
static_assert(sizeof(WidgetInputHandlerHost_SetMouseCapture_Params_Data) == 16,
              "Bad sizeof(WidgetInputHandlerHost_SetMouseCapture_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandlerHost_RequestMouseLock_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t from_user_gesture : 1;
  uint8_t unadjusted_movement : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandlerHost_RequestMouseLock_Params_Data>;

  WidgetInputHandlerHost_RequestMouseLock_Params_Data();
  ~WidgetInputHandlerHost_RequestMouseLock_Params_Data() = delete;
};
static_assert(sizeof(WidgetInputHandlerHost_RequestMouseLock_Params_Data) == 16,
              "Bad sizeof(WidgetInputHandlerHost_RequestMouseLock_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandlerHost_RequestMouseLock_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t result;
  mojo::internal::Interface_Data context;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandlerHost_RequestMouseLock_ResponseParams_Data>;

  WidgetInputHandlerHost_RequestMouseLock_ResponseParams_Data();
  ~WidgetInputHandlerHost_RequestMouseLock_ResponseParams_Data() = delete;
};
static_assert(sizeof(WidgetInputHandlerHost_RequestMouseLock_ResponseParams_Data) == 24,
              "Bad sizeof(WidgetInputHandlerHost_RequestMouseLock_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_AddImeTextSpansToExistingText_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint32_t start;
  uint32_t end;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<::ui::mojom::internal::ImeTextSpan_Data>>> ime_text_spans;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_AddImeTextSpansToExistingText_Params_Data>;

  FrameWidgetInputHandler_AddImeTextSpansToExistingText_Params_Data();
  ~FrameWidgetInputHandler_AddImeTextSpansToExistingText_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_AddImeTextSpansToExistingText_Params_Data) == 24,
              "Bad sizeof(FrameWidgetInputHandler_AddImeTextSpansToExistingText_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_ClearImeTextSpansByType_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint32_t start;
  uint32_t end;
  int32_t type;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_ClearImeTextSpansByType_Params_Data>;

  FrameWidgetInputHandler_ClearImeTextSpansByType_Params_Data();
  ~FrameWidgetInputHandler_ClearImeTextSpansByType_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_ClearImeTextSpansByType_Params_Data) == 24,
              "Bad sizeof(FrameWidgetInputHandler_ClearImeTextSpansByType_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_SetCompositionFromExistingText_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t start;
  int32_t end;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<::ui::mojom::internal::ImeTextSpan_Data>>> ime_text_spans;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_SetCompositionFromExistingText_Params_Data>;

  FrameWidgetInputHandler_SetCompositionFromExistingText_Params_Data();
  ~FrameWidgetInputHandler_SetCompositionFromExistingText_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_SetCompositionFromExistingText_Params_Data) == 24,
              "Bad sizeof(FrameWidgetInputHandler_SetCompositionFromExistingText_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_ExtendSelectionAndDelete_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t before;
  int32_t after;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_ExtendSelectionAndDelete_Params_Data>;

  FrameWidgetInputHandler_ExtendSelectionAndDelete_Params_Data();
  ~FrameWidgetInputHandler_ExtendSelectionAndDelete_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_ExtendSelectionAndDelete_Params_Data) == 16,
              "Bad sizeof(FrameWidgetInputHandler_ExtendSelectionAndDelete_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_DeleteSurroundingText_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t before;
  int32_t after;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_DeleteSurroundingText_Params_Data>;

  FrameWidgetInputHandler_DeleteSurroundingText_Params_Data();
  ~FrameWidgetInputHandler_DeleteSurroundingText_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_DeleteSurroundingText_Params_Data) == 16,
              "Bad sizeof(FrameWidgetInputHandler_DeleteSurroundingText_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_DeleteSurroundingTextInCodePoints_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t before;
  int32_t after;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_DeleteSurroundingTextInCodePoints_Params_Data>;

  FrameWidgetInputHandler_DeleteSurroundingTextInCodePoints_Params_Data();
  ~FrameWidgetInputHandler_DeleteSurroundingTextInCodePoints_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_DeleteSurroundingTextInCodePoints_Params_Data) == 16,
              "Bad sizeof(FrameWidgetInputHandler_DeleteSurroundingTextInCodePoints_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_SetEditableSelectionOffsets_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t start;
  int32_t end;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_SetEditableSelectionOffsets_Params_Data>;

  FrameWidgetInputHandler_SetEditableSelectionOffsets_Params_Data();
  ~FrameWidgetInputHandler_SetEditableSelectionOffsets_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_SetEditableSelectionOffsets_Params_Data) == 16,
              "Bad sizeof(FrameWidgetInputHandler_SetEditableSelectionOffsets_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_HandleStylusWritingGestureAction_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::blink::mojom::internal::StylusWritingGestureData_Data> gesture_data;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_HandleStylusWritingGestureAction_Params_Data>;

  FrameWidgetInputHandler_HandleStylusWritingGestureAction_Params_Data();
  ~FrameWidgetInputHandler_HandleStylusWritingGestureAction_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_HandleStylusWritingGestureAction_Params_Data) == 16,
              "Bad sizeof(FrameWidgetInputHandler_HandleStylusWritingGestureAction_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_ExecuteEditCommand_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> command;
  mojo::internal::Pointer<::mojo_base::mojom::internal::String16_Data> value;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_ExecuteEditCommand_Params_Data>;

  FrameWidgetInputHandler_ExecuteEditCommand_Params_Data();
  ~FrameWidgetInputHandler_ExecuteEditCommand_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_ExecuteEditCommand_Params_Data) == 24,
              "Bad sizeof(FrameWidgetInputHandler_ExecuteEditCommand_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_Undo_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_Undo_Params_Data>;

  FrameWidgetInputHandler_Undo_Params_Data();
  ~FrameWidgetInputHandler_Undo_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_Undo_Params_Data) == 8,
              "Bad sizeof(FrameWidgetInputHandler_Undo_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_Redo_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_Redo_Params_Data>;

  FrameWidgetInputHandler_Redo_Params_Data();
  ~FrameWidgetInputHandler_Redo_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_Redo_Params_Data) == 8,
              "Bad sizeof(FrameWidgetInputHandler_Redo_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_Cut_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_Cut_Params_Data>;

  FrameWidgetInputHandler_Cut_Params_Data();
  ~FrameWidgetInputHandler_Cut_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_Cut_Params_Data) == 8,
              "Bad sizeof(FrameWidgetInputHandler_Cut_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_Copy_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_Copy_Params_Data>;

  FrameWidgetInputHandler_Copy_Params_Data();
  ~FrameWidgetInputHandler_Copy_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_Copy_Params_Data) == 8,
              "Bad sizeof(FrameWidgetInputHandler_Copy_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_CopyToFindPboard_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_CopyToFindPboard_Params_Data>;

  FrameWidgetInputHandler_CopyToFindPboard_Params_Data();
  ~FrameWidgetInputHandler_CopyToFindPboard_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_CopyToFindPboard_Params_Data) == 8,
              "Bad sizeof(FrameWidgetInputHandler_CopyToFindPboard_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_Paste_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_Paste_Params_Data>;

  FrameWidgetInputHandler_Paste_Params_Data();
  ~FrameWidgetInputHandler_Paste_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_Paste_Params_Data) == 8,
              "Bad sizeof(FrameWidgetInputHandler_Paste_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_PasteAndMatchStyle_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_PasteAndMatchStyle_Params_Data>;

  FrameWidgetInputHandler_PasteAndMatchStyle_Params_Data();
  ~FrameWidgetInputHandler_PasteAndMatchStyle_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_PasteAndMatchStyle_Params_Data) == 8,
              "Bad sizeof(FrameWidgetInputHandler_PasteAndMatchStyle_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_Delete_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_Delete_Params_Data>;

  FrameWidgetInputHandler_Delete_Params_Data();
  ~FrameWidgetInputHandler_Delete_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_Delete_Params_Data) == 8,
              "Bad sizeof(FrameWidgetInputHandler_Delete_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_SelectAll_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_SelectAll_Params_Data>;

  FrameWidgetInputHandler_SelectAll_Params_Data();
  ~FrameWidgetInputHandler_SelectAll_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_SelectAll_Params_Data) == 8,
              "Bad sizeof(FrameWidgetInputHandler_SelectAll_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_CollapseSelection_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_CollapseSelection_Params_Data>;

  FrameWidgetInputHandler_CollapseSelection_Params_Data();
  ~FrameWidgetInputHandler_CollapseSelection_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_CollapseSelection_Params_Data) == 8,
              "Bad sizeof(FrameWidgetInputHandler_CollapseSelection_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_Replace_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::mojo_base::mojom::internal::String16_Data> word;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_Replace_Params_Data>;

  FrameWidgetInputHandler_Replace_Params_Data();
  ~FrameWidgetInputHandler_Replace_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_Replace_Params_Data) == 16,
              "Bad sizeof(FrameWidgetInputHandler_Replace_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_ReplaceMisspelling_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::mojo_base::mojom::internal::String16_Data> word;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_ReplaceMisspelling_Params_Data>;

  FrameWidgetInputHandler_ReplaceMisspelling_Params_Data();
  ~FrameWidgetInputHandler_ReplaceMisspelling_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_ReplaceMisspelling_Params_Data) == 16,
              "Bad sizeof(FrameWidgetInputHandler_ReplaceMisspelling_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_SelectRange_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::gfx::mojom::internal::Point_Data> base;
  mojo::internal::Pointer<::gfx::mojom::internal::Point_Data> extent;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_SelectRange_Params_Data>;

  FrameWidgetInputHandler_SelectRange_Params_Data();
  ~FrameWidgetInputHandler_SelectRange_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_SelectRange_Params_Data) == 24,
              "Bad sizeof(FrameWidgetInputHandler_SelectRange_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_AdjustSelectionByCharacterOffset_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t start;
  int32_t end;
  int32_t behavior;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_AdjustSelectionByCharacterOffset_Params_Data>;

  FrameWidgetInputHandler_AdjustSelectionByCharacterOffset_Params_Data();
  ~FrameWidgetInputHandler_AdjustSelectionByCharacterOffset_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_AdjustSelectionByCharacterOffset_Params_Data) == 24,
              "Bad sizeof(FrameWidgetInputHandler_AdjustSelectionByCharacterOffset_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_SelectAroundCaret_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t granularity;
  uint8_t should_show_handle : 1;
  uint8_t should_show_context_menu : 1;
  uint8_t padfinal_[3];

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_SelectAroundCaret_Params_Data>;

  FrameWidgetInputHandler_SelectAroundCaret_Params_Data();
  ~FrameWidgetInputHandler_SelectAroundCaret_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_SelectAroundCaret_Params_Data) == 16,
              "Bad sizeof(FrameWidgetInputHandler_SelectAroundCaret_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_SelectAroundCaret_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::SelectAroundCaretResult_Data> result;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_SelectAroundCaret_ResponseParams_Data>;

  FrameWidgetInputHandler_SelectAroundCaret_ResponseParams_Data();
  ~FrameWidgetInputHandler_SelectAroundCaret_ResponseParams_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_SelectAroundCaret_ResponseParams_Data) == 16,
              "Bad sizeof(FrameWidgetInputHandler_SelectAroundCaret_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_MoveRangeSelectionExtent_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::gfx::mojom::internal::Point_Data> extent;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_MoveRangeSelectionExtent_Params_Data>;

  FrameWidgetInputHandler_MoveRangeSelectionExtent_Params_Data();
  ~FrameWidgetInputHandler_MoveRangeSelectionExtent_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_MoveRangeSelectionExtent_Params_Data) == 16,
              "Bad sizeof(FrameWidgetInputHandler_MoveRangeSelectionExtent_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_ScrollFocusedEditableNodeIntoView_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_ScrollFocusedEditableNodeIntoView_Params_Data>;

  FrameWidgetInputHandler_ScrollFocusedEditableNodeIntoView_Params_Data();
  ~FrameWidgetInputHandler_ScrollFocusedEditableNodeIntoView_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_ScrollFocusedEditableNodeIntoView_Params_Data) == 8,
              "Bad sizeof(FrameWidgetInputHandler_ScrollFocusedEditableNodeIntoView_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_WaitForPageScaleAnimationForTesting_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_WaitForPageScaleAnimationForTesting_Params_Data>;

  FrameWidgetInputHandler_WaitForPageScaleAnimationForTesting_Params_Data();
  ~FrameWidgetInputHandler_WaitForPageScaleAnimationForTesting_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_WaitForPageScaleAnimationForTesting_Params_Data) == 8,
              "Bad sizeof(FrameWidgetInputHandler_WaitForPageScaleAnimationForTesting_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_WaitForPageScaleAnimationForTesting_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_WaitForPageScaleAnimationForTesting_ResponseParams_Data>;

  FrameWidgetInputHandler_WaitForPageScaleAnimationForTesting_ResponseParams_Data();
  ~FrameWidgetInputHandler_WaitForPageScaleAnimationForTesting_ResponseParams_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_WaitForPageScaleAnimationForTesting_ResponseParams_Data) == 8,
              "Bad sizeof(FrameWidgetInputHandler_WaitForPageScaleAnimationForTesting_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FrameWidgetInputHandler_MoveCaret_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::gfx::mojom::internal::Point_Data> point;

 private:
  friend class mojo::internal::MessageFragment<FrameWidgetInputHandler_MoveCaret_Params_Data>;

  FrameWidgetInputHandler_MoveCaret_Params_Data();
  ~FrameWidgetInputHandler_MoveCaret_Params_Data() = delete;
};
static_assert(sizeof(FrameWidgetInputHandler_MoveCaret_Params_Data) == 16,
              "Bad sizeof(FrameWidgetInputHandler_MoveCaret_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandler_SetFocus_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t state;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandler_SetFocus_Params_Data>;

  WidgetInputHandler_SetFocus_Params_Data();
  ~WidgetInputHandler_SetFocus_Params_Data() = delete;
};
static_assert(sizeof(WidgetInputHandler_SetFocus_Params_Data) == 16,
              "Bad sizeof(WidgetInputHandler_SetFocus_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandler_MouseCaptureLost_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandler_MouseCaptureLost_Params_Data>;

  WidgetInputHandler_MouseCaptureLost_Params_Data();
  ~WidgetInputHandler_MouseCaptureLost_Params_Data() = delete;
};
static_assert(sizeof(WidgetInputHandler_MouseCaptureLost_Params_Data) == 8,
              "Bad sizeof(WidgetInputHandler_MouseCaptureLost_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandler_SetEditCommandsForNextKeyEvent_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<internal::EditCommand_Data>>> commands;

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandler_SetEditCommandsForNextKeyEvent_Params_Data>;

  WidgetInputHandler_SetEditCommandsForNextKeyEvent_Params_Data();
  ~WidgetInputHandler_SetEditCommandsForNextKeyEvent_Params_Data() = delete;
};
static_assert(sizeof(WidgetInputHandler_SetEditCommandsForNextKeyEvent_Params_Data) == 16,
              "Bad sizeof(WidgetInputHandler_SetEditCommandsForNextKeyEvent_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandler_CursorVisibilityChanged_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t visible : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandler_CursorVisibilityChanged_Params_Data>;

  WidgetInputHandler_CursorVisibilityChanged_Params_Data();
  ~WidgetInputHandler_CursorVisibilityChanged_Params_Data() = delete;
};
static_assert(sizeof(WidgetInputHandler_CursorVisibilityChanged_Params_Data) == 16,
              "Bad sizeof(WidgetInputHandler_CursorVisibilityChanged_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandler_ImeSetComposition_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::mojo_base::mojom::internal::String16_Data> text;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<::ui::mojom::internal::ImeTextSpan_Data>>> ime_text_spans;
  mojo::internal::Pointer<::gfx::mojom::internal::Range_Data> range;
  int32_t start;
  int32_t end;

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandler_ImeSetComposition_Params_Data>;

  WidgetInputHandler_ImeSetComposition_Params_Data();
  ~WidgetInputHandler_ImeSetComposition_Params_Data() = delete;
};
static_assert(sizeof(WidgetInputHandler_ImeSetComposition_Params_Data) == 40,
              "Bad sizeof(WidgetInputHandler_ImeSetComposition_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandler_ImeSetComposition_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandler_ImeSetComposition_ResponseParams_Data>;

  WidgetInputHandler_ImeSetComposition_ResponseParams_Data();
  ~WidgetInputHandler_ImeSetComposition_ResponseParams_Data() = delete;
};
static_assert(sizeof(WidgetInputHandler_ImeSetComposition_ResponseParams_Data) == 8,
              "Bad sizeof(WidgetInputHandler_ImeSetComposition_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandler_ImeCommitText_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::mojo_base::mojom::internal::String16_Data> text;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<::ui::mojom::internal::ImeTextSpan_Data>>> ime_text_spans;
  mojo::internal::Pointer<::gfx::mojom::internal::Range_Data> range;
  int32_t relative_cursor_position;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandler_ImeCommitText_Params_Data>;

  WidgetInputHandler_ImeCommitText_Params_Data();
  ~WidgetInputHandler_ImeCommitText_Params_Data() = delete;
};
static_assert(sizeof(WidgetInputHandler_ImeCommitText_Params_Data) == 40,
              "Bad sizeof(WidgetInputHandler_ImeCommitText_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandler_ImeCommitText_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandler_ImeCommitText_ResponseParams_Data>;

  WidgetInputHandler_ImeCommitText_ResponseParams_Data();
  ~WidgetInputHandler_ImeCommitText_ResponseParams_Data() = delete;
};
static_assert(sizeof(WidgetInputHandler_ImeCommitText_ResponseParams_Data) == 8,
              "Bad sizeof(WidgetInputHandler_ImeCommitText_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandler_ImeFinishComposingText_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t keep_selection : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandler_ImeFinishComposingText_Params_Data>;

  WidgetInputHandler_ImeFinishComposingText_Params_Data();
  ~WidgetInputHandler_ImeFinishComposingText_Params_Data() = delete;
};
static_assert(sizeof(WidgetInputHandler_ImeFinishComposingText_Params_Data) == 16,
              "Bad sizeof(WidgetInputHandler_ImeFinishComposingText_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandler_RequestTextInputStateUpdate_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandler_RequestTextInputStateUpdate_Params_Data>;

  WidgetInputHandler_RequestTextInputStateUpdate_Params_Data();
  ~WidgetInputHandler_RequestTextInputStateUpdate_Params_Data() = delete;
};
static_assert(sizeof(WidgetInputHandler_RequestTextInputStateUpdate_Params_Data) == 8,
              "Bad sizeof(WidgetInputHandler_RequestTextInputStateUpdate_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandler_RequestCompositionUpdates_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t immediate_request : 1;
  uint8_t monitor_request : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandler_RequestCompositionUpdates_Params_Data>;

  WidgetInputHandler_RequestCompositionUpdates_Params_Data();
  ~WidgetInputHandler_RequestCompositionUpdates_Params_Data() = delete;
};
static_assert(sizeof(WidgetInputHandler_RequestCompositionUpdates_Params_Data) == 16,
              "Bad sizeof(WidgetInputHandler_RequestCompositionUpdates_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandler_DispatchEvent_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::Event_Data> event;

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandler_DispatchEvent_Params_Data>;

  WidgetInputHandler_DispatchEvent_Params_Data();
  ~WidgetInputHandler_DispatchEvent_Params_Data() = delete;
};
static_assert(sizeof(WidgetInputHandler_DispatchEvent_Params_Data) == 16,
              "Bad sizeof(WidgetInputHandler_DispatchEvent_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandler_DispatchEvent_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t source;
  int32_t state;
  mojo::internal::Pointer<::ui::mojom::internal::LatencyInfo_Data> updated_latency;
  mojo::internal::Pointer<internal::DidOverscrollParams_Data> overscroll;
  mojo::internal::Pointer<internal::TouchActionOptional_Data> touch_action;

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandler_DispatchEvent_ResponseParams_Data>;

  WidgetInputHandler_DispatchEvent_ResponseParams_Data();
  ~WidgetInputHandler_DispatchEvent_ResponseParams_Data() = delete;
};
static_assert(sizeof(WidgetInputHandler_DispatchEvent_ResponseParams_Data) == 40,
              "Bad sizeof(WidgetInputHandler_DispatchEvent_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandler_DispatchNonBlockingEvent_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::Event_Data> event;

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandler_DispatchNonBlockingEvent_Params_Data>;

  WidgetInputHandler_DispatchNonBlockingEvent_Params_Data();
  ~WidgetInputHandler_DispatchNonBlockingEvent_Params_Data() = delete;
};
static_assert(sizeof(WidgetInputHandler_DispatchNonBlockingEvent_Params_Data) == 16,
              "Bad sizeof(WidgetInputHandler_DispatchNonBlockingEvent_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandler_WaitForInputProcessed_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandler_WaitForInputProcessed_Params_Data>;

  WidgetInputHandler_WaitForInputProcessed_Params_Data();
  ~WidgetInputHandler_WaitForInputProcessed_Params_Data() = delete;
};
static_assert(sizeof(WidgetInputHandler_WaitForInputProcessed_Params_Data) == 8,
              "Bad sizeof(WidgetInputHandler_WaitForInputProcessed_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandler_WaitForInputProcessed_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandler_WaitForInputProcessed_ResponseParams_Data>;

  WidgetInputHandler_WaitForInputProcessed_ResponseParams_Data();
  ~WidgetInputHandler_WaitForInputProcessed_ResponseParams_Data() = delete;
};
static_assert(sizeof(WidgetInputHandler_WaitForInputProcessed_ResponseParams_Data) == 8,
              "Bad sizeof(WidgetInputHandler_WaitForInputProcessed_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandler_AttachSynchronousCompositor_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Interface_Data control_host;
  mojo::internal::AssociatedInterface_Data host;
  mojo::internal::AssociatedEndpointHandle_Data compositor_request;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandler_AttachSynchronousCompositor_Params_Data>;

  WidgetInputHandler_AttachSynchronousCompositor_Params_Data();
  ~WidgetInputHandler_AttachSynchronousCompositor_Params_Data() = delete;
};
static_assert(sizeof(WidgetInputHandler_AttachSynchronousCompositor_Params_Data) == 32,
              "Bad sizeof(WidgetInputHandler_AttachSynchronousCompositor_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WidgetInputHandler_GetFrameWidgetInputHandler_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::AssociatedEndpointHandle_Data interface_request;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<WidgetInputHandler_GetFrameWidgetInputHandler_Params_Data>;

  WidgetInputHandler_GetFrameWidgetInputHandler_Params_Data();
  ~WidgetInputHandler_GetFrameWidgetInputHandler_Params_Data() = delete;
};
static_assert(sizeof(WidgetInputHandler_GetFrameWidgetInputHandler_Params_Data) == 16,
              "Bad sizeof(WidgetInputHandler_GetFrameWidgetInputHandler_Params_Data)");

}  // namespace internal


class WidgetInputHandlerHost_SetTouchActionFromMain_ParamsDataView {
 public:
  WidgetInputHandlerHost_SetTouchActionFromMain_ParamsDataView() = default;

  WidgetInputHandlerHost_SetTouchActionFromMain_ParamsDataView(
      internal::WidgetInputHandlerHost_SetTouchActionFromMain_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadTouchAction(UserType* output) const {
    auto data_value = data_->touch_action;
    return mojo::internal::Deserialize<::cc::mojom::TouchAction>(
        data_value, output);
  }
  ::cc::mojom::TouchAction touch_action() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::cc::mojom::TouchAction>(data_->touch_action));
  }
 private:
  internal::WidgetInputHandlerHost_SetTouchActionFromMain_Params_Data* data_ = nullptr;
};



class WidgetInputHandlerHost_SetPanAction_ParamsDataView {
 public:
  WidgetInputHandlerHost_SetPanAction_ParamsDataView() = default;

  WidgetInputHandlerHost_SetPanAction_ParamsDataView(
      internal::WidgetInputHandlerHost_SetPanAction_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadPanAction(UserType* output) const {
    auto data_value = data_->pan_action;
    return mojo::internal::Deserialize<::blink::mojom::PanAction>(
        data_value, output);
  }
  PanAction pan_action() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::blink::mojom::PanAction>(data_->pan_action));
  }
 private:
  internal::WidgetInputHandlerHost_SetPanAction_Params_Data* data_ = nullptr;
};



class WidgetInputHandlerHost_DidOverscroll_ParamsDataView {
 public:
  WidgetInputHandlerHost_DidOverscroll_ParamsDataView() = default;

  WidgetInputHandlerHost_DidOverscroll_ParamsDataView(
      internal::WidgetInputHandlerHost_DidOverscroll_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetParamsDataView(
      DidOverscrollParamsDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadParams(UserType* output) {
    
    auto* pointer = data_->params.Get();
    return mojo::internal::Deserialize<::blink::mojom::DidOverscrollParamsDataView>(
        pointer, output, message_);
  }
 private:
  internal::WidgetInputHandlerHost_DidOverscroll_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class WidgetInputHandlerHost_DidStartScrollingViewport_ParamsDataView {
 public:
  WidgetInputHandlerHost_DidStartScrollingViewport_ParamsDataView() = default;

  WidgetInputHandlerHost_DidStartScrollingViewport_ParamsDataView(
      internal::WidgetInputHandlerHost_DidStartScrollingViewport_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::WidgetInputHandlerHost_DidStartScrollingViewport_Params_Data* data_ = nullptr;
};



class WidgetInputHandlerHost_ImeCancelComposition_ParamsDataView {
 public:
  WidgetInputHandlerHost_ImeCancelComposition_ParamsDataView() = default;

  WidgetInputHandlerHost_ImeCancelComposition_ParamsDataView(
      internal::WidgetInputHandlerHost_ImeCancelComposition_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::WidgetInputHandlerHost_ImeCancelComposition_Params_Data* data_ = nullptr;
};



class WidgetInputHandlerHost_ImeCompositionRangeChanged_ParamsDataView {
 public:
  WidgetInputHandlerHost_ImeCompositionRangeChanged_ParamsDataView() = default;

  WidgetInputHandlerHost_ImeCompositionRangeChanged_ParamsDataView(
      internal::WidgetInputHandlerHost_ImeCompositionRangeChanged_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetRangeDataView(
      ::gfx::mojom::RangeDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadRange(UserType* output) {
    
    auto* pointer = data_->range.Get();
    return mojo::internal::Deserialize<::gfx::mojom::RangeDataView>(
        pointer, output, message_);
  }
  inline void GetBoundsDataView(
      mojo::ArrayDataView<::gfx::mojom::RectDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadBounds(UserType* output) {
    
    auto* pointer = data_->bounds.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::gfx::mojom::RectDataView>>(
        pointer, output, message_);
  }
 private:
  internal::WidgetInputHandlerHost_ImeCompositionRangeChanged_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class WidgetInputHandlerHost_SetMouseCapture_ParamsDataView {
 public:
  WidgetInputHandlerHost_SetMouseCapture_ParamsDataView() = default;

  WidgetInputHandlerHost_SetMouseCapture_ParamsDataView(
      internal::WidgetInputHandlerHost_SetMouseCapture_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool capture() const {
    return data_->capture;
  }
 private:
  internal::WidgetInputHandlerHost_SetMouseCapture_Params_Data* data_ = nullptr;
};



class WidgetInputHandlerHost_RequestMouseLock_ParamsDataView {
 public:
  WidgetInputHandlerHost_RequestMouseLock_ParamsDataView() = default;

  WidgetInputHandlerHost_RequestMouseLock_ParamsDataView(
      internal::WidgetInputHandlerHost_RequestMouseLock_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool from_user_gesture() const {
    return data_->from_user_gesture;
  }
  bool unadjusted_movement() const {
    return data_->unadjusted_movement;
  }
 private:
  internal::WidgetInputHandlerHost_RequestMouseLock_Params_Data* data_ = nullptr;
};



class WidgetInputHandlerHost_RequestMouseLock_ResponseParamsDataView {
 public:
  WidgetInputHandlerHost_RequestMouseLock_ResponseParamsDataView() = default;

  WidgetInputHandlerHost_RequestMouseLock_ResponseParamsDataView(
      internal::WidgetInputHandlerHost_RequestMouseLock_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadResult(UserType* output) const {
    auto data_value = data_->result;
    return mojo::internal::Deserialize<::blink::mojom::PointerLockResult>(
        data_value, output);
  }
  ::blink::mojom::PointerLockResult result() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::blink::mojom::PointerLockResult>(data_->result));
  }
  template <typename UserType>
  UserType TakeContext() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfacePtrDataView<::blink::mojom::PointerLockContextInterfaceBase>>(
            &data_->context, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::WidgetInputHandlerHost_RequestMouseLock_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class FrameWidgetInputHandler_AddImeTextSpansToExistingText_ParamsDataView {
 public:
  FrameWidgetInputHandler_AddImeTextSpansToExistingText_ParamsDataView() = default;

  FrameWidgetInputHandler_AddImeTextSpansToExistingText_ParamsDataView(
      internal::FrameWidgetInputHandler_AddImeTextSpansToExistingText_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  uint32_t start() const {
    return data_->start;
  }
  uint32_t end() const {
    return data_->end;
  }
  inline void GetImeTextSpansDataView(
      mojo::ArrayDataView<::ui::mojom::ImeTextSpanDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadImeTextSpans(UserType* output) {
    
    auto* pointer = data_->ime_text_spans.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::ui::mojom::ImeTextSpanDataView>>(
        pointer, output, message_);
  }
 private:
  internal::FrameWidgetInputHandler_AddImeTextSpansToExistingText_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class FrameWidgetInputHandler_ClearImeTextSpansByType_ParamsDataView {
 public:
  FrameWidgetInputHandler_ClearImeTextSpansByType_ParamsDataView() = default;

  FrameWidgetInputHandler_ClearImeTextSpansByType_ParamsDataView(
      internal::FrameWidgetInputHandler_ClearImeTextSpansByType_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  uint32_t start() const {
    return data_->start;
  }
  uint32_t end() const {
    return data_->end;
  }
  template <typename UserType>
  [[nodiscard]] bool ReadType(UserType* output) const {
    auto data_value = data_->type;
    return mojo::internal::Deserialize<::ui::mojom::ImeTextSpanType>(
        data_value, output);
  }
  ::ui::mojom::ImeTextSpanType type() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::ui::mojom::ImeTextSpanType>(data_->type));
  }
 private:
  internal::FrameWidgetInputHandler_ClearImeTextSpansByType_Params_Data* data_ = nullptr;
};



class FrameWidgetInputHandler_SetCompositionFromExistingText_ParamsDataView {
 public:
  FrameWidgetInputHandler_SetCompositionFromExistingText_ParamsDataView() = default;

  FrameWidgetInputHandler_SetCompositionFromExistingText_ParamsDataView(
      internal::FrameWidgetInputHandler_SetCompositionFromExistingText_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  int32_t start() const {
    return data_->start;
  }
  int32_t end() const {
    return data_->end;
  }
  inline void GetImeTextSpansDataView(
      mojo::ArrayDataView<::ui::mojom::ImeTextSpanDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadImeTextSpans(UserType* output) {
    
    auto* pointer = data_->ime_text_spans.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::ui::mojom::ImeTextSpanDataView>>(
        pointer, output, message_);
  }
 private:
  internal::FrameWidgetInputHandler_SetCompositionFromExistingText_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class FrameWidgetInputHandler_ExtendSelectionAndDelete_ParamsDataView {
 public:
  FrameWidgetInputHandler_ExtendSelectionAndDelete_ParamsDataView() = default;

  FrameWidgetInputHandler_ExtendSelectionAndDelete_ParamsDataView(
      internal::FrameWidgetInputHandler_ExtendSelectionAndDelete_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int32_t before() const {
    return data_->before;
  }
  int32_t after() const {
    return data_->after;
  }
 private:
  internal::FrameWidgetInputHandler_ExtendSelectionAndDelete_Params_Data* data_ = nullptr;
};



class FrameWidgetInputHandler_DeleteSurroundingText_ParamsDataView {
 public:
  FrameWidgetInputHandler_DeleteSurroundingText_ParamsDataView() = default;

  FrameWidgetInputHandler_DeleteSurroundingText_ParamsDataView(
      internal::FrameWidgetInputHandler_DeleteSurroundingText_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int32_t before() const {
    return data_->before;
  }
  int32_t after() const {
    return data_->after;
  }
 private:
  internal::FrameWidgetInputHandler_DeleteSurroundingText_Params_Data* data_ = nullptr;
};



class FrameWidgetInputHandler_DeleteSurroundingTextInCodePoints_ParamsDataView {
 public:
  FrameWidgetInputHandler_DeleteSurroundingTextInCodePoints_ParamsDataView() = default;

  FrameWidgetInputHandler_DeleteSurroundingTextInCodePoints_ParamsDataView(
      internal::FrameWidgetInputHandler_DeleteSurroundingTextInCodePoints_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int32_t before() const {
    return data_->before;
  }
  int32_t after() const {
    return data_->after;
  }
 private:
  internal::FrameWidgetInputHandler_DeleteSurroundingTextInCodePoints_Params_Data* data_ = nullptr;
};



class FrameWidgetInputHandler_SetEditableSelectionOffsets_ParamsDataView {
 public:
  FrameWidgetInputHandler_SetEditableSelectionOffsets_ParamsDataView() = default;

  FrameWidgetInputHandler_SetEditableSelectionOffsets_ParamsDataView(
      internal::FrameWidgetInputHandler_SetEditableSelectionOffsets_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int32_t start() const {
    return data_->start;
  }
  int32_t end() const {
    return data_->end;
  }
 private:
  internal::FrameWidgetInputHandler_SetEditableSelectionOffsets_Params_Data* data_ = nullptr;
};



class FrameWidgetInputHandler_HandleStylusWritingGestureAction_ParamsDataView {
 public:
  FrameWidgetInputHandler_HandleStylusWritingGestureAction_ParamsDataView() = default;

  FrameWidgetInputHandler_HandleStylusWritingGestureAction_ParamsDataView(
      internal::FrameWidgetInputHandler_HandleStylusWritingGestureAction_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetGestureDataDataView(
      ::blink::mojom::StylusWritingGestureDataDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadGestureData(UserType* output) {
    
    auto* pointer = data_->gesture_data.Get();
    return mojo::internal::Deserialize<::blink::mojom::StylusWritingGestureDataDataView>(
        pointer, output, message_);
  }
 private:
  internal::FrameWidgetInputHandler_HandleStylusWritingGestureAction_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class FrameWidgetInputHandler_ExecuteEditCommand_ParamsDataView {
 public:
  FrameWidgetInputHandler_ExecuteEditCommand_ParamsDataView() = default;

  FrameWidgetInputHandler_ExecuteEditCommand_ParamsDataView(
      internal::FrameWidgetInputHandler_ExecuteEditCommand_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetCommandDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadCommand(UserType* output) {
    
    auto* pointer = data_->command.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  inline void GetValueDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadValue(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::mojo_base::mojom::String16DataView, UserType>(),
    "Attempting to read the optional `value` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadValue` instead "
    "of `ReadValue if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->value.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, message_);
  }
 private:
  internal::FrameWidgetInputHandler_ExecuteEditCommand_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class FrameWidgetInputHandler_Undo_ParamsDataView {
 public:
  FrameWidgetInputHandler_Undo_ParamsDataView() = default;

  FrameWidgetInputHandler_Undo_ParamsDataView(
      internal::FrameWidgetInputHandler_Undo_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::FrameWidgetInputHandler_Undo_Params_Data* data_ = nullptr;
};



class FrameWidgetInputHandler_Redo_ParamsDataView {
 public:
  FrameWidgetInputHandler_Redo_ParamsDataView() = default;

  FrameWidgetInputHandler_Redo_ParamsDataView(
      internal::FrameWidgetInputHandler_Redo_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::FrameWidgetInputHandler_Redo_Params_Data* data_ = nullptr;
};



class FrameWidgetInputHandler_Cut_ParamsDataView {
 public:
  FrameWidgetInputHandler_Cut_ParamsDataView() = default;

  FrameWidgetInputHandler_Cut_ParamsDataView(
      internal::FrameWidgetInputHandler_Cut_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::FrameWidgetInputHandler_Cut_Params_Data* data_ = nullptr;
};



class FrameWidgetInputHandler_Copy_ParamsDataView {
 public:
  FrameWidgetInputHandler_Copy_ParamsDataView() = default;

  FrameWidgetInputHandler_Copy_ParamsDataView(
      internal::FrameWidgetInputHandler_Copy_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::FrameWidgetInputHandler_Copy_Params_Data* data_ = nullptr;
};



class FrameWidgetInputHandler_CopyToFindPboard_ParamsDataView {
 public:
  FrameWidgetInputHandler_CopyToFindPboard_ParamsDataView() = default;

  FrameWidgetInputHandler_CopyToFindPboard_ParamsDataView(
      internal::FrameWidgetInputHandler_CopyToFindPboard_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::FrameWidgetInputHandler_CopyToFindPboard_Params_Data* data_ = nullptr;
};



class FrameWidgetInputHandler_Paste_ParamsDataView {
 public:
  FrameWidgetInputHandler_Paste_ParamsDataView() = default;

  FrameWidgetInputHandler_Paste_ParamsDataView(
      internal::FrameWidgetInputHandler_Paste_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::FrameWidgetInputHandler_Paste_Params_Data* data_ = nullptr;
};



class FrameWidgetInputHandler_PasteAndMatchStyle_ParamsDataView {
 public:
  FrameWidgetInputHandler_PasteAndMatchStyle_ParamsDataView() = default;

  FrameWidgetInputHandler_PasteAndMatchStyle_ParamsDataView(
      internal::FrameWidgetInputHandler_PasteAndMatchStyle_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::FrameWidgetInputHandler_PasteAndMatchStyle_Params_Data* data_ = nullptr;
};



class FrameWidgetInputHandler_Delete_ParamsDataView {
 public:
  FrameWidgetInputHandler_Delete_ParamsDataView() = default;

  FrameWidgetInputHandler_Delete_ParamsDataView(
      internal::FrameWidgetInputHandler_Delete_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::FrameWidgetInputHandler_Delete_Params_Data* data_ = nullptr;
};



class FrameWidgetInputHandler_SelectAll_ParamsDataView {
 public:
  FrameWidgetInputHandler_SelectAll_ParamsDataView() = default;

  FrameWidgetInputHandler_SelectAll_ParamsDataView(
      internal::FrameWidgetInputHandler_SelectAll_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::FrameWidgetInputHandler_SelectAll_Params_Data* data_ = nullptr;
};



class FrameWidgetInputHandler_CollapseSelection_ParamsDataView {
 public:
  FrameWidgetInputHandler_CollapseSelection_ParamsDataView() = default;

  FrameWidgetInputHandler_CollapseSelection_ParamsDataView(
      internal::FrameWidgetInputHandler_CollapseSelection_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::FrameWidgetInputHandler_CollapseSelection_Params_Data* data_ = nullptr;
};



class FrameWidgetInputHandler_Replace_ParamsDataView {
 public:
  FrameWidgetInputHandler_Replace_ParamsDataView() = default;

  FrameWidgetInputHandler_Replace_ParamsDataView(
      internal::FrameWidgetInputHandler_Replace_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetWordDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadWord(UserType* output) {
    
    auto* pointer = data_->word.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, message_);
  }
 private:
  internal::FrameWidgetInputHandler_Replace_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class FrameWidgetInputHandler_ReplaceMisspelling_ParamsDataView {
 public:
  FrameWidgetInputHandler_ReplaceMisspelling_ParamsDataView() = default;

  FrameWidgetInputHandler_ReplaceMisspelling_ParamsDataView(
      internal::FrameWidgetInputHandler_ReplaceMisspelling_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetWordDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadWord(UserType* output) {
    
    auto* pointer = data_->word.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, message_);
  }
 private:
  internal::FrameWidgetInputHandler_ReplaceMisspelling_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class FrameWidgetInputHandler_SelectRange_ParamsDataView {
 public:
  FrameWidgetInputHandler_SelectRange_ParamsDataView() = default;

  FrameWidgetInputHandler_SelectRange_ParamsDataView(
      internal::FrameWidgetInputHandler_SelectRange_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetBaseDataView(
      ::gfx::mojom::PointDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadBase(UserType* output) {
    
    auto* pointer = data_->base.Get();
    return mojo::internal::Deserialize<::gfx::mojom::PointDataView>(
        pointer, output, message_);
  }
  inline void GetExtentDataView(
      ::gfx::mojom::PointDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadExtent(UserType* output) {
    
    auto* pointer = data_->extent.Get();
    return mojo::internal::Deserialize<::gfx::mojom::PointDataView>(
        pointer, output, message_);
  }
 private:
  internal::FrameWidgetInputHandler_SelectRange_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class FrameWidgetInputHandler_AdjustSelectionByCharacterOffset_ParamsDataView {
 public:
  FrameWidgetInputHandler_AdjustSelectionByCharacterOffset_ParamsDataView() = default;

  FrameWidgetInputHandler_AdjustSelectionByCharacterOffset_ParamsDataView(
      internal::FrameWidgetInputHandler_AdjustSelectionByCharacterOffset_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int32_t start() const {
    return data_->start;
  }
  int32_t end() const {
    return data_->end;
  }
  template <typename UserType>
  [[nodiscard]] bool ReadBehavior(UserType* output) const {
    auto data_value = data_->behavior;
    return mojo::internal::Deserialize<::blink::mojom::SelectionMenuBehavior>(
        data_value, output);
  }
  ::blink::mojom::SelectionMenuBehavior behavior() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::blink::mojom::SelectionMenuBehavior>(data_->behavior));
  }
 private:
  internal::FrameWidgetInputHandler_AdjustSelectionByCharacterOffset_Params_Data* data_ = nullptr;
};



class FrameWidgetInputHandler_SelectAroundCaret_ParamsDataView {
 public:
  FrameWidgetInputHandler_SelectAroundCaret_ParamsDataView() = default;

  FrameWidgetInputHandler_SelectAroundCaret_ParamsDataView(
      internal::FrameWidgetInputHandler_SelectAroundCaret_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadGranularity(UserType* output) const {
    auto data_value = data_->granularity;
    return mojo::internal::Deserialize<::blink::mojom::SelectionGranularity>(
        data_value, output);
  }
  SelectionGranularity granularity() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::blink::mojom::SelectionGranularity>(data_->granularity));
  }
  bool should_show_handle() const {
    return data_->should_show_handle;
  }
  bool should_show_context_menu() const {
    return data_->should_show_context_menu;
  }
 private:
  internal::FrameWidgetInputHandler_SelectAroundCaret_Params_Data* data_ = nullptr;
};



class FrameWidgetInputHandler_SelectAroundCaret_ResponseParamsDataView {
 public:
  FrameWidgetInputHandler_SelectAroundCaret_ResponseParamsDataView() = default;

  FrameWidgetInputHandler_SelectAroundCaret_ResponseParamsDataView(
      internal::FrameWidgetInputHandler_SelectAroundCaret_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetResultDataView(
      SelectAroundCaretResultDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadResult(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::blink::mojom::SelectAroundCaretResultDataView, UserType>(),
    "Attempting to read the optional `result` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadResult` instead "
    "of `ReadResult if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->result.Get();
    return mojo::internal::Deserialize<::blink::mojom::SelectAroundCaretResultDataView>(
        pointer, output, message_);
  }
 private:
  internal::FrameWidgetInputHandler_SelectAroundCaret_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class FrameWidgetInputHandler_MoveRangeSelectionExtent_ParamsDataView {
 public:
  FrameWidgetInputHandler_MoveRangeSelectionExtent_ParamsDataView() = default;

  FrameWidgetInputHandler_MoveRangeSelectionExtent_ParamsDataView(
      internal::FrameWidgetInputHandler_MoveRangeSelectionExtent_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetExtentDataView(
      ::gfx::mojom::PointDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadExtent(UserType* output) {
    
    auto* pointer = data_->extent.Get();
    return mojo::internal::Deserialize<::gfx::mojom::PointDataView>(
        pointer, output, message_);
  }
 private:
  internal::FrameWidgetInputHandler_MoveRangeSelectionExtent_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class FrameWidgetInputHandler_ScrollFocusedEditableNodeIntoView_ParamsDataView {
 public:
  FrameWidgetInputHandler_ScrollFocusedEditableNodeIntoView_ParamsDataView() = default;

  FrameWidgetInputHandler_ScrollFocusedEditableNodeIntoView_ParamsDataView(
      internal::FrameWidgetInputHandler_ScrollFocusedEditableNodeIntoView_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::FrameWidgetInputHandler_ScrollFocusedEditableNodeIntoView_Params_Data* data_ = nullptr;
};



class FrameWidgetInputHandler_WaitForPageScaleAnimationForTesting_ParamsDataView {
 public:
  FrameWidgetInputHandler_WaitForPageScaleAnimationForTesting_ParamsDataView() = default;

  FrameWidgetInputHandler_WaitForPageScaleAnimationForTesting_ParamsDataView(
      internal::FrameWidgetInputHandler_WaitForPageScaleAnimationForTesting_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::FrameWidgetInputHandler_WaitForPageScaleAnimationForTesting_Params_Data* data_ = nullptr;
};



class FrameWidgetInputHandler_WaitForPageScaleAnimationForTesting_ResponseParamsDataView {
 public:
  FrameWidgetInputHandler_WaitForPageScaleAnimationForTesting_ResponseParamsDataView() = default;

  FrameWidgetInputHandler_WaitForPageScaleAnimationForTesting_ResponseParamsDataView(
      internal::FrameWidgetInputHandler_WaitForPageScaleAnimationForTesting_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::FrameWidgetInputHandler_WaitForPageScaleAnimationForTesting_ResponseParams_Data* data_ = nullptr;
};



class FrameWidgetInputHandler_MoveCaret_ParamsDataView {
 public:
  FrameWidgetInputHandler_MoveCaret_ParamsDataView() = default;

  FrameWidgetInputHandler_MoveCaret_ParamsDataView(
      internal::FrameWidgetInputHandler_MoveCaret_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetPointDataView(
      ::gfx::mojom::PointDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadPoint(UserType* output) {
    
    auto* pointer = data_->point.Get();
    return mojo::internal::Deserialize<::gfx::mojom::PointDataView>(
        pointer, output, message_);
  }
 private:
  internal::FrameWidgetInputHandler_MoveCaret_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class WidgetInputHandler_SetFocus_ParamsDataView {
 public:
  WidgetInputHandler_SetFocus_ParamsDataView() = default;

  WidgetInputHandler_SetFocus_ParamsDataView(
      internal::WidgetInputHandler_SetFocus_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadState(UserType* output) const {
    auto data_value = data_->state;
    return mojo::internal::Deserialize<::blink::mojom::FocusState>(
        data_value, output);
  }
  FocusState state() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::blink::mojom::FocusState>(data_->state));
  }
 private:
  internal::WidgetInputHandler_SetFocus_Params_Data* data_ = nullptr;
};



class WidgetInputHandler_MouseCaptureLost_ParamsDataView {
 public:
  WidgetInputHandler_MouseCaptureLost_ParamsDataView() = default;

  WidgetInputHandler_MouseCaptureLost_ParamsDataView(
      internal::WidgetInputHandler_MouseCaptureLost_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::WidgetInputHandler_MouseCaptureLost_Params_Data* data_ = nullptr;
};



class WidgetInputHandler_SetEditCommandsForNextKeyEvent_ParamsDataView {
 public:
  WidgetInputHandler_SetEditCommandsForNextKeyEvent_ParamsDataView() = default;

  WidgetInputHandler_SetEditCommandsForNextKeyEvent_ParamsDataView(
      internal::WidgetInputHandler_SetEditCommandsForNextKeyEvent_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetCommandsDataView(
      mojo::ArrayDataView<EditCommandDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadCommands(UserType* output) {
    
    auto* pointer = data_->commands.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::blink::mojom::EditCommandDataView>>(
        pointer, output, message_);
  }
 private:
  internal::WidgetInputHandler_SetEditCommandsForNextKeyEvent_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class WidgetInputHandler_CursorVisibilityChanged_ParamsDataView {
 public:
  WidgetInputHandler_CursorVisibilityChanged_ParamsDataView() = default;

  WidgetInputHandler_CursorVisibilityChanged_ParamsDataView(
      internal::WidgetInputHandler_CursorVisibilityChanged_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool visible() const {
    return data_->visible;
  }
 private:
  internal::WidgetInputHandler_CursorVisibilityChanged_Params_Data* data_ = nullptr;
};



class WidgetInputHandler_ImeSetComposition_ParamsDataView {
 public:
  WidgetInputHandler_ImeSetComposition_ParamsDataView() = default;

  WidgetInputHandler_ImeSetComposition_ParamsDataView(
      internal::WidgetInputHandler_ImeSetComposition_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetTextDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadText(UserType* output) {
    
    auto* pointer = data_->text.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, message_);
  }
  inline void GetImeTextSpansDataView(
      mojo::ArrayDataView<::ui::mojom::ImeTextSpanDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadImeTextSpans(UserType* output) {
    
    auto* pointer = data_->ime_text_spans.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::ui::mojom::ImeTextSpanDataView>>(
        pointer, output, message_);
  }
  inline void GetRangeDataView(
      ::gfx::mojom::RangeDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadRange(UserType* output) {
    
    auto* pointer = data_->range.Get();
    return mojo::internal::Deserialize<::gfx::mojom::RangeDataView>(
        pointer, output, message_);
  }
  int32_t start() const {
    return data_->start;
  }
  int32_t end() const {
    return data_->end;
  }
 private:
  internal::WidgetInputHandler_ImeSetComposition_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class WidgetInputHandler_ImeSetComposition_ResponseParamsDataView {
 public:
  WidgetInputHandler_ImeSetComposition_ResponseParamsDataView() = default;

  WidgetInputHandler_ImeSetComposition_ResponseParamsDataView(
      internal::WidgetInputHandler_ImeSetComposition_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::WidgetInputHandler_ImeSetComposition_ResponseParams_Data* data_ = nullptr;
};



class WidgetInputHandler_ImeCommitText_ParamsDataView {
 public:
  WidgetInputHandler_ImeCommitText_ParamsDataView() = default;

  WidgetInputHandler_ImeCommitText_ParamsDataView(
      internal::WidgetInputHandler_ImeCommitText_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetTextDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadText(UserType* output) {
    
    auto* pointer = data_->text.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, message_);
  }
  inline void GetImeTextSpansDataView(
      mojo::ArrayDataView<::ui::mojom::ImeTextSpanDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadImeTextSpans(UserType* output) {
    
    auto* pointer = data_->ime_text_spans.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::ui::mojom::ImeTextSpanDataView>>(
        pointer, output, message_);
  }
  inline void GetRangeDataView(
      ::gfx::mojom::RangeDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadRange(UserType* output) {
    
    auto* pointer = data_->range.Get();
    return mojo::internal::Deserialize<::gfx::mojom::RangeDataView>(
        pointer, output, message_);
  }
  int32_t relative_cursor_position() const {
    return data_->relative_cursor_position;
  }
 private:
  internal::WidgetInputHandler_ImeCommitText_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class WidgetInputHandler_ImeCommitText_ResponseParamsDataView {
 public:
  WidgetInputHandler_ImeCommitText_ResponseParamsDataView() = default;

  WidgetInputHandler_ImeCommitText_ResponseParamsDataView(
      internal::WidgetInputHandler_ImeCommitText_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::WidgetInputHandler_ImeCommitText_ResponseParams_Data* data_ = nullptr;
};



class WidgetInputHandler_ImeFinishComposingText_ParamsDataView {
 public:
  WidgetInputHandler_ImeFinishComposingText_ParamsDataView() = default;

  WidgetInputHandler_ImeFinishComposingText_ParamsDataView(
      internal::WidgetInputHandler_ImeFinishComposingText_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool keep_selection() const {
    return data_->keep_selection;
  }
 private:
  internal::WidgetInputHandler_ImeFinishComposingText_Params_Data* data_ = nullptr;
};



class WidgetInputHandler_RequestTextInputStateUpdate_ParamsDataView {
 public:
  WidgetInputHandler_RequestTextInputStateUpdate_ParamsDataView() = default;

  WidgetInputHandler_RequestTextInputStateUpdate_ParamsDataView(
      internal::WidgetInputHandler_RequestTextInputStateUpdate_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::WidgetInputHandler_RequestTextInputStateUpdate_Params_Data* data_ = nullptr;
};



class WidgetInputHandler_RequestCompositionUpdates_ParamsDataView {
 public:
  WidgetInputHandler_RequestCompositionUpdates_ParamsDataView() = default;

  WidgetInputHandler_RequestCompositionUpdates_ParamsDataView(
      internal::WidgetInputHandler_RequestCompositionUpdates_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool immediate_request() const {
    return data_->immediate_request;
  }
  bool monitor_request() const {
    return data_->monitor_request;
  }
 private:
  internal::WidgetInputHandler_RequestCompositionUpdates_Params_Data* data_ = nullptr;
};



class WidgetInputHandler_DispatchEvent_ParamsDataView {
 public:
  WidgetInputHandler_DispatchEvent_ParamsDataView() = default;

  WidgetInputHandler_DispatchEvent_ParamsDataView(
      internal::WidgetInputHandler_DispatchEvent_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetEventDataView(
      EventDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadEvent(UserType* output) {
    
    auto* pointer = data_->event.Get();
    return mojo::internal::Deserialize<::blink::mojom::EventDataView>(
        pointer, output, message_);
  }
 private:
  internal::WidgetInputHandler_DispatchEvent_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class WidgetInputHandler_DispatchEvent_ResponseParamsDataView {
 public:
  WidgetInputHandler_DispatchEvent_ResponseParamsDataView() = default;

  WidgetInputHandler_DispatchEvent_ResponseParamsDataView(
      internal::WidgetInputHandler_DispatchEvent_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadSource(UserType* output) const {
    auto data_value = data_->source;
    return mojo::internal::Deserialize<::blink::mojom::InputEventResultSource>(
        data_value, output);
  }
  ::blink::mojom::InputEventResultSource source() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::blink::mojom::InputEventResultSource>(data_->source));
  }
  inline void GetUpdatedLatencyDataView(
      ::ui::mojom::LatencyInfoDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadUpdatedLatency(UserType* output) {
    
    auto* pointer = data_->updated_latency.Get();
    return mojo::internal::Deserialize<::ui::mojom::LatencyInfoDataView>(
        pointer, output, message_);
  }
  template <typename UserType>
  [[nodiscard]] bool ReadState(UserType* output) const {
    auto data_value = data_->state;
    return mojo::internal::Deserialize<::blink::mojom::InputEventResultState>(
        data_value, output);
  }
  ::blink::mojom::InputEventResultState state() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::blink::mojom::InputEventResultState>(data_->state));
  }
  inline void GetOverscrollDataView(
      DidOverscrollParamsDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadOverscroll(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::blink::mojom::DidOverscrollParamsDataView, UserType>(),
    "Attempting to read the optional `overscroll` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadOverscroll` instead "
    "of `ReadOverscroll if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->overscroll.Get();
    return mojo::internal::Deserialize<::blink::mojom::DidOverscrollParamsDataView>(
        pointer, output, message_);
  }
  inline void GetTouchActionDataView(
      TouchActionOptionalDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadTouchAction(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::blink::mojom::TouchActionOptionalDataView, UserType>(),
    "Attempting to read the optional `touch_action` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadTouchAction` instead "
    "of `ReadTouchAction if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->touch_action.Get();
    return mojo::internal::Deserialize<::blink::mojom::TouchActionOptionalDataView>(
        pointer, output, message_);
  }
 private:
  internal::WidgetInputHandler_DispatchEvent_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class WidgetInputHandler_DispatchNonBlockingEvent_ParamsDataView {
 public:
  WidgetInputHandler_DispatchNonBlockingEvent_ParamsDataView() = default;

  WidgetInputHandler_DispatchNonBlockingEvent_ParamsDataView(
      internal::WidgetInputHandler_DispatchNonBlockingEvent_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetEventDataView(
      EventDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadEvent(UserType* output) {
    
    auto* pointer = data_->event.Get();
    return mojo::internal::Deserialize<::blink::mojom::EventDataView>(
        pointer, output, message_);
  }
 private:
  internal::WidgetInputHandler_DispatchNonBlockingEvent_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class WidgetInputHandler_WaitForInputProcessed_ParamsDataView {
 public:
  WidgetInputHandler_WaitForInputProcessed_ParamsDataView() = default;

  WidgetInputHandler_WaitForInputProcessed_ParamsDataView(
      internal::WidgetInputHandler_WaitForInputProcessed_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::WidgetInputHandler_WaitForInputProcessed_Params_Data* data_ = nullptr;
};



class WidgetInputHandler_WaitForInputProcessed_ResponseParamsDataView {
 public:
  WidgetInputHandler_WaitForInputProcessed_ResponseParamsDataView() = default;

  WidgetInputHandler_WaitForInputProcessed_ResponseParamsDataView(
      internal::WidgetInputHandler_WaitForInputProcessed_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::WidgetInputHandler_WaitForInputProcessed_ResponseParams_Data* data_ = nullptr;
};



class WidgetInputHandler_AttachSynchronousCompositor_ParamsDataView {
 public:
  WidgetInputHandler_AttachSynchronousCompositor_ParamsDataView() = default;

  WidgetInputHandler_AttachSynchronousCompositor_ParamsDataView(
      internal::WidgetInputHandler_AttachSynchronousCompositor_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeControlHost() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfacePtrDataView<::blink::mojom::SynchronousCompositorControlHostInterfaceBase>>(
            &data_->control_host, &result, message_);
    DCHECK(ret);
    return result;
  }
  template <typename UserType>
  UserType TakeHost() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<::blink::mojom::SynchronousCompositorHostAssociatedPtrInfoDataView>(
            &data_->host, &result, message_);
    DCHECK(ret);
    return result;
  }
  template <typename UserType>
  UserType TakeCompositorRequest() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<::blink::mojom::SynchronousCompositorAssociatedRequestDataView>(
            &data_->compositor_request, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::WidgetInputHandler_AttachSynchronousCompositor_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class WidgetInputHandler_GetFrameWidgetInputHandler_ParamsDataView {
 public:
  WidgetInputHandler_GetFrameWidgetInputHandler_ParamsDataView() = default;

  WidgetInputHandler_GetFrameWidgetInputHandler_ParamsDataView(
      internal::WidgetInputHandler_GetFrameWidgetInputHandler_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeInterfaceRequest() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<::blink::mojom::FrameWidgetInputHandlerAssociatedRequestDataView>(
            &data_->interface_request, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::WidgetInputHandler_GetFrameWidgetInputHandler_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};






inline void WidgetInputHandlerHost_DidOverscroll_ParamsDataView::GetParamsDataView(
    DidOverscrollParamsDataView* output) {
  auto pointer = data_->params.Get();
  *output = DidOverscrollParamsDataView(pointer, message_);
}






inline void WidgetInputHandlerHost_ImeCompositionRangeChanged_ParamsDataView::GetRangeDataView(
    ::gfx::mojom::RangeDataView* output) {
  auto pointer = data_->range.Get();
  *output = ::gfx::mojom::RangeDataView(pointer, message_);
}
inline void WidgetInputHandlerHost_ImeCompositionRangeChanged_ParamsDataView::GetBoundsDataView(
    mojo::ArrayDataView<::gfx::mojom::RectDataView>* output) {
  auto pointer = data_->bounds.Get();
  *output = mojo::ArrayDataView<::gfx::mojom::RectDataView>(pointer, message_);
}








inline void FrameWidgetInputHandler_AddImeTextSpansToExistingText_ParamsDataView::GetImeTextSpansDataView(
    mojo::ArrayDataView<::ui::mojom::ImeTextSpanDataView>* output) {
  auto pointer = data_->ime_text_spans.Get();
  *output = mojo::ArrayDataView<::ui::mojom::ImeTextSpanDataView>(pointer, message_);
}




inline void FrameWidgetInputHandler_SetCompositionFromExistingText_ParamsDataView::GetImeTextSpansDataView(
    mojo::ArrayDataView<::ui::mojom::ImeTextSpanDataView>* output) {
  auto pointer = data_->ime_text_spans.Get();
  *output = mojo::ArrayDataView<::ui::mojom::ImeTextSpanDataView>(pointer, message_);
}










inline void FrameWidgetInputHandler_HandleStylusWritingGestureAction_ParamsDataView::GetGestureDataDataView(
    ::blink::mojom::StylusWritingGestureDataDataView* output) {
  auto pointer = data_->gesture_data.Get();
  *output = ::blink::mojom::StylusWritingGestureDataDataView(pointer, message_);
}


inline void FrameWidgetInputHandler_ExecuteEditCommand_ParamsDataView::GetCommandDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->command.Get();
  *output = mojo::StringDataView(pointer, message_);
}
inline void FrameWidgetInputHandler_ExecuteEditCommand_ParamsDataView::GetValueDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->value.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, message_);
}






















inline void FrameWidgetInputHandler_Replace_ParamsDataView::GetWordDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->word.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, message_);
}


inline void FrameWidgetInputHandler_ReplaceMisspelling_ParamsDataView::GetWordDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->word.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, message_);
}


inline void FrameWidgetInputHandler_SelectRange_ParamsDataView::GetBaseDataView(
    ::gfx::mojom::PointDataView* output) {
  auto pointer = data_->base.Get();
  *output = ::gfx::mojom::PointDataView(pointer, message_);
}
inline void FrameWidgetInputHandler_SelectRange_ParamsDataView::GetExtentDataView(
    ::gfx::mojom::PointDataView* output) {
  auto pointer = data_->extent.Get();
  *output = ::gfx::mojom::PointDataView(pointer, message_);
}






inline void FrameWidgetInputHandler_SelectAroundCaret_ResponseParamsDataView::GetResultDataView(
    SelectAroundCaretResultDataView* output) {
  auto pointer = data_->result.Get();
  *output = SelectAroundCaretResultDataView(pointer, message_);
}


inline void FrameWidgetInputHandler_MoveRangeSelectionExtent_ParamsDataView::GetExtentDataView(
    ::gfx::mojom::PointDataView* output) {
  auto pointer = data_->extent.Get();
  *output = ::gfx::mojom::PointDataView(pointer, message_);
}








inline void FrameWidgetInputHandler_MoveCaret_ParamsDataView::GetPointDataView(
    ::gfx::mojom::PointDataView* output) {
  auto pointer = data_->point.Get();
  *output = ::gfx::mojom::PointDataView(pointer, message_);
}






inline void WidgetInputHandler_SetEditCommandsForNextKeyEvent_ParamsDataView::GetCommandsDataView(
    mojo::ArrayDataView<EditCommandDataView>* output) {
  auto pointer = data_->commands.Get();
  *output = mojo::ArrayDataView<EditCommandDataView>(pointer, message_);
}




inline void WidgetInputHandler_ImeSetComposition_ParamsDataView::GetTextDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->text.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, message_);
}
inline void WidgetInputHandler_ImeSetComposition_ParamsDataView::GetImeTextSpansDataView(
    mojo::ArrayDataView<::ui::mojom::ImeTextSpanDataView>* output) {
  auto pointer = data_->ime_text_spans.Get();
  *output = mojo::ArrayDataView<::ui::mojom::ImeTextSpanDataView>(pointer, message_);
}
inline void WidgetInputHandler_ImeSetComposition_ParamsDataView::GetRangeDataView(
    ::gfx::mojom::RangeDataView* output) {
  auto pointer = data_->range.Get();
  *output = ::gfx::mojom::RangeDataView(pointer, message_);
}




inline void WidgetInputHandler_ImeCommitText_ParamsDataView::GetTextDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->text.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, message_);
}
inline void WidgetInputHandler_ImeCommitText_ParamsDataView::GetImeTextSpansDataView(
    mojo::ArrayDataView<::ui::mojom::ImeTextSpanDataView>* output) {
  auto pointer = data_->ime_text_spans.Get();
  *output = mojo::ArrayDataView<::ui::mojom::ImeTextSpanDataView>(pointer, message_);
}
inline void WidgetInputHandler_ImeCommitText_ParamsDataView::GetRangeDataView(
    ::gfx::mojom::RangeDataView* output) {
  auto pointer = data_->range.Get();
  *output = ::gfx::mojom::RangeDataView(pointer, message_);
}










inline void WidgetInputHandler_DispatchEvent_ParamsDataView::GetEventDataView(
    EventDataView* output) {
  auto pointer = data_->event.Get();
  *output = EventDataView(pointer, message_);
}


inline void WidgetInputHandler_DispatchEvent_ResponseParamsDataView::GetUpdatedLatencyDataView(
    ::ui::mojom::LatencyInfoDataView* output) {
  auto pointer = data_->updated_latency.Get();
  *output = ::ui::mojom::LatencyInfoDataView(pointer, message_);
}
inline void WidgetInputHandler_DispatchEvent_ResponseParamsDataView::GetOverscrollDataView(
    DidOverscrollParamsDataView* output) {
  auto pointer = data_->overscroll.Get();
  *output = DidOverscrollParamsDataView(pointer, message_);
}
inline void WidgetInputHandler_DispatchEvent_ResponseParamsDataView::GetTouchActionDataView(
    TouchActionOptionalDataView* output) {
  auto pointer = data_->touch_action.Get();
  *output = TouchActionOptionalDataView(pointer, message_);
}


inline void WidgetInputHandler_DispatchNonBlockingEvent_ParamsDataView::GetEventDataView(
    EventDataView* output) {
  auto pointer = data_->event.Get();
  *output = EventDataView(pointer, message_);
}









}  // namespace mojom
}  // namespace blink

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_INPUT_INPUT_HANDLER_MOJOM_PARAMS_DATA_H_