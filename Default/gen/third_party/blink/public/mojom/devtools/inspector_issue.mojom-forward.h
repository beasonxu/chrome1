// third_party/blink/public/mojom/devtools/inspector_issue.mojom-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_DEVTOOLS_INSPECTOR_ISSUE_MOJOM_FORWARD_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_DEVTOOLS_INSPECTOR_ISSUE_MOJOM_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"




#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"






namespace blink {
namespace mojom {
class AffectedCookieDataView;

class AffectedRequestDataView;

class AffectedFrameDataView;

class AffectedLocationDataView;

class BlockedByResponseIssueDetailsDataView;

class HeavyAdIssueDetailsDataView;

class MixedContentIssueDetailsDataView;

class ContentSecurityPolicyIssueDetailsDataView;

class CookieIssueDetailsDataView;

class SharedArrayBufferIssueDetailsDataView;

class TrustedWebActivityIssueDetailsDataView;

class LowTextContrastIssueDataView;

class FederatedAuthRequestIssueDetailsDataView;

class GenericIssueDetailsDataView;

class InspectorIssueDetailsDataView;

class InspectorIssueInfoDataView;


enum class InspectorIssueCode : int32_t;

enum class HeavyAdResolutionStatus : int32_t;

enum class HeavyAdReason : int32_t;

enum class MixedContentResolutionStatus : int32_t;

enum class ContentSecurityPolicyViolationType : int32_t;

enum class CookieOperation : int32_t;

enum class CookieExclusionReason : int32_t;

enum class CookieWarningReason : int32_t;

enum class SharedArrayBufferIssueType : int32_t;

enum class TwaQualityEnforcementViolationType : int32_t;

enum class FederatedAuthRequestResult : int32_t;

enum class GenericIssueErrorType : int32_t;
class AffectedCookie;
using AffectedCookiePtr = mojo::InlinedStructPtr<AffectedCookie>;

class AffectedRequest;
using AffectedRequestPtr = mojo::InlinedStructPtr<AffectedRequest>;

class AffectedFrame;
using AffectedFramePtr = mojo::InlinedStructPtr<AffectedFrame>;

class AffectedLocation;
using AffectedLocationPtr = mojo::InlinedStructPtr<AffectedLocation>;

class BlockedByResponseIssueDetails;
using BlockedByResponseIssueDetailsPtr = mojo::StructPtr<BlockedByResponseIssueDetails>;

class HeavyAdIssueDetails;
using HeavyAdIssueDetailsPtr = mojo::StructPtr<HeavyAdIssueDetails>;

class MixedContentIssueDetails;
using MixedContentIssueDetailsPtr = mojo::StructPtr<MixedContentIssueDetails>;

class ContentSecurityPolicyIssueDetails;
using ContentSecurityPolicyIssueDetailsPtr = mojo::StructPtr<ContentSecurityPolicyIssueDetails>;

class CookieIssueDetails;
using CookieIssueDetailsPtr = mojo::StructPtr<CookieIssueDetails>;

class SharedArrayBufferIssueDetails;
using SharedArrayBufferIssueDetailsPtr = mojo::StructPtr<SharedArrayBufferIssueDetails>;

class TrustedWebActivityIssueDetails;
using TrustedWebActivityIssueDetailsPtr = mojo::StructPtr<TrustedWebActivityIssueDetails>;

class LowTextContrastIssue;
using LowTextContrastIssuePtr = mojo::StructPtr<LowTextContrastIssue>;

class FederatedAuthRequestIssueDetails;
using FederatedAuthRequestIssueDetailsPtr = mojo::InlinedStructPtr<FederatedAuthRequestIssueDetails>;

class GenericIssueDetails;
using GenericIssueDetailsPtr = mojo::InlinedStructPtr<GenericIssueDetails>;

class InspectorIssueDetails;
using InspectorIssueDetailsPtr = mojo::StructPtr<InspectorIssueDetails>;

class InspectorIssueInfo;
using InspectorIssueInfoPtr = mojo::StructPtr<InspectorIssueInfo>;




}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_DEVTOOLS_INSPECTOR_ISSUE_MOJOM_FORWARD_H_