// third_party/blink/public/mojom/service_worker/dispatch_fetch_event_params.mojom-lite-for-compile.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';

goog.require('mojo.internal');

goog.require('network.mojom.URLLoaderClient');
goog.require('blink.mojom.FetchAPIRequest');






goog.provide('blink.mojom.DispatchFetchEventParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.DispatchFetchEventParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    blink.mojom.DispatchFetchEventParamsSpec.$,
    'DispatchFetchEventParams',
    [
      mojo.internal.StructField(
        'request', 0,
        0,
        blink.mojom.FetchAPIRequestSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'clientId', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'preloadUrlLoaderClientReceiver', 16,
        0,
        mojo.internal.InterfaceRequest(network.mojom.URLLoaderClientPendingReceiver),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'isOfflineCapabilityCheck', 20,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 32],]);



goog.provide('blink.mojom.DispatchFetchEventParams');

/** @record */
blink.mojom.DispatchFetchEventParams = class {
  constructor() {
    /** @export { !blink.mojom.FetchAPIRequest } */
    this.request;
    /** @export { !string } */
    this.clientId;
    /** @export { (network.mojom.URLLoaderClientPendingReceiver|undefined) } */
    this.preloadUrlLoaderClientReceiver;
    /** @export { !boolean } */
    this.isOfflineCapabilityCheck;
  }
};


