// third_party/blink/public/mojom/service_worker/service_worker_registration_options.mojom-lite-for-compile.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';

goog.require('mojo.internal');

goog.require('blink.mojom.ScriptType');
goog.require('url.mojom.Url');




goog.provide('blink.mojom.ServiceWorkerUpdateViaCache');
goog.provide('blink.mojom.ServiceWorkerUpdateViaCacheSpec');
/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
blink.mojom.ServiceWorkerUpdateViaCacheSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
blink.mojom.ServiceWorkerUpdateViaCache = {
  
  kImports: 0,
  kAll: 1,
  kNone: 2,
  MIN_VALUE: 0,
  MAX_VALUE: 2,
};



goog.provide('blink.mojom.ServiceWorkerRegistrationOptionsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ServiceWorkerRegistrationOptionsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    blink.mojom.ServiceWorkerRegistrationOptionsSpec.$,
    'ServiceWorkerRegistrationOptions',
    [
      mojo.internal.StructField(
        'scope', 0,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'type', 8,
        0,
        blink.mojom.ScriptTypeSpec.$,
        blink.mojom.ScriptType.kClassic,
        false /* nullable */),
      mojo.internal.StructField(
        'updateViaCache', 12,
        0,
        blink.mojom.ServiceWorkerUpdateViaCacheSpec.$,
        blink.mojom.ServiceWorkerUpdateViaCache.kImports,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('blink.mojom.ServiceWorkerRegistrationOptions');

/** @record */
blink.mojom.ServiceWorkerRegistrationOptions = class {
  constructor() {
    /** @export { !url.mojom.Url } */
    this.scope;
    /** @export { !blink.mojom.ScriptType } */
    this.type;
    /** @export { !blink.mojom.ServiceWorkerUpdateViaCache } */
    this.updateViaCache;
  }
};


