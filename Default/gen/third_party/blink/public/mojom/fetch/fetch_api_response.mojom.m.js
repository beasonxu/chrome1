// third_party/blink/public/mojom/fetch/fetch_api_response.mojom.m.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import {mojo} from '../../../../../mojo/public/js/bindings.js';

import {
  Time as mojoBase_mojom_Time,
  TimeSpec as mojoBase_mojom_TimeSpec
} from '../../../../../mojo/public/mojom/base/time.mojom.m.js';

import {
  FetchResponseSource as network_mojom_FetchResponseSource,
  FetchResponseSourceSpec as network_mojom_FetchResponseSourceSpec,
  FetchResponseType as network_mojom_FetchResponseType,
  FetchResponseTypeSpec as network_mojom_FetchResponseTypeSpec
} from '../../../../../services/network/public/mojom/fetch_api.mojom.m.js';

import {
  AuthChallengeInfo as network_mojom_AuthChallengeInfo,
  AuthChallengeInfoSpec as network_mojom_AuthChallengeInfoSpec
} from '../../../../../services/network/public/mojom/network_param.mojom.m.js';

import {
  ConnectionInfo as network_mojom_ConnectionInfo,
  ConnectionInfoSpec as network_mojom_ConnectionInfoSpec
} from '../../../../../services/network/public/mojom/network_types.mojom.m.js';

import {
  ParsedHeaders as network_mojom_ParsedHeaders,
  ParsedHeadersSpec as network_mojom_ParsedHeadersSpec
} from '../../../../../services/network/public/mojom/parsed_headers.mojom.m.js';

import {
  Url as url_mojom_Url,
  UrlSpec as url_mojom_UrlSpec
} from '../../../../../url/mojom/url.mojom.m.js';

import {
  SerializedBlob as blink_mojom_SerializedBlob,
  SerializedBlobSpec as blink_mojom_SerializedBlobSpec
} from '../blob/serialized_blob.mojom.m.js';

import {
  ServiceWorkerResponseError as blink_mojom_ServiceWorkerResponseError,
  ServiceWorkerResponseErrorSpec as blink_mojom_ServiceWorkerResponseErrorSpec
} from '../service_worker/service_worker_error_type.mojom.m.js';



/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const FetchAPIResponseSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    FetchAPIResponseSpec.$,
    'FetchAPIResponse',
    [
      mojo.internal.StructField(
        'urlList', 0,
        0,
        mojo.internal.Array(url_mojom_UrlSpec.$, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'statusCode', 8,
        0,
        mojo.internal.Uint16,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'statusText', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'responseType', 12,
        0,
        network_mojom_FetchResponseTypeSpec.$,
        network_mojom_FetchResponseType.kDefault,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'padding', 24,
        0,
        mojo.internal.Int64,
        BigInt('0'),
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'responseSource', 32,
        0,
        network_mojom_FetchResponseSourceSpec.$,
        network_mojom_FetchResponseSource.kUnspecified,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'headers', 40,
        0,
        mojo.internal.Map(mojo.internal.String, mojo.internal.String, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'mimeType', 48,
        0,
        mojo.internal.String,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'requestMethod', 56,
        0,
        mojo.internal.String,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'blob', 64,
        0,
        blink_mojom_SerializedBlobSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'error', 36,
        0,
        blink_mojom_ServiceWorkerResponseErrorSpec.$,
        blink_mojom_ServiceWorkerResponseError.kUnknown,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'responseTime', 72,
        0,
        mojoBase_mojom_TimeSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'cacheStorageCacheName', 80,
        0,
        mojo.internal.String,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'corsExposedHeaderNames', 88,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'sideDataBlob', 96,
        0,
        blink_mojom_SerializedBlobSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'sideDataBlobForCachePut', 104,
        0,
        blink_mojom_SerializedBlobSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'parsedHeaders', 112,
        0,
        network_mojom_ParsedHeadersSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'connectionInfo', 120,
        0,
        network_mojom_ConnectionInfoSpec.$,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'alpnNegotiatedProtocol', 128,
        0,
        mojo.internal.String,
        "unknown",
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'wasFetchedViaSpdy', 10,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'hasRangeRequested', 10,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'authChallengeInfo', 136,
        0,
        network_mojom_AuthChallengeInfoSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'requestIncludeCredentials', 10,
        2,
        mojo.internal.Bool,
        true,
        false /* nullable */,
        0),
    ],
    [[0, 152],]);



/**
 * @record
 */
export class FetchAPIResponse {
  constructor() {
    /** @type { !Array<!url_mojom_Url> } */
    this.urlList;
    /** @type { !number } */
    this.statusCode;
    /** @type { !boolean } */
    this.wasFetchedViaSpdy;
    /** @type { !boolean } */
    this.hasRangeRequested;
    /** @type { !boolean } */
    this.requestIncludeCredentials;
    /** @type { !network_mojom_FetchResponseType } */
    this.responseType;
    /** @type { !string } */
    this.statusText;
    /** @type { !bigint } */
    this.padding;
    /** @type { !network_mojom_FetchResponseSource } */
    this.responseSource;
    /** @type { !blink_mojom_ServiceWorkerResponseError } */
    this.error;
    /** @type { !Object<!string, !string> } */
    this.headers;
    /** @type { (string|undefined) } */
    this.mimeType;
    /** @type { (string|undefined) } */
    this.requestMethod;
    /** @type { (blink_mojom_SerializedBlob|undefined) } */
    this.blob;
    /** @type { !mojoBase_mojom_Time } */
    this.responseTime;
    /** @type { (string|undefined) } */
    this.cacheStorageCacheName;
    /** @type { !Array<!string> } */
    this.corsExposedHeaderNames;
    /** @type { (blink_mojom_SerializedBlob|undefined) } */
    this.sideDataBlob;
    /** @type { (blink_mojom_SerializedBlob|undefined) } */
    this.sideDataBlobForCachePut;
    /** @type { (network_mojom_ParsedHeaders|undefined) } */
    this.parsedHeaders;
    /** @type { !network_mojom_ConnectionInfo } */
    this.connectionInfo;
    /** @type { !string } */
    this.alpnNegotiatedProtocol;
    /** @type { (network_mojom_AuthChallengeInfo|undefined) } */
    this.authChallengeInfo;
  }
}

