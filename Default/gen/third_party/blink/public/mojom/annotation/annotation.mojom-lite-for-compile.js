// third_party/blink/public/mojom/annotation/annotation.mojom-lite-for-compile.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';

goog.require('mojo.internal');
goog.require('mojo.internal.interfaceSupport');

goog.require('gfx.mojom.Rect');
goog.require('mojoBase.mojom.String16');




goog.provide('blink.mojom.AnnotationType');
goog.provide('blink.mojom.AnnotationTypeSpec');
/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
blink.mojom.AnnotationTypeSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
blink.mojom.AnnotationType = {
  
  kSharedHighlight: 0,
  kUserNote: 1,
  MIN_VALUE: 0,
  MAX_VALUE: 1,
};



goog.provide('blink.mojom.AnnotationAgent');
goog.provide('blink.mojom.AnnotationAgentReceiver');
goog.provide('blink.mojom.AnnotationAgentCallbackRouter');
goog.provide('blink.mojom.AnnotationAgentInterface');
goog.provide('blink.mojom.AnnotationAgentRemote');
goog.provide('blink.mojom.AnnotationAgentPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
blink.mojom.AnnotationAgentPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        blink.mojom.AnnotationAgent.$interfaceName,
        scope);
  }
};

/** @interface */
blink.mojom.AnnotationAgentInterface = class {
  
  /**
   */

  scrollIntoView() {}
};

/**
 * @export
 * @implements { blink.mojom.AnnotationAgentInterface }
 */
blink.mojom.AnnotationAgentRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!blink.mojom.AnnotationAgentPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          blink.mojom.AnnotationAgentPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!blink.mojom.AnnotationAgentPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   */

  scrollIntoView() {
    this.proxy.sendMessage(
        0,
        blink.mojom.AnnotationAgent_ScrollIntoView_ParamsSpec.$,
        null,
        [
        ]);
  }
};

/**
 * An object which receives request messages for the AnnotationAgent
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
blink.mojom.AnnotationAgentReceiver = class {
  /**
   * @param {!blink.mojom.AnnotationAgentInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!blink.mojom.AnnotationAgentRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        blink.mojom.AnnotationAgentRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!blink.mojom.AnnotationAgentRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        blink.mojom.AnnotationAgent_ScrollIntoView_ParamsSpec.$,
        null,
        impl.scrollIntoView.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
blink.mojom.AnnotationAgent = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "blink.mojom.AnnotationAgent";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!blink.mojom.AnnotationAgentRemote}
   * @export
   */
  static getRemote() {
    let remote = new blink.mojom.AnnotationAgentRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the AnnotationAgent
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
blink.mojom.AnnotationAgentCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      blink.mojom.AnnotationAgentRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!blink.mojom.AnnotationAgentRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.scrollIntoView =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        blink.mojom.AnnotationAgent_ScrollIntoView_ParamsSpec.$,
        null,
        this.scrollIntoView.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('blink.mojom.AnnotationAgentHost');
goog.provide('blink.mojom.AnnotationAgentHostReceiver');
goog.provide('blink.mojom.AnnotationAgentHostCallbackRouter');
goog.provide('blink.mojom.AnnotationAgentHostInterface');
goog.provide('blink.mojom.AnnotationAgentHostRemote');
goog.provide('blink.mojom.AnnotationAgentHostPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
blink.mojom.AnnotationAgentHostPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        blink.mojom.AnnotationAgentHost.$interfaceName,
        scope);
  }
};

/** @interface */
blink.mojom.AnnotationAgentHostInterface = class {
  
  /**
   * @param { !gfx.mojom.Rect } documentRelativeRect
   */

  didFinishAttachment(documentRelativeRect) {}
};

/**
 * @export
 * @implements { blink.mojom.AnnotationAgentHostInterface }
 */
blink.mojom.AnnotationAgentHostRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!blink.mojom.AnnotationAgentHostPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          blink.mojom.AnnotationAgentHostPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!blink.mojom.AnnotationAgentHostPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !gfx.mojom.Rect } documentRelativeRect
   */

  didFinishAttachment(
      documentRelativeRect) {
    this.proxy.sendMessage(
        0,
        blink.mojom.AnnotationAgentHost_DidFinishAttachment_ParamsSpec.$,
        null,
        [
          documentRelativeRect
        ]);
  }
};

/**
 * An object which receives request messages for the AnnotationAgentHost
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
blink.mojom.AnnotationAgentHostReceiver = class {
  /**
   * @param {!blink.mojom.AnnotationAgentHostInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!blink.mojom.AnnotationAgentHostRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        blink.mojom.AnnotationAgentHostRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!blink.mojom.AnnotationAgentHostRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        blink.mojom.AnnotationAgentHost_DidFinishAttachment_ParamsSpec.$,
        null,
        impl.didFinishAttachment.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
blink.mojom.AnnotationAgentHost = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "blink.mojom.AnnotationAgentHost";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!blink.mojom.AnnotationAgentHostRemote}
   * @export
   */
  static getRemote() {
    let remote = new blink.mojom.AnnotationAgentHostRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the AnnotationAgentHost
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
blink.mojom.AnnotationAgentHostCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      blink.mojom.AnnotationAgentHostRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!blink.mojom.AnnotationAgentHostRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.didFinishAttachment =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        blink.mojom.AnnotationAgentHost_DidFinishAttachment_ParamsSpec.$,
        null,
        this.didFinishAttachment.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('blink.mojom.AnnotationAgentContainer');
goog.provide('blink.mojom.AnnotationAgentContainerReceiver');
goog.provide('blink.mojom.AnnotationAgentContainerCallbackRouter');
goog.provide('blink.mojom.AnnotationAgentContainerInterface');
goog.provide('blink.mojom.AnnotationAgentContainerRemote');
goog.provide('blink.mojom.AnnotationAgentContainerPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
blink.mojom.AnnotationAgentContainerPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        blink.mojom.AnnotationAgentContainer.$interfaceName,
        scope);
  }
};

/** @interface */
blink.mojom.AnnotationAgentContainerInterface = class {
  
  /**
   * @param { !blink.mojom.AnnotationAgentHostRemote } hostRemote
   * @param { !blink.mojom.AnnotationAgentPendingReceiver } agentReceiver
   * @param { !blink.mojom.AnnotationType } type
   * @param { !string } serializedSelector
   */

  createAgent(hostRemote, agentReceiver, type, serializedSelector) {}
  
  /**
   * @param { !blink.mojom.AnnotationType } type
   * @return {!Promise<{
        hostReceiver: ?blink.mojom.AnnotationAgentHostPendingReceiver,
        agentRemote: ?blink.mojom.AnnotationAgentRemote,
        serializedSelector: !string,
        selectedText: !mojoBase.mojom.String16,
   *  }>}
   */

  createAgentFromSelection(type) {}
};

/**
 * @export
 * @implements { blink.mojom.AnnotationAgentContainerInterface }
 */
blink.mojom.AnnotationAgentContainerRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!blink.mojom.AnnotationAgentContainerPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          blink.mojom.AnnotationAgentContainerPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!blink.mojom.AnnotationAgentContainerPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !blink.mojom.AnnotationAgentHostRemote } hostRemote
   * @param { !blink.mojom.AnnotationAgentPendingReceiver } agentReceiver
   * @param { !blink.mojom.AnnotationType } type
   * @param { !string } serializedSelector
   */

  createAgent(
      hostRemote,
      agentReceiver,
      type,
      serializedSelector) {
    this.proxy.sendMessage(
        0,
        blink.mojom.AnnotationAgentContainer_CreateAgent_ParamsSpec.$,
        null,
        [
          hostRemote,
          agentReceiver,
          type,
          serializedSelector
        ]);
  }

  
  /**
   * @param { !blink.mojom.AnnotationType } type
   * @return {!Promise<{
        hostReceiver: ?blink.mojom.AnnotationAgentHostPendingReceiver,
        agentRemote: ?blink.mojom.AnnotationAgentRemote,
        serializedSelector: !string,
        selectedText: !mojoBase.mojom.String16,
   *  }>}
   */

  createAgentFromSelection(
      type) {
    return this.proxy.sendMessage(
        1,
        blink.mojom.AnnotationAgentContainer_CreateAgentFromSelection_ParamsSpec.$,
        blink.mojom.AnnotationAgentContainer_CreateAgentFromSelection_ResponseParamsSpec.$,
        [
          type
        ]);
  }
};

/**
 * An object which receives request messages for the AnnotationAgentContainer
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
blink.mojom.AnnotationAgentContainerReceiver = class {
  /**
   * @param {!blink.mojom.AnnotationAgentContainerInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!blink.mojom.AnnotationAgentContainerRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        blink.mojom.AnnotationAgentContainerRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!blink.mojom.AnnotationAgentContainerRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        blink.mojom.AnnotationAgentContainer_CreateAgent_ParamsSpec.$,
        null,
        impl.createAgent.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        blink.mojom.AnnotationAgentContainer_CreateAgentFromSelection_ParamsSpec.$,
        blink.mojom.AnnotationAgentContainer_CreateAgentFromSelection_ResponseParamsSpec.$,
        impl.createAgentFromSelection.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
blink.mojom.AnnotationAgentContainer = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "blink.mojom.AnnotationAgentContainer";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!blink.mojom.AnnotationAgentContainerRemote}
   * @export
   */
  static getRemote() {
    let remote = new blink.mojom.AnnotationAgentContainerRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the AnnotationAgentContainer
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
blink.mojom.AnnotationAgentContainerCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      blink.mojom.AnnotationAgentContainerRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!blink.mojom.AnnotationAgentContainerRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createAgent =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        blink.mojom.AnnotationAgentContainer_CreateAgent_ParamsSpec.$,
        null,
        this.createAgent.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createAgentFromSelection =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        blink.mojom.AnnotationAgentContainer_CreateAgentFromSelection_ParamsSpec.$,
        blink.mojom.AnnotationAgentContainer_CreateAgentFromSelection_ResponseParamsSpec.$,
        this.createAgentFromSelection.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('blink.mojom.AnnotationAgent_ScrollIntoView_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.AnnotationAgent_ScrollIntoView_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.AnnotationAgentHost_DidFinishAttachment_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.AnnotationAgentHost_DidFinishAttachment_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.AnnotationAgentContainer_CreateAgent_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.AnnotationAgentContainer_CreateAgent_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.AnnotationAgentContainer_CreateAgentFromSelection_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.AnnotationAgentContainer_CreateAgentFromSelection_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.AnnotationAgentContainer_CreateAgentFromSelection_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.AnnotationAgentContainer_CreateAgentFromSelection_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    blink.mojom.AnnotationAgent_ScrollIntoView_ParamsSpec.$,
    'AnnotationAgent_ScrollIntoView_Params',
    [
    ],
    [[0, 8],]);



goog.provide('blink.mojom.AnnotationAgent_ScrollIntoView_Params');

/** @record */
blink.mojom.AnnotationAgent_ScrollIntoView_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    blink.mojom.AnnotationAgentHost_DidFinishAttachment_ParamsSpec.$,
    'AnnotationAgentHost_DidFinishAttachment_Params',
    [
      mojo.internal.StructField(
        'documentRelativeRect', 0,
        0,
        gfx.mojom.RectSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('blink.mojom.AnnotationAgentHost_DidFinishAttachment_Params');

/** @record */
blink.mojom.AnnotationAgentHost_DidFinishAttachment_Params = class {
  constructor() {
    /** @export { !gfx.mojom.Rect } */
    this.documentRelativeRect;
  }
};




mojo.internal.Struct(
    blink.mojom.AnnotationAgentContainer_CreateAgent_ParamsSpec.$,
    'AnnotationAgentContainer_CreateAgent_Params',
    [
      mojo.internal.StructField(
        'hostRemote', 0,
        0,
        mojo.internal.InterfaceProxy(blink.mojom.AnnotationAgentHostRemote),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'agentReceiver', 8,
        0,
        mojo.internal.InterfaceRequest(blink.mojom.AnnotationAgentPendingReceiver),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'type', 12,
        0,
        blink.mojom.AnnotationTypeSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'serializedSelector', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ],
    [[0, 32],]);



goog.provide('blink.mojom.AnnotationAgentContainer_CreateAgent_Params');

/** @record */
blink.mojom.AnnotationAgentContainer_CreateAgent_Params = class {
  constructor() {
    /** @export { !blink.mojom.AnnotationAgentHostRemote } */
    this.hostRemote;
    /** @export { !blink.mojom.AnnotationAgentPendingReceiver } */
    this.agentReceiver;
    /** @export { !blink.mojom.AnnotationType } */
    this.type;
    /** @export { !string } */
    this.serializedSelector;
  }
};




mojo.internal.Struct(
    blink.mojom.AnnotationAgentContainer_CreateAgentFromSelection_ParamsSpec.$,
    'AnnotationAgentContainer_CreateAgentFromSelection_Params',
    [
      mojo.internal.StructField(
        'type', 0,
        0,
        blink.mojom.AnnotationTypeSpec.$,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('blink.mojom.AnnotationAgentContainer_CreateAgentFromSelection_Params');

/** @record */
blink.mojom.AnnotationAgentContainer_CreateAgentFromSelection_Params = class {
  constructor() {
    /** @export { !blink.mojom.AnnotationType } */
    this.type;
  }
};




mojo.internal.Struct(
    blink.mojom.AnnotationAgentContainer_CreateAgentFromSelection_ResponseParamsSpec.$,
    'AnnotationAgentContainer_CreateAgentFromSelection_ResponseParams',
    [
      mojo.internal.StructField(
        'hostReceiver', 0,
        0,
        mojo.internal.InterfaceRequest(blink.mojom.AnnotationAgentHostPendingReceiver),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'agentRemote', 4,
        0,
        mojo.internal.InterfaceProxy(blink.mojom.AnnotationAgentRemote),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'serializedSelector', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'selectedText', 24,
        0,
        mojoBase.mojom.String16Spec.$,
        null,
        false /* nullable */),
    ],
    [[0, 40],]);



goog.provide('blink.mojom.AnnotationAgentContainer_CreateAgentFromSelection_ResponseParams');

/** @record */
blink.mojom.AnnotationAgentContainer_CreateAgentFromSelection_ResponseParams = class {
  constructor() {
    /** @export { (blink.mojom.AnnotationAgentHostPendingReceiver|undefined) } */
    this.hostReceiver;
    /** @export { (blink.mojom.AnnotationAgentRemote|undefined) } */
    this.agentRemote;
    /** @export { !string } */
    this.serializedSelector;
    /** @export { !mojoBase.mojom.String16 } */
    this.selectedText;
  }
};


