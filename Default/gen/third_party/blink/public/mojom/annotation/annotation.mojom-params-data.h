// third_party/blink/public/mojom/annotation/annotation.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_ANNOTATION_ANNOTATION_MOJOM_PARAMS_DATA_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_ANNOTATION_ANNOTATION_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace blink {
namespace mojom {
namespace internal {

class ValidationContext;
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) AnnotationAgent_ScrollIntoView_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<AnnotationAgent_ScrollIntoView_Params_Data>;

  AnnotationAgent_ScrollIntoView_Params_Data();
  ~AnnotationAgent_ScrollIntoView_Params_Data() = delete;
};
static_assert(sizeof(AnnotationAgent_ScrollIntoView_Params_Data) == 8,
              "Bad sizeof(AnnotationAgent_ScrollIntoView_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) AnnotationAgentHost_DidFinishAttachment_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::gfx::mojom::internal::Rect_Data> document_relative_rect;

 private:
  friend class mojo::internal::MessageFragment<AnnotationAgentHost_DidFinishAttachment_Params_Data>;

  AnnotationAgentHost_DidFinishAttachment_Params_Data();
  ~AnnotationAgentHost_DidFinishAttachment_Params_Data() = delete;
};
static_assert(sizeof(AnnotationAgentHost_DidFinishAttachment_Params_Data) == 16,
              "Bad sizeof(AnnotationAgentHost_DidFinishAttachment_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) AnnotationAgentContainer_CreateAgent_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Interface_Data host_remote;
  mojo::internal::Handle_Data agent_receiver;
  int32_t type;
  mojo::internal::Pointer<mojo::internal::String_Data> serialized_selector;

 private:
  friend class mojo::internal::MessageFragment<AnnotationAgentContainer_CreateAgent_Params_Data>;

  AnnotationAgentContainer_CreateAgent_Params_Data();
  ~AnnotationAgentContainer_CreateAgent_Params_Data() = delete;
};
static_assert(sizeof(AnnotationAgentContainer_CreateAgent_Params_Data) == 32,
              "Bad sizeof(AnnotationAgentContainer_CreateAgent_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) AnnotationAgentContainer_CreateAgentFromSelection_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t type;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<AnnotationAgentContainer_CreateAgentFromSelection_Params_Data>;

  AnnotationAgentContainer_CreateAgentFromSelection_Params_Data();
  ~AnnotationAgentContainer_CreateAgentFromSelection_Params_Data() = delete;
};
static_assert(sizeof(AnnotationAgentContainer_CreateAgentFromSelection_Params_Data) == 16,
              "Bad sizeof(AnnotationAgentContainer_CreateAgentFromSelection_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) AnnotationAgentContainer_CreateAgentFromSelection_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Handle_Data host_receiver;
  mojo::internal::Interface_Data agent_remote;
  uint8_t pad1_[4];
  mojo::internal::Pointer<mojo::internal::String_Data> serialized_selector;
  mojo::internal::Pointer<::mojo_base::mojom::internal::String16_Data> selected_text;

 private:
  friend class mojo::internal::MessageFragment<AnnotationAgentContainer_CreateAgentFromSelection_ResponseParams_Data>;

  AnnotationAgentContainer_CreateAgentFromSelection_ResponseParams_Data();
  ~AnnotationAgentContainer_CreateAgentFromSelection_ResponseParams_Data() = delete;
};
static_assert(sizeof(AnnotationAgentContainer_CreateAgentFromSelection_ResponseParams_Data) == 40,
              "Bad sizeof(AnnotationAgentContainer_CreateAgentFromSelection_ResponseParams_Data)");

}  // namespace internal


class AnnotationAgent_ScrollIntoView_ParamsDataView {
 public:
  AnnotationAgent_ScrollIntoView_ParamsDataView() = default;

  AnnotationAgent_ScrollIntoView_ParamsDataView(
      internal::AnnotationAgent_ScrollIntoView_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::AnnotationAgent_ScrollIntoView_Params_Data* data_ = nullptr;
};



class AnnotationAgentHost_DidFinishAttachment_ParamsDataView {
 public:
  AnnotationAgentHost_DidFinishAttachment_ParamsDataView() = default;

  AnnotationAgentHost_DidFinishAttachment_ParamsDataView(
      internal::AnnotationAgentHost_DidFinishAttachment_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetDocumentRelativeRectDataView(
      ::gfx::mojom::RectDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadDocumentRelativeRect(UserType* output) {
    
    auto* pointer = data_->document_relative_rect.Get();
    return mojo::internal::Deserialize<::gfx::mojom::RectDataView>(
        pointer, output, message_);
  }
 private:
  internal::AnnotationAgentHost_DidFinishAttachment_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AnnotationAgentContainer_CreateAgent_ParamsDataView {
 public:
  AnnotationAgentContainer_CreateAgent_ParamsDataView() = default;

  AnnotationAgentContainer_CreateAgent_ParamsDataView(
      internal::AnnotationAgentContainer_CreateAgent_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeHostRemote() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfacePtrDataView<::blink::mojom::AnnotationAgentHostInterfaceBase>>(
            &data_->host_remote, &result, message_);
    DCHECK(ret);
    return result;
  }
  template <typename UserType>
  UserType TakeAgentReceiver() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfaceRequestDataView<::blink::mojom::AnnotationAgentInterfaceBase>>(
            &data_->agent_receiver, &result, message_);
    DCHECK(ret);
    return result;
  }
  template <typename UserType>
  [[nodiscard]] bool ReadType(UserType* output) const {
    auto data_value = data_->type;
    return mojo::internal::Deserialize<::blink::mojom::AnnotationType>(
        data_value, output);
  }
  AnnotationType type() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::blink::mojom::AnnotationType>(data_->type));
  }
  inline void GetSerializedSelectorDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadSerializedSelector(UserType* output) {
    
    auto* pointer = data_->serialized_selector.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::AnnotationAgentContainer_CreateAgent_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AnnotationAgentContainer_CreateAgentFromSelection_ParamsDataView {
 public:
  AnnotationAgentContainer_CreateAgentFromSelection_ParamsDataView() = default;

  AnnotationAgentContainer_CreateAgentFromSelection_ParamsDataView(
      internal::AnnotationAgentContainer_CreateAgentFromSelection_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadType(UserType* output) const {
    auto data_value = data_->type;
    return mojo::internal::Deserialize<::blink::mojom::AnnotationType>(
        data_value, output);
  }
  AnnotationType type() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::blink::mojom::AnnotationType>(data_->type));
  }
 private:
  internal::AnnotationAgentContainer_CreateAgentFromSelection_Params_Data* data_ = nullptr;
};



class AnnotationAgentContainer_CreateAgentFromSelection_ResponseParamsDataView {
 public:
  AnnotationAgentContainer_CreateAgentFromSelection_ResponseParamsDataView() = default;

  AnnotationAgentContainer_CreateAgentFromSelection_ResponseParamsDataView(
      internal::AnnotationAgentContainer_CreateAgentFromSelection_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeHostReceiver() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfaceRequestDataView<::blink::mojom::AnnotationAgentHostInterfaceBase>>(
            &data_->host_receiver, &result, message_);
    DCHECK(ret);
    return result;
  }
  template <typename UserType>
  UserType TakeAgentRemote() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfacePtrDataView<::blink::mojom::AnnotationAgentInterfaceBase>>(
            &data_->agent_remote, &result, message_);
    DCHECK(ret);
    return result;
  }
  inline void GetSerializedSelectorDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadSerializedSelector(UserType* output) {
    
    auto* pointer = data_->serialized_selector.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  inline void GetSelectedTextDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadSelectedText(UserType* output) {
    
    auto* pointer = data_->selected_text.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, message_);
  }
 private:
  internal::AnnotationAgentContainer_CreateAgentFromSelection_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};




inline void AnnotationAgentHost_DidFinishAttachment_ParamsDataView::GetDocumentRelativeRectDataView(
    ::gfx::mojom::RectDataView* output) {
  auto pointer = data_->document_relative_rect.Get();
  *output = ::gfx::mojom::RectDataView(pointer, message_);
}


inline void AnnotationAgentContainer_CreateAgent_ParamsDataView::GetSerializedSelectorDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->serialized_selector.Get();
  *output = mojo::StringDataView(pointer, message_);
}




inline void AnnotationAgentContainer_CreateAgentFromSelection_ResponseParamsDataView::GetSerializedSelectorDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->serialized_selector.Get();
  *output = mojo::StringDataView(pointer, message_);
}
inline void AnnotationAgentContainer_CreateAgentFromSelection_ResponseParamsDataView::GetSelectedTextDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->selected_text.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, message_);
}

}  // namespace mojom
}  // namespace blink

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_ANNOTATION_ANNOTATION_MOJOM_PARAMS_DATA_H_