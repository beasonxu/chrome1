// third_party/blink/public/mojom/webauthn/authenticator.mojom.m.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import {mojo} from '../../../../../mojo/public/js/bindings.js';

import {
  PaymentCurrencyAmount as payments_mojom_PaymentCurrencyAmount,
  PaymentCurrencyAmountSpec as payments_mojom_PaymentCurrencyAmountSpec
} from '../../../../../components/payments/mojom/payment_request_data.mojom.m.js';

import {
  TimeDelta as mojoBase_mojom_TimeDelta,
  TimeDeltaSpec as mojoBase_mojom_TimeDeltaSpec
} from '../../../../../mojo/public/mojom/base/time.mojom.m.js';

import {
  Origin as url_mojom_Origin,
  OriginSpec as url_mojom_OriginSpec
} from '../../../../../url/mojom/origin.mojom.m.js';

import {
  Url as url_mojom_Url,
  UrlSpec as url_mojom_UrlSpec
} from '../../../../../url/mojom/url.mojom.m.js';


/**
 * @const { !number }
 */
export const PUBLIC_KEY_CREDENTIAL_DESCRIPTOR_LIST_MAX_SIZE = 64;


/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const AuthenticatorStatusSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 */
export const AuthenticatorStatus = {
  
  SUCCESS: 0,
  PENDING_REQUEST: 1,
  NOT_ALLOWED_ERROR: 2,
  INVALID_DOMAIN: 3,
  INVALID_ICON_URL: 4,
  CREDENTIAL_EXCLUDED: 5,
  NOT_IMPLEMENTED: 6,
  NOT_FOCUSED: 7,
  RESIDENT_CREDENTIALS_UNSUPPORTED: 8,
  USER_VERIFICATION_UNSUPPORTED: 9,
  ALGORITHM_UNSUPPORTED: 10,
  EMPTY_ALLOW_CREDENTIALS: 11,
  ANDROID_NOT_SUPPORTED_ERROR: 12,
  PROTECTION_POLICY_INCONSISTENT: 13,
  ABORT_ERROR: 14,
  OPAQUE_DOMAIN: 15,
  INVALID_PROTOCOL: 16,
  BAD_RELYING_PARTY_ID: 17,
  CANNOT_READ_AND_WRITE_LARGE_BLOB: 18,
  INVALID_ALLOW_CREDENTIALS_FOR_LARGE_BLOB: 19,
  FAILED_TO_SAVE_CREDENTIAL_ID_FOR_PAYMENT_EXTENSION: 20,
  REMOTE_DESKTOP_CLIENT_OVERRIDE_NOT_AUTHORIZED: 21,
  ERROR_WITH_DOM_EXCEPTION_DETAILS: 22,
  UNKNOWN_ERROR: 23,
  MIN_VALUE: 0,
  MAX_VALUE: 23,
};

/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const AuthenticatorTransportSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 */
export const AuthenticatorTransport = {
  
  USB: 0,
  NFC: 1,
  BLE: 2,
  CABLE: 3,
  INTERNAL: 4,
  MIN_VALUE: 0,
  MAX_VALUE: 4,
};

/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const UserVerificationRequirementSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 */
export const UserVerificationRequirement = {
  
  REQUIRED: 0,
  PREFERRED: 1,
  DISCOURAGED: 2,
  MIN_VALUE: 0,
  MAX_VALUE: 2,
};

/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const AttestationConveyancePreferenceSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 */
export const AttestationConveyancePreference = {
  
  NONE: 0,
  INDIRECT: 1,
  DIRECT: 2,
  ENTERPRISE: 3,
  MIN_VALUE: 0,
  MAX_VALUE: 3,
};

/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const ResidentKeyRequirementSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 */
export const ResidentKeyRequirement = {
  
  DISCOURAGED: 0,
  PREFERRED: 1,
  REQUIRED: 2,
  MIN_VALUE: 0,
  MAX_VALUE: 2,
};

/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const AuthenticatorAttachmentSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 */
export const AuthenticatorAttachment = {
  
  NO_PREFERENCE: 0,
  PLATFORM: 1,
  CROSS_PLATFORM: 2,
  MIN_VALUE: 0,
  MAX_VALUE: 2,
};

/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const ProtectionPolicySpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 */
export const ProtectionPolicy = {
  
  UNSPECIFIED: 0,
  NONE: 1,
  UV_OR_CRED_ID_REQUIRED: 2,
  UV_REQUIRED: 3,
  MIN_VALUE: 0,
  MAX_VALUE: 3,
};

/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const LargeBlobSupportSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 */
export const LargeBlobSupport = {
  
  NOT_REQUESTED: 0,
  REQUIRED: 1,
  PREFERRED: 2,
  MIN_VALUE: 0,
  MAX_VALUE: 2,
};

/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const PublicKeyCredentialTypeSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 */
export const PublicKeyCredentialType = {
  
  PUBLIC_KEY: 0,
  MIN_VALUE: 0,
  MAX_VALUE: 0,
};



/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export class AuthenticatorPendingReceiver {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle, 'blink.mojom.Authenticator', scope);
  }
}

/** @interface */
export class AuthenticatorInterface {
  
  /**
   * @param { !PublicKeyCredentialCreationOptions } options
   * @return {!Promise<{
        status: !AuthenticatorStatus,
        credential: ?MakeCredentialAuthenticatorResponse,
        domExceptionDetails: ?WebAuthnDOMExceptionDetails,
   *  }>}
   */

  makeCredential(options) {}
  
  /**
   * @param { !PublicKeyCredentialRequestOptions } options
   * @return {!Promise<{
        status: !AuthenticatorStatus,
        credential: ?GetAssertionAuthenticatorResponse,
        domExceptionDetails: ?WebAuthnDOMExceptionDetails,
   *  }>}
   */

  getAssertion(options) {}
  
  /**
   * @return {!Promise<{
        available: !boolean,
   *  }>}
   */

  isUserVerifyingPlatformAuthenticatorAvailable() {}
  
  /**
   * @return {!Promise<{
        available: !boolean,
   *  }>}
   */

  isConditionalMediationAvailable() {}
  
  /**
   */

  cancel() {}
}

/**
 * @implements { AuthenticatorInterface }
 */
export class AuthenticatorRemote {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!AuthenticatorPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          AuthenticatorPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!AuthenticatorPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !PublicKeyCredentialCreationOptions } options
   * @return {!Promise<{
        status: !AuthenticatorStatus,
        credential: ?MakeCredentialAuthenticatorResponse,
        domExceptionDetails: ?WebAuthnDOMExceptionDetails,
   *  }>}
   */

  makeCredential(
      options) {
    return this.proxy.sendMessage(
        0,
        Authenticator_MakeCredential_ParamsSpec.$,
        Authenticator_MakeCredential_ResponseParamsSpec.$,
        [
          options
        ]);
  }

  
  /**
   * @param { !PublicKeyCredentialRequestOptions } options
   * @return {!Promise<{
        status: !AuthenticatorStatus,
        credential: ?GetAssertionAuthenticatorResponse,
        domExceptionDetails: ?WebAuthnDOMExceptionDetails,
   *  }>}
   */

  getAssertion(
      options) {
    return this.proxy.sendMessage(
        1,
        Authenticator_GetAssertion_ParamsSpec.$,
        Authenticator_GetAssertion_ResponseParamsSpec.$,
        [
          options
        ]);
  }

  
  /**
   * @return {!Promise<{
        available: !boolean,
   *  }>}
   */

  isUserVerifyingPlatformAuthenticatorAvailable() {
    return this.proxy.sendMessage(
        2,
        Authenticator_IsUserVerifyingPlatformAuthenticatorAvailable_ParamsSpec.$,
        Authenticator_IsUserVerifyingPlatformAuthenticatorAvailable_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @return {!Promise<{
        available: !boolean,
   *  }>}
   */

  isConditionalMediationAvailable() {
    return this.proxy.sendMessage(
        3,
        Authenticator_IsConditionalMediationAvailable_ParamsSpec.$,
        Authenticator_IsConditionalMediationAvailable_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   */

  cancel() {
    this.proxy.sendMessage(
        4,
        Authenticator_Cancel_ParamsSpec.$,
        null,
        [
        ]);
  }
}

/**
 * An object which receives request messages for the Authenticator
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class AuthenticatorReceiver {
  /**
   * @param {!AuthenticatorInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!AuthenticatorRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        AuthenticatorRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!AuthenticatorRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        Authenticator_MakeCredential_ParamsSpec.$,
        Authenticator_MakeCredential_ResponseParamsSpec.$,
        impl.makeCredential.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        Authenticator_GetAssertion_ParamsSpec.$,
        Authenticator_GetAssertion_ResponseParamsSpec.$,
        impl.getAssertion.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        Authenticator_IsUserVerifyingPlatformAuthenticatorAvailable_ParamsSpec.$,
        Authenticator_IsUserVerifyingPlatformAuthenticatorAvailable_ResponseParamsSpec.$,
        impl.isUserVerifyingPlatformAuthenticatorAvailable.bind(impl));
    this.helper_internal_.registerHandler(
        3,
        Authenticator_IsConditionalMediationAvailable_ParamsSpec.$,
        Authenticator_IsConditionalMediationAvailable_ResponseParamsSpec.$,
        impl.isConditionalMediationAvailable.bind(impl));
    this.helper_internal_.registerHandler(
        4,
        Authenticator_Cancel_ParamsSpec.$,
        null,
        impl.cancel.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
}

export class Authenticator {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "blink.mojom.Authenticator";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!AuthenticatorRemote}
   */
  static getRemote() {
    let remote = new AuthenticatorRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
}


/**
 * An object which receives request messages for the Authenticator
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class AuthenticatorCallbackRouter {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      AuthenticatorRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!AuthenticatorRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.makeCredential =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        Authenticator_MakeCredential_ParamsSpec.$,
        Authenticator_MakeCredential_ResponseParamsSpec.$,
        this.makeCredential.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getAssertion =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        Authenticator_GetAssertion_ParamsSpec.$,
        Authenticator_GetAssertion_ResponseParamsSpec.$,
        this.getAssertion.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.isUserVerifyingPlatformAuthenticatorAvailable =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        Authenticator_IsUserVerifyingPlatformAuthenticatorAvailable_ParamsSpec.$,
        Authenticator_IsUserVerifyingPlatformAuthenticatorAvailable_ResponseParamsSpec.$,
        this.isUserVerifyingPlatformAuthenticatorAvailable.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.isConditionalMediationAvailable =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        3,
        Authenticator_IsConditionalMediationAvailable_ParamsSpec.$,
        Authenticator_IsConditionalMediationAvailable_ResponseParamsSpec.$,
        this.isConditionalMediationAvailable.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.cancel =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        4,
        Authenticator_Cancel_ParamsSpec.$,
        null,
        this.cancel.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
}

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const CommonCredentialInfoSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const UvmEntrySpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const MakeCredentialAuthenticatorResponseSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const GetAssertionAuthenticatorResponseSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PublicKeyCredentialRpEntitySpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PublicKeyCredentialUserEntitySpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PublicKeyCredentialParametersSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const CableAuthenticationSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const CableRegistrationSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PRFValuesSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PaymentOptionsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PaymentCredentialInstrumentSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const RemoteDesktopClientOverrideSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PublicKeyCredentialRequestOptionsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const AuthenticatorSelectionCriteriaSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PublicKeyCredentialCreationOptionsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const PublicKeyCredentialDescriptorSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const WebAuthnDOMExceptionDetailsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Authenticator_MakeCredential_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Authenticator_MakeCredential_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Authenticator_GetAssertion_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Authenticator_GetAssertion_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Authenticator_IsUserVerifyingPlatformAuthenticatorAvailable_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Authenticator_IsUserVerifyingPlatformAuthenticatorAvailable_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Authenticator_IsConditionalMediationAvailable_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Authenticator_IsConditionalMediationAvailable_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const Authenticator_Cancel_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    CommonCredentialInfoSpec.$,
    'CommonCredentialInfo',
    [
      mojo.internal.StructField(
        'id', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'rawId', 8,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'clientDataJson', 16,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'authenticatorData', 24,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 40],]);



/**
 * @record
 */
export class CommonCredentialInfo {
  constructor() {
    /** @type { !string } */
    this.id;
    /** @type { !Array<!number> } */
    this.rawId;
    /** @type { !Array<!number> } */
    this.clientDataJson;
    /** @type { !Array<!number> } */
    this.authenticatorData;
  }
}



mojo.internal.Struct(
    UvmEntrySpec.$,
    'UvmEntry',
    [
      mojo.internal.StructField(
        'userVerificationMethod', 0,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'keyProtectionType', 4,
        0,
        mojo.internal.Uint16,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'matcherProtectionType', 6,
        0,
        mojo.internal.Uint16,
        0,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class UvmEntry {
  constructor() {
    /** @type { !number } */
    this.userVerificationMethod;
    /** @type { !number } */
    this.keyProtectionType;
    /** @type { !number } */
    this.matcherProtectionType;
  }
}



mojo.internal.Struct(
    MakeCredentialAuthenticatorResponseSpec.$,
    'MakeCredentialAuthenticatorResponse',
    [
      mojo.internal.StructField(
        'info', 0,
        0,
        CommonCredentialInfoSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'authenticatorAttachment', 8,
        0,
        AuthenticatorAttachmentSpec.$,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'attestationObject', 16,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'transports', 24,
        0,
        mojo.internal.Array(AuthenticatorTransportSpec.$, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'echoHmacCreateSecret', 12,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'hmacCreateSecret', 12,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'echoPrf', 12,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'prf', 12,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'echoCredBlob', 12,
        4,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'credBlob', 12,
        5,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'publicKeyDer', 32,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'publicKeyAlgo', 40,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'echoCredProps', 12,
        6,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'hasCredPropsRk', 12,
        7,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'credPropsRk', 13,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'echoLargeBlob', 13,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'supportsLargeBlob', 13,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 56],]);



/**
 * @record
 */
export class MakeCredentialAuthenticatorResponse {
  constructor() {
    /** @type { !CommonCredentialInfo } */
    this.info;
    /** @type { !AuthenticatorAttachment } */
    this.authenticatorAttachment;
    /** @type { !boolean } */
    this.echoHmacCreateSecret;
    /** @type { !boolean } */
    this.hmacCreateSecret;
    /** @type { !boolean } */
    this.echoPrf;
    /** @type { !boolean } */
    this.prf;
    /** @type { !boolean } */
    this.echoCredBlob;
    /** @type { !boolean } */
    this.credBlob;
    /** @type { !boolean } */
    this.echoCredProps;
    /** @type { !boolean } */
    this.hasCredPropsRk;
    /** @type { !boolean } */
    this.credPropsRk;
    /** @type { !boolean } */
    this.echoLargeBlob;
    /** @type { !boolean } */
    this.supportsLargeBlob;
    /** @type { !Array<!number> } */
    this.attestationObject;
    /** @type { !Array<!AuthenticatorTransport> } */
    this.transports;
    /** @type { (Array<!number>|undefined) } */
    this.publicKeyDer;
    /** @type { !number } */
    this.publicKeyAlgo;
  }
}



mojo.internal.Struct(
    GetAssertionAuthenticatorResponseSpec.$,
    'GetAssertionAuthenticatorResponse',
    [
      mojo.internal.StructField(
        'info', 0,
        0,
        CommonCredentialInfoSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'authenticatorAttachment', 8,
        0,
        AuthenticatorAttachmentSpec.$,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'signature', 16,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'userHandle', 24,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'echoAppidExtension', 12,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'appidExtension', 12,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'echoUserVerificationMethods', 12,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'userVerificationMethods', 32,
        0,
        mojo.internal.Array(UvmEntrySpec.$, false),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'echoPrf', 12,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'prfResults', 40,
        0,
        PRFValuesSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'prfNotEvaluated', 12,
        4,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'echoLargeBlob', 12,
        5,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'largeBlob', 48,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'echoLargeBlobWritten', 12,
        6,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'largeBlobWritten', 12,
        7,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'getCredBlob', 56,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        true /* nullable */,
        0),
    ],
    [[0, 72],]);



/**
 * @record
 */
export class GetAssertionAuthenticatorResponse {
  constructor() {
    /** @type { !CommonCredentialInfo } */
    this.info;
    /** @type { !AuthenticatorAttachment } */
    this.authenticatorAttachment;
    /** @type { !boolean } */
    this.echoAppidExtension;
    /** @type { !boolean } */
    this.appidExtension;
    /** @type { !boolean } */
    this.echoUserVerificationMethods;
    /** @type { !boolean } */
    this.echoPrf;
    /** @type { !boolean } */
    this.prfNotEvaluated;
    /** @type { !boolean } */
    this.echoLargeBlob;
    /** @type { !boolean } */
    this.echoLargeBlobWritten;
    /** @type { !boolean } */
    this.largeBlobWritten;
    /** @type { !Array<!number> } */
    this.signature;
    /** @type { (Array<!number>|undefined) } */
    this.userHandle;
    /** @type { (Array<!UvmEntry>|undefined) } */
    this.userVerificationMethods;
    /** @type { (PRFValues|undefined) } */
    this.prfResults;
    /** @type { (Array<!number>|undefined) } */
    this.largeBlob;
    /** @type { (Array<!number>|undefined) } */
    this.getCredBlob;
  }
}



mojo.internal.Struct(
    PublicKeyCredentialRpEntitySpec.$,
    'PublicKeyCredentialRpEntity',
    [
      mojo.internal.StructField(
        'id', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'name', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'icon', 16,
        0,
        url_mojom_UrlSpec.$,
        null,
        true /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class PublicKeyCredentialRpEntity {
  constructor() {
    /** @type { !string } */
    this.id;
    /** @type { !string } */
    this.name;
    /** @type { (url_mojom_Url|undefined) } */
    this.icon;
  }
}



mojo.internal.Struct(
    PublicKeyCredentialUserEntitySpec.$,
    'PublicKeyCredentialUserEntity',
    [
      mojo.internal.StructField(
        'id', 0,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'name', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'icon', 16,
        0,
        url_mojom_UrlSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'displayName', 24,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 40],]);



/**
 * @record
 */
export class PublicKeyCredentialUserEntity {
  constructor() {
    /** @type { !Array<!number> } */
    this.id;
    /** @type { !string } */
    this.name;
    /** @type { (url_mojom_Url|undefined) } */
    this.icon;
    /** @type { !string } */
    this.displayName;
  }
}



mojo.internal.Struct(
    PublicKeyCredentialParametersSpec.$,
    'PublicKeyCredentialParameters',
    [
      mojo.internal.StructField(
        'type', 0,
        0,
        PublicKeyCredentialTypeSpec.$,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'algorithmIdentifier', 4,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class PublicKeyCredentialParameters {
  constructor() {
    /** @type { !PublicKeyCredentialType } */
    this.type;
    /** @type { !number } */
    this.algorithmIdentifier;
  }
}



mojo.internal.Struct(
    CableAuthenticationSpec.$,
    'CableAuthentication',
    [
      mojo.internal.StructField(
        'version', 0,
        0,
        mojo.internal.Uint8,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'clientEid', 8,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'authenticatorEid', 16,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'sessionPreKey', 24,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'serverLinkData', 32,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'experiments', 40,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        true /* nullable */,
        0),
    ],
    [[0, 56],]);



/**
 * @record
 */
export class CableAuthentication {
  constructor() {
    /** @type { !number } */
    this.version;
    /** @type { (Array<!number>|undefined) } */
    this.clientEid;
    /** @type { (Array<!number>|undefined) } */
    this.authenticatorEid;
    /** @type { (Array<!number>|undefined) } */
    this.sessionPreKey;
    /** @type { (Array<!number>|undefined) } */
    this.serverLinkData;
    /** @type { (Array<!number>|undefined) } */
    this.experiments;
  }
}



mojo.internal.Struct(
    CableRegistrationSpec.$,
    'CableRegistration',
    [
      mojo.internal.StructField(
        'versions', 0,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'relyingPartyPublicKey', 8,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class CableRegistration {
  constructor() {
    /** @type { !Array<!number> } */
    this.versions;
    /** @type { !Array<!number> } */
    this.relyingPartyPublicKey;
  }
}



mojo.internal.Struct(
    PRFValuesSpec.$,
    'PRFValues',
    [
      mojo.internal.StructField(
        'id', 0,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'first', 8,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'second', 16,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        true /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class PRFValues {
  constructor() {
    /** @type { (Array<!number>|undefined) } */
    this.id;
    /** @type { !Array<!number> } */
    this.first;
    /** @type { (Array<!number>|undefined) } */
    this.second;
  }
}



mojo.internal.Struct(
    PaymentOptionsSpec.$,
    'PaymentOptions',
    [
      mojo.internal.StructField(
        'total', 0,
        0,
        payments_mojom_PaymentCurrencyAmountSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'instrument', 8,
        0,
        PaymentCredentialInstrumentSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'payeeName', 16,
        0,
        mojo.internal.String,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'payeeOrigin', 24,
        0,
        url_mojom_OriginSpec.$,
        null,
        true /* nullable */,
        0),
    ],
    [[0, 40],]);



/**
 * @record
 */
export class PaymentOptions {
  constructor() {
    /** @type { !payments_mojom_PaymentCurrencyAmount } */
    this.total;
    /** @type { !PaymentCredentialInstrument } */
    this.instrument;
    /** @type { (string|undefined) } */
    this.payeeName;
    /** @type { (url_mojom_Origin|undefined) } */
    this.payeeOrigin;
  }
}



mojo.internal.Struct(
    PaymentCredentialInstrumentSpec.$,
    'PaymentCredentialInstrument',
    [
      mojo.internal.StructField(
        'displayName', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'icon', 8,
        0,
        url_mojom_UrlSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'iconMustBeShown', 16,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class PaymentCredentialInstrument {
  constructor() {
    /** @type { !string } */
    this.displayName;
    /** @type { !url_mojom_Url } */
    this.icon;
    /** @type { !boolean } */
    this.iconMustBeShown;
  }
}



mojo.internal.Struct(
    RemoteDesktopClientOverrideSpec.$,
    'RemoteDesktopClientOverride',
    [
      mojo.internal.StructField(
        'origin', 0,
        0,
        url_mojom_OriginSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'sameOriginWithAncestors', 8,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class RemoteDesktopClientOverride {
  constructor() {
    /** @type { !url_mojom_Origin } */
    this.origin;
    /** @type { !boolean } */
    this.sameOriginWithAncestors;
  }
}



mojo.internal.Struct(
    PublicKeyCredentialRequestOptionsSpec.$,
    'PublicKeyCredentialRequestOptions',
    [
      mojo.internal.StructField(
        'isConditional', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'challenge', 8,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'timeout', 16,
        0,
        mojoBase_mojom_TimeDeltaSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'relyingPartyId', 24,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'allowCredentials', 32,
        0,
        mojo.internal.Array(PublicKeyCredentialDescriptorSpec.$, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'userVerification', 4,
        0,
        UserVerificationRequirementSpec.$,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'appid', 40,
        0,
        mojo.internal.String,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'cableAuthenticationData', 48,
        0,
        mojo.internal.Array(CableAuthenticationSpec.$, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'userVerificationMethods', 0,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'prf', 0,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'prfInputs', 56,
        0,
        mojo.internal.Array(PRFValuesSpec.$, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'largeBlobRead', 0,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'largeBlobWrite', 64,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'getCredBlob', 0,
        4,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'remoteDesktopClientOverride', 72,
        0,
        RemoteDesktopClientOverrideSpec.$,
        null,
        true /* nullable */,
        0),
    ],
    [[0, 88],]);



/**
 * @record
 */
export class PublicKeyCredentialRequestOptions {
  constructor() {
    /** @type { !boolean } */
    this.isConditional;
    /** @type { !boolean } */
    this.userVerificationMethods;
    /** @type { !boolean } */
    this.prf;
    /** @type { !boolean } */
    this.largeBlobRead;
    /** @type { !boolean } */
    this.getCredBlob;
    /** @type { !UserVerificationRequirement } */
    this.userVerification;
    /** @type { !Array<!number> } */
    this.challenge;
    /** @type { (mojoBase_mojom_TimeDelta|undefined) } */
    this.timeout;
    /** @type { !string } */
    this.relyingPartyId;
    /** @type { !Array<!PublicKeyCredentialDescriptor> } */
    this.allowCredentials;
    /** @type { (string|undefined) } */
    this.appid;
    /** @type { !Array<!CableAuthentication> } */
    this.cableAuthenticationData;
    /** @type { !Array<!PRFValues> } */
    this.prfInputs;
    /** @type { (Array<!number>|undefined) } */
    this.largeBlobWrite;
    /** @type { (RemoteDesktopClientOverride|undefined) } */
    this.remoteDesktopClientOverride;
  }
}



mojo.internal.Struct(
    AuthenticatorSelectionCriteriaSpec.$,
    'AuthenticatorSelectionCriteria',
    [
      mojo.internal.StructField(
        'authenticatorAttachment', 0,
        0,
        AuthenticatorAttachmentSpec.$,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'residentKey', 4,
        0,
        ResidentKeyRequirementSpec.$,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'userVerification', 8,
        0,
        UserVerificationRequirementSpec.$,
        0,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class AuthenticatorSelectionCriteria {
  constructor() {
    /** @type { !AuthenticatorAttachment } */
    this.authenticatorAttachment;
    /** @type { !ResidentKeyRequirement } */
    this.residentKey;
    /** @type { !UserVerificationRequirement } */
    this.userVerification;
  }
}



mojo.internal.Struct(
    PublicKeyCredentialCreationOptionsSpec.$,
    'PublicKeyCredentialCreationOptions',
    [
      mojo.internal.StructField(
        'relyingParty', 0,
        0,
        PublicKeyCredentialRpEntitySpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'user', 8,
        0,
        PublicKeyCredentialUserEntitySpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'challenge', 16,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'publicKeyParameters', 24,
        0,
        mojo.internal.Array(PublicKeyCredentialParametersSpec.$, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'timeout', 32,
        0,
        mojoBase_mojom_TimeDeltaSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'excludeCredentials', 40,
        0,
        mojo.internal.Array(PublicKeyCredentialDescriptorSpec.$, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'authenticatorSelection', 48,
        0,
        AuthenticatorSelectionCriteriaSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'attestation', 56,
        0,
        AttestationConveyancePreferenceSpec.$,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'cableRegistrationData', 64,
        0,
        CableRegistrationSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'hmacCreateSecret', 60,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'prfEnable', 60,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'protectionPolicy', 72,
        0,
        ProtectionPolicySpec.$,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'enforceProtectionPolicy', 60,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'appidExclude', 80,
        0,
        mojo.internal.String,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'credProps', 60,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'largeBlobEnable', 76,
        0,
        LargeBlobSupportSpec.$,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'isPaymentCredentialCreation', 60,
        4,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'credBlob', 88,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'googleLegacyAppIdSupport', 60,
        5,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'minPinLengthRequested', 60,
        6,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'remoteDesktopClientOverride', 96,
        0,
        RemoteDesktopClientOverrideSpec.$,
        null,
        true /* nullable */,
        0),
    ],
    [[0, 112],]);



/**
 * @record
 */
export class PublicKeyCredentialCreationOptions {
  constructor() {
    /** @type { !PublicKeyCredentialRpEntity } */
    this.relyingParty;
    /** @type { !PublicKeyCredentialUserEntity } */
    this.user;
    /** @type { !Array<!number> } */
    this.challenge;
    /** @type { !Array<!PublicKeyCredentialParameters> } */
    this.publicKeyParameters;
    /** @type { (mojoBase_mojom_TimeDelta|undefined) } */
    this.timeout;
    /** @type { !Array<!PublicKeyCredentialDescriptor> } */
    this.excludeCredentials;
    /** @type { (AuthenticatorSelectionCriteria|undefined) } */
    this.authenticatorSelection;
    /** @type { !AttestationConveyancePreference } */
    this.attestation;
    /** @type { !boolean } */
    this.hmacCreateSecret;
    /** @type { !boolean } */
    this.prfEnable;
    /** @type { !boolean } */
    this.enforceProtectionPolicy;
    /** @type { !boolean } */
    this.credProps;
    /** @type { !boolean } */
    this.isPaymentCredentialCreation;
    /** @type { !boolean } */
    this.googleLegacyAppIdSupport;
    /** @type { !boolean } */
    this.minPinLengthRequested;
    /** @type { (CableRegistration|undefined) } */
    this.cableRegistrationData;
    /** @type { !ProtectionPolicy } */
    this.protectionPolicy;
    /** @type { !LargeBlobSupport } */
    this.largeBlobEnable;
    /** @type { (string|undefined) } */
    this.appidExclude;
    /** @type { (Array<!number>|undefined) } */
    this.credBlob;
    /** @type { (RemoteDesktopClientOverride|undefined) } */
    this.remoteDesktopClientOverride;
  }
}



mojo.internal.Struct(
    PublicKeyCredentialDescriptorSpec.$,
    'PublicKeyCredentialDescriptor',
    [
      mojo.internal.StructField(
        'type', 0,
        0,
        PublicKeyCredentialTypeSpec.$,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'id', 8,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'transports', 16,
        0,
        mojo.internal.Array(AuthenticatorTransportSpec.$, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class PublicKeyCredentialDescriptor {
  constructor() {
    /** @type { !PublicKeyCredentialType } */
    this.type;
    /** @type { !Array<!number> } */
    this.id;
    /** @type { !Array<!AuthenticatorTransport> } */
    this.transports;
  }
}



mojo.internal.Struct(
    WebAuthnDOMExceptionDetailsSpec.$,
    'WebAuthnDOMExceptionDetails',
    [
      mojo.internal.StructField(
        'name', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'message', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class WebAuthnDOMExceptionDetails {
  constructor() {
    /** @type { !string } */
    this.name;
    /** @type { !string } */
    this.message;
  }
}



mojo.internal.Struct(
    Authenticator_MakeCredential_ParamsSpec.$,
    'Authenticator_MakeCredential_Params',
    [
      mojo.internal.StructField(
        'options', 0,
        0,
        PublicKeyCredentialCreationOptionsSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class Authenticator_MakeCredential_Params {
  constructor() {
    /** @type { !PublicKeyCredentialCreationOptions } */
    this.options;
  }
}



mojo.internal.Struct(
    Authenticator_MakeCredential_ResponseParamsSpec.$,
    'Authenticator_MakeCredential_ResponseParams',
    [
      mojo.internal.StructField(
        'status', 0,
        0,
        AuthenticatorStatusSpec.$,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'credential', 8,
        0,
        MakeCredentialAuthenticatorResponseSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'domExceptionDetails', 16,
        0,
        WebAuthnDOMExceptionDetailsSpec.$,
        null,
        true /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class Authenticator_MakeCredential_ResponseParams {
  constructor() {
    /** @type { !AuthenticatorStatus } */
    this.status;
    /** @type { (MakeCredentialAuthenticatorResponse|undefined) } */
    this.credential;
    /** @type { (WebAuthnDOMExceptionDetails|undefined) } */
    this.domExceptionDetails;
  }
}



mojo.internal.Struct(
    Authenticator_GetAssertion_ParamsSpec.$,
    'Authenticator_GetAssertion_Params',
    [
      mojo.internal.StructField(
        'options', 0,
        0,
        PublicKeyCredentialRequestOptionsSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class Authenticator_GetAssertion_Params {
  constructor() {
    /** @type { !PublicKeyCredentialRequestOptions } */
    this.options;
  }
}



mojo.internal.Struct(
    Authenticator_GetAssertion_ResponseParamsSpec.$,
    'Authenticator_GetAssertion_ResponseParams',
    [
      mojo.internal.StructField(
        'status', 0,
        0,
        AuthenticatorStatusSpec.$,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'credential', 8,
        0,
        GetAssertionAuthenticatorResponseSpec.$,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'domExceptionDetails', 16,
        0,
        WebAuthnDOMExceptionDetailsSpec.$,
        null,
        true /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class Authenticator_GetAssertion_ResponseParams {
  constructor() {
    /** @type { !AuthenticatorStatus } */
    this.status;
    /** @type { (GetAssertionAuthenticatorResponse|undefined) } */
    this.credential;
    /** @type { (WebAuthnDOMExceptionDetails|undefined) } */
    this.domExceptionDetails;
  }
}



mojo.internal.Struct(
    Authenticator_IsUserVerifyingPlatformAuthenticatorAvailable_ParamsSpec.$,
    'Authenticator_IsUserVerifyingPlatformAuthenticatorAvailable_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class Authenticator_IsUserVerifyingPlatformAuthenticatorAvailable_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    Authenticator_IsUserVerifyingPlatformAuthenticatorAvailable_ResponseParamsSpec.$,
    'Authenticator_IsUserVerifyingPlatformAuthenticatorAvailable_ResponseParams',
    [
      mojo.internal.StructField(
        'available', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class Authenticator_IsUserVerifyingPlatformAuthenticatorAvailable_ResponseParams {
  constructor() {
    /** @type { !boolean } */
    this.available;
  }
}



mojo.internal.Struct(
    Authenticator_IsConditionalMediationAvailable_ParamsSpec.$,
    'Authenticator_IsConditionalMediationAvailable_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class Authenticator_IsConditionalMediationAvailable_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    Authenticator_IsConditionalMediationAvailable_ResponseParamsSpec.$,
    'Authenticator_IsConditionalMediationAvailable_ResponseParams',
    [
      mojo.internal.StructField(
        'available', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class Authenticator_IsConditionalMediationAvailable_ResponseParams {
  constructor() {
    /** @type { !boolean } */
    this.available;
  }
}



mojo.internal.Struct(
    Authenticator_Cancel_ParamsSpec.$,
    'Authenticator_Cancel_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class Authenticator_Cancel_Params {
  constructor() {
  }
}

