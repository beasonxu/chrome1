// third_party/blink/public/mojom/loader/resource_load_info_notifier.mojom-blink-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_LOADER_RESOURCE_LOAD_INFO_NOTIFIER_MOJOM_BLINK_TEST_UTILS_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_LOADER_RESOURCE_LOAD_INFO_NOTIFIER_MOJOM_BLINK_TEST_UTILS_H_

#include "third_party/blink/public/mojom/loader/resource_load_info_notifier.mojom-blink.h"
#include "third_party/blink/renderer/platform/platform_export.h"


namespace blink {
namespace mojom {
namespace blink {


class PLATFORM_EXPORT ResourceLoadInfoNotifierInterceptorForTesting : public ResourceLoadInfoNotifier {
  virtual ResourceLoadInfoNotifier* GetForwardingInterface() = 0;
  void NotifyUpdateUserGestureCarryoverInfo() override;
  void NotifyResourceRedirectReceived(::network::mojom::blink::URLRequestRedirectInfoPtr redirect_info, ::network::mojom::blink::URLResponseHeadPtr redirect_response) override;
  void NotifyResourceResponseReceived(int64_t request_id, ::url::mojom::blink::SchemeHostPortPtr final_response_url, ::network::mojom::blink::URLResponseHeadPtr head, ::network::mojom::blink::RequestDestination request_destination) override;
  void NotifyResourceTransferSizeUpdated(int64_t request_id, int32_t transfer_size_diff) override;
  void NotifyResourceLoadCompleted(::blink::mojom::blink::ResourceLoadInfoPtr resource_load_info, const ::network::URLLoaderCompletionStatus& status) override;
  void NotifyResourceLoadCanceled(int64_t request_id) override;
  void Clone(::mojo::PendingReceiver<ResourceLoadInfoNotifier> pending_resource_load_info_notifier) override;
};
class PLATFORM_EXPORT ResourceLoadInfoNotifierAsyncWaiter {
 public:
  explicit ResourceLoadInfoNotifierAsyncWaiter(ResourceLoadInfoNotifier* proxy);

  ResourceLoadInfoNotifierAsyncWaiter(const ResourceLoadInfoNotifierAsyncWaiter&) = delete;
  ResourceLoadInfoNotifierAsyncWaiter& operator=(const ResourceLoadInfoNotifierAsyncWaiter&) = delete;

  ~ResourceLoadInfoNotifierAsyncWaiter();

 private:
  ResourceLoadInfoNotifier* const proxy_;
};




}  // namespace blink
}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_LOADER_RESOURCE_LOAD_INFO_NOTIFIER_MOJOM_BLINK_TEST_UTILS_H_