// third_party/blink/public/mojom/loader/navigation_predictor.mojom.m.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import {mojo} from '../../../../../mojo/public/js/bindings.js';

import {
  Size as gfx_mojom_Size,
  SizeSpec as gfx_mojom_SizeSpec
} from '../../../../../ui/gfx/geometry/mojom/geometry.mojom.m.js';

import {
  Url as url_mojom_Url,
  UrlSpec as url_mojom_UrlSpec
} from '../../../../../url/mojom/url.mojom.m.js';




/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export class AnchorElementMetricsHostPendingReceiver {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle, 'blink.mojom.AnchorElementMetricsHost', scope);
  }
}

/** @interface */
export class AnchorElementMetricsHostInterface {
  
  /**
   * @param { !AnchorElementClick } clicked
   */

  reportAnchorElementClick(clicked) {}
  
  /**
   * @param { !Array<!AnchorElementMetrics> } metrics
   */

  reportNewAnchorElements(metrics) {}
  
  /**
   * @param { !Array<!AnchorElementEnteredViewport> } elements
   */

  reportAnchorElementsEnteredViewport(elements) {}
}

/**
 * @implements { AnchorElementMetricsHostInterface }
 */
export class AnchorElementMetricsHostRemote {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!AnchorElementMetricsHostPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          AnchorElementMetricsHostPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!AnchorElementMetricsHostPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !AnchorElementClick } clicked
   */

  reportAnchorElementClick(
      clicked) {
    this.proxy.sendMessage(
        0,
        AnchorElementMetricsHost_ReportAnchorElementClick_ParamsSpec.$,
        null,
        [
          clicked
        ]);
  }

  
  /**
   * @param { !Array<!AnchorElementMetrics> } metrics
   */

  reportNewAnchorElements(
      metrics) {
    this.proxy.sendMessage(
        1,
        AnchorElementMetricsHost_ReportNewAnchorElements_ParamsSpec.$,
        null,
        [
          metrics
        ]);
  }

  
  /**
   * @param { !Array<!AnchorElementEnteredViewport> } elements
   */

  reportAnchorElementsEnteredViewport(
      elements) {
    this.proxy.sendMessage(
        2,
        AnchorElementMetricsHost_ReportAnchorElementsEnteredViewport_ParamsSpec.$,
        null,
        [
          elements
        ]);
  }
}

/**
 * An object which receives request messages for the AnchorElementMetricsHost
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class AnchorElementMetricsHostReceiver {
  /**
   * @param {!AnchorElementMetricsHostInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!AnchorElementMetricsHostRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        AnchorElementMetricsHostRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!AnchorElementMetricsHostRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        AnchorElementMetricsHost_ReportAnchorElementClick_ParamsSpec.$,
        null,
        impl.reportAnchorElementClick.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        AnchorElementMetricsHost_ReportNewAnchorElements_ParamsSpec.$,
        null,
        impl.reportNewAnchorElements.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        AnchorElementMetricsHost_ReportAnchorElementsEnteredViewport_ParamsSpec.$,
        null,
        impl.reportAnchorElementsEnteredViewport.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
}

export class AnchorElementMetricsHost {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "blink.mojom.AnchorElementMetricsHost";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!AnchorElementMetricsHostRemote}
   */
  static getRemote() {
    let remote = new AnchorElementMetricsHostRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
}


/**
 * An object which receives request messages for the AnchorElementMetricsHost
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class AnchorElementMetricsHostCallbackRouter {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      AnchorElementMetricsHostRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!AnchorElementMetricsHostRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.reportAnchorElementClick =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        AnchorElementMetricsHost_ReportAnchorElementClick_ParamsSpec.$,
        null,
        this.reportAnchorElementClick.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.reportNewAnchorElements =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        AnchorElementMetricsHost_ReportNewAnchorElements_ParamsSpec.$,
        null,
        this.reportNewAnchorElements.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.reportAnchorElementsEnteredViewport =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        AnchorElementMetricsHost_ReportAnchorElementsEnteredViewport_ParamsSpec.$,
        null,
        this.reportAnchorElementsEnteredViewport.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
}

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const AnchorElementMetricsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const AnchorElementClickSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const AnchorElementEnteredViewportSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const AnchorElementMetricsHost_ReportAnchorElementClick_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const AnchorElementMetricsHost_ReportNewAnchorElements_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const AnchorElementMetricsHost_ReportAnchorElementsEnteredViewport_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    AnchorElementMetricsSpec.$,
    'AnchorElementMetrics',
    [
      mojo.internal.StructField(
        'anchorId', 0,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'ratioArea', 4,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'ratioVisibleArea', 8,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'ratioDistanceTopToVisibleTop', 12,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'ratioDistanceCenterToVisibleTop', 16,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'ratioDistanceRootTop', 20,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'ratioDistanceRootBottom', 24,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'isInIframe', 28,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'containsImage', 28,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'isSameHost', 28,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'isUrlIncrementedByOne', 28,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'hasTextSibling', 28,
        4,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'fontSizePx', 32,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'fontWeight', 36,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'sourceUrl', 40,
        0,
        url_mojom_UrlSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'targetUrl', 48,
        0,
        url_mojom_UrlSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'viewportSize', 56,
        0,
        gfx_mojom_SizeSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 72],]);



/**
 * @record
 */
export class AnchorElementMetrics {
  constructor() {
    /** @type { !number } */
    this.anchorId;
    /** @type { !number } */
    this.ratioArea;
    /** @type { !number } */
    this.ratioVisibleArea;
    /** @type { !number } */
    this.ratioDistanceTopToVisibleTop;
    /** @type { !number } */
    this.ratioDistanceCenterToVisibleTop;
    /** @type { !number } */
    this.ratioDistanceRootTop;
    /** @type { !number } */
    this.ratioDistanceRootBottom;
    /** @type { !boolean } */
    this.isInIframe;
    /** @type { !boolean } */
    this.containsImage;
    /** @type { !boolean } */
    this.isSameHost;
    /** @type { !boolean } */
    this.isUrlIncrementedByOne;
    /** @type { !boolean } */
    this.hasTextSibling;
    /** @type { !number } */
    this.fontSizePx;
    /** @type { !number } */
    this.fontWeight;
    /** @type { !url_mojom_Url } */
    this.sourceUrl;
    /** @type { !url_mojom_Url } */
    this.targetUrl;
    /** @type { !gfx_mojom_Size } */
    this.viewportSize;
  }
}



mojo.internal.Struct(
    AnchorElementClickSpec.$,
    'AnchorElementClick',
    [
      mojo.internal.StructField(
        'anchorId', 0,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'targetUrl', 8,
        0,
        url_mojom_UrlSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class AnchorElementClick {
  constructor() {
    /** @type { !number } */
    this.anchorId;
    /** @type { !url_mojom_Url } */
    this.targetUrl;
  }
}



mojo.internal.Struct(
    AnchorElementEnteredViewportSpec.$,
    'AnchorElementEnteredViewport',
    [
      mojo.internal.StructField(
        'anchorId', 0,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'navigationStartToEnteredViewportMs', 8,
        0,
        mojo.internal.Uint64,
        BigInt(0),
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class AnchorElementEnteredViewport {
  constructor() {
    /** @type { !number } */
    this.anchorId;
    /** @type { !bigint } */
    this.navigationStartToEnteredViewportMs;
  }
}



mojo.internal.Struct(
    AnchorElementMetricsHost_ReportAnchorElementClick_ParamsSpec.$,
    'AnchorElementMetricsHost_ReportAnchorElementClick_Params',
    [
      mojo.internal.StructField(
        'clicked', 0,
        0,
        AnchorElementClickSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class AnchorElementMetricsHost_ReportAnchorElementClick_Params {
  constructor() {
    /** @type { !AnchorElementClick } */
    this.clicked;
  }
}



mojo.internal.Struct(
    AnchorElementMetricsHost_ReportNewAnchorElements_ParamsSpec.$,
    'AnchorElementMetricsHost_ReportNewAnchorElements_Params',
    [
      mojo.internal.StructField(
        'metrics', 0,
        0,
        mojo.internal.Array(AnchorElementMetricsSpec.$, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class AnchorElementMetricsHost_ReportNewAnchorElements_Params {
  constructor() {
    /** @type { !Array<!AnchorElementMetrics> } */
    this.metrics;
  }
}



mojo.internal.Struct(
    AnchorElementMetricsHost_ReportAnchorElementsEnteredViewport_ParamsSpec.$,
    'AnchorElementMetricsHost_ReportAnchorElementsEnteredViewport_Params',
    [
      mojo.internal.StructField(
        'elements', 0,
        0,
        mojo.internal.Array(AnchorElementEnteredViewportSpec.$, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class AnchorElementMetricsHost_ReportAnchorElementsEnteredViewport_Params {
  constructor() {
    /** @type { !Array<!AnchorElementEnteredViewport> } */
    this.elements;
  }
}

