// third_party/blink/public/mojom/webid/federated_auth_request.mojom-blink-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_WEBID_FEDERATED_AUTH_REQUEST_MOJOM_BLINK_TEST_UTILS_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_WEBID_FEDERATED_AUTH_REQUEST_MOJOM_BLINK_TEST_UTILS_H_

#include "third_party/blink/public/mojom/webid/federated_auth_request.mojom-blink.h"
#include "third_party/blink/renderer/platform/platform_export.h"


namespace blink {
namespace mojom {
namespace blink {


class PLATFORM_EXPORT FederatedAuthRequestInterceptorForTesting : public FederatedAuthRequest {
  virtual FederatedAuthRequest* GetForwardingInterface() = 0;
  void RequestToken(IdentityProviderPtr identity_provider_ptr, bool prefer_auto_sign_in, RequestTokenCallback callback) override;
  void CancelTokenRequest() override;
  void LogoutRps(WTF::Vector<LogoutRpsRequestPtr> rp_logout_requests, LogoutRpsCallback callback) override;
};
class PLATFORM_EXPORT FederatedAuthRequestAsyncWaiter {
 public:
  explicit FederatedAuthRequestAsyncWaiter(FederatedAuthRequest* proxy);

  FederatedAuthRequestAsyncWaiter(const FederatedAuthRequestAsyncWaiter&) = delete;
  FederatedAuthRequestAsyncWaiter& operator=(const FederatedAuthRequestAsyncWaiter&) = delete;

  ~FederatedAuthRequestAsyncWaiter();
  void RequestToken(
      IdentityProviderPtr identity_provider_ptr, bool prefer_auto_sign_in, RequestTokenStatus* out_status, WTF::String* out_token);
  void LogoutRps(
      WTF::Vector<LogoutRpsRequestPtr> rp_logout_requests, LogoutRpsStatus* out_status);

 private:
  FederatedAuthRequest* const proxy_;
};




}  // namespace blink
}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_WEBID_FEDERATED_AUTH_REQUEST_MOJOM_BLINK_TEST_UTILS_H_