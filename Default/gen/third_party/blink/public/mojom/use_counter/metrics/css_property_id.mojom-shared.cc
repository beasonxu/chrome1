// third_party/blink/public/mojom/use_counter/metrics/css_property_id.mojom-shared.cc is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#include "third_party/blink/public/mojom/use_counter/metrics/css_property_id.mojom-shared.h"

// Used to support stream output operator for enums.
// TODO(dcheng): Consider omitting this somehow if not needed.
#include <ostream>
#include <utility>

#include "base/strings/stringprintf.h"
#include "mojo/public/cpp/bindings/lib/validate_params.h"
#include "mojo/public/cpp/bindings/lib/validation_errors.h"
#include "mojo/public/cpp/bindings/lib/validation_util.h"
#include "third_party/perfetto/include/perfetto/tracing/traced_value.h"

#include "third_party/blink/public/mojom/use_counter/metrics/css_property_id.mojom-params-data.h"
namespace blink {
namespace mojom {

static NOINLINE const char* CSSSampleIdToStringHelper(CSSSampleId value) {
  // Defined in a helper function to ensure that Clang generates a lookup table.
  switch(value) {
    case CSSSampleId::kInvalid:
      return "{kInvalid, kInternalAlignSelfBlock, kInternalEmptyLineHeight, kInternalVisitedBackgroundColor, kInternalVisitedBorderBlockEndColor, kInternalVisitedBorderBlockStartColor, kInternalVisitedBorderBottomColor, kInternalVisitedBorderInlineEndColor, kInternalVisitedBorderInlineStartColor, kInternalVisitedBorderLeftColor, kInternalVisitedBorderRightColor, kInternalVisitedBorderTopColor, kInternalVisitedCaretColor, kInternalVisitedColor, kInternalVisitedColumnRuleColor, kInternalVisitedFill, kInternalVisitedOutlineColor, kInternalVisitedStroke, kInternalVisitedTextDecorationColor, kInternalVisitedTextEmphasisColor, kInternalVisitedTextFillColor, kInternalVisitedTextStrokeColor, kInternalFontSizeDelta, kInternalForcedBackgroundColor, kInternalForcedBorderColor, kInternalForcedColor, kInternalForcedOutlineColor, kInternalForcedVisitedColor}";
    case CSSSampleId::kTotalPagesMeasured:
      return "kTotalPagesMeasured";
    case CSSSampleId::kColor:
      return "kColor";
    case CSSSampleId::kDirection:
      return "kDirection";
    case CSSSampleId::kDisplay:
      return "kDisplay";
    case CSSSampleId::kFont:
      return "kFont";
    case CSSSampleId::kFontFamily:
      return "kFontFamily";
    case CSSSampleId::kFontSize:
      return "kFontSize";
    case CSSSampleId::kFontStyle:
      return "kFontStyle";
    case CSSSampleId::kFontVariant:
      return "kFontVariant";
    case CSSSampleId::kFontWeight:
      return "kFontWeight";
    case CSSSampleId::kTextRendering:
      return "kTextRendering";
    case CSSSampleId::kAliasWebkitFontFeatureSettings:
      return "kAliasWebkitFontFeatureSettings";
    case CSSSampleId::kFontKerning:
      return "kFontKerning";
    case CSSSampleId::kWebkitFontSmoothing:
      return "kWebkitFontSmoothing";
    case CSSSampleId::kFontVariantLigatures:
      return "kFontVariantLigatures";
    case CSSSampleId::kWebkitLocale:
      return "kWebkitLocale";
    case CSSSampleId::kWebkitTextOrientation:
      return "kWebkitTextOrientation";
    case CSSSampleId::kWebkitWritingMode:
      return "kWebkitWritingMode";
    case CSSSampleId::kZoom:
      return "kZoom";
    case CSSSampleId::kLineHeight:
      return "kLineHeight";
    case CSSSampleId::kBackground:
      return "kBackground";
    case CSSSampleId::kBackgroundAttachment:
      return "kBackgroundAttachment";
    case CSSSampleId::kBackgroundClip:
      return "kBackgroundClip";
    case CSSSampleId::kBackgroundColor:
      return "kBackgroundColor";
    case CSSSampleId::kBackgroundImage:
      return "kBackgroundImage";
    case CSSSampleId::kBackgroundOrigin:
      return "kBackgroundOrigin";
    case CSSSampleId::kBackgroundPosition:
      return "kBackgroundPosition";
    case CSSSampleId::kBackgroundPositionX:
      return "kBackgroundPositionX";
    case CSSSampleId::kBackgroundPositionY:
      return "kBackgroundPositionY";
    case CSSSampleId::kBackgroundRepeat:
      return "kBackgroundRepeat";
    case CSSSampleId::kBackgroundRepeatX:
      return "kBackgroundRepeatX";
    case CSSSampleId::kBackgroundRepeatY:
      return "kBackgroundRepeatY";
    case CSSSampleId::kBackgroundSize:
      return "kBackgroundSize";
    case CSSSampleId::kBorder:
      return "kBorder";
    case CSSSampleId::kBorderBottom:
      return "kBorderBottom";
    case CSSSampleId::kBorderBottomColor:
      return "kBorderBottomColor";
    case CSSSampleId::kBorderBottomLeftRadius:
      return "kBorderBottomLeftRadius";
    case CSSSampleId::kBorderBottomRightRadius:
      return "kBorderBottomRightRadius";
    case CSSSampleId::kBorderBottomStyle:
      return "kBorderBottomStyle";
    case CSSSampleId::kBorderBottomWidth:
      return "kBorderBottomWidth";
    case CSSSampleId::kBorderCollapse:
      return "kBorderCollapse";
    case CSSSampleId::kBorderColor:
      return "kBorderColor";
    case CSSSampleId::kBorderImage:
      return "kBorderImage";
    case CSSSampleId::kBorderImageOutset:
      return "kBorderImageOutset";
    case CSSSampleId::kBorderImageRepeat:
      return "kBorderImageRepeat";
    case CSSSampleId::kBorderImageSlice:
      return "kBorderImageSlice";
    case CSSSampleId::kBorderImageSource:
      return "kBorderImageSource";
    case CSSSampleId::kBorderImageWidth:
      return "kBorderImageWidth";
    case CSSSampleId::kBorderLeft:
      return "kBorderLeft";
    case CSSSampleId::kBorderLeftColor:
      return "kBorderLeftColor";
    case CSSSampleId::kBorderLeftStyle:
      return "kBorderLeftStyle";
    case CSSSampleId::kBorderLeftWidth:
      return "kBorderLeftWidth";
    case CSSSampleId::kBorderRadius:
      return "kBorderRadius";
    case CSSSampleId::kBorderRight:
      return "kBorderRight";
    case CSSSampleId::kBorderRightColor:
      return "kBorderRightColor";
    case CSSSampleId::kBorderRightStyle:
      return "kBorderRightStyle";
    case CSSSampleId::kBorderRightWidth:
      return "kBorderRightWidth";
    case CSSSampleId::kBorderSpacing:
      return "kBorderSpacing";
    case CSSSampleId::kBorderStyle:
      return "kBorderStyle";
    case CSSSampleId::kBorderTop:
      return "kBorderTop";
    case CSSSampleId::kBorderTopColor:
      return "kBorderTopColor";
    case CSSSampleId::kBorderTopLeftRadius:
      return "kBorderTopLeftRadius";
    case CSSSampleId::kBorderTopRightRadius:
      return "kBorderTopRightRadius";
    case CSSSampleId::kBorderTopStyle:
      return "kBorderTopStyle";
    case CSSSampleId::kBorderTopWidth:
      return "kBorderTopWidth";
    case CSSSampleId::kBorderWidth:
      return "kBorderWidth";
    case CSSSampleId::kBottom:
      return "kBottom";
    case CSSSampleId::kBoxShadow:
      return "kBoxShadow";
    case CSSSampleId::kBoxSizing:
      return "kBoxSizing";
    case CSSSampleId::kCaptionSide:
      return "kCaptionSide";
    case CSSSampleId::kClear:
      return "kClear";
    case CSSSampleId::kClip:
      return "kClip";
    case CSSSampleId::kAliasWebkitClipPath:
      return "kAliasWebkitClipPath";
    case CSSSampleId::kContent:
      return "kContent";
    case CSSSampleId::kCounterIncrement:
      return "kCounterIncrement";
    case CSSSampleId::kCounterReset:
      return "kCounterReset";
    case CSSSampleId::kCursor:
      return "kCursor";
    case CSSSampleId::kEmptyCells:
      return "kEmptyCells";
    case CSSSampleId::kFloat:
      return "kFloat";
    case CSSSampleId::kFontStretch:
      return "kFontStretch";
    case CSSSampleId::kHeight:
      return "kHeight";
    case CSSSampleId::kImageRendering:
      return "kImageRendering";
    case CSSSampleId::kLeft:
      return "kLeft";
    case CSSSampleId::kLetterSpacing:
      return "kLetterSpacing";
    case CSSSampleId::kListStyle:
      return "kListStyle";
    case CSSSampleId::kListStyleImage:
      return "kListStyleImage";
    case CSSSampleId::kListStylePosition:
      return "kListStylePosition";
    case CSSSampleId::kListStyleType:
      return "kListStyleType";
    case CSSSampleId::kMargin:
      return "kMargin";
    case CSSSampleId::kMarginBottom:
      return "kMarginBottom";
    case CSSSampleId::kMarginLeft:
      return "kMarginLeft";
    case CSSSampleId::kMarginRight:
      return "kMarginRight";
    case CSSSampleId::kMarginTop:
      return "kMarginTop";
    case CSSSampleId::kMaxHeight:
      return "kMaxHeight";
    case CSSSampleId::kMaxWidth:
      return "kMaxWidth";
    case CSSSampleId::kMinHeight:
      return "kMinHeight";
    case CSSSampleId::kMinWidth:
      return "kMinWidth";
    case CSSSampleId::kOpacity:
      return "kOpacity";
    case CSSSampleId::kOrphans:
      return "kOrphans";
    case CSSSampleId::kOutline:
      return "kOutline";
    case CSSSampleId::kOutlineColor:
      return "kOutlineColor";
    case CSSSampleId::kOutlineOffset:
      return "kOutlineOffset";
    case CSSSampleId::kOutlineStyle:
      return "kOutlineStyle";
    case CSSSampleId::kOutlineWidth:
      return "kOutlineWidth";
    case CSSSampleId::kOverflow:
      return "kOverflow";
    case CSSSampleId::kOverflowWrap:
      return "kOverflowWrap";
    case CSSSampleId::kOverflowX:
      return "kOverflowX";
    case CSSSampleId::kOverflowY:
      return "kOverflowY";
    case CSSSampleId::kPadding:
      return "kPadding";
    case CSSSampleId::kPaddingBottom:
      return "kPaddingBottom";
    case CSSSampleId::kPaddingLeft:
      return "kPaddingLeft";
    case CSSSampleId::kPaddingRight:
      return "kPaddingRight";
    case CSSSampleId::kPaddingTop:
      return "kPaddingTop";
    case CSSSampleId::kPage:
      return "kPage";
    case CSSSampleId::kPageBreakAfter:
      return "kPageBreakAfter";
    case CSSSampleId::kPageBreakBefore:
      return "kPageBreakBefore";
    case CSSSampleId::kPageBreakInside:
      return "kPageBreakInside";
    case CSSSampleId::kPointerEvents:
      return "kPointerEvents";
    case CSSSampleId::kPosition:
      return "kPosition";
    case CSSSampleId::kQuotes:
      return "kQuotes";
    case CSSSampleId::kResize:
      return "kResize";
    case CSSSampleId::kRight:
      return "kRight";
    case CSSSampleId::kSize:
      return "kSize";
    case CSSSampleId::kSrc:
      return "kSrc";
    case CSSSampleId::kSpeak:
      return "kSpeak";
    case CSSSampleId::kTableLayout:
      return "kTableLayout";
    case CSSSampleId::kTabSize:
      return "kTabSize";
    case CSSSampleId::kTextAlign:
      return "kTextAlign";
    case CSSSampleId::kTextDecoration:
      return "kTextDecoration";
    case CSSSampleId::kTextIndent:
      return "kTextIndent";
    case CSSSampleId::kTextOverflow:
      return "kTextOverflow";
    case CSSSampleId::kTextShadow:
      return "kTextShadow";
    case CSSSampleId::kTextTransform:
      return "kTextTransform";
    case CSSSampleId::kTop:
      return "kTop";
    case CSSSampleId::kTransition:
      return "kTransition";
    case CSSSampleId::kTransitionDelay:
      return "kTransitionDelay";
    case CSSSampleId::kTransitionDuration:
      return "kTransitionDuration";
    case CSSSampleId::kTransitionProperty:
      return "kTransitionProperty";
    case CSSSampleId::kTransitionTimingFunction:
      return "kTransitionTimingFunction";
    case CSSSampleId::kUnicodeBidi:
      return "kUnicodeBidi";
    case CSSSampleId::kUnicodeRange:
      return "kUnicodeRange";
    case CSSSampleId::kVerticalAlign:
      return "kVerticalAlign";
    case CSSSampleId::kVisibility:
      return "kVisibility";
    case CSSSampleId::kWhiteSpace:
      return "kWhiteSpace";
    case CSSSampleId::kWidows:
      return "kWidows";
    case CSSSampleId::kWidth:
      return "kWidth";
    case CSSSampleId::kWordBreak:
      return "kWordBreak";
    case CSSSampleId::kWordSpacing:
      return "kWordSpacing";
    case CSSSampleId::kAliasWordWrap:
      return "kAliasWordWrap";
    case CSSSampleId::kZIndex:
      return "kZIndex";
    case CSSSampleId::kAliasWebkitAnimation:
      return "kAliasWebkitAnimation";
    case CSSSampleId::kAliasWebkitAnimationDelay:
      return "kAliasWebkitAnimationDelay";
    case CSSSampleId::kAliasWebkitAnimationDirection:
      return "kAliasWebkitAnimationDirection";
    case CSSSampleId::kAliasWebkitAnimationDuration:
      return "kAliasWebkitAnimationDuration";
    case CSSSampleId::kAliasWebkitAnimationFillMode:
      return "kAliasWebkitAnimationFillMode";
    case CSSSampleId::kAliasWebkitAnimationIterationCount:
      return "kAliasWebkitAnimationIterationCount";
    case CSSSampleId::kAliasWebkitAnimationName:
      return "kAliasWebkitAnimationName";
    case CSSSampleId::kAliasWebkitAnimationPlayState:
      return "kAliasWebkitAnimationPlayState";
    case CSSSampleId::kAliasWebkitAnimationTimingFunction:
      return "kAliasWebkitAnimationTimingFunction";
    case CSSSampleId::kAliasWebkitAppearance:
      return "kAliasWebkitAppearance";
    case CSSSampleId::kAliasWebkitBackfaceVisibility:
      return "kAliasWebkitBackfaceVisibility";
    case CSSSampleId::kAliasWebkitBackgroundClip:
      return "kAliasWebkitBackgroundClip";
    case CSSSampleId::kAliasWebkitBackgroundOrigin:
      return "kAliasWebkitBackgroundOrigin";
    case CSSSampleId::kAliasWebkitBackgroundSize:
      return "kAliasWebkitBackgroundSize";
    case CSSSampleId::kAliasWebkitBorderAfter:
      return "kAliasWebkitBorderAfter";
    case CSSSampleId::kAliasWebkitBorderAfterColor:
      return "kAliasWebkitBorderAfterColor";
    case CSSSampleId::kAliasWebkitBorderAfterStyle:
      return "kAliasWebkitBorderAfterStyle";
    case CSSSampleId::kAliasWebkitBorderAfterWidth:
      return "kAliasWebkitBorderAfterWidth";
    case CSSSampleId::kAliasWebkitBorderBefore:
      return "kAliasWebkitBorderBefore";
    case CSSSampleId::kAliasWebkitBorderBeforeColor:
      return "kAliasWebkitBorderBeforeColor";
    case CSSSampleId::kAliasWebkitBorderBeforeStyle:
      return "kAliasWebkitBorderBeforeStyle";
    case CSSSampleId::kAliasWebkitBorderBeforeWidth:
      return "kAliasWebkitBorderBeforeWidth";
    case CSSSampleId::kAliasWebkitBorderEnd:
      return "kAliasWebkitBorderEnd";
    case CSSSampleId::kAliasWebkitBorderEndColor:
      return "kAliasWebkitBorderEndColor";
    case CSSSampleId::kAliasWebkitBorderEndStyle:
      return "kAliasWebkitBorderEndStyle";
    case CSSSampleId::kAliasWebkitBorderEndWidth:
      return "kAliasWebkitBorderEndWidth";
    case CSSSampleId::kWebkitBorderHorizontalSpacing:
      return "kWebkitBorderHorizontalSpacing";
    case CSSSampleId::kWebkitBorderImage:
      return "kWebkitBorderImage";
    case CSSSampleId::kAliasWebkitBorderRadius:
      return "kAliasWebkitBorderRadius";
    case CSSSampleId::kAliasWebkitBorderStart:
      return "kAliasWebkitBorderStart";
    case CSSSampleId::kAliasWebkitBorderStartColor:
      return "kAliasWebkitBorderStartColor";
    case CSSSampleId::kAliasWebkitBorderStartStyle:
      return "kAliasWebkitBorderStartStyle";
    case CSSSampleId::kAliasWebkitBorderStartWidth:
      return "kAliasWebkitBorderStartWidth";
    case CSSSampleId::kWebkitBorderVerticalSpacing:
      return "kWebkitBorderVerticalSpacing";
    case CSSSampleId::kWebkitBoxAlign:
      return "kWebkitBoxAlign";
    case CSSSampleId::kWebkitBoxDirection:
      return "kWebkitBoxDirection";
    case CSSSampleId::kWebkitBoxFlex:
      return "kWebkitBoxFlex";
    case CSSSampleId::kWebkitBoxOrdinalGroup:
      return "kWebkitBoxOrdinalGroup";
    case CSSSampleId::kWebkitBoxOrient:
      return "kWebkitBoxOrient";
    case CSSSampleId::kWebkitBoxPack:
      return "kWebkitBoxPack";
    case CSSSampleId::kWebkitBoxReflect:
      return "kWebkitBoxReflect";
    case CSSSampleId::kAliasWebkitBoxShadow:
      return "kAliasWebkitBoxShadow";
    case CSSSampleId::kWebkitColumnBreakAfter:
      return "kWebkitColumnBreakAfter";
    case CSSSampleId::kWebkitColumnBreakBefore:
      return "kWebkitColumnBreakBefore";
    case CSSSampleId::kWebkitColumnBreakInside:
      return "kWebkitColumnBreakInside";
    case CSSSampleId::kAliasWebkitColumnCount:
      return "kAliasWebkitColumnCount";
    case CSSSampleId::kAliasWebkitColumnGap:
      return "kAliasWebkitColumnGap";
    case CSSSampleId::kAliasWebkitColumnRule:
      return "kAliasWebkitColumnRule";
    case CSSSampleId::kAliasWebkitColumnRuleColor:
      return "kAliasWebkitColumnRuleColor";
    case CSSSampleId::kAliasWebkitColumnRuleStyle:
      return "kAliasWebkitColumnRuleStyle";
    case CSSSampleId::kAliasWebkitColumnRuleWidth:
      return "kAliasWebkitColumnRuleWidth";
    case CSSSampleId::kAliasWebkitColumnSpan:
      return "kAliasWebkitColumnSpan";
    case CSSSampleId::kAliasWebkitColumnWidth:
      return "kAliasWebkitColumnWidth";
    case CSSSampleId::kAliasWebkitColumns:
      return "kAliasWebkitColumns";
    case CSSSampleId::kAlignContent:
      return "kAlignContent";
    case CSSSampleId::kAlignItems:
      return "kAlignItems";
    case CSSSampleId::kAlignSelf:
      return "kAlignSelf";
    case CSSSampleId::kFlex:
      return "kFlex";
    case CSSSampleId::kFlexBasis:
      return "kFlexBasis";
    case CSSSampleId::kFlexDirection:
      return "kFlexDirection";
    case CSSSampleId::kFlexFlow:
      return "kFlexFlow";
    case CSSSampleId::kFlexGrow:
      return "kFlexGrow";
    case CSSSampleId::kFlexShrink:
      return "kFlexShrink";
    case CSSSampleId::kFlexWrap:
      return "kFlexWrap";
    case CSSSampleId::kJustifyContent:
      return "kJustifyContent";
    case CSSSampleId::kGridTemplateColumns:
      return "kGridTemplateColumns";
    case CSSSampleId::kGridTemplateRows:
      return "kGridTemplateRows";
    case CSSSampleId::kGridColumnStart:
      return "kGridColumnStart";
    case CSSSampleId::kGridColumnEnd:
      return "kGridColumnEnd";
    case CSSSampleId::kGridRowStart:
      return "kGridRowStart";
    case CSSSampleId::kGridRowEnd:
      return "kGridRowEnd";
    case CSSSampleId::kGridColumn:
      return "kGridColumn";
    case CSSSampleId::kGridRow:
      return "kGridRow";
    case CSSSampleId::kGridAutoFlow:
      return "kGridAutoFlow";
    case CSSSampleId::kWebkitHighlight:
      return "kWebkitHighlight";
    case CSSSampleId::kWebkitHyphenateCharacter:
      return "kWebkitHyphenateCharacter";
    case CSSSampleId::kWebkitLineBreak:
      return "kWebkitLineBreak";
    case CSSSampleId::kWebkitLineClamp:
      return "kWebkitLineClamp";
    case CSSSampleId::kAliasWebkitLogicalWidth:
      return "kAliasWebkitLogicalWidth";
    case CSSSampleId::kAliasWebkitLogicalHeight:
      return "kAliasWebkitLogicalHeight";
    case CSSSampleId::kWebkitMarginAfterCollapse:
      return "kWebkitMarginAfterCollapse";
    case CSSSampleId::kWebkitMarginBeforeCollapse:
      return "kWebkitMarginBeforeCollapse";
    case CSSSampleId::kWebkitMarginBottomCollapse:
      return "kWebkitMarginBottomCollapse";
    case CSSSampleId::kWebkitMarginTopCollapse:
      return "kWebkitMarginTopCollapse";
    case CSSSampleId::kWebkitMarginCollapse:
      return "kWebkitMarginCollapse";
    case CSSSampleId::kAliasWebkitMarginAfter:
      return "kAliasWebkitMarginAfter";
    case CSSSampleId::kAliasWebkitMarginBefore:
      return "kAliasWebkitMarginBefore";
    case CSSSampleId::kAliasWebkitMarginEnd:
      return "kAliasWebkitMarginEnd";
    case CSSSampleId::kAliasWebkitMarginStart:
      return "kAliasWebkitMarginStart";
    case CSSSampleId::kWebkitMask:
      return "kWebkitMask";
    case CSSSampleId::kWebkitMaskBoxImage:
      return "kWebkitMaskBoxImage";
    case CSSSampleId::kWebkitMaskBoxImageOutset:
      return "kWebkitMaskBoxImageOutset";
    case CSSSampleId::kWebkitMaskBoxImageRepeat:
      return "kWebkitMaskBoxImageRepeat";
    case CSSSampleId::kWebkitMaskBoxImageSlice:
      return "kWebkitMaskBoxImageSlice";
    case CSSSampleId::kWebkitMaskBoxImageSource:
      return "kWebkitMaskBoxImageSource";
    case CSSSampleId::kWebkitMaskBoxImageWidth:
      return "kWebkitMaskBoxImageWidth";
    case CSSSampleId::kWebkitMaskClip:
      return "kWebkitMaskClip";
    case CSSSampleId::kWebkitMaskComposite:
      return "kWebkitMaskComposite";
    case CSSSampleId::kWebkitMaskImage:
      return "kWebkitMaskImage";
    case CSSSampleId::kWebkitMaskOrigin:
      return "kWebkitMaskOrigin";
    case CSSSampleId::kWebkitMaskPosition:
      return "kWebkitMaskPosition";
    case CSSSampleId::kWebkitMaskPositionX:
      return "kWebkitMaskPositionX";
    case CSSSampleId::kWebkitMaskPositionY:
      return "kWebkitMaskPositionY";
    case CSSSampleId::kWebkitMaskRepeat:
      return "kWebkitMaskRepeat";
    case CSSSampleId::kWebkitMaskRepeatX:
      return "kWebkitMaskRepeatX";
    case CSSSampleId::kWebkitMaskRepeatY:
      return "kWebkitMaskRepeatY";
    case CSSSampleId::kWebkitMaskSize:
      return "kWebkitMaskSize";
    case CSSSampleId::kAliasWebkitMaxLogicalWidth:
      return "kAliasWebkitMaxLogicalWidth";
    case CSSSampleId::kAliasWebkitMaxLogicalHeight:
      return "kAliasWebkitMaxLogicalHeight";
    case CSSSampleId::kAliasWebkitMinLogicalWidth:
      return "kAliasWebkitMinLogicalWidth";
    case CSSSampleId::kAliasWebkitMinLogicalHeight:
      return "kAliasWebkitMinLogicalHeight";
    case CSSSampleId::kOrder:
      return "kOrder";
    case CSSSampleId::kAliasWebkitPaddingAfter:
      return "kAliasWebkitPaddingAfter";
    case CSSSampleId::kAliasWebkitPaddingBefore:
      return "kAliasWebkitPaddingBefore";
    case CSSSampleId::kAliasWebkitPaddingEnd:
      return "kAliasWebkitPaddingEnd";
    case CSSSampleId::kAliasWebkitPaddingStart:
      return "kAliasWebkitPaddingStart";
    case CSSSampleId::kAliasWebkitPerspective:
      return "kAliasWebkitPerspective";
    case CSSSampleId::kAliasWebkitPerspectiveOrigin:
      return "kAliasWebkitPerspectiveOrigin";
    case CSSSampleId::kWebkitPerspectiveOriginX:
      return "kWebkitPerspectiveOriginX";
    case CSSSampleId::kWebkitPerspectiveOriginY:
      return "kWebkitPerspectiveOriginY";
    case CSSSampleId::kWebkitPrintColorAdjust:
      return "kWebkitPrintColorAdjust";
    case CSSSampleId::kWebkitRtlOrdering:
      return "kWebkitRtlOrdering";
    case CSSSampleId::kWebkitRubyPosition:
      return "kWebkitRubyPosition";
    case CSSSampleId::kWebkitTextCombine:
      return "kWebkitTextCombine";
    case CSSSampleId::kWebkitTextDecorationsInEffect:
      return "kWebkitTextDecorationsInEffect";
    case CSSSampleId::kAliasWebkitTextEmphasis:
      return "kAliasWebkitTextEmphasis";
    case CSSSampleId::kAliasWebkitTextEmphasisColor:
      return "kAliasWebkitTextEmphasisColor";
    case CSSSampleId::kAliasWebkitTextEmphasisPosition:
      return "kAliasWebkitTextEmphasisPosition";
    case CSSSampleId::kAliasWebkitTextEmphasisStyle:
      return "kAliasWebkitTextEmphasisStyle";
    case CSSSampleId::kWebkitTextFillColor:
      return "kWebkitTextFillColor";
    case CSSSampleId::kWebkitTextSecurity:
      return "kWebkitTextSecurity";
    case CSSSampleId::kWebkitTextStroke:
      return "kWebkitTextStroke";
    case CSSSampleId::kWebkitTextStrokeColor:
      return "kWebkitTextStrokeColor";
    case CSSSampleId::kWebkitTextStrokeWidth:
      return "kWebkitTextStrokeWidth";
    case CSSSampleId::kAliasWebkitTransform:
      return "kAliasWebkitTransform";
    case CSSSampleId::kAliasWebkitTransformOrigin:
      return "kAliasWebkitTransformOrigin";
    case CSSSampleId::kWebkitTransformOriginX:
      return "kWebkitTransformOriginX";
    case CSSSampleId::kWebkitTransformOriginY:
      return "kWebkitTransformOriginY";
    case CSSSampleId::kWebkitTransformOriginZ:
      return "kWebkitTransformOriginZ";
    case CSSSampleId::kAliasWebkitTransformStyle:
      return "kAliasWebkitTransformStyle";
    case CSSSampleId::kAliasWebkitTransition:
      return "kAliasWebkitTransition";
    case CSSSampleId::kAliasWebkitTransitionDelay:
      return "kAliasWebkitTransitionDelay";
    case CSSSampleId::kAliasWebkitTransitionDuration:
      return "kAliasWebkitTransitionDuration";
    case CSSSampleId::kAliasWebkitTransitionProperty:
      return "kAliasWebkitTransitionProperty";
    case CSSSampleId::kAliasWebkitTransitionTimingFunction:
      return "kAliasWebkitTransitionTimingFunction";
    case CSSSampleId::kWebkitUserDrag:
      return "kWebkitUserDrag";
    case CSSSampleId::kWebkitUserModify:
      return "kWebkitUserModify";
    case CSSSampleId::kAliasWebkitUserSelect:
      return "kAliasWebkitUserSelect";
    case CSSSampleId::kShapeOutside:
      return "kShapeOutside";
    case CSSSampleId::kShapeMargin:
      return "kShapeMargin";
    case CSSSampleId::kClipPath:
      return "kClipPath";
    case CSSSampleId::kClipRule:
      return "kClipRule";
    case CSSSampleId::kMask:
      return "kMask";
    case CSSSampleId::kFilter:
      return "kFilter";
    case CSSSampleId::kFloodColor:
      return "kFloodColor";
    case CSSSampleId::kFloodOpacity:
      return "kFloodOpacity";
    case CSSSampleId::kLightingColor:
      return "kLightingColor";
    case CSSSampleId::kStopColor:
      return "kStopColor";
    case CSSSampleId::kStopOpacity:
      return "kStopOpacity";
    case CSSSampleId::kColorInterpolation:
      return "kColorInterpolation";
    case CSSSampleId::kColorInterpolationFilters:
      return "kColorInterpolationFilters";
    case CSSSampleId::kColorRendering:
      return "kColorRendering";
    case CSSSampleId::kFill:
      return "kFill";
    case CSSSampleId::kFillOpacity:
      return "kFillOpacity";
    case CSSSampleId::kFillRule:
      return "kFillRule";
    case CSSSampleId::kMarker:
      return "kMarker";
    case CSSSampleId::kMarkerEnd:
      return "kMarkerEnd";
    case CSSSampleId::kMarkerMid:
      return "kMarkerMid";
    case CSSSampleId::kMarkerStart:
      return "kMarkerStart";
    case CSSSampleId::kMaskType:
      return "kMaskType";
    case CSSSampleId::kShapeRendering:
      return "kShapeRendering";
    case CSSSampleId::kStroke:
      return "kStroke";
    case CSSSampleId::kStrokeDasharray:
      return "kStrokeDasharray";
    case CSSSampleId::kStrokeDashoffset:
      return "kStrokeDashoffset";
    case CSSSampleId::kStrokeLinecap:
      return "kStrokeLinecap";
    case CSSSampleId::kStrokeLinejoin:
      return "kStrokeLinejoin";
    case CSSSampleId::kStrokeMiterlimit:
      return "kStrokeMiterlimit";
    case CSSSampleId::kStrokeOpacity:
      return "kStrokeOpacity";
    case CSSSampleId::kStrokeWidth:
      return "kStrokeWidth";
    case CSSSampleId::kAlignmentBaseline:
      return "kAlignmentBaseline";
    case CSSSampleId::kBaselineShift:
      return "kBaselineShift";
    case CSSSampleId::kDominantBaseline:
      return "kDominantBaseline";
    case CSSSampleId::kTextAnchor:
      return "kTextAnchor";
    case CSSSampleId::kVectorEffect:
      return "kVectorEffect";
    case CSSSampleId::kWritingMode:
      return "kWritingMode";
    case CSSSampleId::kTextDecorationLine:
      return "kTextDecorationLine";
    case CSSSampleId::kTextDecorationStyle:
      return "kTextDecorationStyle";
    case CSSSampleId::kTextDecorationColor:
      return "kTextDecorationColor";
    case CSSSampleId::kTextAlignLast:
      return "kTextAlignLast";
    case CSSSampleId::kTextUnderlinePosition:
      return "kTextUnderlinePosition";
    case CSSSampleId::kMaxZoom:
      return "kMaxZoom";
    case CSSSampleId::kMinZoom:
      return "kMinZoom";
    case CSSSampleId::kOrientation:
      return "kOrientation";
    case CSSSampleId::kUserZoom:
      return "kUserZoom";
    case CSSSampleId::kAliasWebkitAppRegion:
      return "kAliasWebkitAppRegion";
    case CSSSampleId::kAliasWebkitFilter:
      return "kAliasWebkitFilter";
    case CSSSampleId::kWebkitBoxDecorationBreak:
      return "kWebkitBoxDecorationBreak";
    case CSSSampleId::kWebkitTapHighlightColor:
      return "kWebkitTapHighlightColor";
    case CSSSampleId::kBufferedRendering:
      return "kBufferedRendering";
    case CSSSampleId::kGridAutoRows:
      return "kGridAutoRows";
    case CSSSampleId::kGridAutoColumns:
      return "kGridAutoColumns";
    case CSSSampleId::kBackgroundBlendMode:
      return "kBackgroundBlendMode";
    case CSSSampleId::kMixBlendMode:
      return "kMixBlendMode";
    case CSSSampleId::kTouchAction:
      return "kTouchAction";
    case CSSSampleId::kGridArea:
      return "kGridArea";
    case CSSSampleId::kGridTemplateAreas:
      return "kGridTemplateAreas";
    case CSSSampleId::kAnimation:
      return "kAnimation";
    case CSSSampleId::kAnimationDelay:
      return "kAnimationDelay";
    case CSSSampleId::kAnimationDirection:
      return "kAnimationDirection";
    case CSSSampleId::kAnimationDuration:
      return "kAnimationDuration";
    case CSSSampleId::kAnimationFillMode:
      return "kAnimationFillMode";
    case CSSSampleId::kAnimationIterationCount:
      return "kAnimationIterationCount";
    case CSSSampleId::kAnimationName:
      return "kAnimationName";
    case CSSSampleId::kAnimationPlayState:
      return "kAnimationPlayState";
    case CSSSampleId::kAnimationTimingFunction:
      return "kAnimationTimingFunction";
    case CSSSampleId::kObjectFit:
      return "kObjectFit";
    case CSSSampleId::kPaintOrder:
      return "kPaintOrder";
    case CSSSampleId::kMaskSourceType:
      return "kMaskSourceType";
    case CSSSampleId::kIsolation:
      return "kIsolation";
    case CSSSampleId::kObjectPosition:
      return "kObjectPosition";
    case CSSSampleId::kShapeImageThreshold:
      return "kShapeImageThreshold";
    case CSSSampleId::kColumnFill:
      return "kColumnFill";
    case CSSSampleId::kTextJustify:
      return "kTextJustify";
    case CSSSampleId::kJustifySelf:
      return "kJustifySelf";
    case CSSSampleId::kScrollBehavior:
      return "kScrollBehavior";
    case CSSSampleId::kWillChange:
      return "kWillChange";
    case CSSSampleId::kTransform:
      return "kTransform";
    case CSSSampleId::kTransformOrigin:
      return "kTransformOrigin";
    case CSSSampleId::kTransformStyle:
      return "kTransformStyle";
    case CSSSampleId::kPerspective:
      return "kPerspective";
    case CSSSampleId::kPerspectiveOrigin:
      return "kPerspectiveOrigin";
    case CSSSampleId::kBackfaceVisibility:
      return "kBackfaceVisibility";
    case CSSSampleId::kGridTemplate:
      return "kGridTemplate";
    case CSSSampleId::kGrid:
      return "kGrid";
    case CSSSampleId::kAll:
      return "kAll";
    case CSSSampleId::kJustifyItems:
      return "kJustifyItems";
    case CSSSampleId::kX:
      return "kX";
    case CSSSampleId::kY:
      return "kY";
    case CSSSampleId::kRx:
      return "kRx";
    case CSSSampleId::kRy:
      return "kRy";
    case CSSSampleId::kFontSizeAdjust:
      return "kFontSizeAdjust";
    case CSSSampleId::kCx:
      return "kCx";
    case CSSSampleId::kCy:
      return "kCy";
    case CSSSampleId::kR:
      return "kR";
    case CSSSampleId::kAliasEpubCaptionSide:
      return "kAliasEpubCaptionSide";
    case CSSSampleId::kAliasEpubTextCombine:
      return "kAliasEpubTextCombine";
    case CSSSampleId::kAliasEpubTextEmphasis:
      return "kAliasEpubTextEmphasis";
    case CSSSampleId::kAliasEpubTextEmphasisColor:
      return "kAliasEpubTextEmphasisColor";
    case CSSSampleId::kAliasEpubTextEmphasisStyle:
      return "kAliasEpubTextEmphasisStyle";
    case CSSSampleId::kAliasEpubTextOrientation:
      return "kAliasEpubTextOrientation";
    case CSSSampleId::kAliasEpubTextTransform:
      return "kAliasEpubTextTransform";
    case CSSSampleId::kAliasEpubWordBreak:
      return "kAliasEpubWordBreak";
    case CSSSampleId::kAliasEpubWritingMode:
      return "kAliasEpubWritingMode";
    case CSSSampleId::kAliasWebkitAlignContent:
      return "kAliasWebkitAlignContent";
    case CSSSampleId::kAliasWebkitAlignItems:
      return "kAliasWebkitAlignItems";
    case CSSSampleId::kAliasWebkitAlignSelf:
      return "kAliasWebkitAlignSelf";
    case CSSSampleId::kAliasWebkitBorderBottomLeftRadius:
      return "kAliasWebkitBorderBottomLeftRadius";
    case CSSSampleId::kAliasWebkitBorderBottomRightRadius:
      return "kAliasWebkitBorderBottomRightRadius";
    case CSSSampleId::kAliasWebkitBorderTopLeftRadius:
      return "kAliasWebkitBorderTopLeftRadius";
    case CSSSampleId::kAliasWebkitBorderTopRightRadius:
      return "kAliasWebkitBorderTopRightRadius";
    case CSSSampleId::kAliasWebkitBoxSizing:
      return "kAliasWebkitBoxSizing";
    case CSSSampleId::kAliasWebkitFlex:
      return "kAliasWebkitFlex";
    case CSSSampleId::kAliasWebkitFlexBasis:
      return "kAliasWebkitFlexBasis";
    case CSSSampleId::kAliasWebkitFlexDirection:
      return "kAliasWebkitFlexDirection";
    case CSSSampleId::kAliasWebkitFlexFlow:
      return "kAliasWebkitFlexFlow";
    case CSSSampleId::kAliasWebkitFlexGrow:
      return "kAliasWebkitFlexGrow";
    case CSSSampleId::kAliasWebkitFlexShrink:
      return "kAliasWebkitFlexShrink";
    case CSSSampleId::kAliasWebkitFlexWrap:
      return "kAliasWebkitFlexWrap";
    case CSSSampleId::kAliasWebkitJustifyContent:
      return "kAliasWebkitJustifyContent";
    case CSSSampleId::kAliasWebkitOpacity:
      return "kAliasWebkitOpacity";
    case CSSSampleId::kAliasWebkitOrder:
      return "kAliasWebkitOrder";
    case CSSSampleId::kAliasWebkitShapeImageThreshold:
      return "kAliasWebkitShapeImageThreshold";
    case CSSSampleId::kAliasWebkitShapeMargin:
      return "kAliasWebkitShapeMargin";
    case CSSSampleId::kAliasWebkitShapeOutside:
      return "kAliasWebkitShapeOutside";
    case CSSSampleId::kScrollSnapType:
      return "kScrollSnapType";
    case CSSSampleId::kTranslate:
      return "kTranslate";
    case CSSSampleId::kRotate:
      return "kRotate";
    case CSSSampleId::kScale:
      return "kScale";
    case CSSSampleId::kImageOrientation:
      return "kImageOrientation";
    case CSSSampleId::kBackdropFilter:
      return "kBackdropFilter";
    case CSSSampleId::kTextCombineUpright:
      return "kTextCombineUpright";
    case CSSSampleId::kTextOrientation:
      return "kTextOrientation";
    case CSSSampleId::kGridColumnGap:
      return "kGridColumnGap";
    case CSSSampleId::kGridRowGap:
      return "kGridRowGap";
    case CSSSampleId::kGridGap:
      return "kGridGap";
    case CSSSampleId::kFontFeatureSettings:
      return "kFontFeatureSettings";
    case CSSSampleId::kVariable:
      return "kVariable";
    case CSSSampleId::kFontDisplay:
      return "kFontDisplay";
    case CSSSampleId::kContain:
      return "kContain";
    case CSSSampleId::kD:
      return "kD";
    case CSSSampleId::kLineHeightStep:
      return "kLineHeightStep";
    case CSSSampleId::kBreakAfter:
      return "kBreakAfter";
    case CSSSampleId::kBreakBefore:
      return "kBreakBefore";
    case CSSSampleId::kBreakInside:
      return "kBreakInside";
    case CSSSampleId::kColumnCount:
      return "kColumnCount";
    case CSSSampleId::kColumnGap:
      return "kColumnGap";
    case CSSSampleId::kColumnRule:
      return "kColumnRule";
    case CSSSampleId::kColumnRuleColor:
      return "kColumnRuleColor";
    case CSSSampleId::kColumnRuleStyle:
      return "kColumnRuleStyle";
    case CSSSampleId::kColumnRuleWidth:
      return "kColumnRuleWidth";
    case CSSSampleId::kColumnSpan:
      return "kColumnSpan";
    case CSSSampleId::kColumnWidth:
      return "kColumnWidth";
    case CSSSampleId::kColumns:
      return "kColumns";
    case CSSSampleId::kFontVariantCaps:
      return "kFontVariantCaps";
    case CSSSampleId::kHyphens:
      return "kHyphens";
    case CSSSampleId::kFontVariantNumeric:
      return "kFontVariantNumeric";
    case CSSSampleId::kTextSizeAdjust:
      return "kTextSizeAdjust";
    case CSSSampleId::kAliasWebkitTextSizeAdjust:
      return "kAliasWebkitTextSizeAdjust";
    case CSSSampleId::kOverflowAnchor:
      return "kOverflowAnchor";
    case CSSSampleId::kUserSelect:
      return "kUserSelect";
    case CSSSampleId::kOffsetDistance:
      return "kOffsetDistance";
    case CSSSampleId::kOffsetPath:
      return "kOffsetPath";
    case CSSSampleId::kOffset:
      return "kOffset";
    case CSSSampleId::kOffsetAnchor:
      return "kOffsetAnchor";
    case CSSSampleId::kOffsetPosition:
      return "kOffsetPosition";
    case CSSSampleId::kCaretColor:
      return "kCaretColor";
    case CSSSampleId::kOffsetRotate:
      return "kOffsetRotate";
    case CSSSampleId::kFontVariationSettings:
      return "kFontVariationSettings";
    case CSSSampleId::kInlineSize:
      return "kInlineSize";
    case CSSSampleId::kBlockSize:
      return "kBlockSize";
    case CSSSampleId::kMinInlineSize:
      return "kMinInlineSize";
    case CSSSampleId::kMinBlockSize:
      return "kMinBlockSize";
    case CSSSampleId::kMaxInlineSize:
      return "kMaxInlineSize";
    case CSSSampleId::kMaxBlockSize:
      return "kMaxBlockSize";
    case CSSSampleId::kLineBreak:
      return "kLineBreak";
    case CSSSampleId::kPlaceContent:
      return "kPlaceContent";
    case CSSSampleId::kPlaceItems:
      return "kPlaceItems";
    case CSSSampleId::kTransformBox:
      return "kTransformBox";
    case CSSSampleId::kPlaceSelf:
      return "kPlaceSelf";
    case CSSSampleId::kScrollSnapAlign:
      return "kScrollSnapAlign";
    case CSSSampleId::kScrollPadding:
      return "kScrollPadding";
    case CSSSampleId::kScrollPaddingTop:
      return "kScrollPaddingTop";
    case CSSSampleId::kScrollPaddingRight:
      return "kScrollPaddingRight";
    case CSSSampleId::kScrollPaddingBottom:
      return "kScrollPaddingBottom";
    case CSSSampleId::kScrollPaddingLeft:
      return "kScrollPaddingLeft";
    case CSSSampleId::kScrollPaddingBlock:
      return "kScrollPaddingBlock";
    case CSSSampleId::kScrollPaddingBlockStart:
      return "kScrollPaddingBlockStart";
    case CSSSampleId::kScrollPaddingBlockEnd:
      return "kScrollPaddingBlockEnd";
    case CSSSampleId::kScrollPaddingInline:
      return "kScrollPaddingInline";
    case CSSSampleId::kScrollPaddingInlineStart:
      return "kScrollPaddingInlineStart";
    case CSSSampleId::kScrollPaddingInlineEnd:
      return "kScrollPaddingInlineEnd";
    case CSSSampleId::kScrollMargin:
      return "kScrollMargin";
    case CSSSampleId::kScrollMarginTop:
      return "kScrollMarginTop";
    case CSSSampleId::kScrollMarginRight:
      return "kScrollMarginRight";
    case CSSSampleId::kScrollMarginBottom:
      return "kScrollMarginBottom";
    case CSSSampleId::kScrollMarginLeft:
      return "kScrollMarginLeft";
    case CSSSampleId::kScrollMarginBlock:
      return "kScrollMarginBlock";
    case CSSSampleId::kScrollMarginBlockStart:
      return "kScrollMarginBlockStart";
    case CSSSampleId::kScrollMarginBlockEnd:
      return "kScrollMarginBlockEnd";
    case CSSSampleId::kScrollMarginInline:
      return "kScrollMarginInline";
    case CSSSampleId::kScrollMarginInlineStart:
      return "kScrollMarginInlineStart";
    case CSSSampleId::kScrollMarginInlineEnd:
      return "kScrollMarginInlineEnd";
    case CSSSampleId::kScrollSnapStop:
      return "kScrollSnapStop";
    case CSSSampleId::kOverscrollBehavior:
      return "kOverscrollBehavior";
    case CSSSampleId::kOverscrollBehaviorX:
      return "kOverscrollBehaviorX";
    case CSSSampleId::kOverscrollBehaviorY:
      return "kOverscrollBehaviorY";
    case CSSSampleId::kFontVariantEastAsian:
      return "kFontVariantEastAsian";
    case CSSSampleId::kTextDecorationSkipInk:
      return "kTextDecorationSkipInk";
    case CSSSampleId::kScrollCustomization:
      return "kScrollCustomization";
    case CSSSampleId::kRowGap:
      return "kRowGap";
    case CSSSampleId::kGap:
      return "kGap";
    case CSSSampleId::kViewportFit:
      return "kViewportFit";
    case CSSSampleId::kMarginBlockStart:
      return "kMarginBlockStart";
    case CSSSampleId::kMarginBlockEnd:
      return "kMarginBlockEnd";
    case CSSSampleId::kMarginInlineStart:
      return "kMarginInlineStart";
    case CSSSampleId::kMarginInlineEnd:
      return "kMarginInlineEnd";
    case CSSSampleId::kPaddingBlockStart:
      return "kPaddingBlockStart";
    case CSSSampleId::kPaddingBlockEnd:
      return "kPaddingBlockEnd";
    case CSSSampleId::kPaddingInlineStart:
      return "kPaddingInlineStart";
    case CSSSampleId::kPaddingInlineEnd:
      return "kPaddingInlineEnd";
    case CSSSampleId::kBorderBlockEndColor:
      return "kBorderBlockEndColor";
    case CSSSampleId::kBorderBlockEndStyle:
      return "kBorderBlockEndStyle";
    case CSSSampleId::kBorderBlockEndWidth:
      return "kBorderBlockEndWidth";
    case CSSSampleId::kBorderBlockStartColor:
      return "kBorderBlockStartColor";
    case CSSSampleId::kBorderBlockStartStyle:
      return "kBorderBlockStartStyle";
    case CSSSampleId::kBorderBlockStartWidth:
      return "kBorderBlockStartWidth";
    case CSSSampleId::kBorderInlineEndColor:
      return "kBorderInlineEndColor";
    case CSSSampleId::kBorderInlineEndStyle:
      return "kBorderInlineEndStyle";
    case CSSSampleId::kBorderInlineEndWidth:
      return "kBorderInlineEndWidth";
    case CSSSampleId::kBorderInlineStartColor:
      return "kBorderInlineStartColor";
    case CSSSampleId::kBorderInlineStartStyle:
      return "kBorderInlineStartStyle";
    case CSSSampleId::kBorderInlineStartWidth:
      return "kBorderInlineStartWidth";
    case CSSSampleId::kBorderBlockStart:
      return "kBorderBlockStart";
    case CSSSampleId::kBorderBlockEnd:
      return "kBorderBlockEnd";
    case CSSSampleId::kBorderInlineStart:
      return "kBorderInlineStart";
    case CSSSampleId::kBorderInlineEnd:
      return "kBorderInlineEnd";
    case CSSSampleId::kMarginBlock:
      return "kMarginBlock";
    case CSSSampleId::kMarginInline:
      return "kMarginInline";
    case CSSSampleId::kPaddingBlock:
      return "kPaddingBlock";
    case CSSSampleId::kPaddingInline:
      return "kPaddingInline";
    case CSSSampleId::kBorderBlockColor:
      return "kBorderBlockColor";
    case CSSSampleId::kBorderBlockStyle:
      return "kBorderBlockStyle";
    case CSSSampleId::kBorderBlockWidth:
      return "kBorderBlockWidth";
    case CSSSampleId::kBorderInlineColor:
      return "kBorderInlineColor";
    case CSSSampleId::kBorderInlineStyle:
      return "kBorderInlineStyle";
    case CSSSampleId::kBorderInlineWidth:
      return "kBorderInlineWidth";
    case CSSSampleId::kBorderBlock:
      return "kBorderBlock";
    case CSSSampleId::kBorderInline:
      return "kBorderInline";
    case CSSSampleId::kInsetBlockStart:
      return "kInsetBlockStart";
    case CSSSampleId::kInsetBlockEnd:
      return "kInsetBlockEnd";
    case CSSSampleId::kInsetBlock:
      return "kInsetBlock";
    case CSSSampleId::kInsetInlineStart:
      return "kInsetInlineStart";
    case CSSSampleId::kInsetInlineEnd:
      return "kInsetInlineEnd";
    case CSSSampleId::kInsetInline:
      return "kInsetInline";
    case CSSSampleId::kInset:
      return "kInset";
    case CSSSampleId::kColorScheme:
      return "kColorScheme";
    case CSSSampleId::kOverflowInline:
      return "kOverflowInline";
    case CSSSampleId::kOverflowBlock:
      return "kOverflowBlock";
    case CSSSampleId::kForcedColorAdjust:
      return "kForcedColorAdjust";
    case CSSSampleId::kInherits:
      return "kInherits";
    case CSSSampleId::kInitialValue:
      return "kInitialValue";
    case CSSSampleId::kSyntax:
      return "kSyntax";
    case CSSSampleId::kOverscrollBehaviorInline:
      return "kOverscrollBehaviorInline";
    case CSSSampleId::kOverscrollBehaviorBlock:
      return "kOverscrollBehaviorBlock";
    case CSSSampleId::kFontOpticalSizing:
      return "kFontOpticalSizing";
    case CSSSampleId::kContainIntrinsicBlockSize:
      return "kContainIntrinsicBlockSize";
    case CSSSampleId::kContainIntrinsicHeight:
      return "kContainIntrinsicHeight";
    case CSSSampleId::kContainIntrinsicInlineSize:
      return "kContainIntrinsicInlineSize";
    case CSSSampleId::kContainIntrinsicSize:
      return "kContainIntrinsicSize";
    case CSSSampleId::kContainIntrinsicWidth:
      return "kContainIntrinsicWidth";
    case CSSSampleId::kOriginTrialTestProperty:
      return "kOriginTrialTestProperty";
    case CSSSampleId::kMathStyle:
      return "kMathStyle";
    case CSSSampleId::kAspectRatio:
      return "kAspectRatio";
    case CSSSampleId::kAppearance:
      return "kAppearance";
    case CSSSampleId::kRubyPosition:
      return "kRubyPosition";
    case CSSSampleId::kTextUnderlineOffset:
      return "kTextUnderlineOffset";
    case CSSSampleId::kContentVisibility:
      return "kContentVisibility";
    case CSSSampleId::kTextDecorationThickness:
      return "kTextDecorationThickness";
    case CSSSampleId::kPageOrientation:
      return "kPageOrientation";
    case CSSSampleId::kAnimationTimeline:
      return "kAnimationTimeline";
    case CSSSampleId::kCounterSet:
      return "kCounterSet";
    case CSSSampleId::kSource:
      return "kSource";
    case CSSSampleId::kStart:
      return "kStart";
    case CSSSampleId::kEnd:
      return "kEnd";
    case CSSSampleId::kTimeRange:
      return "kTimeRange";
    case CSSSampleId::kScrollbarGutter:
      return "kScrollbarGutter";
    case CSSSampleId::kAscentOverride:
      return "kAscentOverride";
    case CSSSampleId::kDescentOverride:
      return "kDescentOverride";
    case CSSSampleId::kAdvanceOverride:
      return "kAdvanceOverride";
    case CSSSampleId::kLineGapOverride:
      return "kLineGapOverride";
    case CSSSampleId::kMathShift:
      return "kMathShift";
    case CSSSampleId::kMathDepth:
      return "kMathDepth";
    case CSSSampleId::kOverflowClipMargin:
      return "kOverflowClipMargin";
    case CSSSampleId::kScrollbarWidth:
      return "kScrollbarWidth";
    case CSSSampleId::kSystem:
      return "kSystem";
    case CSSSampleId::kNegative:
      return "kNegative";
    case CSSSampleId::kPrefix:
      return "kPrefix";
    case CSSSampleId::kSuffix:
      return "kSuffix";
    case CSSSampleId::kRange:
      return "kRange";
    case CSSSampleId::kPad:
      return "kPad";
    case CSSSampleId::kFallback:
      return "kFallback";
    case CSSSampleId::kSymbols:
      return "kSymbols";
    case CSSSampleId::kAdditiveSymbols:
      return "kAdditiveSymbols";
    case CSSSampleId::kSpeakAs:
      return "kSpeakAs";
    case CSSSampleId::kBorderStartStartRadius:
      return "kBorderStartStartRadius";
    case CSSSampleId::kBorderStartEndRadius:
      return "kBorderStartEndRadius";
    case CSSSampleId::kBorderEndStartRadius:
      return "kBorderEndStartRadius";
    case CSSSampleId::kBorderEndEndRadius:
      return "kBorderEndEndRadius";
    case CSSSampleId::kAccentColor:
      return "kAccentColor";
    case CSSSampleId::kSizeAdjust:
      return "kSizeAdjust";
    case CSSSampleId::kContainerName:
      return "kContainerName";
    case CSSSampleId::kContainerType:
      return "kContainerType";
    case CSSSampleId::kContainer:
      return "kContainer";
    case CSSSampleId::kFontSynthesisWeight:
      return "kFontSynthesisWeight";
    case CSSSampleId::kFontSynthesisStyle:
      return "kFontSynthesisStyle";
    case CSSSampleId::kAppRegion:
      return "kAppRegion";
    case CSSSampleId::kFontSynthesisSmallCaps:
      return "kFontSynthesisSmallCaps";
    case CSSSampleId::kFontSynthesis:
      return "kFontSynthesis";
    case CSSSampleId::kTextEmphasis:
      return "kTextEmphasis";
    case CSSSampleId::kTextEmphasisColor:
      return "kTextEmphasisColor";
    case CSSSampleId::kTextEmphasisPosition:
      return "kTextEmphasisPosition";
    case CSSSampleId::kTextEmphasisStyle:
      return "kTextEmphasisStyle";
    case CSSSampleId::kFontPalette:
      return "kFontPalette";
    case CSSSampleId::kBasePalette:
      return "kBasePalette";
    case CSSSampleId::kOverrideColors:
      return "kOverrideColors";
    case CSSSampleId::kPageTransitionTag:
      return "kPageTransitionTag";
    case CSSSampleId::kObjectViewBox:
      return "kObjectViewBox";
    case CSSSampleId::kObjectOverflow:
      return "kObjectOverflow";
    case CSSSampleId::kToggleGroup:
      return "kToggleGroup";
    case CSSSampleId::kToggleRoot:
      return "kToggleRoot";
    case CSSSampleId::kToggleTrigger:
      return "kToggleTrigger";
    case CSSSampleId::kToggle:
      return "kToggle";
    case CSSSampleId::kAnchorName:
      return "kAnchorName";
    case CSSSampleId::kPositionFallback:
      return "kPositionFallback";
    case CSSSampleId::kAnchorScroll:
      return "kAnchorScroll";
    case CSSSampleId::kPopUpShowDelay:
      return "kPopUpShowDelay";
    case CSSSampleId::kPopUpHideDelay:
      return "kPopUpHideDelay";
    default:
      return nullptr;
  }
}

std::string CSSSampleIdToString(CSSSampleId value) {
  const char *str = CSSSampleIdToStringHelper(value);
  if (!str) {
    return base::StringPrintf("Unknown CSSSampleId value: %i", static_cast<int32_t>(value));
  }
  return str;
}

std::ostream& operator<<(std::ostream& os, CSSSampleId value) {
  return os << CSSSampleIdToString(value);
}

namespace internal {

}  // namespace internal
}  // namespace mojom
}  // namespace blink

namespace perfetto {

// static
void TraceFormatTraits<::blink::mojom::CSSSampleId>::WriteIntoTrace(
   perfetto::TracedValue context, ::blink::mojom::CSSSampleId value) {
  return std::move(context).WriteString(::blink::mojom::CSSSampleIdToString(value));
}

} // namespace perfetto