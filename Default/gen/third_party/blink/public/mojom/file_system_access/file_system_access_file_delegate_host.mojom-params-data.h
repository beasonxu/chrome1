// third_party/blink/public/mojom/file_system_access/file_system_access_file_delegate_host.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_FILE_SYSTEM_ACCESS_FILE_SYSTEM_ACCESS_FILE_DELEGATE_HOST_MOJOM_PARAMS_DATA_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_FILE_SYSTEM_ACCESS_FILE_SYSTEM_ACCESS_FILE_DELEGATE_HOST_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace blink {
namespace mojom {
namespace internal {

class ValidationContext;
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FileSystemAccessFileDelegateHost_Read_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t offset;
  int32_t bytes_to_read;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<FileSystemAccessFileDelegateHost_Read_Params_Data>;

  FileSystemAccessFileDelegateHost_Read_Params_Data();
  ~FileSystemAccessFileDelegateHost_Read_Params_Data() = delete;
};
static_assert(sizeof(FileSystemAccessFileDelegateHost_Read_Params_Data) == 24,
              "Bad sizeof(FileSystemAccessFileDelegateHost_Read_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FileSystemAccessFileDelegateHost_Read_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  ::mojo_base::mojom::internal::BigBuffer_Data data;
  int32_t error;
  int32_t bytes_read;

 private:
  friend class mojo::internal::MessageFragment<FileSystemAccessFileDelegateHost_Read_ResponseParams_Data>;

  FileSystemAccessFileDelegateHost_Read_ResponseParams_Data();
  ~FileSystemAccessFileDelegateHost_Read_ResponseParams_Data() = delete;
};
static_assert(sizeof(FileSystemAccessFileDelegateHost_Read_ResponseParams_Data) == 32,
              "Bad sizeof(FileSystemAccessFileDelegateHost_Read_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FileSystemAccessFileDelegateHost_Write_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t offset;
  mojo::internal::Handle_Data data;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<FileSystemAccessFileDelegateHost_Write_Params_Data>;

  FileSystemAccessFileDelegateHost_Write_Params_Data();
  ~FileSystemAccessFileDelegateHost_Write_Params_Data() = delete;
};
static_assert(sizeof(FileSystemAccessFileDelegateHost_Write_Params_Data) == 24,
              "Bad sizeof(FileSystemAccessFileDelegateHost_Write_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FileSystemAccessFileDelegateHost_Write_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t error;
  int32_t bytes_written;

 private:
  friend class mojo::internal::MessageFragment<FileSystemAccessFileDelegateHost_Write_ResponseParams_Data>;

  FileSystemAccessFileDelegateHost_Write_ResponseParams_Data();
  ~FileSystemAccessFileDelegateHost_Write_ResponseParams_Data() = delete;
};
static_assert(sizeof(FileSystemAccessFileDelegateHost_Write_ResponseParams_Data) == 16,
              "Bad sizeof(FileSystemAccessFileDelegateHost_Write_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FileSystemAccessFileDelegateHost_GetLength_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<FileSystemAccessFileDelegateHost_GetLength_Params_Data>;

  FileSystemAccessFileDelegateHost_GetLength_Params_Data();
  ~FileSystemAccessFileDelegateHost_GetLength_Params_Data() = delete;
};
static_assert(sizeof(FileSystemAccessFileDelegateHost_GetLength_Params_Data) == 8,
              "Bad sizeof(FileSystemAccessFileDelegateHost_GetLength_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FileSystemAccessFileDelegateHost_GetLength_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t error;
  uint8_t pad0_[4];
  uint64_t length;

 private:
  friend class mojo::internal::MessageFragment<FileSystemAccessFileDelegateHost_GetLength_ResponseParams_Data>;

  FileSystemAccessFileDelegateHost_GetLength_ResponseParams_Data();
  ~FileSystemAccessFileDelegateHost_GetLength_ResponseParams_Data() = delete;
};
static_assert(sizeof(FileSystemAccessFileDelegateHost_GetLength_ResponseParams_Data) == 24,
              "Bad sizeof(FileSystemAccessFileDelegateHost_GetLength_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FileSystemAccessFileDelegateHost_SetLength_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t length;

 private:
  friend class mojo::internal::MessageFragment<FileSystemAccessFileDelegateHost_SetLength_Params_Data>;

  FileSystemAccessFileDelegateHost_SetLength_Params_Data();
  ~FileSystemAccessFileDelegateHost_SetLength_Params_Data() = delete;
};
static_assert(sizeof(FileSystemAccessFileDelegateHost_SetLength_Params_Data) == 16,
              "Bad sizeof(FileSystemAccessFileDelegateHost_SetLength_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) FileSystemAccessFileDelegateHost_SetLength_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t error;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<FileSystemAccessFileDelegateHost_SetLength_ResponseParams_Data>;

  FileSystemAccessFileDelegateHost_SetLength_ResponseParams_Data();
  ~FileSystemAccessFileDelegateHost_SetLength_ResponseParams_Data() = delete;
};
static_assert(sizeof(FileSystemAccessFileDelegateHost_SetLength_ResponseParams_Data) == 16,
              "Bad sizeof(FileSystemAccessFileDelegateHost_SetLength_ResponseParams_Data)");

}  // namespace internal


class FileSystemAccessFileDelegateHost_Read_ParamsDataView {
 public:
  FileSystemAccessFileDelegateHost_Read_ParamsDataView() = default;

  FileSystemAccessFileDelegateHost_Read_ParamsDataView(
      internal::FileSystemAccessFileDelegateHost_Read_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int64_t offset() const {
    return data_->offset;
  }
  int32_t bytes_to_read() const {
    return data_->bytes_to_read;
  }
 private:
  internal::FileSystemAccessFileDelegateHost_Read_Params_Data* data_ = nullptr;
};



class FileSystemAccessFileDelegateHost_Read_ResponseParamsDataView {
 public:
  FileSystemAccessFileDelegateHost_Read_ResponseParamsDataView() = default;

  FileSystemAccessFileDelegateHost_Read_ResponseParamsDataView(
      internal::FileSystemAccessFileDelegateHost_Read_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetDataDataView(
      ::mojo_base::mojom::BigBufferDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadData(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::mojo_base::mojom::BigBufferDataView, UserType>(),
    "Attempting to read the optional `data` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadData` instead "
    "of `ReadData if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = !data_->data.is_null() ? &data_->data : nullptr;
    return mojo::internal::Deserialize<::mojo_base::mojom::BigBufferDataView>(
        pointer, output, message_);
  }
  template <typename UserType>
  [[nodiscard]] bool ReadError(UserType* output) const {
    auto data_value = data_->error;
    return mojo::internal::Deserialize<::mojo_base::mojom::FileError>(
        data_value, output);
  }
  ::mojo_base::mojom::FileError error() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::mojo_base::mojom::FileError>(data_->error));
  }
  int32_t bytes_read() const {
    return data_->bytes_read;
  }
 private:
  internal::FileSystemAccessFileDelegateHost_Read_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class FileSystemAccessFileDelegateHost_Write_ParamsDataView {
 public:
  FileSystemAccessFileDelegateHost_Write_ParamsDataView() = default;

  FileSystemAccessFileDelegateHost_Write_ParamsDataView(
      internal::FileSystemAccessFileDelegateHost_Write_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  int64_t offset() const {
    return data_->offset;
  }
  mojo::ScopedDataPipeConsumerHandle TakeData() {
    mojo::ScopedDataPipeConsumerHandle result;
    bool ret =
        mojo::internal::Deserialize<mojo::ScopedDataPipeConsumerHandle>(
            &data_->data, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::FileSystemAccessFileDelegateHost_Write_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class FileSystemAccessFileDelegateHost_Write_ResponseParamsDataView {
 public:
  FileSystemAccessFileDelegateHost_Write_ResponseParamsDataView() = default;

  FileSystemAccessFileDelegateHost_Write_ResponseParamsDataView(
      internal::FileSystemAccessFileDelegateHost_Write_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadError(UserType* output) const {
    auto data_value = data_->error;
    return mojo::internal::Deserialize<::mojo_base::mojom::FileError>(
        data_value, output);
  }
  ::mojo_base::mojom::FileError error() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::mojo_base::mojom::FileError>(data_->error));
  }
  int32_t bytes_written() const {
    return data_->bytes_written;
  }
 private:
  internal::FileSystemAccessFileDelegateHost_Write_ResponseParams_Data* data_ = nullptr;
};



class FileSystemAccessFileDelegateHost_GetLength_ParamsDataView {
 public:
  FileSystemAccessFileDelegateHost_GetLength_ParamsDataView() = default;

  FileSystemAccessFileDelegateHost_GetLength_ParamsDataView(
      internal::FileSystemAccessFileDelegateHost_GetLength_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::FileSystemAccessFileDelegateHost_GetLength_Params_Data* data_ = nullptr;
};



class FileSystemAccessFileDelegateHost_GetLength_ResponseParamsDataView {
 public:
  FileSystemAccessFileDelegateHost_GetLength_ResponseParamsDataView() = default;

  FileSystemAccessFileDelegateHost_GetLength_ResponseParamsDataView(
      internal::FileSystemAccessFileDelegateHost_GetLength_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadError(UserType* output) const {
    auto data_value = data_->error;
    return mojo::internal::Deserialize<::mojo_base::mojom::FileError>(
        data_value, output);
  }
  ::mojo_base::mojom::FileError error() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::mojo_base::mojom::FileError>(data_->error));
  }
  uint64_t length() const {
    return data_->length;
  }
 private:
  internal::FileSystemAccessFileDelegateHost_GetLength_ResponseParams_Data* data_ = nullptr;
};



class FileSystemAccessFileDelegateHost_SetLength_ParamsDataView {
 public:
  FileSystemAccessFileDelegateHost_SetLength_ParamsDataView() = default;

  FileSystemAccessFileDelegateHost_SetLength_ParamsDataView(
      internal::FileSystemAccessFileDelegateHost_SetLength_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int64_t length() const {
    return data_->length;
  }
 private:
  internal::FileSystemAccessFileDelegateHost_SetLength_Params_Data* data_ = nullptr;
};



class FileSystemAccessFileDelegateHost_SetLength_ResponseParamsDataView {
 public:
  FileSystemAccessFileDelegateHost_SetLength_ResponseParamsDataView() = default;

  FileSystemAccessFileDelegateHost_SetLength_ResponseParamsDataView(
      internal::FileSystemAccessFileDelegateHost_SetLength_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadError(UserType* output) const {
    auto data_value = data_->error;
    return mojo::internal::Deserialize<::mojo_base::mojom::FileError>(
        data_value, output);
  }
  ::mojo_base::mojom::FileError error() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::mojo_base::mojom::FileError>(data_->error));
  }
 private:
  internal::FileSystemAccessFileDelegateHost_SetLength_ResponseParams_Data* data_ = nullptr;
};




inline void FileSystemAccessFileDelegateHost_Read_ResponseParamsDataView::GetDataDataView(
    ::mojo_base::mojom::BigBufferDataView* output) {
  auto pointer = &data_->data;
  *output = ::mojo_base::mojom::BigBufferDataView(pointer, message_);
}













}  // namespace mojom
}  // namespace blink

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_FILE_SYSTEM_ACCESS_FILE_SYSTEM_ACCESS_FILE_DELEGATE_HOST_MOJOM_PARAMS_DATA_H_