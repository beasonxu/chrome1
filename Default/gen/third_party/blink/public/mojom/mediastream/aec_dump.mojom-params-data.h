// third_party/blink/public/mojom/mediastream/aec_dump.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_MEDIASTREAM_AEC_DUMP_MOJOM_PARAMS_DATA_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_MEDIASTREAM_AEC_DUMP_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace blink {
namespace mojom {
namespace internal {

class ValidationContext;
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) AecDumpAgent_Start_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::mojo_base::mojom::internal::File_Data> file;

 private:
  friend class mojo::internal::MessageFragment<AecDumpAgent_Start_Params_Data>;

  AecDumpAgent_Start_Params_Data();
  ~AecDumpAgent_Start_Params_Data() = delete;
};
static_assert(sizeof(AecDumpAgent_Start_Params_Data) == 16,
              "Bad sizeof(AecDumpAgent_Start_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) AecDumpAgent_Stop_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<AecDumpAgent_Stop_Params_Data>;

  AecDumpAgent_Stop_Params_Data();
  ~AecDumpAgent_Stop_Params_Data() = delete;
};
static_assert(sizeof(AecDumpAgent_Stop_Params_Data) == 8,
              "Bad sizeof(AecDumpAgent_Stop_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) AecDumpManager_Add_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Interface_Data agent;

 private:
  friend class mojo::internal::MessageFragment<AecDumpManager_Add_Params_Data>;

  AecDumpManager_Add_Params_Data();
  ~AecDumpManager_Add_Params_Data() = delete;
};
static_assert(sizeof(AecDumpManager_Add_Params_Data) == 16,
              "Bad sizeof(AecDumpManager_Add_Params_Data)");

}  // namespace internal


class AecDumpAgent_Start_ParamsDataView {
 public:
  AecDumpAgent_Start_ParamsDataView() = default;

  AecDumpAgent_Start_ParamsDataView(
      internal::AecDumpAgent_Start_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetFileDataView(
      ::mojo_base::mojom::FileDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadFile(UserType* output) {
    
    auto* pointer = data_->file.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::FileDataView>(
        pointer, output, message_);
  }
 private:
  internal::AecDumpAgent_Start_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AecDumpAgent_Stop_ParamsDataView {
 public:
  AecDumpAgent_Stop_ParamsDataView() = default;

  AecDumpAgent_Stop_ParamsDataView(
      internal::AecDumpAgent_Stop_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::AecDumpAgent_Stop_Params_Data* data_ = nullptr;
};



class AecDumpManager_Add_ParamsDataView {
 public:
  AecDumpManager_Add_ParamsDataView() = default;

  AecDumpManager_Add_ParamsDataView(
      internal::AecDumpManager_Add_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeAgent() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfacePtrDataView<::blink::mojom::AecDumpAgentInterfaceBase>>(
            &data_->agent, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::AecDumpManager_Add_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};


inline void AecDumpAgent_Start_ParamsDataView::GetFileDataView(
    ::mojo_base::mojom::FileDataView* output) {
  auto pointer = data_->file.Get();
  *output = ::mojo_base::mojom::FileDataView(pointer, message_);
}





}  // namespace mojom
}  // namespace blink

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_MEDIASTREAM_AEC_DUMP_MOJOM_PARAMS_DATA_H_