// third_party/blink/public/mojom/indexeddb/indexeddb.mojom-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_INDEXEDDB_INDEXEDDB_MOJOM_FORWARD_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_INDEXEDDB_INDEXEDDB_MOJOM_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"
#include "third_party/blink/public/common/common_export.h"






namespace blink {
namespace mojom {
class IDBKeyPathDataView;

class IDBKeyRangeDataView;

class IDBIndexMetadataDataView;

class IDBObjectStoreMetadataDataView;

class IDBDatabaseMetadataDataView;

class IDBNameAndVersionDataView;

class IDBIndexKeysDataView;

class IDBFileInfoDataView;

class IDBBlobInfoDataView;

class IDBValueDataView;

class IDBReturnValueDataView;

class IDBErrorDataView;

class IDBCursorValueDataView;

class IDBDatabaseOpenCursorValueDataView;

class IDBKeyDataView;
class IDBKeyPathDataDataView;
class IDBExternalObjectDataView;
class IDBCursorResultDataView;
class IDBTransactionPutResultDataView;
class IDBDatabaseGetResultDataView;
class IDBDatabaseBatchGetAllResultDataView;
class IDBDatabaseOpenCursorResultDataView;

enum class IDBCursorDirection : int32_t;

enum class IDBDataLoss : int32_t;

enum class IDBKeyType : int32_t;

enum class IDBTransactionDurability : int32_t;

enum class IDBKeyPathType : int32_t;

enum class IDBOperationType : int32_t;

enum class IDBPutMode : int32_t;

enum class IDBTaskType : int32_t;

enum class IDBTransactionMode : int32_t;

enum class IDBStatus : int32_t;

enum class IDBException : int32_t;

constexpr int32_t kIDBMaxMessageSize = 134217728;

constexpr int32_t kIDBMaxMessageOverhead = 1048576;

constexpr int32_t kIDBWrapThreshold = 65536;

constexpr int32_t kIDBGetAllChunkSize = 1000;

constexpr uint32_t kIDBBatchGetAllMaxInputSize = 10000U;
class IDBKeyPath;
using IDBKeyPathPtr = mojo::StructPtr<IDBKeyPath>;

class IDBKeyRange;
using IDBKeyRangePtr = mojo::StructPtr<IDBKeyRange>;

class IDBIndexMetadata;
using IDBIndexMetadataPtr = mojo::StructPtr<IDBIndexMetadata>;

class IDBObjectStoreMetadata;
using IDBObjectStoreMetadataPtr = mojo::StructPtr<IDBObjectStoreMetadata>;

class IDBDatabaseMetadata;
using IDBDatabaseMetadataPtr = mojo::StructPtr<IDBDatabaseMetadata>;

class IDBNameAndVersion;
using IDBNameAndVersionPtr = mojo::StructPtr<IDBNameAndVersion>;

class IDBIndexKeys;
using IDBIndexKeysPtr = mojo::StructPtr<IDBIndexKeys>;

class IDBFileInfo;
using IDBFileInfoPtr = mojo::StructPtr<IDBFileInfo>;

class IDBBlobInfo;
using IDBBlobInfoPtr = mojo::StructPtr<IDBBlobInfo>;

class IDBValue;
using IDBValuePtr = mojo::StructPtr<IDBValue>;

class IDBReturnValue;
using IDBReturnValuePtr = mojo::StructPtr<IDBReturnValue>;

class IDBError;
using IDBErrorPtr = mojo::StructPtr<IDBError>;

class IDBCursorValue;
using IDBCursorValuePtr = mojo::StructPtr<IDBCursorValue>;

class IDBDatabaseOpenCursorValue;
using IDBDatabaseOpenCursorValuePtr = mojo::StructPtr<IDBDatabaseOpenCursorValue>;

class IDBKey;

using IDBKeyPtr = mojo::StructPtr<IDBKey>;

class IDBKeyPathData;

using IDBKeyPathDataPtr = mojo::StructPtr<IDBKeyPathData>;

class IDBExternalObject;

using IDBExternalObjectPtr = mojo::StructPtr<IDBExternalObject>;

class IDBCursorResult;

using IDBCursorResultPtr = mojo::StructPtr<IDBCursorResult>;

class IDBTransactionPutResult;

using IDBTransactionPutResultPtr = mojo::StructPtr<IDBTransactionPutResult>;

class IDBDatabaseGetResult;

using IDBDatabaseGetResultPtr = mojo::StructPtr<IDBDatabaseGetResult>;

class IDBDatabaseBatchGetAllResult;

using IDBDatabaseBatchGetAllResultPtr = mojo::StructPtr<IDBDatabaseBatchGetAllResult>;

class IDBDatabaseOpenCursorResult;

using IDBDatabaseOpenCursorResultPtr = mojo::StructPtr<IDBDatabaseOpenCursorResult>;

class IDBCallbacks;

class IDBDatabaseCallbacks;

class IDBCursor;

class IDBTransaction;

class IDBDatabaseGetAllResultSink;

class IDBDatabase;

class IDBFactory;




}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_INDEXEDDB_INDEXEDDB_MOJOM_FORWARD_H_