// third_party/blink/public/mojom/hid/hid.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_HID_HID_MOJOM_TEST_UTILS_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_HID_HID_MOJOM_TEST_UTILS_H_

#include "third_party/blink/public/mojom/hid/hid.mojom.h"
#include "third_party/blink/public/common/common_export.h"


namespace blink {
namespace mojom {


class BLINK_COMMON_EXPORT HidServiceInterceptorForTesting : public HidService {
  virtual HidService* GetForwardingInterface() = 0;
  void RegisterClient(::mojo::PendingAssociatedRemote<::device::mojom::HidManagerClient> client) override;
  void GetDevices(GetDevicesCallback callback) override;
  void RequestDevice(std::vector<HidDeviceFilterPtr> filters, std::vector<HidDeviceFilterPtr> exclusion_filters, RequestDeviceCallback callback) override;
  void Connect(const std::string& device_guid, ::mojo::PendingRemote<::device::mojom::HidConnectionClient> client, ConnectCallback callback) override;
  void Forget(::device::mojom::HidDeviceInfoPtr device_info, ForgetCallback callback) override;
};
class BLINK_COMMON_EXPORT HidServiceAsyncWaiter {
 public:
  explicit HidServiceAsyncWaiter(HidService* proxy);

  HidServiceAsyncWaiter(const HidServiceAsyncWaiter&) = delete;
  HidServiceAsyncWaiter& operator=(const HidServiceAsyncWaiter&) = delete;

  ~HidServiceAsyncWaiter();
  void GetDevices(
      std::vector<::device::mojom::HidDeviceInfoPtr>* out_devices);
  void RequestDevice(
      std::vector<HidDeviceFilterPtr> filters, std::vector<HidDeviceFilterPtr> exclusion_filters, std::vector<::device::mojom::HidDeviceInfoPtr>* out_devices);
  void Connect(
      const std::string& device_guid, ::mojo::PendingRemote<::device::mojom::HidConnectionClient> client, ::mojo::PendingRemote<::device::mojom::HidConnection>* out_connection);
  void Forget(
      ::device::mojom::HidDeviceInfoPtr device_info);

 private:
  HidService* const proxy_;
};




}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_HID_HID_MOJOM_TEST_UTILS_H_