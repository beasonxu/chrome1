// third_party/blink/public/mojom/widget/device_emulation_params.mojom-lite.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';


mojo.internal.exportModule('blink.mojom');





/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
blink.mojom.EmulatedScreenTypeSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
blink.mojom.EmulatedScreenType = {
  
  kDesktop: 0,
  kMobile: 1,
  MIN_VALUE: 0,
  MAX_VALUE: 1,
};




/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.DeviceEmulationParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    blink.mojom.DeviceEmulationParamsSpec.$,
    'DeviceEmulationParams',
    [
      mojo.internal.StructField(
        'screenType', 0,
        0,
        blink.mojom.EmulatedScreenTypeSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'screenSize', 8,
        0,
        gfx.mojom.SizeSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'viewPosition', 16,
        0,
        gfx.mojom.PointSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'viewSize', 24,
        0,
        gfx.mojom.SizeSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'deviceScaleFactor', 4,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'scale', 32,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'viewportOffset', 40,
        0,
        gfx.mojom.PointFSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'viewportScale', 36,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'screenOrientationType', 48,
        0,
        display.mojom.ScreenOrientationSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'screenOrientationAngle', 52,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'windowSegments', 56,
        0,
        mojo.internal.Array(gfx.mojom.RectSpec.$, false),
        null,
        false /* nullable */),
    ],
    [[0, 72],]);





/** @record */
blink.mojom.DeviceEmulationParams = class {
  constructor() {
    /** @export { !blink.mojom.EmulatedScreenType } */
    this.screenType;
    /** @export { !number } */
    this.deviceScaleFactor;
    /** @export { !gfx.mojom.Size } */
    this.screenSize;
    /** @export { (gfx.mojom.Point|undefined) } */
    this.viewPosition;
    /** @export { !gfx.mojom.Size } */
    this.viewSize;
    /** @export { !number } */
    this.scale;
    /** @export { !number } */
    this.viewportScale;
    /** @export { !gfx.mojom.PointF } */
    this.viewportOffset;
    /** @export { !display.mojom.ScreenOrientation } */
    this.screenOrientationType;
    /** @export { !number } */
    this.screenOrientationAngle;
    /** @export { !Array<!gfx.mojom.Rect> } */
    this.windowSegments;
  }
};


