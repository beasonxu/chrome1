// third_party/blink/public/mojom/widget/visual_properties.mojom-lite-for-compile.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';

goog.require('mojo.internal');

goog.require('blink.mojom.DisplayMode');
goog.require('cc.mojom.BrowserControlsParams');
goog.require('viz.mojom.LocalSurfaceId');
goog.require('gfx.mojom.Rect');
goog.require('display.mojom.ScreenInfos');
goog.require('gfx.mojom.Size');






goog.provide('blink.mojom.VisualPropertiesSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.VisualPropertiesSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    blink.mojom.VisualPropertiesSpec.$,
    'VisualProperties',
    [
      mojo.internal.StructField(
        'screenInfos', 0,
        0,
        display.mojom.ScreenInfosSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'autoResizeEnabled', 8,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'minSizeForAutoResize', 16,
        0,
        gfx.mojom.SizeSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'maxSizeForAutoResize', 24,
        0,
        gfx.mojom.SizeSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'newSize', 32,
        0,
        gfx.mojom.SizeSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'visibleViewportSize', 40,
        0,
        gfx.mojom.SizeSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'compositorViewportPixelRect', 48,
        0,
        gfx.mojom.RectSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'browserControlsParams', 56,
        0,
        cc.mojom.BrowserControlsParamsSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'scrollFocusedNodeIntoView', 8,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'localSurfaceId', 64,
        0,
        viz.mojom.LocalSurfaceIdSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'isFullscreenGranted', 8,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'displayMode', 12,
        0,
        blink.mojom.DisplayModeSpec.$,
        blink.mojom.DisplayMode.kUndefined,
        false /* nullable */),
      mojo.internal.StructField(
        'captureSequenceNumber', 72,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'zoomLevel', 80,
        0,
        mojo.internal.Double,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'pageScaleFactor', 76,
        0,
        mojo.internal.Float,
        1,
        false /* nullable */),
      mojo.internal.StructField(
        'compositingScaleFactor', 88,
        0,
        mojo.internal.Float,
        1,
        false /* nullable */),
      mojo.internal.StructField(
        'rootWidgetWindowSegments', 96,
        0,
        mojo.internal.Array(gfx.mojom.RectSpec.$, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'isPinchGestureActive', 8,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'windowControlsOverlayRect', 104,
        0,
        gfx.mojom.RectSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 120],]);



goog.provide('blink.mojom.VisualProperties');

/** @record */
blink.mojom.VisualProperties = class {
  constructor() {
    /** @export { !display.mojom.ScreenInfos } */
    this.screenInfos;
    /** @export { !boolean } */
    this.autoResizeEnabled;
    /** @export { !boolean } */
    this.scrollFocusedNodeIntoView;
    /** @export { !boolean } */
    this.isFullscreenGranted;
    /** @export { !boolean } */
    this.isPinchGestureActive;
    /** @export { !blink.mojom.DisplayMode } */
    this.displayMode;
    /** @export { !gfx.mojom.Size } */
    this.minSizeForAutoResize;
    /** @export { !gfx.mojom.Size } */
    this.maxSizeForAutoResize;
    /** @export { !gfx.mojom.Size } */
    this.newSize;
    /** @export { !gfx.mojom.Size } */
    this.visibleViewportSize;
    /** @export { !gfx.mojom.Rect } */
    this.compositorViewportPixelRect;
    /** @export { !cc.mojom.BrowserControlsParams } */
    this.browserControlsParams;
    /** @export { (viz.mojom.LocalSurfaceId|undefined) } */
    this.localSurfaceId;
    /** @export { !number } */
    this.captureSequenceNumber;
    /** @export { !number } */
    this.pageScaleFactor;
    /** @export { !number } */
    this.zoomLevel;
    /** @export { !number } */
    this.compositingScaleFactor;
    /** @export { !Array<!gfx.mojom.Rect> } */
    this.rootWidgetWindowSegments;
    /** @export { !gfx.mojom.Rect } */
    this.windowControlsOverlayRect;
  }
};


