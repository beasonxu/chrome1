// third_party/blink/public/mojom/clipboard/clipboard.mojom-lite.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';


mojo.internal.exportModule('blink.mojom');





/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
blink.mojom.ClipboardFormatSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
blink.mojom.ClipboardFormat = {
  
  kPlaintext: 0,
  kHtml: 1,
  kSmartPaste: 2,
  kBookmark: 3,
  MIN_VALUE: 0,
  MAX_VALUE: 3,
};


/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
blink.mojom.ClipboardBufferSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
blink.mojom.ClipboardBuffer = {
  
  kStandard: 0,
  kSelection: 1,
  MIN_VALUE: 0,
  MAX_VALUE: 1,
};





/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
blink.mojom.ClipboardHostPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        blink.mojom.ClipboardHost.$interfaceName,
        scope);
  }
};



/**
 * @export
 * @implements { blink.mojom.ClipboardHostInterface }
 */
blink.mojom.ClipboardHostRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!blink.mojom.ClipboardHostPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          blink.mojom.ClipboardHostPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!blink.mojom.ClipboardHostPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !blink.mojom.ClipboardBuffer } buffer
   * @return {!Promise<{
        result: !blink.mojom.ClipboardSequenceNumberToken,
   *  }>}
   */

  getSequenceNumber(
      buffer) {
    return this.proxy.sendMessage(
        0,
        blink.mojom.ClipboardHost_GetSequenceNumber_ParamsSpec.$,
        blink.mojom.ClipboardHost_GetSequenceNumber_ResponseParamsSpec.$,
        [
          buffer
        ]);
  }

  
  /**
   * @param { !blink.mojom.ClipboardFormat } format
   * @param { !blink.mojom.ClipboardBuffer } buffer
   * @return {!Promise<{
        result: !boolean,
   *  }>}
   */

  isFormatAvailable(
      format,
      buffer) {
    return this.proxy.sendMessage(
        1,
        blink.mojom.ClipboardHost_IsFormatAvailable_ParamsSpec.$,
        blink.mojom.ClipboardHost_IsFormatAvailable_ResponseParamsSpec.$,
        [
          format,
          buffer
        ]);
  }

  
  /**
   * @param { !blink.mojom.ClipboardBuffer } buffer
   * @return {!Promise<{
        types: !Array<!mojoBase.mojom.String16>,
   *  }>}
   */

  readAvailableTypes(
      buffer) {
    return this.proxy.sendMessage(
        2,
        blink.mojom.ClipboardHost_ReadAvailableTypes_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadAvailableTypes_ResponseParamsSpec.$,
        [
          buffer
        ]);
  }

  
  /**
   * @param { !blink.mojom.ClipboardBuffer } buffer
   * @return {!Promise<{
        result: !mojoBase.mojom.BigString16,
   *  }>}
   */

  readText(
      buffer) {
    return this.proxy.sendMessage(
        3,
        blink.mojom.ClipboardHost_ReadText_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadText_ResponseParamsSpec.$,
        [
          buffer
        ]);
  }

  
  /**
   * @param { !blink.mojom.ClipboardBuffer } buffer
   * @return {!Promise<{
        markup: !mojoBase.mojom.BigString16,
        url: !url.mojom.Url,
        fragmentStart: !number,
        fragmentEnd: !number,
   *  }>}
   */

  readHtml(
      buffer) {
    return this.proxy.sendMessage(
        4,
        blink.mojom.ClipboardHost_ReadHtml_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadHtml_ResponseParamsSpec.$,
        [
          buffer
        ]);
  }

  
  /**
   * @param { !blink.mojom.ClipboardBuffer } buffer
   * @return {!Promise<{
        result: !mojoBase.mojom.BigString16,
   *  }>}
   */

  readSvg(
      buffer) {
    return this.proxy.sendMessage(
        5,
        blink.mojom.ClipboardHost_ReadSvg_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadSvg_ResponseParamsSpec.$,
        [
          buffer
        ]);
  }

  
  /**
   * @param { !blink.mojom.ClipboardBuffer } buffer
   * @return {!Promise<{
        result: !mojoBase.mojom.BigString,
   *  }>}
   */

  readRtf(
      buffer) {
    return this.proxy.sendMessage(
        6,
        blink.mojom.ClipboardHost_ReadRtf_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadRtf_ResponseParamsSpec.$,
        [
          buffer
        ]);
  }

  
  /**
   * @param { !blink.mojom.ClipboardBuffer } buffer
   * @return {!Promise<{
        png: !mojoBase.mojom.BigBuffer,
   *  }>}
   */

  readPng(
      buffer) {
    return this.proxy.sendMessage(
        7,
        blink.mojom.ClipboardHost_ReadPng_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadPng_ResponseParamsSpec.$,
        [
          buffer
        ]);
  }

  
  /**
   * @param { !blink.mojom.ClipboardBuffer } buffer
   * @return {!Promise<{
        result: !blink.mojom.ClipboardFiles,
   *  }>}
   */

  readFiles(
      buffer) {
    return this.proxy.sendMessage(
        8,
        blink.mojom.ClipboardHost_ReadFiles_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadFiles_ResponseParamsSpec.$,
        [
          buffer
        ]);
  }

  
  /**
   * @param { !blink.mojom.ClipboardBuffer } buffer
   * @param { !mojoBase.mojom.String16 } type
   * @return {!Promise<{
        result: !mojoBase.mojom.BigString16,
   *  }>}
   */

  readCustomData(
      buffer,
      type) {
    return this.proxy.sendMessage(
        9,
        blink.mojom.ClipboardHost_ReadCustomData_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadCustomData_ResponseParamsSpec.$,
        [
          buffer,
          type
        ]);
  }

  
  /**
   * @return {!Promise<{
        formatTypes: !Array<!mojoBase.mojom.String16>,
   *  }>}
   */

  readAvailableCustomAndStandardFormats() {
    return this.proxy.sendMessage(
        10,
        blink.mojom.ClipboardHost_ReadAvailableCustomAndStandardFormats_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadAvailableCustomAndStandardFormats_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.String16 } format
   * @return {!Promise<{
        data: !mojoBase.mojom.BigBuffer,
   *  }>}
   */

  readUnsanitizedCustomFormat(
      format) {
    return this.proxy.sendMessage(
        11,
        blink.mojom.ClipboardHost_ReadUnsanitizedCustomFormat_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadUnsanitizedCustomFormat_ResponseParamsSpec.$,
        [
          format
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.BigString16 } text
   */

  writeText(
      text) {
    this.proxy.sendMessage(
        12,
        blink.mojom.ClipboardHost_WriteText_ParamsSpec.$,
        null,
        [
          text
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.BigString16 } markup
   * @param { !url.mojom.Url } url
   */

  writeHtml(
      markup,
      url) {
    this.proxy.sendMessage(
        13,
        blink.mojom.ClipboardHost_WriteHtml_ParamsSpec.$,
        null,
        [
          markup,
          url
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.BigString16 } markup
   */

  writeSvg(
      markup) {
    this.proxy.sendMessage(
        14,
        blink.mojom.ClipboardHost_WriteSvg_ParamsSpec.$,
        null,
        [
          markup
        ]);
  }

  
  /**
   */

  writeSmartPasteMarker() {
    this.proxy.sendMessage(
        15,
        blink.mojom.ClipboardHost_WriteSmartPasteMarker_ParamsSpec.$,
        null,
        [
        ]);
  }

  
  /**
   * @param { !Map<!mojoBase.mojom.String16, !mojoBase.mojom.BigString16> } data
   */

  writeCustomData(
      data) {
    this.proxy.sendMessage(
        16,
        blink.mojom.ClipboardHost_WriteCustomData_ParamsSpec.$,
        null,
        [
          data
        ]);
  }

  
  /**
   * @param { !string } url
   * @param { !mojoBase.mojom.String16 } title
   */

  writeBookmark(
      url,
      title) {
    this.proxy.sendMessage(
        17,
        blink.mojom.ClipboardHost_WriteBookmark_ParamsSpec.$,
        null,
        [
          url,
          title
        ]);
  }

  
  /**
   * @param { !skia.mojom.BitmapN32 } image
   */

  writeImage(
      image) {
    this.proxy.sendMessage(
        18,
        blink.mojom.ClipboardHost_WriteImage_ParamsSpec.$,
        null,
        [
          image
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.String16 } format
   * @param { !mojoBase.mojom.BigBuffer } data
   */

  writeUnsanitizedCustomFormat(
      format,
      data) {
    this.proxy.sendMessage(
        19,
        blink.mojom.ClipboardHost_WriteUnsanitizedCustomFormat_ParamsSpec.$,
        null,
        [
          format,
          data
        ]);
  }

  
  /**
   */

  commitWrite() {
    this.proxy.sendMessage(
        20,
        blink.mojom.ClipboardHost_CommitWrite_ParamsSpec.$,
        null,
        [
        ]);
  }
};

/**
 * An object which receives request messages for the ClipboardHost
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
blink.mojom.ClipboardHostReceiver = class {
  /**
   * @param {!blink.mojom.ClipboardHostInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!blink.mojom.ClipboardHostRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        blink.mojom.ClipboardHostRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!blink.mojom.ClipboardHostRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        blink.mojom.ClipboardHost_GetSequenceNumber_ParamsSpec.$,
        blink.mojom.ClipboardHost_GetSequenceNumber_ResponseParamsSpec.$,
        impl.getSequenceNumber.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        blink.mojom.ClipboardHost_IsFormatAvailable_ParamsSpec.$,
        blink.mojom.ClipboardHost_IsFormatAvailable_ResponseParamsSpec.$,
        impl.isFormatAvailable.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        blink.mojom.ClipboardHost_ReadAvailableTypes_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadAvailableTypes_ResponseParamsSpec.$,
        impl.readAvailableTypes.bind(impl));
    this.helper_internal_.registerHandler(
        3,
        blink.mojom.ClipboardHost_ReadText_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadText_ResponseParamsSpec.$,
        impl.readText.bind(impl));
    this.helper_internal_.registerHandler(
        4,
        blink.mojom.ClipboardHost_ReadHtml_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadHtml_ResponseParamsSpec.$,
        impl.readHtml.bind(impl));
    this.helper_internal_.registerHandler(
        5,
        blink.mojom.ClipboardHost_ReadSvg_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadSvg_ResponseParamsSpec.$,
        impl.readSvg.bind(impl));
    this.helper_internal_.registerHandler(
        6,
        blink.mojom.ClipboardHost_ReadRtf_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadRtf_ResponseParamsSpec.$,
        impl.readRtf.bind(impl));
    this.helper_internal_.registerHandler(
        7,
        blink.mojom.ClipboardHost_ReadPng_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadPng_ResponseParamsSpec.$,
        impl.readPng.bind(impl));
    this.helper_internal_.registerHandler(
        8,
        blink.mojom.ClipboardHost_ReadFiles_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadFiles_ResponseParamsSpec.$,
        impl.readFiles.bind(impl));
    this.helper_internal_.registerHandler(
        9,
        blink.mojom.ClipboardHost_ReadCustomData_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadCustomData_ResponseParamsSpec.$,
        impl.readCustomData.bind(impl));
    this.helper_internal_.registerHandler(
        10,
        blink.mojom.ClipboardHost_ReadAvailableCustomAndStandardFormats_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadAvailableCustomAndStandardFormats_ResponseParamsSpec.$,
        impl.readAvailableCustomAndStandardFormats.bind(impl));
    this.helper_internal_.registerHandler(
        11,
        blink.mojom.ClipboardHost_ReadUnsanitizedCustomFormat_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadUnsanitizedCustomFormat_ResponseParamsSpec.$,
        impl.readUnsanitizedCustomFormat.bind(impl));
    this.helper_internal_.registerHandler(
        12,
        blink.mojom.ClipboardHost_WriteText_ParamsSpec.$,
        null,
        impl.writeText.bind(impl));
    this.helper_internal_.registerHandler(
        13,
        blink.mojom.ClipboardHost_WriteHtml_ParamsSpec.$,
        null,
        impl.writeHtml.bind(impl));
    this.helper_internal_.registerHandler(
        14,
        blink.mojom.ClipboardHost_WriteSvg_ParamsSpec.$,
        null,
        impl.writeSvg.bind(impl));
    this.helper_internal_.registerHandler(
        15,
        blink.mojom.ClipboardHost_WriteSmartPasteMarker_ParamsSpec.$,
        null,
        impl.writeSmartPasteMarker.bind(impl));
    this.helper_internal_.registerHandler(
        16,
        blink.mojom.ClipboardHost_WriteCustomData_ParamsSpec.$,
        null,
        impl.writeCustomData.bind(impl));
    this.helper_internal_.registerHandler(
        17,
        blink.mojom.ClipboardHost_WriteBookmark_ParamsSpec.$,
        null,
        impl.writeBookmark.bind(impl));
    this.helper_internal_.registerHandler(
        18,
        blink.mojom.ClipboardHost_WriteImage_ParamsSpec.$,
        null,
        impl.writeImage.bind(impl));
    this.helper_internal_.registerHandler(
        19,
        blink.mojom.ClipboardHost_WriteUnsanitizedCustomFormat_ParamsSpec.$,
        null,
        impl.writeUnsanitizedCustomFormat.bind(impl));
    this.helper_internal_.registerHandler(
        20,
        blink.mojom.ClipboardHost_CommitWrite_ParamsSpec.$,
        null,
        impl.commitWrite.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
blink.mojom.ClipboardHost = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "blink.mojom.ClipboardHost";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!blink.mojom.ClipboardHostRemote}
   * @export
   */
  static getRemote() {
    let remote = new blink.mojom.ClipboardHostRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the ClipboardHost
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
blink.mojom.ClipboardHostCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      blink.mojom.ClipboardHostRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!blink.mojom.ClipboardHostRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getSequenceNumber =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        blink.mojom.ClipboardHost_GetSequenceNumber_ParamsSpec.$,
        blink.mojom.ClipboardHost_GetSequenceNumber_ResponseParamsSpec.$,
        this.getSequenceNumber.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.isFormatAvailable =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        blink.mojom.ClipboardHost_IsFormatAvailable_ParamsSpec.$,
        blink.mojom.ClipboardHost_IsFormatAvailable_ResponseParamsSpec.$,
        this.isFormatAvailable.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.readAvailableTypes =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        blink.mojom.ClipboardHost_ReadAvailableTypes_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadAvailableTypes_ResponseParamsSpec.$,
        this.readAvailableTypes.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.readText =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        3,
        blink.mojom.ClipboardHost_ReadText_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadText_ResponseParamsSpec.$,
        this.readText.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.readHtml =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        4,
        blink.mojom.ClipboardHost_ReadHtml_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadHtml_ResponseParamsSpec.$,
        this.readHtml.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.readSvg =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        5,
        blink.mojom.ClipboardHost_ReadSvg_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadSvg_ResponseParamsSpec.$,
        this.readSvg.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.readRtf =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        6,
        blink.mojom.ClipboardHost_ReadRtf_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadRtf_ResponseParamsSpec.$,
        this.readRtf.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.readPng =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        7,
        blink.mojom.ClipboardHost_ReadPng_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadPng_ResponseParamsSpec.$,
        this.readPng.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.readFiles =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        8,
        blink.mojom.ClipboardHost_ReadFiles_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadFiles_ResponseParamsSpec.$,
        this.readFiles.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.readCustomData =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        9,
        blink.mojom.ClipboardHost_ReadCustomData_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadCustomData_ResponseParamsSpec.$,
        this.readCustomData.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.readAvailableCustomAndStandardFormats =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        10,
        blink.mojom.ClipboardHost_ReadAvailableCustomAndStandardFormats_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadAvailableCustomAndStandardFormats_ResponseParamsSpec.$,
        this.readAvailableCustomAndStandardFormats.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.readUnsanitizedCustomFormat =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        11,
        blink.mojom.ClipboardHost_ReadUnsanitizedCustomFormat_ParamsSpec.$,
        blink.mojom.ClipboardHost_ReadUnsanitizedCustomFormat_ResponseParamsSpec.$,
        this.readUnsanitizedCustomFormat.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.writeText =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        12,
        blink.mojom.ClipboardHost_WriteText_ParamsSpec.$,
        null,
        this.writeText.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.writeHtml =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        13,
        blink.mojom.ClipboardHost_WriteHtml_ParamsSpec.$,
        null,
        this.writeHtml.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.writeSvg =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        14,
        blink.mojom.ClipboardHost_WriteSvg_ParamsSpec.$,
        null,
        this.writeSvg.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.writeSmartPasteMarker =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        15,
        blink.mojom.ClipboardHost_WriteSmartPasteMarker_ParamsSpec.$,
        null,
        this.writeSmartPasteMarker.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.writeCustomData =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        16,
        blink.mojom.ClipboardHost_WriteCustomData_ParamsSpec.$,
        null,
        this.writeCustomData.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.writeBookmark =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        17,
        blink.mojom.ClipboardHost_WriteBookmark_ParamsSpec.$,
        null,
        this.writeBookmark.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.writeImage =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        18,
        blink.mojom.ClipboardHost_WriteImage_ParamsSpec.$,
        null,
        this.writeImage.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.writeUnsanitizedCustomFormat =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        19,
        blink.mojom.ClipboardHost_WriteUnsanitizedCustomFormat_ParamsSpec.$,
        null,
        this.writeUnsanitizedCustomFormat.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.commitWrite =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        20,
        blink.mojom.ClipboardHost_CommitWrite_ParamsSpec.$,
        null,
        this.commitWrite.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};



/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardFilesSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_GetSequenceNumber_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_GetSequenceNumber_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_IsFormatAvailable_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_IsFormatAvailable_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_ReadAvailableTypes_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_ReadAvailableTypes_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_ReadText_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_ReadText_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_ReadHtml_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_ReadHtml_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_ReadSvg_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_ReadSvg_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_ReadRtf_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_ReadRtf_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_ReadPng_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_ReadPng_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_ReadFiles_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_ReadFiles_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_ReadCustomData_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_ReadCustomData_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_ReadAvailableCustomAndStandardFormats_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_ReadAvailableCustomAndStandardFormats_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_ReadUnsanitizedCustomFormat_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_ReadUnsanitizedCustomFormat_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_WriteText_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_WriteHtml_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_WriteSvg_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_WriteSmartPasteMarker_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_WriteCustomData_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_WriteBookmark_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_WriteImage_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_WriteUnsanitizedCustomFormat_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.ClipboardHost_CommitWrite_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    blink.mojom.ClipboardFilesSpec.$,
    'ClipboardFiles',
    [
      mojo.internal.StructField(
        'files', 0,
        0,
        mojo.internal.Array(blink.mojom.DataTransferFileSpec.$, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'fileSystemId', 8,
        0,
        mojo.internal.String,
        null,
        true /* nullable */),
    ],
    [[0, 24],]);





/** @record */
blink.mojom.ClipboardFiles = class {
  constructor() {
    /** @export { !Array<!blink.mojom.DataTransferFile> } */
    this.files;
    /** @export { (string|undefined) } */
    this.fileSystemId;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_GetSequenceNumber_ParamsSpec.$,
    'ClipboardHost_GetSequenceNumber_Params',
    [
      mojo.internal.StructField(
        'buffer', 0,
        0,
        blink.mojom.ClipboardBufferSpec.$,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
blink.mojom.ClipboardHost_GetSequenceNumber_Params = class {
  constructor() {
    /** @export { !blink.mojom.ClipboardBuffer } */
    this.buffer;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_GetSequenceNumber_ResponseParamsSpec.$,
    'ClipboardHost_GetSequenceNumber_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        blink.mojom.ClipboardSequenceNumberTokenSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
blink.mojom.ClipboardHost_GetSequenceNumber_ResponseParams = class {
  constructor() {
    /** @export { !blink.mojom.ClipboardSequenceNumberToken } */
    this.result;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_IsFormatAvailable_ParamsSpec.$,
    'ClipboardHost_IsFormatAvailable_Params',
    [
      mojo.internal.StructField(
        'format', 0,
        0,
        blink.mojom.ClipboardFormatSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'buffer', 4,
        0,
        blink.mojom.ClipboardBufferSpec.$,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
blink.mojom.ClipboardHost_IsFormatAvailable_Params = class {
  constructor() {
    /** @export { !blink.mojom.ClipboardFormat } */
    this.format;
    /** @export { !blink.mojom.ClipboardBuffer } */
    this.buffer;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_IsFormatAvailable_ResponseParamsSpec.$,
    'ClipboardHost_IsFormatAvailable_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
blink.mojom.ClipboardHost_IsFormatAvailable_ResponseParams = class {
  constructor() {
    /** @export { !boolean } */
    this.result;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_ReadAvailableTypes_ParamsSpec.$,
    'ClipboardHost_ReadAvailableTypes_Params',
    [
      mojo.internal.StructField(
        'buffer', 0,
        0,
        blink.mojom.ClipboardBufferSpec.$,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
blink.mojom.ClipboardHost_ReadAvailableTypes_Params = class {
  constructor() {
    /** @export { !blink.mojom.ClipboardBuffer } */
    this.buffer;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_ReadAvailableTypes_ResponseParamsSpec.$,
    'ClipboardHost_ReadAvailableTypes_ResponseParams',
    [
      mojo.internal.StructField(
        'types', 0,
        0,
        mojo.internal.Array(mojoBase.mojom.String16Spec.$, false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
blink.mojom.ClipboardHost_ReadAvailableTypes_ResponseParams = class {
  constructor() {
    /** @export { !Array<!mojoBase.mojom.String16> } */
    this.types;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_ReadText_ParamsSpec.$,
    'ClipboardHost_ReadText_Params',
    [
      mojo.internal.StructField(
        'buffer', 0,
        0,
        blink.mojom.ClipboardBufferSpec.$,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
blink.mojom.ClipboardHost_ReadText_Params = class {
  constructor() {
    /** @export { !blink.mojom.ClipboardBuffer } */
    this.buffer;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_ReadText_ResponseParamsSpec.$,
    'ClipboardHost_ReadText_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojoBase.mojom.BigString16Spec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
blink.mojom.ClipboardHost_ReadText_ResponseParams = class {
  constructor() {
    /** @export { !mojoBase.mojom.BigString16 } */
    this.result;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_ReadHtml_ParamsSpec.$,
    'ClipboardHost_ReadHtml_Params',
    [
      mojo.internal.StructField(
        'buffer', 0,
        0,
        blink.mojom.ClipboardBufferSpec.$,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
blink.mojom.ClipboardHost_ReadHtml_Params = class {
  constructor() {
    /** @export { !blink.mojom.ClipboardBuffer } */
    this.buffer;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_ReadHtml_ResponseParamsSpec.$,
    'ClipboardHost_ReadHtml_ResponseParams',
    [
      mojo.internal.StructField(
        'markup', 0,
        0,
        mojoBase.mojom.BigString16Spec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'url', 8,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'fragmentStart', 16,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'fragmentEnd', 20,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
    ],
    [[0, 32],]);





/** @record */
blink.mojom.ClipboardHost_ReadHtml_ResponseParams = class {
  constructor() {
    /** @export { !mojoBase.mojom.BigString16 } */
    this.markup;
    /** @export { !url.mojom.Url } */
    this.url;
    /** @export { !number } */
    this.fragmentStart;
    /** @export { !number } */
    this.fragmentEnd;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_ReadSvg_ParamsSpec.$,
    'ClipboardHost_ReadSvg_Params',
    [
      mojo.internal.StructField(
        'buffer', 0,
        0,
        blink.mojom.ClipboardBufferSpec.$,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
blink.mojom.ClipboardHost_ReadSvg_Params = class {
  constructor() {
    /** @export { !blink.mojom.ClipboardBuffer } */
    this.buffer;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_ReadSvg_ResponseParamsSpec.$,
    'ClipboardHost_ReadSvg_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojoBase.mojom.BigString16Spec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
blink.mojom.ClipboardHost_ReadSvg_ResponseParams = class {
  constructor() {
    /** @export { !mojoBase.mojom.BigString16 } */
    this.result;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_ReadRtf_ParamsSpec.$,
    'ClipboardHost_ReadRtf_Params',
    [
      mojo.internal.StructField(
        'buffer', 0,
        0,
        blink.mojom.ClipboardBufferSpec.$,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
blink.mojom.ClipboardHost_ReadRtf_Params = class {
  constructor() {
    /** @export { !blink.mojom.ClipboardBuffer } */
    this.buffer;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_ReadRtf_ResponseParamsSpec.$,
    'ClipboardHost_ReadRtf_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojoBase.mojom.BigStringSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
blink.mojom.ClipboardHost_ReadRtf_ResponseParams = class {
  constructor() {
    /** @export { !mojoBase.mojom.BigString } */
    this.result;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_ReadPng_ParamsSpec.$,
    'ClipboardHost_ReadPng_Params',
    [
      mojo.internal.StructField(
        'buffer', 0,
        0,
        blink.mojom.ClipboardBufferSpec.$,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
blink.mojom.ClipboardHost_ReadPng_Params = class {
  constructor() {
    /** @export { !blink.mojom.ClipboardBuffer } */
    this.buffer;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_ReadPng_ResponseParamsSpec.$,
    'ClipboardHost_ReadPng_ResponseParams',
    [
      mojo.internal.StructField(
        'png', 0,
        0,
        mojoBase.mojom.BigBufferSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);





/** @record */
blink.mojom.ClipboardHost_ReadPng_ResponseParams = class {
  constructor() {
    /** @export { !mojoBase.mojom.BigBuffer } */
    this.png;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_ReadFiles_ParamsSpec.$,
    'ClipboardHost_ReadFiles_Params',
    [
      mojo.internal.StructField(
        'buffer', 0,
        0,
        blink.mojom.ClipboardBufferSpec.$,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
blink.mojom.ClipboardHost_ReadFiles_Params = class {
  constructor() {
    /** @export { !blink.mojom.ClipboardBuffer } */
    this.buffer;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_ReadFiles_ResponseParamsSpec.$,
    'ClipboardHost_ReadFiles_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        blink.mojom.ClipboardFilesSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
blink.mojom.ClipboardHost_ReadFiles_ResponseParams = class {
  constructor() {
    /** @export { !blink.mojom.ClipboardFiles } */
    this.result;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_ReadCustomData_ParamsSpec.$,
    'ClipboardHost_ReadCustomData_Params',
    [
      mojo.internal.StructField(
        'buffer', 0,
        0,
        blink.mojom.ClipboardBufferSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'type', 8,
        0,
        mojoBase.mojom.String16Spec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);





/** @record */
blink.mojom.ClipboardHost_ReadCustomData_Params = class {
  constructor() {
    /** @export { !blink.mojom.ClipboardBuffer } */
    this.buffer;
    /** @export { !mojoBase.mojom.String16 } */
    this.type;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_ReadCustomData_ResponseParamsSpec.$,
    'ClipboardHost_ReadCustomData_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojoBase.mojom.BigString16Spec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
blink.mojom.ClipboardHost_ReadCustomData_ResponseParams = class {
  constructor() {
    /** @export { !mojoBase.mojom.BigString16 } */
    this.result;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_ReadAvailableCustomAndStandardFormats_ParamsSpec.$,
    'ClipboardHost_ReadAvailableCustomAndStandardFormats_Params',
    [
    ],
    [[0, 8],]);





/** @record */
blink.mojom.ClipboardHost_ReadAvailableCustomAndStandardFormats_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_ReadAvailableCustomAndStandardFormats_ResponseParamsSpec.$,
    'ClipboardHost_ReadAvailableCustomAndStandardFormats_ResponseParams',
    [
      mojo.internal.StructField(
        'formatTypes', 0,
        0,
        mojo.internal.Array(mojoBase.mojom.String16Spec.$, false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
blink.mojom.ClipboardHost_ReadAvailableCustomAndStandardFormats_ResponseParams = class {
  constructor() {
    /** @export { !Array<!mojoBase.mojom.String16> } */
    this.formatTypes;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_ReadUnsanitizedCustomFormat_ParamsSpec.$,
    'ClipboardHost_ReadUnsanitizedCustomFormat_Params',
    [
      mojo.internal.StructField(
        'format', 0,
        0,
        mojoBase.mojom.String16Spec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
blink.mojom.ClipboardHost_ReadUnsanitizedCustomFormat_Params = class {
  constructor() {
    /** @export { !mojoBase.mojom.String16 } */
    this.format;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_ReadUnsanitizedCustomFormat_ResponseParamsSpec.$,
    'ClipboardHost_ReadUnsanitizedCustomFormat_ResponseParams',
    [
      mojo.internal.StructField(
        'data', 0,
        0,
        mojoBase.mojom.BigBufferSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);





/** @record */
blink.mojom.ClipboardHost_ReadUnsanitizedCustomFormat_ResponseParams = class {
  constructor() {
    /** @export { !mojoBase.mojom.BigBuffer } */
    this.data;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_WriteText_ParamsSpec.$,
    'ClipboardHost_WriteText_Params',
    [
      mojo.internal.StructField(
        'text', 0,
        0,
        mojoBase.mojom.BigString16Spec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
blink.mojom.ClipboardHost_WriteText_Params = class {
  constructor() {
    /** @export { !mojoBase.mojom.BigString16 } */
    this.text;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_WriteHtml_ParamsSpec.$,
    'ClipboardHost_WriteHtml_Params',
    [
      mojo.internal.StructField(
        'markup', 0,
        0,
        mojoBase.mojom.BigString16Spec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'url', 8,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);





/** @record */
blink.mojom.ClipboardHost_WriteHtml_Params = class {
  constructor() {
    /** @export { !mojoBase.mojom.BigString16 } */
    this.markup;
    /** @export { !url.mojom.Url } */
    this.url;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_WriteSvg_ParamsSpec.$,
    'ClipboardHost_WriteSvg_Params',
    [
      mojo.internal.StructField(
        'markup', 0,
        0,
        mojoBase.mojom.BigString16Spec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
blink.mojom.ClipboardHost_WriteSvg_Params = class {
  constructor() {
    /** @export { !mojoBase.mojom.BigString16 } */
    this.markup;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_WriteSmartPasteMarker_ParamsSpec.$,
    'ClipboardHost_WriteSmartPasteMarker_Params',
    [
    ],
    [[0, 8],]);





/** @record */
blink.mojom.ClipboardHost_WriteSmartPasteMarker_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_WriteCustomData_ParamsSpec.$,
    'ClipboardHost_WriteCustomData_Params',
    [
      mojo.internal.StructField(
        'data', 0,
        0,
        mojo.internal.Map(mojoBase.mojom.String16Spec.$, mojoBase.mojom.BigString16Spec.$, false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
blink.mojom.ClipboardHost_WriteCustomData_Params = class {
  constructor() {
    /** @export { !Map<!mojoBase.mojom.String16, !mojoBase.mojom.BigString16> } */
    this.data;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_WriteBookmark_ParamsSpec.$,
    'ClipboardHost_WriteBookmark_Params',
    [
      mojo.internal.StructField(
        'url', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'title', 8,
        0,
        mojoBase.mojom.String16Spec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);





/** @record */
blink.mojom.ClipboardHost_WriteBookmark_Params = class {
  constructor() {
    /** @export { !string } */
    this.url;
    /** @export { !mojoBase.mojom.String16 } */
    this.title;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_WriteImage_ParamsSpec.$,
    'ClipboardHost_WriteImage_Params',
    [
      mojo.internal.StructField(
        'image', 0,
        0,
        skia.mojom.BitmapN32Spec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
blink.mojom.ClipboardHost_WriteImage_Params = class {
  constructor() {
    /** @export { !skia.mojom.BitmapN32 } */
    this.image;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_WriteUnsanitizedCustomFormat_ParamsSpec.$,
    'ClipboardHost_WriteUnsanitizedCustomFormat_Params',
    [
      mojo.internal.StructField(
        'format', 0,
        0,
        mojoBase.mojom.String16Spec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'data', 8,
        0,
        mojoBase.mojom.BigBufferSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 32],]);





/** @record */
blink.mojom.ClipboardHost_WriteUnsanitizedCustomFormat_Params = class {
  constructor() {
    /** @export { !mojoBase.mojom.String16 } */
    this.format;
    /** @export { !mojoBase.mojom.BigBuffer } */
    this.data;
  }
};




mojo.internal.Struct(
    blink.mojom.ClipboardHost_CommitWrite_ParamsSpec.$,
    'ClipboardHost_CommitWrite_Params',
    [
    ],
    [[0, 8],]);





/** @record */
blink.mojom.ClipboardHost_CommitWrite_Params = class {
  constructor() {
  }
};


