// Generated by third_party/blink/renderer/build/scripts/gperf.py
/* C++ code produced by gperf version 3.1 */
/* Command-line: gperf --key-positions='*' -P -n -m 50 -D -Q CSSPropStringPool  */

#if !((' ' == 32) && ('!' == 33) && ('"' == 34) && ('#' == 35) \
      && ('%' == 37) && ('&' == 38) && ('\'' == 39) && ('(' == 40) \
      && (')' == 41) && ('*' == 42) && ('+' == 43) && (',' == 44) \
      && ('-' == 45) && ('.' == 46) && ('/' == 47) && ('0' == 48) \
      && ('1' == 49) && ('2' == 50) && ('3' == 51) && ('4' == 52) \
      && ('5' == 53) && ('6' == 54) && ('7' == 55) && ('8' == 56) \
      && ('9' == 57) && (':' == 58) && (';' == 59) && ('<' == 60) \
      && ('=' == 61) && ('>' == 62) && ('?' == 63) && ('A' == 65) \
      && ('B' == 66) && ('C' == 67) && ('D' == 68) && ('E' == 69) \
      && ('F' == 70) && ('G' == 71) && ('H' == 72) && ('I' == 73) \
      && ('J' == 74) && ('K' == 75) && ('L' == 76) && ('M' == 77) \
      && ('N' == 78) && ('O' == 79) && ('P' == 80) && ('Q' == 81) \
      && ('R' == 82) && ('S' == 83) && ('T' == 84) && ('U' == 85) \
      && ('V' == 86) && ('W' == 87) && ('X' == 88) && ('Y' == 89) \
      && ('Z' == 90) && ('[' == 91) && ('\\' == 92) && (']' == 93) \
      && ('^' == 94) && ('_' == 95) && ('a' == 97) && ('b' == 98) \
      && ('c' == 99) && ('d' == 100) && ('e' == 101) && ('f' == 102) \
      && ('g' == 103) && ('h' == 104) && ('i' == 105) && ('j' == 106) \
      && ('k' == 107) && ('l' == 108) && ('m' == 109) && ('n' == 110) \
      && ('o' == 111) && ('p' == 112) && ('q' == 113) && ('r' == 114) \
      && ('s' == 115) && ('t' == 116) && ('u' == 117) && ('v' == 118) \
      && ('w' == 119) && ('x' == 120) && ('y' == 121) && ('z' == 122) \
      && ('{' == 123) && ('|' == 124) && ('}' == 125) && ('~' == 126))
/* The character set is not based on ISO-646.  */
#error "gperf generated tables don't work with this execution character set. Please report a bug to <bug-gperf@gnu.org>."
#endif


// Copyright (c) 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#include "third_party/blink/renderer/core/css/css_property_names.h"

#include <string.h>
#include "third_party/blink/public/mojom/use_counter/metrics/css_property_id.mojom-blink.h"
#include "third_party/blink/renderer/core/css/hash_tools.h"
#include "third_party/blink/renderer/platform/wtf/text/ascii_ctype.h"
#include "third_party/blink/renderer/platform/wtf/text/atomic_string.h"
#include "third_party/blink/renderer/platform/wtf/text/wtf_string.h"

#ifdef _MSC_VER
// Disable the warnings from casting a 64-bit pointer to 32-bit long
// warning C4302: 'type cast': truncation from 'char (*)[28]' to 'long'
// warning C4311: 'type cast': pointer truncation from 'char (*)[18]' to 'long'
#pragma warning(disable : 4302 4311)
#endif

namespace blink {
/* maximum key range = 4172, duplicates = 0 */

class CSSPropertyNamesHash
{
private:
  static inline unsigned int property_hash_function (const char *str, size_t len);
public:
  static const struct Property *findPropertyImpl (const char *str, size_t len);
};

inline unsigned int
CSSPropertyNamesHash::property_hash_function (const char *str, size_t len)
{
  static const unsigned short asso_values[] =
    {
      4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173,
      4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173,
      4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173,
      4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173,
      4173, 4173, 4173, 4173, 4173,    0,   17, 4173, 4173, 4173,
      4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173,
      4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173,
      4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173,
      4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173,
      4173, 4173, 4173, 4173, 4173, 4173, 4173,   22,  194,    2,
         5,    2,  424,   42,  662,    2, 1364,  170,    0,   32,
         0,    0,   38,   50,    1,   14,    7,  123, 1203,  262,
       638,  849, 1145,    0, 4173, 4173, 4173, 4173, 4173, 4173,
      4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173,
      4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173,
      4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173,
      4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173,
      4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173,
      4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173,
      4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173,
      4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173,
      4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173,
      4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173,
      4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173,
      4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173, 4173,
      4173, 4173, 4173, 4173, 4173, 4173, 4173
    };
  unsigned int hval = 0;

  switch (len)
    {
      default:
        hval += asso_values[static_cast<unsigned char>(str[42])];
        [[fallthrough]];
      case 42:
        hval += asso_values[static_cast<unsigned char>(str[41])];
        [[fallthrough]];
      case 41:
        hval += asso_values[static_cast<unsigned char>(str[40])];
        [[fallthrough]];
      case 40:
        hval += asso_values[static_cast<unsigned char>(str[39])];
        [[fallthrough]];
      case 39:
        hval += asso_values[static_cast<unsigned char>(str[38])];
        [[fallthrough]];
      case 38:
        hval += asso_values[static_cast<unsigned char>(str[37])];
        [[fallthrough]];
      case 37:
        hval += asso_values[static_cast<unsigned char>(str[36])];
        [[fallthrough]];
      case 36:
        hval += asso_values[static_cast<unsigned char>(str[35])];
        [[fallthrough]];
      case 35:
        hval += asso_values[static_cast<unsigned char>(str[34])];
        [[fallthrough]];
      case 34:
        hval += asso_values[static_cast<unsigned char>(str[33])];
        [[fallthrough]];
      case 33:
        hval += asso_values[static_cast<unsigned char>(str[32])];
        [[fallthrough]];
      case 32:
        hval += asso_values[static_cast<unsigned char>(str[31])];
        [[fallthrough]];
      case 31:
        hval += asso_values[static_cast<unsigned char>(str[30])];
        [[fallthrough]];
      case 30:
        hval += asso_values[static_cast<unsigned char>(str[29])];
        [[fallthrough]];
      case 29:
        hval += asso_values[static_cast<unsigned char>(str[28])];
        [[fallthrough]];
      case 28:
        hval += asso_values[static_cast<unsigned char>(str[27])];
        [[fallthrough]];
      case 27:
        hval += asso_values[static_cast<unsigned char>(str[26])];
        [[fallthrough]];
      case 26:
        hval += asso_values[static_cast<unsigned char>(str[25])];
        [[fallthrough]];
      case 25:
        hval += asso_values[static_cast<unsigned char>(str[24])];
        [[fallthrough]];
      case 24:
        hval += asso_values[static_cast<unsigned char>(str[23])];
        [[fallthrough]];
      case 23:
        hval += asso_values[static_cast<unsigned char>(str[22])];
        [[fallthrough]];
      case 22:
        hval += asso_values[static_cast<unsigned char>(str[21])];
        [[fallthrough]];
      case 21:
        hval += asso_values[static_cast<unsigned char>(str[20])];
        [[fallthrough]];
      case 20:
        hval += asso_values[static_cast<unsigned char>(str[19])];
        [[fallthrough]];
      case 19:
        hval += asso_values[static_cast<unsigned char>(str[18])];
        [[fallthrough]];
      case 18:
        hval += asso_values[static_cast<unsigned char>(str[17])];
        [[fallthrough]];
      case 17:
        hval += asso_values[static_cast<unsigned char>(str[16])];
        [[fallthrough]];
      case 16:
        hval += asso_values[static_cast<unsigned char>(str[15]+1)];
        [[fallthrough]];
      case 15:
        hval += asso_values[static_cast<unsigned char>(str[14])];
        [[fallthrough]];
      case 14:
        hval += asso_values[static_cast<unsigned char>(str[13])];
        [[fallthrough]];
      case 13:
        hval += asso_values[static_cast<unsigned char>(str[12])];
        [[fallthrough]];
      case 12:
        hval += asso_values[static_cast<unsigned char>(str[11])];
        [[fallthrough]];
      case 11:
        hval += asso_values[static_cast<unsigned char>(str[10])];
        [[fallthrough]];
      case 10:
        hval += asso_values[static_cast<unsigned char>(str[9])];
        [[fallthrough]];
      case 9:
        hval += asso_values[static_cast<unsigned char>(str[8])];
        [[fallthrough]];
      case 8:
        hval += asso_values[static_cast<unsigned char>(str[7])];
        [[fallthrough]];
      case 7:
        hval += asso_values[static_cast<unsigned char>(str[6])];
        [[fallthrough]];
      case 6:
        hval += asso_values[static_cast<unsigned char>(str[5])];
        [[fallthrough]];
      case 5:
        hval += asso_values[static_cast<unsigned char>(str[4])];
        [[fallthrough]];
      case 4:
        hval += asso_values[static_cast<unsigned char>(str[3])];
        [[fallthrough]];
      case 3:
        hval += asso_values[static_cast<unsigned char>(str[2])];
        [[fallthrough]];
      case 2:
        hval += asso_values[static_cast<unsigned char>(str[1])];
        [[fallthrough]];
      case 1:
        hval += asso_values[static_cast<unsigned char>(str[0])];
        break;
    }
  return hval;
}

struct CSSPropStringPool_t
  {
    char CSSPropStringPool_str0[sizeof("r")];
    char CSSPropStringPool_str1[sizeof("color")];
    char CSSPropStringPool_str2[sizeof("d")];
    char CSSPropStringPool_str3[sizeof("end")];
    char CSSPropStringPool_str4[sizeof("order")];
    char CSSPropStringPool_str5[sizeof("src")];
    char CSSPropStringPool_str6[sizeof("content")];
    char CSSPropStringPool_str7[sizeof("direction")];
    char CSSPropStringPool_str8[sizeof("all")];
    char CSSPropStringPool_str9[sizeof("inset")];
    char CSSPropStringPool_str10[sizeof("clear")];
    char CSSPropStringPool_str11[sizeof("inset-inline")];
    char CSSPropStringPool_str12[sizeof("contain")];
    char CSSPropStringPool_str13[sizeof("inset-inline-end")];
    char CSSPropStringPool_str14[sizeof("container")];
    char CSSPropStringPool_str15[sizeof("caret-color")];
    char CSSPropStringPool_str16[sizeof("accent-color")];
    char CSSPropStringPool_str17[sizeof("rotate")];
    char CSSPropStringPool_str18[sizeof("scale")];
    char CSSPropStringPool_str19[sizeof("clip")];
    char CSSPropStringPool_str20[sizeof("orientation")];
    char CSSPropStringPool_str21[sizeof("top")];
    char CSSPropStringPool_str22[sizeof("isolation")];
    char CSSPropStringPool_str23[sizeof("grid")];
    char CSSPropStringPool_str24[sizeof("start")];
    char CSSPropStringPool_str25[sizeof("transition")];
    char CSSPropStringPool_str26[sizeof("color-rendering")];
    char CSSPropStringPool_str27[sizeof("stop-color")];
    char CSSPropStringPool_str28[sizeof("position")];
    char CSSPropStringPool_str29[sizeof("pad")];
    char CSSPropStringPool_str30[sizeof("range")];
    char CSSPropStringPool_str31[sizeof("translate")];
    char CSSPropStringPool_str32[sizeof("paint-order")];
    char CSSPropStringPool_str33[sizeof("place-content")];
    char CSSPropStringPool_str34[sizeof("align-content")];
    char CSSPropStringPool_str35[sizeof("animation")];
    char CSSPropStringPool_str36[sizeof("container-name")];
    char CSSPropStringPool_str37[sizeof("toggle")];
    char CSSPropStringPool_str38[sizeof("caption-side")];
    char CSSPropStringPool_str39[sizeof("grid-area")];
    char CSSPropStringPool_str40[sizeof("margin")];
    char CSSPropStringPool_str41[sizeof("toggle-root")];
    char CSSPropStringPool_str42[sizeof("gap")];
    char CSSPropStringPool_str43[sizeof("page")];
    char CSSPropStringPool_str44[sizeof("margin-inline")];
    char CSSPropStringPool_str45[sizeof("margin-inline-end")];
    char CSSPropStringPool_str46[sizeof("padding")];
    char CSSPropStringPool_str47[sizeof("scroll-margin")];
    char CSSPropStringPool_str48[sizeof("aspect-ratio")];
    char CSSPropStringPool_str49[sizeof("padding-inline")];
    char CSSPropStringPool_str50[sizeof("place-items")];
    char CSSPropStringPool_str51[sizeof("scroll-margin-inline")];
    char CSSPropStringPool_str52[sizeof("align-items")];
    char CSSPropStringPool_str53[sizeof("scroll-margin-inline-end")];
    char CSSPropStringPool_str54[sizeof("scroll-padding")];
    char CSSPropStringPool_str55[sizeof("outline")];
    char CSSPropStringPool_str56[sizeof("outline-color")];
    char CSSPropStringPool_str57[sizeof("letter-spacing")];
    char CSSPropStringPool_str58[sizeof("cursor")];
    char CSSPropStringPool_str59[sizeof("source")];
    char CSSPropStringPool_str60[sizeof("animation-name")];
    char CSSPropStringPool_str61[sizeof("margin-top")];
    char CSSPropStringPool_str62[sizeof("app-region")];
    char CSSPropStringPool_str63[sizeof("page-orientation")];
    char CSSPropStringPool_str64[sizeof("appearance")];
    char CSSPropStringPool_str65[sizeof("grid-gap")];
    char CSSPropStringPool_str66[sizeof("image-rendering")];
    char CSSPropStringPool_str67[sizeof("counter-set")];
    char CSSPropStringPool_str68[sizeof("padding-top")];
    char CSSPropStringPool_str69[sizeof("grid-template")];
    char CSSPropStringPool_str70[sizeof("counter-reset")];
    char CSSPropStringPool_str71[sizeof("scroll-snap-stop")];
    char CSSPropStringPool_str72[sizeof("padding-inline-start")];
    char CSSPropStringPool_str73[sizeof("user-select")];
    char CSSPropStringPool_str74[sizeof("clip-rule")];
    char CSSPropStringPool_str75[sizeof("columns")];
    char CSSPropStringPool_str76[sizeof("scroll-margin-inline-start")];
    char CSSPropStringPool_str77[sizeof("scroll-padding-bottom")];
    char CSSPropStringPool_str78[sizeof("image-orientation")];
    char CSSPropStringPool_str79[sizeof("counter-increment")];
    char CSSPropStringPool_str80[sizeof("toggle-trigger")];
    char CSSPropStringPool_str81[sizeof("stroke")];
    char CSSPropStringPool_str82[sizeof("quotes")];
    char CSSPropStringPool_str83[sizeof("scroll-margin-top")];
    char CSSPropStringPool_str84[sizeof("color-interpolation")];
    char CSSPropStringPool_str85[sizeof("unicode-range")];
    char CSSPropStringPool_str86[sizeof("border")];
    char CSSPropStringPool_str87[sizeof("border-color")];
    char CSSPropStringPool_str88[sizeof("grid-column")];
    char CSSPropStringPool_str89[sizeof("border-inline")];
    char CSSPropStringPool_str90[sizeof("grid-column-end")];
    char CSSPropStringPool_str91[sizeof("border-inline-end")];
    char CSSPropStringPool_str92[sizeof("border-inline-end-color")];
    char CSSPropStringPool_str93[sizeof("animation-direction")];
    char CSSPropStringPool_str94[sizeof("marker")];
    char CSSPropStringPool_str95[sizeof("column-span")];
    char CSSPropStringPool_str96[sizeof("grid-template-areas")];
    char CSSPropStringPool_str97[sizeof("marker-end")];
    char CSSPropStringPool_str98[sizeof("mask")];
    char CSSPropStringPool_str99[sizeof("bottom")];
    char CSSPropStringPool_str100[sizeof("speak")];
    char CSSPropStringPool_str101[sizeof("page-transition-tag")];
    char CSSPropStringPool_str102[sizeof("border-top")];
    char CSSPropStringPool_str103[sizeof("border-inline-color")];
    char CSSPropStringPool_str104[sizeof("inset-inline-start")];
    char CSSPropStringPool_str105[sizeof("column-gap")];
    char CSSPropStringPool_str106[sizeof("stroke-linecap")];
    char CSSPropStringPool_str107[sizeof("border-top-color")];
    char CSSPropStringPool_str108[sizeof("marker-mid")];
    char CSSPropStringPool_str109[sizeof("grid-column-start")];
    char CSSPropStringPool_str110[sizeof("margin-inline-start")];
    char CSSPropStringPool_str111[sizeof("marker-start")];
    char CSSPropStringPool_str112[sizeof("border-collapse")];
    char CSSPropStringPool_str113[sizeof("speak-as")];
    char CSSPropStringPool_str114[sizeof("column-rule")];
    char CSSPropStringPool_str115[sizeof("column-count")];
    char CSSPropStringPool_str116[sizeof("scroll-padding-top")];
    char CSSPropStringPool_str117[sizeof("toggle-group")];
    char CSSPropStringPool_str118[sizeof("border-image")];
    char CSSPropStringPool_str119[sizeof("dominant-baseline")];
    char CSSPropStringPool_str120[sizeof("scroll-padding-block")];
    char CSSPropStringPool_str121[sizeof("grid-column-gap")];
    char CSSPropStringPool_str122[sizeof("base-palette")];
    char CSSPropStringPool_str123[sizeof("scroll-padding-block-end")];
    char CSSPropStringPool_str124[sizeof("grid-row")];
    char CSSPropStringPool_str125[sizeof("grid-row-end")];
    char CSSPropStringPool_str126[sizeof("border-spacing")];
    char CSSPropStringPool_str127[sizeof("column-rule-color")];
    char CSSPropStringPool_str128[sizeof("transition-duration")];
    char CSSPropStringPool_str129[sizeof("unicode-bidi")];
    char CSSPropStringPool_str130[sizeof("margin-bottom")];
    char CSSPropStringPool_str131[sizeof("padding-bottom")];
    char CSSPropStringPool_str132[sizeof("writing-mode")];
    char CSSPropStringPool_str133[sizeof("scroll-padding-block-start")];
    char CSSPropStringPool_str134[sizeof("grid-row-start")];
    char CSSPropStringPool_str135[sizeof("row-gap")];
    char CSSPropStringPool_str136[sizeof("grid-template-columns")];
    char CSSPropStringPool_str137[sizeof("border-radius")];
    char CSSPropStringPool_str138[sizeof("grid-auto-columns")];
    char CSSPropStringPool_str139[sizeof("border-inline-start")];
    char CSSPropStringPool_str140[sizeof("animation-iteration-count")];
    char CSSPropStringPool_str141[sizeof("border-inline-start-color")];
    char CSSPropStringPool_str142[sizeof("border-image-repeat")];
    char CSSPropStringPool_str143[sizeof("word-spacing")];
    char CSSPropStringPool_str144[sizeof("inset-block")];
    char CSSPropStringPool_str145[sizeof("line-break")];
    char CSSPropStringPool_str146[sizeof("scroll-margin-bottom")];
    char CSSPropStringPool_str147[sizeof("border-end-end-radius")];
    char CSSPropStringPool_str148[sizeof("inset-block-end")];
    char CSSPropStringPool_str149[sizeof("break-inside")];
    char CSSPropStringPool_str150[sizeof("grid-row-gap")];
    char CSSPropStringPool_str151[sizeof("border-start-end-radius")];
    char CSSPropStringPool_str152[sizeof("fill")];
    char CSSPropStringPool_str153[sizeof("scrollbar-gutter")];
    char CSSPropStringPool_str154[sizeof("font")];
    char CSSPropStringPool_str155[sizeof("flood-color")];
    char CSSPropStringPool_str156[sizeof("left")];
    char CSSPropStringPool_str157[sizeof("filter")];
    char CSSPropStringPool_str158[sizeof("border-bottom")];
    char CSSPropStringPool_str159[sizeof("float")];
    char CSSPropStringPool_str160[sizeof("inset-block-start")];
    char CSSPropStringPool_str161[sizeof("margin-block")];
    char CSSPropStringPool_str162[sizeof("-internal-forced-color")];
    char CSSPropStringPool_str163[sizeof("margin-block-end")];
    char CSSPropStringPool_str164[sizeof("grid-template-rows")];
    char CSSPropStringPool_str165[sizeof("grid-auto-rows")];
    char CSSPropStringPool_str166[sizeof("padding-block")];
    char CSSPropStringPool_str167[sizeof("border-bottom-color")];
    char CSSPropStringPool_str168[sizeof("padding-block-end")];
    char CSSPropStringPool_str169[sizeof("transform")];
    char CSSPropStringPool_str170[sizeof("place-self")];
    char CSSPropStringPool_str171[sizeof("align-self")];
    char CSSPropStringPool_str172[sizeof("font-palette")];
    char CSSPropStringPool_str173[sizeof("scroll-margin-block")];
    char CSSPropStringPool_str174[sizeof("page-break-inside")];
    char CSSPropStringPool_str175[sizeof("animation-fill-mode")];
    char CSSPropStringPool_str176[sizeof("scroll-margin-block-end")];
    char CSSPropStringPool_str177[sizeof("border-top-width")];
    char CSSPropStringPool_str178[sizeof("margin-left")];
    char CSSPropStringPool_str179[sizeof("border-end-start-radius")];
    char CSSPropStringPool_str180[sizeof("widows")];
    char CSSPropStringPool_str181[sizeof("padding-left")];
    char CSSPropStringPool_str182[sizeof("transform-origin")];
    char CSSPropStringPool_str183[sizeof("padding-inline-end")];
    char CSSPropStringPool_str184[sizeof("fill-rule")];
    char CSSPropStringPool_str185[sizeof("background")];
    char CSSPropStringPool_str186[sizeof("font-optical-sizing")];
    char CSSPropStringPool_str187[sizeof("scroll-margin-block-start")];
    char CSSPropStringPool_str188[sizeof("border-block")];
    char CSSPropStringPool_str189[sizeof("border-image-outset")];
    char CSSPropStringPool_str190[sizeof("border-block-end")];
    char CSSPropStringPool_str191[sizeof("background-color")];
    char CSSPropStringPool_str192[sizeof("border-block-end-color")];
    char CSSPropStringPool_str193[sizeof("column-fill")];
    char CSSPropStringPool_str194[sizeof("word-wrap")];
    char CSSPropStringPool_str195[sizeof("scroll-padding-left")];
    char CSSPropStringPool_str196[sizeof("background-clip")];
    char CSSPropStringPool_str197[sizeof("-internal-forced-outline-color")];
    char CSSPropStringPool_str198[sizeof("border-block-color")];
    char CSSPropStringPool_str199[sizeof("border-left")];
    char CSSPropStringPool_str200[sizeof("x")];
    char CSSPropStringPool_str201[sizeof("rx")];
    char CSSPropStringPool_str202[sizeof("cx")];
    char CSSPropStringPool_str203[sizeof("border-start-start-radius")];
    char CSSPropStringPool_str204[sizeof("-webkit-order")];
    char CSSPropStringPool_str205[sizeof("padding-block-start")];
    char CSSPropStringPool_str206[sizeof("font-kerning")];
    char CSSPropStringPool_str207[sizeof("color-interpolation-filters")];
    char CSSPropStringPool_str208[sizeof("word-break")];
    char CSSPropStringPool_str209[sizeof("-webkit-locale")];
    char CSSPropStringPool_str210[sizeof("text-indent")];
    char CSSPropStringPool_str211[sizeof("-internal-forced-border-color")];
    char CSSPropStringPool_str212[sizeof("border-left-color")];
    char CSSPropStringPool_str213[sizeof("margin-block-start")];
    char CSSPropStringPool_str214[sizeof("inherits")];
    char CSSPropStringPool_str215[sizeof("text-decoration")];
    char CSSPropStringPool_str216[sizeof("text-orientation")];
    char CSSPropStringPool_str217[sizeof("transition-timing-function")];
    char CSSPropStringPool_str218[sizeof("anchor-scroll")];
    char CSSPropStringPool_str219[sizeof("text-rendering")];
    char CSSPropStringPool_str220[sizeof("right")];
    char CSSPropStringPool_str221[sizeof("text-decoration-color")];
    char CSSPropStringPool_str222[sizeof("text-decoration-line")];
    char CSSPropStringPool_str223[sizeof("color-scheme")];
    char CSSPropStringPool_str224[sizeof("text-align")];
    char CSSPropStringPool_str225[sizeof("orphans")];
    char CSSPropStringPool_str226[sizeof("background-position")];
    char CSSPropStringPool_str227[sizeof("anchor-name")];
    char CSSPropStringPool_str228[sizeof("-epub-writing-mode")];
    char CSSPropStringPool_str229[sizeof("-webkit-align-content")];
    char CSSPropStringPool_str230[sizeof("lighting-color")];
    char CSSPropStringPool_str231[sizeof("-webkit-animation")];
    char CSSPropStringPool_str232[sizeof("text-align-last")];
    char CSSPropStringPool_str233[sizeof("clip-path")];
    char CSSPropStringPool_str234[sizeof("-webkit-padding-end")];
    char CSSPropStringPool_str235[sizeof("scroll-snap-align")];
    char CSSPropStringPool_str236[sizeof("forced-color-adjust")];
    char CSSPropStringPool_str237[sizeof("-webkit-margin-start")];
    char CSSPropStringPool_str238[sizeof("-webkit-animation-direction")];
    char CSSPropStringPool_str239[sizeof("-webkit-appearance")];
    char CSSPropStringPool_str240[sizeof("border-block-start")];
    char CSSPropStringPool_str241[sizeof("shape-rendering")];
    char CSSPropStringPool_str242[sizeof("border-block-start-color")];
    char CSSPropStringPool_str243[sizeof("background-blend-mode")];
    char CSSPropStringPool_str244[sizeof("background-repeat")];
    char CSSPropStringPool_str245[sizeof("-webkit-columns")];
    char CSSPropStringPool_str246[sizeof("margin-right")];
    char CSSPropStringPool_str247[sizeof("-webkit-animation-name")];
    char CSSPropStringPool_str248[sizeof("-webkit-padding-start")];
    char CSSPropStringPool_str249[sizeof("touch-action")];
    char CSSPropStringPool_str250[sizeof("padding-right")];
    char CSSPropStringPool_str251[sizeof("fallback")];
    char CSSPropStringPool_str252[sizeof("-webkit-user-select")];
    char CSSPropStringPool_str253[sizeof("shape-margin")];
    char CSSPropStringPool_str254[sizeof("-epub-word-break")];
    char CSSPropStringPool_str255[sizeof("break-after")];
    char CSSPropStringPool_str256[sizeof("y")];
    char CSSPropStringPool_str257[sizeof("ry")];
    char CSSPropStringPool_str258[sizeof("cy")];
    char CSSPropStringPool_str259[sizeof("scroll-padding-right")];
    char CSSPropStringPool_str260[sizeof("-webkit-column-span")];
    char CSSPropStringPool_str261[sizeof("text-underline-position")];
    char CSSPropStringPool_str262[sizeof("border-top-left-radius")];
    char CSSPropStringPool_str263[sizeof("backdrop-filter")];
    char CSSPropStringPool_str264[sizeof("offset")];
    char CSSPropStringPool_str265[sizeof("-webkit-mask")];
    char CSSPropStringPool_str266[sizeof("-webkit-align-items")];
    char CSSPropStringPool_str267[sizeof("-webkit-border-start")];
    char CSSPropStringPool_str268[sizeof("-webkit-border-start-color")];
    char CSSPropStringPool_str269[sizeof("grid-auto-flow")];
    char CSSPropStringPool_str270[sizeof("shape-outside")];
    char CSSPropStringPool_str271[sizeof("-webkit-mask-size")];
    char CSSPropStringPool_str272[sizeof("list-style")];
    char CSSPropStringPool_str273[sizeof("position-fallback")];
    char CSSPropStringPool_str274[sizeof("-webkit-line-clamp")];
    char CSSPropStringPool_str275[sizeof("offset-rotate")];
    char CSSPropStringPool_str276[sizeof("mix-blend-mode")];
    char CSSPropStringPool_str277[sizeof("border-right")];
    char CSSPropStringPool_str278[sizeof("system")];
    char CSSPropStringPool_str279[sizeof("opacity")];
    char CSSPropStringPool_str280[sizeof("-webkit-animation-duration")];
    char CSSPropStringPool_str281[sizeof("-internal-align-self-block")];
    char CSSPropStringPool_str282[sizeof("offset-distance")];
    char CSSPropStringPool_str283[sizeof("-webkit-column-count")];
    char CSSPropStringPool_str284[sizeof("display")];
    char CSSPropStringPool_str285[sizeof("-webkit-mask-position")];
    char CSSPropStringPool_str286[sizeof("container-type")];
    char CSSPropStringPool_str287[sizeof("-webkit-column-rule")];
    char CSSPropStringPool_str288[sizeof("offset-position")];
    char CSSPropStringPool_str289[sizeof("-webkit-column-rule-color")];
    char CSSPropStringPool_str290[sizeof("-webkit-animation-iteration-count")];
    char CSSPropStringPool_str291[sizeof("width")];
    char CSSPropStringPool_str292[sizeof("-webkit-mask-composite")];
    char CSSPropStringPool_str293[sizeof("empty-cells")];
    char CSSPropStringPool_str294[sizeof("border-right-color")];
    char CSSPropStringPool_str295[sizeof("-webkit-mask-repeat")];
    char CSSPropStringPool_str296[sizeof("page-break-after")];
    char CSSPropStringPool_str297[sizeof("animation-delay")];
    char CSSPropStringPool_str298[sizeof("scroll-margin-left")];
    char CSSPropStringPool_str299[sizeof("min-width")];
    char CSSPropStringPool_str300[sizeof("stop-opacity")];
    char CSSPropStringPool_str301[sizeof("will-change")];
    char CSSPropStringPool_str302[sizeof("outline-offset")];
    char CSSPropStringPool_str303[sizeof("outline-style")];
    char CSSPropStringPool_str304[sizeof("-webkit-writing-mode")];
    char CSSPropStringPool_str305[sizeof("break-before")];
    char CSSPropStringPool_str306[sizeof("white-space")];
    char CSSPropStringPool_str307[sizeof("-webkit-column-break-inside")];
    char CSSPropStringPool_str308[sizeof("-webkit-user-drag")];
    char CSSPropStringPool_str309[sizeof("-webkit-border-radius")];
    char CSSPropStringPool_str310[sizeof("-internal-forced-background-color")];
    char CSSPropStringPool_str311[sizeof("origin-trial-test-property")];
    char CSSPropStringPool_str312[sizeof("animation-play-state")];
    char CSSPropStringPool_str313[sizeof("-epub-text-orientation")];
    char CSSPropStringPool_str314[sizeof("flex")];
    char CSSPropStringPool_str315[sizeof("outline-width")];
    char CSSPropStringPool_str316[sizeof("-webkit-filter")];
    char CSSPropStringPool_str317[sizeof("list-style-position")];
    char CSSPropStringPool_str318[sizeof("border-style")];
    char CSSPropStringPool_str319[sizeof("background-image")];
    char CSSPropStringPool_str320[sizeof("flex-direction")];
    char CSSPropStringPool_str321[sizeof("border-inline-end-style")];
    char CSSPropStringPool_str322[sizeof("column-width")];
    char CSSPropStringPool_str323[sizeof("symbols")];
    char CSSPropStringPool_str324[sizeof("prefix")];
    char CSSPropStringPool_str325[sizeof("text-decoration-skip-ink")];
    char CSSPropStringPool_str326[sizeof("stroke-opacity")];
    char CSSPropStringPool_str327[sizeof("-webkit-rtl-ordering")];
    char CSSPropStringPool_str328[sizeof("font-stretch")];
    char CSSPropStringPool_str329[sizeof("page-break-before")];
    char CSSPropStringPool_str330[sizeof("stroke-width")];
    char CSSPropStringPool_str331[sizeof("mask-type")];
    char CSSPropStringPool_str332[sizeof("border-width")];
    char CSSPropStringPool_str333[sizeof("-webkit-mask-image")];
    char CSSPropStringPool_str334[sizeof("-webkit-transform")];
    char CSSPropStringPool_str335[sizeof("border-inline-end-width")];
    char CSSPropStringPool_str336[sizeof("text-transform")];
    char CSSPropStringPool_str337[sizeof("size")];
    char CSSPropStringPool_str338[sizeof("-webkit-margin-end")];
    char CSSPropStringPool_str339[sizeof("resize")];
    char CSSPropStringPool_str340[sizeof("-webkit-margin-before")];
    char CSSPropStringPool_str341[sizeof("inline-size")];
    char CSSPropStringPool_str342[sizeof("scrollbar-width")];
    char CSSPropStringPool_str343[sizeof("zoom")];
    char CSSPropStringPool_str344[sizeof("column-rule-style")];
    char CSSPropStringPool_str345[sizeof("border-inline-style")];
    char CSSPropStringPool_str346[sizeof("-webkit-transform-origin")];
    char CSSPropStringPool_str347[sizeof("min-inline-size")];
    char CSSPropStringPool_str348[sizeof("min-zoom")];
    char CSSPropStringPool_str349[sizeof("font-feature-settings")];
    char CSSPropStringPool_str350[sizeof("-webkit-padding-after")];
    char CSSPropStringPool_str351[sizeof("table-layout")];
    char CSSPropStringPool_str352[sizeof("-webkit-animation-fill-mode")];
    char CSSPropStringPool_str353[sizeof("transition-delay")];
    char CSSPropStringPool_str354[sizeof("ruby-position")];
    char CSSPropStringPool_str355[sizeof("override-colors")];
    char CSSPropStringPool_str356[sizeof("border-image-width")];
    char CSSPropStringPool_str357[sizeof("border-top-right-radius")];
    char CSSPropStringPool_str358[sizeof("border-inline-start-style")];
    char CSSPropStringPool_str359[sizeof("-webkit-border-vertical-spacing")];
    char CSSPropStringPool_str360[sizeof("ascent-override")];
    char CSSPropStringPool_str361[sizeof("-webkit-border-end")];
    char CSSPropStringPool_str362[sizeof("-webkit-border-before")];
    char CSSPropStringPool_str363[sizeof("-webkit-border-end-color")];
    char CSSPropStringPool_str364[sizeof("-webkit-border-before-color")];
    char CSSPropStringPool_str365[sizeof("pointer-events")];
    char CSSPropStringPool_str366[sizeof("negative")];
    char CSSPropStringPool_str367[sizeof("font-style")];
    char CSSPropStringPool_str368[sizeof("vertical-align")];
    char CSSPropStringPool_str369[sizeof("flex-basis")];
    char CSSPropStringPool_str370[sizeof("perspective")];
    char CSSPropStringPool_str371[sizeof("border-inline-start-width")];
    char CSSPropStringPool_str372[sizeof("user-zoom")];
    char CSSPropStringPool_str373[sizeof("line-gap-override")];
    char CSSPropStringPool_str374[sizeof("background-attachment")];
    char CSSPropStringPool_str375[sizeof("transform-box")];
    char CSSPropStringPool_str376[sizeof("column-rule-width")];
    char CSSPropStringPool_str377[sizeof("text-anchor")];
    char CSSPropStringPool_str378[sizeof("baseline-shift")];
    char CSSPropStringPool_str379[sizeof("fill-opacity")];
    char CSSPropStringPool_str380[sizeof("flood-opacity")];
    char CSSPropStringPool_str381[sizeof("animation-timing-function")];
    char CSSPropStringPool_str382[sizeof("font-display")];
    char CSSPropStringPool_str383[sizeof("-webkit-margin-after")];
    char CSSPropStringPool_str384[sizeof("flex-grow")];
    char CSSPropStringPool_str385[sizeof("transform-style")];
    char CSSPropStringPool_str386[sizeof("background-position-x")];
    char CSSPropStringPool_str387[sizeof("height")];
    char CSSPropStringPool_str388[sizeof("line-height")];
    char CSSPropStringPool_str389[sizeof("initial-value")];
    char CSSPropStringPool_str390[sizeof("tab-size")];
    char CSSPropStringPool_str391[sizeof("flex-wrap")];
    char CSSPropStringPool_str392[sizeof("-webkit-padding-before")];
    char CSSPropStringPool_str393[sizeof("-webkit-animation-timing-function")];
    char CSSPropStringPool_str394[sizeof("font-weight")];
    char CSSPropStringPool_str395[sizeof("scroll-snap-type")];
    char CSSPropStringPool_str396[sizeof("min-height")];
    char CSSPropStringPool_str397[sizeof("transition-property")];
    char CSSPropStringPool_str398[sizeof("list-style-image")];
    char CSSPropStringPool_str399[sizeof("border-bottom-style")];
    char CSSPropStringPool_str400[sizeof("math-depth")];
    char CSSPropStringPool_str401[sizeof("text-emphasis")];
    char CSSPropStringPool_str402[sizeof("background-repeat-x")];
    char CSSPropStringPool_str403[sizeof("border-block-end-style")];
    char CSSPropStringPool_str404[sizeof("-webkit-column-break-after")];
    char CSSPropStringPool_str405[sizeof("-webkit-line-break")];
    char CSSPropStringPool_str406[sizeof("line-height-step")];
    char CSSPropStringPool_str407[sizeof("border-bottom-left-radius")];
    char CSSPropStringPool_str408[sizeof("-webkit-border-after")];
    char CSSPropStringPool_str409[sizeof("-webkit-border-after-color")];
    char CSSPropStringPool_str410[sizeof("text-emphasis-color")];
    char CSSPropStringPool_str411[sizeof("-webkit-border-bottom-left-radius")];
    char CSSPropStringPool_str412[sizeof("-webkit-text-combine")];
    char CSSPropStringPool_str413[sizeof("animation-timeline")];
    char CSSPropStringPool_str414[sizeof("-webkit-text-stroke")];
    char CSSPropStringPool_str415[sizeof("scroll-padding-inline")];
    char CSSPropStringPool_str416[sizeof("-webkit-text-stroke-color")];
    char CSSPropStringPool_str417[sizeof("border-block-width")];
    char CSSPropStringPool_str418[sizeof("-epub-text-transform")];
    char CSSPropStringPool_str419[sizeof("scroll-padding-inline-end")];
    char CSSPropStringPool_str420[sizeof("border-block-end-width")];
    char CSSPropStringPool_str421[sizeof("-webkit-column-gap")];
    char CSSPropStringPool_str422[sizeof("-webkit-clip-path")];
    char CSSPropStringPool_str423[sizeof("border-image-source")];
    char CSSPropStringPool_str424[sizeof("block-size")];
    char CSSPropStringPool_str425[sizeof("syntax")];
    char CSSPropStringPool_str426[sizeof("-webkit-box-pack")];
    char CSSPropStringPool_str427[sizeof("border-left-style")];
    char CSSPropStringPool_str428[sizeof("text-emphasis-position")];
    char CSSPropStringPool_str429[sizeof("border-top-style")];
    char CSSPropStringPool_str430[sizeof("scroll-customization")];
    char CSSPropStringPool_str431[sizeof("scroll-padding-inline-start")];
    char CSSPropStringPool_str432[sizeof("-webkit-opacity")];
    char CSSPropStringPool_str433[sizeof("offset-anchor")];
    char CSSPropStringPool_str434[sizeof("min-block-size")];
    char CSSPropStringPool_str435[sizeof("stroke-linejoin")];
    char CSSPropStringPool_str436[sizeof("-webkit-align-self")];
    char CSSPropStringPool_str437[sizeof("-webkit-mask-position-x")];
    char CSSPropStringPool_str438[sizeof("text-decoration-style")];
    char CSSPropStringPool_str439[sizeof("text-decoration-thickness")];
    char CSSPropStringPool_str440[sizeof("background-position-y")];
    char CSSPropStringPool_str441[sizeof("font-size")];
    char CSSPropStringPool_str442[sizeof("math-style")];
    char CSSPropStringPool_str443[sizeof("-webkit-mask-repeat-x")];
    char CSSPropStringPool_str444[sizeof("offset-path")];
    char CSSPropStringPool_str445[sizeof("-webkit-border-top-left-radius")];
    char CSSPropStringPool_str446[sizeof("animation-duration")];
    char CSSPropStringPool_str447[sizeof("-webkit-column-break-before")];
    char CSSPropStringPool_str448[sizeof("text-shadow")];
    char CSSPropStringPool_str449[sizeof("suffix")];
    char CSSPropStringPool_str450[sizeof("max-width")];
    char CSSPropStringPool_str451[sizeof("object-position")];
    char CSSPropStringPool_str452[sizeof("-webkit-animation-delay")];
    char CSSPropStringPool_str453[sizeof("stroke-miterlimit")];
    char CSSPropStringPool_str454[sizeof("-webkit-shape-margin")];
    char CSSPropStringPool_str455[sizeof("background-repeat-y")];
    char CSSPropStringPool_str456[sizeof("-internal-font-size-delta")];
    char CSSPropStringPool_str457[sizeof("-webkit-logical-width")];
    char CSSPropStringPool_str458[sizeof("border-block-start-style")];
    char CSSPropStringPool_str459[sizeof("descent-override")];
    char CSSPropStringPool_str460[sizeof("border-image-slice")];
    char CSSPropStringPool_str461[sizeof("font-variant")];
    char CSSPropStringPool_str462[sizeof("border-left-width")];
    char CSSPropStringPool_str463[sizeof("-internal-visited-color")];
    char CSSPropStringPool_str464[sizeof("text-underline-offset")];
    char CSSPropStringPool_str465[sizeof("-webkit-flex")];
    char CSSPropStringPool_str466[sizeof("-internal-forced-visited-color")];
    char CSSPropStringPool_str467[sizeof("alignment-baseline")];
    char CSSPropStringPool_str468[sizeof("background-size")];
    char CSSPropStringPool_str469[sizeof("-webkit-animation-play-state")];
    char CSSPropStringPool_str470[sizeof("-internal-visited-caret-color")];
    char CSSPropStringPool_str471[sizeof("border-block-start-width")];
    char CSSPropStringPool_str472[sizeof("-webkit-flex-direction")];
    char CSSPropStringPool_str473[sizeof("border-block-style")];
    char CSSPropStringPool_str474[sizeof("flex-flow")];
    char CSSPropStringPool_str475[sizeof("-webkit-text-fill-color")];
    char CSSPropStringPool_str476[sizeof("-webkit-border-start-style")];
    char CSSPropStringPool_str477[sizeof("font-family")];
    char CSSPropStringPool_str478[sizeof("-webkit-border-bottom-right-radius")];
    char CSSPropStringPool_str479[sizeof("font-variation-settings")];
    char CSSPropStringPool_str480[sizeof("text-combine-upright")];
    char CSSPropStringPool_str481[sizeof("font-variant-caps")];
    char CSSPropStringPool_str482[sizeof("-webkit-mask-position-y")];
    char CSSPropStringPool_str483[sizeof("font-variant-east-asian")];
    char CSSPropStringPool_str484[sizeof("list-style-type")];
    char CSSPropStringPool_str485[sizeof("z-index")];
    char CSSPropStringPool_str486[sizeof("box-shadow")];
    char CSSPropStringPool_str487[sizeof("-webkit-column-rule-style")];
    char CSSPropStringPool_str488[sizeof("-webkit-mask-repeat-y")];
    char CSSPropStringPool_str489[sizeof("-epub-caption-side")];
    char CSSPropStringPool_str490[sizeof("font-variant-numeric")];
    char CSSPropStringPool_str491[sizeof("-webkit-border-start-width")];
    char CSSPropStringPool_str492[sizeof("-internal-visited-outline-color")];
    char CSSPropStringPool_str493[sizeof("math-shift")];
    char CSSPropStringPool_str494[sizeof("-webkit-transform-origin-x")];
    char CSSPropStringPool_str495[sizeof("border-right-width")];
    char CSSPropStringPool_str496[sizeof("-webkit-ruby-position")];
    char CSSPropStringPool_str497[sizeof("max-inline-size")];
    char CSSPropStringPool_str498[sizeof("-webkit-font-smoothing")];
    char CSSPropStringPool_str499[sizeof("max-zoom")];
    char CSSPropStringPool_str500[sizeof("-webkit-column-rule-width")];
    char CSSPropStringPool_str501[sizeof("-webkit-border-top-right-radius")];
    char CSSPropStringPool_str502[sizeof("-internal-visited-stroke")];
    char CSSPropStringPool_str503[sizeof("overflow")];
    char CSSPropStringPool_str504[sizeof("overflow-inline")];
    char CSSPropStringPool_str505[sizeof("-webkit-box-orient")];
    char CSSPropStringPool_str506[sizeof("-webkit-font-feature-settings")];
    char CSSPropStringPool_str507[sizeof("-internal-visited-border-inline-end-color")];
    char CSSPropStringPool_str508[sizeof("-webkit-box-direction")];
    char CSSPropStringPool_str509[sizeof("flex-shrink")];
    char CSSPropStringPool_str510[sizeof("-webkit-box-decoration-break")];
    char CSSPropStringPool_str511[sizeof("-webkit-box-reflect")];
    char CSSPropStringPool_str512[sizeof("-webkit-flex-basis")];
    char CSSPropStringPool_str513[sizeof("-internal-visited-border-top-color")];
    char CSSPropStringPool_str514[sizeof("viewport-fit")];
    char CSSPropStringPool_str515[sizeof("-internal-visited-border-inline-start-color")];
    char CSSPropStringPool_str516[sizeof("pop-up-hide-delay")];
    char CSSPropStringPool_str517[sizeof("background-origin")];
    char CSSPropStringPool_str518[sizeof("-epub-text-emphasis")];
    char CSSPropStringPool_str519[sizeof("-epub-text-emphasis-color")];
    char CSSPropStringPool_str520[sizeof("-internal-visited-column-rule-color")];
    char CSSPropStringPool_str521[sizeof("perspective-origin")];
    char CSSPropStringPool_str522[sizeof("font-synthesis")];
    char CSSPropStringPool_str523[sizeof("object-fit")];
    char CSSPropStringPool_str524[sizeof("-webkit-mask-box-image")];
    char CSSPropStringPool_str525[sizeof("-webkit-transform-style")];
    char CSSPropStringPool_str526[sizeof("box-sizing")];
    char CSSPropStringPool_str527[sizeof("-webkit-mask-box-image-slice")];
    char CSSPropStringPool_str528[sizeof("-webkit-flex-grow")];
    char CSSPropStringPool_str529[sizeof("-webkit-transform-origin-y")];
    char CSSPropStringPool_str530[sizeof("-webkit-transition")];
    char CSSPropStringPool_str531[sizeof("-webkit-highlight")];
    char CSSPropStringPool_str532[sizeof("-webkit-perspective")];
    char CSSPropStringPool_str533[sizeof("max-height")];
    char CSSPropStringPool_str534[sizeof("vector-effect")];
    char CSSPropStringPool_str535[sizeof("border-right-style")];
    char CSSPropStringPool_str536[sizeof("-webkit-user-modify")];
    char CSSPropStringPool_str537[sizeof("stroke-dasharray")];
    char CSSPropStringPool_str538[sizeof("-webkit-text-emphasis")];
    char CSSPropStringPool_str539[sizeof("-webkit-mask-box-image-repeat")];
    char CSSPropStringPool_str540[sizeof("-webkit-text-emphasis-color")];
    char CSSPropStringPool_str541[sizeof("-webkit-logical-height")];
    char CSSPropStringPool_str542[sizeof("scroll-behavior")];
    char CSSPropStringPool_str543[sizeof("-webkit-column-width")];
    char CSSPropStringPool_str544[sizeof("-webkit-perspective-origin")];
    char CSSPropStringPool_str545[sizeof("-internal-visited-fill")];
    char CSSPropStringPool_str546[sizeof("-webkit-tap-highlight-color")];
    char CSSPropStringPool_str547[sizeof("font-synthesis-small-caps")];
    char CSSPropStringPool_str548[sizeof("-internal-visited-border-bottom-color")];
    char CSSPropStringPool_str549[sizeof("-webkit-border-horizontal-spacing")];
    char CSSPropStringPool_str550[sizeof("-webkit-border-end-style")];
    char CSSPropStringPool_str551[sizeof("-webkit-border-before-style")];
    char CSSPropStringPool_str552[sizeof("-webkit-app-region")];
    char CSSPropStringPool_str553[sizeof("-webkit-text-emphasis-position")];
    char CSSPropStringPool_str554[sizeof("-webkit-box-align")];
    char CSSPropStringPool_str555[sizeof("-webkit-mask-box-image-source")];
    char CSSPropStringPool_str556[sizeof("-webkit-mask-box-image-outset")];
    char CSSPropStringPool_str557[sizeof("stroke-dashoffset")];
    char CSSPropStringPool_str558[sizeof("scroll-margin-right")];
    char CSSPropStringPool_str559[sizeof("-webkit-flex-wrap")];
    char CSSPropStringPool_str560[sizeof("overflow-clip-margin")];
    char CSSPropStringPool_str561[sizeof("-webkit-border-end-width")];
    char CSSPropStringPool_str562[sizeof("-webkit-border-before-width")];
    char CSSPropStringPool_str563[sizeof("-webkit-text-decorations-in-effect")];
    char CSSPropStringPool_str564[sizeof("-webkit-transition-duration")];
    char CSSPropStringPool_str565[sizeof("overflow-wrap")];
    char CSSPropStringPool_str566[sizeof("max-block-size")];
    char CSSPropStringPool_str567[sizeof("pop-up-show-delay")];
    char CSSPropStringPool_str568[sizeof("hyphens")];
    char CSSPropStringPool_str569[sizeof("-internal-visited-background-color")];
    char CSSPropStringPool_str570[sizeof("overflow-block")];
    char CSSPropStringPool_str571[sizeof("-webkit-print-color-adjust")];
    char CSSPropStringPool_str572[sizeof("-internal-visited-border-block-end-color")];
    char CSSPropStringPool_str573[sizeof("visibility")];
    char CSSPropStringPool_str574[sizeof("-webkit-mask-clip")];
    char CSSPropStringPool_str575[sizeof("-webkit-mask-origin")];
    char CSSPropStringPool_str576[sizeof("-webkit-text-security")];
    char CSSPropStringPool_str577[sizeof("-webkit-border-image")];
    char CSSPropStringPool_str578[sizeof("-internal-visited-border-block-start-color")];
    char CSSPropStringPool_str579[sizeof("-webkit-background-clip")];
    char CSSPropStringPool_str580[sizeof("-webkit-background-origin")];
    char CSSPropStringPool_str581[sizeof("-internal-visited-border-left-color")];
    char CSSPropStringPool_str582[sizeof("-webkit-border-after-style")];
    char CSSPropStringPool_str583[sizeof("-webkit-transform-origin-z")];
    char CSSPropStringPool_str584[sizeof("additive-symbols")];
    char CSSPropStringPool_str585[sizeof("-internal-empty-line-height")];
    char CSSPropStringPool_str586[sizeof("contain-intrinsic-width")];
    char CSSPropStringPool_str587[sizeof("overscroll-behavior")];
    char CSSPropStringPool_str588[sizeof("overscroll-behavior-inline")];
    char CSSPropStringPool_str589[sizeof("-internal-visited-text-decoration-color")];
    char CSSPropStringPool_str590[sizeof("-webkit-border-after-width")];
    char CSSPropStringPool_str591[sizeof("-webkit-flex-flow")];
    char CSSPropStringPool_str592[sizeof("text-emphasis-style")];
    char CSSPropStringPool_str593[sizeof("-webkit-box-shadow")];
    char CSSPropStringPool_str594[sizeof("-webkit-text-stroke-width")];
    char CSSPropStringPool_str595[sizeof("border-inline-width")];
    char CSSPropStringPool_str596[sizeof("font-variant-ligatures")];
    char CSSPropStringPool_str597[sizeof("overflow-x")];
    char CSSPropStringPool_str598[sizeof("-internal-visited-text-stroke-color")];
    char CSSPropStringPool_str599[sizeof("text-overflow")];
    char CSSPropStringPool_str600[sizeof("-webkit-flex-shrink")];
    char CSSPropStringPool_str601[sizeof("overflow-anchor")];
    char CSSPropStringPool_str602[sizeof("contain-intrinsic-size")];
    char CSSPropStringPool_str603[sizeof("buffered-rendering")];
    char CSSPropStringPool_str604[sizeof("contain-intrinsic-inline-size")];
    char CSSPropStringPool_str605[sizeof("-epub-text-combine")];
    char CSSPropStringPool_str606[sizeof("-webkit-shape-outside")];
    char CSSPropStringPool_str607[sizeof("-internal-visited-border-right-color")];
    char CSSPropStringPool_str608[sizeof("shape-image-threshold")];
    char CSSPropStringPool_str609[sizeof("border-bottom-right-radius")];
    char CSSPropStringPool_str610[sizeof("-webkit-text-orientation")];
    char CSSPropStringPool_str611[sizeof("-webkit-transition-timing-function")];
    char CSSPropStringPool_str612[sizeof("size-adjust")];
    char CSSPropStringPool_str613[sizeof("overscroll-behavior-block")];
    char CSSPropStringPool_str614[sizeof("overflow-y")];
    char CSSPropStringPool_str615[sizeof("border-bottom-width")];
    char CSSPropStringPool_str616[sizeof("-webkit-box-flex")];
    char CSSPropStringPool_str617[sizeof("-webkit-perspective-origin-x")];
    char CSSPropStringPool_str618[sizeof("-internal-visited-text-fill-color")];
    char CSSPropStringPool_str619[sizeof("-webkit-shape-image-threshold")];
    char CSSPropStringPool_str620[sizeof("justify-content")];
    char CSSPropStringPool_str621[sizeof("contain-intrinsic-height")];
    char CSSPropStringPool_str622[sizeof("justify-items")];
    char CSSPropStringPool_str623[sizeof("-epub-text-emphasis-style")];
    char CSSPropStringPool_str624[sizeof("-webkit-text-size-adjust")];
    char CSSPropStringPool_str625[sizeof("font-synthesis-style")];
    char CSSPropStringPool_str626[sizeof("-webkit-transition-delay")];
    char CSSPropStringPool_str627[sizeof("contain-intrinsic-block-size")];
    char CSSPropStringPool_str628[sizeof("-webkit-mask-box-image-width")];
    char CSSPropStringPool_str629[sizeof("-webkit-perspective-origin-y")];
    char CSSPropStringPool_str630[sizeof("-webkit-text-emphasis-style")];
    char CSSPropStringPool_str631[sizeof("-webkit-transition-property")];
    char CSSPropStringPool_str632[sizeof("overscroll-behavior-x")];
    char CSSPropStringPool_str633[sizeof("-webkit-min-logical-width")];
    char CSSPropStringPool_str634[sizeof("-webkit-box-ordinal-group")];
    char CSSPropStringPool_str635[sizeof("-internal-visited-text-emphasis-color")];
    char CSSPropStringPool_str636[sizeof("backface-visibility")];
    char CSSPropStringPool_str637[sizeof("overscroll-behavior-y")];
    char CSSPropStringPool_str638[sizeof("justify-self")];
    char CSSPropStringPool_str639[sizeof("font-size-adjust")];
    char CSSPropStringPool_str640[sizeof("font-synthesis-weight")];
    char CSSPropStringPool_str641[sizeof("text-justify")];
    char CSSPropStringPool_str642[sizeof("-webkit-background-size")];
    char CSSPropStringPool_str643[sizeof("-webkit-justify-content")];
    char CSSPropStringPool_str644[sizeof("text-size-adjust")];
    char CSSPropStringPool_str645[sizeof("-webkit-min-logical-height")];
    char CSSPropStringPool_str646[sizeof("content-visibility")];
    char CSSPropStringPool_str647[sizeof("-webkit-max-logical-width")];
    char CSSPropStringPool_str648[sizeof("-webkit-hyphenate-character")];
    char CSSPropStringPool_str649[sizeof("object-view-box")];
    char CSSPropStringPool_str650[sizeof("-webkit-box-sizing")];
    char CSSPropStringPool_str651[sizeof("-webkit-max-logical-height")];
    char CSSPropStringPool_str652[sizeof("-webkit-backface-visibility")];
  };
static const struct CSSPropStringPool_t CSSPropStringPool_contents =
  {
    "r",
    "color",
    "d",
    "end",
    "order",
    "src",
    "content",
    "direction",
    "all",
    "inset",
    "clear",
    "inset-inline",
    "contain",
    "inset-inline-end",
    "container",
    "caret-color",
    "accent-color",
    "rotate",
    "scale",
    "clip",
    "orientation",
    "top",
    "isolation",
    "grid",
    "start",
    "transition",
    "color-rendering",
    "stop-color",
    "position",
    "pad",
    "range",
    "translate",
    "paint-order",
    "place-content",
    "align-content",
    "animation",
    "container-name",
    "toggle",
    "caption-side",
    "grid-area",
    "margin",
    "toggle-root",
    "gap",
    "page",
    "margin-inline",
    "margin-inline-end",
    "padding",
    "scroll-margin",
    "aspect-ratio",
    "padding-inline",
    "place-items",
    "scroll-margin-inline",
    "align-items",
    "scroll-margin-inline-end",
    "scroll-padding",
    "outline",
    "outline-color",
    "letter-spacing",
    "cursor",
    "source",
    "animation-name",
    "margin-top",
    "app-region",
    "page-orientation",
    "appearance",
    "grid-gap",
    "image-rendering",
    "counter-set",
    "padding-top",
    "grid-template",
    "counter-reset",
    "scroll-snap-stop",
    "padding-inline-start",
    "user-select",
    "clip-rule",
    "columns",
    "scroll-margin-inline-start",
    "scroll-padding-bottom",
    "image-orientation",
    "counter-increment",
    "toggle-trigger",
    "stroke",
    "quotes",
    "scroll-margin-top",
    "color-interpolation",
    "unicode-range",
    "border",
    "border-color",
    "grid-column",
    "border-inline",
    "grid-column-end",
    "border-inline-end",
    "border-inline-end-color",
    "animation-direction",
    "marker",
    "column-span",
    "grid-template-areas",
    "marker-end",
    "mask",
    "bottom",
    "speak",
    "page-transition-tag",
    "border-top",
    "border-inline-color",
    "inset-inline-start",
    "column-gap",
    "stroke-linecap",
    "border-top-color",
    "marker-mid",
    "grid-column-start",
    "margin-inline-start",
    "marker-start",
    "border-collapse",
    "speak-as",
    "column-rule",
    "column-count",
    "scroll-padding-top",
    "toggle-group",
    "border-image",
    "dominant-baseline",
    "scroll-padding-block",
    "grid-column-gap",
    "base-palette",
    "scroll-padding-block-end",
    "grid-row",
    "grid-row-end",
    "border-spacing",
    "column-rule-color",
    "transition-duration",
    "unicode-bidi",
    "margin-bottom",
    "padding-bottom",
    "writing-mode",
    "scroll-padding-block-start",
    "grid-row-start",
    "row-gap",
    "grid-template-columns",
    "border-radius",
    "grid-auto-columns",
    "border-inline-start",
    "animation-iteration-count",
    "border-inline-start-color",
    "border-image-repeat",
    "word-spacing",
    "inset-block",
    "line-break",
    "scroll-margin-bottom",
    "border-end-end-radius",
    "inset-block-end",
    "break-inside",
    "grid-row-gap",
    "border-start-end-radius",
    "fill",
    "scrollbar-gutter",
    "font",
    "flood-color",
    "left",
    "filter",
    "border-bottom",
    "float",
    "inset-block-start",
    "margin-block",
    "-internal-forced-color",
    "margin-block-end",
    "grid-template-rows",
    "grid-auto-rows",
    "padding-block",
    "border-bottom-color",
    "padding-block-end",
    "transform",
    "place-self",
    "align-self",
    "font-palette",
    "scroll-margin-block",
    "page-break-inside",
    "animation-fill-mode",
    "scroll-margin-block-end",
    "border-top-width",
    "margin-left",
    "border-end-start-radius",
    "widows",
    "padding-left",
    "transform-origin",
    "padding-inline-end",
    "fill-rule",
    "background",
    "font-optical-sizing",
    "scroll-margin-block-start",
    "border-block",
    "border-image-outset",
    "border-block-end",
    "background-color",
    "border-block-end-color",
    "column-fill",
    "word-wrap",
    "scroll-padding-left",
    "background-clip",
    "-internal-forced-outline-color",
    "border-block-color",
    "border-left",
    "x",
    "rx",
    "cx",
    "border-start-start-radius",
    "-webkit-order",
    "padding-block-start",
    "font-kerning",
    "color-interpolation-filters",
    "word-break",
    "-webkit-locale",
    "text-indent",
    "-internal-forced-border-color",
    "border-left-color",
    "margin-block-start",
    "inherits",
    "text-decoration",
    "text-orientation",
    "transition-timing-function",
    "anchor-scroll",
    "text-rendering",
    "right",
    "text-decoration-color",
    "text-decoration-line",
    "color-scheme",
    "text-align",
    "orphans",
    "background-position",
    "anchor-name",
    "-epub-writing-mode",
    "-webkit-align-content",
    "lighting-color",
    "-webkit-animation",
    "text-align-last",
    "clip-path",
    "-webkit-padding-end",
    "scroll-snap-align",
    "forced-color-adjust",
    "-webkit-margin-start",
    "-webkit-animation-direction",
    "-webkit-appearance",
    "border-block-start",
    "shape-rendering",
    "border-block-start-color",
    "background-blend-mode",
    "background-repeat",
    "-webkit-columns",
    "margin-right",
    "-webkit-animation-name",
    "-webkit-padding-start",
    "touch-action",
    "padding-right",
    "fallback",
    "-webkit-user-select",
    "shape-margin",
    "-epub-word-break",
    "break-after",
    "y",
    "ry",
    "cy",
    "scroll-padding-right",
    "-webkit-column-span",
    "text-underline-position",
    "border-top-left-radius",
    "backdrop-filter",
    "offset",
    "-webkit-mask",
    "-webkit-align-items",
    "-webkit-border-start",
    "-webkit-border-start-color",
    "grid-auto-flow",
    "shape-outside",
    "-webkit-mask-size",
    "list-style",
    "position-fallback",
    "-webkit-line-clamp",
    "offset-rotate",
    "mix-blend-mode",
    "border-right",
    "system",
    "opacity",
    "-webkit-animation-duration",
    "-internal-align-self-block",
    "offset-distance",
    "-webkit-column-count",
    "display",
    "-webkit-mask-position",
    "container-type",
    "-webkit-column-rule",
    "offset-position",
    "-webkit-column-rule-color",
    "-webkit-animation-iteration-count",
    "width",
    "-webkit-mask-composite",
    "empty-cells",
    "border-right-color",
    "-webkit-mask-repeat",
    "page-break-after",
    "animation-delay",
    "scroll-margin-left",
    "min-width",
    "stop-opacity",
    "will-change",
    "outline-offset",
    "outline-style",
    "-webkit-writing-mode",
    "break-before",
    "white-space",
    "-webkit-column-break-inside",
    "-webkit-user-drag",
    "-webkit-border-radius",
    "-internal-forced-background-color",
    "origin-trial-test-property",
    "animation-play-state",
    "-epub-text-orientation",
    "flex",
    "outline-width",
    "-webkit-filter",
    "list-style-position",
    "border-style",
    "background-image",
    "flex-direction",
    "border-inline-end-style",
    "column-width",
    "symbols",
    "prefix",
    "text-decoration-skip-ink",
    "stroke-opacity",
    "-webkit-rtl-ordering",
    "font-stretch",
    "page-break-before",
    "stroke-width",
    "mask-type",
    "border-width",
    "-webkit-mask-image",
    "-webkit-transform",
    "border-inline-end-width",
    "text-transform",
    "size",
    "-webkit-margin-end",
    "resize",
    "-webkit-margin-before",
    "inline-size",
    "scrollbar-width",
    "zoom",
    "column-rule-style",
    "border-inline-style",
    "-webkit-transform-origin",
    "min-inline-size",
    "min-zoom",
    "font-feature-settings",
    "-webkit-padding-after",
    "table-layout",
    "-webkit-animation-fill-mode",
    "transition-delay",
    "ruby-position",
    "override-colors",
    "border-image-width",
    "border-top-right-radius",
    "border-inline-start-style",
    "-webkit-border-vertical-spacing",
    "ascent-override",
    "-webkit-border-end",
    "-webkit-border-before",
    "-webkit-border-end-color",
    "-webkit-border-before-color",
    "pointer-events",
    "negative",
    "font-style",
    "vertical-align",
    "flex-basis",
    "perspective",
    "border-inline-start-width",
    "user-zoom",
    "line-gap-override",
    "background-attachment",
    "transform-box",
    "column-rule-width",
    "text-anchor",
    "baseline-shift",
    "fill-opacity",
    "flood-opacity",
    "animation-timing-function",
    "font-display",
    "-webkit-margin-after",
    "flex-grow",
    "transform-style",
    "background-position-x",
    "height",
    "line-height",
    "initial-value",
    "tab-size",
    "flex-wrap",
    "-webkit-padding-before",
    "-webkit-animation-timing-function",
    "font-weight",
    "scroll-snap-type",
    "min-height",
    "transition-property",
    "list-style-image",
    "border-bottom-style",
    "math-depth",
    "text-emphasis",
    "background-repeat-x",
    "border-block-end-style",
    "-webkit-column-break-after",
    "-webkit-line-break",
    "line-height-step",
    "border-bottom-left-radius",
    "-webkit-border-after",
    "-webkit-border-after-color",
    "text-emphasis-color",
    "-webkit-border-bottom-left-radius",
    "-webkit-text-combine",
    "animation-timeline",
    "-webkit-text-stroke",
    "scroll-padding-inline",
    "-webkit-text-stroke-color",
    "border-block-width",
    "-epub-text-transform",
    "scroll-padding-inline-end",
    "border-block-end-width",
    "-webkit-column-gap",
    "-webkit-clip-path",
    "border-image-source",
    "block-size",
    "syntax",
    "-webkit-box-pack",
    "border-left-style",
    "text-emphasis-position",
    "border-top-style",
    "scroll-customization",
    "scroll-padding-inline-start",
    "-webkit-opacity",
    "offset-anchor",
    "min-block-size",
    "stroke-linejoin",
    "-webkit-align-self",
    "-webkit-mask-position-x",
    "text-decoration-style",
    "text-decoration-thickness",
    "background-position-y",
    "font-size",
    "math-style",
    "-webkit-mask-repeat-x",
    "offset-path",
    "-webkit-border-top-left-radius",
    "animation-duration",
    "-webkit-column-break-before",
    "text-shadow",
    "suffix",
    "max-width",
    "object-position",
    "-webkit-animation-delay",
    "stroke-miterlimit",
    "-webkit-shape-margin",
    "background-repeat-y",
    "-internal-font-size-delta",
    "-webkit-logical-width",
    "border-block-start-style",
    "descent-override",
    "border-image-slice",
    "font-variant",
    "border-left-width",
    "-internal-visited-color",
    "text-underline-offset",
    "-webkit-flex",
    "-internal-forced-visited-color",
    "alignment-baseline",
    "background-size",
    "-webkit-animation-play-state",
    "-internal-visited-caret-color",
    "border-block-start-width",
    "-webkit-flex-direction",
    "border-block-style",
    "flex-flow",
    "-webkit-text-fill-color",
    "-webkit-border-start-style",
    "font-family",
    "-webkit-border-bottom-right-radius",
    "font-variation-settings",
    "text-combine-upright",
    "font-variant-caps",
    "-webkit-mask-position-y",
    "font-variant-east-asian",
    "list-style-type",
    "z-index",
    "box-shadow",
    "-webkit-column-rule-style",
    "-webkit-mask-repeat-y",
    "-epub-caption-side",
    "font-variant-numeric",
    "-webkit-border-start-width",
    "-internal-visited-outline-color",
    "math-shift",
    "-webkit-transform-origin-x",
    "border-right-width",
    "-webkit-ruby-position",
    "max-inline-size",
    "-webkit-font-smoothing",
    "max-zoom",
    "-webkit-column-rule-width",
    "-webkit-border-top-right-radius",
    "-internal-visited-stroke",
    "overflow",
    "overflow-inline",
    "-webkit-box-orient",
    "-webkit-font-feature-settings",
    "-internal-visited-border-inline-end-color",
    "-webkit-box-direction",
    "flex-shrink",
    "-webkit-box-decoration-break",
    "-webkit-box-reflect",
    "-webkit-flex-basis",
    "-internal-visited-border-top-color",
    "viewport-fit",
    "-internal-visited-border-inline-start-color",
    "pop-up-hide-delay",
    "background-origin",
    "-epub-text-emphasis",
    "-epub-text-emphasis-color",
    "-internal-visited-column-rule-color",
    "perspective-origin",
    "font-synthesis",
    "object-fit",
    "-webkit-mask-box-image",
    "-webkit-transform-style",
    "box-sizing",
    "-webkit-mask-box-image-slice",
    "-webkit-flex-grow",
    "-webkit-transform-origin-y",
    "-webkit-transition",
    "-webkit-highlight",
    "-webkit-perspective",
    "max-height",
    "vector-effect",
    "border-right-style",
    "-webkit-user-modify",
    "stroke-dasharray",
    "-webkit-text-emphasis",
    "-webkit-mask-box-image-repeat",
    "-webkit-text-emphasis-color",
    "-webkit-logical-height",
    "scroll-behavior",
    "-webkit-column-width",
    "-webkit-perspective-origin",
    "-internal-visited-fill",
    "-webkit-tap-highlight-color",
    "font-synthesis-small-caps",
    "-internal-visited-border-bottom-color",
    "-webkit-border-horizontal-spacing",
    "-webkit-border-end-style",
    "-webkit-border-before-style",
    "-webkit-app-region",
    "-webkit-text-emphasis-position",
    "-webkit-box-align",
    "-webkit-mask-box-image-source",
    "-webkit-mask-box-image-outset",
    "stroke-dashoffset",
    "scroll-margin-right",
    "-webkit-flex-wrap",
    "overflow-clip-margin",
    "-webkit-border-end-width",
    "-webkit-border-before-width",
    "-webkit-text-decorations-in-effect",
    "-webkit-transition-duration",
    "overflow-wrap",
    "max-block-size",
    "pop-up-show-delay",
    "hyphens",
    "-internal-visited-background-color",
    "overflow-block",
    "-webkit-print-color-adjust",
    "-internal-visited-border-block-end-color",
    "visibility",
    "-webkit-mask-clip",
    "-webkit-mask-origin",
    "-webkit-text-security",
    "-webkit-border-image",
    "-internal-visited-border-block-start-color",
    "-webkit-background-clip",
    "-webkit-background-origin",
    "-internal-visited-border-left-color",
    "-webkit-border-after-style",
    "-webkit-transform-origin-z",
    "additive-symbols",
    "-internal-empty-line-height",
    "contain-intrinsic-width",
    "overscroll-behavior",
    "overscroll-behavior-inline",
    "-internal-visited-text-decoration-color",
    "-webkit-border-after-width",
    "-webkit-flex-flow",
    "text-emphasis-style",
    "-webkit-box-shadow",
    "-webkit-text-stroke-width",
    "border-inline-width",
    "font-variant-ligatures",
    "overflow-x",
    "-internal-visited-text-stroke-color",
    "text-overflow",
    "-webkit-flex-shrink",
    "overflow-anchor",
    "contain-intrinsic-size",
    "buffered-rendering",
    "contain-intrinsic-inline-size",
    "-epub-text-combine",
    "-webkit-shape-outside",
    "-internal-visited-border-right-color",
    "shape-image-threshold",
    "border-bottom-right-radius",
    "-webkit-text-orientation",
    "-webkit-transition-timing-function",
    "size-adjust",
    "overscroll-behavior-block",
    "overflow-y",
    "border-bottom-width",
    "-webkit-box-flex",
    "-webkit-perspective-origin-x",
    "-internal-visited-text-fill-color",
    "-webkit-shape-image-threshold",
    "justify-content",
    "contain-intrinsic-height",
    "justify-items",
    "-epub-text-emphasis-style",
    "-webkit-text-size-adjust",
    "font-synthesis-style",
    "-webkit-transition-delay",
    "contain-intrinsic-block-size",
    "-webkit-mask-box-image-width",
    "-webkit-perspective-origin-y",
    "-webkit-text-emphasis-style",
    "-webkit-transition-property",
    "overscroll-behavior-x",
    "-webkit-min-logical-width",
    "-webkit-box-ordinal-group",
    "-internal-visited-text-emphasis-color",
    "backface-visibility",
    "overscroll-behavior-y",
    "justify-self",
    "font-size-adjust",
    "font-synthesis-weight",
    "text-justify",
    "-webkit-background-size",
    "-webkit-justify-content",
    "text-size-adjust",
    "-webkit-min-logical-height",
    "content-visibility",
    "-webkit-max-logical-width",
    "-webkit-hyphenate-character",
    "object-view-box",
    "-webkit-box-sizing",
    "-webkit-max-logical-height",
    "-webkit-backface-visibility"
  };
#define CSSPropStringPool ((const char *) &CSSPropStringPool_contents)
const struct Property *
CSSPropertyNamesHash::findPropertyImpl (const char *str, size_t len)
{
  enum
    {
      TOTAL_KEYWORDS = 653,
      MIN_WORD_LENGTH = 1,
      MAX_WORD_LENGTH = 43,
      MIN_HASH_VALUE = 1,
      MAX_HASH_VALUE = 4172
    };

  static const struct Property property_word_list[] =
    {
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str0, static_cast<int>(CSSPropertyID::kR)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str1, static_cast<int>(CSSPropertyID::kColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str2, static_cast<int>(CSSPropertyID::kD)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str3, static_cast<int>(CSSPropertyID::kEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str4, static_cast<int>(CSSPropertyID::kOrder)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str5, static_cast<int>(CSSPropertyID::kSrc)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str6, static_cast<int>(CSSPropertyID::kContent)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str7, static_cast<int>(CSSPropertyID::kDirection)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str8, static_cast<int>(CSSPropertyID::kAll)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str9, static_cast<int>(CSSPropertyID::kInset)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str10, static_cast<int>(CSSPropertyID::kClear)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str11, static_cast<int>(CSSPropertyID::kInsetInline)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str12, static_cast<int>(CSSPropertyID::kContain)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str13, static_cast<int>(CSSPropertyID::kInsetInlineEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str14, static_cast<int>(CSSPropertyID::kContainer)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str15, static_cast<int>(CSSPropertyID::kCaretColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str16, static_cast<int>(CSSPropertyID::kAccentColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str17, static_cast<int>(CSSPropertyID::kRotate)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str18, static_cast<int>(CSSPropertyID::kScale)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str19, static_cast<int>(CSSPropertyID::kClip)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str20, static_cast<int>(CSSPropertyID::kOrientation)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str21, static_cast<int>(CSSPropertyID::kTop)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str22, static_cast<int>(CSSPropertyID::kIsolation)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str23, static_cast<int>(CSSPropertyID::kGrid)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str24, static_cast<int>(CSSPropertyID::kStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str25, static_cast<int>(CSSPropertyID::kTransition)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str26, static_cast<int>(CSSPropertyID::kColorRendering)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str27, static_cast<int>(CSSPropertyID::kStopColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str28, static_cast<int>(CSSPropertyID::kPosition)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str29, static_cast<int>(CSSPropertyID::kPad)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str30, static_cast<int>(CSSPropertyID::kRange)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str31, static_cast<int>(CSSPropertyID::kTranslate)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str32, static_cast<int>(CSSPropertyID::kPaintOrder)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str33, static_cast<int>(CSSPropertyID::kPlaceContent)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str34, static_cast<int>(CSSPropertyID::kAlignContent)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str35, static_cast<int>(CSSPropertyID::kAnimation)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str36, static_cast<int>(CSSPropertyID::kContainerName)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str37, static_cast<int>(CSSPropertyID::kToggle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str38, static_cast<int>(CSSPropertyID::kCaptionSide)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str39, static_cast<int>(CSSPropertyID::kGridArea)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str40, static_cast<int>(CSSPropertyID::kMargin)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str41, static_cast<int>(CSSPropertyID::kToggleRoot)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str42, static_cast<int>(CSSPropertyID::kGap)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str43, static_cast<int>(CSSPropertyID::kPage)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str44, static_cast<int>(CSSPropertyID::kMarginInline)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str45, static_cast<int>(CSSPropertyID::kMarginInlineEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str46, static_cast<int>(CSSPropertyID::kPadding)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str47, static_cast<int>(CSSPropertyID::kScrollMargin)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str48, static_cast<int>(CSSPropertyID::kAspectRatio)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str49, static_cast<int>(CSSPropertyID::kPaddingInline)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str50, static_cast<int>(CSSPropertyID::kPlaceItems)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str51, static_cast<int>(CSSPropertyID::kScrollMarginInline)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str52, static_cast<int>(CSSPropertyID::kAlignItems)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str53, static_cast<int>(CSSPropertyID::kScrollMarginInlineEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str54, static_cast<int>(CSSPropertyID::kScrollPadding)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str55, static_cast<int>(CSSPropertyID::kOutline)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str56, static_cast<int>(CSSPropertyID::kOutlineColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str57, static_cast<int>(CSSPropertyID::kLetterSpacing)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str58, static_cast<int>(CSSPropertyID::kCursor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str59, static_cast<int>(CSSPropertyID::kSource)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str60, static_cast<int>(CSSPropertyID::kAnimationName)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str61, static_cast<int>(CSSPropertyID::kMarginTop)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str62, static_cast<int>(CSSPropertyID::kAppRegion)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str63, static_cast<int>(CSSPropertyID::kPageOrientation)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str64, static_cast<int>(CSSPropertyID::kAppearance)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str65, static_cast<int>(CSSPropertyID::kGridGap)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str66, static_cast<int>(CSSPropertyID::kImageRendering)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str67, static_cast<int>(CSSPropertyID::kCounterSet)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str68, static_cast<int>(CSSPropertyID::kPaddingTop)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str69, static_cast<int>(CSSPropertyID::kGridTemplate)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str70, static_cast<int>(CSSPropertyID::kCounterReset)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str71, static_cast<int>(CSSPropertyID::kScrollSnapStop)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str72, static_cast<int>(CSSPropertyID::kPaddingInlineStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str73, static_cast<int>(CSSPropertyID::kUserSelect)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str74, static_cast<int>(CSSPropertyID::kClipRule)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str75, static_cast<int>(CSSPropertyID::kColumns)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str76, static_cast<int>(CSSPropertyID::kScrollMarginInlineStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str77, static_cast<int>(CSSPropertyID::kScrollPaddingBottom)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str78, static_cast<int>(CSSPropertyID::kImageOrientation)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str79, static_cast<int>(CSSPropertyID::kCounterIncrement)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str80, static_cast<int>(CSSPropertyID::kToggleTrigger)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str81, static_cast<int>(CSSPropertyID::kStroke)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str82, static_cast<int>(CSSPropertyID::kQuotes)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str83, static_cast<int>(CSSPropertyID::kScrollMarginTop)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str84, static_cast<int>(CSSPropertyID::kColorInterpolation)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str85, static_cast<int>(CSSPropertyID::kUnicodeRange)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str86, static_cast<int>(CSSPropertyID::kBorder)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str87, static_cast<int>(CSSPropertyID::kBorderColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str88, static_cast<int>(CSSPropertyID::kGridColumn)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str89, static_cast<int>(CSSPropertyID::kBorderInline)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str90, static_cast<int>(CSSPropertyID::kGridColumnEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str91, static_cast<int>(CSSPropertyID::kBorderInlineEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str92, static_cast<int>(CSSPropertyID::kBorderInlineEndColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str93, static_cast<int>(CSSPropertyID::kAnimationDirection)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str94, static_cast<int>(CSSPropertyID::kMarker)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str95, static_cast<int>(CSSPropertyID::kColumnSpan)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str96, static_cast<int>(CSSPropertyID::kGridTemplateAreas)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str97, static_cast<int>(CSSPropertyID::kMarkerEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str98, static_cast<int>(CSSPropertyID::kMask)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str99, static_cast<int>(CSSPropertyID::kBottom)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str100, static_cast<int>(CSSPropertyID::kSpeak)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str101, static_cast<int>(CSSPropertyID::kPageTransitionTag)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str102, static_cast<int>(CSSPropertyID::kBorderTop)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str103, static_cast<int>(CSSPropertyID::kBorderInlineColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str104, static_cast<int>(CSSPropertyID::kInsetInlineStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str105, static_cast<int>(CSSPropertyID::kColumnGap)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str106, static_cast<int>(CSSPropertyID::kStrokeLinecap)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str107, static_cast<int>(CSSPropertyID::kBorderTopColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str108, static_cast<int>(CSSPropertyID::kMarkerMid)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str109, static_cast<int>(CSSPropertyID::kGridColumnStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str110, static_cast<int>(CSSPropertyID::kMarginInlineStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str111, static_cast<int>(CSSPropertyID::kMarkerStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str112, static_cast<int>(CSSPropertyID::kBorderCollapse)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str113, static_cast<int>(CSSPropertyID::kSpeakAs)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str114, static_cast<int>(CSSPropertyID::kColumnRule)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str115, static_cast<int>(CSSPropertyID::kColumnCount)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str116, static_cast<int>(CSSPropertyID::kScrollPaddingTop)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str117, static_cast<int>(CSSPropertyID::kToggleGroup)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str118, static_cast<int>(CSSPropertyID::kBorderImage)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str119, static_cast<int>(CSSPropertyID::kDominantBaseline)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str120, static_cast<int>(CSSPropertyID::kScrollPaddingBlock)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str121, static_cast<int>(CSSPropertyID::kGridColumnGap)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str122, static_cast<int>(CSSPropertyID::kBasePalette)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str123, static_cast<int>(CSSPropertyID::kScrollPaddingBlockEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str124, static_cast<int>(CSSPropertyID::kGridRow)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str125, static_cast<int>(CSSPropertyID::kGridRowEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str126, static_cast<int>(CSSPropertyID::kBorderSpacing)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str127, static_cast<int>(CSSPropertyID::kColumnRuleColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str128, static_cast<int>(CSSPropertyID::kTransitionDuration)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str129, static_cast<int>(CSSPropertyID::kUnicodeBidi)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str130, static_cast<int>(CSSPropertyID::kMarginBottom)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str131, static_cast<int>(CSSPropertyID::kPaddingBottom)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str132, static_cast<int>(CSSPropertyID::kWritingMode)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str133, static_cast<int>(CSSPropertyID::kScrollPaddingBlockStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str134, static_cast<int>(CSSPropertyID::kGridRowStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str135, static_cast<int>(CSSPropertyID::kRowGap)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str136, static_cast<int>(CSSPropertyID::kGridTemplateColumns)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str137, static_cast<int>(CSSPropertyID::kBorderRadius)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str138, static_cast<int>(CSSPropertyID::kGridAutoColumns)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str139, static_cast<int>(CSSPropertyID::kBorderInlineStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str140, static_cast<int>(CSSPropertyID::kAnimationIterationCount)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str141, static_cast<int>(CSSPropertyID::kBorderInlineStartColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str142, static_cast<int>(CSSPropertyID::kBorderImageRepeat)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str143, static_cast<int>(CSSPropertyID::kWordSpacing)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str144, static_cast<int>(CSSPropertyID::kInsetBlock)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str145, static_cast<int>(CSSPropertyID::kLineBreak)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str146, static_cast<int>(CSSPropertyID::kScrollMarginBottom)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str147, static_cast<int>(CSSPropertyID::kBorderEndEndRadius)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str148, static_cast<int>(CSSPropertyID::kInsetBlockEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str149, static_cast<int>(CSSPropertyID::kBreakInside)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str150, static_cast<int>(CSSPropertyID::kGridRowGap)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str151, static_cast<int>(CSSPropertyID::kBorderStartEndRadius)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str152, static_cast<int>(CSSPropertyID::kFill)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str153, static_cast<int>(CSSPropertyID::kScrollbarGutter)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str154, static_cast<int>(CSSPropertyID::kFont)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str155, static_cast<int>(CSSPropertyID::kFloodColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str156, static_cast<int>(CSSPropertyID::kLeft)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str157, static_cast<int>(CSSPropertyID::kFilter)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str158, static_cast<int>(CSSPropertyID::kBorderBottom)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str159, static_cast<int>(CSSPropertyID::kFloat)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str160, static_cast<int>(CSSPropertyID::kInsetBlockStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str161, static_cast<int>(CSSPropertyID::kMarginBlock)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str162, static_cast<int>(CSSPropertyID::kInternalForcedColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str163, static_cast<int>(CSSPropertyID::kMarginBlockEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str164, static_cast<int>(CSSPropertyID::kGridTemplateRows)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str165, static_cast<int>(CSSPropertyID::kGridAutoRows)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str166, static_cast<int>(CSSPropertyID::kPaddingBlock)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str167, static_cast<int>(CSSPropertyID::kBorderBottomColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str168, static_cast<int>(CSSPropertyID::kPaddingBlockEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str169, static_cast<int>(CSSPropertyID::kTransform)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str170, static_cast<int>(CSSPropertyID::kPlaceSelf)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str171, static_cast<int>(CSSPropertyID::kAlignSelf)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str172, static_cast<int>(CSSPropertyID::kFontPalette)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str173, static_cast<int>(CSSPropertyID::kScrollMarginBlock)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str174, static_cast<int>(CSSPropertyID::kPageBreakInside)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str175, static_cast<int>(CSSPropertyID::kAnimationFillMode)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str176, static_cast<int>(CSSPropertyID::kScrollMarginBlockEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str177, static_cast<int>(CSSPropertyID::kBorderTopWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str178, static_cast<int>(CSSPropertyID::kMarginLeft)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str179, static_cast<int>(CSSPropertyID::kBorderEndStartRadius)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str180, static_cast<int>(CSSPropertyID::kWidows)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str181, static_cast<int>(CSSPropertyID::kPaddingLeft)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str182, static_cast<int>(CSSPropertyID::kTransformOrigin)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str183, static_cast<int>(CSSPropertyID::kPaddingInlineEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str184, static_cast<int>(CSSPropertyID::kFillRule)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str185, static_cast<int>(CSSPropertyID::kBackground)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str186, static_cast<int>(CSSPropertyID::kFontOpticalSizing)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str187, static_cast<int>(CSSPropertyID::kScrollMarginBlockStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str188, static_cast<int>(CSSPropertyID::kBorderBlock)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str189, static_cast<int>(CSSPropertyID::kBorderImageOutset)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str190, static_cast<int>(CSSPropertyID::kBorderBlockEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str191, static_cast<int>(CSSPropertyID::kBackgroundColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str192, static_cast<int>(CSSPropertyID::kBorderBlockEndColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str193, static_cast<int>(CSSPropertyID::kColumnFill)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str194, static_cast<int>(CSSPropertyID::kAliasWordWrap)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str195, static_cast<int>(CSSPropertyID::kScrollPaddingLeft)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str196, static_cast<int>(CSSPropertyID::kBackgroundClip)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str197, static_cast<int>(CSSPropertyID::kInternalForcedOutlineColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str198, static_cast<int>(CSSPropertyID::kBorderBlockColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str199, static_cast<int>(CSSPropertyID::kBorderLeft)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str200, static_cast<int>(CSSPropertyID::kX)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str201, static_cast<int>(CSSPropertyID::kRx)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str202, static_cast<int>(CSSPropertyID::kCx)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str203, static_cast<int>(CSSPropertyID::kBorderStartStartRadius)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str204, static_cast<int>(CSSPropertyID::kAliasWebkitOrder)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str205, static_cast<int>(CSSPropertyID::kPaddingBlockStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str206, static_cast<int>(CSSPropertyID::kFontKerning)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str207, static_cast<int>(CSSPropertyID::kColorInterpolationFilters)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str208, static_cast<int>(CSSPropertyID::kWordBreak)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str209, static_cast<int>(CSSPropertyID::kWebkitLocale)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str210, static_cast<int>(CSSPropertyID::kTextIndent)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str211, static_cast<int>(CSSPropertyID::kInternalForcedBorderColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str212, static_cast<int>(CSSPropertyID::kBorderLeftColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str213, static_cast<int>(CSSPropertyID::kMarginBlockStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str214, static_cast<int>(CSSPropertyID::kInherits)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str215, static_cast<int>(CSSPropertyID::kTextDecoration)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str216, static_cast<int>(CSSPropertyID::kTextOrientation)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str217, static_cast<int>(CSSPropertyID::kTransitionTimingFunction)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str218, static_cast<int>(CSSPropertyID::kAnchorScroll)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str219, static_cast<int>(CSSPropertyID::kTextRendering)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str220, static_cast<int>(CSSPropertyID::kRight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str221, static_cast<int>(CSSPropertyID::kTextDecorationColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str222, static_cast<int>(CSSPropertyID::kTextDecorationLine)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str223, static_cast<int>(CSSPropertyID::kColorScheme)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str224, static_cast<int>(CSSPropertyID::kTextAlign)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str225, static_cast<int>(CSSPropertyID::kOrphans)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str226, static_cast<int>(CSSPropertyID::kBackgroundPosition)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str227, static_cast<int>(CSSPropertyID::kAnchorName)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str228, static_cast<int>(CSSPropertyID::kAliasEpubWritingMode)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str229, static_cast<int>(CSSPropertyID::kAliasWebkitAlignContent)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str230, static_cast<int>(CSSPropertyID::kLightingColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str231, static_cast<int>(CSSPropertyID::kAliasWebkitAnimation)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str232, static_cast<int>(CSSPropertyID::kTextAlignLast)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str233, static_cast<int>(CSSPropertyID::kClipPath)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str234, static_cast<int>(CSSPropertyID::kAliasWebkitPaddingEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str235, static_cast<int>(CSSPropertyID::kScrollSnapAlign)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str236, static_cast<int>(CSSPropertyID::kForcedColorAdjust)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str237, static_cast<int>(CSSPropertyID::kAliasWebkitMarginStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str238, static_cast<int>(CSSPropertyID::kAliasWebkitAnimationDirection)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str239, static_cast<int>(CSSPropertyID::kAliasWebkitAppearance)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str240, static_cast<int>(CSSPropertyID::kBorderBlockStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str241, static_cast<int>(CSSPropertyID::kShapeRendering)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str242, static_cast<int>(CSSPropertyID::kBorderBlockStartColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str243, static_cast<int>(CSSPropertyID::kBackgroundBlendMode)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str244, static_cast<int>(CSSPropertyID::kBackgroundRepeat)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str245, static_cast<int>(CSSPropertyID::kAliasWebkitColumns)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str246, static_cast<int>(CSSPropertyID::kMarginRight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str247, static_cast<int>(CSSPropertyID::kAliasWebkitAnimationName)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str248, static_cast<int>(CSSPropertyID::kAliasWebkitPaddingStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str249, static_cast<int>(CSSPropertyID::kTouchAction)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str250, static_cast<int>(CSSPropertyID::kPaddingRight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str251, static_cast<int>(CSSPropertyID::kFallback)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str252, static_cast<int>(CSSPropertyID::kAliasWebkitUserSelect)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str253, static_cast<int>(CSSPropertyID::kShapeMargin)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str254, static_cast<int>(CSSPropertyID::kAliasEpubWordBreak)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str255, static_cast<int>(CSSPropertyID::kBreakAfter)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str256, static_cast<int>(CSSPropertyID::kY)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str257, static_cast<int>(CSSPropertyID::kRy)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str258, static_cast<int>(CSSPropertyID::kCy)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str259, static_cast<int>(CSSPropertyID::kScrollPaddingRight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str260, static_cast<int>(CSSPropertyID::kAliasWebkitColumnSpan)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str261, static_cast<int>(CSSPropertyID::kTextUnderlinePosition)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str262, static_cast<int>(CSSPropertyID::kBorderTopLeftRadius)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str263, static_cast<int>(CSSPropertyID::kBackdropFilter)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str264, static_cast<int>(CSSPropertyID::kOffset)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str265, static_cast<int>(CSSPropertyID::kWebkitMask)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str266, static_cast<int>(CSSPropertyID::kAliasWebkitAlignItems)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str267, static_cast<int>(CSSPropertyID::kAliasWebkitBorderStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str268, static_cast<int>(CSSPropertyID::kAliasWebkitBorderStartColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str269, static_cast<int>(CSSPropertyID::kGridAutoFlow)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str270, static_cast<int>(CSSPropertyID::kShapeOutside)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str271, static_cast<int>(CSSPropertyID::kWebkitMaskSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str272, static_cast<int>(CSSPropertyID::kListStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str273, static_cast<int>(CSSPropertyID::kPositionFallback)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str274, static_cast<int>(CSSPropertyID::kWebkitLineClamp)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str275, static_cast<int>(CSSPropertyID::kOffsetRotate)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str276, static_cast<int>(CSSPropertyID::kMixBlendMode)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str277, static_cast<int>(CSSPropertyID::kBorderRight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str278, static_cast<int>(CSSPropertyID::kSystem)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str279, static_cast<int>(CSSPropertyID::kOpacity)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str280, static_cast<int>(CSSPropertyID::kAliasWebkitAnimationDuration)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str281, static_cast<int>(CSSPropertyID::kInternalAlignSelfBlock)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str282, static_cast<int>(CSSPropertyID::kOffsetDistance)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str283, static_cast<int>(CSSPropertyID::kAliasWebkitColumnCount)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str284, static_cast<int>(CSSPropertyID::kDisplay)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str285, static_cast<int>(CSSPropertyID::kWebkitMaskPosition)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str286, static_cast<int>(CSSPropertyID::kContainerType)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str287, static_cast<int>(CSSPropertyID::kAliasWebkitColumnRule)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str288, static_cast<int>(CSSPropertyID::kOffsetPosition)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str289, static_cast<int>(CSSPropertyID::kAliasWebkitColumnRuleColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str290, static_cast<int>(CSSPropertyID::kAliasWebkitAnimationIterationCount)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str291, static_cast<int>(CSSPropertyID::kWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str292, static_cast<int>(CSSPropertyID::kWebkitMaskComposite)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str293, static_cast<int>(CSSPropertyID::kEmptyCells)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str294, static_cast<int>(CSSPropertyID::kBorderRightColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str295, static_cast<int>(CSSPropertyID::kWebkitMaskRepeat)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str296, static_cast<int>(CSSPropertyID::kPageBreakAfter)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str297, static_cast<int>(CSSPropertyID::kAnimationDelay)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str298, static_cast<int>(CSSPropertyID::kScrollMarginLeft)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str299, static_cast<int>(CSSPropertyID::kMinWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str300, static_cast<int>(CSSPropertyID::kStopOpacity)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str301, static_cast<int>(CSSPropertyID::kWillChange)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str302, static_cast<int>(CSSPropertyID::kOutlineOffset)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str303, static_cast<int>(CSSPropertyID::kOutlineStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str304, static_cast<int>(CSSPropertyID::kWebkitWritingMode)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str305, static_cast<int>(CSSPropertyID::kBreakBefore)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str306, static_cast<int>(CSSPropertyID::kWhiteSpace)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str307, static_cast<int>(CSSPropertyID::kWebkitColumnBreakInside)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str308, static_cast<int>(CSSPropertyID::kWebkitUserDrag)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str309, static_cast<int>(CSSPropertyID::kAliasWebkitBorderRadius)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str310, static_cast<int>(CSSPropertyID::kInternalForcedBackgroundColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str311, static_cast<int>(CSSPropertyID::kOriginTrialTestProperty)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str312, static_cast<int>(CSSPropertyID::kAnimationPlayState)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str313, static_cast<int>(CSSPropertyID::kAliasEpubTextOrientation)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str314, static_cast<int>(CSSPropertyID::kFlex)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str315, static_cast<int>(CSSPropertyID::kOutlineWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str316, static_cast<int>(CSSPropertyID::kAliasWebkitFilter)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str317, static_cast<int>(CSSPropertyID::kListStylePosition)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str318, static_cast<int>(CSSPropertyID::kBorderStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str319, static_cast<int>(CSSPropertyID::kBackgroundImage)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str320, static_cast<int>(CSSPropertyID::kFlexDirection)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str321, static_cast<int>(CSSPropertyID::kBorderInlineEndStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str322, static_cast<int>(CSSPropertyID::kColumnWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str323, static_cast<int>(CSSPropertyID::kSymbols)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str324, static_cast<int>(CSSPropertyID::kPrefix)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str325, static_cast<int>(CSSPropertyID::kTextDecorationSkipInk)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str326, static_cast<int>(CSSPropertyID::kStrokeOpacity)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str327, static_cast<int>(CSSPropertyID::kWebkitRtlOrdering)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str328, static_cast<int>(CSSPropertyID::kFontStretch)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str329, static_cast<int>(CSSPropertyID::kPageBreakBefore)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str330, static_cast<int>(CSSPropertyID::kStrokeWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str331, static_cast<int>(CSSPropertyID::kMaskType)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str332, static_cast<int>(CSSPropertyID::kBorderWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str333, static_cast<int>(CSSPropertyID::kWebkitMaskImage)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str334, static_cast<int>(CSSPropertyID::kAliasWebkitTransform)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str335, static_cast<int>(CSSPropertyID::kBorderInlineEndWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str336, static_cast<int>(CSSPropertyID::kTextTransform)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str337, static_cast<int>(CSSPropertyID::kSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str338, static_cast<int>(CSSPropertyID::kAliasWebkitMarginEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str339, static_cast<int>(CSSPropertyID::kResize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str340, static_cast<int>(CSSPropertyID::kAliasWebkitMarginBefore)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str341, static_cast<int>(CSSPropertyID::kInlineSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str342, static_cast<int>(CSSPropertyID::kScrollbarWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str343, static_cast<int>(CSSPropertyID::kZoom)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str344, static_cast<int>(CSSPropertyID::kColumnRuleStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str345, static_cast<int>(CSSPropertyID::kBorderInlineStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str346, static_cast<int>(CSSPropertyID::kAliasWebkitTransformOrigin)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str347, static_cast<int>(CSSPropertyID::kMinInlineSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str348, static_cast<int>(CSSPropertyID::kMinZoom)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str349, static_cast<int>(CSSPropertyID::kFontFeatureSettings)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str350, static_cast<int>(CSSPropertyID::kAliasWebkitPaddingAfter)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str351, static_cast<int>(CSSPropertyID::kTableLayout)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str352, static_cast<int>(CSSPropertyID::kAliasWebkitAnimationFillMode)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str353, static_cast<int>(CSSPropertyID::kTransitionDelay)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str354, static_cast<int>(CSSPropertyID::kRubyPosition)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str355, static_cast<int>(CSSPropertyID::kOverrideColors)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str356, static_cast<int>(CSSPropertyID::kBorderImageWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str357, static_cast<int>(CSSPropertyID::kBorderTopRightRadius)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str358, static_cast<int>(CSSPropertyID::kBorderInlineStartStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str359, static_cast<int>(CSSPropertyID::kWebkitBorderVerticalSpacing)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str360, static_cast<int>(CSSPropertyID::kAscentOverride)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str361, static_cast<int>(CSSPropertyID::kAliasWebkitBorderEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str362, static_cast<int>(CSSPropertyID::kAliasWebkitBorderBefore)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str363, static_cast<int>(CSSPropertyID::kAliasWebkitBorderEndColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str364, static_cast<int>(CSSPropertyID::kAliasWebkitBorderBeforeColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str365, static_cast<int>(CSSPropertyID::kPointerEvents)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str366, static_cast<int>(CSSPropertyID::kNegative)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str367, static_cast<int>(CSSPropertyID::kFontStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str368, static_cast<int>(CSSPropertyID::kVerticalAlign)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str369, static_cast<int>(CSSPropertyID::kFlexBasis)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str370, static_cast<int>(CSSPropertyID::kPerspective)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str371, static_cast<int>(CSSPropertyID::kBorderInlineStartWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str372, static_cast<int>(CSSPropertyID::kUserZoom)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str373, static_cast<int>(CSSPropertyID::kLineGapOverride)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str374, static_cast<int>(CSSPropertyID::kBackgroundAttachment)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str375, static_cast<int>(CSSPropertyID::kTransformBox)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str376, static_cast<int>(CSSPropertyID::kColumnRuleWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str377, static_cast<int>(CSSPropertyID::kTextAnchor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str378, static_cast<int>(CSSPropertyID::kBaselineShift)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str379, static_cast<int>(CSSPropertyID::kFillOpacity)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str380, static_cast<int>(CSSPropertyID::kFloodOpacity)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str381, static_cast<int>(CSSPropertyID::kAnimationTimingFunction)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str382, static_cast<int>(CSSPropertyID::kFontDisplay)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str383, static_cast<int>(CSSPropertyID::kAliasWebkitMarginAfter)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str384, static_cast<int>(CSSPropertyID::kFlexGrow)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str385, static_cast<int>(CSSPropertyID::kTransformStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str386, static_cast<int>(CSSPropertyID::kBackgroundPositionX)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str387, static_cast<int>(CSSPropertyID::kHeight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str388, static_cast<int>(CSSPropertyID::kLineHeight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str389, static_cast<int>(CSSPropertyID::kInitialValue)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str390, static_cast<int>(CSSPropertyID::kTabSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str391, static_cast<int>(CSSPropertyID::kFlexWrap)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str392, static_cast<int>(CSSPropertyID::kAliasWebkitPaddingBefore)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str393, static_cast<int>(CSSPropertyID::kAliasWebkitAnimationTimingFunction)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str394, static_cast<int>(CSSPropertyID::kFontWeight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str395, static_cast<int>(CSSPropertyID::kScrollSnapType)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str396, static_cast<int>(CSSPropertyID::kMinHeight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str397, static_cast<int>(CSSPropertyID::kTransitionProperty)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str398, static_cast<int>(CSSPropertyID::kListStyleImage)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str399, static_cast<int>(CSSPropertyID::kBorderBottomStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str400, static_cast<int>(CSSPropertyID::kMathDepth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str401, static_cast<int>(CSSPropertyID::kTextEmphasis)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str402, static_cast<int>(CSSPropertyID::kBackgroundRepeatX)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str403, static_cast<int>(CSSPropertyID::kBorderBlockEndStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str404, static_cast<int>(CSSPropertyID::kWebkitColumnBreakAfter)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str405, static_cast<int>(CSSPropertyID::kWebkitLineBreak)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str406, static_cast<int>(CSSPropertyID::kLineHeightStep)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str407, static_cast<int>(CSSPropertyID::kBorderBottomLeftRadius)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str408, static_cast<int>(CSSPropertyID::kAliasWebkitBorderAfter)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str409, static_cast<int>(CSSPropertyID::kAliasWebkitBorderAfterColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str410, static_cast<int>(CSSPropertyID::kTextEmphasisColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str411, static_cast<int>(CSSPropertyID::kAliasWebkitBorderBottomLeftRadius)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str412, static_cast<int>(CSSPropertyID::kWebkitTextCombine)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str413, static_cast<int>(CSSPropertyID::kAnimationTimeline)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str414, static_cast<int>(CSSPropertyID::kWebkitTextStroke)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str415, static_cast<int>(CSSPropertyID::kScrollPaddingInline)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str416, static_cast<int>(CSSPropertyID::kWebkitTextStrokeColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str417, static_cast<int>(CSSPropertyID::kBorderBlockWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str418, static_cast<int>(CSSPropertyID::kAliasEpubTextTransform)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str419, static_cast<int>(CSSPropertyID::kScrollPaddingInlineEnd)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str420, static_cast<int>(CSSPropertyID::kBorderBlockEndWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str421, static_cast<int>(CSSPropertyID::kAliasWebkitColumnGap)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str422, static_cast<int>(CSSPropertyID::kAliasWebkitClipPath)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str423, static_cast<int>(CSSPropertyID::kBorderImageSource)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str424, static_cast<int>(CSSPropertyID::kBlockSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str425, static_cast<int>(CSSPropertyID::kSyntax)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str426, static_cast<int>(CSSPropertyID::kWebkitBoxPack)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str427, static_cast<int>(CSSPropertyID::kBorderLeftStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str428, static_cast<int>(CSSPropertyID::kTextEmphasisPosition)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str429, static_cast<int>(CSSPropertyID::kBorderTopStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str430, static_cast<int>(CSSPropertyID::kScrollCustomization)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str431, static_cast<int>(CSSPropertyID::kScrollPaddingInlineStart)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str432, static_cast<int>(CSSPropertyID::kAliasWebkitOpacity)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str433, static_cast<int>(CSSPropertyID::kOffsetAnchor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str434, static_cast<int>(CSSPropertyID::kMinBlockSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str435, static_cast<int>(CSSPropertyID::kStrokeLinejoin)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str436, static_cast<int>(CSSPropertyID::kAliasWebkitAlignSelf)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str437, static_cast<int>(CSSPropertyID::kWebkitMaskPositionX)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str438, static_cast<int>(CSSPropertyID::kTextDecorationStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str439, static_cast<int>(CSSPropertyID::kTextDecorationThickness)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str440, static_cast<int>(CSSPropertyID::kBackgroundPositionY)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str441, static_cast<int>(CSSPropertyID::kFontSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str442, static_cast<int>(CSSPropertyID::kMathStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str443, static_cast<int>(CSSPropertyID::kWebkitMaskRepeatX)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str444, static_cast<int>(CSSPropertyID::kOffsetPath)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str445, static_cast<int>(CSSPropertyID::kAliasWebkitBorderTopLeftRadius)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str446, static_cast<int>(CSSPropertyID::kAnimationDuration)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str447, static_cast<int>(CSSPropertyID::kWebkitColumnBreakBefore)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str448, static_cast<int>(CSSPropertyID::kTextShadow)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str449, static_cast<int>(CSSPropertyID::kSuffix)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str450, static_cast<int>(CSSPropertyID::kMaxWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str451, static_cast<int>(CSSPropertyID::kObjectPosition)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str452, static_cast<int>(CSSPropertyID::kAliasWebkitAnimationDelay)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str453, static_cast<int>(CSSPropertyID::kStrokeMiterlimit)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str454, static_cast<int>(CSSPropertyID::kAliasWebkitShapeMargin)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str455, static_cast<int>(CSSPropertyID::kBackgroundRepeatY)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str456, static_cast<int>(CSSPropertyID::kInternalFontSizeDelta)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str457, static_cast<int>(CSSPropertyID::kAliasWebkitLogicalWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str458, static_cast<int>(CSSPropertyID::kBorderBlockStartStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str459, static_cast<int>(CSSPropertyID::kDescentOverride)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str460, static_cast<int>(CSSPropertyID::kBorderImageSlice)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str461, static_cast<int>(CSSPropertyID::kFontVariant)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str462, static_cast<int>(CSSPropertyID::kBorderLeftWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str463, static_cast<int>(CSSPropertyID::kInternalVisitedColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str464, static_cast<int>(CSSPropertyID::kTextUnderlineOffset)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str465, static_cast<int>(CSSPropertyID::kAliasWebkitFlex)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str466, static_cast<int>(CSSPropertyID::kInternalForcedVisitedColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str467, static_cast<int>(CSSPropertyID::kAlignmentBaseline)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str468, static_cast<int>(CSSPropertyID::kBackgroundSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str469, static_cast<int>(CSSPropertyID::kAliasWebkitAnimationPlayState)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str470, static_cast<int>(CSSPropertyID::kInternalVisitedCaretColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str471, static_cast<int>(CSSPropertyID::kBorderBlockStartWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str472, static_cast<int>(CSSPropertyID::kAliasWebkitFlexDirection)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str473, static_cast<int>(CSSPropertyID::kBorderBlockStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str474, static_cast<int>(CSSPropertyID::kFlexFlow)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str475, static_cast<int>(CSSPropertyID::kWebkitTextFillColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str476, static_cast<int>(CSSPropertyID::kAliasWebkitBorderStartStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str477, static_cast<int>(CSSPropertyID::kFontFamily)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str478, static_cast<int>(CSSPropertyID::kAliasWebkitBorderBottomRightRadius)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str479, static_cast<int>(CSSPropertyID::kFontVariationSettings)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str480, static_cast<int>(CSSPropertyID::kTextCombineUpright)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str481, static_cast<int>(CSSPropertyID::kFontVariantCaps)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str482, static_cast<int>(CSSPropertyID::kWebkitMaskPositionY)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str483, static_cast<int>(CSSPropertyID::kFontVariantEastAsian)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str484, static_cast<int>(CSSPropertyID::kListStyleType)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str485, static_cast<int>(CSSPropertyID::kZIndex)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str486, static_cast<int>(CSSPropertyID::kBoxShadow)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str487, static_cast<int>(CSSPropertyID::kAliasWebkitColumnRuleStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str488, static_cast<int>(CSSPropertyID::kWebkitMaskRepeatY)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str489, static_cast<int>(CSSPropertyID::kAliasEpubCaptionSide)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str490, static_cast<int>(CSSPropertyID::kFontVariantNumeric)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str491, static_cast<int>(CSSPropertyID::kAliasWebkitBorderStartWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str492, static_cast<int>(CSSPropertyID::kInternalVisitedOutlineColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str493, static_cast<int>(CSSPropertyID::kMathShift)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str494, static_cast<int>(CSSPropertyID::kWebkitTransformOriginX)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str495, static_cast<int>(CSSPropertyID::kBorderRightWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str496, static_cast<int>(CSSPropertyID::kWebkitRubyPosition)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str497, static_cast<int>(CSSPropertyID::kMaxInlineSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str498, static_cast<int>(CSSPropertyID::kWebkitFontSmoothing)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str499, static_cast<int>(CSSPropertyID::kMaxZoom)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str500, static_cast<int>(CSSPropertyID::kAliasWebkitColumnRuleWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str501, static_cast<int>(CSSPropertyID::kAliasWebkitBorderTopRightRadius)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str502, static_cast<int>(CSSPropertyID::kInternalVisitedStroke)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str503, static_cast<int>(CSSPropertyID::kOverflow)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str504, static_cast<int>(CSSPropertyID::kOverflowInline)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str505, static_cast<int>(CSSPropertyID::kWebkitBoxOrient)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str506, static_cast<int>(CSSPropertyID::kAliasWebkitFontFeatureSettings)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str507, static_cast<int>(CSSPropertyID::kInternalVisitedBorderInlineEndColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str508, static_cast<int>(CSSPropertyID::kWebkitBoxDirection)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str509, static_cast<int>(CSSPropertyID::kFlexShrink)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str510, static_cast<int>(CSSPropertyID::kWebkitBoxDecorationBreak)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str511, static_cast<int>(CSSPropertyID::kWebkitBoxReflect)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str512, static_cast<int>(CSSPropertyID::kAliasWebkitFlexBasis)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str513, static_cast<int>(CSSPropertyID::kInternalVisitedBorderTopColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str514, static_cast<int>(CSSPropertyID::kViewportFit)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str515, static_cast<int>(CSSPropertyID::kInternalVisitedBorderInlineStartColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str516, static_cast<int>(CSSPropertyID::kPopUpHideDelay)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str517, static_cast<int>(CSSPropertyID::kBackgroundOrigin)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str518, static_cast<int>(CSSPropertyID::kAliasEpubTextEmphasis)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str519, static_cast<int>(CSSPropertyID::kAliasEpubTextEmphasisColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str520, static_cast<int>(CSSPropertyID::kInternalVisitedColumnRuleColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str521, static_cast<int>(CSSPropertyID::kPerspectiveOrigin)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str522, static_cast<int>(CSSPropertyID::kFontSynthesis)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str523, static_cast<int>(CSSPropertyID::kObjectFit)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str524, static_cast<int>(CSSPropertyID::kWebkitMaskBoxImage)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str525, static_cast<int>(CSSPropertyID::kAliasWebkitTransformStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str526, static_cast<int>(CSSPropertyID::kBoxSizing)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str527, static_cast<int>(CSSPropertyID::kWebkitMaskBoxImageSlice)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str528, static_cast<int>(CSSPropertyID::kAliasWebkitFlexGrow)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str529, static_cast<int>(CSSPropertyID::kWebkitTransformOriginY)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str530, static_cast<int>(CSSPropertyID::kAliasWebkitTransition)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str531, static_cast<int>(CSSPropertyID::kWebkitHighlight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str532, static_cast<int>(CSSPropertyID::kAliasWebkitPerspective)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str533, static_cast<int>(CSSPropertyID::kMaxHeight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str534, static_cast<int>(CSSPropertyID::kVectorEffect)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str535, static_cast<int>(CSSPropertyID::kBorderRightStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str536, static_cast<int>(CSSPropertyID::kWebkitUserModify)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str537, static_cast<int>(CSSPropertyID::kStrokeDasharray)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str538, static_cast<int>(CSSPropertyID::kAliasWebkitTextEmphasis)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str539, static_cast<int>(CSSPropertyID::kWebkitMaskBoxImageRepeat)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str540, static_cast<int>(CSSPropertyID::kAliasWebkitTextEmphasisColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str541, static_cast<int>(CSSPropertyID::kAliasWebkitLogicalHeight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str542, static_cast<int>(CSSPropertyID::kScrollBehavior)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str543, static_cast<int>(CSSPropertyID::kAliasWebkitColumnWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str544, static_cast<int>(CSSPropertyID::kAliasWebkitPerspectiveOrigin)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str545, static_cast<int>(CSSPropertyID::kInternalVisitedFill)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str546, static_cast<int>(CSSPropertyID::kWebkitTapHighlightColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str547, static_cast<int>(CSSPropertyID::kFontSynthesisSmallCaps)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str548, static_cast<int>(CSSPropertyID::kInternalVisitedBorderBottomColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str549, static_cast<int>(CSSPropertyID::kWebkitBorderHorizontalSpacing)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str550, static_cast<int>(CSSPropertyID::kAliasWebkitBorderEndStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str551, static_cast<int>(CSSPropertyID::kAliasWebkitBorderBeforeStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str552, static_cast<int>(CSSPropertyID::kAliasWebkitAppRegion)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str553, static_cast<int>(CSSPropertyID::kAliasWebkitTextEmphasisPosition)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str554, static_cast<int>(CSSPropertyID::kWebkitBoxAlign)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str555, static_cast<int>(CSSPropertyID::kWebkitMaskBoxImageSource)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str556, static_cast<int>(CSSPropertyID::kWebkitMaskBoxImageOutset)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str557, static_cast<int>(CSSPropertyID::kStrokeDashoffset)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str558, static_cast<int>(CSSPropertyID::kScrollMarginRight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str559, static_cast<int>(CSSPropertyID::kAliasWebkitFlexWrap)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str560, static_cast<int>(CSSPropertyID::kOverflowClipMargin)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str561, static_cast<int>(CSSPropertyID::kAliasWebkitBorderEndWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str562, static_cast<int>(CSSPropertyID::kAliasWebkitBorderBeforeWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str563, static_cast<int>(CSSPropertyID::kWebkitTextDecorationsInEffect)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str564, static_cast<int>(CSSPropertyID::kAliasWebkitTransitionDuration)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str565, static_cast<int>(CSSPropertyID::kOverflowWrap)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str566, static_cast<int>(CSSPropertyID::kMaxBlockSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str567, static_cast<int>(CSSPropertyID::kPopUpShowDelay)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str568, static_cast<int>(CSSPropertyID::kHyphens)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str569, static_cast<int>(CSSPropertyID::kInternalVisitedBackgroundColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str570, static_cast<int>(CSSPropertyID::kOverflowBlock)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str571, static_cast<int>(CSSPropertyID::kWebkitPrintColorAdjust)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str572, static_cast<int>(CSSPropertyID::kInternalVisitedBorderBlockEndColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str573, static_cast<int>(CSSPropertyID::kVisibility)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str574, static_cast<int>(CSSPropertyID::kWebkitMaskClip)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str575, static_cast<int>(CSSPropertyID::kWebkitMaskOrigin)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str576, static_cast<int>(CSSPropertyID::kWebkitTextSecurity)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str577, static_cast<int>(CSSPropertyID::kWebkitBorderImage)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str578, static_cast<int>(CSSPropertyID::kInternalVisitedBorderBlockStartColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str579, static_cast<int>(CSSPropertyID::kAliasWebkitBackgroundClip)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str580, static_cast<int>(CSSPropertyID::kAliasWebkitBackgroundOrigin)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str581, static_cast<int>(CSSPropertyID::kInternalVisitedBorderLeftColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str582, static_cast<int>(CSSPropertyID::kAliasWebkitBorderAfterStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str583, static_cast<int>(CSSPropertyID::kWebkitTransformOriginZ)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str584, static_cast<int>(CSSPropertyID::kAdditiveSymbols)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str585, static_cast<int>(CSSPropertyID::kInternalEmptyLineHeight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str586, static_cast<int>(CSSPropertyID::kContainIntrinsicWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str587, static_cast<int>(CSSPropertyID::kOverscrollBehavior)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str588, static_cast<int>(CSSPropertyID::kOverscrollBehaviorInline)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str589, static_cast<int>(CSSPropertyID::kInternalVisitedTextDecorationColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str590, static_cast<int>(CSSPropertyID::kAliasWebkitBorderAfterWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str591, static_cast<int>(CSSPropertyID::kAliasWebkitFlexFlow)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str592, static_cast<int>(CSSPropertyID::kTextEmphasisStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str593, static_cast<int>(CSSPropertyID::kAliasWebkitBoxShadow)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str594, static_cast<int>(CSSPropertyID::kWebkitTextStrokeWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str595, static_cast<int>(CSSPropertyID::kBorderInlineWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str596, static_cast<int>(CSSPropertyID::kFontVariantLigatures)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str597, static_cast<int>(CSSPropertyID::kOverflowX)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str598, static_cast<int>(CSSPropertyID::kInternalVisitedTextStrokeColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str599, static_cast<int>(CSSPropertyID::kTextOverflow)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str600, static_cast<int>(CSSPropertyID::kAliasWebkitFlexShrink)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str601, static_cast<int>(CSSPropertyID::kOverflowAnchor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str602, static_cast<int>(CSSPropertyID::kContainIntrinsicSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str603, static_cast<int>(CSSPropertyID::kBufferedRendering)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str604, static_cast<int>(CSSPropertyID::kContainIntrinsicInlineSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str605, static_cast<int>(CSSPropertyID::kAliasEpubTextCombine)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str606, static_cast<int>(CSSPropertyID::kAliasWebkitShapeOutside)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str607, static_cast<int>(CSSPropertyID::kInternalVisitedBorderRightColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str608, static_cast<int>(CSSPropertyID::kShapeImageThreshold)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str609, static_cast<int>(CSSPropertyID::kBorderBottomRightRadius)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str610, static_cast<int>(CSSPropertyID::kWebkitTextOrientation)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str611, static_cast<int>(CSSPropertyID::kAliasWebkitTransitionTimingFunction)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str612, static_cast<int>(CSSPropertyID::kSizeAdjust)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str613, static_cast<int>(CSSPropertyID::kOverscrollBehaviorBlock)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str614, static_cast<int>(CSSPropertyID::kOverflowY)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str615, static_cast<int>(CSSPropertyID::kBorderBottomWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str616, static_cast<int>(CSSPropertyID::kWebkitBoxFlex)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str617, static_cast<int>(CSSPropertyID::kWebkitPerspectiveOriginX)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str618, static_cast<int>(CSSPropertyID::kInternalVisitedTextFillColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str619, static_cast<int>(CSSPropertyID::kAliasWebkitShapeImageThreshold)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str620, static_cast<int>(CSSPropertyID::kJustifyContent)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str621, static_cast<int>(CSSPropertyID::kContainIntrinsicHeight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str622, static_cast<int>(CSSPropertyID::kJustifyItems)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str623, static_cast<int>(CSSPropertyID::kAliasEpubTextEmphasisStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str624, static_cast<int>(CSSPropertyID::kAliasWebkitTextSizeAdjust)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str625, static_cast<int>(CSSPropertyID::kFontSynthesisStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str626, static_cast<int>(CSSPropertyID::kAliasWebkitTransitionDelay)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str627, static_cast<int>(CSSPropertyID::kContainIntrinsicBlockSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str628, static_cast<int>(CSSPropertyID::kWebkitMaskBoxImageWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str629, static_cast<int>(CSSPropertyID::kWebkitPerspectiveOriginY)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str630, static_cast<int>(CSSPropertyID::kAliasWebkitTextEmphasisStyle)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str631, static_cast<int>(CSSPropertyID::kAliasWebkitTransitionProperty)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str632, static_cast<int>(CSSPropertyID::kOverscrollBehaviorX)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str633, static_cast<int>(CSSPropertyID::kAliasWebkitMinLogicalWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str634, static_cast<int>(CSSPropertyID::kWebkitBoxOrdinalGroup)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str635, static_cast<int>(CSSPropertyID::kInternalVisitedTextEmphasisColor)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str636, static_cast<int>(CSSPropertyID::kBackfaceVisibility)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str637, static_cast<int>(CSSPropertyID::kOverscrollBehaviorY)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str638, static_cast<int>(CSSPropertyID::kJustifySelf)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str639, static_cast<int>(CSSPropertyID::kFontSizeAdjust)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str640, static_cast<int>(CSSPropertyID::kFontSynthesisWeight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str641, static_cast<int>(CSSPropertyID::kTextJustify)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str642, static_cast<int>(CSSPropertyID::kAliasWebkitBackgroundSize)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str643, static_cast<int>(CSSPropertyID::kAliasWebkitJustifyContent)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str644, static_cast<int>(CSSPropertyID::kTextSizeAdjust)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str645, static_cast<int>(CSSPropertyID::kAliasWebkitMinLogicalHeight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str646, static_cast<int>(CSSPropertyID::kContentVisibility)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str647, static_cast<int>(CSSPropertyID::kAliasWebkitMaxLogicalWidth)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str648, static_cast<int>(CSSPropertyID::kWebkitHyphenateCharacter)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str649, static_cast<int>(CSSPropertyID::kObjectViewBox)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str650, static_cast<int>(CSSPropertyID::kAliasWebkitBoxSizing)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str651, static_cast<int>(CSSPropertyID::kAliasWebkitMaxLogicalHeight)},
      {(int)(size_t)&((struct CSSPropStringPool_t *)0)->CSSPropStringPool_str652, static_cast<int>(CSSPropertyID::kAliasWebkitBackfaceVisibility)}
    };

  static const short lookup[] =
    {
       -1,   0,  -1,   1,  -1,   2,  -1,   3,  -1,   4,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,   5,   6,  -1,
       -1,   7,   8,  -1,  -1,   9,  -1,  10,  -1,  -1,
       -1,  11,  -1,  12,  -1,  13,  14,  15,  16,  17,
       18,  -1,  19,  20,  -1,  21,  -1,  22,  -1,  -1,
       23,  24,  -1,  -1,  -1,  25,  -1,  -1,  26,  -1,
       -1,  -1,  27,  28,  -1,  29,  -1,  30,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  32,  -1,
       -1,  -1,  33,  -1,  34,  -1,  -1,  35,  -1,  -1,
       -1,  -1,  36,  37,  38,  -1,  -1,  39,  -1,  40,
       -1,  41,  42,  -1,  43,  44,  -1,  -1,  -1,  -1,
       -1,  -1,  45,  -1,  46,  -1,  47,  48,  -1,  -1,
       49,  50,  51,  52,  -1,  -1,  -1,  -1,  -1,  53,
       -1,  54,  -1,  -1,  55,  -1,  -1,  56,  -1,  57,
       -1,  58,  59,  60,  61,  62,  -1,  63,  -1,  64,
       -1,  -1,  65,  -1,  -1,  66,  -1,  -1,  67,  68,
       69,  70,  71,  -1,  72,  -1,  -1,  73,  74,  -1,
       -1,  75,  -1,  76,  -1,  -1,  -1,  -1,  -1,  77,
       -1,  78,  -1,  79,  -1,  -1,  -1,  -1,  -1,  -1,
       80,  -1,  -1,  -1,  81,  -1,  82,  -1,  -1,  83,
       84,  85,  -1,  86,  -1,  -1,  87,  88,  -1,  89,
       -1,  -1,  -1,  -1,  90,  -1,  91,  -1,  -1,  92,
       -1,  -1,  -1,  -1,  93,  -1,  -1,  -1,  94,  -1,
       -1,  95,  -1,  -1,  96,  97,  -1,  -1,  98,  -1,
       99,  -1,  -1,  -1,  -1,  -1, 100, 101, 102,  -1,
      103,  -1,  -1,  -1, 104,  -1,  -1,  -1,  -1, 105,
      106,  -1,  -1,  -1, 107,  -1,  -1, 108,  -1,  -1,
       -1, 109, 110,  -1,  -1,  -1,  -1,  -1,  -1, 111,
       -1, 112, 113, 114,  -1,  -1,  -1,  -1,  -1, 115,
       -1,  -1, 116,  -1,  -1,  -1,  -1, 117,  -1,  -1,
       -1,  -1,  -1, 118, 119, 120,  -1,  -1,  -1, 121,
      122,  -1, 123, 124,  -1,  -1,  -1,  -1,  -1,  -1,
      125,  -1,  -1, 126, 127,  -1,  -1,  -1,  -1,  -1,
       -1, 128,  -1,  -1,  -1,  -1,  -1, 129,  -1, 130,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 131, 132, 133,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 134, 135,  -1,  -1,  -1, 136,
      137,  -1,  -1, 138,  -1,  -1, 139,  -1, 140, 141,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 142, 143,  -1,
       -1, 144,  -1, 145, 146,  -1,  -1, 147, 148,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 149, 150,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 151, 152,  -1,  -1, 153,
       -1, 154, 155, 156,  -1,  -1, 157,  -1,  -1,  -1,
       -1,  -1,  -1, 158,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 159,  -1, 160,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 161,  -1,  -1, 162, 163,
       -1,  -1,  -1,  -1,  -1, 164,  -1,  -1,  -1, 165,
      166,  -1,  -1,  -1, 167,  -1,  -1, 168,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 169,  -1,  -1, 170,  -1, 171,  -1,  -1, 172,
       -1,  -1,  -1,  -1, 173, 174,  -1,  -1,  -1,  -1,
      175, 176,  -1,  -1,  -1,  -1, 177,  -1,  -1,  -1,
       -1,  -1, 178,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 179, 180,  -1, 181, 182, 183,
       -1,  -1, 184,  -1,  -1,  -1,  -1,  -1,  -1, 185,
       -1,  -1, 186,  -1,  -1, 187,  -1,  -1,  -1, 188,
       -1,  -1, 189, 190,  -1, 191, 192,  -1,  -1,  -1,
       -1,  -1,  -1, 193,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 194,  -1,  -1,  -1,  -1, 195,  -1,  -1,  -1,
       -1, 196, 197,  -1, 198,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 199,  -1, 200, 201,
      202,  -1,  -1,  -1, 203,  -1, 204, 205, 206,  -1,
      207,  -1,  -1,  -1,  -1,  -1,  -1, 208,  -1,  -1,
       -1,  -1,  -1, 209,  -1,  -1,  -1,  -1,  -1,  -1,
      210, 211,  -1,  -1,  -1,  -1,  -1, 212,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 213,  -1,
      214,  -1,  -1,  -1,  -1, 215,  -1, 216, 217,  -1,
       -1,  -1,  -1,  -1, 218,  -1,  -1,  -1,  -1, 219,
       -1,  -1,  -1,  -1, 220, 221, 222, 223,  -1,  -1,
      224,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 225, 226,  -1,
       -1,  -1,  -1, 227,  -1,  -1,  -1,  -1,  -1,  -1,
      228,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 229,
      230,  -1, 231, 232,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 233,  -1,  -1,  -1, 234,  -1, 235, 236,  -1,
      237,  -1,  -1, 238,  -1,  -1, 239,  -1,  -1,  -1,
       -1,  -1, 240, 241,  -1, 242, 243,  -1,  -1,  -1,
       -1,  -1,  -1, 244,  -1,  -1,  -1,  -1, 245,  -1,
       -1,  -1,  -1, 246,  -1,  -1,  -1,  -1, 247, 248,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 249, 250,  -1,
       -1,  -1,  -1,  -1, 251,  -1, 252, 253,  -1,  -1,
       -1,  -1,  -1,  -1, 254, 255,  -1,  -1,  -1, 256,
      257, 258,  -1,  -1,  -1,  -1,  -1,  -1, 259,  -1,
       -1, 260,  -1,  -1, 261, 262,  -1,  -1, 263,  -1,
       -1, 264,  -1,  -1,  -1, 265, 266,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 267,  -1,  -1, 268, 269,  -1,
       -1, 270,  -1, 271,  -1, 272,  -1,  -1,  -1,  -1,
      273,  -1,  -1,  -1,  -1,  -1,  -1, 274,  -1,  -1,
      275,  -1, 276,  -1,  -1,  -1,  -1, 277, 278,  -1,
      279,  -1, 280, 281,  -1, 282,  -1,  -1,  -1, 283,
      284, 285, 286, 287, 288,  -1, 289, 290, 291,  -1,
      292,  -1,  -1,  -1,  -1,  -1, 293,  -1,  -1,  -1,
       -1,  -1, 294,  -1,  -1,  -1,  -1,  -1,  -1, 295,
       -1,  -1, 296,  -1,  -1, 297,  -1,  -1,  -1,  -1,
       -1, 298, 299,  -1,  -1,  -1,  -1,  -1,  -1, 300,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 301,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 302, 303,  -1,  -1, 304,
       -1,  -1, 305, 306,  -1,  -1, 307,  -1,  -1, 308,
      309,  -1,  -1,  -1,  -1,  -1,  -1, 310,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 311,  -1,
       -1, 312,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 313,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 314,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 315, 316, 317, 318,  -1,  -1,  -1,  -1,
       -1, 319,  -1,  -1,  -1, 320,  -1,  -1, 321,  -1,
       -1,  -1,  -1,  -1,  -1, 322,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 323,  -1, 324,  -1,  -1, 325,  -1,
       -1,  -1,  -1,  -1, 326,  -1,  -1,  -1,  -1,  -1,
      327,  -1,  -1,  -1,  -1,  -1, 328,  -1,  -1, 329,
       -1,  -1, 330,  -1, 331,  -1,  -1,  -1,  -1,  -1,
       -1, 332,  -1,  -1,  -1,  -1,  -1, 333,  -1,  -1,
       -1, 334,  -1,  -1, 335, 336,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 337,  -1, 338, 339, 340,  -1, 341,
       -1,  -1, 342,  -1,  -1,  -1,  -1, 343,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 344,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 345, 346,  -1,
       -1,  -1,  -1, 347,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 348,  -1,  -1,  -1,  -1, 349,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 350,  -1, 351, 352,  -1, 353,
      354,  -1,  -1, 355,  -1,  -1,  -1,  -1, 356,  -1,
       -1,  -1,  -1,  -1,  -1, 357,  -1,  -1, 358,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 359,  -1,
       -1,  -1,  -1, 360,  -1,  -1,  -1,  -1,  -1, 361,
       -1, 362, 363,  -1, 364,  -1,  -1,  -1, 365,  -1,
      366,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 367,  -1, 368,  -1,  -1,  -1,  -1,
      369, 370,  -1,  -1, 371,  -1,  -1, 372,  -1, 373,
       -1,  -1,  -1,  -1,  -1, 374,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 375,  -1,  -1,  -1, 376,  -1,  -1,
       -1, 377,  -1,  -1,  -1, 378, 379,  -1,  -1, 380,
      381,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 382,  -1,  -1, 383,  -1,  -1,  -1,  -1, 384,
       -1,  -1,  -1, 385,  -1,  -1, 386, 387,  -1,  -1,
       -1, 388,  -1,  -1,  -1, 389, 390, 391,  -1,  -1,
       -1, 392,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 393,  -1,  -1, 394, 395,
       -1, 396,  -1, 397,  -1,  -1,  -1, 398,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 399,  -1,  -1,  -1,  -1,  -1, 400,  -1,  -1,
      401, 402,  -1,  -1,  -1, 403,  -1, 404,  -1,  -1,
       -1,  -1, 405,  -1, 406,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 407,  -1,  -1, 408,  -1,
       -1, 409,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 410,  -1,  -1,  -1,  -1,  -1,  -1, 411,  -1,
       -1, 412,  -1,  -1,  -1,  -1, 413,  -1, 414, 415,
       -1, 416,  -1,  -1, 417, 418, 419,  -1,  -1,  -1,
       -1, 420,  -1,  -1,  -1,  -1, 421,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 422, 423,  -1,  -1,  -1, 424,
      425, 426,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      427, 428, 429,  -1,  -1, 430,  -1,  -1,  -1,  -1,
      431,  -1,  -1,  -1,  -1,  -1,  -1, 432, 433,  -1,
       -1,  -1,  -1, 434, 435, 436,  -1,  -1,  -1, 437,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 438, 439,  -1, 440,  -1,  -1,
       -1,  -1,  -1,  -1, 441, 442,  -1, 443,  -1,  -1,
      444, 445,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 446,
       -1,  -1,  -1,  -1, 447,  -1,  -1,  -1,  -1, 448,
       -1,  -1,  -1,  -1,  -1, 449,  -1,  -1,  -1,  -1,
      450,  -1, 451,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      452,  -1,  -1, 453,  -1,  -1, 454,  -1,  -1,  -1,
       -1,  -1, 455,  -1,  -1,  -1,  -1, 456,  -1,  -1,
      457,  -1,  -1,  -1, 458,  -1,  -1,  -1,  -1,  -1,
      459,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 460,  -1,  -1, 461,  -1,
      462,  -1,  -1,  -1, 463,  -1,  -1,  -1, 464,  -1,
       -1, 465,  -1, 466,  -1, 467,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 468, 469,  -1,  -1,  -1,  -1, 470,  -1,
      471,  -1,  -1,  -1,  -1, 472,  -1, 473,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      474,  -1, 475,  -1,  -1,  -1, 476,  -1,  -1,  -1,
      477,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 478,
       -1, 479,  -1,  -1, 480,  -1, 481,  -1,  -1,  -1,
      482,  -1,  -1,  -1,  -1,  -1, 483,  -1,  -1,  -1,
       -1, 484, 485,  -1,  -1,  -1,  -1, 486,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 487,  -1,  -1, 488,  -1,
       -1,  -1,  -1, 489,  -1,  -1,  -1,  -1, 490,  -1,
       -1,  -1, 491,  -1,  -1,  -1,  -1,  -1, 492,  -1,
       -1,  -1, 493,  -1,  -1,  -1, 494,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 495,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      496, 497,  -1,  -1,  -1, 498,  -1,  -1,  -1, 499,
       -1, 500,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 501,  -1,  -1, 502,  -1,  -1,  -1,  -1,
       -1,  -1, 503,  -1,  -1,  -1,  -1,  -1, 504,  -1,
       -1,  -1,  -1, 505,  -1,  -1,  -1,  -1,  -1, 506,
      507,  -1, 508, 509,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 510,  -1, 511,
      512,  -1, 513,  -1,  -1,  -1,  -1,  -1, 514,  -1,
       -1,  -1,  -1,  -1, 515,  -1,  -1,  -1, 516,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 517, 518,
       -1,  -1, 519,  -1,  -1,  -1,  -1, 520, 521,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 522,  -1,  -1,  -1,  -1,
       -1,  -1, 523,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 524,  -1,
       -1,  -1,  -1, 525,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 526, 527,  -1,
       -1,  -1,  -1,  -1, 528,  -1,  -1, 529,  -1,  -1,
       -1,  -1,  -1,  -1, 530,  -1,  -1,  -1, 531,  -1,
       -1,  -1,  -1,  -1, 532,  -1,  -1,  -1,  -1, 533,
       -1,  -1,  -1,  -1,  -1,  -1, 534,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 535, 536,  -1, 537, 538,
      539,  -1, 540,  -1,  -1,  -1,  -1,  -1,  -1, 541,
       -1,  -1,  -1, 542,  -1,  -1,  -1,  -1, 543,  -1,
       -1, 544,  -1,  -1,  -1,  -1,  -1, 545,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 546,  -1,
       -1,  -1, 547,  -1,  -1,  -1,  -1, 548,  -1, 549,
       -1, 550,  -1, 551, 552,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 553,  -1,  -1, 554,  -1,  -1,  -1,  -1,
      555,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 556,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      557,  -1, 558,  -1,  -1,  -1, 559,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 560,  -1, 561,  -1, 562,
       -1,  -1, 563,  -1, 564, 565,  -1,  -1,  -1,  -1,
       -1, 566,  -1,  -1,  -1, 567,  -1, 568,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 569,  -1,  -1,  -1,  -1, 570,  -1,
       -1, 571,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      572,  -1,  -1,  -1,  -1, 573,  -1,  -1,  -1, 574,
       -1,  -1,  -1,  -1, 575,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 576,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 577,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 578,  -1,  -1,  -1, 579,  -1,
       -1,  -1,  -1, 580,  -1,  -1,  -1,  -1,  -1,  -1,
      581,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      582,  -1,  -1, 583, 584,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      585,  -1,  -1, 586,  -1,  -1,  -1,  -1, 587,  -1,
       -1,  -1,  -1,  -1, 588,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 589,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 590,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 591,  -1,  -1, 592,  -1,
       -1, 593,  -1,  -1,  -1,  -1, 594,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 595,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 596,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      597,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 598,  -1,  -1,  -1, 599,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 600,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 601,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 602,  -1,
       -1,  -1, 603,  -1, 604,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 605,  -1,  -1, 606,  -1,
       -1, 607,  -1, 608,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 609,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 610, 611, 612,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 613,  -1,  -1,  -1,  -1,  -1,
       -1, 614,  -1, 615, 616,  -1,  -1,  -1,  -1, 617,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 618,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 619,  -1,  -1,  -1,
       -1, 620, 621,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      622, 623,  -1,  -1, 624,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      625,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 626,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 627,  -1, 628,  -1,  -1,  -1,
      629, 630,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      631,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 632,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 633,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 634,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 635,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 636,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 637,  -1,  -1,
       -1,  -1,  -1, 638,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 639,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 640,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 641,  -1, 642,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 643,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 644,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 645,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 646,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 647,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 648,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      649,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 650,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 651,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 652
    };

  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      unsigned int key = property_hash_function (str, len);

      if (key <= MAX_HASH_VALUE)
        {
          int index = lookup[key];

          if (index >= 0)
            {
              const char *s = property_word_list[index].name_offset + CSSPropStringPool;

              if (*str == *s && !strncmp (str + 1, s + 1, len - 1) && s[len] == '\0')
                return &property_word_list[index];
            }
        }
    }
  return 0;
}


const Property* FindProperty(const char* str, unsigned int len) {
  return CSSPropertyNamesHash::findPropertyImpl(str, len);
}

CSSPropertyID CssPropertyID(const ExecutionContext* execution_context,
                            const String& string)
{
    return ResolveCSSPropertyID(UnresolvedCSSPropertyID(execution_context,
                                                        string));
}

mojom::blink::CSSSampleId GetCSSSampleId(CSSPropertyID id) {
  switch (id) {
    case CSSPropertyID::kColor:
      return mojom::blink::CSSSampleId::kColor;
    case CSSPropertyID::kDirection:
      return mojom::blink::CSSSampleId::kDirection;
    case CSSPropertyID::kFontFamily:
      return mojom::blink::CSSSampleId::kFontFamily;
    case CSSPropertyID::kFontFeatureSettings:
      return mojom::blink::CSSSampleId::kFontFeatureSettings;
    case CSSPropertyID::kFontKerning:
      return mojom::blink::CSSSampleId::kFontKerning;
    case CSSPropertyID::kFontOpticalSizing:
      return mojom::blink::CSSSampleId::kFontOpticalSizing;
    case CSSPropertyID::kFontPalette:
      return mojom::blink::CSSSampleId::kFontPalette;
    case CSSPropertyID::kFontSize:
      return mojom::blink::CSSSampleId::kFontSize;
    case CSSPropertyID::kFontSizeAdjust:
      return mojom::blink::CSSSampleId::kFontSizeAdjust;
    case CSSPropertyID::kFontStretch:
      return mojom::blink::CSSSampleId::kFontStretch;
    case CSSPropertyID::kFontStyle:
      return mojom::blink::CSSSampleId::kFontStyle;
    case CSSPropertyID::kFontSynthesisSmallCaps:
      return mojom::blink::CSSSampleId::kFontSynthesisSmallCaps;
    case CSSPropertyID::kFontSynthesisStyle:
      return mojom::blink::CSSSampleId::kFontSynthesisStyle;
    case CSSPropertyID::kFontSynthesisWeight:
      return mojom::blink::CSSSampleId::kFontSynthesisWeight;
    case CSSPropertyID::kFontVariantCaps:
      return mojom::blink::CSSSampleId::kFontVariantCaps;
    case CSSPropertyID::kFontVariantEastAsian:
      return mojom::blink::CSSSampleId::kFontVariantEastAsian;
    case CSSPropertyID::kFontVariantLigatures:
      return mojom::blink::CSSSampleId::kFontVariantLigatures;
    case CSSPropertyID::kFontVariantNumeric:
      return mojom::blink::CSSSampleId::kFontVariantNumeric;
    case CSSPropertyID::kFontVariationSettings:
      return mojom::blink::CSSSampleId::kFontVariationSettings;
    case CSSPropertyID::kFontWeight:
      return mojom::blink::CSSSampleId::kFontWeight;
    case CSSPropertyID::kForcedColorAdjust:
      return mojom::blink::CSSSampleId::kForcedColorAdjust;
    case CSSPropertyID::kInternalVisitedColor:
      return mojom::blink::CSSSampleId::kInternalVisitedColor;
    case CSSPropertyID::kTextOrientation:
      return mojom::blink::CSSSampleId::kTextOrientation;
    case CSSPropertyID::kTextRendering:
      return mojom::blink::CSSSampleId::kTextRendering;
    case CSSPropertyID::kWebkitFontSmoothing:
      return mojom::blink::CSSSampleId::kWebkitFontSmoothing;
    case CSSPropertyID::kWebkitLocale:
      return mojom::blink::CSSSampleId::kWebkitLocale;
    case CSSPropertyID::kWebkitTextOrientation:
      return mojom::blink::CSSSampleId::kWebkitTextOrientation;
    case CSSPropertyID::kWebkitWritingMode:
      return mojom::blink::CSSSampleId::kWebkitWritingMode;
    case CSSPropertyID::kWritingMode:
      return mojom::blink::CSSSampleId::kWritingMode;
    case CSSPropertyID::kZoom:
      return mojom::blink::CSSSampleId::kZoom;
    case CSSPropertyID::kAccentColor:
      return mojom::blink::CSSSampleId::kAccentColor;
    case CSSPropertyID::kAdditiveSymbols:
      return mojom::blink::CSSSampleId::kAdditiveSymbols;
    case CSSPropertyID::kAlignContent:
      return mojom::blink::CSSSampleId::kAlignContent;
    case CSSPropertyID::kAlignItems:
      return mojom::blink::CSSSampleId::kAlignItems;
    case CSSPropertyID::kAlignSelf:
      return mojom::blink::CSSSampleId::kAlignSelf;
    case CSSPropertyID::kAlignmentBaseline:
      return mojom::blink::CSSSampleId::kAlignmentBaseline;
    case CSSPropertyID::kAll:
      return mojom::blink::CSSSampleId::kAll;
    case CSSPropertyID::kAnchorName:
      return mojom::blink::CSSSampleId::kAnchorName;
    case CSSPropertyID::kAnchorScroll:
      return mojom::blink::CSSSampleId::kAnchorScroll;
    case CSSPropertyID::kAnimationDelay:
      return mojom::blink::CSSSampleId::kAnimationDelay;
    case CSSPropertyID::kAnimationDirection:
      return mojom::blink::CSSSampleId::kAnimationDirection;
    case CSSPropertyID::kAnimationDuration:
      return mojom::blink::CSSSampleId::kAnimationDuration;
    case CSSPropertyID::kAnimationFillMode:
      return mojom::blink::CSSSampleId::kAnimationFillMode;
    case CSSPropertyID::kAnimationIterationCount:
      return mojom::blink::CSSSampleId::kAnimationIterationCount;
    case CSSPropertyID::kAnimationName:
      return mojom::blink::CSSSampleId::kAnimationName;
    case CSSPropertyID::kAnimationPlayState:
      return mojom::blink::CSSSampleId::kAnimationPlayState;
    case CSSPropertyID::kAnimationTimeline:
      return mojom::blink::CSSSampleId::kAnimationTimeline;
    case CSSPropertyID::kAnimationTimingFunction:
      return mojom::blink::CSSSampleId::kAnimationTimingFunction;
    case CSSPropertyID::kAppRegion:
      return mojom::blink::CSSSampleId::kAppRegion;
    case CSSPropertyID::kAppearance:
      return mojom::blink::CSSSampleId::kAppearance;
    case CSSPropertyID::kAscentOverride:
      return mojom::blink::CSSSampleId::kAscentOverride;
    case CSSPropertyID::kAspectRatio:
      return mojom::blink::CSSSampleId::kAspectRatio;
    case CSSPropertyID::kBackdropFilter:
      return mojom::blink::CSSSampleId::kBackdropFilter;
    case CSSPropertyID::kBackfaceVisibility:
      return mojom::blink::CSSSampleId::kBackfaceVisibility;
    case CSSPropertyID::kBackgroundAttachment:
      return mojom::blink::CSSSampleId::kBackgroundAttachment;
    case CSSPropertyID::kBackgroundBlendMode:
      return mojom::blink::CSSSampleId::kBackgroundBlendMode;
    case CSSPropertyID::kBackgroundClip:
      return mojom::blink::CSSSampleId::kBackgroundClip;
    case CSSPropertyID::kBackgroundColor:
      return mojom::blink::CSSSampleId::kBackgroundColor;
    case CSSPropertyID::kBackgroundImage:
      return mojom::blink::CSSSampleId::kBackgroundImage;
    case CSSPropertyID::kBackgroundOrigin:
      return mojom::blink::CSSSampleId::kBackgroundOrigin;
    case CSSPropertyID::kBackgroundPositionX:
      return mojom::blink::CSSSampleId::kBackgroundPositionX;
    case CSSPropertyID::kBackgroundPositionY:
      return mojom::blink::CSSSampleId::kBackgroundPositionY;
    case CSSPropertyID::kBackgroundRepeatX:
      return mojom::blink::CSSSampleId::kBackgroundRepeatX;
    case CSSPropertyID::kBackgroundRepeatY:
      return mojom::blink::CSSSampleId::kBackgroundRepeatY;
    case CSSPropertyID::kBackgroundSize:
      return mojom::blink::CSSSampleId::kBackgroundSize;
    case CSSPropertyID::kBasePalette:
      return mojom::blink::CSSSampleId::kBasePalette;
    case CSSPropertyID::kBaselineShift:
      return mojom::blink::CSSSampleId::kBaselineShift;
    case CSSPropertyID::kBlockSize:
      return mojom::blink::CSSSampleId::kBlockSize;
    case CSSPropertyID::kBorderBlockEndColor:
      return mojom::blink::CSSSampleId::kBorderBlockEndColor;
    case CSSPropertyID::kBorderBlockEndStyle:
      return mojom::blink::CSSSampleId::kBorderBlockEndStyle;
    case CSSPropertyID::kBorderBlockEndWidth:
      return mojom::blink::CSSSampleId::kBorderBlockEndWidth;
    case CSSPropertyID::kBorderBlockStartColor:
      return mojom::blink::CSSSampleId::kBorderBlockStartColor;
    case CSSPropertyID::kBorderBlockStartStyle:
      return mojom::blink::CSSSampleId::kBorderBlockStartStyle;
    case CSSPropertyID::kBorderBlockStartWidth:
      return mojom::blink::CSSSampleId::kBorderBlockStartWidth;
    case CSSPropertyID::kBorderBottomColor:
      return mojom::blink::CSSSampleId::kBorderBottomColor;
    case CSSPropertyID::kBorderBottomLeftRadius:
      return mojom::blink::CSSSampleId::kBorderBottomLeftRadius;
    case CSSPropertyID::kBorderBottomRightRadius:
      return mojom::blink::CSSSampleId::kBorderBottomRightRadius;
    case CSSPropertyID::kBorderBottomStyle:
      return mojom::blink::CSSSampleId::kBorderBottomStyle;
    case CSSPropertyID::kBorderBottomWidth:
      return mojom::blink::CSSSampleId::kBorderBottomWidth;
    case CSSPropertyID::kBorderCollapse:
      return mojom::blink::CSSSampleId::kBorderCollapse;
    case CSSPropertyID::kBorderEndEndRadius:
      return mojom::blink::CSSSampleId::kBorderEndEndRadius;
    case CSSPropertyID::kBorderEndStartRadius:
      return mojom::blink::CSSSampleId::kBorderEndStartRadius;
    case CSSPropertyID::kBorderImageOutset:
      return mojom::blink::CSSSampleId::kBorderImageOutset;
    case CSSPropertyID::kBorderImageRepeat:
      return mojom::blink::CSSSampleId::kBorderImageRepeat;
    case CSSPropertyID::kBorderImageSlice:
      return mojom::blink::CSSSampleId::kBorderImageSlice;
    case CSSPropertyID::kBorderImageSource:
      return mojom::blink::CSSSampleId::kBorderImageSource;
    case CSSPropertyID::kBorderImageWidth:
      return mojom::blink::CSSSampleId::kBorderImageWidth;
    case CSSPropertyID::kBorderInlineEndColor:
      return mojom::blink::CSSSampleId::kBorderInlineEndColor;
    case CSSPropertyID::kBorderInlineEndStyle:
      return mojom::blink::CSSSampleId::kBorderInlineEndStyle;
    case CSSPropertyID::kBorderInlineEndWidth:
      return mojom::blink::CSSSampleId::kBorderInlineEndWidth;
    case CSSPropertyID::kBorderInlineStartColor:
      return mojom::blink::CSSSampleId::kBorderInlineStartColor;
    case CSSPropertyID::kBorderInlineStartStyle:
      return mojom::blink::CSSSampleId::kBorderInlineStartStyle;
    case CSSPropertyID::kBorderInlineStartWidth:
      return mojom::blink::CSSSampleId::kBorderInlineStartWidth;
    case CSSPropertyID::kBorderLeftColor:
      return mojom::blink::CSSSampleId::kBorderLeftColor;
    case CSSPropertyID::kBorderLeftStyle:
      return mojom::blink::CSSSampleId::kBorderLeftStyle;
    case CSSPropertyID::kBorderLeftWidth:
      return mojom::blink::CSSSampleId::kBorderLeftWidth;
    case CSSPropertyID::kBorderRightColor:
      return mojom::blink::CSSSampleId::kBorderRightColor;
    case CSSPropertyID::kBorderRightStyle:
      return mojom::blink::CSSSampleId::kBorderRightStyle;
    case CSSPropertyID::kBorderRightWidth:
      return mojom::blink::CSSSampleId::kBorderRightWidth;
    case CSSPropertyID::kBorderStartEndRadius:
      return mojom::blink::CSSSampleId::kBorderStartEndRadius;
    case CSSPropertyID::kBorderStartStartRadius:
      return mojom::blink::CSSSampleId::kBorderStartStartRadius;
    case CSSPropertyID::kBorderTopColor:
      return mojom::blink::CSSSampleId::kBorderTopColor;
    case CSSPropertyID::kBorderTopLeftRadius:
      return mojom::blink::CSSSampleId::kBorderTopLeftRadius;
    case CSSPropertyID::kBorderTopRightRadius:
      return mojom::blink::CSSSampleId::kBorderTopRightRadius;
    case CSSPropertyID::kBorderTopStyle:
      return mojom::blink::CSSSampleId::kBorderTopStyle;
    case CSSPropertyID::kBorderTopWidth:
      return mojom::blink::CSSSampleId::kBorderTopWidth;
    case CSSPropertyID::kBottom:
      return mojom::blink::CSSSampleId::kBottom;
    case CSSPropertyID::kBoxShadow:
      return mojom::blink::CSSSampleId::kBoxShadow;
    case CSSPropertyID::kBoxSizing:
      return mojom::blink::CSSSampleId::kBoxSizing;
    case CSSPropertyID::kBreakAfter:
      return mojom::blink::CSSSampleId::kBreakAfter;
    case CSSPropertyID::kBreakBefore:
      return mojom::blink::CSSSampleId::kBreakBefore;
    case CSSPropertyID::kBreakInside:
      return mojom::blink::CSSSampleId::kBreakInside;
    case CSSPropertyID::kBufferedRendering:
      return mojom::blink::CSSSampleId::kBufferedRendering;
    case CSSPropertyID::kCaptionSide:
      return mojom::blink::CSSSampleId::kCaptionSide;
    case CSSPropertyID::kCaretColor:
      return mojom::blink::CSSSampleId::kCaretColor;
    case CSSPropertyID::kClear:
      return mojom::blink::CSSSampleId::kClear;
    case CSSPropertyID::kClip:
      return mojom::blink::CSSSampleId::kClip;
    case CSSPropertyID::kClipPath:
      return mojom::blink::CSSSampleId::kClipPath;
    case CSSPropertyID::kClipRule:
      return mojom::blink::CSSSampleId::kClipRule;
    case CSSPropertyID::kColorInterpolation:
      return mojom::blink::CSSSampleId::kColorInterpolation;
    case CSSPropertyID::kColorInterpolationFilters:
      return mojom::blink::CSSSampleId::kColorInterpolationFilters;
    case CSSPropertyID::kColorRendering:
      return mojom::blink::CSSSampleId::kColorRendering;
    case CSSPropertyID::kColorScheme:
      return mojom::blink::CSSSampleId::kColorScheme;
    case CSSPropertyID::kColumnCount:
      return mojom::blink::CSSSampleId::kColumnCount;
    case CSSPropertyID::kColumnFill:
      return mojom::blink::CSSSampleId::kColumnFill;
    case CSSPropertyID::kColumnGap:
      return mojom::blink::CSSSampleId::kColumnGap;
    case CSSPropertyID::kColumnRuleColor:
      return mojom::blink::CSSSampleId::kColumnRuleColor;
    case CSSPropertyID::kColumnRuleStyle:
      return mojom::blink::CSSSampleId::kColumnRuleStyle;
    case CSSPropertyID::kColumnRuleWidth:
      return mojom::blink::CSSSampleId::kColumnRuleWidth;
    case CSSPropertyID::kColumnSpan:
      return mojom::blink::CSSSampleId::kColumnSpan;
    case CSSPropertyID::kColumnWidth:
      return mojom::blink::CSSSampleId::kColumnWidth;
    case CSSPropertyID::kContain:
      return mojom::blink::CSSSampleId::kContain;
    case CSSPropertyID::kContainIntrinsicBlockSize:
      return mojom::blink::CSSSampleId::kContainIntrinsicBlockSize;
    case CSSPropertyID::kContainIntrinsicHeight:
      return mojom::blink::CSSSampleId::kContainIntrinsicHeight;
    case CSSPropertyID::kContainIntrinsicInlineSize:
      return mojom::blink::CSSSampleId::kContainIntrinsicInlineSize;
    case CSSPropertyID::kContainIntrinsicWidth:
      return mojom::blink::CSSSampleId::kContainIntrinsicWidth;
    case CSSPropertyID::kContainerName:
      return mojom::blink::CSSSampleId::kContainerName;
    case CSSPropertyID::kContainerType:
      return mojom::blink::CSSSampleId::kContainerType;
    case CSSPropertyID::kContent:
      return mojom::blink::CSSSampleId::kContent;
    case CSSPropertyID::kContentVisibility:
      return mojom::blink::CSSSampleId::kContentVisibility;
    case CSSPropertyID::kCounterIncrement:
      return mojom::blink::CSSSampleId::kCounterIncrement;
    case CSSPropertyID::kCounterReset:
      return mojom::blink::CSSSampleId::kCounterReset;
    case CSSPropertyID::kCounterSet:
      return mojom::blink::CSSSampleId::kCounterSet;
    case CSSPropertyID::kCursor:
      return mojom::blink::CSSSampleId::kCursor;
    case CSSPropertyID::kCx:
      return mojom::blink::CSSSampleId::kCx;
    case CSSPropertyID::kCy:
      return mojom::blink::CSSSampleId::kCy;
    case CSSPropertyID::kD:
      return mojom::blink::CSSSampleId::kD;
    case CSSPropertyID::kDescentOverride:
      return mojom::blink::CSSSampleId::kDescentOverride;
    case CSSPropertyID::kDisplay:
      return mojom::blink::CSSSampleId::kDisplay;
    case CSSPropertyID::kDominantBaseline:
      return mojom::blink::CSSSampleId::kDominantBaseline;
    case CSSPropertyID::kEmptyCells:
      return mojom::blink::CSSSampleId::kEmptyCells;
    case CSSPropertyID::kEnd:
      return mojom::blink::CSSSampleId::kEnd;
    case CSSPropertyID::kFallback:
      return mojom::blink::CSSSampleId::kFallback;
    case CSSPropertyID::kFill:
      return mojom::blink::CSSSampleId::kFill;
    case CSSPropertyID::kFillOpacity:
      return mojom::blink::CSSSampleId::kFillOpacity;
    case CSSPropertyID::kFillRule:
      return mojom::blink::CSSSampleId::kFillRule;
    case CSSPropertyID::kFilter:
      return mojom::blink::CSSSampleId::kFilter;
    case CSSPropertyID::kFlexBasis:
      return mojom::blink::CSSSampleId::kFlexBasis;
    case CSSPropertyID::kFlexDirection:
      return mojom::blink::CSSSampleId::kFlexDirection;
    case CSSPropertyID::kFlexGrow:
      return mojom::blink::CSSSampleId::kFlexGrow;
    case CSSPropertyID::kFlexShrink:
      return mojom::blink::CSSSampleId::kFlexShrink;
    case CSSPropertyID::kFlexWrap:
      return mojom::blink::CSSSampleId::kFlexWrap;
    case CSSPropertyID::kFloat:
      return mojom::blink::CSSSampleId::kFloat;
    case CSSPropertyID::kFloodColor:
      return mojom::blink::CSSSampleId::kFloodColor;
    case CSSPropertyID::kFloodOpacity:
      return mojom::blink::CSSSampleId::kFloodOpacity;
    case CSSPropertyID::kFontDisplay:
      return mojom::blink::CSSSampleId::kFontDisplay;
    case CSSPropertyID::kGridAutoColumns:
      return mojom::blink::CSSSampleId::kGridAutoColumns;
    case CSSPropertyID::kGridAutoFlow:
      return mojom::blink::CSSSampleId::kGridAutoFlow;
    case CSSPropertyID::kGridAutoRows:
      return mojom::blink::CSSSampleId::kGridAutoRows;
    case CSSPropertyID::kGridColumnEnd:
      return mojom::blink::CSSSampleId::kGridColumnEnd;
    case CSSPropertyID::kGridColumnStart:
      return mojom::blink::CSSSampleId::kGridColumnStart;
    case CSSPropertyID::kGridRowEnd:
      return mojom::blink::CSSSampleId::kGridRowEnd;
    case CSSPropertyID::kGridRowStart:
      return mojom::blink::CSSSampleId::kGridRowStart;
    case CSSPropertyID::kGridTemplateAreas:
      return mojom::blink::CSSSampleId::kGridTemplateAreas;
    case CSSPropertyID::kGridTemplateColumns:
      return mojom::blink::CSSSampleId::kGridTemplateColumns;
    case CSSPropertyID::kGridTemplateRows:
      return mojom::blink::CSSSampleId::kGridTemplateRows;
    case CSSPropertyID::kHeight:
      return mojom::blink::CSSSampleId::kHeight;
    case CSSPropertyID::kHyphens:
      return mojom::blink::CSSSampleId::kHyphens;
    case CSSPropertyID::kImageOrientation:
      return mojom::blink::CSSSampleId::kImageOrientation;
    case CSSPropertyID::kImageRendering:
      return mojom::blink::CSSSampleId::kImageRendering;
    case CSSPropertyID::kInherits:
      return mojom::blink::CSSSampleId::kInherits;
    case CSSPropertyID::kInitialValue:
      return mojom::blink::CSSSampleId::kInitialValue;
    case CSSPropertyID::kInlineSize:
      return mojom::blink::CSSSampleId::kInlineSize;
    case CSSPropertyID::kInsetBlockEnd:
      return mojom::blink::CSSSampleId::kInsetBlockEnd;
    case CSSPropertyID::kInsetBlockStart:
      return mojom::blink::CSSSampleId::kInsetBlockStart;
    case CSSPropertyID::kInsetInlineEnd:
      return mojom::blink::CSSSampleId::kInsetInlineEnd;
    case CSSPropertyID::kInsetInlineStart:
      return mojom::blink::CSSSampleId::kInsetInlineStart;
    case CSSPropertyID::kInternalAlignSelfBlock:
      return mojom::blink::CSSSampleId::kInternalAlignSelfBlock;
    case CSSPropertyID::kInternalEmptyLineHeight:
      return mojom::blink::CSSSampleId::kInternalEmptyLineHeight;
    case CSSPropertyID::kInternalFontSizeDelta:
      return mojom::blink::CSSSampleId::kInternalFontSizeDelta;
    case CSSPropertyID::kInternalForcedBackgroundColor:
      return mojom::blink::CSSSampleId::kInternalForcedBackgroundColor;
    case CSSPropertyID::kInternalForcedBorderColor:
      return mojom::blink::CSSSampleId::kInternalForcedBorderColor;
    case CSSPropertyID::kInternalForcedColor:
      return mojom::blink::CSSSampleId::kInternalForcedColor;
    case CSSPropertyID::kInternalForcedOutlineColor:
      return mojom::blink::CSSSampleId::kInternalForcedOutlineColor;
    case CSSPropertyID::kInternalForcedVisitedColor:
      return mojom::blink::CSSSampleId::kInternalForcedVisitedColor;
    case CSSPropertyID::kInternalVisitedBackgroundColor:
      return mojom::blink::CSSSampleId::kInternalVisitedBackgroundColor;
    case CSSPropertyID::kInternalVisitedBorderBlockEndColor:
      return mojom::blink::CSSSampleId::kInternalVisitedBorderBlockEndColor;
    case CSSPropertyID::kInternalVisitedBorderBlockStartColor:
      return mojom::blink::CSSSampleId::kInternalVisitedBorderBlockStartColor;
    case CSSPropertyID::kInternalVisitedBorderBottomColor:
      return mojom::blink::CSSSampleId::kInternalVisitedBorderBottomColor;
    case CSSPropertyID::kInternalVisitedBorderInlineEndColor:
      return mojom::blink::CSSSampleId::kInternalVisitedBorderInlineEndColor;
    case CSSPropertyID::kInternalVisitedBorderInlineStartColor:
      return mojom::blink::CSSSampleId::kInternalVisitedBorderInlineStartColor;
    case CSSPropertyID::kInternalVisitedBorderLeftColor:
      return mojom::blink::CSSSampleId::kInternalVisitedBorderLeftColor;
    case CSSPropertyID::kInternalVisitedBorderRightColor:
      return mojom::blink::CSSSampleId::kInternalVisitedBorderRightColor;
    case CSSPropertyID::kInternalVisitedBorderTopColor:
      return mojom::blink::CSSSampleId::kInternalVisitedBorderTopColor;
    case CSSPropertyID::kInternalVisitedCaretColor:
      return mojom::blink::CSSSampleId::kInternalVisitedCaretColor;
    case CSSPropertyID::kInternalVisitedColumnRuleColor:
      return mojom::blink::CSSSampleId::kInternalVisitedColumnRuleColor;
    case CSSPropertyID::kInternalVisitedFill:
      return mojom::blink::CSSSampleId::kInternalVisitedFill;
    case CSSPropertyID::kInternalVisitedOutlineColor:
      return mojom::blink::CSSSampleId::kInternalVisitedOutlineColor;
    case CSSPropertyID::kInternalVisitedStroke:
      return mojom::blink::CSSSampleId::kInternalVisitedStroke;
    case CSSPropertyID::kInternalVisitedTextDecorationColor:
      return mojom::blink::CSSSampleId::kInternalVisitedTextDecorationColor;
    case CSSPropertyID::kInternalVisitedTextEmphasisColor:
      return mojom::blink::CSSSampleId::kInternalVisitedTextEmphasisColor;
    case CSSPropertyID::kInternalVisitedTextFillColor:
      return mojom::blink::CSSSampleId::kInternalVisitedTextFillColor;
    case CSSPropertyID::kInternalVisitedTextStrokeColor:
      return mojom::blink::CSSSampleId::kInternalVisitedTextStrokeColor;
    case CSSPropertyID::kIsolation:
      return mojom::blink::CSSSampleId::kIsolation;
    case CSSPropertyID::kJustifyContent:
      return mojom::blink::CSSSampleId::kJustifyContent;
    case CSSPropertyID::kJustifyItems:
      return mojom::blink::CSSSampleId::kJustifyItems;
    case CSSPropertyID::kJustifySelf:
      return mojom::blink::CSSSampleId::kJustifySelf;
    case CSSPropertyID::kLeft:
      return mojom::blink::CSSSampleId::kLeft;
    case CSSPropertyID::kLetterSpacing:
      return mojom::blink::CSSSampleId::kLetterSpacing;
    case CSSPropertyID::kLightingColor:
      return mojom::blink::CSSSampleId::kLightingColor;
    case CSSPropertyID::kLineBreak:
      return mojom::blink::CSSSampleId::kLineBreak;
    case CSSPropertyID::kLineGapOverride:
      return mojom::blink::CSSSampleId::kLineGapOverride;
    case CSSPropertyID::kLineHeight:
      return mojom::blink::CSSSampleId::kLineHeight;
    case CSSPropertyID::kLineHeightStep:
      return mojom::blink::CSSSampleId::kLineHeightStep;
    case CSSPropertyID::kListStyleImage:
      return mojom::blink::CSSSampleId::kListStyleImage;
    case CSSPropertyID::kListStylePosition:
      return mojom::blink::CSSSampleId::kListStylePosition;
    case CSSPropertyID::kListStyleType:
      return mojom::blink::CSSSampleId::kListStyleType;
    case CSSPropertyID::kMarginBlockEnd:
      return mojom::blink::CSSSampleId::kMarginBlockEnd;
    case CSSPropertyID::kMarginBlockStart:
      return mojom::blink::CSSSampleId::kMarginBlockStart;
    case CSSPropertyID::kMarginBottom:
      return mojom::blink::CSSSampleId::kMarginBottom;
    case CSSPropertyID::kMarginInlineEnd:
      return mojom::blink::CSSSampleId::kMarginInlineEnd;
    case CSSPropertyID::kMarginInlineStart:
      return mojom::blink::CSSSampleId::kMarginInlineStart;
    case CSSPropertyID::kMarginLeft:
      return mojom::blink::CSSSampleId::kMarginLeft;
    case CSSPropertyID::kMarginRight:
      return mojom::blink::CSSSampleId::kMarginRight;
    case CSSPropertyID::kMarginTop:
      return mojom::blink::CSSSampleId::kMarginTop;
    case CSSPropertyID::kMarkerEnd:
      return mojom::blink::CSSSampleId::kMarkerEnd;
    case CSSPropertyID::kMarkerMid:
      return mojom::blink::CSSSampleId::kMarkerMid;
    case CSSPropertyID::kMarkerStart:
      return mojom::blink::CSSSampleId::kMarkerStart;
    case CSSPropertyID::kMask:
      return mojom::blink::CSSSampleId::kMask;
    case CSSPropertyID::kMaskType:
      return mojom::blink::CSSSampleId::kMaskType;
    case CSSPropertyID::kMathDepth:
      return mojom::blink::CSSSampleId::kMathDepth;
    case CSSPropertyID::kMathShift:
      return mojom::blink::CSSSampleId::kMathShift;
    case CSSPropertyID::kMathStyle:
      return mojom::blink::CSSSampleId::kMathStyle;
    case CSSPropertyID::kMaxBlockSize:
      return mojom::blink::CSSSampleId::kMaxBlockSize;
    case CSSPropertyID::kMaxHeight:
      return mojom::blink::CSSSampleId::kMaxHeight;
    case CSSPropertyID::kMaxInlineSize:
      return mojom::blink::CSSSampleId::kMaxInlineSize;
    case CSSPropertyID::kMaxWidth:
      return mojom::blink::CSSSampleId::kMaxWidth;
    case CSSPropertyID::kMaxZoom:
      return mojom::blink::CSSSampleId::kMaxZoom;
    case CSSPropertyID::kMinBlockSize:
      return mojom::blink::CSSSampleId::kMinBlockSize;
    case CSSPropertyID::kMinHeight:
      return mojom::blink::CSSSampleId::kMinHeight;
    case CSSPropertyID::kMinInlineSize:
      return mojom::blink::CSSSampleId::kMinInlineSize;
    case CSSPropertyID::kMinWidth:
      return mojom::blink::CSSSampleId::kMinWidth;
    case CSSPropertyID::kMinZoom:
      return mojom::blink::CSSSampleId::kMinZoom;
    case CSSPropertyID::kMixBlendMode:
      return mojom::blink::CSSSampleId::kMixBlendMode;
    case CSSPropertyID::kNegative:
      return mojom::blink::CSSSampleId::kNegative;
    case CSSPropertyID::kObjectFit:
      return mojom::blink::CSSSampleId::kObjectFit;
    case CSSPropertyID::kObjectPosition:
      return mojom::blink::CSSSampleId::kObjectPosition;
    case CSSPropertyID::kObjectViewBox:
      return mojom::blink::CSSSampleId::kObjectViewBox;
    case CSSPropertyID::kOffsetAnchor:
      return mojom::blink::CSSSampleId::kOffsetAnchor;
    case CSSPropertyID::kOffsetDistance:
      return mojom::blink::CSSSampleId::kOffsetDistance;
    case CSSPropertyID::kOffsetPath:
      return mojom::blink::CSSSampleId::kOffsetPath;
    case CSSPropertyID::kOffsetPosition:
      return mojom::blink::CSSSampleId::kOffsetPosition;
    case CSSPropertyID::kOffsetRotate:
      return mojom::blink::CSSSampleId::kOffsetRotate;
    case CSSPropertyID::kOpacity:
      return mojom::blink::CSSSampleId::kOpacity;
    case CSSPropertyID::kOrder:
      return mojom::blink::CSSSampleId::kOrder;
    case CSSPropertyID::kOrientation:
      return mojom::blink::CSSSampleId::kOrientation;
    case CSSPropertyID::kOriginTrialTestProperty:
      return mojom::blink::CSSSampleId::kOriginTrialTestProperty;
    case CSSPropertyID::kOrphans:
      return mojom::blink::CSSSampleId::kOrphans;
    case CSSPropertyID::kOutlineColor:
      return mojom::blink::CSSSampleId::kOutlineColor;
    case CSSPropertyID::kOutlineOffset:
      return mojom::blink::CSSSampleId::kOutlineOffset;
    case CSSPropertyID::kOutlineStyle:
      return mojom::blink::CSSSampleId::kOutlineStyle;
    case CSSPropertyID::kOutlineWidth:
      return mojom::blink::CSSSampleId::kOutlineWidth;
    case CSSPropertyID::kOverflowAnchor:
      return mojom::blink::CSSSampleId::kOverflowAnchor;
    case CSSPropertyID::kOverflowBlock:
      return mojom::blink::CSSSampleId::kOverflowBlock;
    case CSSPropertyID::kOverflowClipMargin:
      return mojom::blink::CSSSampleId::kOverflowClipMargin;
    case CSSPropertyID::kOverflowInline:
      return mojom::blink::CSSSampleId::kOverflowInline;
    case CSSPropertyID::kOverflowWrap:
      return mojom::blink::CSSSampleId::kOverflowWrap;
    case CSSPropertyID::kOverflowX:
      return mojom::blink::CSSSampleId::kOverflowX;
    case CSSPropertyID::kOverflowY:
      return mojom::blink::CSSSampleId::kOverflowY;
    case CSSPropertyID::kOverrideColors:
      return mojom::blink::CSSSampleId::kOverrideColors;
    case CSSPropertyID::kOverscrollBehaviorBlock:
      return mojom::blink::CSSSampleId::kOverscrollBehaviorBlock;
    case CSSPropertyID::kOverscrollBehaviorInline:
      return mojom::blink::CSSSampleId::kOverscrollBehaviorInline;
    case CSSPropertyID::kOverscrollBehaviorX:
      return mojom::blink::CSSSampleId::kOverscrollBehaviorX;
    case CSSPropertyID::kOverscrollBehaviorY:
      return mojom::blink::CSSSampleId::kOverscrollBehaviorY;
    case CSSPropertyID::kPad:
      return mojom::blink::CSSSampleId::kPad;
    case CSSPropertyID::kPaddingBlockEnd:
      return mojom::blink::CSSSampleId::kPaddingBlockEnd;
    case CSSPropertyID::kPaddingBlockStart:
      return mojom::blink::CSSSampleId::kPaddingBlockStart;
    case CSSPropertyID::kPaddingBottom:
      return mojom::blink::CSSSampleId::kPaddingBottom;
    case CSSPropertyID::kPaddingInlineEnd:
      return mojom::blink::CSSSampleId::kPaddingInlineEnd;
    case CSSPropertyID::kPaddingInlineStart:
      return mojom::blink::CSSSampleId::kPaddingInlineStart;
    case CSSPropertyID::kPaddingLeft:
      return mojom::blink::CSSSampleId::kPaddingLeft;
    case CSSPropertyID::kPaddingRight:
      return mojom::blink::CSSSampleId::kPaddingRight;
    case CSSPropertyID::kPaddingTop:
      return mojom::blink::CSSSampleId::kPaddingTop;
    case CSSPropertyID::kPage:
      return mojom::blink::CSSSampleId::kPage;
    case CSSPropertyID::kPageOrientation:
      return mojom::blink::CSSSampleId::kPageOrientation;
    case CSSPropertyID::kPageTransitionTag:
      return mojom::blink::CSSSampleId::kPageTransitionTag;
    case CSSPropertyID::kPaintOrder:
      return mojom::blink::CSSSampleId::kPaintOrder;
    case CSSPropertyID::kPerspective:
      return mojom::blink::CSSSampleId::kPerspective;
    case CSSPropertyID::kPerspectiveOrigin:
      return mojom::blink::CSSSampleId::kPerspectiveOrigin;
    case CSSPropertyID::kPointerEvents:
      return mojom::blink::CSSSampleId::kPointerEvents;
    case CSSPropertyID::kPopUpHideDelay:
      return mojom::blink::CSSSampleId::kPopUpHideDelay;
    case CSSPropertyID::kPopUpShowDelay:
      return mojom::blink::CSSSampleId::kPopUpShowDelay;
    case CSSPropertyID::kPosition:
      return mojom::blink::CSSSampleId::kPosition;
    case CSSPropertyID::kPositionFallback:
      return mojom::blink::CSSSampleId::kPositionFallback;
    case CSSPropertyID::kPrefix:
      return mojom::blink::CSSSampleId::kPrefix;
    case CSSPropertyID::kQuotes:
      return mojom::blink::CSSSampleId::kQuotes;
    case CSSPropertyID::kR:
      return mojom::blink::CSSSampleId::kR;
    case CSSPropertyID::kRange:
      return mojom::blink::CSSSampleId::kRange;
    case CSSPropertyID::kResize:
      return mojom::blink::CSSSampleId::kResize;
    case CSSPropertyID::kRight:
      return mojom::blink::CSSSampleId::kRight;
    case CSSPropertyID::kRotate:
      return mojom::blink::CSSSampleId::kRotate;
    case CSSPropertyID::kRowGap:
      return mojom::blink::CSSSampleId::kRowGap;
    case CSSPropertyID::kRubyPosition:
      return mojom::blink::CSSSampleId::kRubyPosition;
    case CSSPropertyID::kRx:
      return mojom::blink::CSSSampleId::kRx;
    case CSSPropertyID::kRy:
      return mojom::blink::CSSSampleId::kRy;
    case CSSPropertyID::kScale:
      return mojom::blink::CSSSampleId::kScale;
    case CSSPropertyID::kScrollBehavior:
      return mojom::blink::CSSSampleId::kScrollBehavior;
    case CSSPropertyID::kScrollCustomization:
      return mojom::blink::CSSSampleId::kScrollCustomization;
    case CSSPropertyID::kScrollMarginBlockEnd:
      return mojom::blink::CSSSampleId::kScrollMarginBlockEnd;
    case CSSPropertyID::kScrollMarginBlockStart:
      return mojom::blink::CSSSampleId::kScrollMarginBlockStart;
    case CSSPropertyID::kScrollMarginBottom:
      return mojom::blink::CSSSampleId::kScrollMarginBottom;
    case CSSPropertyID::kScrollMarginInlineEnd:
      return mojom::blink::CSSSampleId::kScrollMarginInlineEnd;
    case CSSPropertyID::kScrollMarginInlineStart:
      return mojom::blink::CSSSampleId::kScrollMarginInlineStart;
    case CSSPropertyID::kScrollMarginLeft:
      return mojom::blink::CSSSampleId::kScrollMarginLeft;
    case CSSPropertyID::kScrollMarginRight:
      return mojom::blink::CSSSampleId::kScrollMarginRight;
    case CSSPropertyID::kScrollMarginTop:
      return mojom::blink::CSSSampleId::kScrollMarginTop;
    case CSSPropertyID::kScrollPaddingBlockEnd:
      return mojom::blink::CSSSampleId::kScrollPaddingBlockEnd;
    case CSSPropertyID::kScrollPaddingBlockStart:
      return mojom::blink::CSSSampleId::kScrollPaddingBlockStart;
    case CSSPropertyID::kScrollPaddingBottom:
      return mojom::blink::CSSSampleId::kScrollPaddingBottom;
    case CSSPropertyID::kScrollPaddingInlineEnd:
      return mojom::blink::CSSSampleId::kScrollPaddingInlineEnd;
    case CSSPropertyID::kScrollPaddingInlineStart:
      return mojom::blink::CSSSampleId::kScrollPaddingInlineStart;
    case CSSPropertyID::kScrollPaddingLeft:
      return mojom::blink::CSSSampleId::kScrollPaddingLeft;
    case CSSPropertyID::kScrollPaddingRight:
      return mojom::blink::CSSSampleId::kScrollPaddingRight;
    case CSSPropertyID::kScrollPaddingTop:
      return mojom::blink::CSSSampleId::kScrollPaddingTop;
    case CSSPropertyID::kScrollSnapAlign:
      return mojom::blink::CSSSampleId::kScrollSnapAlign;
    case CSSPropertyID::kScrollSnapStop:
      return mojom::blink::CSSSampleId::kScrollSnapStop;
    case CSSPropertyID::kScrollSnapType:
      return mojom::blink::CSSSampleId::kScrollSnapType;
    case CSSPropertyID::kScrollbarGutter:
      return mojom::blink::CSSSampleId::kScrollbarGutter;
    case CSSPropertyID::kScrollbarWidth:
      return mojom::blink::CSSSampleId::kScrollbarWidth;
    case CSSPropertyID::kShapeImageThreshold:
      return mojom::blink::CSSSampleId::kShapeImageThreshold;
    case CSSPropertyID::kShapeMargin:
      return mojom::blink::CSSSampleId::kShapeMargin;
    case CSSPropertyID::kShapeOutside:
      return mojom::blink::CSSSampleId::kShapeOutside;
    case CSSPropertyID::kShapeRendering:
      return mojom::blink::CSSSampleId::kShapeRendering;
    case CSSPropertyID::kSize:
      return mojom::blink::CSSSampleId::kSize;
    case CSSPropertyID::kSizeAdjust:
      return mojom::blink::CSSSampleId::kSizeAdjust;
    case CSSPropertyID::kSource:
      return mojom::blink::CSSSampleId::kSource;
    case CSSPropertyID::kSpeak:
      return mojom::blink::CSSSampleId::kSpeak;
    case CSSPropertyID::kSpeakAs:
      return mojom::blink::CSSSampleId::kSpeakAs;
    case CSSPropertyID::kSrc:
      return mojom::blink::CSSSampleId::kSrc;
    case CSSPropertyID::kStart:
      return mojom::blink::CSSSampleId::kStart;
    case CSSPropertyID::kStopColor:
      return mojom::blink::CSSSampleId::kStopColor;
    case CSSPropertyID::kStopOpacity:
      return mojom::blink::CSSSampleId::kStopOpacity;
    case CSSPropertyID::kStroke:
      return mojom::blink::CSSSampleId::kStroke;
    case CSSPropertyID::kStrokeDasharray:
      return mojom::blink::CSSSampleId::kStrokeDasharray;
    case CSSPropertyID::kStrokeDashoffset:
      return mojom::blink::CSSSampleId::kStrokeDashoffset;
    case CSSPropertyID::kStrokeLinecap:
      return mojom::blink::CSSSampleId::kStrokeLinecap;
    case CSSPropertyID::kStrokeLinejoin:
      return mojom::blink::CSSSampleId::kStrokeLinejoin;
    case CSSPropertyID::kStrokeMiterlimit:
      return mojom::blink::CSSSampleId::kStrokeMiterlimit;
    case CSSPropertyID::kStrokeOpacity:
      return mojom::blink::CSSSampleId::kStrokeOpacity;
    case CSSPropertyID::kStrokeWidth:
      return mojom::blink::CSSSampleId::kStrokeWidth;
    case CSSPropertyID::kSuffix:
      return mojom::blink::CSSSampleId::kSuffix;
    case CSSPropertyID::kSymbols:
      return mojom::blink::CSSSampleId::kSymbols;
    case CSSPropertyID::kSyntax:
      return mojom::blink::CSSSampleId::kSyntax;
    case CSSPropertyID::kSystem:
      return mojom::blink::CSSSampleId::kSystem;
    case CSSPropertyID::kTabSize:
      return mojom::blink::CSSSampleId::kTabSize;
    case CSSPropertyID::kTableLayout:
      return mojom::blink::CSSSampleId::kTableLayout;
    case CSSPropertyID::kTextAlign:
      return mojom::blink::CSSSampleId::kTextAlign;
    case CSSPropertyID::kTextAlignLast:
      return mojom::blink::CSSSampleId::kTextAlignLast;
    case CSSPropertyID::kTextAnchor:
      return mojom::blink::CSSSampleId::kTextAnchor;
    case CSSPropertyID::kTextCombineUpright:
      return mojom::blink::CSSSampleId::kTextCombineUpright;
    case CSSPropertyID::kTextDecorationColor:
      return mojom::blink::CSSSampleId::kTextDecorationColor;
    case CSSPropertyID::kTextDecorationLine:
      return mojom::blink::CSSSampleId::kTextDecorationLine;
    case CSSPropertyID::kTextDecorationSkipInk:
      return mojom::blink::CSSSampleId::kTextDecorationSkipInk;
    case CSSPropertyID::kTextDecorationStyle:
      return mojom::blink::CSSSampleId::kTextDecorationStyle;
    case CSSPropertyID::kTextDecorationThickness:
      return mojom::blink::CSSSampleId::kTextDecorationThickness;
    case CSSPropertyID::kTextEmphasisColor:
      return mojom::blink::CSSSampleId::kTextEmphasisColor;
    case CSSPropertyID::kTextEmphasisPosition:
      return mojom::blink::CSSSampleId::kTextEmphasisPosition;
    case CSSPropertyID::kTextEmphasisStyle:
      return mojom::blink::CSSSampleId::kTextEmphasisStyle;
    case CSSPropertyID::kTextIndent:
      return mojom::blink::CSSSampleId::kTextIndent;
    case CSSPropertyID::kTextJustify:
      return mojom::blink::CSSSampleId::kTextJustify;
    case CSSPropertyID::kTextOverflow:
      return mojom::blink::CSSSampleId::kTextOverflow;
    case CSSPropertyID::kTextShadow:
      return mojom::blink::CSSSampleId::kTextShadow;
    case CSSPropertyID::kTextSizeAdjust:
      return mojom::blink::CSSSampleId::kTextSizeAdjust;
    case CSSPropertyID::kTextTransform:
      return mojom::blink::CSSSampleId::kTextTransform;
    case CSSPropertyID::kTextUnderlineOffset:
      return mojom::blink::CSSSampleId::kTextUnderlineOffset;
    case CSSPropertyID::kTextUnderlinePosition:
      return mojom::blink::CSSSampleId::kTextUnderlinePosition;
    case CSSPropertyID::kToggleGroup:
      return mojom::blink::CSSSampleId::kToggleGroup;
    case CSSPropertyID::kToggleRoot:
      return mojom::blink::CSSSampleId::kToggleRoot;
    case CSSPropertyID::kToggleTrigger:
      return mojom::blink::CSSSampleId::kToggleTrigger;
    case CSSPropertyID::kTop:
      return mojom::blink::CSSSampleId::kTop;
    case CSSPropertyID::kTouchAction:
      return mojom::blink::CSSSampleId::kTouchAction;
    case CSSPropertyID::kTransform:
      return mojom::blink::CSSSampleId::kTransform;
    case CSSPropertyID::kTransformBox:
      return mojom::blink::CSSSampleId::kTransformBox;
    case CSSPropertyID::kTransformOrigin:
      return mojom::blink::CSSSampleId::kTransformOrigin;
    case CSSPropertyID::kTransformStyle:
      return mojom::blink::CSSSampleId::kTransformStyle;
    case CSSPropertyID::kTransitionDelay:
      return mojom::blink::CSSSampleId::kTransitionDelay;
    case CSSPropertyID::kTransitionDuration:
      return mojom::blink::CSSSampleId::kTransitionDuration;
    case CSSPropertyID::kTransitionProperty:
      return mojom::blink::CSSSampleId::kTransitionProperty;
    case CSSPropertyID::kTransitionTimingFunction:
      return mojom::blink::CSSSampleId::kTransitionTimingFunction;
    case CSSPropertyID::kTranslate:
      return mojom::blink::CSSSampleId::kTranslate;
    case CSSPropertyID::kUnicodeBidi:
      return mojom::blink::CSSSampleId::kUnicodeBidi;
    case CSSPropertyID::kUnicodeRange:
      return mojom::blink::CSSSampleId::kUnicodeRange;
    case CSSPropertyID::kUserSelect:
      return mojom::blink::CSSSampleId::kUserSelect;
    case CSSPropertyID::kUserZoom:
      return mojom::blink::CSSSampleId::kUserZoom;
    case CSSPropertyID::kVectorEffect:
      return mojom::blink::CSSSampleId::kVectorEffect;
    case CSSPropertyID::kVerticalAlign:
      return mojom::blink::CSSSampleId::kVerticalAlign;
    case CSSPropertyID::kViewportFit:
      return mojom::blink::CSSSampleId::kViewportFit;
    case CSSPropertyID::kVisibility:
      return mojom::blink::CSSSampleId::kVisibility;
    case CSSPropertyID::kWebkitBorderHorizontalSpacing:
      return mojom::blink::CSSSampleId::kWebkitBorderHorizontalSpacing;
    case CSSPropertyID::kWebkitBorderImage:
      return mojom::blink::CSSSampleId::kWebkitBorderImage;
    case CSSPropertyID::kWebkitBorderVerticalSpacing:
      return mojom::blink::CSSSampleId::kWebkitBorderVerticalSpacing;
    case CSSPropertyID::kWebkitBoxAlign:
      return mojom::blink::CSSSampleId::kWebkitBoxAlign;
    case CSSPropertyID::kWebkitBoxDecorationBreak:
      return mojom::blink::CSSSampleId::kWebkitBoxDecorationBreak;
    case CSSPropertyID::kWebkitBoxDirection:
      return mojom::blink::CSSSampleId::kWebkitBoxDirection;
    case CSSPropertyID::kWebkitBoxFlex:
      return mojom::blink::CSSSampleId::kWebkitBoxFlex;
    case CSSPropertyID::kWebkitBoxOrdinalGroup:
      return mojom::blink::CSSSampleId::kWebkitBoxOrdinalGroup;
    case CSSPropertyID::kWebkitBoxOrient:
      return mojom::blink::CSSSampleId::kWebkitBoxOrient;
    case CSSPropertyID::kWebkitBoxPack:
      return mojom::blink::CSSSampleId::kWebkitBoxPack;
    case CSSPropertyID::kWebkitBoxReflect:
      return mojom::blink::CSSSampleId::kWebkitBoxReflect;
    case CSSPropertyID::kWebkitHighlight:
      return mojom::blink::CSSSampleId::kWebkitHighlight;
    case CSSPropertyID::kWebkitHyphenateCharacter:
      return mojom::blink::CSSSampleId::kWebkitHyphenateCharacter;
    case CSSPropertyID::kWebkitLineBreak:
      return mojom::blink::CSSSampleId::kWebkitLineBreak;
    case CSSPropertyID::kWebkitLineClamp:
      return mojom::blink::CSSSampleId::kWebkitLineClamp;
    case CSSPropertyID::kWebkitMaskBoxImageOutset:
      return mojom::blink::CSSSampleId::kWebkitMaskBoxImageOutset;
    case CSSPropertyID::kWebkitMaskBoxImageRepeat:
      return mojom::blink::CSSSampleId::kWebkitMaskBoxImageRepeat;
    case CSSPropertyID::kWebkitMaskBoxImageSlice:
      return mojom::blink::CSSSampleId::kWebkitMaskBoxImageSlice;
    case CSSPropertyID::kWebkitMaskBoxImageSource:
      return mojom::blink::CSSSampleId::kWebkitMaskBoxImageSource;
    case CSSPropertyID::kWebkitMaskBoxImageWidth:
      return mojom::blink::CSSSampleId::kWebkitMaskBoxImageWidth;
    case CSSPropertyID::kWebkitMaskClip:
      return mojom::blink::CSSSampleId::kWebkitMaskClip;
    case CSSPropertyID::kWebkitMaskComposite:
      return mojom::blink::CSSSampleId::kWebkitMaskComposite;
    case CSSPropertyID::kWebkitMaskImage:
      return mojom::blink::CSSSampleId::kWebkitMaskImage;
    case CSSPropertyID::kWebkitMaskOrigin:
      return mojom::blink::CSSSampleId::kWebkitMaskOrigin;
    case CSSPropertyID::kWebkitMaskPositionX:
      return mojom::blink::CSSSampleId::kWebkitMaskPositionX;
    case CSSPropertyID::kWebkitMaskPositionY:
      return mojom::blink::CSSSampleId::kWebkitMaskPositionY;
    case CSSPropertyID::kWebkitMaskRepeatX:
      return mojom::blink::CSSSampleId::kWebkitMaskRepeatX;
    case CSSPropertyID::kWebkitMaskRepeatY:
      return mojom::blink::CSSSampleId::kWebkitMaskRepeatY;
    case CSSPropertyID::kWebkitMaskSize:
      return mojom::blink::CSSSampleId::kWebkitMaskSize;
    case CSSPropertyID::kWebkitPerspectiveOriginX:
      return mojom::blink::CSSSampleId::kWebkitPerspectiveOriginX;
    case CSSPropertyID::kWebkitPerspectiveOriginY:
      return mojom::blink::CSSSampleId::kWebkitPerspectiveOriginY;
    case CSSPropertyID::kWebkitPrintColorAdjust:
      return mojom::blink::CSSSampleId::kWebkitPrintColorAdjust;
    case CSSPropertyID::kWebkitRtlOrdering:
      return mojom::blink::CSSSampleId::kWebkitRtlOrdering;
    case CSSPropertyID::kWebkitRubyPosition:
      return mojom::blink::CSSSampleId::kWebkitRubyPosition;
    case CSSPropertyID::kWebkitTapHighlightColor:
      return mojom::blink::CSSSampleId::kWebkitTapHighlightColor;
    case CSSPropertyID::kWebkitTextCombine:
      return mojom::blink::CSSSampleId::kWebkitTextCombine;
    case CSSPropertyID::kWebkitTextDecorationsInEffect:
      return mojom::blink::CSSSampleId::kWebkitTextDecorationsInEffect;
    case CSSPropertyID::kWebkitTextFillColor:
      return mojom::blink::CSSSampleId::kWebkitTextFillColor;
    case CSSPropertyID::kWebkitTextSecurity:
      return mojom::blink::CSSSampleId::kWebkitTextSecurity;
    case CSSPropertyID::kWebkitTextStrokeColor:
      return mojom::blink::CSSSampleId::kWebkitTextStrokeColor;
    case CSSPropertyID::kWebkitTextStrokeWidth:
      return mojom::blink::CSSSampleId::kWebkitTextStrokeWidth;
    case CSSPropertyID::kWebkitTransformOriginX:
      return mojom::blink::CSSSampleId::kWebkitTransformOriginX;
    case CSSPropertyID::kWebkitTransformOriginY:
      return mojom::blink::CSSSampleId::kWebkitTransformOriginY;
    case CSSPropertyID::kWebkitTransformOriginZ:
      return mojom::blink::CSSSampleId::kWebkitTransformOriginZ;
    case CSSPropertyID::kWebkitUserDrag:
      return mojom::blink::CSSSampleId::kWebkitUserDrag;
    case CSSPropertyID::kWebkitUserModify:
      return mojom::blink::CSSSampleId::kWebkitUserModify;
    case CSSPropertyID::kWhiteSpace:
      return mojom::blink::CSSSampleId::kWhiteSpace;
    case CSSPropertyID::kWidows:
      return mojom::blink::CSSSampleId::kWidows;
    case CSSPropertyID::kWidth:
      return mojom::blink::CSSSampleId::kWidth;
    case CSSPropertyID::kWillChange:
      return mojom::blink::CSSSampleId::kWillChange;
    case CSSPropertyID::kWordBreak:
      return mojom::blink::CSSSampleId::kWordBreak;
    case CSSPropertyID::kWordSpacing:
      return mojom::blink::CSSSampleId::kWordSpacing;
    case CSSPropertyID::kX:
      return mojom::blink::CSSSampleId::kX;
    case CSSPropertyID::kY:
      return mojom::blink::CSSSampleId::kY;
    case CSSPropertyID::kZIndex:
      return mojom::blink::CSSSampleId::kZIndex;
    case CSSPropertyID::kAnimation:
      return mojom::blink::CSSSampleId::kAnimation;
    case CSSPropertyID::kBackground:
      return mojom::blink::CSSSampleId::kBackground;
    case CSSPropertyID::kBackgroundPosition:
      return mojom::blink::CSSSampleId::kBackgroundPosition;
    case CSSPropertyID::kBackgroundRepeat:
      return mojom::blink::CSSSampleId::kBackgroundRepeat;
    case CSSPropertyID::kBorder:
      return mojom::blink::CSSSampleId::kBorder;
    case CSSPropertyID::kBorderBlock:
      return mojom::blink::CSSSampleId::kBorderBlock;
    case CSSPropertyID::kBorderBlockColor:
      return mojom::blink::CSSSampleId::kBorderBlockColor;
    case CSSPropertyID::kBorderBlockEnd:
      return mojom::blink::CSSSampleId::kBorderBlockEnd;
    case CSSPropertyID::kBorderBlockStart:
      return mojom::blink::CSSSampleId::kBorderBlockStart;
    case CSSPropertyID::kBorderBlockStyle:
      return mojom::blink::CSSSampleId::kBorderBlockStyle;
    case CSSPropertyID::kBorderBlockWidth:
      return mojom::blink::CSSSampleId::kBorderBlockWidth;
    case CSSPropertyID::kBorderBottom:
      return mojom::blink::CSSSampleId::kBorderBottom;
    case CSSPropertyID::kBorderColor:
      return mojom::blink::CSSSampleId::kBorderColor;
    case CSSPropertyID::kBorderImage:
      return mojom::blink::CSSSampleId::kBorderImage;
    case CSSPropertyID::kBorderInline:
      return mojom::blink::CSSSampleId::kBorderInline;
    case CSSPropertyID::kBorderInlineColor:
      return mojom::blink::CSSSampleId::kBorderInlineColor;
    case CSSPropertyID::kBorderInlineEnd:
      return mojom::blink::CSSSampleId::kBorderInlineEnd;
    case CSSPropertyID::kBorderInlineStart:
      return mojom::blink::CSSSampleId::kBorderInlineStart;
    case CSSPropertyID::kBorderInlineStyle:
      return mojom::blink::CSSSampleId::kBorderInlineStyle;
    case CSSPropertyID::kBorderInlineWidth:
      return mojom::blink::CSSSampleId::kBorderInlineWidth;
    case CSSPropertyID::kBorderLeft:
      return mojom::blink::CSSSampleId::kBorderLeft;
    case CSSPropertyID::kBorderRadius:
      return mojom::blink::CSSSampleId::kBorderRadius;
    case CSSPropertyID::kBorderRight:
      return mojom::blink::CSSSampleId::kBorderRight;
    case CSSPropertyID::kBorderSpacing:
      return mojom::blink::CSSSampleId::kBorderSpacing;
    case CSSPropertyID::kBorderStyle:
      return mojom::blink::CSSSampleId::kBorderStyle;
    case CSSPropertyID::kBorderTop:
      return mojom::blink::CSSSampleId::kBorderTop;
    case CSSPropertyID::kBorderWidth:
      return mojom::blink::CSSSampleId::kBorderWidth;
    case CSSPropertyID::kColumnRule:
      return mojom::blink::CSSSampleId::kColumnRule;
    case CSSPropertyID::kColumns:
      return mojom::blink::CSSSampleId::kColumns;
    case CSSPropertyID::kContainIntrinsicSize:
      return mojom::blink::CSSSampleId::kContainIntrinsicSize;
    case CSSPropertyID::kContainer:
      return mojom::blink::CSSSampleId::kContainer;
    case CSSPropertyID::kFlex:
      return mojom::blink::CSSSampleId::kFlex;
    case CSSPropertyID::kFlexFlow:
      return mojom::blink::CSSSampleId::kFlexFlow;
    case CSSPropertyID::kFont:
      return mojom::blink::CSSSampleId::kFont;
    case CSSPropertyID::kFontSynthesis:
      return mojom::blink::CSSSampleId::kFontSynthesis;
    case CSSPropertyID::kFontVariant:
      return mojom::blink::CSSSampleId::kFontVariant;
    case CSSPropertyID::kGap:
      return mojom::blink::CSSSampleId::kGap;
    case CSSPropertyID::kGrid:
      return mojom::blink::CSSSampleId::kGrid;
    case CSSPropertyID::kGridArea:
      return mojom::blink::CSSSampleId::kGridArea;
    case CSSPropertyID::kGridColumn:
      return mojom::blink::CSSSampleId::kGridColumn;
    case CSSPropertyID::kGridColumnGap:
      return mojom::blink::CSSSampleId::kGridColumnGap;
    case CSSPropertyID::kGridGap:
      return mojom::blink::CSSSampleId::kGridGap;
    case CSSPropertyID::kGridRow:
      return mojom::blink::CSSSampleId::kGridRow;
    case CSSPropertyID::kGridRowGap:
      return mojom::blink::CSSSampleId::kGridRowGap;
    case CSSPropertyID::kGridTemplate:
      return mojom::blink::CSSSampleId::kGridTemplate;
    case CSSPropertyID::kInset:
      return mojom::blink::CSSSampleId::kInset;
    case CSSPropertyID::kInsetBlock:
      return mojom::blink::CSSSampleId::kInsetBlock;
    case CSSPropertyID::kInsetInline:
      return mojom::blink::CSSSampleId::kInsetInline;
    case CSSPropertyID::kListStyle:
      return mojom::blink::CSSSampleId::kListStyle;
    case CSSPropertyID::kMargin:
      return mojom::blink::CSSSampleId::kMargin;
    case CSSPropertyID::kMarginBlock:
      return mojom::blink::CSSSampleId::kMarginBlock;
    case CSSPropertyID::kMarginInline:
      return mojom::blink::CSSSampleId::kMarginInline;
    case CSSPropertyID::kMarker:
      return mojom::blink::CSSSampleId::kMarker;
    case CSSPropertyID::kOffset:
      return mojom::blink::CSSSampleId::kOffset;
    case CSSPropertyID::kOutline:
      return mojom::blink::CSSSampleId::kOutline;
    case CSSPropertyID::kOverflow:
      return mojom::blink::CSSSampleId::kOverflow;
    case CSSPropertyID::kOverscrollBehavior:
      return mojom::blink::CSSSampleId::kOverscrollBehavior;
    case CSSPropertyID::kPadding:
      return mojom::blink::CSSSampleId::kPadding;
    case CSSPropertyID::kPaddingBlock:
      return mojom::blink::CSSSampleId::kPaddingBlock;
    case CSSPropertyID::kPaddingInline:
      return mojom::blink::CSSSampleId::kPaddingInline;
    case CSSPropertyID::kPageBreakAfter:
      return mojom::blink::CSSSampleId::kPageBreakAfter;
    case CSSPropertyID::kPageBreakBefore:
      return mojom::blink::CSSSampleId::kPageBreakBefore;
    case CSSPropertyID::kPageBreakInside:
      return mojom::blink::CSSSampleId::kPageBreakInside;
    case CSSPropertyID::kPlaceContent:
      return mojom::blink::CSSSampleId::kPlaceContent;
    case CSSPropertyID::kPlaceItems:
      return mojom::blink::CSSSampleId::kPlaceItems;
    case CSSPropertyID::kPlaceSelf:
      return mojom::blink::CSSSampleId::kPlaceSelf;
    case CSSPropertyID::kScrollMargin:
      return mojom::blink::CSSSampleId::kScrollMargin;
    case CSSPropertyID::kScrollMarginBlock:
      return mojom::blink::CSSSampleId::kScrollMarginBlock;
    case CSSPropertyID::kScrollMarginInline:
      return mojom::blink::CSSSampleId::kScrollMarginInline;
    case CSSPropertyID::kScrollPadding:
      return mojom::blink::CSSSampleId::kScrollPadding;
    case CSSPropertyID::kScrollPaddingBlock:
      return mojom::blink::CSSSampleId::kScrollPaddingBlock;
    case CSSPropertyID::kScrollPaddingInline:
      return mojom::blink::CSSSampleId::kScrollPaddingInline;
    case CSSPropertyID::kTextDecoration:
      return mojom::blink::CSSSampleId::kTextDecoration;
    case CSSPropertyID::kTextEmphasis:
      return mojom::blink::CSSSampleId::kTextEmphasis;
    case CSSPropertyID::kToggle:
      return mojom::blink::CSSSampleId::kToggle;
    case CSSPropertyID::kTransition:
      return mojom::blink::CSSSampleId::kTransition;
    case CSSPropertyID::kWebkitColumnBreakAfter:
      return mojom::blink::CSSSampleId::kWebkitColumnBreakAfter;
    case CSSPropertyID::kWebkitColumnBreakBefore:
      return mojom::blink::CSSSampleId::kWebkitColumnBreakBefore;
    case CSSPropertyID::kWebkitColumnBreakInside:
      return mojom::blink::CSSSampleId::kWebkitColumnBreakInside;
    case CSSPropertyID::kWebkitMask:
      return mojom::blink::CSSSampleId::kWebkitMask;
    case CSSPropertyID::kWebkitMaskBoxImage:
      return mojom::blink::CSSSampleId::kWebkitMaskBoxImage;
    case CSSPropertyID::kWebkitMaskPosition:
      return mojom::blink::CSSSampleId::kWebkitMaskPosition;
    case CSSPropertyID::kWebkitMaskRepeat:
      return mojom::blink::CSSSampleId::kWebkitMaskRepeat;
    case CSSPropertyID::kWebkitTextStroke:
      return mojom::blink::CSSSampleId::kWebkitTextStroke;
    case CSSPropertyID::kAliasWebkitAppearance:
      return mojom::blink::CSSSampleId::kAliasWebkitAppearance;
    case CSSPropertyID::kAliasWebkitAppRegion:
      return mojom::blink::CSSSampleId::kAliasWebkitAppRegion;
    case CSSPropertyID::kAliasWebkitBorderEndColor:
      return mojom::blink::CSSSampleId::kAliasWebkitBorderEndColor;
    case CSSPropertyID::kAliasWebkitBorderEndStyle:
      return mojom::blink::CSSSampleId::kAliasWebkitBorderEndStyle;
    case CSSPropertyID::kAliasWebkitBorderEndWidth:
      return mojom::blink::CSSSampleId::kAliasWebkitBorderEndWidth;
    case CSSPropertyID::kAliasWebkitBorderStartColor:
      return mojom::blink::CSSSampleId::kAliasWebkitBorderStartColor;
    case CSSPropertyID::kAliasWebkitBorderStartStyle:
      return mojom::blink::CSSSampleId::kAliasWebkitBorderStartStyle;
    case CSSPropertyID::kAliasWebkitBorderStartWidth:
      return mojom::blink::CSSSampleId::kAliasWebkitBorderStartWidth;
    case CSSPropertyID::kAliasWebkitBorderBeforeColor:
      return mojom::blink::CSSSampleId::kAliasWebkitBorderBeforeColor;
    case CSSPropertyID::kAliasWebkitBorderBeforeStyle:
      return mojom::blink::CSSSampleId::kAliasWebkitBorderBeforeStyle;
    case CSSPropertyID::kAliasWebkitBorderBeforeWidth:
      return mojom::blink::CSSSampleId::kAliasWebkitBorderBeforeWidth;
    case CSSPropertyID::kAliasWebkitBorderAfterColor:
      return mojom::blink::CSSSampleId::kAliasWebkitBorderAfterColor;
    case CSSPropertyID::kAliasWebkitBorderAfterStyle:
      return mojom::blink::CSSSampleId::kAliasWebkitBorderAfterStyle;
    case CSSPropertyID::kAliasWebkitBorderAfterWidth:
      return mojom::blink::CSSSampleId::kAliasWebkitBorderAfterWidth;
    case CSSPropertyID::kAliasWebkitMarginEnd:
      return mojom::blink::CSSSampleId::kAliasWebkitMarginEnd;
    case CSSPropertyID::kAliasWebkitMarginStart:
      return mojom::blink::CSSSampleId::kAliasWebkitMarginStart;
    case CSSPropertyID::kAliasWebkitMarginBefore:
      return mojom::blink::CSSSampleId::kAliasWebkitMarginBefore;
    case CSSPropertyID::kAliasWebkitMarginAfter:
      return mojom::blink::CSSSampleId::kAliasWebkitMarginAfter;
    case CSSPropertyID::kAliasWebkitPaddingEnd:
      return mojom::blink::CSSSampleId::kAliasWebkitPaddingEnd;
    case CSSPropertyID::kAliasWebkitPaddingStart:
      return mojom::blink::CSSSampleId::kAliasWebkitPaddingStart;
    case CSSPropertyID::kAliasWebkitPaddingBefore:
      return mojom::blink::CSSSampleId::kAliasWebkitPaddingBefore;
    case CSSPropertyID::kAliasWebkitPaddingAfter:
      return mojom::blink::CSSSampleId::kAliasWebkitPaddingAfter;
    case CSSPropertyID::kAliasWebkitLogicalWidth:
      return mojom::blink::CSSSampleId::kAliasWebkitLogicalWidth;
    case CSSPropertyID::kAliasWebkitLogicalHeight:
      return mojom::blink::CSSSampleId::kAliasWebkitLogicalHeight;
    case CSSPropertyID::kAliasWebkitMinLogicalWidth:
      return mojom::blink::CSSSampleId::kAliasWebkitMinLogicalWidth;
    case CSSPropertyID::kAliasWebkitMinLogicalHeight:
      return mojom::blink::CSSSampleId::kAliasWebkitMinLogicalHeight;
    case CSSPropertyID::kAliasWebkitMaxLogicalWidth:
      return mojom::blink::CSSSampleId::kAliasWebkitMaxLogicalWidth;
    case CSSPropertyID::kAliasWebkitMaxLogicalHeight:
      return mojom::blink::CSSSampleId::kAliasWebkitMaxLogicalHeight;
    case CSSPropertyID::kAliasWebkitBorderAfter:
      return mojom::blink::CSSSampleId::kAliasWebkitBorderAfter;
    case CSSPropertyID::kAliasWebkitBorderBefore:
      return mojom::blink::CSSSampleId::kAliasWebkitBorderBefore;
    case CSSPropertyID::kAliasWebkitBorderEnd:
      return mojom::blink::CSSSampleId::kAliasWebkitBorderEnd;
    case CSSPropertyID::kAliasWebkitBorderStart:
      return mojom::blink::CSSSampleId::kAliasWebkitBorderStart;
    case CSSPropertyID::kAliasEpubCaptionSide:
      return mojom::blink::CSSSampleId::kAliasEpubCaptionSide;
    case CSSPropertyID::kAliasEpubTextCombine:
      return mojom::blink::CSSSampleId::kAliasEpubTextCombine;
    case CSSPropertyID::kAliasEpubTextEmphasis:
      return mojom::blink::CSSSampleId::kAliasEpubTextEmphasis;
    case CSSPropertyID::kAliasEpubTextEmphasisColor:
      return mojom::blink::CSSSampleId::kAliasEpubTextEmphasisColor;
    case CSSPropertyID::kAliasEpubTextEmphasisStyle:
      return mojom::blink::CSSSampleId::kAliasEpubTextEmphasisStyle;
    case CSSPropertyID::kAliasEpubTextOrientation:
      return mojom::blink::CSSSampleId::kAliasEpubTextOrientation;
    case CSSPropertyID::kAliasEpubTextTransform:
      return mojom::blink::CSSSampleId::kAliasEpubTextTransform;
    case CSSPropertyID::kAliasEpubWordBreak:
      return mojom::blink::CSSSampleId::kAliasEpubWordBreak;
    case CSSPropertyID::kAliasEpubWritingMode:
      return mojom::blink::CSSSampleId::kAliasEpubWritingMode;
    case CSSPropertyID::kAliasWebkitAlignContent:
      return mojom::blink::CSSSampleId::kAliasWebkitAlignContent;
    case CSSPropertyID::kAliasWebkitAlignItems:
      return mojom::blink::CSSSampleId::kAliasWebkitAlignItems;
    case CSSPropertyID::kAliasWebkitAlignSelf:
      return mojom::blink::CSSSampleId::kAliasWebkitAlignSelf;
    case CSSPropertyID::kAliasWebkitAnimation:
      return mojom::blink::CSSSampleId::kAliasWebkitAnimation;
    case CSSPropertyID::kAliasWebkitAnimationDelay:
      return mojom::blink::CSSSampleId::kAliasWebkitAnimationDelay;
    case CSSPropertyID::kAliasWebkitAnimationDirection:
      return mojom::blink::CSSSampleId::kAliasWebkitAnimationDirection;
    case CSSPropertyID::kAliasWebkitAnimationDuration:
      return mojom::blink::CSSSampleId::kAliasWebkitAnimationDuration;
    case CSSPropertyID::kAliasWebkitAnimationFillMode:
      return mojom::blink::CSSSampleId::kAliasWebkitAnimationFillMode;
    case CSSPropertyID::kAliasWebkitAnimationIterationCount:
      return mojom::blink::CSSSampleId::kAliasWebkitAnimationIterationCount;
    case CSSPropertyID::kAliasWebkitAnimationName:
      return mojom::blink::CSSSampleId::kAliasWebkitAnimationName;
    case CSSPropertyID::kAliasWebkitAnimationPlayState:
      return mojom::blink::CSSSampleId::kAliasWebkitAnimationPlayState;
    case CSSPropertyID::kAliasWebkitAnimationTimingFunction:
      return mojom::blink::CSSSampleId::kAliasWebkitAnimationTimingFunction;
    case CSSPropertyID::kAliasWebkitBackfaceVisibility:
      return mojom::blink::CSSSampleId::kAliasWebkitBackfaceVisibility;
    case CSSPropertyID::kAliasWebkitBackgroundClip:
      return mojom::blink::CSSSampleId::kAliasWebkitBackgroundClip;
    case CSSPropertyID::kAliasWebkitBackgroundOrigin:
      return mojom::blink::CSSSampleId::kAliasWebkitBackgroundOrigin;
    case CSSPropertyID::kAliasWebkitBackgroundSize:
      return mojom::blink::CSSSampleId::kAliasWebkitBackgroundSize;
    case CSSPropertyID::kAliasWebkitBorderBottomLeftRadius:
      return mojom::blink::CSSSampleId::kAliasWebkitBorderBottomLeftRadius;
    case CSSPropertyID::kAliasWebkitBorderBottomRightRadius:
      return mojom::blink::CSSSampleId::kAliasWebkitBorderBottomRightRadius;
    case CSSPropertyID::kAliasWebkitBorderRadius:
      return mojom::blink::CSSSampleId::kAliasWebkitBorderRadius;
    case CSSPropertyID::kAliasWebkitBorderTopLeftRadius:
      return mojom::blink::CSSSampleId::kAliasWebkitBorderTopLeftRadius;
    case CSSPropertyID::kAliasWebkitBorderTopRightRadius:
      return mojom::blink::CSSSampleId::kAliasWebkitBorderTopRightRadius;
    case CSSPropertyID::kAliasWebkitBoxShadow:
      return mojom::blink::CSSSampleId::kAliasWebkitBoxShadow;
    case CSSPropertyID::kAliasWebkitBoxSizing:
      return mojom::blink::CSSSampleId::kAliasWebkitBoxSizing;
    case CSSPropertyID::kAliasWebkitClipPath:
      return mojom::blink::CSSSampleId::kAliasWebkitClipPath;
    case CSSPropertyID::kAliasWebkitColumnCount:
      return mojom::blink::CSSSampleId::kAliasWebkitColumnCount;
    case CSSPropertyID::kAliasWebkitColumnGap:
      return mojom::blink::CSSSampleId::kAliasWebkitColumnGap;
    case CSSPropertyID::kAliasWebkitColumnRule:
      return mojom::blink::CSSSampleId::kAliasWebkitColumnRule;
    case CSSPropertyID::kAliasWebkitColumnRuleColor:
      return mojom::blink::CSSSampleId::kAliasWebkitColumnRuleColor;
    case CSSPropertyID::kAliasWebkitColumnRuleStyle:
      return mojom::blink::CSSSampleId::kAliasWebkitColumnRuleStyle;
    case CSSPropertyID::kAliasWebkitColumnRuleWidth:
      return mojom::blink::CSSSampleId::kAliasWebkitColumnRuleWidth;
    case CSSPropertyID::kAliasWebkitColumnSpan:
      return mojom::blink::CSSSampleId::kAliasWebkitColumnSpan;
    case CSSPropertyID::kAliasWebkitColumnWidth:
      return mojom::blink::CSSSampleId::kAliasWebkitColumnWidth;
    case CSSPropertyID::kAliasWebkitColumns:
      return mojom::blink::CSSSampleId::kAliasWebkitColumns;
    case CSSPropertyID::kAliasWebkitFilter:
      return mojom::blink::CSSSampleId::kAliasWebkitFilter;
    case CSSPropertyID::kAliasWebkitFlex:
      return mojom::blink::CSSSampleId::kAliasWebkitFlex;
    case CSSPropertyID::kAliasWebkitFlexBasis:
      return mojom::blink::CSSSampleId::kAliasWebkitFlexBasis;
    case CSSPropertyID::kAliasWebkitFlexDirection:
      return mojom::blink::CSSSampleId::kAliasWebkitFlexDirection;
    case CSSPropertyID::kAliasWebkitFlexFlow:
      return mojom::blink::CSSSampleId::kAliasWebkitFlexFlow;
    case CSSPropertyID::kAliasWebkitFlexGrow:
      return mojom::blink::CSSSampleId::kAliasWebkitFlexGrow;
    case CSSPropertyID::kAliasWebkitFlexShrink:
      return mojom::blink::CSSSampleId::kAliasWebkitFlexShrink;
    case CSSPropertyID::kAliasWebkitFlexWrap:
      return mojom::blink::CSSSampleId::kAliasWebkitFlexWrap;
    case CSSPropertyID::kAliasWebkitFontFeatureSettings:
      return mojom::blink::CSSSampleId::kAliasWebkitFontFeatureSettings;
    case CSSPropertyID::kAliasWebkitJustifyContent:
      return mojom::blink::CSSSampleId::kAliasWebkitJustifyContent;
    case CSSPropertyID::kAliasWebkitOpacity:
      return mojom::blink::CSSSampleId::kAliasWebkitOpacity;
    case CSSPropertyID::kAliasWebkitOrder:
      return mojom::blink::CSSSampleId::kAliasWebkitOrder;
    case CSSPropertyID::kAliasWebkitPerspective:
      return mojom::blink::CSSSampleId::kAliasWebkitPerspective;
    case CSSPropertyID::kAliasWebkitPerspectiveOrigin:
      return mojom::blink::CSSSampleId::kAliasWebkitPerspectiveOrigin;
    case CSSPropertyID::kAliasWebkitShapeImageThreshold:
      return mojom::blink::CSSSampleId::kAliasWebkitShapeImageThreshold;
    case CSSPropertyID::kAliasWebkitShapeMargin:
      return mojom::blink::CSSSampleId::kAliasWebkitShapeMargin;
    case CSSPropertyID::kAliasWebkitShapeOutside:
      return mojom::blink::CSSSampleId::kAliasWebkitShapeOutside;
    case CSSPropertyID::kAliasWebkitTextEmphasis:
      return mojom::blink::CSSSampleId::kAliasWebkitTextEmphasis;
    case CSSPropertyID::kAliasWebkitTextEmphasisColor:
      return mojom::blink::CSSSampleId::kAliasWebkitTextEmphasisColor;
    case CSSPropertyID::kAliasWebkitTextEmphasisPosition:
      return mojom::blink::CSSSampleId::kAliasWebkitTextEmphasisPosition;
    case CSSPropertyID::kAliasWebkitTextEmphasisStyle:
      return mojom::blink::CSSSampleId::kAliasWebkitTextEmphasisStyle;
    case CSSPropertyID::kAliasWebkitTextSizeAdjust:
      return mojom::blink::CSSSampleId::kAliasWebkitTextSizeAdjust;
    case CSSPropertyID::kAliasWebkitTransform:
      return mojom::blink::CSSSampleId::kAliasWebkitTransform;
    case CSSPropertyID::kAliasWebkitTransformOrigin:
      return mojom::blink::CSSSampleId::kAliasWebkitTransformOrigin;
    case CSSPropertyID::kAliasWebkitTransformStyle:
      return mojom::blink::CSSSampleId::kAliasWebkitTransformStyle;
    case CSSPropertyID::kAliasWebkitTransition:
      return mojom::blink::CSSSampleId::kAliasWebkitTransition;
    case CSSPropertyID::kAliasWebkitTransitionDelay:
      return mojom::blink::CSSSampleId::kAliasWebkitTransitionDelay;
    case CSSPropertyID::kAliasWebkitTransitionDuration:
      return mojom::blink::CSSSampleId::kAliasWebkitTransitionDuration;
    case CSSPropertyID::kAliasWebkitTransitionProperty:
      return mojom::blink::CSSSampleId::kAliasWebkitTransitionProperty;
    case CSSPropertyID::kAliasWebkitTransitionTimingFunction:
      return mojom::blink::CSSSampleId::kAliasWebkitTransitionTimingFunction;
    case CSSPropertyID::kAliasWebkitUserSelect:
      return mojom::blink::CSSSampleId::kAliasWebkitUserSelect;
    case CSSPropertyID::kAliasWordWrap:
      return mojom::blink::CSSSampleId::kAliasWordWrap;

    case CSSPropertyID::kVariable:
      return mojom::blink::CSSSampleId::kVariable;

    case CSSPropertyID::kInvalid:
      return mojom::blink::CSSSampleId::kInvalid;

    // IMPORTANT: Do not add a default case to ensure a compile error if we have
    // a mismatch.
  }

  NOTREACHED();
}

int ResolveCSSPropertyAlias(int value) {
  static constexpr uint16_t kLookupTable[] = {
    51,
    50,
    89,
    90,
    91,
    92,
    93,
    94,
    73,
    74,
    75,
    70,
    71,
    72,
    232,
    233,
    230,
    229,
    290,
    291,
    288,
    287,
    184,
    69,
    252,
    250,
    247,
    245,
    472,
    473,
    481,
    482,
    115,
    445,
    538,
    377,
    379,
    28,
    385,
    460,
    29,
    34,
    35,
    36,
    465,
    41,
    42,
    43,
    44,
    45,
    46,
    47,
    49,
    55,
    58,
    61,
    66,
    77,
    78,
    486,
    104,
    105,
    109,
    110,
    119,
    125,
    127,
    492,
    128,
    129,
    130,
    131,
    132,
    493,
    158,
    496,
    159,
    160,
    497,
    161,
    162,
    163,
    5,
    216,
    265,
    266,
    299,
    300,
    341,
    342,
    343,
    538,
    377,
    378,
    379,
    384,
    393,
    395,
    396,
    540,
    397,
    398,
    399,
    400,
    404,
    278,
  };
  return kLookupTable[value - 549];
}

}  // namespace blink
