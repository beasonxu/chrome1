// content/public/common/resource_usage_reporter.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CONTENT_PUBLIC_COMMON_RESOURCE_USAGE_REPORTER_MOJOM_PARAMS_DATA_H_
#define CONTENT_PUBLIC_COMMON_RESOURCE_USAGE_REPORTER_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace content {
namespace mojom {
namespace internal {

class ValidationContext;
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) ResourceUsageReporter_GetUsageData_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<ResourceUsageReporter_GetUsageData_Params_Data>;

  ResourceUsageReporter_GetUsageData_Params_Data();
  ~ResourceUsageReporter_GetUsageData_Params_Data() = delete;
};
static_assert(sizeof(ResourceUsageReporter_GetUsageData_Params_Data) == 8,
              "Bad sizeof(ResourceUsageReporter_GetUsageData_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) ResourceUsageReporter_GetUsageData_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::ResourceUsageData_Data> data;

 private:
  friend class mojo::internal::MessageFragment<ResourceUsageReporter_GetUsageData_ResponseParams_Data>;

  ResourceUsageReporter_GetUsageData_ResponseParams_Data();
  ~ResourceUsageReporter_GetUsageData_ResponseParams_Data() = delete;
};
static_assert(sizeof(ResourceUsageReporter_GetUsageData_ResponseParams_Data) == 16,
              "Bad sizeof(ResourceUsageReporter_GetUsageData_ResponseParams_Data)");

}  // namespace internal


class ResourceUsageReporter_GetUsageData_ParamsDataView {
 public:
  ResourceUsageReporter_GetUsageData_ParamsDataView() = default;

  ResourceUsageReporter_GetUsageData_ParamsDataView(
      internal::ResourceUsageReporter_GetUsageData_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ResourceUsageReporter_GetUsageData_Params_Data* data_ = nullptr;
};



class ResourceUsageReporter_GetUsageData_ResponseParamsDataView {
 public:
  ResourceUsageReporter_GetUsageData_ResponseParamsDataView() = default;

  ResourceUsageReporter_GetUsageData_ResponseParamsDataView(
      internal::ResourceUsageReporter_GetUsageData_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetDataDataView(
      ResourceUsageDataDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadData(UserType* output) {
    
    auto* pointer = data_->data.Get();
    return mojo::internal::Deserialize<::content::mojom::ResourceUsageDataDataView>(
        pointer, output, message_);
  }
 private:
  internal::ResourceUsageReporter_GetUsageData_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};




inline void ResourceUsageReporter_GetUsageData_ResponseParamsDataView::GetDataDataView(
    ResourceUsageDataDataView* output) {
  auto pointer = data_->data.Get();
  *output = ResourceUsageDataDataView(pointer, message_);
}

}  // namespace mojom
}  // namespace content

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // CONTENT_PUBLIC_COMMON_RESOURCE_USAGE_REPORTER_MOJOM_PARAMS_DATA_H_