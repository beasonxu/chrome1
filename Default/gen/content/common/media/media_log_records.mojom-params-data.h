// content/common/media/media_log_records.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CONTENT_COMMON_MEDIA_MEDIA_LOG_RECORDS_MOJOM_PARAMS_DATA_H_
#define CONTENT_COMMON_MEDIA_MEDIA_LOG_RECORDS_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace content {
namespace mojom {
namespace internal {

class ValidationContext;
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) MediaInternalLogRecords_Log_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<::media::mojom::internal::MediaLogRecord_Data>>> events;

 private:
  friend class mojo::internal::MessageFragment<MediaInternalLogRecords_Log_Params_Data>;

  MediaInternalLogRecords_Log_Params_Data();
  ~MediaInternalLogRecords_Log_Params_Data() = delete;
};
static_assert(sizeof(MediaInternalLogRecords_Log_Params_Data) == 16,
              "Bad sizeof(MediaInternalLogRecords_Log_Params_Data)");

}  // namespace internal


class MediaInternalLogRecords_Log_ParamsDataView {
 public:
  MediaInternalLogRecords_Log_ParamsDataView() = default;

  MediaInternalLogRecords_Log_ParamsDataView(
      internal::MediaInternalLogRecords_Log_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetEventsDataView(
      mojo::ArrayDataView<::media::mojom::MediaLogRecordDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadEvents(UserType* output) {
    
    auto* pointer = data_->events.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::media::mojom::MediaLogRecordDataView>>(
        pointer, output, message_);
  }
 private:
  internal::MediaInternalLogRecords_Log_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};


inline void MediaInternalLogRecords_Log_ParamsDataView::GetEventsDataView(
    mojo::ArrayDataView<::media::mojom::MediaLogRecordDataView>* output) {
  auto pointer = data_->events.Get();
  *output = mojo::ArrayDataView<::media::mojom::MediaLogRecordDataView>(pointer, message_);
}

}  // namespace mojom
}  // namespace content

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // CONTENT_COMMON_MEDIA_MEDIA_LOG_RECORDS_MOJOM_PARAMS_DATA_H_