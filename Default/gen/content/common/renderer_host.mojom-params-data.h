// content/common/renderer_host.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CONTENT_COMMON_RENDERER_HOST_MOJOM_PARAMS_DATA_H_
#define CONTENT_COMMON_RENDERER_HOST_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace content {
namespace mojom {
namespace internal {

class ValidationContext;
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) RendererHost_GetBrowserHistogram_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> name;

 private:
  friend class mojo::internal::MessageFragment<RendererHost_GetBrowserHistogram_Params_Data>;

  RendererHost_GetBrowserHistogram_Params_Data();
  ~RendererHost_GetBrowserHistogram_Params_Data() = delete;
};
static_assert(sizeof(RendererHost_GetBrowserHistogram_Params_Data) == 16,
              "Bad sizeof(RendererHost_GetBrowserHistogram_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) RendererHost_GetBrowserHistogram_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> histogram_json;

 private:
  friend class mojo::internal::MessageFragment<RendererHost_GetBrowserHistogram_ResponseParams_Data>;

  RendererHost_GetBrowserHistogram_ResponseParams_Data();
  ~RendererHost_GetBrowserHistogram_ResponseParams_Data() = delete;
};
static_assert(sizeof(RendererHost_GetBrowserHistogram_ResponseParams_Data) == 16,
              "Bad sizeof(RendererHost_GetBrowserHistogram_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) RendererHost_SuddenTerminationChanged_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t enabled : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<RendererHost_SuddenTerminationChanged_Params_Data>;

  RendererHost_SuddenTerminationChanged_Params_Data();
  ~RendererHost_SuddenTerminationChanged_Params_Data() = delete;
};
static_assert(sizeof(RendererHost_SuddenTerminationChanged_Params_Data) == 16,
              "Bad sizeof(RendererHost_SuddenTerminationChanged_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) RendererHost_RecordUserMetricsAction_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> action;

 private:
  friend class mojo::internal::MessageFragment<RendererHost_RecordUserMetricsAction_Params_Data>;

  RendererHost_RecordUserMetricsAction_Params_Data();
  ~RendererHost_RecordUserMetricsAction_Params_Data() = delete;
};
static_assert(sizeof(RendererHost_RecordUserMetricsAction_Params_Data) == 16,
              "Bad sizeof(RendererHost_RecordUserMetricsAction_Params_Data)");

}  // namespace internal


class RendererHost_GetBrowserHistogram_ParamsDataView {
 public:
  RendererHost_GetBrowserHistogram_ParamsDataView() = default;

  RendererHost_GetBrowserHistogram_ParamsDataView(
      internal::RendererHost_GetBrowserHistogram_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetNameDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadName(UserType* output) {
    
    auto* pointer = data_->name.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::RendererHost_GetBrowserHistogram_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class RendererHost_GetBrowserHistogram_ResponseParamsDataView {
 public:
  RendererHost_GetBrowserHistogram_ResponseParamsDataView() = default;

  RendererHost_GetBrowserHistogram_ResponseParamsDataView(
      internal::RendererHost_GetBrowserHistogram_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetHistogramJsonDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadHistogramJson(UserType* output) {
    
    auto* pointer = data_->histogram_json.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::RendererHost_GetBrowserHistogram_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class RendererHost_SuddenTerminationChanged_ParamsDataView {
 public:
  RendererHost_SuddenTerminationChanged_ParamsDataView() = default;

  RendererHost_SuddenTerminationChanged_ParamsDataView(
      internal::RendererHost_SuddenTerminationChanged_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool enabled() const {
    return data_->enabled;
  }
 private:
  internal::RendererHost_SuddenTerminationChanged_Params_Data* data_ = nullptr;
};



class RendererHost_RecordUserMetricsAction_ParamsDataView {
 public:
  RendererHost_RecordUserMetricsAction_ParamsDataView() = default;

  RendererHost_RecordUserMetricsAction_ParamsDataView(
      internal::RendererHost_RecordUserMetricsAction_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetActionDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAction(UserType* output) {
    
    auto* pointer = data_->action.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::RendererHost_RecordUserMetricsAction_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};


inline void RendererHost_GetBrowserHistogram_ParamsDataView::GetNameDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->name.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void RendererHost_GetBrowserHistogram_ResponseParamsDataView::GetHistogramJsonDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->histogram_json.Get();
  *output = mojo::StringDataView(pointer, message_);
}




inline void RendererHost_RecordUserMetricsAction_ParamsDataView::GetActionDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->action.Get();
  *output = mojo::StringDataView(pointer, message_);
}

}  // namespace mojom
}  // namespace content

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // CONTENT_COMMON_RENDERER_HOST_MOJOM_PARAMS_DATA_H_