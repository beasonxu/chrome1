// content/common/shared_storage_worklet_service.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CONTENT_COMMON_SHARED_STORAGE_WORKLET_SERVICE_MOJOM_PARAMS_DATA_H_
#define CONTENT_COMMON_SHARED_STORAGE_WORKLET_SERVICE_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace shared_storage_worklet {
namespace mojom {
namespace internal {

class ValidationContext;
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SharedStorageWorkletServiceClient_SharedStorageSet_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::blink::mojom::internal::SharedStorageKeyArgument_Data> key;
  mojo::internal::Pointer<::blink::mojom::internal::SharedStorageValueArgument_Data> value;
  uint8_t ignore_if_present : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<SharedStorageWorkletServiceClient_SharedStorageSet_Params_Data>;

  SharedStorageWorkletServiceClient_SharedStorageSet_Params_Data();
  ~SharedStorageWorkletServiceClient_SharedStorageSet_Params_Data() = delete;
};
static_assert(sizeof(SharedStorageWorkletServiceClient_SharedStorageSet_Params_Data) == 32,
              "Bad sizeof(SharedStorageWorkletServiceClient_SharedStorageSet_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SharedStorageWorkletServiceClient_SharedStorageSet_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t success : 1;
  uint8_t pad0_[7];
  mojo::internal::Pointer<mojo::internal::String_Data> error_message;

 private:
  friend class mojo::internal::MessageFragment<SharedStorageWorkletServiceClient_SharedStorageSet_ResponseParams_Data>;

  SharedStorageWorkletServiceClient_SharedStorageSet_ResponseParams_Data();
  ~SharedStorageWorkletServiceClient_SharedStorageSet_ResponseParams_Data() = delete;
};
static_assert(sizeof(SharedStorageWorkletServiceClient_SharedStorageSet_ResponseParams_Data) == 24,
              "Bad sizeof(SharedStorageWorkletServiceClient_SharedStorageSet_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SharedStorageWorkletServiceClient_SharedStorageAppend_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::blink::mojom::internal::SharedStorageKeyArgument_Data> key;
  mojo::internal::Pointer<::blink::mojom::internal::SharedStorageValueArgument_Data> value;

 private:
  friend class mojo::internal::MessageFragment<SharedStorageWorkletServiceClient_SharedStorageAppend_Params_Data>;

  SharedStorageWorkletServiceClient_SharedStorageAppend_Params_Data();
  ~SharedStorageWorkletServiceClient_SharedStorageAppend_Params_Data() = delete;
};
static_assert(sizeof(SharedStorageWorkletServiceClient_SharedStorageAppend_Params_Data) == 24,
              "Bad sizeof(SharedStorageWorkletServiceClient_SharedStorageAppend_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SharedStorageWorkletServiceClient_SharedStorageAppend_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t success : 1;
  uint8_t pad0_[7];
  mojo::internal::Pointer<mojo::internal::String_Data> error_message;

 private:
  friend class mojo::internal::MessageFragment<SharedStorageWorkletServiceClient_SharedStorageAppend_ResponseParams_Data>;

  SharedStorageWorkletServiceClient_SharedStorageAppend_ResponseParams_Data();
  ~SharedStorageWorkletServiceClient_SharedStorageAppend_ResponseParams_Data() = delete;
};
static_assert(sizeof(SharedStorageWorkletServiceClient_SharedStorageAppend_ResponseParams_Data) == 24,
              "Bad sizeof(SharedStorageWorkletServiceClient_SharedStorageAppend_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SharedStorageWorkletServiceClient_SharedStorageDelete_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::blink::mojom::internal::SharedStorageKeyArgument_Data> key;

 private:
  friend class mojo::internal::MessageFragment<SharedStorageWorkletServiceClient_SharedStorageDelete_Params_Data>;

  SharedStorageWorkletServiceClient_SharedStorageDelete_Params_Data();
  ~SharedStorageWorkletServiceClient_SharedStorageDelete_Params_Data() = delete;
};
static_assert(sizeof(SharedStorageWorkletServiceClient_SharedStorageDelete_Params_Data) == 16,
              "Bad sizeof(SharedStorageWorkletServiceClient_SharedStorageDelete_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SharedStorageWorkletServiceClient_SharedStorageDelete_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t success : 1;
  uint8_t pad0_[7];
  mojo::internal::Pointer<mojo::internal::String_Data> error_message;

 private:
  friend class mojo::internal::MessageFragment<SharedStorageWorkletServiceClient_SharedStorageDelete_ResponseParams_Data>;

  SharedStorageWorkletServiceClient_SharedStorageDelete_ResponseParams_Data();
  ~SharedStorageWorkletServiceClient_SharedStorageDelete_ResponseParams_Data() = delete;
};
static_assert(sizeof(SharedStorageWorkletServiceClient_SharedStorageDelete_ResponseParams_Data) == 24,
              "Bad sizeof(SharedStorageWorkletServiceClient_SharedStorageDelete_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SharedStorageWorkletServiceClient_SharedStorageClear_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<SharedStorageWorkletServiceClient_SharedStorageClear_Params_Data>;

  SharedStorageWorkletServiceClient_SharedStorageClear_Params_Data();
  ~SharedStorageWorkletServiceClient_SharedStorageClear_Params_Data() = delete;
};
static_assert(sizeof(SharedStorageWorkletServiceClient_SharedStorageClear_Params_Data) == 8,
              "Bad sizeof(SharedStorageWorkletServiceClient_SharedStorageClear_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SharedStorageWorkletServiceClient_SharedStorageClear_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t success : 1;
  uint8_t pad0_[7];
  mojo::internal::Pointer<mojo::internal::String_Data> error_message;

 private:
  friend class mojo::internal::MessageFragment<SharedStorageWorkletServiceClient_SharedStorageClear_ResponseParams_Data>;

  SharedStorageWorkletServiceClient_SharedStorageClear_ResponseParams_Data();
  ~SharedStorageWorkletServiceClient_SharedStorageClear_ResponseParams_Data() = delete;
};
static_assert(sizeof(SharedStorageWorkletServiceClient_SharedStorageClear_ResponseParams_Data) == 24,
              "Bad sizeof(SharedStorageWorkletServiceClient_SharedStorageClear_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SharedStorageWorkletServiceClient_SharedStorageGet_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::blink::mojom::internal::SharedStorageKeyArgument_Data> key;

 private:
  friend class mojo::internal::MessageFragment<SharedStorageWorkletServiceClient_SharedStorageGet_Params_Data>;

  SharedStorageWorkletServiceClient_SharedStorageGet_Params_Data();
  ~SharedStorageWorkletServiceClient_SharedStorageGet_Params_Data() = delete;
};
static_assert(sizeof(SharedStorageWorkletServiceClient_SharedStorageGet_Params_Data) == 16,
              "Bad sizeof(SharedStorageWorkletServiceClient_SharedStorageGet_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SharedStorageWorkletServiceClient_SharedStorageGet_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::String_Data> error_message;
  mojo::internal::Pointer<::mojo_base::mojom::internal::String16_Data> value;

 private:
  friend class mojo::internal::MessageFragment<SharedStorageWorkletServiceClient_SharedStorageGet_ResponseParams_Data>;

  SharedStorageWorkletServiceClient_SharedStorageGet_ResponseParams_Data();
  ~SharedStorageWorkletServiceClient_SharedStorageGet_ResponseParams_Data() = delete;
};
static_assert(sizeof(SharedStorageWorkletServiceClient_SharedStorageGet_ResponseParams_Data) == 32,
              "Bad sizeof(SharedStorageWorkletServiceClient_SharedStorageGet_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SharedStorageWorkletServiceClient_SharedStorageKeys_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Interface_Data listener;

 private:
  friend class mojo::internal::MessageFragment<SharedStorageWorkletServiceClient_SharedStorageKeys_Params_Data>;

  SharedStorageWorkletServiceClient_SharedStorageKeys_Params_Data();
  ~SharedStorageWorkletServiceClient_SharedStorageKeys_Params_Data() = delete;
};
static_assert(sizeof(SharedStorageWorkletServiceClient_SharedStorageKeys_Params_Data) == 16,
              "Bad sizeof(SharedStorageWorkletServiceClient_SharedStorageKeys_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SharedStorageWorkletServiceClient_SharedStorageEntries_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Interface_Data listener;

 private:
  friend class mojo::internal::MessageFragment<SharedStorageWorkletServiceClient_SharedStorageEntries_Params_Data>;

  SharedStorageWorkletServiceClient_SharedStorageEntries_Params_Data();
  ~SharedStorageWorkletServiceClient_SharedStorageEntries_Params_Data() = delete;
};
static_assert(sizeof(SharedStorageWorkletServiceClient_SharedStorageEntries_Params_Data) == 16,
              "Bad sizeof(SharedStorageWorkletServiceClient_SharedStorageEntries_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SharedStorageWorkletServiceClient_SharedStorageLength_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<SharedStorageWorkletServiceClient_SharedStorageLength_Params_Data>;

  SharedStorageWorkletServiceClient_SharedStorageLength_Params_Data();
  ~SharedStorageWorkletServiceClient_SharedStorageLength_Params_Data() = delete;
};
static_assert(sizeof(SharedStorageWorkletServiceClient_SharedStorageLength_Params_Data) == 8,
              "Bad sizeof(SharedStorageWorkletServiceClient_SharedStorageLength_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SharedStorageWorkletServiceClient_SharedStorageLength_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t success : 1;
  uint8_t pad0_[3];
  uint32_t length;
  mojo::internal::Pointer<mojo::internal::String_Data> error_message;

 private:
  friend class mojo::internal::MessageFragment<SharedStorageWorkletServiceClient_SharedStorageLength_ResponseParams_Data>;

  SharedStorageWorkletServiceClient_SharedStorageLength_ResponseParams_Data();
  ~SharedStorageWorkletServiceClient_SharedStorageLength_ResponseParams_Data() = delete;
};
static_assert(sizeof(SharedStorageWorkletServiceClient_SharedStorageLength_ResponseParams_Data) == 24,
              "Bad sizeof(SharedStorageWorkletServiceClient_SharedStorageLength_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SharedStorageWorkletServiceClient_ConsoleLog_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> message;

 private:
  friend class mojo::internal::MessageFragment<SharedStorageWorkletServiceClient_ConsoleLog_Params_Data>;

  SharedStorageWorkletServiceClient_ConsoleLog_Params_Data();
  ~SharedStorageWorkletServiceClient_ConsoleLog_Params_Data() = delete;
};
static_assert(sizeof(SharedStorageWorkletServiceClient_ConsoleLog_Params_Data) == 16,
              "Bad sizeof(SharedStorageWorkletServiceClient_ConsoleLog_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SharedStorageWorkletService_BindSharedStorageWorkletServiceClient_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::AssociatedInterface_Data client;

 private:
  friend class mojo::internal::MessageFragment<SharedStorageWorkletService_BindSharedStorageWorkletServiceClient_Params_Data>;

  SharedStorageWorkletService_BindSharedStorageWorkletServiceClient_Params_Data();
  ~SharedStorageWorkletService_BindSharedStorageWorkletServiceClient_Params_Data() = delete;
};
static_assert(sizeof(SharedStorageWorkletService_BindSharedStorageWorkletServiceClient_Params_Data) == 16,
              "Bad sizeof(SharedStorageWorkletService_BindSharedStorageWorkletServiceClient_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SharedStorageWorkletService_AddModule_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Interface_Data url_loader_factory;
  mojo::internal::Pointer<::url::mojom::internal::Url_Data> script_source_url;

 private:
  friend class mojo::internal::MessageFragment<SharedStorageWorkletService_AddModule_Params_Data>;

  SharedStorageWorkletService_AddModule_Params_Data();
  ~SharedStorageWorkletService_AddModule_Params_Data() = delete;
};
static_assert(sizeof(SharedStorageWorkletService_AddModule_Params_Data) == 24,
              "Bad sizeof(SharedStorageWorkletService_AddModule_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SharedStorageWorkletService_AddModule_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t success : 1;
  uint8_t pad0_[7];
  mojo::internal::Pointer<mojo::internal::String_Data> error_message;

 private:
  friend class mojo::internal::MessageFragment<SharedStorageWorkletService_AddModule_ResponseParams_Data>;

  SharedStorageWorkletService_AddModule_ResponseParams_Data();
  ~SharedStorageWorkletService_AddModule_ResponseParams_Data() = delete;
};
static_assert(sizeof(SharedStorageWorkletService_AddModule_ResponseParams_Data) == 24,
              "Bad sizeof(SharedStorageWorkletService_AddModule_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SharedStorageWorkletService_RunURLSelectionOperation_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> name;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<::url::mojom::internal::Url_Data>>> urls;
  mojo::internal::Pointer<mojo::internal::Array_Data<uint8_t>> serialized_data;

 private:
  friend class mojo::internal::MessageFragment<SharedStorageWorkletService_RunURLSelectionOperation_Params_Data>;

  SharedStorageWorkletService_RunURLSelectionOperation_Params_Data();
  ~SharedStorageWorkletService_RunURLSelectionOperation_Params_Data() = delete;
};
static_assert(sizeof(SharedStorageWorkletService_RunURLSelectionOperation_Params_Data) == 32,
              "Bad sizeof(SharedStorageWorkletService_RunURLSelectionOperation_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SharedStorageWorkletService_RunURLSelectionOperation_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t success : 1;
  uint8_t pad0_[3];
  uint32_t index;
  mojo::internal::Pointer<mojo::internal::String_Data> error_message;

 private:
  friend class mojo::internal::MessageFragment<SharedStorageWorkletService_RunURLSelectionOperation_ResponseParams_Data>;

  SharedStorageWorkletService_RunURLSelectionOperation_ResponseParams_Data();
  ~SharedStorageWorkletService_RunURLSelectionOperation_ResponseParams_Data() = delete;
};
static_assert(sizeof(SharedStorageWorkletService_RunURLSelectionOperation_ResponseParams_Data) == 24,
              "Bad sizeof(SharedStorageWorkletService_RunURLSelectionOperation_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SharedStorageWorkletService_RunOperation_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> name;
  mojo::internal::Pointer<mojo::internal::Array_Data<uint8_t>> serialized_data;

 private:
  friend class mojo::internal::MessageFragment<SharedStorageWorkletService_RunOperation_Params_Data>;

  SharedStorageWorkletService_RunOperation_Params_Data();
  ~SharedStorageWorkletService_RunOperation_Params_Data() = delete;
};
static_assert(sizeof(SharedStorageWorkletService_RunOperation_Params_Data) == 24,
              "Bad sizeof(SharedStorageWorkletService_RunOperation_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SharedStorageWorkletService_RunOperation_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t success : 1;
  uint8_t pad0_[7];
  mojo::internal::Pointer<mojo::internal::String_Data> error_message;

 private:
  friend class mojo::internal::MessageFragment<SharedStorageWorkletService_RunOperation_ResponseParams_Data>;

  SharedStorageWorkletService_RunOperation_ResponseParams_Data();
  ~SharedStorageWorkletService_RunOperation_ResponseParams_Data() = delete;
};
static_assert(sizeof(SharedStorageWorkletService_RunOperation_ResponseParams_Data) == 24,
              "Bad sizeof(SharedStorageWorkletService_RunOperation_ResponseParams_Data)");

}  // namespace internal


class SharedStorageWorkletServiceClient_SharedStorageSet_ParamsDataView {
 public:
  SharedStorageWorkletServiceClient_SharedStorageSet_ParamsDataView() = default;

  SharedStorageWorkletServiceClient_SharedStorageSet_ParamsDataView(
      internal::SharedStorageWorkletServiceClient_SharedStorageSet_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetKeyDataView(
      ::blink::mojom::SharedStorageKeyArgumentDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadKey(UserType* output) {
    
    auto* pointer = data_->key.Get();
    return mojo::internal::Deserialize<::blink::mojom::SharedStorageKeyArgumentDataView>(
        pointer, output, message_);
  }
  inline void GetValueDataView(
      ::blink::mojom::SharedStorageValueArgumentDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadValue(UserType* output) {
    
    auto* pointer = data_->value.Get();
    return mojo::internal::Deserialize<::blink::mojom::SharedStorageValueArgumentDataView>(
        pointer, output, message_);
  }
  bool ignore_if_present() const {
    return data_->ignore_if_present;
  }
 private:
  internal::SharedStorageWorkletServiceClient_SharedStorageSet_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SharedStorageWorkletServiceClient_SharedStorageSet_ResponseParamsDataView {
 public:
  SharedStorageWorkletServiceClient_SharedStorageSet_ResponseParamsDataView() = default;

  SharedStorageWorkletServiceClient_SharedStorageSet_ResponseParamsDataView(
      internal::SharedStorageWorkletServiceClient_SharedStorageSet_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  bool success() const {
    return data_->success;
  }
  inline void GetErrorMessageDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadErrorMessage(UserType* output) {
    
    auto* pointer = data_->error_message.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::SharedStorageWorkletServiceClient_SharedStorageSet_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SharedStorageWorkletServiceClient_SharedStorageAppend_ParamsDataView {
 public:
  SharedStorageWorkletServiceClient_SharedStorageAppend_ParamsDataView() = default;

  SharedStorageWorkletServiceClient_SharedStorageAppend_ParamsDataView(
      internal::SharedStorageWorkletServiceClient_SharedStorageAppend_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetKeyDataView(
      ::blink::mojom::SharedStorageKeyArgumentDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadKey(UserType* output) {
    
    auto* pointer = data_->key.Get();
    return mojo::internal::Deserialize<::blink::mojom::SharedStorageKeyArgumentDataView>(
        pointer, output, message_);
  }
  inline void GetValueDataView(
      ::blink::mojom::SharedStorageValueArgumentDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadValue(UserType* output) {
    
    auto* pointer = data_->value.Get();
    return mojo::internal::Deserialize<::blink::mojom::SharedStorageValueArgumentDataView>(
        pointer, output, message_);
  }
 private:
  internal::SharedStorageWorkletServiceClient_SharedStorageAppend_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SharedStorageWorkletServiceClient_SharedStorageAppend_ResponseParamsDataView {
 public:
  SharedStorageWorkletServiceClient_SharedStorageAppend_ResponseParamsDataView() = default;

  SharedStorageWorkletServiceClient_SharedStorageAppend_ResponseParamsDataView(
      internal::SharedStorageWorkletServiceClient_SharedStorageAppend_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  bool success() const {
    return data_->success;
  }
  inline void GetErrorMessageDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadErrorMessage(UserType* output) {
    
    auto* pointer = data_->error_message.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::SharedStorageWorkletServiceClient_SharedStorageAppend_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SharedStorageWorkletServiceClient_SharedStorageDelete_ParamsDataView {
 public:
  SharedStorageWorkletServiceClient_SharedStorageDelete_ParamsDataView() = default;

  SharedStorageWorkletServiceClient_SharedStorageDelete_ParamsDataView(
      internal::SharedStorageWorkletServiceClient_SharedStorageDelete_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetKeyDataView(
      ::blink::mojom::SharedStorageKeyArgumentDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadKey(UserType* output) {
    
    auto* pointer = data_->key.Get();
    return mojo::internal::Deserialize<::blink::mojom::SharedStorageKeyArgumentDataView>(
        pointer, output, message_);
  }
 private:
  internal::SharedStorageWorkletServiceClient_SharedStorageDelete_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SharedStorageWorkletServiceClient_SharedStorageDelete_ResponseParamsDataView {
 public:
  SharedStorageWorkletServiceClient_SharedStorageDelete_ResponseParamsDataView() = default;

  SharedStorageWorkletServiceClient_SharedStorageDelete_ResponseParamsDataView(
      internal::SharedStorageWorkletServiceClient_SharedStorageDelete_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  bool success() const {
    return data_->success;
  }
  inline void GetErrorMessageDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadErrorMessage(UserType* output) {
    
    auto* pointer = data_->error_message.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::SharedStorageWorkletServiceClient_SharedStorageDelete_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SharedStorageWorkletServiceClient_SharedStorageClear_ParamsDataView {
 public:
  SharedStorageWorkletServiceClient_SharedStorageClear_ParamsDataView() = default;

  SharedStorageWorkletServiceClient_SharedStorageClear_ParamsDataView(
      internal::SharedStorageWorkletServiceClient_SharedStorageClear_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::SharedStorageWorkletServiceClient_SharedStorageClear_Params_Data* data_ = nullptr;
};



class SharedStorageWorkletServiceClient_SharedStorageClear_ResponseParamsDataView {
 public:
  SharedStorageWorkletServiceClient_SharedStorageClear_ResponseParamsDataView() = default;

  SharedStorageWorkletServiceClient_SharedStorageClear_ResponseParamsDataView(
      internal::SharedStorageWorkletServiceClient_SharedStorageClear_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  bool success() const {
    return data_->success;
  }
  inline void GetErrorMessageDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadErrorMessage(UserType* output) {
    
    auto* pointer = data_->error_message.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::SharedStorageWorkletServiceClient_SharedStorageClear_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SharedStorageWorkletServiceClient_SharedStorageGet_ParamsDataView {
 public:
  SharedStorageWorkletServiceClient_SharedStorageGet_ParamsDataView() = default;

  SharedStorageWorkletServiceClient_SharedStorageGet_ParamsDataView(
      internal::SharedStorageWorkletServiceClient_SharedStorageGet_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetKeyDataView(
      ::blink::mojom::SharedStorageKeyArgumentDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadKey(UserType* output) {
    
    auto* pointer = data_->key.Get();
    return mojo::internal::Deserialize<::blink::mojom::SharedStorageKeyArgumentDataView>(
        pointer, output, message_);
  }
 private:
  internal::SharedStorageWorkletServiceClient_SharedStorageGet_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SharedStorageWorkletServiceClient_SharedStorageGet_ResponseParamsDataView {
 public:
  SharedStorageWorkletServiceClient_SharedStorageGet_ResponseParamsDataView() = default;

  SharedStorageWorkletServiceClient_SharedStorageGet_ResponseParamsDataView(
      internal::SharedStorageWorkletServiceClient_SharedStorageGet_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::shared_storage_worklet::mojom::SharedStorageGetStatus>(
        data_value, output);
  }
  SharedStorageGetStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::shared_storage_worklet::mojom::SharedStorageGetStatus>(data_->status));
  }
  inline void GetErrorMessageDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadErrorMessage(UserType* output) {
    
    auto* pointer = data_->error_message.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  inline void GetValueDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadValue(UserType* output) {
    
    auto* pointer = data_->value.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, message_);
  }
 private:
  internal::SharedStorageWorkletServiceClient_SharedStorageGet_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SharedStorageWorkletServiceClient_SharedStorageKeys_ParamsDataView {
 public:
  SharedStorageWorkletServiceClient_SharedStorageKeys_ParamsDataView() = default;

  SharedStorageWorkletServiceClient_SharedStorageKeys_ParamsDataView(
      internal::SharedStorageWorkletServiceClient_SharedStorageKeys_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeListener() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfacePtrDataView<::shared_storage_worklet::mojom::SharedStorageEntriesListenerInterfaceBase>>(
            &data_->listener, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::SharedStorageWorkletServiceClient_SharedStorageKeys_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SharedStorageWorkletServiceClient_SharedStorageEntries_ParamsDataView {
 public:
  SharedStorageWorkletServiceClient_SharedStorageEntries_ParamsDataView() = default;

  SharedStorageWorkletServiceClient_SharedStorageEntries_ParamsDataView(
      internal::SharedStorageWorkletServiceClient_SharedStorageEntries_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeListener() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfacePtrDataView<::shared_storage_worklet::mojom::SharedStorageEntriesListenerInterfaceBase>>(
            &data_->listener, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::SharedStorageWorkletServiceClient_SharedStorageEntries_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SharedStorageWorkletServiceClient_SharedStorageLength_ParamsDataView {
 public:
  SharedStorageWorkletServiceClient_SharedStorageLength_ParamsDataView() = default;

  SharedStorageWorkletServiceClient_SharedStorageLength_ParamsDataView(
      internal::SharedStorageWorkletServiceClient_SharedStorageLength_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::SharedStorageWorkletServiceClient_SharedStorageLength_Params_Data* data_ = nullptr;
};



class SharedStorageWorkletServiceClient_SharedStorageLength_ResponseParamsDataView {
 public:
  SharedStorageWorkletServiceClient_SharedStorageLength_ResponseParamsDataView() = default;

  SharedStorageWorkletServiceClient_SharedStorageLength_ResponseParamsDataView(
      internal::SharedStorageWorkletServiceClient_SharedStorageLength_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  bool success() const {
    return data_->success;
  }
  inline void GetErrorMessageDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadErrorMessage(UserType* output) {
    
    auto* pointer = data_->error_message.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  uint32_t length() const {
    return data_->length;
  }
 private:
  internal::SharedStorageWorkletServiceClient_SharedStorageLength_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SharedStorageWorkletServiceClient_ConsoleLog_ParamsDataView {
 public:
  SharedStorageWorkletServiceClient_ConsoleLog_ParamsDataView() = default;

  SharedStorageWorkletServiceClient_ConsoleLog_ParamsDataView(
      internal::SharedStorageWorkletServiceClient_ConsoleLog_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetMessageDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadMessage(UserType* output) {
    
    auto* pointer = data_->message.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::SharedStorageWorkletServiceClient_ConsoleLog_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SharedStorageWorkletService_BindSharedStorageWorkletServiceClient_ParamsDataView {
 public:
  SharedStorageWorkletService_BindSharedStorageWorkletServiceClient_ParamsDataView() = default;

  SharedStorageWorkletService_BindSharedStorageWorkletServiceClient_ParamsDataView(
      internal::SharedStorageWorkletService_BindSharedStorageWorkletServiceClient_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeClient() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<::shared_storage_worklet::mojom::SharedStorageWorkletServiceClientAssociatedPtrInfoDataView>(
            &data_->client, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::SharedStorageWorkletService_BindSharedStorageWorkletServiceClient_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SharedStorageWorkletService_AddModule_ParamsDataView {
 public:
  SharedStorageWorkletService_AddModule_ParamsDataView() = default;

  SharedStorageWorkletService_AddModule_ParamsDataView(
      internal::SharedStorageWorkletService_AddModule_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeUrlLoaderFactory() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfacePtrDataView<::network::mojom::URLLoaderFactoryInterfaceBase>>(
            &data_->url_loader_factory, &result, message_);
    DCHECK(ret);
    return result;
  }
  inline void GetScriptSourceUrlDataView(
      ::url::mojom::UrlDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadScriptSourceUrl(UserType* output) {
    
    auto* pointer = data_->script_source_url.Get();
    return mojo::internal::Deserialize<::url::mojom::UrlDataView>(
        pointer, output, message_);
  }
 private:
  internal::SharedStorageWorkletService_AddModule_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SharedStorageWorkletService_AddModule_ResponseParamsDataView {
 public:
  SharedStorageWorkletService_AddModule_ResponseParamsDataView() = default;

  SharedStorageWorkletService_AddModule_ResponseParamsDataView(
      internal::SharedStorageWorkletService_AddModule_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  bool success() const {
    return data_->success;
  }
  inline void GetErrorMessageDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadErrorMessage(UserType* output) {
    
    auto* pointer = data_->error_message.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::SharedStorageWorkletService_AddModule_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SharedStorageWorkletService_RunURLSelectionOperation_ParamsDataView {
 public:
  SharedStorageWorkletService_RunURLSelectionOperation_ParamsDataView() = default;

  SharedStorageWorkletService_RunURLSelectionOperation_ParamsDataView(
      internal::SharedStorageWorkletService_RunURLSelectionOperation_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetNameDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadName(UserType* output) {
    
    auto* pointer = data_->name.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  inline void GetUrlsDataView(
      mojo::ArrayDataView<::url::mojom::UrlDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadUrls(UserType* output) {
    
    auto* pointer = data_->urls.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::url::mojom::UrlDataView>>(
        pointer, output, message_);
  }
  inline void GetSerializedDataDataView(
      mojo::ArrayDataView<uint8_t>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadSerializedData(UserType* output) {
    
    auto* pointer = data_->serialized_data.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<uint8_t>>(
        pointer, output, message_);
  }
 private:
  internal::SharedStorageWorkletService_RunURLSelectionOperation_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SharedStorageWorkletService_RunURLSelectionOperation_ResponseParamsDataView {
 public:
  SharedStorageWorkletService_RunURLSelectionOperation_ResponseParamsDataView() = default;

  SharedStorageWorkletService_RunURLSelectionOperation_ResponseParamsDataView(
      internal::SharedStorageWorkletService_RunURLSelectionOperation_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  bool success() const {
    return data_->success;
  }
  inline void GetErrorMessageDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadErrorMessage(UserType* output) {
    
    auto* pointer = data_->error_message.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  uint32_t index() const {
    return data_->index;
  }
 private:
  internal::SharedStorageWorkletService_RunURLSelectionOperation_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SharedStorageWorkletService_RunOperation_ParamsDataView {
 public:
  SharedStorageWorkletService_RunOperation_ParamsDataView() = default;

  SharedStorageWorkletService_RunOperation_ParamsDataView(
      internal::SharedStorageWorkletService_RunOperation_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetNameDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadName(UserType* output) {
    
    auto* pointer = data_->name.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  inline void GetSerializedDataDataView(
      mojo::ArrayDataView<uint8_t>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadSerializedData(UserType* output) {
    
    auto* pointer = data_->serialized_data.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<uint8_t>>(
        pointer, output, message_);
  }
 private:
  internal::SharedStorageWorkletService_RunOperation_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SharedStorageWorkletService_RunOperation_ResponseParamsDataView {
 public:
  SharedStorageWorkletService_RunOperation_ResponseParamsDataView() = default;

  SharedStorageWorkletService_RunOperation_ResponseParamsDataView(
      internal::SharedStorageWorkletService_RunOperation_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  bool success() const {
    return data_->success;
  }
  inline void GetErrorMessageDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadErrorMessage(UserType* output) {
    
    auto* pointer = data_->error_message.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::SharedStorageWorkletService_RunOperation_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};


inline void SharedStorageWorkletServiceClient_SharedStorageSet_ParamsDataView::GetKeyDataView(
    ::blink::mojom::SharedStorageKeyArgumentDataView* output) {
  auto pointer = data_->key.Get();
  *output = ::blink::mojom::SharedStorageKeyArgumentDataView(pointer, message_);
}
inline void SharedStorageWorkletServiceClient_SharedStorageSet_ParamsDataView::GetValueDataView(
    ::blink::mojom::SharedStorageValueArgumentDataView* output) {
  auto pointer = data_->value.Get();
  *output = ::blink::mojom::SharedStorageValueArgumentDataView(pointer, message_);
}


inline void SharedStorageWorkletServiceClient_SharedStorageSet_ResponseParamsDataView::GetErrorMessageDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->error_message.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void SharedStorageWorkletServiceClient_SharedStorageAppend_ParamsDataView::GetKeyDataView(
    ::blink::mojom::SharedStorageKeyArgumentDataView* output) {
  auto pointer = data_->key.Get();
  *output = ::blink::mojom::SharedStorageKeyArgumentDataView(pointer, message_);
}
inline void SharedStorageWorkletServiceClient_SharedStorageAppend_ParamsDataView::GetValueDataView(
    ::blink::mojom::SharedStorageValueArgumentDataView* output) {
  auto pointer = data_->value.Get();
  *output = ::blink::mojom::SharedStorageValueArgumentDataView(pointer, message_);
}


inline void SharedStorageWorkletServiceClient_SharedStorageAppend_ResponseParamsDataView::GetErrorMessageDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->error_message.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void SharedStorageWorkletServiceClient_SharedStorageDelete_ParamsDataView::GetKeyDataView(
    ::blink::mojom::SharedStorageKeyArgumentDataView* output) {
  auto pointer = data_->key.Get();
  *output = ::blink::mojom::SharedStorageKeyArgumentDataView(pointer, message_);
}


inline void SharedStorageWorkletServiceClient_SharedStorageDelete_ResponseParamsDataView::GetErrorMessageDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->error_message.Get();
  *output = mojo::StringDataView(pointer, message_);
}




inline void SharedStorageWorkletServiceClient_SharedStorageClear_ResponseParamsDataView::GetErrorMessageDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->error_message.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void SharedStorageWorkletServiceClient_SharedStorageGet_ParamsDataView::GetKeyDataView(
    ::blink::mojom::SharedStorageKeyArgumentDataView* output) {
  auto pointer = data_->key.Get();
  *output = ::blink::mojom::SharedStorageKeyArgumentDataView(pointer, message_);
}


inline void SharedStorageWorkletServiceClient_SharedStorageGet_ResponseParamsDataView::GetErrorMessageDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->error_message.Get();
  *output = mojo::StringDataView(pointer, message_);
}
inline void SharedStorageWorkletServiceClient_SharedStorageGet_ResponseParamsDataView::GetValueDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->value.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, message_);
}








inline void SharedStorageWorkletServiceClient_SharedStorageLength_ResponseParamsDataView::GetErrorMessageDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->error_message.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void SharedStorageWorkletServiceClient_ConsoleLog_ParamsDataView::GetMessageDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->message.Get();
  *output = mojo::StringDataView(pointer, message_);
}




inline void SharedStorageWorkletService_AddModule_ParamsDataView::GetScriptSourceUrlDataView(
    ::url::mojom::UrlDataView* output) {
  auto pointer = data_->script_source_url.Get();
  *output = ::url::mojom::UrlDataView(pointer, message_);
}


inline void SharedStorageWorkletService_AddModule_ResponseParamsDataView::GetErrorMessageDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->error_message.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void SharedStorageWorkletService_RunURLSelectionOperation_ParamsDataView::GetNameDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->name.Get();
  *output = mojo::StringDataView(pointer, message_);
}
inline void SharedStorageWorkletService_RunURLSelectionOperation_ParamsDataView::GetUrlsDataView(
    mojo::ArrayDataView<::url::mojom::UrlDataView>* output) {
  auto pointer = data_->urls.Get();
  *output = mojo::ArrayDataView<::url::mojom::UrlDataView>(pointer, message_);
}
inline void SharedStorageWorkletService_RunURLSelectionOperation_ParamsDataView::GetSerializedDataDataView(
    mojo::ArrayDataView<uint8_t>* output) {
  auto pointer = data_->serialized_data.Get();
  *output = mojo::ArrayDataView<uint8_t>(pointer, message_);
}


inline void SharedStorageWorkletService_RunURLSelectionOperation_ResponseParamsDataView::GetErrorMessageDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->error_message.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void SharedStorageWorkletService_RunOperation_ParamsDataView::GetNameDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->name.Get();
  *output = mojo::StringDataView(pointer, message_);
}
inline void SharedStorageWorkletService_RunOperation_ParamsDataView::GetSerializedDataDataView(
    mojo::ArrayDataView<uint8_t>* output) {
  auto pointer = data_->serialized_data.Get();
  *output = mojo::ArrayDataView<uint8_t>(pointer, message_);
}


inline void SharedStorageWorkletService_RunOperation_ResponseParamsDataView::GetErrorMessageDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->error_message.Get();
  *output = mojo::StringDataView(pointer, message_);
}

}  // namespace mojom
}  // namespace shared_storage_worklet

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // CONTENT_COMMON_SHARED_STORAGE_WORKLET_SERVICE_MOJOM_PARAMS_DATA_H_