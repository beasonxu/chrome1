// content/common/download/mhtml_file_writer.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CONTENT_COMMON_DOWNLOAD_MHTML_FILE_WRITER_MOJOM_PARAMS_DATA_H_
#define CONTENT_COMMON_DOWNLOAD_MHTML_FILE_WRITER_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace content {
namespace mojom {
namespace internal {

class ValidationContext;
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) MhtmlFileWriter_SerializeAsMHTML_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::SerializeAsMHTMLParams_Data> params;

 private:
  friend class mojo::internal::MessageFragment<MhtmlFileWriter_SerializeAsMHTML_Params_Data>;

  MhtmlFileWriter_SerializeAsMHTML_Params_Data();
  ~MhtmlFileWriter_SerializeAsMHTML_Params_Data() = delete;
};
static_assert(sizeof(MhtmlFileWriter_SerializeAsMHTML_Params_Data) == 16,
              "Bad sizeof(MhtmlFileWriter_SerializeAsMHTML_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) MhtmlFileWriter_SerializeAsMHTML_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<mojo::internal::String_Data>>> digests_of_uris_to_skip;
  mojo::internal::Pointer<::mojo_base::mojom::internal::TimeDelta_Data> renderer_main_thread_time;

 private:
  friend class mojo::internal::MessageFragment<MhtmlFileWriter_SerializeAsMHTML_ResponseParams_Data>;

  MhtmlFileWriter_SerializeAsMHTML_ResponseParams_Data();
  ~MhtmlFileWriter_SerializeAsMHTML_ResponseParams_Data() = delete;
};
static_assert(sizeof(MhtmlFileWriter_SerializeAsMHTML_ResponseParams_Data) == 32,
              "Bad sizeof(MhtmlFileWriter_SerializeAsMHTML_ResponseParams_Data)");

}  // namespace internal


class MhtmlFileWriter_SerializeAsMHTML_ParamsDataView {
 public:
  MhtmlFileWriter_SerializeAsMHTML_ParamsDataView() = default;

  MhtmlFileWriter_SerializeAsMHTML_ParamsDataView(
      internal::MhtmlFileWriter_SerializeAsMHTML_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetParamsDataView(
      SerializeAsMHTMLParamsDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadParams(UserType* output) {
    
    auto* pointer = data_->params.Get();
    return mojo::internal::Deserialize<::content::mojom::SerializeAsMHTMLParamsDataView>(
        pointer, output, message_);
  }
 private:
  internal::MhtmlFileWriter_SerializeAsMHTML_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class MhtmlFileWriter_SerializeAsMHTML_ResponseParamsDataView {
 public:
  MhtmlFileWriter_SerializeAsMHTML_ResponseParamsDataView() = default;

  MhtmlFileWriter_SerializeAsMHTML_ResponseParamsDataView(
      internal::MhtmlFileWriter_SerializeAsMHTML_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::content::mojom::MhtmlSaveStatus>(
        data_value, output);
  }
  MhtmlSaveStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::content::mojom::MhtmlSaveStatus>(data_->status));
  }
  inline void GetDigestsOfUrisToSkipDataView(
      mojo::ArrayDataView<mojo::StringDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadDigestsOfUrisToSkip(UserType* output) {
    
    auto* pointer = data_->digests_of_uris_to_skip.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<mojo::StringDataView>>(
        pointer, output, message_);
  }
  inline void GetRendererMainThreadTimeDataView(
      ::mojo_base::mojom::TimeDeltaDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadRendererMainThreadTime(UserType* output) {
    
    auto* pointer = data_->renderer_main_thread_time.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::TimeDeltaDataView>(
        pointer, output, message_);
  }
 private:
  internal::MhtmlFileWriter_SerializeAsMHTML_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};


inline void MhtmlFileWriter_SerializeAsMHTML_ParamsDataView::GetParamsDataView(
    SerializeAsMHTMLParamsDataView* output) {
  auto pointer = data_->params.Get();
  *output = SerializeAsMHTMLParamsDataView(pointer, message_);
}


inline void MhtmlFileWriter_SerializeAsMHTML_ResponseParamsDataView::GetDigestsOfUrisToSkipDataView(
    mojo::ArrayDataView<mojo::StringDataView>* output) {
  auto pointer = data_->digests_of_uris_to_skip.Get();
  *output = mojo::ArrayDataView<mojo::StringDataView>(pointer, message_);
}
inline void MhtmlFileWriter_SerializeAsMHTML_ResponseParamsDataView::GetRendererMainThreadTimeDataView(
    ::mojo_base::mojom::TimeDeltaDataView* output) {
  auto pointer = data_->renderer_main_thread_time.Get();
  *output = ::mojo_base::mojom::TimeDeltaDataView(pointer, message_);
}

}  // namespace mojom
}  // namespace content

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // CONTENT_COMMON_DOWNLOAD_MHTML_FILE_WRITER_MOJOM_PARAMS_DATA_H_