// content/browser/preloading/prerender/prerender_internals.mojom-lite.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';


mojo.internal.exportModule('content.mojom');








/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
content.mojom.PrerenderInternalsHandlerPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        content.mojom.PrerenderInternalsHandler.$interfaceName,
        scope);
  }
};



/**
 * @export
 * @implements { content.mojom.PrerenderInternalsHandlerInterface }
 */
content.mojom.PrerenderInternalsHandlerRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!content.mojom.PrerenderInternalsHandlerPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          content.mojom.PrerenderInternalsHandlerPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!content.mojom.PrerenderInternalsHandlerPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @return {!Promise<{
        infos: !Array<!content.mojom.PrerenderInfo>,
   *  }>}
   */

  getPrerenderInfo() {
    return this.proxy.sendMessage(
        0,
        content.mojom.PrerenderInternalsHandler_GetPrerenderInfo_ParamsSpec.$,
        content.mojom.PrerenderInternalsHandler_GetPrerenderInfo_ResponseParamsSpec.$,
        [
        ]);
  }
};

/**
 * An object which receives request messages for the PrerenderInternalsHandler
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
content.mojom.PrerenderInternalsHandlerReceiver = class {
  /**
   * @param {!content.mojom.PrerenderInternalsHandlerInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!content.mojom.PrerenderInternalsHandlerRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        content.mojom.PrerenderInternalsHandlerRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!content.mojom.PrerenderInternalsHandlerRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        content.mojom.PrerenderInternalsHandler_GetPrerenderInfo_ParamsSpec.$,
        content.mojom.PrerenderInternalsHandler_GetPrerenderInfo_ResponseParamsSpec.$,
        impl.getPrerenderInfo.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
content.mojom.PrerenderInternalsHandler = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "content.mojom.PrerenderInternalsHandler";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!content.mojom.PrerenderInternalsHandlerRemote}
   * @export
   */
  static getRemote() {
    let remote = new content.mojom.PrerenderInternalsHandlerRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the PrerenderInternalsHandler
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
content.mojom.PrerenderInternalsHandlerCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      content.mojom.PrerenderInternalsHandlerRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!content.mojom.PrerenderInternalsHandlerRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getPrerenderInfo =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        content.mojom.PrerenderInternalsHandler_GetPrerenderInfo_ParamsSpec.$,
        content.mojom.PrerenderInternalsHandler_GetPrerenderInfo_ResponseParamsSpec.$,
        this.getPrerenderInfo.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};



/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
content.mojom.PrerenderedPageInfoSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
content.mojom.PrerenderInfoSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
content.mojom.PrerenderInternalsHandler_GetPrerenderInfo_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
content.mojom.PrerenderInternalsHandler_GetPrerenderInfo_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    content.mojom.PrerenderedPageInfoSpec.$,
    'PrerenderedPageInfo',
    [
      mojo.internal.StructField(
        'url', 0,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'triggerPageUrl', 8,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'finalStatus', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ],
    [[0, 32],]);





/** @record */
content.mojom.PrerenderedPageInfo = class {
  constructor() {
    /** @export { !url.mojom.Url } */
    this.url;
    /** @export { !url.mojom.Url } */
    this.triggerPageUrl;
    /** @export { !string } */
    this.finalStatus;
  }
};




mojo.internal.Struct(
    content.mojom.PrerenderInfoSpec.$,
    'PrerenderInfo',
    [
      mojo.internal.StructField(
        'prerenderedPageInfos', 0,
        0,
        mojo.internal.Array(content.mojom.PrerenderedPageInfoSpec.$, false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
content.mojom.PrerenderInfo = class {
  constructor() {
    /** @export { !Array<!content.mojom.PrerenderedPageInfo> } */
    this.prerenderedPageInfos;
  }
};




mojo.internal.Struct(
    content.mojom.PrerenderInternalsHandler_GetPrerenderInfo_ParamsSpec.$,
    'PrerenderInternalsHandler_GetPrerenderInfo_Params',
    [
    ],
    [[0, 8],]);





/** @record */
content.mojom.PrerenderInternalsHandler_GetPrerenderInfo_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    content.mojom.PrerenderInternalsHandler_GetPrerenderInfo_ResponseParamsSpec.$,
    'PrerenderInternalsHandler_GetPrerenderInfo_ResponseParams',
    [
      mojo.internal.StructField(
        'infos', 0,
        0,
        mojo.internal.Array(content.mojom.PrerenderInfoSpec.$, false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
content.mojom.PrerenderInternalsHandler_GetPrerenderInfo_ResponseParams = class {
  constructor() {
    /** @export { !Array<!content.mojom.PrerenderInfo> } */
    this.infos;
  }
};


