// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/base/jank_tracker/JankMetricUMARecorder

#ifndef org_chromium_base_jank_tracker_JankMetricUMARecorder_JNI
#define org_chromium_base_jank_tracker_JankMetricUMARecorder_JNI

#include <jni.h>

#include "../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace base {
namespace android {

static void JNI_JankMetricUMARecorder_RecordJankMetrics(JNIEnv* env, const
    base::android::JavaParamRef<jstring>& scenarioName,
    const base::android::JavaParamRef<jlongArray>& timestampsNs,
    const base::android::JavaParamRef<jlongArray>& durationsNs,
    const base::android::JavaParamRef<jlongArray>& jankBurstsNs,
    jint missedFrames);

JNI_GENERATOR_EXPORT void Java_J_N_MJ46uzUz(
    JNIEnv* env,
    jclass jcaller,
    jstring scenarioName,
    jlongArray timestampsNs,
    jlongArray durationsNs,
    jlongArray jankBurstsNs,
    jint missedFrames) {
  return JNI_JankMetricUMARecorder_RecordJankMetrics(env, base::android::JavaParamRef<jstring>(env,
      scenarioName), base::android::JavaParamRef<jlongArray>(env, timestampsNs),
      base::android::JavaParamRef<jlongArray>(env, durationsNs),
      base::android::JavaParamRef<jlongArray>(env, jankBurstsNs), missedFrames);
}


}  // namespace android
}  // namespace base

#endif  // org_chromium_base_jank_tracker_JankMetricUMARecorder_JNI
