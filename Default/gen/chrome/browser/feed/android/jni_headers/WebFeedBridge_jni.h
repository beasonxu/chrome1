// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/feed/webfeed/WebFeedBridge

#ifndef org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_JNI
#define org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge[];
const char kClassPath_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge[] =
    "org/chromium/chrome/browser/feed/webfeed/WebFeedBridge";

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedMetadata[];
const char kClassPath_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedMetadata[]
    = "org/chromium/chrome/browser/feed/webfeed/WebFeedBridge$WebFeedMetadata";

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024FollowResults[];
const char kClassPath_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024FollowResults[] =
    "org/chromium/chrome/browser/feed/webfeed/WebFeedBridge$FollowResults";

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024UnfollowResults[];
const char kClassPath_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024UnfollowResults[]
    = "org/chromium/chrome/browser/feed/webfeed/WebFeedBridge$UnfollowResults";

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedPageInformation[];
const char
    kClassPath_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedPageInformation[]
    = "org/chromium/chrome/browser/feed/webfeed/WebFeedBridge$WebFeedPageInformation";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_clazz(nullptr);
#ifndef org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_clazz_defined
#define org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_clazz_defined
inline jclass org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge,
      &g_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_clazz);
}
#endif
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedMetadata_clazz(nullptr);
#ifndef org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedMetadata_clazz_defined
#define org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedMetadata_clazz_defined
inline jclass
    org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedMetadata_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedMetadata,
      &g_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedMetadata_clazz);
}
#endif
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024FollowResults_clazz(nullptr);
#ifndef org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024FollowResults_clazz_defined
#define org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024FollowResults_clazz_defined
inline jclass
    org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024FollowResults_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024FollowResults,
      &g_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024FollowResults_clazz);
}
#endif
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024UnfollowResults_clazz(nullptr);
#ifndef org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024UnfollowResults_clazz_defined
#define org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024UnfollowResults_clazz_defined
inline jclass
    org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024UnfollowResults_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024UnfollowResults,
      &g_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024UnfollowResults_clazz);
}
#endif
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedPageInformation_clazz(nullptr);
#ifndef org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedPageInformation_clazz_defined
#define org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedPageInformation_clazz_defined
inline jclass
    org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedPageInformation_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedPageInformation,
      &g_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedPageInformation_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace feed {

static void JNI_WebFeedBridge_FollowWebFeed(JNIEnv* env, const base::android::JavaParamRef<jobject>&
    pageInfo,
    jint webFeedChangeReason,
    const base::android::JavaParamRef<jobject>& callback);

JNI_GENERATOR_EXPORT void Java_J_N_MztsaYnr(
    JNIEnv* env,
    jclass jcaller,
    jobject pageInfo,
    jint webFeedChangeReason,
    jobject callback) {
  return JNI_WebFeedBridge_FollowWebFeed(env, base::android::JavaParamRef<jobject>(env, pageInfo),
      webFeedChangeReason, base::android::JavaParamRef<jobject>(env, callback));
}

static void JNI_WebFeedBridge_FollowWebFeedById(JNIEnv* env, const
    base::android::JavaParamRef<jbyteArray>& webFeedId,
    jboolean isDurable,
    jint webFeedChangeReason,
    const base::android::JavaParamRef<jobject>& callback);

JNI_GENERATOR_EXPORT void Java_J_N_MtL148iF(
    JNIEnv* env,
    jclass jcaller,
    jbyteArray webFeedId,
    jboolean isDurable,
    jint webFeedChangeReason,
    jobject callback) {
  return JNI_WebFeedBridge_FollowWebFeedById(env, base::android::JavaParamRef<jbyteArray>(env,
      webFeedId), isDurable, webFeedChangeReason, base::android::JavaParamRef<jobject>(env,
      callback));
}

static void JNI_WebFeedBridge_UnfollowWebFeed(JNIEnv* env, const
    base::android::JavaParamRef<jbyteArray>& webFeedId,
    jboolean isDurable,
    jint webFeedChangeReason,
    const base::android::JavaParamRef<jobject>& callback);

JNI_GENERATOR_EXPORT void Java_J_N_MVWVyQhp(
    JNIEnv* env,
    jclass jcaller,
    jbyteArray webFeedId,
    jboolean isDurable,
    jint webFeedChangeReason,
    jobject callback) {
  return JNI_WebFeedBridge_UnfollowWebFeed(env, base::android::JavaParamRef<jbyteArray>(env,
      webFeedId), isDurable, webFeedChangeReason, base::android::JavaParamRef<jobject>(env,
      callback));
}

static void JNI_WebFeedBridge_FindWebFeedInfoForPage(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& pageInfo,
    jint reason,
    const base::android::JavaParamRef<jobject>& callback);

JNI_GENERATOR_EXPORT void Java_J_N_MSWj76M1(
    JNIEnv* env,
    jclass jcaller,
    jobject pageInfo,
    jint reason,
    jobject callback) {
  return JNI_WebFeedBridge_FindWebFeedInfoForPage(env, base::android::JavaParamRef<jobject>(env,
      pageInfo), reason, base::android::JavaParamRef<jobject>(env, callback));
}

static void JNI_WebFeedBridge_FindWebFeedInfoForWebFeedId(JNIEnv* env, const
    base::android::JavaParamRef<jbyteArray>& webFeedId,
    const base::android::JavaParamRef<jobject>& callback);

JNI_GENERATOR_EXPORT void Java_J_N_MHvYsLrH(
    JNIEnv* env,
    jclass jcaller,
    jbyteArray webFeedId,
    jobject callback) {
  return JNI_WebFeedBridge_FindWebFeedInfoForWebFeedId(env,
      base::android::JavaParamRef<jbyteArray>(env, webFeedId),
      base::android::JavaParamRef<jobject>(env, callback));
}

static void JNI_WebFeedBridge_GetAllSubscriptions(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& callback);

JNI_GENERATOR_EXPORT void Java_J_N_M0KK_00024hz_1(
    JNIEnv* env,
    jclass jcaller,
    jobject callback) {
  return JNI_WebFeedBridge_GetAllSubscriptions(env, base::android::JavaParamRef<jobject>(env,
      callback));
}

static void JNI_WebFeedBridge_RefreshSubscriptions(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& callback);

JNI_GENERATOR_EXPORT void Java_J_N_MKcAcTO8(
    JNIEnv* env,
    jclass jcaller,
    jobject callback) {
  return JNI_WebFeedBridge_RefreshSubscriptions(env, base::android::JavaParamRef<jobject>(env,
      callback));
}

static void JNI_WebFeedBridge_RefreshRecommendedFeeds(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& callback);

JNI_GENERATOR_EXPORT void Java_J_N_M_1U5s0It(
    JNIEnv* env,
    jclass jcaller,
    jobject callback) {
  return JNI_WebFeedBridge_RefreshRecommendedFeeds(env, base::android::JavaParamRef<jobject>(env,
      callback));
}

static void JNI_WebFeedBridge_GetRecentVisitCountsToHost(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& url,
    const base::android::JavaParamRef<jobject>& callback);

JNI_GENERATOR_EXPORT void Java_J_N_Mtbhx3K5(
    JNIEnv* env,
    jclass jcaller,
    jobject url,
    jobject callback) {
  return JNI_WebFeedBridge_GetRecentVisitCountsToHost(env, base::android::JavaParamRef<jobject>(env,
      url), base::android::JavaParamRef<jobject>(env, callback));
}

static void JNI_WebFeedBridge_IncrementFollowedFromWebPageMenuCount(JNIEnv* env);

JNI_GENERATOR_EXPORT void Java_J_N_M5eUUffx(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_WebFeedBridge_IncrementFollowedFromWebPageMenuCount(env);
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedMetadata_Constructor(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_WebFeedMetadata_Constructor(JNIEnv* env,
    const base::android::JavaRef<jbyteArray>& id,
    const base::android::JavaRef<jstring>& title,
    const base::android::JavaRef<jobject>& visitUrl,
    JniIntWrapper subscriptionStatus,
    JniIntWrapper availabilityStatus,
    jboolean isRecommended,
    const base::android::JavaRef<jobject>& faviconUrl) {
  jclass clazz =
      org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedMetadata_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedMetadata_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "<init>",
          "([BLjava/lang/String;Lorg/chromium/url/GURL;IIZLorg/chromium/url/GURL;)V",
&g_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedMetadata_Constructor);

  jobject ret =
      env->NewObject(clazz,
          call_context.base.method_id, id.obj(), title.obj(), visitUrl.obj(),
              as_jint(subscriptionStatus), as_jint(availabilityStatus), isRecommended,
              faviconUrl.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024FollowResults_Constructor(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_FollowResults_Constructor(JNIEnv* env,
    JniIntWrapper requestStatus,
    const base::android::JavaRef<jobject>& metadata) {
  jclass clazz =
      org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024FollowResults_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024FollowResults_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "<init>",
          "(ILorg/chromium/chrome/browser/feed/webfeed/WebFeedBridge$WebFeedMetadata;)V",
          &g_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024FollowResults_Constructor);

  jobject ret =
      env->NewObject(clazz,
          call_context.base.method_id, as_jint(requestStatus), metadata.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024UnfollowResults_Constructor(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_UnfollowResults_Constructor(JNIEnv* env,
    JniIntWrapper requestStatus) {
  jclass clazz =
      org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024UnfollowResults_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024UnfollowResults_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "<init>",
          "(I)V",
&g_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024UnfollowResults_Constructor);

  jobject ret =
      env->NewObject(clazz,
          call_context.base.method_id, as_jint(requestStatus));
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedPageInformation_getUrl(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_WebFeedPageInformation_getUrl(JNIEnv* env,
    const base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedPageInformation_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedPageInformation_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getUrl",
          "()Lorg/chromium/url/GURL;",
&g_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedPageInformation_getUrl);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedPageInformation_getTab(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_WebFeedPageInformation_getTab(JNIEnv* env,
    const base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedPageInformation_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedPageInformation_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getTab",
          "()Lorg/chromium/chrome/browser/tab/Tab;",
&g_org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_00024WebFeedPageInformation_getTab);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

}  // namespace feed

#endif  // org_chromium_chrome_browser_feed_webfeed_WebFeedBridge_JNI
