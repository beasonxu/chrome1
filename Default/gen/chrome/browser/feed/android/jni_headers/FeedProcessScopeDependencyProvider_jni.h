// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/feed/FeedProcessScopeDependencyProvider

#ifndef org_chromium_chrome_browser_feed_FeedProcessScopeDependencyProvider_JNI
#define org_chromium_chrome_browser_feed_FeedProcessScopeDependencyProvider_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace feed {
namespace android {

static base::android::ScopedJavaLocalRef<jintArray>
    JNI_FeedProcessScopeDependencyProvider_GetExperimentIds(JNIEnv* env);

JNI_GENERATOR_EXPORT jintArray Java_J_N_MSnK4vdU(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_FeedProcessScopeDependencyProvider_GetExperimentIds(env).Release();
}

static base::android::ScopedJavaLocalRef<jstring>
    JNI_FeedProcessScopeDependencyProvider_GetSessionId(JNIEnv* env);

JNI_GENERATOR_EXPORT jstring Java_J_N_MqGGOnGl(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_FeedProcessScopeDependencyProvider_GetSessionId(env).Release();
}

static void JNI_FeedProcessScopeDependencyProvider_ProcessViewAction(JNIEnv* env, const
    base::android::JavaParamRef<jbyteArray>& actionData,
    const base::android::JavaParamRef<jbyteArray>& loggingParameters);

JNI_GENERATOR_EXPORT void Java_J_N_MuiUmzf8(
    JNIEnv* env,
    jclass jcaller,
    jbyteArray actionData,
    jbyteArray loggingParameters) {
  return JNI_FeedProcessScopeDependencyProvider_ProcessViewAction(env,
      base::android::JavaParamRef<jbyteArray>(env, actionData),
      base::android::JavaParamRef<jbyteArray>(env, loggingParameters));
}


}  // namespace android
}  // namespace feed

#endif  // org_chromium_chrome_browser_feed_FeedProcessScopeDependencyProvider_JNI
