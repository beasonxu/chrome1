// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/browserservices/verification/OriginVerifier

#ifndef org_chromium_chrome_browser_browserservices_verification_OriginVerifier_JNI
#define org_chromium_chrome_browser_browserservices_verification_OriginVerifier_JNI

#include <jni.h>

#include "../../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_browserservices_verification_OriginVerifier[];
const char kClassPath_org_chromium_chrome_browser_browserservices_verification_OriginVerifier[] =
    "org/chromium/chrome/browser/browserservices/verification/OriginVerifier";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_browserservices_verification_OriginVerifier_clazz(nullptr);
#ifndef org_chromium_chrome_browser_browserservices_verification_OriginVerifier_clazz_defined
#define org_chromium_chrome_browser_browserservices_verification_OriginVerifier_clazz_defined
inline jclass org_chromium_chrome_browser_browserservices_verification_OriginVerifier_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_browserservices_verification_OriginVerifier,
      &g_org_chromium_chrome_browser_browserservices_verification_OriginVerifier_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace customtabs {

static jlong JNI_OriginVerifier_Init(JNIEnv* env, const base::android::JavaParamRef<jobject>&
    caller,
    const base::android::JavaParamRef<jobject>& webContents,
    const base::android::JavaParamRef<jobject>& profile);

JNI_GENERATOR_EXPORT jlong Java_J_N_MU6MPmtZ(
    JNIEnv* env,
    jclass jcaller,
    jobject caller,
    jobject webContents,
    jobject profile) {
  return JNI_OriginVerifier_Init(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jobject>(env, webContents),
      base::android::JavaParamRef<jobject>(env, profile));
}

JNI_GENERATOR_EXPORT jboolean Java_J_N_MLdZEyYK(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeOriginVerifier,
    jobject caller,
    jstring packageName,
    jstring signatureFingerprint,
    jstring origin,
    jstring relationship) {
  OriginVerifier* native = reinterpret_cast<OriginVerifier*>(nativeOriginVerifier);
  CHECK_NATIVE_PTR(env, jcaller, native, "VerifyOrigin", false);
  return native->VerifyOrigin(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, packageName),
      base::android::JavaParamRef<jstring>(env, signatureFingerprint),
      base::android::JavaParamRef<jstring>(env, origin), base::android::JavaParamRef<jstring>(env,
      relationship));
}

JNI_GENERATOR_EXPORT void Java_J_N_MSfT_17mi(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeOriginVerifier,
    jobject caller) {
  OriginVerifier* native = reinterpret_cast<OriginVerifier*>(nativeOriginVerifier);
  CHECK_NATIVE_PTR(env, jcaller, native, "Destroy");
  return native->Destroy(env, base::android::JavaParamRef<jobject>(env, caller));
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_browserservices_verification_OriginVerifier_onOriginVerificationResult(nullptr);
static void Java_OriginVerifier_onOriginVerificationResult(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& originAsString,
    JniIntWrapper result) {
  jclass clazz = org_chromium_chrome_browser_browserservices_verification_OriginVerifier_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_browserservices_verification_OriginVerifier_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onOriginVerificationResult",
          "(Ljava/lang/String;I)V",
&g_org_chromium_chrome_browser_browserservices_verification_OriginVerifier_onOriginVerificationResult);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, originAsString.obj(), as_jint(result));
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_browserservices_verification_OriginVerifier_clearBrowsingData(nullptr);
static void Java_OriginVerifier_clearBrowsingData(JNIEnv* env) {
  jclass clazz = org_chromium_chrome_browser_browserservices_verification_OriginVerifier_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_browserservices_verification_OriginVerifier_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "clearBrowsingData",
          "()V",
&g_org_chromium_chrome_browser_browserservices_verification_OriginVerifier_clearBrowsingData);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id);
}

}  // namespace customtabs

#endif  // org_chromium_chrome_browser_browserservices_verification_OriginVerifier_JNI
