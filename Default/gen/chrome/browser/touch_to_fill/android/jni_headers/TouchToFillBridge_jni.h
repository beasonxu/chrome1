// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/touch_to_fill/TouchToFillBridge

#ifndef org_chromium_chrome_browser_touch_to_fill_TouchToFillBridge_JNI
#define org_chromium_chrome_browser_touch_to_fill_TouchToFillBridge_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge[];
const char kClassPath_org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge[] =
    "org/chromium/chrome/browser/touch_to_fill/TouchToFillBridge";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_clazz(nullptr);
#ifndef org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_clazz_defined
#define org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_clazz_defined
inline jclass org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge,
      &g_org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
JNI_GENERATOR_EXPORT void Java_J_N_MW5teN_1W(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeTouchToFillViewImpl,
    jobject credential) {
  TouchToFillViewImpl* native = reinterpret_cast<TouchToFillViewImpl*>(nativeTouchToFillViewImpl);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnCredentialSelected");
  return native->OnCredentialSelected(env, base::android::JavaParamRef<jobject>(env, credential));
}

JNI_GENERATOR_EXPORT void Java_J_N_M98beDi1(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeTouchToFillViewImpl,
    jobject credential) {
  TouchToFillViewImpl* native = reinterpret_cast<TouchToFillViewImpl*>(nativeTouchToFillViewImpl);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnWebAuthnCredentialSelected");
  return native->OnWebAuthnCredentialSelected(env, base::android::JavaParamRef<jobject>(env,
      credential));
}

JNI_GENERATOR_EXPORT void Java_J_N_MZxrSSig(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeTouchToFillViewImpl) {
  TouchToFillViewImpl* native = reinterpret_cast<TouchToFillViewImpl*>(nativeTouchToFillViewImpl);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnManagePasswordsSelected");
  return native->OnManagePasswordsSelected(env);
}

JNI_GENERATOR_EXPORT void Java_J_N_MO_00024_1q9pf(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeTouchToFillViewImpl) {
  TouchToFillViewImpl* native = reinterpret_cast<TouchToFillViewImpl*>(nativeTouchToFillViewImpl);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnDismiss");
  return native->OnDismiss(env);
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_create(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_TouchToFillBridge_create(JNIEnv* env, jlong
    nativeView,
    const base::android::JavaRef<jobject>& windowAndroid) {
  jclass clazz = org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "create",
"(JLorg/chromium/ui/base/WindowAndroid;)Lorg/chromium/chrome/browser/touch_to_fill/TouchToFillBridge;",
          &g_org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_create);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, nativeView, windowAndroid.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_destroy(nullptr);
static void Java_TouchToFillBridge_destroy(JNIEnv* env, const base::android::JavaRef<jobject>& obj)
    {
  jclass clazz = org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "destroy",
          "()V",
          &g_org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_destroy);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_createCredentialArray(nullptr);
static base::android::ScopedJavaLocalRef<jobjectArray>
    Java_TouchToFillBridge_createCredentialArray(JNIEnv* env, JniIntWrapper size) {
  jclass clazz = org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createCredentialArray",
          "(I)[Lorg/chromium/chrome/browser/touch_to_fill/data/Credential;",
          &g_org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_createCredentialArray);

  jobjectArray ret =
      static_cast<jobjectArray>(env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, as_jint(size)));
  return base::android::ScopedJavaLocalRef<jobjectArray>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_insertCredential(nullptr);
static void Java_TouchToFillBridge_insertCredential(JNIEnv* env, const
    base::android::JavaRef<jobjectArray>& credentials,
    JniIntWrapper index,
    const base::android::JavaRef<jstring>& username,
    const base::android::JavaRef<jstring>& password,
    const base::android::JavaRef<jstring>& formattedUsername,
    const base::android::JavaRef<jstring>& originUrl,
    jboolean isPublicSuffixMatch,
    jboolean isAffiliationBasedMatch,
    jlong lastUsedMsSinceEpoch) {
  jclass clazz = org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "insertCredential",
"([Lorg/chromium/chrome/browser/touch_to_fill/data/Credential;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZJ)V",
          &g_org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_insertCredential);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, credentials.obj(), as_jint(index), username.obj(),
              password.obj(), formattedUsername.obj(), originUrl.obj(), isPublicSuffixMatch,
              isAffiliationBasedMatch, lastUsedMsSinceEpoch);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_createWebAuthnCredentialArray(nullptr);
static base::android::ScopedJavaLocalRef<jobjectArray>
    Java_TouchToFillBridge_createWebAuthnCredentialArray(JNIEnv* env, JniIntWrapper size) {
  jclass clazz = org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createWebAuthnCredentialArray",
          "(I)[Lorg/chromium/chrome/browser/touch_to_fill/data/WebAuthnCredential;",
&g_org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_createWebAuthnCredentialArray);

  jobjectArray ret =
      static_cast<jobjectArray>(env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, as_jint(size)));
  return base::android::ScopedJavaLocalRef<jobjectArray>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_insertWebAuthnCredential(nullptr);
static void Java_TouchToFillBridge_insertWebAuthnCredential(JNIEnv* env, const
    base::android::JavaRef<jobjectArray>& credentials,
    JniIntWrapper index,
    const base::android::JavaRef<jstring>& username,
    const base::android::JavaRef<jstring>& displayName,
    const base::android::JavaRef<jstring>& id) {
  jclass clazz = org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "insertWebAuthnCredential",
"([Lorg/chromium/chrome/browser/touch_to_fill/data/WebAuthnCredential;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
&g_org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_insertWebAuthnCredential);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, credentials.obj(), as_jint(index), username.obj(),
              displayName.obj(), id.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_showCredentials(nullptr);
static void Java_TouchToFillBridge_showCredentials(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>& url,
    jboolean isOriginSecure,
    const base::android::JavaRef<jobjectArray>& credentials,
    const base::android::JavaRef<jobjectArray>& webAuthnCredentials,
    jboolean submitCredential) {
  jclass clazz = org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "showCredentials",
"(Lorg/chromium/url/GURL;Z[Lorg/chromium/chrome/browser/touch_to_fill/data/Credential;[Lorg/chromium/chrome/browser/touch_to_fill/data/WebAuthnCredential;Z)V",
          &g_org_chromium_chrome_browser_touch_1to_1fill_TouchToFillBridge_showCredentials);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, url.obj(), isOriginSecure, credentials.obj(),
              webAuthnCredentials.obj(), submitCredential);
}

#endif  // org_chromium_chrome_browser_touch_to_fill_TouchToFillBridge_JNI
