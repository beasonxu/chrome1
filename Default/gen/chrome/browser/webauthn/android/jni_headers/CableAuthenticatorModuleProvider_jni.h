// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/webauthn/CableAuthenticatorModuleProvider

#ifndef org_chromium_chrome_browser_webauthn_CableAuthenticatorModuleProvider_JNI
#define org_chromium_chrome_browser_webauthn_CableAuthenticatorModuleProvider_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_webauthn_CableAuthenticatorModuleProvider[];
const char kClassPath_org_chromium_chrome_browser_webauthn_CableAuthenticatorModuleProvider[] =
    "org/chromium/chrome/browser/webauthn/CableAuthenticatorModuleProvider";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_webauthn_CableAuthenticatorModuleProvider_clazz(nullptr);
#ifndef org_chromium_chrome_browser_webauthn_CableAuthenticatorModuleProvider_clazz_defined
#define org_chromium_chrome_browser_webauthn_CableAuthenticatorModuleProvider_clazz_defined
inline jclass org_chromium_chrome_browser_webauthn_CableAuthenticatorModuleProvider_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_webauthn_CableAuthenticatorModuleProvider,
      &g_org_chromium_chrome_browser_webauthn_CableAuthenticatorModuleProvider_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
static jlong JNI_CableAuthenticatorModuleProvider_GetSystemNetworkContext(JNIEnv* env);

JNI_GENERATOR_EXPORT jlong Java_J_N_MxK6FZrl(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_CableAuthenticatorModuleProvider_GetSystemNetworkContext(env);
}

static jlong JNI_CableAuthenticatorModuleProvider_GetRegistration(JNIEnv* env);

JNI_GENERATOR_EXPORT jlong Java_J_N_MX3WavKZ(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_CableAuthenticatorModuleProvider_GetRegistration(env);
}

static base::android::ScopedJavaLocalRef<jbyteArray>
    JNI_CableAuthenticatorModuleProvider_GetSecret(JNIEnv* env);

JNI_GENERATOR_EXPORT jbyteArray Java_J_N_MKEGJA07(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_CableAuthenticatorModuleProvider_GetSecret(env).Release();
}

static void JNI_CableAuthenticatorModuleProvider_FreeEvent(JNIEnv* env, jlong event);

JNI_GENERATOR_EXPORT void Java_J_N_M6bGbuGo(
    JNIEnv* env,
    jclass jcaller,
    jlong event) {
  return JNI_CableAuthenticatorModuleProvider_FreeEvent(env, event);
}

static jboolean JNI_CableAuthenticatorModuleProvider_IsMetricsAndCrashReportingEnabled(JNIEnv* env);

JNI_GENERATOR_EXPORT jboolean Java_J_N_M5DwFPD_1(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_CableAuthenticatorModuleProvider_IsMetricsAndCrashReportingEnabled(env);
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_webauthn_CableAuthenticatorModuleProvider_onCloudMessage(nullptr);
static void Java_CableAuthenticatorModuleProvider_onCloudMessage(JNIEnv* env, const
    base::android::JavaRef<jbyteArray>& serializedEvent,
    jboolean isMakeCredential) {
  jclass clazz = org_chromium_chrome_browser_webauthn_CableAuthenticatorModuleProvider_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_webauthn_CableAuthenticatorModuleProvider_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "onCloudMessage",
          "([BZ)V",
          &g_org_chromium_chrome_browser_webauthn_CableAuthenticatorModuleProvider_onCloudMessage);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, serializedEvent.obj(), isMakeCredential);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_webauthn_CableAuthenticatorModuleProvider_canDeviceSupportCable(nullptr);
static jboolean Java_CableAuthenticatorModuleProvider_canDeviceSupportCable(JNIEnv* env) {
  jclass clazz = org_chromium_chrome_browser_webauthn_CableAuthenticatorModuleProvider_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_webauthn_CableAuthenticatorModuleProvider_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "canDeviceSupportCable",
          "()Z",
&g_org_chromium_chrome_browser_webauthn_CableAuthenticatorModuleProvider_canDeviceSupportCable);

  jboolean ret =
      env->CallStaticBooleanMethod(clazz,
          call_context.base.method_id);
  return ret;
}

#endif  // org_chromium_chrome_browser_webauthn_CableAuthenticatorModuleProvider_JNI
