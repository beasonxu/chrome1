
// Copyright 2022 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     java_cpp_enum.py
// From
//     ../../chrome/browser/password_manager/android/chromesync_status_code.h

package org.chromium.chrome.browser.password_manager;

import androidx.annotation.IntDef;

import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;

@IntDef({
    ChromeSyncStatusCode.PASSPHRASE_REQUIRED, ChromeSyncStatusCode.WRONG_PASSPHRASE,
    ChromeSyncStatusCode.DATA_NOT_SUBSCRIBED, ChromeSyncStatusCode.TRANSACTION_TOO_LARGE,
    ChromeSyncStatusCode.ACCESS_DENIED, ChromeSyncStatusCode.AUTH_ERROR_RESOLVABLE,
    ChromeSyncStatusCode.AUTH_ERROR_UNRESOLVABLE, ChromeSyncStatusCode.LOCAL_ACCOUNT_NOT_SUPPORTED,
    ChromeSyncStatusCode.MAX_VALUE
})
@Retention(RetentionPolicy.SOURCE)
public @interface ChromeSyncStatusCode {
  /**
   * We need user to retrieve their passphrase in order to decrypt the data.
   */
  int PASSPHRASE_REQUIRED = 11000;
  /**
   * Happens when user enters the wrong custom passphrase.
   */
  int WRONG_PASSPHRASE = 11001;
  /**
   * Happens when trying to retrieve / modify the data that is not being subscribed by any
   * subscribers.
   */
  int DATA_NOT_SUBSCRIBED = 11002;
  /**
   * Happens when the execution of a ChromeSync service operation fails due to the request/response
   * data exceeding the binder size limit. Also see
   * https://developer.android.com/reference/android/os/TransactionTooLargeException
   */
  int TRANSACTION_TOO_LARGE = 11003;
  /**
   * Happens when the package of the calling application package name is not allowlisted via the
   * flag "first_party_api_allow_list".
   */
  int ACCESS_DENIED = 11004;
  /**
   * Happens when the account is not authenticated and the issue is resolvable by the user.
   */
  int AUTH_ERROR_RESOLVABLE = 11005;
  /**
   * Happens when the account is not authenticated, but the issue is not resolvable by the user.
   */
  int AUTH_ERROR_UNRESOLVABLE = 11006;
  /**
   * The 0P API has some operations that don't support local accounts. If they are called for local
   * accounts, this status code is provided.
   */
  int LOCAL_ACCOUNT_NOT_SUPPORTED = 11007;
  int MAX_VALUE = LOCAL_ACCOUNT_NOT_SUPPORTED;
}
