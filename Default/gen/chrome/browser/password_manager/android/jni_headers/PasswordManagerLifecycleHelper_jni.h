// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/password_manager/PasswordManagerLifecycleHelper

#ifndef org_chromium_chrome_browser_password_manager_PasswordManagerLifecycleHelper_JNI
#define org_chromium_chrome_browser_password_manager_PasswordManagerLifecycleHelper_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_password_1manager_PasswordManagerLifecycleHelper[];
const char kClassPath_org_chromium_chrome_browser_password_1manager_PasswordManagerLifecycleHelper[]
    = "org/chromium/chrome/browser/password_manager/PasswordManagerLifecycleHelper";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_password_1manager_PasswordManagerLifecycleHelper_clazz(nullptr);
#ifndef org_chromium_chrome_browser_password_1manager_PasswordManagerLifecycleHelper_clazz_defined
#define org_chromium_chrome_browser_password_1manager_PasswordManagerLifecycleHelper_clazz_defined
inline jclass
    org_chromium_chrome_browser_password_1manager_PasswordManagerLifecycleHelper_clazz(JNIEnv* env)
    {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_password_1manager_PasswordManagerLifecycleHelper,
      &g_org_chromium_chrome_browser_password_1manager_PasswordManagerLifecycleHelper_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
JNI_GENERATOR_EXPORT void Java_J_N_MmoiIbfp(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePasswordManagerLifecycleHelperImpl) {
  PasswordManagerLifecycleHelperImpl* native =
      reinterpret_cast<PasswordManagerLifecycleHelperImpl*>(nativePasswordManagerLifecycleHelperImpl);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnForegroundSessionStart");
  return native->OnForegroundSessionStart(env);
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1manager_PasswordManagerLifecycleHelper_getInstance(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_PasswordManagerLifecycleHelper_getInstance(JNIEnv* env) {
  jclass clazz =
      org_chromium_chrome_browser_password_1manager_PasswordManagerLifecycleHelper_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_password_1manager_PasswordManagerLifecycleHelper_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "getInstance",
          "()Lorg/chromium/chrome/browser/password_manager/PasswordManagerLifecycleHelper;",
&g_org_chromium_chrome_browser_password_1manager_PasswordManagerLifecycleHelper_getInstance);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1manager_PasswordManagerLifecycleHelper_registerObserver(nullptr);
static void Java_PasswordManagerLifecycleHelper_registerObserver(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, jlong nativePasswordManagerLifecycleHelper) {
  jclass clazz =
      org_chromium_chrome_browser_password_1manager_PasswordManagerLifecycleHelper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_password_1manager_PasswordManagerLifecycleHelper_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "registerObserver",
          "(J)V",
&g_org_chromium_chrome_browser_password_1manager_PasswordManagerLifecycleHelper_registerObserver);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, nativePasswordManagerLifecycleHelper);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1manager_PasswordManagerLifecycleHelper_unregisterObserver(nullptr);
static void Java_PasswordManagerLifecycleHelper_unregisterObserver(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, jlong nativePasswordManagerLifecycleHelper) {
  jclass clazz =
      org_chromium_chrome_browser_password_1manager_PasswordManagerLifecycleHelper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_password_1manager_PasswordManagerLifecycleHelper_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "unregisterObserver",
          "(J)V",
&g_org_chromium_chrome_browser_password_1manager_PasswordManagerLifecycleHelper_unregisterObserver);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, nativePasswordManagerLifecycleHelper);
}

#endif  // org_chromium_chrome_browser_password_manager_PasswordManagerLifecycleHelper_JNI
