// chrome/browser/ui/webui/bluetooth_internals/bluetooth_internals.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CHROME_BROWSER_UI_WEBUI_BLUETOOTH_INTERNALS_BLUETOOTH_INTERNALS_MOJOM_TEST_UTILS_H_
#define CHROME_BROWSER_UI_WEBUI_BLUETOOTH_INTERNALS_BLUETOOTH_INTERNALS_MOJOM_TEST_UTILS_H_

#include "chrome/browser/ui/webui/bluetooth_internals/bluetooth_internals.mojom.h"


namespace mojom {


class  DebugLogsChangeHandlerInterceptorForTesting : public DebugLogsChangeHandler {
  virtual DebugLogsChangeHandler* GetForwardingInterface() = 0;
  void ChangeDebugLogsState(bool should_debug_logs_be_enabled) override;
};
class  DebugLogsChangeHandlerAsyncWaiter {
 public:
  explicit DebugLogsChangeHandlerAsyncWaiter(DebugLogsChangeHandler* proxy);

  DebugLogsChangeHandlerAsyncWaiter(const DebugLogsChangeHandlerAsyncWaiter&) = delete;
  DebugLogsChangeHandlerAsyncWaiter& operator=(const DebugLogsChangeHandlerAsyncWaiter&) = delete;

  ~DebugLogsChangeHandlerAsyncWaiter();

 private:
  DebugLogsChangeHandler* const proxy_;
};


class  BluetoothInternalsHandlerInterceptorForTesting : public BluetoothInternalsHandler {
  virtual BluetoothInternalsHandler* GetForwardingInterface() = 0;
  void GetAdapter(GetAdapterCallback callback) override;
  void GetDebugLogsChangeHandler(GetDebugLogsChangeHandlerCallback callback) override;
};
class  BluetoothInternalsHandlerAsyncWaiter {
 public:
  explicit BluetoothInternalsHandlerAsyncWaiter(BluetoothInternalsHandler* proxy);

  BluetoothInternalsHandlerAsyncWaiter(const BluetoothInternalsHandlerAsyncWaiter&) = delete;
  BluetoothInternalsHandlerAsyncWaiter& operator=(const BluetoothInternalsHandlerAsyncWaiter&) = delete;

  ~BluetoothInternalsHandlerAsyncWaiter();
  void GetAdapter(
      ::mojo::PendingRemote<::bluetooth::mojom::Adapter>* out_adapter);
  void GetDebugLogsChangeHandler(
      ::mojo::PendingRemote<DebugLogsChangeHandler>* out_handler, bool* out_initial_toggle_value);

 private:
  BluetoothInternalsHandler* const proxy_;
};




}  // namespace mojom

#endif  // CHROME_BROWSER_UI_WEBUI_BLUETOOTH_INTERNALS_BLUETOOTH_INTERNALS_MOJOM_TEST_UTILS_H_