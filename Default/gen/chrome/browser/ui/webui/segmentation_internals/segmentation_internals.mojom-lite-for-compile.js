// chrome/browser/ui/webui/segmentation_internals/segmentation_internals.mojom-lite-for-compile.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';

goog.require('mojo.internal');
goog.require('mojo.internal.interfaceSupport');







goog.provide('segmentationInternals.mojom.PageHandlerFactory');
goog.provide('segmentationInternals.mojom.PageHandlerFactoryReceiver');
goog.provide('segmentationInternals.mojom.PageHandlerFactoryCallbackRouter');
goog.provide('segmentationInternals.mojom.PageHandlerFactoryInterface');
goog.provide('segmentationInternals.mojom.PageHandlerFactoryRemote');
goog.provide('segmentationInternals.mojom.PageHandlerFactoryPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
segmentationInternals.mojom.PageHandlerFactoryPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        segmentationInternals.mojom.PageHandlerFactory.$interfaceName,
        scope);
  }
};

/** @interface */
segmentationInternals.mojom.PageHandlerFactoryInterface = class {
  
  /**
   * @param { !segmentationInternals.mojom.PageRemote } page
   * @param { !segmentationInternals.mojom.PageHandlerPendingReceiver } handler
   */

  createPageHandler(page, handler) {}
};

/**
 * @export
 * @implements { segmentationInternals.mojom.PageHandlerFactoryInterface }
 */
segmentationInternals.mojom.PageHandlerFactoryRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!segmentationInternals.mojom.PageHandlerFactoryPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          segmentationInternals.mojom.PageHandlerFactoryPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!segmentationInternals.mojom.PageHandlerFactoryPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !segmentationInternals.mojom.PageRemote } page
   * @param { !segmentationInternals.mojom.PageHandlerPendingReceiver } handler
   */

  createPageHandler(
      page,
      handler) {
    this.proxy.sendMessage(
        0,
        segmentationInternals.mojom.PageHandlerFactory_CreatePageHandler_ParamsSpec.$,
        null,
        [
          page,
          handler
        ]);
  }
};

/**
 * An object which receives request messages for the PageHandlerFactory
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
segmentationInternals.mojom.PageHandlerFactoryReceiver = class {
  /**
   * @param {!segmentationInternals.mojom.PageHandlerFactoryInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!segmentationInternals.mojom.PageHandlerFactoryRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        segmentationInternals.mojom.PageHandlerFactoryRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!segmentationInternals.mojom.PageHandlerFactoryRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        segmentationInternals.mojom.PageHandlerFactory_CreatePageHandler_ParamsSpec.$,
        null,
        impl.createPageHandler.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
segmentationInternals.mojom.PageHandlerFactory = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "segmentation_internals.mojom.PageHandlerFactory";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!segmentationInternals.mojom.PageHandlerFactoryRemote}
   * @export
   */
  static getRemote() {
    let remote = new segmentationInternals.mojom.PageHandlerFactoryRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the PageHandlerFactory
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
segmentationInternals.mojom.PageHandlerFactoryCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      segmentationInternals.mojom.PageHandlerFactoryRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!segmentationInternals.mojom.PageHandlerFactoryRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createPageHandler =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        segmentationInternals.mojom.PageHandlerFactory_CreatePageHandler_ParamsSpec.$,
        null,
        this.createPageHandler.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('segmentationInternals.mojom.PageHandler');
goog.provide('segmentationInternals.mojom.PageHandlerReceiver');
goog.provide('segmentationInternals.mojom.PageHandlerCallbackRouter');
goog.provide('segmentationInternals.mojom.PageHandlerInterface');
goog.provide('segmentationInternals.mojom.PageHandlerRemote');
goog.provide('segmentationInternals.mojom.PageHandlerPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
segmentationInternals.mojom.PageHandlerPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        segmentationInternals.mojom.PageHandler.$interfaceName,
        scope);
  }
};

/** @interface */
segmentationInternals.mojom.PageHandlerInterface = class {
  
  /**
   */

  getServiceStatus() {}
  
  /**
   * @param { !number } segmentId
   */

  executeModel(segmentId) {}
  
  /**
   * @param { !number } segmentId
   * @param { !number } result
   */

  overwriteResult(segmentId, result) {}
  
  /**
   * @param { !string } segmentationKey
   * @param { !number } optimizationTarget
   */

  setSelected(segmentationKey, optimizationTarget) {}
};

/**
 * @export
 * @implements { segmentationInternals.mojom.PageHandlerInterface }
 */
segmentationInternals.mojom.PageHandlerRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!segmentationInternals.mojom.PageHandlerPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          segmentationInternals.mojom.PageHandlerPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!segmentationInternals.mojom.PageHandlerPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   */

  getServiceStatus() {
    this.proxy.sendMessage(
        0,
        segmentationInternals.mojom.PageHandler_GetServiceStatus_ParamsSpec.$,
        null,
        [
        ]);
  }

  
  /**
   * @param { !number } segmentId
   */

  executeModel(
      segmentId) {
    this.proxy.sendMessage(
        1,
        segmentationInternals.mojom.PageHandler_ExecuteModel_ParamsSpec.$,
        null,
        [
          segmentId
        ]);
  }

  
  /**
   * @param { !number } segmentId
   * @param { !number } result
   */

  overwriteResult(
      segmentId,
      result) {
    this.proxy.sendMessage(
        2,
        segmentationInternals.mojom.PageHandler_OverwriteResult_ParamsSpec.$,
        null,
        [
          segmentId,
          result
        ]);
  }

  
  /**
   * @param { !string } segmentationKey
   * @param { !number } optimizationTarget
   */

  setSelected(
      segmentationKey,
      optimizationTarget) {
    this.proxy.sendMessage(
        3,
        segmentationInternals.mojom.PageHandler_SetSelected_ParamsSpec.$,
        null,
        [
          segmentationKey,
          optimizationTarget
        ]);
  }
};

/**
 * An object which receives request messages for the PageHandler
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
segmentationInternals.mojom.PageHandlerReceiver = class {
  /**
   * @param {!segmentationInternals.mojom.PageHandlerInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!segmentationInternals.mojom.PageHandlerRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        segmentationInternals.mojom.PageHandlerRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!segmentationInternals.mojom.PageHandlerRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        segmentationInternals.mojom.PageHandler_GetServiceStatus_ParamsSpec.$,
        null,
        impl.getServiceStatus.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        segmentationInternals.mojom.PageHandler_ExecuteModel_ParamsSpec.$,
        null,
        impl.executeModel.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        segmentationInternals.mojom.PageHandler_OverwriteResult_ParamsSpec.$,
        null,
        impl.overwriteResult.bind(impl));
    this.helper_internal_.registerHandler(
        3,
        segmentationInternals.mojom.PageHandler_SetSelected_ParamsSpec.$,
        null,
        impl.setSelected.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
segmentationInternals.mojom.PageHandler = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "segmentation_internals.mojom.PageHandler";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!segmentationInternals.mojom.PageHandlerRemote}
   * @export
   */
  static getRemote() {
    let remote = new segmentationInternals.mojom.PageHandlerRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the PageHandler
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
segmentationInternals.mojom.PageHandlerCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      segmentationInternals.mojom.PageHandlerRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!segmentationInternals.mojom.PageHandlerRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getServiceStatus =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        segmentationInternals.mojom.PageHandler_GetServiceStatus_ParamsSpec.$,
        null,
        this.getServiceStatus.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.executeModel =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        segmentationInternals.mojom.PageHandler_ExecuteModel_ParamsSpec.$,
        null,
        this.executeModel.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.overwriteResult =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        segmentationInternals.mojom.PageHandler_OverwriteResult_ParamsSpec.$,
        null,
        this.overwriteResult.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setSelected =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        3,
        segmentationInternals.mojom.PageHandler_SetSelected_ParamsSpec.$,
        null,
        this.setSelected.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('segmentationInternals.mojom.Page');
goog.provide('segmentationInternals.mojom.PageReceiver');
goog.provide('segmentationInternals.mojom.PageCallbackRouter');
goog.provide('segmentationInternals.mojom.PageInterface');
goog.provide('segmentationInternals.mojom.PageRemote');
goog.provide('segmentationInternals.mojom.PagePendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
segmentationInternals.mojom.PagePendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        segmentationInternals.mojom.Page.$interfaceName,
        scope);
  }
};

/** @interface */
segmentationInternals.mojom.PageInterface = class {
  
  /**
   * @param { !boolean } isInitialized
   * @param { !number } statusFlag
   */

  onServiceStatusChanged(isInitialized, statusFlag) {}
  
  /**
   * @param { !Array<!segmentationInternals.mojom.ClientInfo> } clientInfo
   */

  onClientInfoAvailable(clientInfo) {}
};

/**
 * @export
 * @implements { segmentationInternals.mojom.PageInterface }
 */
segmentationInternals.mojom.PageRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!segmentationInternals.mojom.PagePendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          segmentationInternals.mojom.PagePendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!segmentationInternals.mojom.PagePendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !boolean } isInitialized
   * @param { !number } statusFlag
   */

  onServiceStatusChanged(
      isInitialized,
      statusFlag) {
    this.proxy.sendMessage(
        0,
        segmentationInternals.mojom.Page_OnServiceStatusChanged_ParamsSpec.$,
        null,
        [
          isInitialized,
          statusFlag
        ]);
  }

  
  /**
   * @param { !Array<!segmentationInternals.mojom.ClientInfo> } clientInfo
   */

  onClientInfoAvailable(
      clientInfo) {
    this.proxy.sendMessage(
        1,
        segmentationInternals.mojom.Page_OnClientInfoAvailable_ParamsSpec.$,
        null,
        [
          clientInfo
        ]);
  }
};

/**
 * An object which receives request messages for the Page
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
segmentationInternals.mojom.PageReceiver = class {
  /**
   * @param {!segmentationInternals.mojom.PageInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!segmentationInternals.mojom.PageRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        segmentationInternals.mojom.PageRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!segmentationInternals.mojom.PageRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        segmentationInternals.mojom.Page_OnServiceStatusChanged_ParamsSpec.$,
        null,
        impl.onServiceStatusChanged.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        segmentationInternals.mojom.Page_OnClientInfoAvailable_ParamsSpec.$,
        null,
        impl.onClientInfoAvailable.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
segmentationInternals.mojom.Page = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "segmentation_internals.mojom.Page";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!segmentationInternals.mojom.PageRemote}
   * @export
   */
  static getRemote() {
    let remote = new segmentationInternals.mojom.PageRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the Page
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
segmentationInternals.mojom.PageCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      segmentationInternals.mojom.PageRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!segmentationInternals.mojom.PageRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onServiceStatusChanged =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        segmentationInternals.mojom.Page_OnServiceStatusChanged_ParamsSpec.$,
        null,
        this.onServiceStatusChanged.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onClientInfoAvailable =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        segmentationInternals.mojom.Page_OnClientInfoAvailable_ParamsSpec.$,
        null,
        this.onClientInfoAvailable.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('segmentationInternals.mojom.ServiceStatusSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
segmentationInternals.mojom.ServiceStatusSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('segmentationInternals.mojom.SegmentInfoSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
segmentationInternals.mojom.SegmentInfoSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('segmentationInternals.mojom.ClientInfoSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
segmentationInternals.mojom.ClientInfoSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('segmentationInternals.mojom.PageHandlerFactory_CreatePageHandler_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
segmentationInternals.mojom.PageHandlerFactory_CreatePageHandler_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('segmentationInternals.mojom.PageHandler_GetServiceStatus_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
segmentationInternals.mojom.PageHandler_GetServiceStatus_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('segmentationInternals.mojom.PageHandler_ExecuteModel_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
segmentationInternals.mojom.PageHandler_ExecuteModel_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('segmentationInternals.mojom.PageHandler_OverwriteResult_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
segmentationInternals.mojom.PageHandler_OverwriteResult_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('segmentationInternals.mojom.PageHandler_SetSelected_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
segmentationInternals.mojom.PageHandler_SetSelected_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('segmentationInternals.mojom.Page_OnServiceStatusChanged_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
segmentationInternals.mojom.Page_OnServiceStatusChanged_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('segmentationInternals.mojom.Page_OnClientInfoAvailable_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
segmentationInternals.mojom.Page_OnClientInfoAvailable_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    segmentationInternals.mojom.ServiceStatusSpec.$,
    'ServiceStatus',
    [
      mojo.internal.StructField(
        'isInitialized', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'intializationStatus', 4,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('segmentationInternals.mojom.ServiceStatus');

/** @record */
segmentationInternals.mojom.ServiceStatus = class {
  constructor() {
    /** @export { !boolean } */
    this.isInitialized;
    /** @export { !number } */
    this.intializationStatus;
  }
};




mojo.internal.Struct(
    segmentationInternals.mojom.SegmentInfoSpec.$,
    'SegmentInfo',
    [
      mojo.internal.StructField(
        'segmentName', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'segmentId', 8,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'segmentData', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'canExecuteSegment', 12,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'predictionResult', 24,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ],
    [[0, 40],]);



goog.provide('segmentationInternals.mojom.SegmentInfo');

/** @record */
segmentationInternals.mojom.SegmentInfo = class {
  constructor() {
    /** @export { !string } */
    this.segmentName;
    /** @export { !number } */
    this.segmentId;
    /** @export { !boolean } */
    this.canExecuteSegment;
    /** @export { !string } */
    this.segmentData;
    /** @export { !string } */
    this.predictionResult;
  }
};




mojo.internal.Struct(
    segmentationInternals.mojom.ClientInfoSpec.$,
    'ClientInfo',
    [
      mojo.internal.StructField(
        'segmentationKey', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'selectedSegment', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'segmentInfo', 16,
        0,
        mojo.internal.Array(segmentationInternals.mojom.SegmentInfoSpec.$, false),
        null,
        false /* nullable */),
    ],
    [[0, 32],]);



goog.provide('segmentationInternals.mojom.ClientInfo');

/** @record */
segmentationInternals.mojom.ClientInfo = class {
  constructor() {
    /** @export { !string } */
    this.segmentationKey;
    /** @export { !string } */
    this.selectedSegment;
    /** @export { !Array<!segmentationInternals.mojom.SegmentInfo> } */
    this.segmentInfo;
  }
};




mojo.internal.Struct(
    segmentationInternals.mojom.PageHandlerFactory_CreatePageHandler_ParamsSpec.$,
    'PageHandlerFactory_CreatePageHandler_Params',
    [
      mojo.internal.StructField(
        'page', 0,
        0,
        mojo.internal.InterfaceProxy(segmentationInternals.mojom.PageRemote),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'handler', 8,
        0,
        mojo.internal.InterfaceRequest(segmentationInternals.mojom.PageHandlerPendingReceiver),
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('segmentationInternals.mojom.PageHandlerFactory_CreatePageHandler_Params');

/** @record */
segmentationInternals.mojom.PageHandlerFactory_CreatePageHandler_Params = class {
  constructor() {
    /** @export { !segmentationInternals.mojom.PageRemote } */
    this.page;
    /** @export { !segmentationInternals.mojom.PageHandlerPendingReceiver } */
    this.handler;
  }
};




mojo.internal.Struct(
    segmentationInternals.mojom.PageHandler_GetServiceStatus_ParamsSpec.$,
    'PageHandler_GetServiceStatus_Params',
    [
    ],
    [[0, 8],]);



goog.provide('segmentationInternals.mojom.PageHandler_GetServiceStatus_Params');

/** @record */
segmentationInternals.mojom.PageHandler_GetServiceStatus_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    segmentationInternals.mojom.PageHandler_ExecuteModel_ParamsSpec.$,
    'PageHandler_ExecuteModel_Params',
    [
      mojo.internal.StructField(
        'segmentId', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('segmentationInternals.mojom.PageHandler_ExecuteModel_Params');

/** @record */
segmentationInternals.mojom.PageHandler_ExecuteModel_Params = class {
  constructor() {
    /** @export { !number } */
    this.segmentId;
  }
};




mojo.internal.Struct(
    segmentationInternals.mojom.PageHandler_OverwriteResult_ParamsSpec.$,
    'PageHandler_OverwriteResult_Params',
    [
      mojo.internal.StructField(
        'segmentId', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'result', 4,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('segmentationInternals.mojom.PageHandler_OverwriteResult_Params');

/** @record */
segmentationInternals.mojom.PageHandler_OverwriteResult_Params = class {
  constructor() {
    /** @export { !number } */
    this.segmentId;
    /** @export { !number } */
    this.result;
  }
};




mojo.internal.Struct(
    segmentationInternals.mojom.PageHandler_SetSelected_ParamsSpec.$,
    'PageHandler_SetSelected_Params',
    [
      mojo.internal.StructField(
        'segmentationKey', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'optimizationTarget', 8,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('segmentationInternals.mojom.PageHandler_SetSelected_Params');

/** @record */
segmentationInternals.mojom.PageHandler_SetSelected_Params = class {
  constructor() {
    /** @export { !string } */
    this.segmentationKey;
    /** @export { !number } */
    this.optimizationTarget;
  }
};




mojo.internal.Struct(
    segmentationInternals.mojom.Page_OnServiceStatusChanged_ParamsSpec.$,
    'Page_OnServiceStatusChanged_Params',
    [
      mojo.internal.StructField(
        'isInitialized', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'statusFlag', 4,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('segmentationInternals.mojom.Page_OnServiceStatusChanged_Params');

/** @record */
segmentationInternals.mojom.Page_OnServiceStatusChanged_Params = class {
  constructor() {
    /** @export { !boolean } */
    this.isInitialized;
    /** @export { !number } */
    this.statusFlag;
  }
};




mojo.internal.Struct(
    segmentationInternals.mojom.Page_OnClientInfoAvailable_ParamsSpec.$,
    'Page_OnClientInfoAvailable_Params',
    [
      mojo.internal.StructField(
        'clientInfo', 0,
        0,
        mojo.internal.Array(segmentationInternals.mojom.ClientInfoSpec.$, false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('segmentationInternals.mojom.Page_OnClientInfoAvailable_Params');

/** @record */
segmentationInternals.mojom.Page_OnClientInfoAvailable_Params = class {
  constructor() {
    /** @export { !Array<!segmentationInternals.mojom.ClientInfo> } */
    this.clientInfo;
  }
};


