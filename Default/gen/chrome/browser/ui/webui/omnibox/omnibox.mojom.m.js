// chrome/browser/ui/webui/omnibox/omnibox.mojom.m.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import {mojo} from '../../../../../mojo/public/js/bindings.js';




/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export class OmniboxPageHandlerPendingReceiver {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle, 'mojom.OmniboxPageHandler', scope);
  }
}

/** @interface */
export class OmniboxPageHandlerInterface {
  
  /**
   * @param { !OmniboxPageRemote } page
   */

  setClientPage(page) {}
  
  /**
   * @param { !string } inputString
   * @param { !boolean } resetAutocompleteController
   * @param { !number } cursorPosition
   * @param { !boolean } zeroSuggest
   * @param { !boolean } preventInlineAutocomplete
   * @param { !boolean } preferKeyword
   * @param { !string } currentUrl
   * @param { !number } pageClassification
   */

  startOmniboxQuery(inputString, resetAutocompleteController, cursorPosition, zeroSuggest, preventInlineAutocomplete, preferKeyword, currentUrl, pageClassification) {}
}

/**
 * @implements { OmniboxPageHandlerInterface }
 */
export class OmniboxPageHandlerRemote {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!OmniboxPageHandlerPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          OmniboxPageHandlerPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!OmniboxPageHandlerPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !OmniboxPageRemote } page
   */

  setClientPage(
      page) {
    this.proxy.sendMessage(
        0,
        OmniboxPageHandler_SetClientPage_ParamsSpec.$,
        null,
        [
          page
        ]);
  }

  
  /**
   * @param { !string } inputString
   * @param { !boolean } resetAutocompleteController
   * @param { !number } cursorPosition
   * @param { !boolean } zeroSuggest
   * @param { !boolean } preventInlineAutocomplete
   * @param { !boolean } preferKeyword
   * @param { !string } currentUrl
   * @param { !number } pageClassification
   */

  startOmniboxQuery(
      inputString,
      resetAutocompleteController,
      cursorPosition,
      zeroSuggest,
      preventInlineAutocomplete,
      preferKeyword,
      currentUrl,
      pageClassification) {
    this.proxy.sendMessage(
        1,
        OmniboxPageHandler_StartOmniboxQuery_ParamsSpec.$,
        null,
        [
          inputString,
          resetAutocompleteController,
          cursorPosition,
          zeroSuggest,
          preventInlineAutocomplete,
          preferKeyword,
          currentUrl,
          pageClassification
        ]);
  }
}

/**
 * An object which receives request messages for the OmniboxPageHandler
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class OmniboxPageHandlerReceiver {
  /**
   * @param {!OmniboxPageHandlerInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!OmniboxPageHandlerRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        OmniboxPageHandlerRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!OmniboxPageHandlerRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        OmniboxPageHandler_SetClientPage_ParamsSpec.$,
        null,
        impl.setClientPage.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        OmniboxPageHandler_StartOmniboxQuery_ParamsSpec.$,
        null,
        impl.startOmniboxQuery.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
}

export class OmniboxPageHandler {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "mojom.OmniboxPageHandler";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!OmniboxPageHandlerRemote}
   */
  static getRemote() {
    let remote = new OmniboxPageHandlerRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
}


/**
 * An object which receives request messages for the OmniboxPageHandler
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class OmniboxPageHandlerCallbackRouter {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      OmniboxPageHandlerRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!OmniboxPageHandlerRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setClientPage =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        OmniboxPageHandler_SetClientPage_ParamsSpec.$,
        null,
        this.setClientPage.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.startOmniboxQuery =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        OmniboxPageHandler_StartOmniboxQuery_ParamsSpec.$,
        null,
        this.startOmniboxQuery.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
}


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export class OmniboxPagePendingReceiver {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle, 'mojom.OmniboxPage', scope);
  }
}

/** @interface */
export class OmniboxPageInterface {
  
  /**
   * @param { !OmniboxResponse } response
   * @param { !boolean } isPageController
   */

  handleNewAutocompleteResponse(response, isPageController) {}
  
  /**
   * @param { !boolean } isPageController
   * @param { !string } inputText
   */

  handleNewAutocompleteQuery(isPageController, inputText) {}
  
  /**
   * @param { !string } imageUrl
   * @param { !string } imageData
   */

  handleAnswerImageData(imageUrl, imageData) {}
}

/**
 * @implements { OmniboxPageInterface }
 */
export class OmniboxPageRemote {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!OmniboxPagePendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          OmniboxPagePendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!OmniboxPagePendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !OmniboxResponse } response
   * @param { !boolean } isPageController
   */

  handleNewAutocompleteResponse(
      response,
      isPageController) {
    this.proxy.sendMessage(
        0,
        OmniboxPage_HandleNewAutocompleteResponse_ParamsSpec.$,
        null,
        [
          response,
          isPageController
        ]);
  }

  
  /**
   * @param { !boolean } isPageController
   * @param { !string } inputText
   */

  handleNewAutocompleteQuery(
      isPageController,
      inputText) {
    this.proxy.sendMessage(
        1,
        OmniboxPage_HandleNewAutocompleteQuery_ParamsSpec.$,
        null,
        [
          isPageController,
          inputText
        ]);
  }

  
  /**
   * @param { !string } imageUrl
   * @param { !string } imageData
   */

  handleAnswerImageData(
      imageUrl,
      imageData) {
    this.proxy.sendMessage(
        2,
        OmniboxPage_HandleAnswerImageData_ParamsSpec.$,
        null,
        [
          imageUrl,
          imageData
        ]);
  }
}

/**
 * An object which receives request messages for the OmniboxPage
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class OmniboxPageReceiver {
  /**
   * @param {!OmniboxPageInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!OmniboxPageRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        OmniboxPageRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!OmniboxPageRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        OmniboxPage_HandleNewAutocompleteResponse_ParamsSpec.$,
        null,
        impl.handleNewAutocompleteResponse.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        OmniboxPage_HandleNewAutocompleteQuery_ParamsSpec.$,
        null,
        impl.handleNewAutocompleteQuery.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        OmniboxPage_HandleAnswerImageData_ParamsSpec.$,
        null,
        impl.handleAnswerImageData.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
}

export class OmniboxPage {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "mojom.OmniboxPage";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!OmniboxPageRemote}
   */
  static getRemote() {
    let remote = new OmniboxPageRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
}


/**
 * An object which receives request messages for the OmniboxPage
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class OmniboxPageCallbackRouter {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      OmniboxPageRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!OmniboxPageRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.handleNewAutocompleteResponse =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        OmniboxPage_HandleNewAutocompleteResponse_ParamsSpec.$,
        null,
        this.handleNewAutocompleteResponse.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.handleNewAutocompleteQuery =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        OmniboxPage_HandleNewAutocompleteQuery_ParamsSpec.$,
        null,
        this.handleNewAutocompleteQuery.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.handleAnswerImageData =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        OmniboxPage_HandleAnswerImageData_ParamsSpec.$,
        null,
        this.handleAnswerImageData.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
}

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const ACMatchClassificationSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const AutocompleteAdditionalInfoSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const AutocompleteMatchSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const AutocompleteResultsForProviderSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const OmniboxResponseSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const OmniboxPageHandler_SetClientPage_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const OmniboxPageHandler_StartOmniboxQuery_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const OmniboxPage_HandleNewAutocompleteResponse_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const OmniboxPage_HandleNewAutocompleteQuery_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const OmniboxPage_HandleAnswerImageData_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    ACMatchClassificationSpec.$,
    'ACMatchClassification',
    [
      mojo.internal.StructField(
        'offset', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'style', 4,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class ACMatchClassification {
  constructor() {
    /** @type { !number } */
    this.offset;
    /** @type { !number } */
    this.style;
  }
}



mojo.internal.Struct(
    AutocompleteAdditionalInfoSpec.$,
    'AutocompleteAdditionalInfo',
    [
      mojo.internal.StructField(
        'key', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'value', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class AutocompleteAdditionalInfo {
  constructor() {
    /** @type { !string } */
    this.key;
    /** @type { !string } */
    this.value;
  }
}



mojo.internal.Struct(
    AutocompleteMatchSpec.$,
    'AutocompleteMatch',
    [
      mojo.internal.StructField(
        'providerName', 0,
        0,
        mojo.internal.String,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'providerDone', 8,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'relevance', 12,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'deletable', 8,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'fillIntoEdit', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'inlineAutocompletion', 24,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'destinationUrl', 32,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'strippedDestinationUrl', 40,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'image', 48,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'contents', 56,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'contentsClass', 64,
        0,
        mojo.internal.Array(ACMatchClassificationSpec.$, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'description', 72,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'descriptionClass', 80,
        0,
        mojo.internal.Array(ACMatchClassificationSpec.$, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'swapContentsAndDescription', 8,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'answer', 88,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'transition', 96,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'allowedToBeDefaultMatch', 8,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'type', 104,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'isSearchType', 8,
        4,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'aqsTypeSubtypes', 112,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'hasTabMatch', 8,
        5,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'associatedKeyword', 120,
        0,
        mojo.internal.String,
        null,
        true /* nullable */,
        0),
      mojo.internal.StructField(
        'keyword', 128,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'starred', 8,
        6,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'duplicates', 136,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'fromPrevious', 8,
        7,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'pedalId', 140,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'additionalInfo', 144,
        0,
        mojo.internal.Array(AutocompleteAdditionalInfoSpec.$, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 160],]);



/**
 * @record
 */
export class AutocompleteMatch {
  constructor() {
    /** @type { (string|undefined) } */
    this.providerName;
    /** @type { !boolean } */
    this.providerDone;
    /** @type { !boolean } */
    this.deletable;
    /** @type { !boolean } */
    this.swapContentsAndDescription;
    /** @type { !boolean } */
    this.allowedToBeDefaultMatch;
    /** @type { !boolean } */
    this.isSearchType;
    /** @type { !boolean } */
    this.hasTabMatch;
    /** @type { !boolean } */
    this.starred;
    /** @type { !boolean } */
    this.fromPrevious;
    /** @type { !number } */
    this.relevance;
    /** @type { !string } */
    this.fillIntoEdit;
    /** @type { !string } */
    this.inlineAutocompletion;
    /** @type { !string } */
    this.destinationUrl;
    /** @type { !string } */
    this.strippedDestinationUrl;
    /** @type { !string } */
    this.image;
    /** @type { !string } */
    this.contents;
    /** @type { !Array<!ACMatchClassification> } */
    this.contentsClass;
    /** @type { !string } */
    this.description;
    /** @type { !Array<!ACMatchClassification> } */
    this.descriptionClass;
    /** @type { !string } */
    this.answer;
    /** @type { !string } */
    this.transition;
    /** @type { !string } */
    this.type;
    /** @type { !string } */
    this.aqsTypeSubtypes;
    /** @type { (string|undefined) } */
    this.associatedKeyword;
    /** @type { !string } */
    this.keyword;
    /** @type { !number } */
    this.duplicates;
    /** @type { !number } */
    this.pedalId;
    /** @type { !Array<!AutocompleteAdditionalInfo> } */
    this.additionalInfo;
  }
}



mojo.internal.Struct(
    AutocompleteResultsForProviderSpec.$,
    'AutocompleteResultsForProvider',
    [
      mojo.internal.StructField(
        'providerName', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'results', 8,
        0,
        mojo.internal.Array(AutocompleteMatchSpec.$, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class AutocompleteResultsForProvider {
  constructor() {
    /** @type { !string } */
    this.providerName;
    /** @type { !Array<!AutocompleteMatch> } */
    this.results;
  }
}



mojo.internal.Struct(
    OmniboxResponseSpec.$,
    'OmniboxResponse',
    [
      mojo.internal.StructField(
        'cursorPosition', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'timeSinceOmniboxStartedMs', 4,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'done', 8,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'type', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'host', 24,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'isTypedHost', 8,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'inputText', 32,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'combinedResults', 40,
        0,
        mojo.internal.Array(AutocompleteMatchSpec.$, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'resultsByProvider', 48,
        0,
        mojo.internal.Array(AutocompleteResultsForProviderSpec.$, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 64],]);



/**
 * @record
 */
export class OmniboxResponse {
  constructor() {
    /** @type { !number } */
    this.cursorPosition;
    /** @type { !number } */
    this.timeSinceOmniboxStartedMs;
    /** @type { !boolean } */
    this.done;
    /** @type { !boolean } */
    this.isTypedHost;
    /** @type { !string } */
    this.type;
    /** @type { !string } */
    this.host;
    /** @type { !string } */
    this.inputText;
    /** @type { !Array<!AutocompleteMatch> } */
    this.combinedResults;
    /** @type { !Array<!AutocompleteResultsForProvider> } */
    this.resultsByProvider;
  }
}



mojo.internal.Struct(
    OmniboxPageHandler_SetClientPage_ParamsSpec.$,
    'OmniboxPageHandler_SetClientPage_Params',
    [
      mojo.internal.StructField(
        'page', 0,
        0,
        mojo.internal.InterfaceProxy(OmniboxPageRemote),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class OmniboxPageHandler_SetClientPage_Params {
  constructor() {
    /** @type { !OmniboxPageRemote } */
    this.page;
  }
}



mojo.internal.Struct(
    OmniboxPageHandler_StartOmniboxQuery_ParamsSpec.$,
    'OmniboxPageHandler_StartOmniboxQuery_Params',
    [
      mojo.internal.StructField(
        'inputString', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'resetAutocompleteController', 8,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'cursorPosition', 12,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'zeroSuggest', 8,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'preventInlineAutocomplete', 8,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'preferKeyword', 8,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'currentUrl', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'pageClassification', 24,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
    ],
    [[0, 40],]);



/**
 * @record
 */
export class OmniboxPageHandler_StartOmniboxQuery_Params {
  constructor() {
    /** @type { !string } */
    this.inputString;
    /** @type { !boolean } */
    this.resetAutocompleteController;
    /** @type { !boolean } */
    this.zeroSuggest;
    /** @type { !boolean } */
    this.preventInlineAutocomplete;
    /** @type { !boolean } */
    this.preferKeyword;
    /** @type { !number } */
    this.cursorPosition;
    /** @type { !string } */
    this.currentUrl;
    /** @type { !number } */
    this.pageClassification;
  }
}



mojo.internal.Struct(
    OmniboxPage_HandleNewAutocompleteResponse_ParamsSpec.$,
    'OmniboxPage_HandleNewAutocompleteResponse_Params',
    [
      mojo.internal.StructField(
        'response', 0,
        0,
        OmniboxResponseSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'isPageController', 8,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class OmniboxPage_HandleNewAutocompleteResponse_Params {
  constructor() {
    /** @type { !OmniboxResponse } */
    this.response;
    /** @type { !boolean } */
    this.isPageController;
  }
}



mojo.internal.Struct(
    OmniboxPage_HandleNewAutocompleteQuery_ParamsSpec.$,
    'OmniboxPage_HandleNewAutocompleteQuery_Params',
    [
      mojo.internal.StructField(
        'isPageController', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'inputText', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class OmniboxPage_HandleNewAutocompleteQuery_Params {
  constructor() {
    /** @type { !boolean } */
    this.isPageController;
    /** @type { !string } */
    this.inputText;
  }
}



mojo.internal.Struct(
    OmniboxPage_HandleAnswerImageData_ParamsSpec.$,
    'OmniboxPage_HandleAnswerImageData_Params',
    [
      mojo.internal.StructField(
        'imageUrl', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'imageData', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class OmniboxPage_HandleAnswerImageData_Params {
  constructor() {
    /** @type { !string } */
    this.imageUrl;
    /** @type { !string } */
    this.imageData;
  }
}

