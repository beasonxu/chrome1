// chrome/browser/ui/webui/feed_internals/feed_internals.mojom-shared.cc is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#include "chrome/browser/ui/webui/feed_internals/feed_internals.mojom-shared.h"

// Used to support stream output operator for enums.
// TODO(dcheng): Consider omitting this somehow if not needed.
#include <ostream>
#include <utility>

#include "base/strings/stringprintf.h"
#include "mojo/public/cpp/bindings/lib/validate_params.h"
#include "mojo/public/cpp/bindings/lib/validation_errors.h"
#include "mojo/public/cpp/bindings/lib/validation_util.h"
#include "third_party/perfetto/include/perfetto/tracing/traced_value.h"

#include "chrome/browser/ui/webui/feed_internals/feed_internals.mojom-params-data.h"
namespace feed_internals {
namespace mojom {

static NOINLINE const char* FeedOrderToStringHelper(FeedOrder value) {
  // Defined in a helper function to ensure that Clang generates a lookup table.
  switch(value) {
    case FeedOrder::kUnspecified:
      return "kUnspecified";
    case FeedOrder::kGrouped:
      return "kGrouped";
    case FeedOrder::kReverseChron:
      return "kReverseChron";
    default:
      return nullptr;
  }
}

std::string FeedOrderToString(FeedOrder value) {
  const char *str = FeedOrderToStringHelper(value);
  if (!str) {
    return base::StringPrintf("Unknown FeedOrder value: %i", static_cast<int32_t>(value));
  }
  return str;
}

std::ostream& operator<<(std::ostream& os, FeedOrder value) {
  return os << FeedOrderToString(value);
}

namespace internal {


// static
bool Properties_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 40, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const Properties_Data* object =
      static_cast<const Properties_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->load_stream_status, 7, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams load_stream_status_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->load_stream_status, validation_context,
                                         &load_stream_status_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->feed_fetch_url, 8, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->feed_fetch_url, validation_context))
    return false;

  if (!mojo::internal::ValidatePointerNonNullable(
          object->feed_actions_url, 9, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->feed_actions_url, validation_context))
    return false;


  if (!::feed_internals::mojom::internal::FeedOrder_Data
        ::Validate(object->following_feed_order, validation_context))
    return false;

  return true;
}

Properties_Data::Properties_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool LastFetchProperties_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 56, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const LastFetchProperties_Data* object =
      static_cast<const LastFetchProperties_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->last_fetch_trigger, 2, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams last_fetch_trigger_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->last_fetch_trigger, validation_context,
                                         &last_fetch_trigger_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->last_fetch_time, 3, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->last_fetch_time, validation_context))
    return false;

  if (!mojo::internal::ValidatePointerNonNullable(
          object->refresh_suppress_time, 4, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->refresh_suppress_time, validation_context))
    return false;

  if (!mojo::internal::ValidatePointerNonNullable(
          object->last_bless_nonce, 5, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams last_bless_nonce_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->last_bless_nonce, validation_context,
                                         &last_bless_nonce_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->last_action_upload_time, 7, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->last_action_upload_time, validation_context))
    return false;

  return true;
}

LastFetchProperties_Data::LastFetchProperties_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool PageHandler_GetGeneralProperties_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const PageHandler_GetGeneralProperties_Params_Data* object =
      static_cast<const PageHandler_GetGeneralProperties_Params_Data*>(data);

  return true;
}

PageHandler_GetGeneralProperties_Params_Data::PageHandler_GetGeneralProperties_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool PageHandler_GetGeneralProperties_ResponseParams_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const PageHandler_GetGeneralProperties_ResponseParams_Data* object =
      static_cast<const PageHandler_GetGeneralProperties_ResponseParams_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->properties, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->properties, validation_context))
    return false;

  return true;
}

PageHandler_GetGeneralProperties_ResponseParams_Data::PageHandler_GetGeneralProperties_ResponseParams_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool PageHandler_GetLastFetchProperties_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const PageHandler_GetLastFetchProperties_Params_Data* object =
      static_cast<const PageHandler_GetLastFetchProperties_Params_Data*>(data);

  return true;
}

PageHandler_GetLastFetchProperties_Params_Data::PageHandler_GetLastFetchProperties_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool PageHandler_GetLastFetchProperties_ResponseParams_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const PageHandler_GetLastFetchProperties_ResponseParams_Data* object =
      static_cast<const PageHandler_GetLastFetchProperties_ResponseParams_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->properties, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->properties, validation_context))
    return false;

  return true;
}

PageHandler_GetLastFetchProperties_ResponseParams_Data::PageHandler_GetLastFetchProperties_ResponseParams_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool PageHandler_RefreshForYouFeed_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const PageHandler_RefreshForYouFeed_Params_Data* object =
      static_cast<const PageHandler_RefreshForYouFeed_Params_Data*>(data);

  return true;
}

PageHandler_RefreshForYouFeed_Params_Data::PageHandler_RefreshForYouFeed_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool PageHandler_RefreshFollowingFeed_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const PageHandler_RefreshFollowingFeed_Params_Data* object =
      static_cast<const PageHandler_RefreshFollowingFeed_Params_Data*>(data);

  return true;
}

PageHandler_RefreshFollowingFeed_Params_Data::PageHandler_RefreshFollowingFeed_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool PageHandler_RefreshWebFeedSuggestions_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const PageHandler_RefreshWebFeedSuggestions_Params_Data* object =
      static_cast<const PageHandler_RefreshWebFeedSuggestions_Params_Data*>(data);

  return true;
}

PageHandler_RefreshWebFeedSuggestions_Params_Data::PageHandler_RefreshWebFeedSuggestions_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool PageHandler_GetFeedProcessScopeDump_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const PageHandler_GetFeedProcessScopeDump_Params_Data* object =
      static_cast<const PageHandler_GetFeedProcessScopeDump_Params_Data*>(data);

  return true;
}

PageHandler_GetFeedProcessScopeDump_Params_Data::PageHandler_GetFeedProcessScopeDump_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool PageHandler_GetFeedProcessScopeDump_ResponseParams_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const PageHandler_GetFeedProcessScopeDump_ResponseParams_Data* object =
      static_cast<const PageHandler_GetFeedProcessScopeDump_ResponseParams_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->dump, 1, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams dump_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->dump, validation_context,
                                         &dump_validate_params)) {
    return false;
  }

  return true;
}

PageHandler_GetFeedProcessScopeDump_ResponseParams_Data::PageHandler_GetFeedProcessScopeDump_ResponseParams_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool PageHandler_GetFeedHistograms_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const PageHandler_GetFeedHistograms_Params_Data* object =
      static_cast<const PageHandler_GetFeedHistograms_Params_Data*>(data);

  return true;
}

PageHandler_GetFeedHistograms_Params_Data::PageHandler_GetFeedHistograms_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool PageHandler_GetFeedHistograms_ResponseParams_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const PageHandler_GetFeedHistograms_ResponseParams_Data* object =
      static_cast<const PageHandler_GetFeedHistograms_ResponseParams_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->log, 1, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams log_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->log, validation_context,
                                         &log_validate_params)) {
    return false;
  }

  return true;
}

PageHandler_GetFeedHistograms_ResponseParams_Data::PageHandler_GetFeedHistograms_ResponseParams_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool PageHandler_OverrideFeedHost_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const PageHandler_OverrideFeedHost_Params_Data* object =
      static_cast<const PageHandler_OverrideFeedHost_Params_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->host, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->host, validation_context))
    return false;

  return true;
}

PageHandler_OverrideFeedHost_Params_Data::PageHandler_OverrideFeedHost_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool PageHandler_OverrideDiscoverApiEndpoint_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const PageHandler_OverrideDiscoverApiEndpoint_Params_Data* object =
      static_cast<const PageHandler_OverrideDiscoverApiEndpoint_Params_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->endpoint_url, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->endpoint_url, validation_context))
    return false;

  return true;
}

PageHandler_OverrideDiscoverApiEndpoint_Params_Data::PageHandler_OverrideDiscoverApiEndpoint_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool PageHandler_OverrideFeedStreamData_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const PageHandler_OverrideFeedStreamData_Params_Data* object =
      static_cast<const PageHandler_OverrideFeedStreamData_Params_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->data, 1, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams data_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->data, validation_context,
                                         &data_validate_params)) {
    return false;
  }

  return true;
}

PageHandler_OverrideFeedStreamData_Params_Data::PageHandler_OverrideFeedStreamData_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool PageHandler_SetWebFeedFollowIntroDebugEnabled_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const PageHandler_SetWebFeedFollowIntroDebugEnabled_Params_Data* object =
      static_cast<const PageHandler_SetWebFeedFollowIntroDebugEnabled_Params_Data*>(data);

  return true;
}

PageHandler_SetWebFeedFollowIntroDebugEnabled_Params_Data::PageHandler_SetWebFeedFollowIntroDebugEnabled_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool PageHandler_SetUseFeedQueryRequests_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const PageHandler_SetUseFeedQueryRequests_Params_Data* object =
      static_cast<const PageHandler_SetUseFeedQueryRequests_Params_Data*>(data);

  return true;
}

PageHandler_SetUseFeedQueryRequests_Params_Data::PageHandler_SetUseFeedQueryRequests_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool PageHandler_SetFollowingFeedOrder_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const PageHandler_SetFollowingFeedOrder_Params_Data* object =
      static_cast<const PageHandler_SetFollowingFeedOrder_Params_Data*>(data);


  if (!::feed_internals::mojom::internal::FeedOrder_Data
        ::Validate(object->order, validation_context))
    return false;

  return true;
}

PageHandler_SetFollowingFeedOrder_Params_Data::PageHandler_SetFollowingFeedOrder_Params_Data()
    : header_({sizeof(*this), 0}) {}

}  // namespace internal
}  // namespace mojom
}  // namespace feed_internals

namespace perfetto {

// static
void TraceFormatTraits<::feed_internals::mojom::FeedOrder>::WriteIntoTrace(
   perfetto::TracedValue context, ::feed_internals::mojom::FeedOrder value) {
  return std::move(context).WriteString(::feed_internals::mojom::FeedOrderToString(value));
}

} // namespace perfetto