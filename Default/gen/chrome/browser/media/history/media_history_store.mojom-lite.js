// chrome/browser/media/history/media_history_store.mojom-lite.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';


mojo.internal.exportModule('mediaHistory.mojom');








/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
mediaHistory.mojom.MediaHistoryStorePendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        mediaHistory.mojom.MediaHistoryStore.$interfaceName,
        scope);
  }
};



/**
 * @export
 * @implements { mediaHistory.mojom.MediaHistoryStoreInterface }
 */
mediaHistory.mojom.MediaHistoryStoreRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!mediaHistory.mojom.MediaHistoryStorePendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          mediaHistory.mojom.MediaHistoryStorePendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!mediaHistory.mojom.MediaHistoryStorePendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @return {!Promise<{
        stats: !mediaHistory.mojom.MediaHistoryStats,
   *  }>}
   */

  getMediaHistoryStats() {
    return this.proxy.sendMessage(
        0,
        mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryStats_ParamsSpec.$,
        mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryStats_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @return {!Promise<{
        rows: !Array<!mediaHistory.mojom.MediaHistoryOriginRow>,
   *  }>}
   */

  getMediaHistoryOriginRows() {
    return this.proxy.sendMessage(
        1,
        mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryOriginRows_ParamsSpec.$,
        mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryOriginRows_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @return {!Promise<{
        rows: !Array<!mediaHistory.mojom.MediaHistoryPlaybackRow>,
   *  }>}
   */

  getMediaHistoryPlaybackRows() {
    return this.proxy.sendMessage(
        2,
        mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryPlaybackRows_ParamsSpec.$,
        mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryPlaybackRows_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @return {!Promise<{
        rows: !Array<!mediaHistory.mojom.MediaHistoryPlaybackSessionRow>,
   *  }>}
   */

  getMediaHistoryPlaybackSessionRows() {
    return this.proxy.sendMessage(
        3,
        mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryPlaybackSessionRows_ParamsSpec.$,
        mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryPlaybackSessionRows_ResponseParamsSpec.$,
        [
        ]);
  }
};

/**
 * An object which receives request messages for the MediaHistoryStore
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
mediaHistory.mojom.MediaHistoryStoreReceiver = class {
  /**
   * @param {!mediaHistory.mojom.MediaHistoryStoreInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!mediaHistory.mojom.MediaHistoryStoreRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        mediaHistory.mojom.MediaHistoryStoreRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!mediaHistory.mojom.MediaHistoryStoreRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryStats_ParamsSpec.$,
        mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryStats_ResponseParamsSpec.$,
        impl.getMediaHistoryStats.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryOriginRows_ParamsSpec.$,
        mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryOriginRows_ResponseParamsSpec.$,
        impl.getMediaHistoryOriginRows.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryPlaybackRows_ParamsSpec.$,
        mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryPlaybackRows_ResponseParamsSpec.$,
        impl.getMediaHistoryPlaybackRows.bind(impl));
    this.helper_internal_.registerHandler(
        3,
        mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryPlaybackSessionRows_ParamsSpec.$,
        mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryPlaybackSessionRows_ResponseParamsSpec.$,
        impl.getMediaHistoryPlaybackSessionRows.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
mediaHistory.mojom.MediaHistoryStore = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "media_history.mojom.MediaHistoryStore";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!mediaHistory.mojom.MediaHistoryStoreRemote}
   * @export
   */
  static getRemote() {
    let remote = new mediaHistory.mojom.MediaHistoryStoreRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the MediaHistoryStore
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
mediaHistory.mojom.MediaHistoryStoreCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      mediaHistory.mojom.MediaHistoryStoreRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!mediaHistory.mojom.MediaHistoryStoreRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getMediaHistoryStats =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryStats_ParamsSpec.$,
        mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryStats_ResponseParamsSpec.$,
        this.getMediaHistoryStats.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getMediaHistoryOriginRows =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryOriginRows_ParamsSpec.$,
        mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryOriginRows_ResponseParamsSpec.$,
        this.getMediaHistoryOriginRows.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getMediaHistoryPlaybackRows =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryPlaybackRows_ParamsSpec.$,
        mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryPlaybackRows_ResponseParamsSpec.$,
        this.getMediaHistoryPlaybackRows.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getMediaHistoryPlaybackSessionRows =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        3,
        mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryPlaybackSessionRows_ParamsSpec.$,
        mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryPlaybackSessionRows_ResponseParamsSpec.$,
        this.getMediaHistoryPlaybackSessionRows.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};



/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mediaHistory.mojom.MediaHistoryStatsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mediaHistory.mojom.MediaHistoryOriginRowSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mediaHistory.mojom.MediaHistoryPlaybackRowSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mediaHistory.mojom.MediaHistoryPlaybackSessionRowSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryStats_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryStats_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryOriginRows_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryOriginRows_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryPlaybackRows_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryPlaybackRows_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryPlaybackSessionRows_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryPlaybackSessionRows_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    mediaHistory.mojom.MediaHistoryStatsSpec.$,
    'MediaHistoryStats',
    [
      mojo.internal.StructField(
        'tableRowCounts', 0,
        0,
        mojo.internal.Map(mojo.internal.String, mojo.internal.Int32, false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
mediaHistory.mojom.MediaHistoryStats = class {
  constructor() {
    /** @export { !Object<!string, !number> } */
    this.tableRowCounts;
  }
};




mojo.internal.Struct(
    mediaHistory.mojom.MediaHistoryOriginRowSpec.$,
    'MediaHistoryOriginRow',
    [
      mojo.internal.StructField(
        'origin', 0,
        0,
        url.mojom.OriginSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'cachedAudioVideoWatchtime', 8,
        0,
        mojoBase.mojom.TimeDeltaSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'actualAudioVideoWatchtime', 16,
        0,
        mojoBase.mojom.TimeDeltaSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'lastUpdatedTime', 24,
        0,
        mojo.internal.Double,
        0,
        false /* nullable */),
    ],
    [[0, 40],]);





/** @record */
mediaHistory.mojom.MediaHistoryOriginRow = class {
  constructor() {
    /** @export { !url.mojom.Origin } */
    this.origin;
    /** @export { !mojoBase.mojom.TimeDelta } */
    this.cachedAudioVideoWatchtime;
    /** @export { !mojoBase.mojom.TimeDelta } */
    this.actualAudioVideoWatchtime;
    /** @export { !number } */
    this.lastUpdatedTime;
  }
};




mojo.internal.Struct(
    mediaHistory.mojom.MediaHistoryPlaybackRowSpec.$,
    'MediaHistoryPlaybackRow',
    [
      mojo.internal.StructField(
        'url', 0,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'hasAudio', 8,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'hasVideo', 8,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'watchtime', 16,
        0,
        mojoBase.mojom.TimeDeltaSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'lastUpdatedTime', 24,
        0,
        mojo.internal.Double,
        0,
        false /* nullable */),
    ],
    [[0, 40],]);





/** @record */
mediaHistory.mojom.MediaHistoryPlaybackRow = class {
  constructor() {
    /** @export { !url.mojom.Url } */
    this.url;
    /** @export { !boolean } */
    this.hasAudio;
    /** @export { !boolean } */
    this.hasVideo;
    /** @export { !mojoBase.mojom.TimeDelta } */
    this.watchtime;
    /** @export { !number } */
    this.lastUpdatedTime;
  }
};




mojo.internal.Struct(
    mediaHistory.mojom.MediaHistoryPlaybackSessionRowSpec.$,
    'MediaHistoryPlaybackSessionRow',
    [
      mojo.internal.StructField(
        'id', 0,
        0,
        mojo.internal.Int64,
        BigInt(0),
        false /* nullable */),
      mojo.internal.StructField(
        'url', 8,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'duration', 16,
        0,
        mojoBase.mojom.TimeDeltaSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'position', 24,
        0,
        mojoBase.mojom.TimeDeltaSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'metadata', 32,
        0,
        mediaSession.mojom.MediaMetadataSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'artwork', 40,
        0,
        mojo.internal.Array(mediaSession.mojom.MediaImageSpec.$, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'lastUpdatedTime', 48,
        0,
        mojo.internal.Double,
        0,
        false /* nullable */),
    ],
    [[0, 64],]);





/** @record */
mediaHistory.mojom.MediaHistoryPlaybackSessionRow = class {
  constructor() {
    /** @export { !bigint } */
    this.id;
    /** @export { !url.mojom.Url } */
    this.url;
    /** @export { !mojoBase.mojom.TimeDelta } */
    this.duration;
    /** @export { !mojoBase.mojom.TimeDelta } */
    this.position;
    /** @export { !mediaSession.mojom.MediaMetadata } */
    this.metadata;
    /** @export { !Array<!mediaSession.mojom.MediaImage> } */
    this.artwork;
    /** @export { !number } */
    this.lastUpdatedTime;
  }
};




mojo.internal.Struct(
    mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryStats_ParamsSpec.$,
    'MediaHistoryStore_GetMediaHistoryStats_Params',
    [
    ],
    [[0, 8],]);





/** @record */
mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryStats_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryStats_ResponseParamsSpec.$,
    'MediaHistoryStore_GetMediaHistoryStats_ResponseParams',
    [
      mojo.internal.StructField(
        'stats', 0,
        0,
        mediaHistory.mojom.MediaHistoryStatsSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryStats_ResponseParams = class {
  constructor() {
    /** @export { !mediaHistory.mojom.MediaHistoryStats } */
    this.stats;
  }
};




mojo.internal.Struct(
    mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryOriginRows_ParamsSpec.$,
    'MediaHistoryStore_GetMediaHistoryOriginRows_Params',
    [
    ],
    [[0, 8],]);





/** @record */
mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryOriginRows_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryOriginRows_ResponseParamsSpec.$,
    'MediaHistoryStore_GetMediaHistoryOriginRows_ResponseParams',
    [
      mojo.internal.StructField(
        'rows', 0,
        0,
        mojo.internal.Array(mediaHistory.mojom.MediaHistoryOriginRowSpec.$, false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryOriginRows_ResponseParams = class {
  constructor() {
    /** @export { !Array<!mediaHistory.mojom.MediaHistoryOriginRow> } */
    this.rows;
  }
};




mojo.internal.Struct(
    mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryPlaybackRows_ParamsSpec.$,
    'MediaHistoryStore_GetMediaHistoryPlaybackRows_Params',
    [
    ],
    [[0, 8],]);





/** @record */
mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryPlaybackRows_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryPlaybackRows_ResponseParamsSpec.$,
    'MediaHistoryStore_GetMediaHistoryPlaybackRows_ResponseParams',
    [
      mojo.internal.StructField(
        'rows', 0,
        0,
        mojo.internal.Array(mediaHistory.mojom.MediaHistoryPlaybackRowSpec.$, false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryPlaybackRows_ResponseParams = class {
  constructor() {
    /** @export { !Array<!mediaHistory.mojom.MediaHistoryPlaybackRow> } */
    this.rows;
  }
};




mojo.internal.Struct(
    mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryPlaybackSessionRows_ParamsSpec.$,
    'MediaHistoryStore_GetMediaHistoryPlaybackSessionRows_Params',
    [
    ],
    [[0, 8],]);





/** @record */
mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryPlaybackSessionRows_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryPlaybackSessionRows_ResponseParamsSpec.$,
    'MediaHistoryStore_GetMediaHistoryPlaybackSessionRows_ResponseParams',
    [
      mojo.internal.StructField(
        'rows', 0,
        0,
        mojo.internal.Array(mediaHistory.mojom.MediaHistoryPlaybackSessionRowSpec.$, false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);





/** @record */
mediaHistory.mojom.MediaHistoryStore_GetMediaHistoryPlaybackSessionRows_ResponseParams = class {
  constructor() {
    /** @export { !Array<!mediaHistory.mojom.MediaHistoryPlaybackSessionRow> } */
    this.rows;
  }
};


