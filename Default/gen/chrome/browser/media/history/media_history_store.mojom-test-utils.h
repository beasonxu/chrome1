// chrome/browser/media/history/media_history_store.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CHROME_BROWSER_MEDIA_HISTORY_MEDIA_HISTORY_STORE_MOJOM_TEST_UTILS_H_
#define CHROME_BROWSER_MEDIA_HISTORY_MEDIA_HISTORY_STORE_MOJOM_TEST_UTILS_H_

#include "chrome/browser/media/history/media_history_store.mojom.h"


namespace media_history {
namespace mojom {


class  MediaHistoryStoreInterceptorForTesting : public MediaHistoryStore {
  virtual MediaHistoryStore* GetForwardingInterface() = 0;
  void GetMediaHistoryStats(GetMediaHistoryStatsCallback callback) override;
  void GetMediaHistoryOriginRows(GetMediaHistoryOriginRowsCallback callback) override;
  void GetMediaHistoryPlaybackRows(GetMediaHistoryPlaybackRowsCallback callback) override;
  void GetMediaHistoryPlaybackSessionRows(GetMediaHistoryPlaybackSessionRowsCallback callback) override;
};
class  MediaHistoryStoreAsyncWaiter {
 public:
  explicit MediaHistoryStoreAsyncWaiter(MediaHistoryStore* proxy);

  MediaHistoryStoreAsyncWaiter(const MediaHistoryStoreAsyncWaiter&) = delete;
  MediaHistoryStoreAsyncWaiter& operator=(const MediaHistoryStoreAsyncWaiter&) = delete;

  ~MediaHistoryStoreAsyncWaiter();
  void GetMediaHistoryStats(
      MediaHistoryStatsPtr* out_stats);
  void GetMediaHistoryOriginRows(
      std::vector<MediaHistoryOriginRowPtr>* out_rows);
  void GetMediaHistoryPlaybackRows(
      std::vector<MediaHistoryPlaybackRowPtr>* out_rows);
  void GetMediaHistoryPlaybackSessionRows(
      std::vector<MediaHistoryPlaybackSessionRowPtr>* out_rows);

 private:
  MediaHistoryStore* const proxy_;
};




}  // namespace mojom
}  // namespace media_history

#endif  // CHROME_BROWSER_MEDIA_HISTORY_MEDIA_HISTORY_STORE_MOJOM_TEST_UTILS_H_