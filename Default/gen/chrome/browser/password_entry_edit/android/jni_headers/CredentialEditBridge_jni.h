// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/password_entry_edit/CredentialEditBridge

#ifndef org_chromium_chrome_browser_password_entry_edit_CredentialEditBridge_JNI
#define org_chromium_chrome_browser_password_entry_edit_CredentialEditBridge_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge[];
const char kClassPath_org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge[] =
    "org/chromium/chrome/browser/password_entry_edit/CredentialEditBridge";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge_clazz(nullptr);
#ifndef org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge_clazz_defined
#define org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge_clazz_defined
inline jclass org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge,
      &g_org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
JNI_GENERATOR_EXPORT void Java_J_N_MGXq90Cw(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeCredentialEditBridge) {
  CredentialEditBridge* native =
      reinterpret_cast<CredentialEditBridge*>(nativeCredentialEditBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetCredential");
  return native->GetCredential(env);
}

JNI_GENERATOR_EXPORT void Java_J_N_MxEiaAZZ(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeCredentialEditBridge) {
  CredentialEditBridge* native =
      reinterpret_cast<CredentialEditBridge*>(nativeCredentialEditBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetExistingUsernames");
  return native->GetExistingUsernames(env);
}

JNI_GENERATOR_EXPORT void Java_J_N_MXvicdfl(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeCredentialEditBridge,
    jstring username,
    jstring password) {
  CredentialEditBridge* native =
      reinterpret_cast<CredentialEditBridge*>(nativeCredentialEditBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "SaveChanges");
  return native->SaveChanges(env, base::android::JavaParamRef<jstring>(env, username),
      base::android::JavaParamRef<jstring>(env, password));
}

JNI_GENERATOR_EXPORT void Java_J_N_MAcoX59m(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeCredentialEditBridge) {
  CredentialEditBridge* native =
      reinterpret_cast<CredentialEditBridge*>(nativeCredentialEditBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "DeleteCredential");
  return native->DeleteCredential(env);
}

JNI_GENERATOR_EXPORT void Java_J_N_MtW4Yizq(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeCredentialEditBridge) {
  CredentialEditBridge* native =
      reinterpret_cast<CredentialEditBridge*>(nativeCredentialEditBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnUIDismissed");
  return native->OnUIDismissed(env);
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge_maybeCreate(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_CredentialEditBridge_maybeCreate(JNIEnv* env)
    {
  jclass clazz = org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "maybeCreate",
          "()Lorg/chromium/chrome/browser/password_entry_edit/CredentialEditBridge;",
          &g_org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge_maybeCreate);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge_initAndLaunchUi(nullptr);
static void Java_CredentialEditBridge_initAndLaunchUi(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, jlong nativeCredentialEditBridge,
    const base::android::JavaRef<jobject>& context,
    const base::android::JavaRef<jobject>& settingsLauncher,
    jboolean isBlockedCredential,
    jboolean isFederatedCredential) {
  jclass clazz = org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "initAndLaunchUi",
"(JLandroid/content/Context;Lorg/chromium/components/browser_ui/settings/SettingsLauncher;ZZ)V",
&g_org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge_initAndLaunchUi);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, nativeCredentialEditBridge, context.obj(),
              settingsLauncher.obj(), isBlockedCredential, isFederatedCredential);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge_setCredential(nullptr);
static void Java_CredentialEditBridge_setCredential(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>&
    displayUrlOrAppName,
    const base::android::JavaRef<jstring>& username,
    const base::android::JavaRef<jstring>& password,
    const base::android::JavaRef<jstring>& displayFederationOrigin,
    jboolean isInsecureCredential) {
  jclass clazz = org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setCredential",
          "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V",
          &g_org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge_setCredential);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, displayUrlOrAppName.obj(), username.obj(), password.obj(),
              displayFederationOrigin.obj(), isInsecureCredential);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge_setExistingUsernames(nullptr);
static void Java_CredentialEditBridge_setExistingUsernames(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobjectArray>&
    existingUsernames) {
  jclass clazz = org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setExistingUsernames",
          "([Ljava/lang/String;)V",
&g_org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge_setExistingUsernames);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, existingUsernames.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge_destroy(nullptr);
static void Java_CredentialEditBridge_destroy(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz = org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "destroy",
          "()V",
          &g_org_chromium_chrome_browser_password_1entry_1edit_CredentialEditBridge_destroy);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

#endif  // org_chromium_chrome_browser_password_entry_edit_CredentialEditBridge_JNI
