// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/profiles/ProfileResolver

#ifndef org_chromium_chrome_browser_profiles_ProfileResolver_JNI
#define org_chromium_chrome_browser_profiles_ProfileResolver_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace profile_resolver {

static base::android::ScopedJavaLocalRef<jstring> JNI_ProfileResolver_TokenizeProfile(JNIEnv* env,
    const base::android::JavaParamRef<jobject>& profile);

JNI_GENERATOR_EXPORT jstring Java_J_N_MLsODual(
    JNIEnv* env,
    jclass jcaller,
    jobject profile) {
  return JNI_ProfileResolver_TokenizeProfile(env, base::android::JavaParamRef<jobject>(env,
      profile)).Release();
}

static base::android::ScopedJavaLocalRef<jstring> JNI_ProfileResolver_TokenizeProfileKey(JNIEnv*
    env, const base::android::JavaParamRef<jobject>& profileKey);

JNI_GENERATOR_EXPORT jstring Java_J_N_MaWPa9di(
    JNIEnv* env,
    jclass jcaller,
    jobject profileKey) {
  return JNI_ProfileResolver_TokenizeProfileKey(env, base::android::JavaParamRef<jobject>(env,
      profileKey)).Release();
}

static void JNI_ProfileResolver_ResolveProfile(JNIEnv* env, const
    base::android::JavaParamRef<jstring>& token,
    const base::android::JavaParamRef<jobject>& callback);

JNI_GENERATOR_EXPORT void Java_J_N_MOyjuP2V(
    JNIEnv* env,
    jclass jcaller,
    jstring token,
    jobject callback) {
  return JNI_ProfileResolver_ResolveProfile(env, base::android::JavaParamRef<jstring>(env, token),
      base::android::JavaParamRef<jobject>(env, callback));
}

static void JNI_ProfileResolver_ResolveProfileKey(JNIEnv* env, const
    base::android::JavaParamRef<jstring>& token,
    const base::android::JavaParamRef<jobject>& callback);

JNI_GENERATOR_EXPORT void Java_J_N_Ms0INebZ(
    JNIEnv* env,
    jclass jcaller,
    jstring token,
    jobject callback) {
  return JNI_ProfileResolver_ResolveProfileKey(env, base::android::JavaParamRef<jstring>(env,
      token), base::android::JavaParamRef<jobject>(env, callback));
}


}  // namespace profile_resolver

#endif  // org_chromium_chrome_browser_profiles_ProfileResolver_JNI
