// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/download/DownloadManagerBridge

#ifndef org_chromium_chrome_browser_download_DownloadManagerBridge_JNI
#define org_chromium_chrome_browser_download_DownloadManagerBridge_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_download_DownloadManagerBridge[];
const char kClassPath_org_chromium_chrome_browser_download_DownloadManagerBridge[] =
    "org/chromium/chrome/browser/download/DownloadManagerBridge";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_download_DownloadManagerBridge_clazz(nullptr);
#ifndef org_chromium_chrome_browser_download_DownloadManagerBridge_clazz_defined
#define org_chromium_chrome_browser_download_DownloadManagerBridge_clazz_defined
inline jclass org_chromium_chrome_browser_download_DownloadManagerBridge_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_download_DownloadManagerBridge,
      &g_org_chromium_chrome_browser_download_DownloadManagerBridge_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
static void JNI_DownloadManagerBridge_OnAddCompletedDownloadDone(JNIEnv* env, jlong callbackId,
    jlong downloadId);

JNI_GENERATOR_EXPORT void Java_J_N_Mct0JWyi(
    JNIEnv* env,
    jclass jcaller,
    jlong callbackId,
    jlong downloadId) {
  return JNI_DownloadManagerBridge_OnAddCompletedDownloadDone(env, callbackId, downloadId);
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_download_DownloadManagerBridge_removeCompletedDownload(nullptr);
static void Java_DownloadManagerBridge_removeCompletedDownload(JNIEnv* env, const
    base::android::JavaRef<jstring>& downloadGuid,
    jboolean externallyRemoved) {
  jclass clazz = org_chromium_chrome_browser_download_DownloadManagerBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_download_DownloadManagerBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "removeCompletedDownload",
          "(Ljava/lang/String;Z)V",
          &g_org_chromium_chrome_browser_download_DownloadManagerBridge_removeCompletedDownload);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, downloadGuid.obj(), externallyRemoved);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_download_DownloadManagerBridge_addCompletedDownload(nullptr);
static void Java_DownloadManagerBridge_addCompletedDownload(JNIEnv* env, const
    base::android::JavaRef<jstring>& fileName,
    const base::android::JavaRef<jstring>& description,
    const base::android::JavaRef<jstring>& originalMimeType,
    const base::android::JavaRef<jstring>& filePath,
    jlong fileSizeBytes,
    const base::android::JavaRef<jstring>& originalUrl,
    const base::android::JavaRef<jstring>& referrer,
    const base::android::JavaRef<jstring>& downloadGuid,
    jlong callbackId) {
  jclass clazz = org_chromium_chrome_browser_download_DownloadManagerBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_download_DownloadManagerBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "addCompletedDownload",
"(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V",
          &g_org_chromium_chrome_browser_download_DownloadManagerBridge_addCompletedDownload);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, fileName.obj(), description.obj(), originalMimeType.obj(),
              filePath.obj(), fileSizeBytes, originalUrl.obj(), referrer.obj(), downloadGuid.obj(),
              callbackId);
}

#endif  // org_chromium_chrome_browser_download_DownloadManagerBridge_JNI
