// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/password_check/CompromisedCredential

#ifndef org_chromium_chrome_browser_password_check_CompromisedCredential_JNI
#define org_chromium_chrome_browser_password_check_CompromisedCredential_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_password_1check_CompromisedCredential[];
const char kClassPath_org_chromium_chrome_browser_password_1check_CompromisedCredential[] =
    "org/chromium/chrome/browser/password_check/CompromisedCredential";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_password_1check_CompromisedCredential_clazz(nullptr);
#ifndef org_chromium_chrome_browser_password_1check_CompromisedCredential_clazz_defined
#define org_chromium_chrome_browser_password_1check_CompromisedCredential_clazz_defined
inline jclass org_chromium_chrome_browser_password_1check_CompromisedCredential_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_password_1check_CompromisedCredential,
      &g_org_chromium_chrome_browser_password_1check_CompromisedCredential_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1check_CompromisedCredential_getSignonRealm(nullptr);
static base::android::ScopedJavaLocalRef<jstring> Java_CompromisedCredential_getSignonRealm(JNIEnv*
    env, const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_chrome_browser_password_1check_CompromisedCredential_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_password_1check_CompromisedCredential_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getSignonRealm",
          "()Ljava/lang/String;",
          &g_org_chromium_chrome_browser_password_1check_CompromisedCredential_getSignonRealm);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1check_CompromisedCredential_getUsername(nullptr);
static base::android::ScopedJavaLocalRef<jstring> Java_CompromisedCredential_getUsername(JNIEnv*
    env, const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_chrome_browser_password_1check_CompromisedCredential_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_password_1check_CompromisedCredential_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getUsername",
          "()Ljava/lang/String;",
          &g_org_chromium_chrome_browser_password_1check_CompromisedCredential_getUsername);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1check_CompromisedCredential_getAssociatedUrl(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_CompromisedCredential_getAssociatedUrl(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz = org_chromium_chrome_browser_password_1check_CompromisedCredential_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_password_1check_CompromisedCredential_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getAssociatedUrl",
          "()Lorg/chromium/url/GURL;",
          &g_org_chromium_chrome_browser_password_1check_CompromisedCredential_getAssociatedUrl);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1check_CompromisedCredential_getPassword(nullptr);
static base::android::ScopedJavaLocalRef<jstring> Java_CompromisedCredential_getPassword(JNIEnv*
    env, const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_chrome_browser_password_1check_CompromisedCredential_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_password_1check_CompromisedCredential_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getPassword",
          "()Ljava/lang/String;",
          &g_org_chromium_chrome_browser_password_1check_CompromisedCredential_getPassword);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1check_CompromisedCredential_getLastUsedTime(nullptr);
static jlong Java_CompromisedCredential_getLastUsedTime(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_chrome_browser_password_1check_CompromisedCredential_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_password_1check_CompromisedCredential_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getLastUsedTime",
          "()J",
          &g_org_chromium_chrome_browser_password_1check_CompromisedCredential_getLastUsedTime);

  jlong ret =
      env->CallLongMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

#endif  // org_chromium_chrome_browser_password_check_CompromisedCredential_JNI
