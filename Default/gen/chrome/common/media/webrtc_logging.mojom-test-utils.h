// chrome/common/media/webrtc_logging.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CHROME_COMMON_MEDIA_WEBRTC_LOGGING_MOJOM_TEST_UTILS_H_
#define CHROME_COMMON_MEDIA_WEBRTC_LOGGING_MOJOM_TEST_UTILS_H_

#include "chrome/common/media/webrtc_logging.mojom.h"


namespace chrome {
namespace mojom {


class  WebRtcLoggingClientInterceptorForTesting : public WebRtcLoggingClient {
  virtual WebRtcLoggingClient* GetForwardingInterface() = 0;
  void OnAddMessages(std::vector<WebRtcLoggingMessagePtr> messages) override;
  void OnStopped() override;
};
class  WebRtcLoggingClientAsyncWaiter {
 public:
  explicit WebRtcLoggingClientAsyncWaiter(WebRtcLoggingClient* proxy);

  WebRtcLoggingClientAsyncWaiter(const WebRtcLoggingClientAsyncWaiter&) = delete;
  WebRtcLoggingClientAsyncWaiter& operator=(const WebRtcLoggingClientAsyncWaiter&) = delete;

  ~WebRtcLoggingClientAsyncWaiter();

 private:
  WebRtcLoggingClient* const proxy_;
};


class  WebRtcLoggingAgentInterceptorForTesting : public WebRtcLoggingAgent {
  virtual WebRtcLoggingAgent* GetForwardingInterface() = 0;
  void Start(::mojo::PendingRemote<WebRtcLoggingClient> client) override;
  void Stop() override;
};
class  WebRtcLoggingAgentAsyncWaiter {
 public:
  explicit WebRtcLoggingAgentAsyncWaiter(WebRtcLoggingAgent* proxy);

  WebRtcLoggingAgentAsyncWaiter(const WebRtcLoggingAgentAsyncWaiter&) = delete;
  WebRtcLoggingAgentAsyncWaiter& operator=(const WebRtcLoggingAgentAsyncWaiter&) = delete;

  ~WebRtcLoggingAgentAsyncWaiter();

 private:
  WebRtcLoggingAgent* const proxy_;
};




}  // namespace mojom
}  // namespace chrome

#endif  // CHROME_COMMON_MEDIA_WEBRTC_LOGGING_MOJOM_TEST_UTILS_H_