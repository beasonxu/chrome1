// chrome/common/cart/commerce_hints.mojom-shared.cc is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#include "chrome/common/cart/commerce_hints.mojom-shared.h"

// Used to support stream output operator for enums.
// TODO(dcheng): Consider omitting this somehow if not needed.
#include <ostream>
#include <utility>

#include "base/strings/stringprintf.h"
#include "mojo/public/cpp/bindings/lib/validate_params.h"
#include "mojo/public/cpp/bindings/lib/validation_errors.h"
#include "mojo/public/cpp/bindings/lib/validation_util.h"
#include "third_party/perfetto/include/perfetto/tracing/traced_value.h"

#include "chrome/common/cart/commerce_hints.mojom-params-data.h"
namespace cart {
namespace mojom {

namespace internal {


// static
bool Product_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 32, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const Product_Data* object =
      static_cast<const Product_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->image_url, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->image_url, validation_context))
    return false;

  if (!mojo::internal::ValidatePointerNonNullable(
          object->name, 2, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams name_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->name, validation_context,
                                         &name_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->product_id, 3, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams product_id_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->product_id, validation_context,
                                         &product_id_validate_params)) {
    return false;
  }

  return true;
}

Product_Data::Product_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool Heuristics_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 32, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const Heuristics_Data* object =
      static_cast<const Heuristics_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->version_number, 1, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams version_number_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->version_number, validation_context,
                                         &version_number_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->hint_json_data, 2, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams hint_json_data_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->hint_json_data, validation_context,
                                         &hint_json_data_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->global_json_data, 3, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams global_json_data_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->global_json_data, validation_context,
                                         &global_json_data_validate_params)) {
    return false;
  }

  return true;
}

Heuristics_Data::Heuristics_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool CommerceHintObserver_OnAddToCart_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 24, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const CommerceHintObserver_OnAddToCart_Params_Data* object =
      static_cast<const CommerceHintObserver_OnAddToCart_Params_Data*>(data);

  if (!mojo::internal::ValidateStruct(object->cart_url, validation_context))
    return false;

  if (!mojo::internal::ValidatePointerNonNullable(
          object->product_id, 2, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams product_id_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->product_id, validation_context,
                                         &product_id_validate_params)) {
    return false;
  }

  return true;
}

CommerceHintObserver_OnAddToCart_Params_Data::CommerceHintObserver_OnAddToCart_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool CommerceHintObserver_OnVisitCart_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const CommerceHintObserver_OnVisitCart_Params_Data* object =
      static_cast<const CommerceHintObserver_OnVisitCart_Params_Data*>(data);

  return true;
}

CommerceHintObserver_OnVisitCart_Params_Data::CommerceHintObserver_OnVisitCart_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool CommerceHintObserver_OnCartProductUpdated_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const CommerceHintObserver_OnCartProductUpdated_Params_Data* object =
      static_cast<const CommerceHintObserver_OnCartProductUpdated_Params_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->products, 1, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams products_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->products, validation_context,
                                         &products_validate_params)) {
    return false;
  }

  return true;
}

CommerceHintObserver_OnCartProductUpdated_Params_Data::CommerceHintObserver_OnCartProductUpdated_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool CommerceHintObserver_OnVisitCheckout_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const CommerceHintObserver_OnVisitCheckout_Params_Data* object =
      static_cast<const CommerceHintObserver_OnVisitCheckout_Params_Data*>(data);

  return true;
}

CommerceHintObserver_OnVisitCheckout_Params_Data::CommerceHintObserver_OnVisitCheckout_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool CommerceHintObserver_OnPurchase_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const CommerceHintObserver_OnPurchase_Params_Data* object =
      static_cast<const CommerceHintObserver_OnPurchase_Params_Data*>(data);

  return true;
}

CommerceHintObserver_OnPurchase_Params_Data::CommerceHintObserver_OnPurchase_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool CommerceHintObserver_OnFormSubmit_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const CommerceHintObserver_OnFormSubmit_Params_Data* object =
      static_cast<const CommerceHintObserver_OnFormSubmit_Params_Data*>(data);

  return true;
}

CommerceHintObserver_OnFormSubmit_Params_Data::CommerceHintObserver_OnFormSubmit_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool CommerceHintObserver_OnWillSendRequest_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const CommerceHintObserver_OnWillSendRequest_Params_Data* object =
      static_cast<const CommerceHintObserver_OnWillSendRequest_Params_Data*>(data);

  return true;
}

CommerceHintObserver_OnWillSendRequest_Params_Data::CommerceHintObserver_OnWillSendRequest_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool CommerceHintObserver_OnNavigation_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 24, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const CommerceHintObserver_OnNavigation_Params_Data* object =
      static_cast<const CommerceHintObserver_OnNavigation_Params_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->url, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->url, validation_context))
    return false;

  if (!mojo::internal::ValidatePointerNonNullable(
          object->version_number, 2, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams version_number_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->version_number, validation_context,
                                         &version_number_validate_params)) {
    return false;
  }

  return true;
}

CommerceHintObserver_OnNavigation_Params_Data::CommerceHintObserver_OnNavigation_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool CommerceHintObserver_OnNavigation_ResponseParams_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 24, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const CommerceHintObserver_OnNavigation_ResponseParams_Data* object =
      static_cast<const CommerceHintObserver_OnNavigation_ResponseParams_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->heuristics, 2, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->heuristics, validation_context))
    return false;

  return true;
}

CommerceHintObserver_OnNavigation_ResponseParams_Data::CommerceHintObserver_OnNavigation_ResponseParams_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool CommerceHintObserver_OnCartExtraction_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const CommerceHintObserver_OnCartExtraction_Params_Data* object =
      static_cast<const CommerceHintObserver_OnCartExtraction_Params_Data*>(data);

  return true;
}

CommerceHintObserver_OnCartExtraction_Params_Data::CommerceHintObserver_OnCartExtraction_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool CommerceHintObserver_OnCartExtraction_ResponseParams_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 24, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const CommerceHintObserver_OnCartExtraction_ResponseParams_Data* object =
      static_cast<const CommerceHintObserver_OnCartExtraction_ResponseParams_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->product_id_json, 1, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams product_id_json_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->product_id_json, validation_context,
                                         &product_id_json_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->cart_extraction_script, 2, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams cart_extraction_script_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->cart_extraction_script, validation_context,
                                         &cart_extraction_script_validate_params)) {
    return false;
  }

  return true;
}

CommerceHintObserver_OnCartExtraction_ResponseParams_Data::CommerceHintObserver_OnCartExtraction_ResponseParams_Data()
    : header_({sizeof(*this), 0}) {}

}  // namespace internal
}  // namespace mojom
}  // namespace cart