// chrome/common/search/search.mojom-shared.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CHROME_COMMON_SEARCH_SEARCH_MOJOM_SHARED_H_
#define CHROME_COMMON_SEARCH_SEARCH_MOJOM_SHARED_H_

#include <stdint.h>

#include <functional>
#include <iosfwd>
#include <type_traits>
#include <utility>
#include "mojo/public/cpp/bindings/array_data_view.h"
#include "mojo/public/cpp/bindings/enum_traits.h"
#include "mojo/public/cpp/bindings/interface_data_view.h"
#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/serialization.h"
#include "mojo/public/cpp/bindings/map_data_view.h"
#include "mojo/public/cpp/bindings/string_data_view.h"

#include "third_party/perfetto/include/perfetto/tracing/traced_value_forward.h"

#include "chrome/common/search/search.mojom-shared-internal.h"
#include "mojo/public/mojom/base/string16.mojom-shared.h"
#include "mojo/public/mojom/base/time.mojom-shared.h"
#include "url/mojom/url.mojom-shared.h"
#include "mojo/public/cpp/bindings/lib/interface_serialization.h"


#include "mojo/public/cpp/bindings/native_enum.h"
#include "mojo/public/cpp/bindings/lib/native_struct_serialization.h"




namespace search {
namespace mojom {
using NTPTileImpressionDataView = mojo::native::NativeStructDataView;

using InstantMostVisitedInfoDataView = mojo::native::NativeStructDataView;

using NtpThemeDataView = mojo::native::NativeStructDataView;



}  // namespace mojom
}  // namespace search

namespace mojo {
namespace internal {

}  // namespace internal
}  // namespace mojo


namespace search {
namespace mojom {
using NTPLoggingEventType = mojo::NativeEnum;
using OmniboxFocusState = mojo::NativeEnum;
using OmniboxFocusChangeReason = mojo::NativeEnum;
// Interface base classes. They are used for type safety check.
class EmbeddedSearchConnectorInterfaceBase {};

using EmbeddedSearchConnectorPtrDataView =
    mojo::InterfacePtrDataView<EmbeddedSearchConnectorInterfaceBase>;
using EmbeddedSearchConnectorRequestDataView =
    mojo::InterfaceRequestDataView<EmbeddedSearchConnectorInterfaceBase>;
using EmbeddedSearchConnectorAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<EmbeddedSearchConnectorInterfaceBase>;
using EmbeddedSearchConnectorAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<EmbeddedSearchConnectorInterfaceBase>;
class EmbeddedSearchInterfaceBase {};

using EmbeddedSearchPtrDataView =
    mojo::InterfacePtrDataView<EmbeddedSearchInterfaceBase>;
using EmbeddedSearchRequestDataView =
    mojo::InterfaceRequestDataView<EmbeddedSearchInterfaceBase>;
using EmbeddedSearchAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<EmbeddedSearchInterfaceBase>;
using EmbeddedSearchAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<EmbeddedSearchInterfaceBase>;
class EmbeddedSearchClientInterfaceBase {};

using EmbeddedSearchClientPtrDataView =
    mojo::InterfacePtrDataView<EmbeddedSearchClientInterfaceBase>;
using EmbeddedSearchClientRequestDataView =
    mojo::InterfaceRequestDataView<EmbeddedSearchClientInterfaceBase>;
using EmbeddedSearchClientAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<EmbeddedSearchClientInterfaceBase>;
using EmbeddedSearchClientAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<EmbeddedSearchClientInterfaceBase>;


}  // namespace mojom
}  // namespace search

namespace std {

}  // namespace std

namespace mojo {

}  // namespace mojo


namespace search {
namespace mojom {


}  // namespace mojom
}  // namespace search

// Declare TraceFormatTraits for enums, which should be defined in ::perfetto
// namespace.

#endif  // CHROME_COMMON_SEARCH_SEARCH_MOJOM_SHARED_H_