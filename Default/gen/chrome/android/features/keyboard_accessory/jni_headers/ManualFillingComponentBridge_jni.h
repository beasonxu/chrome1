// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/keyboard_accessory/ManualFillingComponentBridge

#ifndef org_chromium_chrome_browser_keyboard_accessory_ManualFillingComponentBridge_JNI
#define org_chromium_chrome_browser_keyboard_accessory_ManualFillingComponentBridge_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge[];
const char kClassPath_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge[]
    = "org/chromium/chrome/browser/keyboard_accessory/ManualFillingComponentBridge";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(nullptr);
#ifndef org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz_defined
#define org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz_defined
inline jclass
    org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(JNIEnv* env)
    {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge,
      &g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
JNI_GENERATOR_EXPORT void Java_J_N_M6ME2_00024pd(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeManualFillingViewAndroid,
    jobject caller,
    jint tabType,
    jobject userInfoField) {
  ManualFillingViewAndroid* native =
      reinterpret_cast<ManualFillingViewAndroid*>(nativeManualFillingViewAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnFillingTriggered");
  return native->OnFillingTriggered(env, base::android::JavaParamRef<jobject>(env, caller), tabType,
      base::android::JavaParamRef<jobject>(env, userInfoField));
}

JNI_GENERATOR_EXPORT void Java_J_N_MmIaCnPe(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeManualFillingViewAndroid,
    jobject caller,
    jint accessoryAction) {
  ManualFillingViewAndroid* native =
      reinterpret_cast<ManualFillingViewAndroid*>(nativeManualFillingViewAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnOptionSelected");
  return native->OnOptionSelected(env, base::android::JavaParamRef<jobject>(env, caller),
      accessoryAction);
}

JNI_GENERATOR_EXPORT void Java_J_N_M2tSygph(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeManualFillingViewAndroid,
    jobject caller,
    jint accessoryAction,
    jboolean enabled) {
  ManualFillingViewAndroid* native =
      reinterpret_cast<ManualFillingViewAndroid*>(nativeManualFillingViewAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnToggleChanged");
  return native->OnToggleChanged(env, base::android::JavaParamRef<jobject>(env, caller),
      accessoryAction, enabled);
}

JNI_GENERATOR_EXPORT void Java_J_N_MVOJP_19v(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeManualFillingViewAndroid,
    jobject caller) {
  ManualFillingViewAndroid* native =
      reinterpret_cast<ManualFillingViewAndroid*>(nativeManualFillingViewAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnViewDestroyed");
  return native->OnViewDestroyed(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT void Java_J_N_M9_00024J39PI(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeManualFillingViewAndroid,
    jobject caller,
    jint sheetType) {
  ManualFillingViewAndroid* native =
      reinterpret_cast<ManualFillingViewAndroid*>(nativeManualFillingViewAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "RequestAccessorySheet");
  return native->RequestAccessorySheet(env, base::android::JavaParamRef<jobject>(env, caller),
      sheetType);
}

static void JNI_ManualFillingComponentBridge_CachePasswordSheetDataForTesting(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& webContents,
    const base::android::JavaParamRef<jobjectArray>& userNames,
    const base::android::JavaParamRef<jobjectArray>& passwords,
    jboolean originDenylisted);

JNI_GENERATOR_EXPORT void Java_J_N_MRuf_1fQM_1ForTesting(
    JNIEnv* env,
    jclass jcaller,
    jobject webContents,
    jobjectArray userNames,
    jobjectArray passwords,
    jboolean originDenylisted) {
  return JNI_ManualFillingComponentBridge_CachePasswordSheetDataForTesting(env,
      base::android::JavaParamRef<jobject>(env, webContents),
      base::android::JavaParamRef<jobjectArray>(env, userNames),
      base::android::JavaParamRef<jobjectArray>(env, passwords), originDenylisted);
}

static void JNI_ManualFillingComponentBridge_NotifyFocusedFieldTypeForTesting(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& webContents,
    jlong focusedFieldId,
    jint focusedFieldType);

JNI_GENERATOR_EXPORT void Java_J_N_Mc79dX6G_1ForTesting(
    JNIEnv* env,
    jclass jcaller,
    jobject webContents,
    jlong focusedFieldId,
    jint focusedFieldType) {
  return JNI_ManualFillingComponentBridge_NotifyFocusedFieldTypeForTesting(env,
      base::android::JavaParamRef<jobject>(env, webContents), focusedFieldId, focusedFieldType);
}

static void JNI_ManualFillingComponentBridge_SignalAutoGenerationStatusForTesting(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& webContents,
    jboolean available);

JNI_GENERATOR_EXPORT void Java_J_N_Mmx_1aaOg_1ForTesting(
    JNIEnv* env,
    jclass jcaller,
    jobject webContents,
    jboolean available) {
  return JNI_ManualFillingComponentBridge_SignalAutoGenerationStatusForTesting(env,
      base::android::JavaParamRef<jobject>(env, webContents), available);
}

static void JNI_ManualFillingComponentBridge_DisableServerPredictionsForTesting(JNIEnv* env);

JNI_GENERATOR_EXPORT void Java_J_N_MSkN21SK_1ForTesting(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_ManualFillingComponentBridge_DisableServerPredictionsForTesting(env);
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_create(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_ManualFillingComponentBridge_create(JNIEnv*
    env, jlong nativeView,
    const base::android::JavaRef<jobject>& windowAndroid,
    const base::android::JavaRef<jobject>& webContents) {
  jclass clazz =
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "create",
"(JLorg/chromium/ui/base/WindowAndroid;Lorg/chromium/content_public/browser/WebContents;)Lorg/chromium/chrome/browser/keyboard_accessory/ManualFillingComponentBridge;",
          &g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_create);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, nativeView, windowAndroid.obj(), webContents.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_onItemsAvailable(nullptr);
static void Java_ManualFillingComponentBridge_onItemsAvailable(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>&
    objAccessorySheetData) {
  jclass clazz =
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onItemsAvailable",
          "(Ljava/lang/Object;)V",
&g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_onItemsAvailable);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, objAccessorySheetData.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_onAutomaticGenerationStatusChanged(nullptr);
static void Java_ManualFillingComponentBridge_onAutomaticGenerationStatusChanged(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, jboolean available) {
  jclass clazz =
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onAutomaticGenerationStatusChanged",
          "(Z)V",
&g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_onAutomaticGenerationStatusChanged);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, available);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_showWhenKeyboardIsVisible(nullptr);
static void Java_ManualFillingComponentBridge_showWhenKeyboardIsVisible(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "showWhenKeyboardIsVisible",
          "()V",
&g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_showWhenKeyboardIsVisible);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_hide(nullptr);
static void Java_ManualFillingComponentBridge_hide(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "hide",
          "()V",
          &g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_hide);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_closeAccessorySheet(nullptr);
static void Java_ManualFillingComponentBridge_closeAccessorySheet(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "closeAccessorySheet",
          "()V",
&g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_closeAccessorySheet);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_swapSheetWithKeyboard(nullptr);
static void Java_ManualFillingComponentBridge_swapSheetWithKeyboard(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "swapSheetWithKeyboard",
          "()V",
&g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_swapSheetWithKeyboard);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_destroy(nullptr);
static void Java_ManualFillingComponentBridge_destroy(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "destroy",
          "()V",
          &g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_destroy);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_createAccessorySheetData(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_ManualFillingComponentBridge_createAccessorySheetData(JNIEnv* env, JniIntWrapper type,
    const base::android::JavaRef<jstring>& title,
    const base::android::JavaRef<jstring>& warning) {
  jclass clazz =
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createAccessorySheetData",
          "(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/Object;",
&g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_createAccessorySheetData);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, as_jint(type), title.obj(), warning.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_showAccessorySheetTab(nullptr);
static void Java_ManualFillingComponentBridge_showAccessorySheetTab(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper tabType) {
  jclass clazz =
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "showAccessorySheetTab",
          "(I)V",
&g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_showAccessorySheetTab);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(tabType));
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_addOptionToggleToAccessorySheetData(nullptr);
static void Java_ManualFillingComponentBridge_addOptionToggleToAccessorySheetData(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>&
    objAccessorySheetData,
    const base::android::JavaRef<jstring>& displayText,
    jboolean enabled,
    JniIntWrapper accessoryAction) {
  jclass clazz =
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "addOptionToggleToAccessorySheetData",
          "(Ljava/lang/Object;Ljava/lang/String;ZI)V",
&g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_addOptionToggleToAccessorySheetData);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, objAccessorySheetData.obj(), displayText.obj(), enabled,
              as_jint(accessoryAction));
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_addUserInfoToAccessorySheetData(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_ManualFillingComponentBridge_addUserInfoToAccessorySheetData(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>&
    objAccessorySheetData,
    const base::android::JavaRef<jstring>& origin,
    jboolean isExactMatch,
    const base::android::JavaRef<jobject>& iconUrl) {
  jclass clazz =
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "addUserInfoToAccessorySheetData",
          "(Ljava/lang/Object;Ljava/lang/String;ZLorg/chromium/url/GURL;)Ljava/lang/Object;",
&g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_addUserInfoToAccessorySheetData);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id, objAccessorySheetData.obj(), origin.obj(), isExactMatch,
              iconUrl.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_addFieldToUserInfo(nullptr);
static void Java_ManualFillingComponentBridge_addFieldToUserInfo(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>& objUserInfo,
    JniIntWrapper sheetType,
    const base::android::JavaRef<jstring>& displayText,
    const base::android::JavaRef<jstring>& textToFill,
    const base::android::JavaRef<jstring>& a11yDescription,
    const base::android::JavaRef<jstring>& guid,
    jboolean isObfuscated,
    jboolean selectable) {
  jclass clazz =
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "addFieldToUserInfo",
"(Ljava/lang/Object;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V",
&g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_addFieldToUserInfo);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, objUserInfo.obj(), as_jint(sheetType), displayText.obj(),
              textToFill.obj(), a11yDescription.obj(), guid.obj(), isObfuscated, selectable);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_addPromoCodeInfoToAccessorySheetData(nullptr);
static void Java_ManualFillingComponentBridge_addPromoCodeInfoToAccessorySheetData(JNIEnv* env,
    const base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>&
    objAccessorySheetData,
    JniIntWrapper sheetType,
    const base::android::JavaRef<jstring>& displayText,
    const base::android::JavaRef<jstring>& textToFill,
    const base::android::JavaRef<jstring>& a11yDescription,
    const base::android::JavaRef<jstring>& guid,
    jboolean isObfuscated,
    const base::android::JavaRef<jstring>& detailsText) {
  jclass clazz =
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "addPromoCodeInfoToAccessorySheetData",
"(Ljava/lang/Object;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V",
&g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_addPromoCodeInfoToAccessorySheetData);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, objAccessorySheetData.obj(), as_jint(sheetType),
              displayText.obj(), textToFill.obj(), a11yDescription.obj(), guid.obj(), isObfuscated,
              detailsText.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_addFooterCommandToAccessorySheetData(nullptr);
static void Java_ManualFillingComponentBridge_addFooterCommandToAccessorySheetData(JNIEnv* env,
    const base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>&
    objAccessorySheetData,
    const base::android::JavaRef<jstring>& displayText,
    JniIntWrapper accessoryAction) {
  jclass clazz =
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "addFooterCommandToAccessorySheetData",
          "(Ljava/lang/Object;Ljava/lang/String;I)V",
&g_org_chromium_chrome_browser_keyboard_1accessory_ManualFillingComponentBridge_addFooterCommandToAccessorySheetData);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, objAccessorySheetData.obj(), displayText.obj(),
              as_jint(accessoryAction));
}

#endif  // org_chromium_chrome_browser_keyboard_accessory_ManualFillingComponentBridge_JNI
