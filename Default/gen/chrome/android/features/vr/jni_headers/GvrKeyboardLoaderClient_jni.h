// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/vr/keyboard/GvrKeyboardLoaderClient

#ifndef org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient_JNI
#define org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient[];
const char kClassPath_org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient[] =
    "org/chromium/chrome/browser/vr/keyboard/GvrKeyboardLoaderClient";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient_clazz(nullptr);
#ifndef org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient_clazz_defined
#define org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient_clazz_defined
inline jclass org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient, "vr",
      &g_org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace vr {


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient_loadKeyboardSDK(nullptr);
static jlong Java_GvrKeyboardLoaderClient_loadKeyboardSDK(JNIEnv* env) {
  jclass clazz = org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "loadKeyboardSDK",
          "()J",
          &g_org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient_loadKeyboardSDK);

  jlong ret =
      env->CallStaticLongMethod(clazz,
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient_closeKeyboardSDK(nullptr);
static void Java_GvrKeyboardLoaderClient_closeKeyboardSDK(JNIEnv* env, jlong handle) {
  jclass clazz = org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "closeKeyboardSDK",
          "(J)V",
          &g_org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient_closeKeyboardSDK);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, handle);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient_getContextWrapper(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_GvrKeyboardLoaderClient_getContextWrapper(JNIEnv* env) {
  jclass clazz = org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "getContextWrapper",
          "()Landroid/content/Context;",
          &g_org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient_getContextWrapper);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient_getRemoteClassLoader(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_GvrKeyboardLoaderClient_getRemoteClassLoader(JNIEnv* env) {
  jclass clazz = org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "getRemoteClassLoader",
          "()Ljava/lang/Object;",
          &g_org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient_getRemoteClassLoader);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

}  // namespace vr

#endif  // org_chromium_chrome_browser_vr_keyboard_GvrKeyboardLoaderClient_JNI
