// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/autofill/settings/AutofillProfileBridge

#ifndef org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge_JNI
#define org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge[];
const char kClassPath_org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge[] =
    "org/chromium/chrome/browser/autofill/settings/AutofillProfileBridge";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge_clazz(nullptr);
#ifndef org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge_clazz_defined
#define org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge_clazz_defined
inline jclass org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge_clazz(JNIEnv* env)
    {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge,
      &g_org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace autofill {

static base::android::ScopedJavaLocalRef<jstring>
    JNI_AutofillProfileBridge_GetDefaultCountryCode(JNIEnv* env);

JNI_GENERATOR_EXPORT jstring Java_J_N_Ml5WayPj(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_AutofillProfileBridge_GetDefaultCountryCode(env).Release();
}

static void JNI_AutofillProfileBridge_GetSupportedCountries(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& countryCodes,
    const base::android::JavaParamRef<jobject>& countryNames);

JNI_GENERATOR_EXPORT void Java_J_N_M6KwIT3h(
    JNIEnv* env,
    jclass jcaller,
    jobject countryCodes,
    jobject countryNames) {
  return JNI_AutofillProfileBridge_GetSupportedCountries(env,
      base::android::JavaParamRef<jobject>(env, countryCodes),
      base::android::JavaParamRef<jobject>(env, countryNames));
}

static void JNI_AutofillProfileBridge_GetRequiredFields(JNIEnv* env, const
    base::android::JavaParamRef<jstring>& countryCode,
    const base::android::JavaParamRef<jobject>& requiredFields);

JNI_GENERATOR_EXPORT void Java_J_N_MdAohWFG(
    JNIEnv* env,
    jclass jcaller,
    jstring countryCode,
    jobject requiredFields) {
  return JNI_AutofillProfileBridge_GetRequiredFields(env, base::android::JavaParamRef<jstring>(env,
      countryCode), base::android::JavaParamRef<jobject>(env, requiredFields));
}

static base::android::ScopedJavaLocalRef<jstring>
    JNI_AutofillProfileBridge_GetAddressUiComponents(JNIEnv* env, const
    base::android::JavaParamRef<jstring>& countryCode,
    const base::android::JavaParamRef<jstring>& languageCode,
    const base::android::JavaParamRef<jobject>& componentIds,
    const base::android::JavaParamRef<jobject>& componentNames,
    const base::android::JavaParamRef<jobject>& componentRequired,
    const base::android::JavaParamRef<jobject>& componentLengths);

JNI_GENERATOR_EXPORT jstring Java_J_N_MRFNh4wI(
    JNIEnv* env,
    jclass jcaller,
    jstring countryCode,
    jstring languageCode,
    jobject componentIds,
    jobject componentNames,
    jobject componentRequired,
    jobject componentLengths) {
  return JNI_AutofillProfileBridge_GetAddressUiComponents(env,
      base::android::JavaParamRef<jstring>(env, countryCode),
      base::android::JavaParamRef<jstring>(env, languageCode),
      base::android::JavaParamRef<jobject>(env, componentIds),
      base::android::JavaParamRef<jobject>(env, componentNames),
      base::android::JavaParamRef<jobject>(env, componentRequired),
      base::android::JavaParamRef<jobject>(env, componentLengths)).Release();
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge_stringArrayToList(nullptr);
static void Java_AutofillProfileBridge_stringArrayToList(JNIEnv* env, const
    base::android::JavaRef<jobjectArray>& array,
    const base::android::JavaRef<jobject>& list) {
  jclass clazz = org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "stringArrayToList",
          "([Ljava/lang/String;Ljava/util/List;)V",
          &g_org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge_stringArrayToList);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, array.obj(), list.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge_intArrayToList(nullptr);
static void Java_AutofillProfileBridge_intArrayToList(JNIEnv* env, const
    base::android::JavaRef<jintArray>& array,
    const base::android::JavaRef<jobject>& list) {
  jclass clazz = org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "intArrayToList",
          "([ILjava/util/List;)V",
          &g_org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge_intArrayToList);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, array.obj(), list.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge_showAutofillProfileSettings(nullptr);
static void Java_AutofillProfileBridge_showAutofillProfileSettings(JNIEnv* env, const
    base::android::JavaRef<jobject>& webContents) {
  jclass clazz = org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "showAutofillProfileSettings",
          "(Lorg/chromium/content_public/browser/WebContents;)V",
&g_org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge_showAutofillProfileSettings);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, webContents.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge_showAutofillCreditCardSettings(nullptr);
static void Java_AutofillProfileBridge_showAutofillCreditCardSettings(JNIEnv* env, const
    base::android::JavaRef<jobject>& webContents) {
  jclass clazz = org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "showAutofillCreditCardSettings",
          "(Lorg/chromium/content_public/browser/WebContents;)V",
&g_org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge_showAutofillCreditCardSettings);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, webContents.obj());
}

}  // namespace autofill

#endif  // org_chromium_chrome_browser_autofill_settings_AutofillProfileBridge_JNI
