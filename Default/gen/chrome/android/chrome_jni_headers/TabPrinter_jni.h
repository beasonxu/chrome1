// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/printing/TabPrinter

#ifndef org_chromium_chrome_browser_printing_TabPrinter_JNI
#define org_chromium_chrome_browser_printing_TabPrinter_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_printing_TabPrinter[];
const char kClassPath_org_chromium_chrome_browser_printing_TabPrinter[] =
    "org/chromium/chrome/browser/printing/TabPrinter";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_printing_TabPrinter_clazz(nullptr);
#ifndef org_chromium_chrome_browser_printing_TabPrinter_clazz_defined
#define org_chromium_chrome_browser_printing_TabPrinter_clazz_defined
inline jclass org_chromium_chrome_browser_printing_TabPrinter_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_printing_TabPrinter,
      &g_org_chromium_chrome_browser_printing_TabPrinter_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace printing {

static jboolean JNI_TabPrinter_Print(JNIEnv* env, const base::android::JavaParamRef<jobject>&
    webContents,
    jint renderProcessId,
    jint renderFrameId);

JNI_GENERATOR_EXPORT jboolean Java_J_N_MmYX7nWa(
    JNIEnv* env,
    jclass jcaller,
    jobject webContents,
    jint renderProcessId,
    jint renderFrameId) {
  return JNI_TabPrinter_Print(env, base::android::JavaParamRef<jobject>(env, webContents),
      renderProcessId, renderFrameId);
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_printing_TabPrinter_getPrintable(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_TabPrinter_getPrintable(JNIEnv* env, const
    base::android::JavaRef<jobject>& tab) {
  jclass clazz = org_chromium_chrome_browser_printing_TabPrinter_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_printing_TabPrinter_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "getPrintable",
"(Lorg/chromium/chrome/browser/tab/Tab;)Lorg/chromium/chrome/browser/printing/TabPrinter;",
          &g_org_chromium_chrome_browser_printing_TabPrinter_getPrintable);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, tab.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

}  // namespace printing

#endif  // org_chromium_chrome_browser_printing_TabPrinter_JNI
