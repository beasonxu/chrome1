// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/password_manager/AutoSigninFirstRunDialog

#ifndef org_chromium_chrome_browser_password_manager_AutoSigninFirstRunDialog_JNI
#define org_chromium_chrome_browser_password_manager_AutoSigninFirstRunDialog_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_password_1manager_AutoSigninFirstRunDialog[];
const char kClassPath_org_chromium_chrome_browser_password_1manager_AutoSigninFirstRunDialog[] =
    "org/chromium/chrome/browser/password_manager/AutoSigninFirstRunDialog";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_password_1manager_AutoSigninFirstRunDialog_clazz(nullptr);
#ifndef org_chromium_chrome_browser_password_1manager_AutoSigninFirstRunDialog_clazz_defined
#define org_chromium_chrome_browser_password_1manager_AutoSigninFirstRunDialog_clazz_defined
inline jclass org_chromium_chrome_browser_password_1manager_AutoSigninFirstRunDialog_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_password_1manager_AutoSigninFirstRunDialog,
      &g_org_chromium_chrome_browser_password_1manager_AutoSigninFirstRunDialog_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
JNI_GENERATOR_EXPORT void Java_J_N_MNvg9_00024ZU(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeAutoSigninFirstRunDialogAndroid,
    jobject caller) {
  AutoSigninFirstRunDialogAndroid* native =
      reinterpret_cast<AutoSigninFirstRunDialogAndroid*>(nativeAutoSigninFirstRunDialogAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnTurnOffClicked");
  return native->OnTurnOffClicked(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT void Java_J_N_MV90asHX(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeAutoSigninFirstRunDialogAndroid,
    jobject caller) {
  AutoSigninFirstRunDialogAndroid* native =
      reinterpret_cast<AutoSigninFirstRunDialogAndroid*>(nativeAutoSigninFirstRunDialogAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnOkClicked");
  return native->OnOkClicked(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT void Java_J_N_MTjiTA74(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeAutoSigninFirstRunDialogAndroid,
    jobject caller) {
  AutoSigninFirstRunDialogAndroid* native =
      reinterpret_cast<AutoSigninFirstRunDialogAndroid*>(nativeAutoSigninFirstRunDialogAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "Destroy");
  return native->Destroy(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT void Java_J_N_MQjsefF9(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeAutoSigninFirstRunDialogAndroid,
    jobject caller) {
  AutoSigninFirstRunDialogAndroid* native =
      reinterpret_cast<AutoSigninFirstRunDialogAndroid*>(nativeAutoSigninFirstRunDialogAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnLinkClicked");
  return native->OnLinkClicked(env, base::android::JavaParamRef<jobject>(env, caller));
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1manager_AutoSigninFirstRunDialog_createAndShowDialog(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_AutoSigninFirstRunDialog_createAndShowDialog(JNIEnv* env, const
    base::android::JavaRef<jobject>& windowAndroid,
    jlong nativeAutoSigninFirstRunDialog,
    const base::android::JavaRef<jstring>& title,
    const base::android::JavaRef<jstring>& explanation,
    JniIntWrapper explanationLinkStart,
    JniIntWrapper explanationLinkEnd,
    const base::android::JavaRef<jstring>& okButtonText,
    const base::android::JavaRef<jstring>& turnOffButtonText) {
  jclass clazz = org_chromium_chrome_browser_password_1manager_AutoSigninFirstRunDialog_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_password_1manager_AutoSigninFirstRunDialog_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createAndShowDialog",
"(Lorg/chromium/ui/base/WindowAndroid;JLjava/lang/String;Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;)Lorg/chromium/chrome/browser/password_manager/AutoSigninFirstRunDialog;",
&g_org_chromium_chrome_browser_password_1manager_AutoSigninFirstRunDialog_createAndShowDialog);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, windowAndroid.obj(), nativeAutoSigninFirstRunDialog,
              title.obj(), explanation.obj(), as_jint(explanationLinkStart),
              as_jint(explanationLinkEnd), okButtonText.obj(), turnOffButtonText.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1manager_AutoSigninFirstRunDialog_dismissDialog(nullptr);
static void Java_AutoSigninFirstRunDialog_dismissDialog(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_chrome_browser_password_1manager_AutoSigninFirstRunDialog_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_password_1manager_AutoSigninFirstRunDialog_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "dismissDialog",
          "()V",
          &g_org_chromium_chrome_browser_password_1manager_AutoSigninFirstRunDialog_dismissDialog);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

#endif  // org_chromium_chrome_browser_password_manager_AutoSigninFirstRunDialog_JNI
