// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/autofill/AutofillNameFixFlowBridge

#ifndef org_chromium_chrome_browser_autofill_AutofillNameFixFlowBridge_JNI
#define org_chromium_chrome_browser_autofill_AutofillNameFixFlowBridge_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_autofill_AutofillNameFixFlowBridge[];
const char kClassPath_org_chromium_chrome_browser_autofill_AutofillNameFixFlowBridge[] =
    "org/chromium/chrome/browser/autofill/AutofillNameFixFlowBridge";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_autofill_AutofillNameFixFlowBridge_clazz(nullptr);
#ifndef org_chromium_chrome_browser_autofill_AutofillNameFixFlowBridge_clazz_defined
#define org_chromium_chrome_browser_autofill_AutofillNameFixFlowBridge_clazz_defined
inline jclass org_chromium_chrome_browser_autofill_AutofillNameFixFlowBridge_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_autofill_AutofillNameFixFlowBridge,
      &g_org_chromium_chrome_browser_autofill_AutofillNameFixFlowBridge_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace autofill {

JNI_GENERATOR_EXPORT void Java_J_N_MriHT7LJ(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeCardNameFixFlowViewAndroid,
    jobject caller) {
  CardNameFixFlowViewAndroid* native =
      reinterpret_cast<CardNameFixFlowViewAndroid*>(nativeCardNameFixFlowViewAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "PromptDismissed");
  return native->PromptDismissed(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT void Java_J_N_MDdVATYP(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeCardNameFixFlowViewAndroid) {
  CardNameFixFlowViewAndroid* native =
      reinterpret_cast<CardNameFixFlowViewAndroid*>(nativeCardNameFixFlowViewAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnUserDismiss");
  return native->OnUserDismiss(env);
}

JNI_GENERATOR_EXPORT void Java_J_N_MW86M3Ok(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeCardNameFixFlowViewAndroid,
    jobject caller,
    jstring name) {
  CardNameFixFlowViewAndroid* native =
      reinterpret_cast<CardNameFixFlowViewAndroid*>(nativeCardNameFixFlowViewAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnUserAccept");
  return native->OnUserAccept(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, name));
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_autofill_AutofillNameFixFlowBridge_create(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_AutofillNameFixFlowBridge_create(JNIEnv* env,
    jlong nativeNameFixFlowPrompt,
    const base::android::JavaRef<jstring>& title,
    const base::android::JavaRef<jstring>& inferredName,
    const base::android::JavaRef<jstring>& confirmButtonLabel,
    JniIntWrapper iconId,
    const base::android::JavaRef<jobject>& windowAndroid) {
  jclass clazz = org_chromium_chrome_browser_autofill_AutofillNameFixFlowBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_autofill_AutofillNameFixFlowBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "create",
"(JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;ILorg/chromium/ui/base/WindowAndroid;)Lorg/chromium/chrome/browser/autofill/AutofillNameFixFlowBridge;",
          &g_org_chromium_chrome_browser_autofill_AutofillNameFixFlowBridge_create);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, nativeNameFixFlowPrompt, title.obj(), inferredName.obj(),
              confirmButtonLabel.obj(), as_jint(iconId), windowAndroid.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_autofill_AutofillNameFixFlowBridge_show(nullptr);
static void Java_AutofillNameFixFlowBridge_show(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj, const base::android::JavaRef<jobject>& windowAndroid) {
  jclass clazz = org_chromium_chrome_browser_autofill_AutofillNameFixFlowBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_autofill_AutofillNameFixFlowBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "show",
          "(Lorg/chromium/ui/base/WindowAndroid;)V",
          &g_org_chromium_chrome_browser_autofill_AutofillNameFixFlowBridge_show);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, windowAndroid.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_autofill_AutofillNameFixFlowBridge_dismiss(nullptr);
static void Java_AutofillNameFixFlowBridge_dismiss(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_chrome_browser_autofill_AutofillNameFixFlowBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_autofill_AutofillNameFixFlowBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "dismiss",
          "()V",
          &g_org_chromium_chrome_browser_autofill_AutofillNameFixFlowBridge_dismiss);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

}  // namespace autofill

#endif  // org_chromium_chrome_browser_autofill_AutofillNameFixFlowBridge_JNI
