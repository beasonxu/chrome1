// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/offlinepages/SavePageRequest

#ifndef org_chromium_chrome_browser_offlinepages_SavePageRequest_JNI
#define org_chromium_chrome_browser_offlinepages_SavePageRequest_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_offlinepages_SavePageRequest[];
const char kClassPath_org_chromium_chrome_browser_offlinepages_SavePageRequest[] =
    "org/chromium/chrome/browser/offlinepages/SavePageRequest";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_offlinepages_SavePageRequest_clazz(nullptr);
#ifndef org_chromium_chrome_browser_offlinepages_SavePageRequest_clazz_defined
#define org_chromium_chrome_browser_offlinepages_SavePageRequest_clazz_defined
inline jclass org_chromium_chrome_browser_offlinepages_SavePageRequest_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_offlinepages_SavePageRequest,
      &g_org_chromium_chrome_browser_offlinepages_SavePageRequest_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace offline_pages {
namespace android {


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_offlinepages_SavePageRequest_create(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_SavePageRequest_create(JNIEnv* env,
    JniIntWrapper state,
    jlong requestId,
    const base::android::JavaRef<jstring>& url,
    const base::android::JavaRef<jstring>& clientIdNamespace,
    const base::android::JavaRef<jstring>& clientIdId,
    const base::android::JavaRef<jstring>& originString,
    JniIntWrapper autoFetchNotificationState) {
  jclass clazz = org_chromium_chrome_browser_offlinepages_SavePageRequest_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_offlinepages_SavePageRequest_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "create",
"(IJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Lorg/chromium/chrome/browser/offlinepages/SavePageRequest;",
          &g_org_chromium_chrome_browser_offlinepages_SavePageRequest_create);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, as_jint(state), requestId, url.obj(),
              clientIdNamespace.obj(), clientIdId.obj(), originString.obj(),
              as_jint(autoFetchNotificationState));
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

}  // namespace android
}  // namespace offline_pages

#endif  // org_chromium_chrome_browser_offlinepages_SavePageRequest_JNI
