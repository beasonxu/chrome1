// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/offlinepages/OfflinePageArchivePublisherBridge

#ifndef org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge_JNI
#define org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge[];
const char kClassPath_org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge[] =
    "org/chromium/chrome/browser/offlinepages/OfflinePageArchivePublisherBridge";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge_clazz(nullptr);
#ifndef org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge_clazz_defined
#define org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge_clazz_defined
inline jclass
    org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge,
      &g_org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace offline_pages {


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge_isAndroidDownloadManagerInstalled(nullptr);
static jboolean Java_OfflinePageArchivePublisherBridge_isAndroidDownloadManagerInstalled(JNIEnv*
    env) {
  jclass clazz =
      org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "isAndroidDownloadManagerInstalled",
          "()Z",
&g_org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge_isAndroidDownloadManagerInstalled);

  jboolean ret =
      env->CallStaticBooleanMethod(clazz,
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge_addCompletedDownload(nullptr);
static jlong Java_OfflinePageArchivePublisherBridge_addCompletedDownload(JNIEnv* env, const
    base::android::JavaRef<jstring>& title,
    const base::android::JavaRef<jstring>& description,
    const base::android::JavaRef<jstring>& path,
    jlong length,
    const base::android::JavaRef<jstring>& uri,
    const base::android::JavaRef<jstring>& referer) {
  jclass clazz =
      org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "addCompletedDownload",
"(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;)J",
&g_org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge_addCompletedDownload);

  jlong ret =
      env->CallStaticLongMethod(clazz,
          call_context.base.method_id, title.obj(), description.obj(), path.obj(), length,
              uri.obj(), referer.obj());
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge_remove(nullptr);
static jint Java_OfflinePageArchivePublisherBridge_remove(JNIEnv* env, const
    base::android::JavaRef<jlongArray>& ids) {
  jclass clazz =
      org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "remove",
          "([J)I",
          &g_org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge_remove);

  jint ret =
      env->CallStaticIntMethod(clazz,
          call_context.base.method_id, ids.obj());
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge_publishArchiveToDownloadsCollection(nullptr);
static base::android::ScopedJavaLocalRef<jstring>
    Java_OfflinePageArchivePublisherBridge_publishArchiveToDownloadsCollection(JNIEnv* env, const
    base::android::JavaRef<jobject>& page) {
  jclass clazz =
      org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "publishArchiveToDownloadsCollection",
          "(Lorg/chromium/chrome/browser/offlinepages/OfflinePageItem;)Ljava/lang/String;",
&g_org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge_publishArchiveToDownloadsCollection);

  jstring ret =
      static_cast<jstring>(env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, page.obj()));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

}  // namespace offline_pages

#endif  // org_chromium_chrome_browser_offlinepages_OfflinePageArchivePublisherBridge_JNI
