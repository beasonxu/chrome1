// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/contextualsearch/ContextualSearchContext

#ifndef org_chromium_chrome_browser_contextualsearch_ContextualSearchContext_JNI
#define org_chromium_chrome_browser_contextualsearch_ContextualSearchContext_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_contextualsearch_ContextualSearchContext[];
const char kClassPath_org_chromium_chrome_browser_contextualsearch_ContextualSearchContext[] =
    "org/chromium/chrome/browser/contextualsearch/ContextualSearchContext";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_contextualsearch_ContextualSearchContext_clazz(nullptr);
#ifndef org_chromium_chrome_browser_contextualsearch_ContextualSearchContext_clazz_defined
#define org_chromium_chrome_browser_contextualsearch_ContextualSearchContext_clazz_defined
inline jclass org_chromium_chrome_browser_contextualsearch_ContextualSearchContext_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_contextualsearch_ContextualSearchContext,
      &g_org_chromium_chrome_browser_contextualsearch_ContextualSearchContext_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
static jlong JNI_ContextualSearchContext_Init(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& caller);

JNI_GENERATOR_EXPORT jlong Java_J_N_Mz21Bkwn(
    JNIEnv* env,
    jclass jcaller,
    jobject caller) {
  return JNI_ContextualSearchContext_Init(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT void Java_J_N_MwvXsCJZ(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeContextualSearchContext,
    jobject caller) {
  NativeContextualSearchContext* native =
      reinterpret_cast<NativeContextualSearchContext*>(nativeContextualSearchContext);
  CHECK_NATIVE_PTR(env, jcaller, native, "Destroy");
  return native->Destroy(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT void Java_J_N_MjXeVW3V(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeContextualSearchContext,
    jobject caller,
    jstring homeCountry,
    jboolean doSendBasePageUrl) {
  NativeContextualSearchContext* native =
      reinterpret_cast<NativeContextualSearchContext*>(nativeContextualSearchContext);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetResolveProperties");
  return native->SetResolveProperties(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, homeCountry), doSendBasePageUrl);
}

JNI_GENERATOR_EXPORT void Java_J_N_M2pdefbB(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeContextualSearchContext,
    jobject caller,
    jint startAdjust,
    jint endAdjust) {
  NativeContextualSearchContext* native =
      reinterpret_cast<NativeContextualSearchContext*>(nativeContextualSearchContext);
  CHECK_NATIVE_PTR(env, jcaller, native, "AdjustSelection");
  return native->AdjustSelection(env, base::android::JavaParamRef<jobject>(env, caller),
      startAdjust, endAdjust);
}

JNI_GENERATOR_EXPORT jstring Java_J_N_Mi_15NNCP(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeContextualSearchContext,
    jobject caller) {
  NativeContextualSearchContext* native =
      reinterpret_cast<NativeContextualSearchContext*>(nativeContextualSearchContext);
  CHECK_NATIVE_PTR(env, jcaller, native, "DetectLanguage", NULL);
  return native->DetectLanguage(env, base::android::JavaParamRef<jobject>(env, caller)).Release();
}

JNI_GENERATOR_EXPORT void Java_J_N_Mv7i3uKU(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeContextualSearchContext,
    jobject caller,
    jstring detectedLanguage,
    jstring targetLanguage,
    jstring fluentLanguages) {
  NativeContextualSearchContext* native =
      reinterpret_cast<NativeContextualSearchContext*>(nativeContextualSearchContext);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetTranslationLanguages");
  return native->SetTranslationLanguages(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, detectedLanguage),
      base::android::JavaParamRef<jstring>(env, targetLanguage),
      base::android::JavaParamRef<jstring>(env, fluentLanguages));
}

JNI_GENERATOR_EXPORT void Java_J_N_MTiIgddI(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeContextualSearchContext,
    jobject caller,
    jboolean isExactSearch,
    jstring relatedSearchesStamp) {
  NativeContextualSearchContext* native =
      reinterpret_cast<NativeContextualSearchContext*>(nativeContextualSearchContext);
  CHECK_NATIVE_PTR(env, jcaller, native, "PrepareToResolve");
  return native->PrepareToResolve(env, base::android::JavaParamRef<jobject>(env, caller),
      isExactSearch, base::android::JavaParamRef<jstring>(env, relatedSearchesStamp));
}

JNI_GENERATOR_EXPORT void Java_J_N_MTuOy32N(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeContextualSearchContext,
    jobject caller,
    jstring surroundings,
    jint startOffset,
    jint endOffset) {
  NativeContextualSearchContext* native =
      reinterpret_cast<NativeContextualSearchContext*>(nativeContextualSearchContext);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetSurroundingsAndSelection");
  return native->SetSurroundingsAndSelection(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, surroundings), startOffset, endOffset);
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_contextualsearch_ContextualSearchContext_getNativePointer(nullptr);
static jlong Java_ContextualSearchContext_getNativePointer(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_chrome_browser_contextualsearch_ContextualSearchContext_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_contextualsearch_ContextualSearchContext_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getNativePointer",
          "()J",
          &g_org_chromium_chrome_browser_contextualsearch_ContextualSearchContext_getNativePointer);

  jlong ret =
      env->CallLongMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

#endif  // org_chromium_chrome_browser_contextualsearch_ContextualSearchContext_JNI
