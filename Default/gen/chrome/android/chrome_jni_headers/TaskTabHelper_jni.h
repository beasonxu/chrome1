// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/complex_tasks/TaskTabHelper

#ifndef org_chromium_chrome_browser_complex_tasks_TaskTabHelper_JNI
#define org_chromium_chrome_browser_complex_tasks_TaskTabHelper_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_complex_1tasks_TaskTabHelper[];
const char kClassPath_org_chromium_chrome_browser_complex_1tasks_TaskTabHelper[] =
    "org/chromium/chrome/browser/complex_tasks/TaskTabHelper";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_complex_1tasks_TaskTabHelper_clazz(nullptr);
#ifndef org_chromium_chrome_browser_complex_1tasks_TaskTabHelper_clazz_defined
#define org_chromium_chrome_browser_complex_1tasks_TaskTabHelper_clazz_defined
inline jclass org_chromium_chrome_browser_complex_1tasks_TaskTabHelper_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_complex_1tasks_TaskTabHelper,
      &g_org_chromium_chrome_browser_complex_1tasks_TaskTabHelper_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace tasks {

static jlong JNI_TaskTabHelper_GetTaskId(JNIEnv* env, const base::android::JavaParamRef<jobject>&
    webContents);

JNI_GENERATOR_EXPORT jlong Java_J_N_MjsSsYT7(
    JNIEnv* env,
    jclass jcaller,
    jobject webContents) {
  return JNI_TaskTabHelper_GetTaskId(env, base::android::JavaParamRef<jobject>(env, webContents));
}

static jlong JNI_TaskTabHelper_GetRootTaskId(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& webContents);

JNI_GENERATOR_EXPORT jlong Java_J_N_M848Q9ZH(
    JNIEnv* env,
    jclass jcaller,
    jobject webContents) {
  return JNI_TaskTabHelper_GetRootTaskId(env, base::android::JavaParamRef<jobject>(env,
      webContents));
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_complex_1tasks_TaskTabHelper_getParentTaskId(nullptr);
static jlong Java_TaskTabHelper_getParentTaskId(JNIEnv* env, const base::android::JavaRef<jobject>&
    tab) {
  jclass clazz = org_chromium_chrome_browser_complex_1tasks_TaskTabHelper_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_complex_1tasks_TaskTabHelper_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "getParentTaskId",
          "(Lorg/chromium/chrome/browser/tab/Tab;)J",
          &g_org_chromium_chrome_browser_complex_1tasks_TaskTabHelper_getParentTaskId);

  jlong ret =
      env->CallStaticLongMethod(clazz,
          call_context.base.method_id, tab.obj());
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_complex_1tasks_TaskTabHelper_getParentRootTaskId(nullptr);
static jlong Java_TaskTabHelper_getParentRootTaskId(JNIEnv* env, const
    base::android::JavaRef<jobject>& tab) {
  jclass clazz = org_chromium_chrome_browser_complex_1tasks_TaskTabHelper_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_complex_1tasks_TaskTabHelper_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "getParentRootTaskId",
          "(Lorg/chromium/chrome/browser/tab/Tab;)J",
          &g_org_chromium_chrome_browser_complex_1tasks_TaskTabHelper_getParentRootTaskId);

  jlong ret =
      env->CallStaticLongMethod(clazz,
          call_context.base.method_id, tab.obj());
  return ret;
}

}  // namespace tasks

#endif  // org_chromium_chrome_browser_complex_tasks_TaskTabHelper_JNI
