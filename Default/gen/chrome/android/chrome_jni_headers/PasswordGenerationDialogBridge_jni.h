// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/password_manager/PasswordGenerationDialogBridge

#ifndef org_chromium_chrome_browser_password_manager_PasswordGenerationDialogBridge_JNI
#define org_chromium_chrome_browser_password_manager_PasswordGenerationDialogBridge_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_password_1manager_PasswordGenerationDialogBridge[];
const char kClassPath_org_chromium_chrome_browser_password_1manager_PasswordGenerationDialogBridge[]
    = "org/chromium/chrome/browser/password_manager/PasswordGenerationDialogBridge";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_password_1manager_PasswordGenerationDialogBridge_clazz(nullptr);
#ifndef org_chromium_chrome_browser_password_1manager_PasswordGenerationDialogBridge_clazz_defined
#define org_chromium_chrome_browser_password_1manager_PasswordGenerationDialogBridge_clazz_defined
inline jclass
    org_chromium_chrome_browser_password_1manager_PasswordGenerationDialogBridge_clazz(JNIEnv* env)
    {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_password_1manager_PasswordGenerationDialogBridge,
      &g_org_chromium_chrome_browser_password_1manager_PasswordGenerationDialogBridge_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
JNI_GENERATOR_EXPORT void Java_J_N_M1W3B6UT(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePasswordGenerationDialogViewAndroid,
    jobject caller,
    jstring generatedPassword) {
  PasswordGenerationDialogViewAndroid* native =
      reinterpret_cast<PasswordGenerationDialogViewAndroid*>(nativePasswordGenerationDialogViewAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "PasswordAccepted");
  return native->PasswordAccepted(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, generatedPassword));
}

JNI_GENERATOR_EXPORT void Java_J_N_Ml5BeqqW(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePasswordGenerationDialogViewAndroid,
    jobject caller) {
  PasswordGenerationDialogViewAndroid* native =
      reinterpret_cast<PasswordGenerationDialogViewAndroid*>(nativePasswordGenerationDialogViewAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "PasswordRejected");
  return native->PasswordRejected(env, base::android::JavaParamRef<jobject>(env, caller));
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1manager_PasswordGenerationDialogBridge_create(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_PasswordGenerationDialogBridge_create(JNIEnv*
    env, const base::android::JavaRef<jobject>& windowAndroid,
    jlong nativeDialog) {
  jclass clazz =
      org_chromium_chrome_browser_password_1manager_PasswordGenerationDialogBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_password_1manager_PasswordGenerationDialogBridge_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "create",
"(Lorg/chromium/ui/base/WindowAndroid;J)Lorg/chromium/chrome/browser/password_manager/PasswordGenerationDialogBridge;",
          &g_org_chromium_chrome_browser_password_1manager_PasswordGenerationDialogBridge_create);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, windowAndroid.obj(), nativeDialog);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1manager_PasswordGenerationDialogBridge_showDialog(nullptr);
static void Java_PasswordGenerationDialogBridge_showDialog(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& generatedPassword,
    const base::android::JavaRef<jstring>& explanationString) {
  jclass clazz =
      org_chromium_chrome_browser_password_1manager_PasswordGenerationDialogBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_password_1manager_PasswordGenerationDialogBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "showDialog",
          "(Ljava/lang/String;Ljava/lang/String;)V",
&g_org_chromium_chrome_browser_password_1manager_PasswordGenerationDialogBridge_showDialog);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, generatedPassword.obj(), explanationString.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1manager_PasswordGenerationDialogBridge_destroy(nullptr);
static void Java_PasswordGenerationDialogBridge_destroy(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_chrome_browser_password_1manager_PasswordGenerationDialogBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_password_1manager_PasswordGenerationDialogBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "destroy",
          "()V",
          &g_org_chromium_chrome_browser_password_1manager_PasswordGenerationDialogBridge_destroy);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

#endif  // org_chromium_chrome_browser_password_manager_PasswordGenerationDialogBridge_JNI
