// ui/webui/resources/js/metrics_reporter/metrics_reporter.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef UI_WEBUI_RESOURCES_JS_METRICS_REPORTER_METRICS_REPORTER_MOJOM_PARAMS_DATA_H_
#define UI_WEBUI_RESOURCES_JS_METRICS_REPORTER_METRICS_REPORTER_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace metrics_reporter {
namespace mojom {
namespace internal {

class ValidationContext;
class  PageMetricsHost_OnPageRemoteCreated_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Interface_Data page;

 private:
  friend class mojo::internal::MessageFragment<PageMetricsHost_OnPageRemoteCreated_Params_Data>;

  PageMetricsHost_OnPageRemoteCreated_Params_Data();
  ~PageMetricsHost_OnPageRemoteCreated_Params_Data() = delete;
};
static_assert(sizeof(PageMetricsHost_OnPageRemoteCreated_Params_Data) == 16,
              "Bad sizeof(PageMetricsHost_OnPageRemoteCreated_Params_Data)");
class  PageMetricsHost_OnGetMark_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> name;

 private:
  friend class mojo::internal::MessageFragment<PageMetricsHost_OnGetMark_Params_Data>;

  PageMetricsHost_OnGetMark_Params_Data();
  ~PageMetricsHost_OnGetMark_Params_Data() = delete;
};
static_assert(sizeof(PageMetricsHost_OnGetMark_Params_Data) == 16,
              "Bad sizeof(PageMetricsHost_OnGetMark_Params_Data)");
class  PageMetricsHost_OnGetMark_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::mojo_base::mojom::internal::TimeDelta_Data> marked_time;

 private:
  friend class mojo::internal::MessageFragment<PageMetricsHost_OnGetMark_ResponseParams_Data>;

  PageMetricsHost_OnGetMark_ResponseParams_Data();
  ~PageMetricsHost_OnGetMark_ResponseParams_Data() = delete;
};
static_assert(sizeof(PageMetricsHost_OnGetMark_ResponseParams_Data) == 16,
              "Bad sizeof(PageMetricsHost_OnGetMark_ResponseParams_Data)");
class  PageMetricsHost_OnClearMark_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> name;

 private:
  friend class mojo::internal::MessageFragment<PageMetricsHost_OnClearMark_Params_Data>;

  PageMetricsHost_OnClearMark_Params_Data();
  ~PageMetricsHost_OnClearMark_Params_Data() = delete;
};
static_assert(sizeof(PageMetricsHost_OnClearMark_Params_Data) == 16,
              "Bad sizeof(PageMetricsHost_OnClearMark_Params_Data)");
class  PageMetricsHost_OnUmaReportTime_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> name;
  mojo::internal::Pointer<::mojo_base::mojom::internal::TimeDelta_Data> time;

 private:
  friend class mojo::internal::MessageFragment<PageMetricsHost_OnUmaReportTime_Params_Data>;

  PageMetricsHost_OnUmaReportTime_Params_Data();
  ~PageMetricsHost_OnUmaReportTime_Params_Data() = delete;
};
static_assert(sizeof(PageMetricsHost_OnUmaReportTime_Params_Data) == 24,
              "Bad sizeof(PageMetricsHost_OnUmaReportTime_Params_Data)");
class  PageMetrics_OnGetMark_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> name;

 private:
  friend class mojo::internal::MessageFragment<PageMetrics_OnGetMark_Params_Data>;

  PageMetrics_OnGetMark_Params_Data();
  ~PageMetrics_OnGetMark_Params_Data() = delete;
};
static_assert(sizeof(PageMetrics_OnGetMark_Params_Data) == 16,
              "Bad sizeof(PageMetrics_OnGetMark_Params_Data)");
class  PageMetrics_OnGetMark_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::mojo_base::mojom::internal::TimeDelta_Data> marked_time;

 private:
  friend class mojo::internal::MessageFragment<PageMetrics_OnGetMark_ResponseParams_Data>;

  PageMetrics_OnGetMark_ResponseParams_Data();
  ~PageMetrics_OnGetMark_ResponseParams_Data() = delete;
};
static_assert(sizeof(PageMetrics_OnGetMark_ResponseParams_Data) == 16,
              "Bad sizeof(PageMetrics_OnGetMark_ResponseParams_Data)");
class  PageMetrics_OnClearMark_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> name;

 private:
  friend class mojo::internal::MessageFragment<PageMetrics_OnClearMark_Params_Data>;

  PageMetrics_OnClearMark_Params_Data();
  ~PageMetrics_OnClearMark_Params_Data() = delete;
};
static_assert(sizeof(PageMetrics_OnClearMark_Params_Data) == 16,
              "Bad sizeof(PageMetrics_OnClearMark_Params_Data)");

}  // namespace internal


class PageMetricsHost_OnPageRemoteCreated_ParamsDataView {
 public:
  PageMetricsHost_OnPageRemoteCreated_ParamsDataView() = default;

  PageMetricsHost_OnPageRemoteCreated_ParamsDataView(
      internal::PageMetricsHost_OnPageRemoteCreated_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakePage() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfacePtrDataView<::metrics_reporter::mojom::PageMetricsInterfaceBase>>(
            &data_->page, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::PageMetricsHost_OnPageRemoteCreated_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PageMetricsHost_OnGetMark_ParamsDataView {
 public:
  PageMetricsHost_OnGetMark_ParamsDataView() = default;

  PageMetricsHost_OnGetMark_ParamsDataView(
      internal::PageMetricsHost_OnGetMark_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetNameDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadName(UserType* output) {
    
    auto* pointer = data_->name.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::PageMetricsHost_OnGetMark_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PageMetricsHost_OnGetMark_ResponseParamsDataView {
 public:
  PageMetricsHost_OnGetMark_ResponseParamsDataView() = default;

  PageMetricsHost_OnGetMark_ResponseParamsDataView(
      internal::PageMetricsHost_OnGetMark_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetMarkedTimeDataView(
      ::mojo_base::mojom::TimeDeltaDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadMarkedTime(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::mojo_base::mojom::TimeDeltaDataView, UserType>(),
    "Attempting to read the optional `marked_time` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadMarkedTime` instead "
    "of `ReadMarkedTime if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->marked_time.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::TimeDeltaDataView>(
        pointer, output, message_);
  }
 private:
  internal::PageMetricsHost_OnGetMark_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PageMetricsHost_OnClearMark_ParamsDataView {
 public:
  PageMetricsHost_OnClearMark_ParamsDataView() = default;

  PageMetricsHost_OnClearMark_ParamsDataView(
      internal::PageMetricsHost_OnClearMark_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetNameDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadName(UserType* output) {
    
    auto* pointer = data_->name.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::PageMetricsHost_OnClearMark_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PageMetricsHost_OnUmaReportTime_ParamsDataView {
 public:
  PageMetricsHost_OnUmaReportTime_ParamsDataView() = default;

  PageMetricsHost_OnUmaReportTime_ParamsDataView(
      internal::PageMetricsHost_OnUmaReportTime_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetNameDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadName(UserType* output) {
    
    auto* pointer = data_->name.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  inline void GetTimeDataView(
      ::mojo_base::mojom::TimeDeltaDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadTime(UserType* output) {
    
    auto* pointer = data_->time.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::TimeDeltaDataView>(
        pointer, output, message_);
  }
 private:
  internal::PageMetricsHost_OnUmaReportTime_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PageMetrics_OnGetMark_ParamsDataView {
 public:
  PageMetrics_OnGetMark_ParamsDataView() = default;

  PageMetrics_OnGetMark_ParamsDataView(
      internal::PageMetrics_OnGetMark_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetNameDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadName(UserType* output) {
    
    auto* pointer = data_->name.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::PageMetrics_OnGetMark_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PageMetrics_OnGetMark_ResponseParamsDataView {
 public:
  PageMetrics_OnGetMark_ResponseParamsDataView() = default;

  PageMetrics_OnGetMark_ResponseParamsDataView(
      internal::PageMetrics_OnGetMark_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetMarkedTimeDataView(
      ::mojo_base::mojom::TimeDeltaDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadMarkedTime(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::mojo_base::mojom::TimeDeltaDataView, UserType>(),
    "Attempting to read the optional `marked_time` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadMarkedTime` instead "
    "of `ReadMarkedTime if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->marked_time.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::TimeDeltaDataView>(
        pointer, output, message_);
  }
 private:
  internal::PageMetrics_OnGetMark_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PageMetrics_OnClearMark_ParamsDataView {
 public:
  PageMetrics_OnClearMark_ParamsDataView() = default;

  PageMetrics_OnClearMark_ParamsDataView(
      internal::PageMetrics_OnClearMark_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetNameDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadName(UserType* output) {
    
    auto* pointer = data_->name.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::PageMetrics_OnClearMark_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};




inline void PageMetricsHost_OnGetMark_ParamsDataView::GetNameDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->name.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void PageMetricsHost_OnGetMark_ResponseParamsDataView::GetMarkedTimeDataView(
    ::mojo_base::mojom::TimeDeltaDataView* output) {
  auto pointer = data_->marked_time.Get();
  *output = ::mojo_base::mojom::TimeDeltaDataView(pointer, message_);
}


inline void PageMetricsHost_OnClearMark_ParamsDataView::GetNameDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->name.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void PageMetricsHost_OnUmaReportTime_ParamsDataView::GetNameDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->name.Get();
  *output = mojo::StringDataView(pointer, message_);
}
inline void PageMetricsHost_OnUmaReportTime_ParamsDataView::GetTimeDataView(
    ::mojo_base::mojom::TimeDeltaDataView* output) {
  auto pointer = data_->time.Get();
  *output = ::mojo_base::mojom::TimeDeltaDataView(pointer, message_);
}


inline void PageMetrics_OnGetMark_ParamsDataView::GetNameDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->name.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void PageMetrics_OnGetMark_ResponseParamsDataView::GetMarkedTimeDataView(
    ::mojo_base::mojom::TimeDeltaDataView* output) {
  auto pointer = data_->marked_time.Get();
  *output = ::mojo_base::mojom::TimeDeltaDataView(pointer, message_);
}


inline void PageMetrics_OnClearMark_ParamsDataView::GetNameDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->name.Get();
  *output = mojo::StringDataView(pointer, message_);
}

}  // namespace mojom
}  // namespace metrics_reporter

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // UI_WEBUI_RESOURCES_JS_METRICS_REPORTER_METRICS_REPORTER_MOJOM_PARAMS_DATA_H_