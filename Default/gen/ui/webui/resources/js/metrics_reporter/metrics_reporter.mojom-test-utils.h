// ui/webui/resources/js/metrics_reporter/metrics_reporter.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef UI_WEBUI_RESOURCES_JS_METRICS_REPORTER_METRICS_REPORTER_MOJOM_TEST_UTILS_H_
#define UI_WEBUI_RESOURCES_JS_METRICS_REPORTER_METRICS_REPORTER_MOJOM_TEST_UTILS_H_

#include "ui/webui/resources/js/metrics_reporter/metrics_reporter.mojom.h"


namespace metrics_reporter {
namespace mojom {


class  PageMetricsHostInterceptorForTesting : public PageMetricsHost {
  virtual PageMetricsHost* GetForwardingInterface() = 0;
  void OnPageRemoteCreated(::mojo::PendingRemote<PageMetrics> page) override;
  void OnGetMark(const std::string& name, OnGetMarkCallback callback) override;
  void OnClearMark(const std::string& name) override;
  void OnUmaReportTime(const std::string& name, ::base::TimeDelta time) override;
};
class  PageMetricsHostAsyncWaiter {
 public:
  explicit PageMetricsHostAsyncWaiter(PageMetricsHost* proxy);

  PageMetricsHostAsyncWaiter(const PageMetricsHostAsyncWaiter&) = delete;
  PageMetricsHostAsyncWaiter& operator=(const PageMetricsHostAsyncWaiter&) = delete;

  ~PageMetricsHostAsyncWaiter();
  void OnGetMark(
      const std::string& name, absl::optional<::base::TimeDelta>* out_marked_time);

 private:
  PageMetricsHost* const proxy_;
};


class  PageMetricsInterceptorForTesting : public PageMetrics {
  virtual PageMetrics* GetForwardingInterface() = 0;
  void OnGetMark(const std::string& name, OnGetMarkCallback callback) override;
  void OnClearMark(const std::string& name) override;
};
class  PageMetricsAsyncWaiter {
 public:
  explicit PageMetricsAsyncWaiter(PageMetrics* proxy);

  PageMetricsAsyncWaiter(const PageMetricsAsyncWaiter&) = delete;
  PageMetricsAsyncWaiter& operator=(const PageMetricsAsyncWaiter&) = delete;

  ~PageMetricsAsyncWaiter();
  void OnGetMark(
      const std::string& name, absl::optional<::base::TimeDelta>* out_marked_time);

 private:
  PageMetrics* const proxy_;
};




}  // namespace mojom
}  // namespace metrics_reporter

#endif  // UI_WEBUI_RESOURCES_JS_METRICS_REPORTER_METRICS_REPORTER_MOJOM_TEST_UTILS_H_