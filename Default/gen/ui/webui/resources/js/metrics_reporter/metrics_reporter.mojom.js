// ui/webui/resources/js/metrics_reporter/metrics_reporter.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'ui/webui/resources/js/metrics_reporter/metrics_reporter.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('metricsReporter.mojom');
  var time$ =
      mojo.internal.exposeNamespace('mojoBase.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'mojo/public/mojom/base/time.mojom', '../../../../../mojo/public/mojom/base/time.mojom.js');
  }



  function PageMetricsHost_OnPageRemoteCreated_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageMetricsHost_OnPageRemoteCreated_Params.prototype.initDefaults_ = function() {
    this.page = new PageMetricsPtr();
  };
  PageMetricsHost_OnPageRemoteCreated_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageMetricsHost_OnPageRemoteCreated_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageMetricsHost_OnPageRemoteCreated_Params.page
    err = messageValidator.validateInterface(offset + codec.kStructHeaderSize + 0, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageMetricsHost_OnPageRemoteCreated_Params.encodedSize = codec.kStructHeaderSize + 8;

  PageMetricsHost_OnPageRemoteCreated_Params.decode = function(decoder) {
    var packed;
    var val = new PageMetricsHost_OnPageRemoteCreated_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.page =
        decoder.decodeStruct(new codec.Interface(PageMetricsPtr));
    return val;
  };

  PageMetricsHost_OnPageRemoteCreated_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageMetricsHost_OnPageRemoteCreated_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(new codec.Interface(PageMetricsPtr), val.page);
  };
  function PageMetricsHost_OnGetMark_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageMetricsHost_OnGetMark_Params.prototype.initDefaults_ = function() {
    this.name = null;
  };
  PageMetricsHost_OnGetMark_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageMetricsHost_OnGetMark_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageMetricsHost_OnGetMark_Params.name
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageMetricsHost_OnGetMark_Params.encodedSize = codec.kStructHeaderSize + 8;

  PageMetricsHost_OnGetMark_Params.decode = function(decoder) {
    var packed;
    var val = new PageMetricsHost_OnGetMark_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.name =
        decoder.decodeStruct(codec.String);
    return val;
  };

  PageMetricsHost_OnGetMark_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageMetricsHost_OnGetMark_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.name);
  };
  function PageMetricsHost_OnGetMark_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageMetricsHost_OnGetMark_ResponseParams.prototype.initDefaults_ = function() {
    this.markedTime = null;
  };
  PageMetricsHost_OnGetMark_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageMetricsHost_OnGetMark_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageMetricsHost_OnGetMark_ResponseParams.markedTime
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, time$.TimeDelta, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageMetricsHost_OnGetMark_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  PageMetricsHost_OnGetMark_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new PageMetricsHost_OnGetMark_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.markedTime =
        decoder.decodeStructPointer(time$.TimeDelta);
    return val;
  };

  PageMetricsHost_OnGetMark_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageMetricsHost_OnGetMark_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(time$.TimeDelta, val.markedTime);
  };
  function PageMetricsHost_OnClearMark_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageMetricsHost_OnClearMark_Params.prototype.initDefaults_ = function() {
    this.name = null;
  };
  PageMetricsHost_OnClearMark_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageMetricsHost_OnClearMark_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageMetricsHost_OnClearMark_Params.name
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageMetricsHost_OnClearMark_Params.encodedSize = codec.kStructHeaderSize + 8;

  PageMetricsHost_OnClearMark_Params.decode = function(decoder) {
    var packed;
    var val = new PageMetricsHost_OnClearMark_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.name =
        decoder.decodeStruct(codec.String);
    return val;
  };

  PageMetricsHost_OnClearMark_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageMetricsHost_OnClearMark_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.name);
  };
  function PageMetricsHost_OnUmaReportTime_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageMetricsHost_OnUmaReportTime_Params.prototype.initDefaults_ = function() {
    this.name = null;
    this.time = null;
  };
  PageMetricsHost_OnUmaReportTime_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageMetricsHost_OnUmaReportTime_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageMetricsHost_OnUmaReportTime_Params.name
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageMetricsHost_OnUmaReportTime_Params.time
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, time$.TimeDelta, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageMetricsHost_OnUmaReportTime_Params.encodedSize = codec.kStructHeaderSize + 16;

  PageMetricsHost_OnUmaReportTime_Params.decode = function(decoder) {
    var packed;
    var val = new PageMetricsHost_OnUmaReportTime_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.name =
        decoder.decodeStruct(codec.String);
    val.time =
        decoder.decodeStructPointer(time$.TimeDelta);
    return val;
  };

  PageMetricsHost_OnUmaReportTime_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageMetricsHost_OnUmaReportTime_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.name);
    encoder.encodeStructPointer(time$.TimeDelta, val.time);
  };
  function PageMetrics_OnGetMark_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageMetrics_OnGetMark_Params.prototype.initDefaults_ = function() {
    this.name = null;
  };
  PageMetrics_OnGetMark_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageMetrics_OnGetMark_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageMetrics_OnGetMark_Params.name
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageMetrics_OnGetMark_Params.encodedSize = codec.kStructHeaderSize + 8;

  PageMetrics_OnGetMark_Params.decode = function(decoder) {
    var packed;
    var val = new PageMetrics_OnGetMark_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.name =
        decoder.decodeStruct(codec.String);
    return val;
  };

  PageMetrics_OnGetMark_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageMetrics_OnGetMark_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.name);
  };
  function PageMetrics_OnGetMark_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageMetrics_OnGetMark_ResponseParams.prototype.initDefaults_ = function() {
    this.markedTime = null;
  };
  PageMetrics_OnGetMark_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageMetrics_OnGetMark_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageMetrics_OnGetMark_ResponseParams.markedTime
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, time$.TimeDelta, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageMetrics_OnGetMark_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  PageMetrics_OnGetMark_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new PageMetrics_OnGetMark_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.markedTime =
        decoder.decodeStructPointer(time$.TimeDelta);
    return val;
  };

  PageMetrics_OnGetMark_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageMetrics_OnGetMark_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(time$.TimeDelta, val.markedTime);
  };
  function PageMetrics_OnClearMark_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  PageMetrics_OnClearMark_Params.prototype.initDefaults_ = function() {
    this.name = null;
  };
  PageMetrics_OnClearMark_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  PageMetrics_OnClearMark_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate PageMetrics_OnClearMark_Params.name
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  PageMetrics_OnClearMark_Params.encodedSize = codec.kStructHeaderSize + 8;

  PageMetrics_OnClearMark_Params.decode = function(decoder) {
    var packed;
    var val = new PageMetrics_OnClearMark_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.name =
        decoder.decodeStruct(codec.String);
    return val;
  };

  PageMetrics_OnClearMark_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(PageMetrics_OnClearMark_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.name);
  };
  var kPageMetricsHost_OnPageRemoteCreated_Name = 0;
  var kPageMetricsHost_OnGetMark_Name = 1;
  var kPageMetricsHost_OnClearMark_Name = 2;
  var kPageMetricsHost_OnUmaReportTime_Name = 3;

  function PageMetricsHostPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(PageMetricsHost,
                                                   handleOrPtrInfo);
  }

  function PageMetricsHostAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        PageMetricsHost, associatedInterfacePtrInfo);
  }

  PageMetricsHostAssociatedPtr.prototype =
      Object.create(PageMetricsHostPtr.prototype);
  PageMetricsHostAssociatedPtr.prototype.constructor =
      PageMetricsHostAssociatedPtr;

  function PageMetricsHostProxy(receiver) {
    this.receiver_ = receiver;
  }
  PageMetricsHostPtr.prototype.onPageRemoteCreated = function() {
    return PageMetricsHostProxy.prototype.onPageRemoteCreated
        .apply(this.ptr.getProxy(), arguments);
  };

  PageMetricsHostProxy.prototype.onPageRemoteCreated = function(page) {
    var params_ = new PageMetricsHost_OnPageRemoteCreated_Params();
    params_.page = page;
    var builder = new codec.MessageV0Builder(
        kPageMetricsHost_OnPageRemoteCreated_Name,
        codec.align(PageMetricsHost_OnPageRemoteCreated_Params.encodedSize));
    builder.encodeStruct(PageMetricsHost_OnPageRemoteCreated_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageMetricsHostPtr.prototype.onGetMark = function() {
    return PageMetricsHostProxy.prototype.onGetMark
        .apply(this.ptr.getProxy(), arguments);
  };

  PageMetricsHostProxy.prototype.onGetMark = function(name) {
    var params_ = new PageMetricsHost_OnGetMark_Params();
    params_.name = name;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kPageMetricsHost_OnGetMark_Name,
          codec.align(PageMetricsHost_OnGetMark_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(PageMetricsHost_OnGetMark_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(PageMetricsHost_OnGetMark_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  PageMetricsHostPtr.prototype.onClearMark = function() {
    return PageMetricsHostProxy.prototype.onClearMark
        .apply(this.ptr.getProxy(), arguments);
  };

  PageMetricsHostProxy.prototype.onClearMark = function(name) {
    var params_ = new PageMetricsHost_OnClearMark_Params();
    params_.name = name;
    var builder = new codec.MessageV0Builder(
        kPageMetricsHost_OnClearMark_Name,
        codec.align(PageMetricsHost_OnClearMark_Params.encodedSize));
    builder.encodeStruct(PageMetricsHost_OnClearMark_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  PageMetricsHostPtr.prototype.onUmaReportTime = function() {
    return PageMetricsHostProxy.prototype.onUmaReportTime
        .apply(this.ptr.getProxy(), arguments);
  };

  PageMetricsHostProxy.prototype.onUmaReportTime = function(name, time) {
    var params_ = new PageMetricsHost_OnUmaReportTime_Params();
    params_.name = name;
    params_.time = time;
    var builder = new codec.MessageV0Builder(
        kPageMetricsHost_OnUmaReportTime_Name,
        codec.align(PageMetricsHost_OnUmaReportTime_Params.encodedSize));
    builder.encodeStruct(PageMetricsHost_OnUmaReportTime_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function PageMetricsHostStub(delegate) {
    this.delegate_ = delegate;
  }
  PageMetricsHostStub.prototype.onPageRemoteCreated = function(page) {
    return this.delegate_ && this.delegate_.onPageRemoteCreated && this.delegate_.onPageRemoteCreated(page);
  }
  PageMetricsHostStub.prototype.onGetMark = function(name) {
    return this.delegate_ && this.delegate_.onGetMark && this.delegate_.onGetMark(name);
  }
  PageMetricsHostStub.prototype.onClearMark = function(name) {
    return this.delegate_ && this.delegate_.onClearMark && this.delegate_.onClearMark(name);
  }
  PageMetricsHostStub.prototype.onUmaReportTime = function(name, time) {
    return this.delegate_ && this.delegate_.onUmaReportTime && this.delegate_.onUmaReportTime(name, time);
  }

  PageMetricsHostStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kPageMetricsHost_OnPageRemoteCreated_Name:
      var params = reader.decodeStruct(PageMetricsHost_OnPageRemoteCreated_Params);
      this.onPageRemoteCreated(params.page);
      return true;
    case kPageMetricsHost_OnClearMark_Name:
      var params = reader.decodeStruct(PageMetricsHost_OnClearMark_Params);
      this.onClearMark(params.name);
      return true;
    case kPageMetricsHost_OnUmaReportTime_Name:
      var params = reader.decodeStruct(PageMetricsHost_OnUmaReportTime_Params);
      this.onUmaReportTime(params.name, params.time);
      return true;
    default:
      return false;
    }
  };

  PageMetricsHostStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kPageMetricsHost_OnGetMark_Name:
      var params = reader.decodeStruct(PageMetricsHost_OnGetMark_Params);
      this.onGetMark(params.name).then(function(response) {
        var responseParams =
            new PageMetricsHost_OnGetMark_ResponseParams();
        responseParams.markedTime = response.markedTime;
        var builder = new codec.MessageV1Builder(
            kPageMetricsHost_OnGetMark_Name,
            codec.align(PageMetricsHost_OnGetMark_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(PageMetricsHost_OnGetMark_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    default:
      return false;
    }
  };

  function validatePageMetricsHostRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kPageMetricsHost_OnPageRemoteCreated_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageMetricsHost_OnPageRemoteCreated_Params;
      break;
      case kPageMetricsHost_OnGetMark_Name:
        if (message.expectsResponse())
          paramsClass = PageMetricsHost_OnGetMark_Params;
      break;
      case kPageMetricsHost_OnClearMark_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageMetricsHost_OnClearMark_Params;
      break;
      case kPageMetricsHost_OnUmaReportTime_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageMetricsHost_OnUmaReportTime_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validatePageMetricsHostResponse(messageValidator) {
   var message = messageValidator.message;
   var paramsClass = null;
   switch (message.getName()) {
      case kPageMetricsHost_OnGetMark_Name:
        if (message.isResponse())
          paramsClass = PageMetricsHost_OnGetMark_ResponseParams;
        break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  var PageMetricsHost = {
    name: 'metrics_reporter.mojom.PageMetricsHost',
    kVersion: 0,
    ptrClass: PageMetricsHostPtr,
    proxyClass: PageMetricsHostProxy,
    stubClass: PageMetricsHostStub,
    validateRequest: validatePageMetricsHostRequest,
    validateResponse: validatePageMetricsHostResponse,
  };
  PageMetricsHostStub.prototype.validator = validatePageMetricsHostRequest;
  PageMetricsHostProxy.prototype.validator = validatePageMetricsHostResponse;
  var kPageMetrics_OnGetMark_Name = 0;
  var kPageMetrics_OnClearMark_Name = 1;

  function PageMetricsPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(PageMetrics,
                                                   handleOrPtrInfo);
  }

  function PageMetricsAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        PageMetrics, associatedInterfacePtrInfo);
  }

  PageMetricsAssociatedPtr.prototype =
      Object.create(PageMetricsPtr.prototype);
  PageMetricsAssociatedPtr.prototype.constructor =
      PageMetricsAssociatedPtr;

  function PageMetricsProxy(receiver) {
    this.receiver_ = receiver;
  }
  PageMetricsPtr.prototype.onGetMark = function() {
    return PageMetricsProxy.prototype.onGetMark
        .apply(this.ptr.getProxy(), arguments);
  };

  PageMetricsProxy.prototype.onGetMark = function(name) {
    var params_ = new PageMetrics_OnGetMark_Params();
    params_.name = name;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kPageMetrics_OnGetMark_Name,
          codec.align(PageMetrics_OnGetMark_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(PageMetrics_OnGetMark_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(PageMetrics_OnGetMark_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  PageMetricsPtr.prototype.onClearMark = function() {
    return PageMetricsProxy.prototype.onClearMark
        .apply(this.ptr.getProxy(), arguments);
  };

  PageMetricsProxy.prototype.onClearMark = function(name) {
    var params_ = new PageMetrics_OnClearMark_Params();
    params_.name = name;
    var builder = new codec.MessageV0Builder(
        kPageMetrics_OnClearMark_Name,
        codec.align(PageMetrics_OnClearMark_Params.encodedSize));
    builder.encodeStruct(PageMetrics_OnClearMark_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function PageMetricsStub(delegate) {
    this.delegate_ = delegate;
  }
  PageMetricsStub.prototype.onGetMark = function(name) {
    return this.delegate_ && this.delegate_.onGetMark && this.delegate_.onGetMark(name);
  }
  PageMetricsStub.prototype.onClearMark = function(name) {
    return this.delegate_ && this.delegate_.onClearMark && this.delegate_.onClearMark(name);
  }

  PageMetricsStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kPageMetrics_OnClearMark_Name:
      var params = reader.decodeStruct(PageMetrics_OnClearMark_Params);
      this.onClearMark(params.name);
      return true;
    default:
      return false;
    }
  };

  PageMetricsStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kPageMetrics_OnGetMark_Name:
      var params = reader.decodeStruct(PageMetrics_OnGetMark_Params);
      this.onGetMark(params.name).then(function(response) {
        var responseParams =
            new PageMetrics_OnGetMark_ResponseParams();
        responseParams.markedTime = response.markedTime;
        var builder = new codec.MessageV1Builder(
            kPageMetrics_OnGetMark_Name,
            codec.align(PageMetrics_OnGetMark_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(PageMetrics_OnGetMark_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    default:
      return false;
    }
  };

  function validatePageMetricsRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kPageMetrics_OnGetMark_Name:
        if (message.expectsResponse())
          paramsClass = PageMetrics_OnGetMark_Params;
      break;
      case kPageMetrics_OnClearMark_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = PageMetrics_OnClearMark_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validatePageMetricsResponse(messageValidator) {
   var message = messageValidator.message;
   var paramsClass = null;
   switch (message.getName()) {
      case kPageMetrics_OnGetMark_Name:
        if (message.isResponse())
          paramsClass = PageMetrics_OnGetMark_ResponseParams;
        break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  var PageMetrics = {
    name: 'metrics_reporter.mojom.PageMetrics',
    kVersion: 0,
    ptrClass: PageMetricsPtr,
    proxyClass: PageMetricsProxy,
    stubClass: PageMetricsStub,
    validateRequest: validatePageMetricsRequest,
    validateResponse: validatePageMetricsResponse,
  };
  PageMetricsStub.prototype.validator = validatePageMetricsRequest;
  PageMetricsProxy.prototype.validator = validatePageMetricsResponse;
  exports.PageMetricsHost = PageMetricsHost;
  exports.PageMetricsHostPtr = PageMetricsHostPtr;
  exports.PageMetricsHostAssociatedPtr = PageMetricsHostAssociatedPtr;
  exports.PageMetrics = PageMetrics;
  exports.PageMetricsPtr = PageMetricsPtr;
  exports.PageMetricsAssociatedPtr = PageMetricsAssociatedPtr;
})();