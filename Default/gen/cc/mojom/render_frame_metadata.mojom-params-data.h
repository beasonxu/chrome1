// cc/mojom/render_frame_metadata.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CC_MOJOM_RENDER_FRAME_METADATA_MOJOM_PARAMS_DATA_H_
#define CC_MOJOM_RENDER_FRAME_METADATA_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace cc {
namespace mojom {
namespace internal {

class ValidationContext;
class  RenderFrameMetadataObserver_ReportAllRootScrolls_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t enabled : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<RenderFrameMetadataObserver_ReportAllRootScrolls_Params_Data>;

  RenderFrameMetadataObserver_ReportAllRootScrolls_Params_Data();
  ~RenderFrameMetadataObserver_ReportAllRootScrolls_Params_Data() = delete;
};
static_assert(sizeof(RenderFrameMetadataObserver_ReportAllRootScrolls_Params_Data) == 16,
              "Bad sizeof(RenderFrameMetadataObserver_ReportAllRootScrolls_Params_Data)");
class  RenderFrameMetadataObserver_ReportAllFrameSubmissionsForTesting_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t enabled : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<RenderFrameMetadataObserver_ReportAllFrameSubmissionsForTesting_Params_Data>;

  RenderFrameMetadataObserver_ReportAllFrameSubmissionsForTesting_Params_Data();
  ~RenderFrameMetadataObserver_ReportAllFrameSubmissionsForTesting_Params_Data() = delete;
};
static_assert(sizeof(RenderFrameMetadataObserver_ReportAllFrameSubmissionsForTesting_Params_Data) == 16,
              "Bad sizeof(RenderFrameMetadataObserver_ReportAllFrameSubmissionsForTesting_Params_Data)");
class  RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint32_t frame_token;
  uint8_t pad0_[4];
  mojo::internal::Pointer<internal::RenderFrameMetadata_Data> metadata;

 private:
  friend class mojo::internal::MessageFragment<RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_Params_Data>;

  RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_Params_Data();
  ~RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_Params_Data() = delete;
};
static_assert(sizeof(RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_Params_Data) == 24,
              "Bad sizeof(RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_Params_Data)");
class  RenderFrameMetadataObserverClient_OnFrameSubmissionForTesting_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint32_t frame_token;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<RenderFrameMetadataObserverClient_OnFrameSubmissionForTesting_Params_Data>;

  RenderFrameMetadataObserverClient_OnFrameSubmissionForTesting_Params_Data();
  ~RenderFrameMetadataObserverClient_OnFrameSubmissionForTesting_Params_Data() = delete;
};
static_assert(sizeof(RenderFrameMetadataObserverClient_OnFrameSubmissionForTesting_Params_Data) == 16,
              "Bad sizeof(RenderFrameMetadataObserverClient_OnFrameSubmissionForTesting_Params_Data)");
class  RenderFrameMetadataObserverClient_OnRootScrollOffsetChanged_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::gfx::mojom::internal::PointF_Data> root_scroll_offset;

 private:
  friend class mojo::internal::MessageFragment<RenderFrameMetadataObserverClient_OnRootScrollOffsetChanged_Params_Data>;

  RenderFrameMetadataObserverClient_OnRootScrollOffsetChanged_Params_Data();
  ~RenderFrameMetadataObserverClient_OnRootScrollOffsetChanged_Params_Data() = delete;
};
static_assert(sizeof(RenderFrameMetadataObserverClient_OnRootScrollOffsetChanged_Params_Data) == 16,
              "Bad sizeof(RenderFrameMetadataObserverClient_OnRootScrollOffsetChanged_Params_Data)");

}  // namespace internal


class RenderFrameMetadataObserver_ReportAllRootScrolls_ParamsDataView {
 public:
  RenderFrameMetadataObserver_ReportAllRootScrolls_ParamsDataView() = default;

  RenderFrameMetadataObserver_ReportAllRootScrolls_ParamsDataView(
      internal::RenderFrameMetadataObserver_ReportAllRootScrolls_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool enabled() const {
    return data_->enabled;
  }
 private:
  internal::RenderFrameMetadataObserver_ReportAllRootScrolls_Params_Data* data_ = nullptr;
};



class RenderFrameMetadataObserver_ReportAllFrameSubmissionsForTesting_ParamsDataView {
 public:
  RenderFrameMetadataObserver_ReportAllFrameSubmissionsForTesting_ParamsDataView() = default;

  RenderFrameMetadataObserver_ReportAllFrameSubmissionsForTesting_ParamsDataView(
      internal::RenderFrameMetadataObserver_ReportAllFrameSubmissionsForTesting_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool enabled() const {
    return data_->enabled;
  }
 private:
  internal::RenderFrameMetadataObserver_ReportAllFrameSubmissionsForTesting_Params_Data* data_ = nullptr;
};



class RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_ParamsDataView {
 public:
  RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_ParamsDataView() = default;

  RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_ParamsDataView(
      internal::RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  uint32_t frame_token() const {
    return data_->frame_token;
  }
  inline void GetMetadataDataView(
      RenderFrameMetadataDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadMetadata(UserType* output) {
    
    auto* pointer = data_->metadata.Get();
    return mojo::internal::Deserialize<::cc::mojom::RenderFrameMetadataDataView>(
        pointer, output, message_);
  }
 private:
  internal::RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class RenderFrameMetadataObserverClient_OnFrameSubmissionForTesting_ParamsDataView {
 public:
  RenderFrameMetadataObserverClient_OnFrameSubmissionForTesting_ParamsDataView() = default;

  RenderFrameMetadataObserverClient_OnFrameSubmissionForTesting_ParamsDataView(
      internal::RenderFrameMetadataObserverClient_OnFrameSubmissionForTesting_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  uint32_t frame_token() const {
    return data_->frame_token;
  }
 private:
  internal::RenderFrameMetadataObserverClient_OnFrameSubmissionForTesting_Params_Data* data_ = nullptr;
};



class RenderFrameMetadataObserverClient_OnRootScrollOffsetChanged_ParamsDataView {
 public:
  RenderFrameMetadataObserverClient_OnRootScrollOffsetChanged_ParamsDataView() = default;

  RenderFrameMetadataObserverClient_OnRootScrollOffsetChanged_ParamsDataView(
      internal::RenderFrameMetadataObserverClient_OnRootScrollOffsetChanged_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetRootScrollOffsetDataView(
      ::gfx::mojom::PointFDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadRootScrollOffset(UserType* output) {
    
    auto* pointer = data_->root_scroll_offset.Get();
    return mojo::internal::Deserialize<::gfx::mojom::PointFDataView>(
        pointer, output, message_);
  }
 private:
  internal::RenderFrameMetadataObserverClient_OnRootScrollOffsetChanged_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};






inline void RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_ParamsDataView::GetMetadataDataView(
    RenderFrameMetadataDataView* output) {
  auto pointer = data_->metadata.Get();
  *output = RenderFrameMetadataDataView(pointer, message_);
}




inline void RenderFrameMetadataObserverClient_OnRootScrollOffsetChanged_ParamsDataView::GetRootScrollOffsetDataView(
    ::gfx::mojom::PointFDataView* output) {
  auto pointer = data_->root_scroll_offset.Get();
  *output = ::gfx::mojom::PointFDataView(pointer, message_);
}

}  // namespace mojom
}  // namespace cc

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // CC_MOJOM_RENDER_FRAME_METADATA_MOJOM_PARAMS_DATA_H_