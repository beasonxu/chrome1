// media/mojo/mojom/video_encoder_info.mojom.m.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import {mojo} from '../../../mojo/public/js/bindings.js';

import {
  Size as gfx_mojom_Size,
  SizeSpec as gfx_mojom_SizeSpec
} from '../../../ui/gfx/geometry/mojom/geometry.mojom.m.js';



/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const ResolutionBitrateLimitSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const VideoEncoderInfoSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    ResolutionBitrateLimitSpec.$,
    'ResolutionBitrateLimit',
    [
      mojo.internal.StructField(
        'frameSize', 0,
        0,
        gfx_mojom_SizeSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'minStartBitrateBps', 8,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'minBitrateBps', 12,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'maxBitrateBps', 16,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class ResolutionBitrateLimit {
  constructor() {
    /** @type { !gfx_mojom_Size } */
    this.frameSize;
    /** @type { !number } */
    this.minStartBitrateBps;
    /** @type { !number } */
    this.minBitrateBps;
    /** @type { !number } */
    this.maxBitrateBps;
  }
}



mojo.internal.Struct(
    VideoEncoderInfoSpec.$,
    'VideoEncoderInfo',
    [
      mojo.internal.StructField(
        'implementationName', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'supportsNativeHandle', 8,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'hasTrustedRateController', 8,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'isHardwareAccelerated', 8,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'supportsSimulcast', 8,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'reportsAverageQp', 8,
        4,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'fpsAllocation', 16,
        0,
        mojo.internal.Array(mojo.internal.Array(mojo.internal.Uint8, false), false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'resolutionBitrateLimits', 24,
        0,
        mojo.internal.Array(ResolutionBitrateLimitSpec.$, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 40],]);



/**
 * @record
 */
export class VideoEncoderInfo {
  constructor() {
    /** @type { !string } */
    this.implementationName;
    /** @type { !boolean } */
    this.supportsNativeHandle;
    /** @type { !boolean } */
    this.hasTrustedRateController;
    /** @type { !boolean } */
    this.isHardwareAccelerated;
    /** @type { !boolean } */
    this.supportsSimulcast;
    /** @type { !boolean } */
    this.reportsAverageQp;
    /** @type { !Array<!Array<!number>> } */
    this.fpsAllocation;
    /** @type { !Array<!ResolutionBitrateLimit> } */
    this.resolutionBitrateLimits;
  }
}

