// media/mojo/mojom/video_encoder_info.mojom-lite-for-compile.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';

goog.require('mojo.internal');

goog.require('gfx.mojom.Size');






goog.provide('media.mojom.ResolutionBitrateLimitSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
media.mojom.ResolutionBitrateLimitSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('media.mojom.VideoEncoderInfoSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
media.mojom.VideoEncoderInfoSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    media.mojom.ResolutionBitrateLimitSpec.$,
    'ResolutionBitrateLimit',
    [
      mojo.internal.StructField(
        'frameSize', 0,
        0,
        gfx.mojom.SizeSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'minStartBitrateBps', 8,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'minBitrateBps', 12,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'maxBitrateBps', 16,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ],
    [[0, 32],]);



goog.provide('media.mojom.ResolutionBitrateLimit');

/** @record */
media.mojom.ResolutionBitrateLimit = class {
  constructor() {
    /** @export { !gfx.mojom.Size } */
    this.frameSize;
    /** @export { !number } */
    this.minStartBitrateBps;
    /** @export { !number } */
    this.minBitrateBps;
    /** @export { !number } */
    this.maxBitrateBps;
  }
};




mojo.internal.Struct(
    media.mojom.VideoEncoderInfoSpec.$,
    'VideoEncoderInfo',
    [
      mojo.internal.StructField(
        'implementationName', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'supportsNativeHandle', 8,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'hasTrustedRateController', 8,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'isHardwareAccelerated', 8,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'supportsSimulcast', 8,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'reportsAverageQp', 8,
        4,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'fpsAllocation', 16,
        0,
        mojo.internal.Array(mojo.internal.Array(mojo.internal.Uint8, false), false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'resolutionBitrateLimits', 24,
        0,
        mojo.internal.Array(media.mojom.ResolutionBitrateLimitSpec.$, false),
        null,
        false /* nullable */),
    ],
    [[0, 40],]);



goog.provide('media.mojom.VideoEncoderInfo');

/** @record */
media.mojom.VideoEncoderInfo = class {
  constructor() {
    /** @export { !string } */
    this.implementationName;
    /** @export { !boolean } */
    this.supportsNativeHandle;
    /** @export { !boolean } */
    this.hasTrustedRateController;
    /** @export { !boolean } */
    this.isHardwareAccelerated;
    /** @export { !boolean } */
    this.supportsSimulcast;
    /** @export { !boolean } */
    this.reportsAverageQp;
    /** @export { !Array<!Array<!number>> } */
    this.fpsAllocation;
    /** @export { !Array<!media.mojom.ResolutionBitrateLimit> } */
    this.resolutionBitrateLimits;
  }
};


