// media/mojo/mojom/cdm_document_service.mojom-lite-for-compile.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';

goog.require('mojo.internal');
goog.require('mojo.internal.interfaceSupport');







goog.provide('media.mojom.CdmDocumentService');
goog.provide('media.mojom.CdmDocumentServiceReceiver');
goog.provide('media.mojom.CdmDocumentServiceCallbackRouter');
goog.provide('media.mojom.CdmDocumentServiceInterface');
goog.provide('media.mojom.CdmDocumentServiceRemote');
goog.provide('media.mojom.CdmDocumentServicePendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
media.mojom.CdmDocumentServicePendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        media.mojom.CdmDocumentService.$interfaceName,
        scope);
  }
};

/** @interface */
media.mojom.CdmDocumentServiceInterface = class {
  
  /**
   * @param { !string } serviceId
   * @param { !string } challenge
   * @return {!Promise<{
        success: !boolean,
        signedData: !string,
        signedDataSignature: !string,
        platformKeyCertificate: !string,
   *  }>}
   */

  challengePlatform(serviceId, challenge) {}
  
  /**
   * @param { !number } version
   * @return {!Promise<{
        version: !number,
        storageId: !Array<!number>,
   *  }>}
   */

  getStorageId(version) {}
};

/**
 * @export
 * @implements { media.mojom.CdmDocumentServiceInterface }
 */
media.mojom.CdmDocumentServiceRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!media.mojom.CdmDocumentServicePendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          media.mojom.CdmDocumentServicePendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!media.mojom.CdmDocumentServicePendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !string } serviceId
   * @param { !string } challenge
   * @return {!Promise<{
        success: !boolean,
        signedData: !string,
        signedDataSignature: !string,
        platformKeyCertificate: !string,
   *  }>}
   */

  challengePlatform(
      serviceId,
      challenge) {
    return this.proxy.sendMessage(
        0,
        media.mojom.CdmDocumentService_ChallengePlatform_ParamsSpec.$,
        media.mojom.CdmDocumentService_ChallengePlatform_ResponseParamsSpec.$,
        [
          serviceId,
          challenge
        ]);
  }

  
  /**
   * @param { !number } version
   * @return {!Promise<{
        version: !number,
        storageId: !Array<!number>,
   *  }>}
   */

  getStorageId(
      version) {
    return this.proxy.sendMessage(
        1,
        media.mojom.CdmDocumentService_GetStorageId_ParamsSpec.$,
        media.mojom.CdmDocumentService_GetStorageId_ResponseParamsSpec.$,
        [
          version
        ]);
  }
};

/**
 * An object which receives request messages for the CdmDocumentService
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
media.mojom.CdmDocumentServiceReceiver = class {
  /**
   * @param {!media.mojom.CdmDocumentServiceInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!media.mojom.CdmDocumentServiceRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        media.mojom.CdmDocumentServiceRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!media.mojom.CdmDocumentServiceRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        media.mojom.CdmDocumentService_ChallengePlatform_ParamsSpec.$,
        media.mojom.CdmDocumentService_ChallengePlatform_ResponseParamsSpec.$,
        impl.challengePlatform.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        media.mojom.CdmDocumentService_GetStorageId_ParamsSpec.$,
        media.mojom.CdmDocumentService_GetStorageId_ResponseParamsSpec.$,
        impl.getStorageId.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
media.mojom.CdmDocumentService = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "media.mojom.CdmDocumentService";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!media.mojom.CdmDocumentServiceRemote}
   * @export
   */
  static getRemote() {
    let remote = new media.mojom.CdmDocumentServiceRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the CdmDocumentService
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
media.mojom.CdmDocumentServiceCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      media.mojom.CdmDocumentServiceRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!media.mojom.CdmDocumentServiceRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.challengePlatform =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        media.mojom.CdmDocumentService_ChallengePlatform_ParamsSpec.$,
        media.mojom.CdmDocumentService_ChallengePlatform_ResponseParamsSpec.$,
        this.challengePlatform.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getStorageId =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        media.mojom.CdmDocumentService_GetStorageId_ParamsSpec.$,
        media.mojom.CdmDocumentService_GetStorageId_ResponseParamsSpec.$,
        this.getStorageId.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('media.mojom.CdmDocumentService_ChallengePlatform_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
media.mojom.CdmDocumentService_ChallengePlatform_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('media.mojom.CdmDocumentService_ChallengePlatform_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
media.mojom.CdmDocumentService_ChallengePlatform_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('media.mojom.CdmDocumentService_GetStorageId_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
media.mojom.CdmDocumentService_GetStorageId_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('media.mojom.CdmDocumentService_GetStorageId_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
media.mojom.CdmDocumentService_GetStorageId_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    media.mojom.CdmDocumentService_ChallengePlatform_ParamsSpec.$,
    'CdmDocumentService_ChallengePlatform_Params',
    [
      mojo.internal.StructField(
        'serviceId', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'challenge', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('media.mojom.CdmDocumentService_ChallengePlatform_Params');

/** @record */
media.mojom.CdmDocumentService_ChallengePlatform_Params = class {
  constructor() {
    /** @export { !string } */
    this.serviceId;
    /** @export { !string } */
    this.challenge;
  }
};




mojo.internal.Struct(
    media.mojom.CdmDocumentService_ChallengePlatform_ResponseParamsSpec.$,
    'CdmDocumentService_ChallengePlatform_ResponseParams',
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'signedData', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'signedDataSignature', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'platformKeyCertificate', 24,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ],
    [[0, 40],]);



goog.provide('media.mojom.CdmDocumentService_ChallengePlatform_ResponseParams');

/** @record */
media.mojom.CdmDocumentService_ChallengePlatform_ResponseParams = class {
  constructor() {
    /** @export { !boolean } */
    this.success;
    /** @export { !string } */
    this.signedData;
    /** @export { !string } */
    this.signedDataSignature;
    /** @export { !string } */
    this.platformKeyCertificate;
  }
};




mojo.internal.Struct(
    media.mojom.CdmDocumentService_GetStorageId_ParamsSpec.$,
    'CdmDocumentService_GetStorageId_Params',
    [
      mojo.internal.StructField(
        'version', 0,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('media.mojom.CdmDocumentService_GetStorageId_Params');

/** @record */
media.mojom.CdmDocumentService_GetStorageId_Params = class {
  constructor() {
    /** @export { !number } */
    this.version;
  }
};




mojo.internal.Struct(
    media.mojom.CdmDocumentService_GetStorageId_ResponseParamsSpec.$,
    'CdmDocumentService_GetStorageId_ResponseParams',
    [
      mojo.internal.StructField(
        'version', 0,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'storageId', 8,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('media.mojom.CdmDocumentService_GetStorageId_ResponseParams');

/** @record */
media.mojom.CdmDocumentService_GetStorageId_ResponseParams = class {
  constructor() {
    /** @export { !number } */
    this.version;
    /** @export { !Array<!number> } */
    this.storageId;
  }
};


