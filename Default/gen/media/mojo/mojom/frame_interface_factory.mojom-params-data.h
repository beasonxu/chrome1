// media/mojo/mojom/frame_interface_factory.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef MEDIA_MOJO_MOJOM_FRAME_INTERFACE_FACTORY_MOJOM_PARAMS_DATA_H_
#define MEDIA_MOJO_MOJOM_FRAME_INTERFACE_FACTORY_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace media {
namespace mojom {
namespace internal {

class ValidationContext;
class  FrameInterfaceFactory_CreateProvisionFetcher_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Handle_Data provision_fetcher;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<FrameInterfaceFactory_CreateProvisionFetcher_Params_Data>;

  FrameInterfaceFactory_CreateProvisionFetcher_Params_Data();
  ~FrameInterfaceFactory_CreateProvisionFetcher_Params_Data() = delete;
};
static_assert(sizeof(FrameInterfaceFactory_CreateProvisionFetcher_Params_Data) == 16,
              "Bad sizeof(FrameInterfaceFactory_CreateProvisionFetcher_Params_Data)");
class  FrameInterfaceFactory_CreateCdmStorage_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Handle_Data cdm_storage;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<FrameInterfaceFactory_CreateCdmStorage_Params_Data>;

  FrameInterfaceFactory_CreateCdmStorage_Params_Data();
  ~FrameInterfaceFactory_CreateCdmStorage_Params_Data() = delete;
};
static_assert(sizeof(FrameInterfaceFactory_CreateCdmStorage_Params_Data) == 16,
              "Bad sizeof(FrameInterfaceFactory_CreateCdmStorage_Params_Data)");
class  FrameInterfaceFactory_GetCdmOrigin_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<FrameInterfaceFactory_GetCdmOrigin_Params_Data>;

  FrameInterfaceFactory_GetCdmOrigin_Params_Data();
  ~FrameInterfaceFactory_GetCdmOrigin_Params_Data() = delete;
};
static_assert(sizeof(FrameInterfaceFactory_GetCdmOrigin_Params_Data) == 8,
              "Bad sizeof(FrameInterfaceFactory_GetCdmOrigin_Params_Data)");
class  FrameInterfaceFactory_GetCdmOrigin_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::url::mojom::internal::Origin_Data> cdm_origin;

 private:
  friend class mojo::internal::MessageFragment<FrameInterfaceFactory_GetCdmOrigin_ResponseParams_Data>;

  FrameInterfaceFactory_GetCdmOrigin_ResponseParams_Data();
  ~FrameInterfaceFactory_GetCdmOrigin_ResponseParams_Data() = delete;
};
static_assert(sizeof(FrameInterfaceFactory_GetCdmOrigin_ResponseParams_Data) == 16,
              "Bad sizeof(FrameInterfaceFactory_GetCdmOrigin_ResponseParams_Data)");
class  FrameInterfaceFactory_BindEmbedderReceiver_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::mojo_base::mojom::internal::GenericPendingReceiver_Data> receiver;

 private:
  friend class mojo::internal::MessageFragment<FrameInterfaceFactory_BindEmbedderReceiver_Params_Data>;

  FrameInterfaceFactory_BindEmbedderReceiver_Params_Data();
  ~FrameInterfaceFactory_BindEmbedderReceiver_Params_Data() = delete;
};
static_assert(sizeof(FrameInterfaceFactory_BindEmbedderReceiver_Params_Data) == 16,
              "Bad sizeof(FrameInterfaceFactory_BindEmbedderReceiver_Params_Data)");

}  // namespace internal


class FrameInterfaceFactory_CreateProvisionFetcher_ParamsDataView {
 public:
  FrameInterfaceFactory_CreateProvisionFetcher_ParamsDataView() = default;

  FrameInterfaceFactory_CreateProvisionFetcher_ParamsDataView(
      internal::FrameInterfaceFactory_CreateProvisionFetcher_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeProvisionFetcher() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfaceRequestDataView<::media::mojom::ProvisionFetcherInterfaceBase>>(
            &data_->provision_fetcher, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::FrameInterfaceFactory_CreateProvisionFetcher_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class FrameInterfaceFactory_CreateCdmStorage_ParamsDataView {
 public:
  FrameInterfaceFactory_CreateCdmStorage_ParamsDataView() = default;

  FrameInterfaceFactory_CreateCdmStorage_ParamsDataView(
      internal::FrameInterfaceFactory_CreateCdmStorage_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeCdmStorage() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfaceRequestDataView<::media::mojom::CdmStorageInterfaceBase>>(
            &data_->cdm_storage, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::FrameInterfaceFactory_CreateCdmStorage_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class FrameInterfaceFactory_GetCdmOrigin_ParamsDataView {
 public:
  FrameInterfaceFactory_GetCdmOrigin_ParamsDataView() = default;

  FrameInterfaceFactory_GetCdmOrigin_ParamsDataView(
      internal::FrameInterfaceFactory_GetCdmOrigin_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::FrameInterfaceFactory_GetCdmOrigin_Params_Data* data_ = nullptr;
};



class FrameInterfaceFactory_GetCdmOrigin_ResponseParamsDataView {
 public:
  FrameInterfaceFactory_GetCdmOrigin_ResponseParamsDataView() = default;

  FrameInterfaceFactory_GetCdmOrigin_ResponseParamsDataView(
      internal::FrameInterfaceFactory_GetCdmOrigin_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetCdmOriginDataView(
      ::url::mojom::OriginDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadCdmOrigin(UserType* output) {
    
    auto* pointer = data_->cdm_origin.Get();
    return mojo::internal::Deserialize<::url::mojom::OriginDataView>(
        pointer, output, message_);
  }
 private:
  internal::FrameInterfaceFactory_GetCdmOrigin_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class FrameInterfaceFactory_BindEmbedderReceiver_ParamsDataView {
 public:
  FrameInterfaceFactory_BindEmbedderReceiver_ParamsDataView() = default;

  FrameInterfaceFactory_BindEmbedderReceiver_ParamsDataView(
      internal::FrameInterfaceFactory_BindEmbedderReceiver_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetReceiverDataView(
      ::mojo_base::mojom::GenericPendingReceiverDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadReceiver(UserType* output) {
    
    auto* pointer = data_->receiver.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::GenericPendingReceiverDataView>(
        pointer, output, message_);
  }
 private:
  internal::FrameInterfaceFactory_BindEmbedderReceiver_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};








inline void FrameInterfaceFactory_GetCdmOrigin_ResponseParamsDataView::GetCdmOriginDataView(
    ::url::mojom::OriginDataView* output) {
  auto pointer = data_->cdm_origin.Get();
  *output = ::url::mojom::OriginDataView(pointer, message_);
}


inline void FrameInterfaceFactory_BindEmbedderReceiver_ParamsDataView::GetReceiverDataView(
    ::mojo_base::mojom::GenericPendingReceiverDataView* output) {
  auto pointer = data_->receiver.Get();
  *output = ::mojo_base::mojom::GenericPendingReceiverDataView(pointer, message_);
}

}  // namespace mojom
}  // namespace media

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // MEDIA_MOJO_MOJOM_FRAME_INTERFACE_FACTORY_MOJOM_PARAMS_DATA_H_