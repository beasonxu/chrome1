// skia/public/mojom/bitmap.mojom-lite.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';


mojo.internal.exportModule('skia.mojom');







/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
skia.mojom.BitmapN32Spec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
skia.mojom.BitmapWithArbitraryBppSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
skia.mojom.BitmapMappedFromTrustedProcessSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
skia.mojom.InlineBitmapSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    skia.mojom.BitmapN32Spec.$,
    'BitmapN32',
    [
      mojo.internal.StructField(
        'imageInfo', 0,
        0,
        skia.mojom.BitmapN32ImageInfoSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'pixelData', 8,
        0,
        mojoBase.mojom.BigBufferSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 32],]);





/** @record */
skia.mojom.BitmapN32 = class {
  constructor() {
    /** @export { !skia.mojom.BitmapN32ImageInfo } */
    this.imageInfo;
    /** @export { !mojoBase.mojom.BigBuffer } */
    this.pixelData;
  }
};




mojo.internal.Struct(
    skia.mojom.BitmapWithArbitraryBppSpec.$,
    'BitmapWithArbitraryBpp',
    [
      mojo.internal.StructField(
        'imageInfo', 0,
        0,
        skia.mojom.ImageInfoSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'uNUSEDRowBytes', 8,
        0,
        mojo.internal.Uint64,
        BigInt(0),
        false /* nullable */),
      mojo.internal.StructField(
        'pixelData', 16,
        0,
        mojoBase.mojom.BigBufferSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 40],]);





/** @record */
skia.mojom.BitmapWithArbitraryBpp = class {
  constructor() {
    /** @export { !skia.mojom.ImageInfo } */
    this.imageInfo;
    /** @export { !bigint } */
    this.uNUSEDRowBytes;
    /** @export { !mojoBase.mojom.BigBuffer } */
    this.pixelData;
  }
};




mojo.internal.Struct(
    skia.mojom.BitmapMappedFromTrustedProcessSpec.$,
    'BitmapMappedFromTrustedProcess',
    [
      mojo.internal.StructField(
        'imageInfo', 0,
        0,
        skia.mojom.ImageInfoSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'uNUSEDRowBytes', 8,
        0,
        mojo.internal.Uint64,
        BigInt(0),
        false /* nullable */),
      mojo.internal.StructField(
        'pixelData', 16,
        0,
        mojoBase.mojom.BigBufferSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 40],]);





/** @record */
skia.mojom.BitmapMappedFromTrustedProcess = class {
  constructor() {
    /** @export { !skia.mojom.ImageInfo } */
    this.imageInfo;
    /** @export { !bigint } */
    this.uNUSEDRowBytes;
    /** @export { !mojoBase.mojom.BigBuffer } */
    this.pixelData;
  }
};




mojo.internal.Struct(
    skia.mojom.InlineBitmapSpec.$,
    'InlineBitmap',
    [
      mojo.internal.StructField(
        'imageInfo', 0,
        0,
        skia.mojom.BitmapN32ImageInfoSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'pixelData', 8,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */),
    ],
    [[0, 24],]);





/** @record */
skia.mojom.InlineBitmap = class {
  constructor() {
    /** @export { !skia.mojom.BitmapN32ImageInfo } */
    this.imageInfo;
    /** @export { !Array<!number> } */
    this.pixelData;
  }
};


