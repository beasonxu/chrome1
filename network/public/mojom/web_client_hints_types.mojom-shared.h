// services/network/public/mojom/web_client_hints_types.mojom-shared.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SERVICES_NETWORK_PUBLIC_MOJOM_WEB_CLIENT_HINTS_TYPES_MOJOM_SHARED_H_
#define SERVICES_NETWORK_PUBLIC_MOJOM_WEB_CLIENT_HINTS_TYPES_MOJOM_SHARED_H_

#include <stdint.h>

#include <functional>
#include <iosfwd>
#include <type_traits>
#include <utility>

#include "third_party/perfetto/include/perfetto/tracing/traced_value_forward.h"

#include "services/network/public/mojom/web_client_hints_types.mojom-shared-internal.h"







namespace network {
namespace mojom {


}  // namespace mojom
}  // namespace network

namespace mojo {
namespace internal {

}  // namespace internal
}  // namespace mojo


namespace network {
namespace mojom {


enum class WebClientHintsType : int32_t {
  
  kDeviceMemory_DEPRECATED = 0,
  
  kDpr_DEPRECATED = 1,
  
  kResourceWidth_DEPRECATED = 2,
  
  kViewportWidth_DEPRECATED = 3,
  
  kRtt_DEPRECATED = 4,
  
  kDownlink_DEPRECATED = 5,
  
  kEct_DEPRECATED = 6,
  
  kUA = 8,
  
  kUAArch = 9,
  
  kUAPlatform = 10,
  
  kUAModel = 11,
  
  kUAMobile = 12,
  
  kUAFullVersion = 13,
  
  kUAPlatformVersion = 14,
  
  kPrefersColorScheme = 15,
  
  kUABitness = 16,
  
  kUAReduced = 17,
  
  kViewportHeight = 18,
  
  kDeviceMemory = 19,
  
  kDpr = 20,
  
  kResourceWidth = 21,
  
  kViewportWidth = 22,
  
  kUAFullVersionList = 23,
  
  kFullUserAgent = 24,
  
  kUAWoW64 = 25,
  
  kSaveData = 27,
  kMinValue = 0,
  kMaxValue = 27,
};

 std::ostream& operator<<(std::ostream& os, WebClientHintsType value);
inline bool IsKnownEnumValue(WebClientHintsType value) {
  return internal::WebClientHintsType_Data::IsKnownValue(
      static_cast<int32_t>(value));
}


}  // namespace mojom
}  // namespace network

namespace std {

template <>
struct hash<::network::mojom::WebClientHintsType>
    : public mojo::internal::EnumHashImpl<::network::mojom::WebClientHintsType> {};

}  // namespace std

namespace mojo {


namespace internal {

template <typename MaybeConstUserType>
struct Serializer<::network::mojom::WebClientHintsType, MaybeConstUserType> {
  using UserType = typename std::remove_const<MaybeConstUserType>::type;
  using Traits = EnumTraits<::network::mojom::WebClientHintsType, UserType>;

  static void Serialize(UserType input, int32_t* output) {
    *output = static_cast<int32_t>(Traits::ToMojom(input));
  }

  static bool Deserialize(int32_t input, UserType* output) {
    return Traits::FromMojom(::mojo::internal::ToKnownEnumValueHelper(
        static_cast<::network::mojom::WebClientHintsType>(input)), output);
  }
};

}  // namespace internal

}  // namespace mojo


namespace network {
namespace mojom {


}  // namespace mojom
}  // namespace network

// Declare TraceFormatTraits for enums, which should be defined in ::perfetto
// namespace.

namespace perfetto {

template <>
struct  TraceFormatTraits<::network::mojom::WebClientHintsType> {
 static void WriteIntoTrace(perfetto::TracedValue context, ::network::mojom::WebClientHintsType value);
};

} // namespace perfetto

#endif  // SERVICES_NETWORK_PUBLIC_MOJOM_WEB_CLIENT_HINTS_TYPES_MOJOM_SHARED_H_