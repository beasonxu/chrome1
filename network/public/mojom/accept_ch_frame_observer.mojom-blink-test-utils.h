// services/network/public/mojom/accept_ch_frame_observer.mojom-blink-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SERVICES_NETWORK_PUBLIC_MOJOM_ACCEPT_CH_FRAME_OBSERVER_MOJOM_BLINK_TEST_UTILS_H_
#define SERVICES_NETWORK_PUBLIC_MOJOM_ACCEPT_CH_FRAME_OBSERVER_MOJOM_BLINK_TEST_UTILS_H_

#include "services/network/public/mojom/accept_ch_frame_observer.mojom-blink.h"
#include "third_party/blink/public/platform/web_common.h"


namespace network {
namespace mojom {
namespace blink {


class BLINK_PLATFORM_EXPORT AcceptCHFrameObserverInterceptorForTesting : public AcceptCHFrameObserver {
  virtual AcceptCHFrameObserver* GetForwardingInterface() = 0;
  void OnAcceptCHFrameReceived(const ::scoped_refptr<const ::blink::SecurityOrigin>& origin, const WTF::Vector<::network::mojom::blink::WebClientHintsType>& accept_ch_frame, OnAcceptCHFrameReceivedCallback callback) override;
  void Clone(::mojo::PendingReceiver<AcceptCHFrameObserver> listener) override;
};
class BLINK_PLATFORM_EXPORT AcceptCHFrameObserverAsyncWaiter {
 public:
  explicit AcceptCHFrameObserverAsyncWaiter(AcceptCHFrameObserver* proxy);

  AcceptCHFrameObserverAsyncWaiter(const AcceptCHFrameObserverAsyncWaiter&) = delete;
  AcceptCHFrameObserverAsyncWaiter& operator=(const AcceptCHFrameObserverAsyncWaiter&) = delete;

  ~AcceptCHFrameObserverAsyncWaiter();
  void OnAcceptCHFrameReceived(
      const ::scoped_refptr<const ::blink::SecurityOrigin>& origin, const WTF::Vector<::network::mojom::blink::WebClientHintsType>& accept_ch_frame, int32_t* out_status);

 private:
  AcceptCHFrameObserver* const proxy_;
};




}  // namespace blink
}  // namespace mojom
}  // namespace network

#endif  // SERVICES_NETWORK_PUBLIC_MOJOM_ACCEPT_CH_FRAME_OBSERVER_MOJOM_BLINK_TEST_UTILS_H_