// services/network/public/mojom/proxy_lookup_client.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SERVICES_NETWORK_PUBLIC_MOJOM_PROXY_LOOKUP_CLIENT_MOJOM_PARAMS_DATA_H_
#define SERVICES_NETWORK_PUBLIC_MOJOM_PROXY_LOOKUP_CLIENT_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace network {
namespace mojom {
namespace internal {

class ValidationContext;
class  ProxyLookupClient_OnProxyLookupComplete_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t net_error;
  uint8_t pad0_[4];
  mojo::internal::Pointer<::proxy_resolver::mojom::internal::ProxyInfo_Data> proxy_info;

 private:
  friend class mojo::internal::MessageFragment<ProxyLookupClient_OnProxyLookupComplete_Params_Data>;

  ProxyLookupClient_OnProxyLookupComplete_Params_Data();
  ~ProxyLookupClient_OnProxyLookupComplete_Params_Data() = delete;
};
static_assert(sizeof(ProxyLookupClient_OnProxyLookupComplete_Params_Data) == 24,
              "Bad sizeof(ProxyLookupClient_OnProxyLookupComplete_Params_Data)");

}  // namespace internal


class ProxyLookupClient_OnProxyLookupComplete_ParamsDataView {
 public:
  ProxyLookupClient_OnProxyLookupComplete_ParamsDataView() = default;

  ProxyLookupClient_OnProxyLookupComplete_ParamsDataView(
      internal::ProxyLookupClient_OnProxyLookupComplete_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  int32_t net_error() const {
    return data_->net_error;
  }
  inline void GetProxyInfoDataView(
      ::proxy_resolver::mojom::ProxyInfoDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadProxyInfo(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::proxy_resolver::mojom::ProxyInfoDataView, UserType>(),
    "Attempting to read the optional `proxy_info` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadProxyInfo` instead "
    "of `ReadProxyInfo if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->proxy_info.Get();
    return mojo::internal::Deserialize<::proxy_resolver::mojom::ProxyInfoDataView>(
        pointer, output, message_);
  }
 private:
  internal::ProxyLookupClient_OnProxyLookupComplete_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};


inline void ProxyLookupClient_OnProxyLookupComplete_ParamsDataView::GetProxyInfoDataView(
    ::proxy_resolver::mojom::ProxyInfoDataView* output) {
  auto pointer = data_->proxy_info.Get();
  *output = ::proxy_resolver::mojom::ProxyInfoDataView(pointer, message_);
}

}  // namespace mojom
}  // namespace network

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // SERVICES_NETWORK_PUBLIC_MOJOM_PROXY_LOOKUP_CLIENT_MOJOM_PARAMS_DATA_H_