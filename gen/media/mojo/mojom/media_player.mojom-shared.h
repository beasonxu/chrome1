// media/mojo/mojom/media_player.mojom-shared.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef MEDIA_MOJO_MOJOM_MEDIA_PLAYER_MOJOM_SHARED_H_
#define MEDIA_MOJO_MOJOM_MEDIA_PLAYER_MOJOM_SHARED_H_

#include <stdint.h>

#include <functional>
#include <iosfwd>
#include <type_traits>
#include <utility>
#include "mojo/public/cpp/bindings/array_data_view.h"
#include "mojo/public/cpp/bindings/enum_traits.h"
#include "mojo/public/cpp/bindings/interface_data_view.h"
#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/serialization.h"
#include "mojo/public/cpp/bindings/map_data_view.h"
#include "mojo/public/cpp/bindings/string_data_view.h"

#include "third_party/perfetto/include/perfetto/tracing/traced_value_forward.h"

#include "media/mojo/mojom/media_player.mojom-shared-internal.h"
#include "media/mojo/mojom/media_types.mojom-shared.h"
#include "mojo/public/mojom/base/time.mojom-shared.h"
#include "services/media_session/public/mojom/media_session.mojom-shared.h"
#include "ui/gfx/geometry/mojom/geometry.mojom-shared.h"
#include "mojo/public/cpp/bindings/lib/interface_serialization.h"






namespace media {
namespace mojom {


}  // namespace mojom
}  // namespace media

namespace mojo {
namespace internal {

}  // namespace internal
}  // namespace mojo


namespace media {
namespace mojom {
// Interface base classes. They are used for type safety check.
class MediaPlayerInterfaceBase {};

using MediaPlayerPtrDataView =
    mojo::InterfacePtrDataView<MediaPlayerInterfaceBase>;
using MediaPlayerRequestDataView =
    mojo::InterfaceRequestDataView<MediaPlayerInterfaceBase>;
using MediaPlayerAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<MediaPlayerInterfaceBase>;
using MediaPlayerAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<MediaPlayerInterfaceBase>;
class MediaPlayerObserverClientInterfaceBase {};

using MediaPlayerObserverClientPtrDataView =
    mojo::InterfacePtrDataView<MediaPlayerObserverClientInterfaceBase>;
using MediaPlayerObserverClientRequestDataView =
    mojo::InterfaceRequestDataView<MediaPlayerObserverClientInterfaceBase>;
using MediaPlayerObserverClientAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<MediaPlayerObserverClientInterfaceBase>;
using MediaPlayerObserverClientAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<MediaPlayerObserverClientInterfaceBase>;
class MediaPlayerObserverInterfaceBase {};

using MediaPlayerObserverPtrDataView =
    mojo::InterfacePtrDataView<MediaPlayerObserverInterfaceBase>;
using MediaPlayerObserverRequestDataView =
    mojo::InterfaceRequestDataView<MediaPlayerObserverInterfaceBase>;
using MediaPlayerObserverAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<MediaPlayerObserverInterfaceBase>;
using MediaPlayerObserverAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<MediaPlayerObserverInterfaceBase>;
class MediaPlayerHostInterfaceBase {};

using MediaPlayerHostPtrDataView =
    mojo::InterfacePtrDataView<MediaPlayerHostInterfaceBase>;
using MediaPlayerHostRequestDataView =
    mojo::InterfaceRequestDataView<MediaPlayerHostInterfaceBase>;
using MediaPlayerHostAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<MediaPlayerHostInterfaceBase>;
using MediaPlayerHostAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<MediaPlayerHostInterfaceBase>;


}  // namespace mojom
}  // namespace media

namespace std {

}  // namespace std

namespace mojo {

}  // namespace mojo


namespace media {
namespace mojom {


}  // namespace mojom
}  // namespace media

// Declare TraceFormatTraits for enums, which should be defined in ::perfetto
// namespace.

#endif  // MEDIA_MOJO_MOJOM_MEDIA_PLAYER_MOJOM_SHARED_H_