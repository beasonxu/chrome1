// media/mojo/mojom/output_protection.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef MEDIA_MOJO_MOJOM_OUTPUT_PROTECTION_MOJOM_PARAMS_DATA_H_
#define MEDIA_MOJO_MOJOM_OUTPUT_PROTECTION_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace media {
namespace mojom {
namespace internal {

class ValidationContext;
class  OutputProtection_QueryStatus_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<OutputProtection_QueryStatus_Params_Data>;

  OutputProtection_QueryStatus_Params_Data();
  ~OutputProtection_QueryStatus_Params_Data() = delete;
};
static_assert(sizeof(OutputProtection_QueryStatus_Params_Data) == 8,
              "Bad sizeof(OutputProtection_QueryStatus_Params_Data)");
class  OutputProtection_QueryStatus_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t success : 1;
  uint8_t pad0_[3];
  uint32_t link_mask;
  uint32_t protection_mask;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<OutputProtection_QueryStatus_ResponseParams_Data>;

  OutputProtection_QueryStatus_ResponseParams_Data();
  ~OutputProtection_QueryStatus_ResponseParams_Data() = delete;
};
static_assert(sizeof(OutputProtection_QueryStatus_ResponseParams_Data) == 24,
              "Bad sizeof(OutputProtection_QueryStatus_ResponseParams_Data)");
class  OutputProtection_EnableProtection_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint32_t desired_protection_mask;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<OutputProtection_EnableProtection_Params_Data>;

  OutputProtection_EnableProtection_Params_Data();
  ~OutputProtection_EnableProtection_Params_Data() = delete;
};
static_assert(sizeof(OutputProtection_EnableProtection_Params_Data) == 16,
              "Bad sizeof(OutputProtection_EnableProtection_Params_Data)");
class  OutputProtection_EnableProtection_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t success : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<OutputProtection_EnableProtection_ResponseParams_Data>;

  OutputProtection_EnableProtection_ResponseParams_Data();
  ~OutputProtection_EnableProtection_ResponseParams_Data() = delete;
};
static_assert(sizeof(OutputProtection_EnableProtection_ResponseParams_Data) == 16,
              "Bad sizeof(OutputProtection_EnableProtection_ResponseParams_Data)");

}  // namespace internal


class OutputProtection_QueryStatus_ParamsDataView {
 public:
  OutputProtection_QueryStatus_ParamsDataView() = default;

  OutputProtection_QueryStatus_ParamsDataView(
      internal::OutputProtection_QueryStatus_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::OutputProtection_QueryStatus_Params_Data* data_ = nullptr;
};



class OutputProtection_QueryStatus_ResponseParamsDataView {
 public:
  OutputProtection_QueryStatus_ResponseParamsDataView() = default;

  OutputProtection_QueryStatus_ResponseParamsDataView(
      internal::OutputProtection_QueryStatus_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool success() const {
    return data_->success;
  }
  uint32_t link_mask() const {
    return data_->link_mask;
  }
  uint32_t protection_mask() const {
    return data_->protection_mask;
  }
 private:
  internal::OutputProtection_QueryStatus_ResponseParams_Data* data_ = nullptr;
};



class OutputProtection_EnableProtection_ParamsDataView {
 public:
  OutputProtection_EnableProtection_ParamsDataView() = default;

  OutputProtection_EnableProtection_ParamsDataView(
      internal::OutputProtection_EnableProtection_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  uint32_t desired_protection_mask() const {
    return data_->desired_protection_mask;
  }
 private:
  internal::OutputProtection_EnableProtection_Params_Data* data_ = nullptr;
};



class OutputProtection_EnableProtection_ResponseParamsDataView {
 public:
  OutputProtection_EnableProtection_ResponseParamsDataView() = default;

  OutputProtection_EnableProtection_ResponseParamsDataView(
      internal::OutputProtection_EnableProtection_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool success() const {
    return data_->success;
  }
 private:
  internal::OutputProtection_EnableProtection_ResponseParams_Data* data_ = nullptr;
};









}  // namespace mojom
}  // namespace media

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // MEDIA_MOJO_MOJOM_OUTPUT_PROTECTION_MOJOM_PARAMS_DATA_H_