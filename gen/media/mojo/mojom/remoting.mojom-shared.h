// media/mojo/mojom/remoting.mojom-shared.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef MEDIA_MOJO_MOJOM_REMOTING_MOJOM_SHARED_H_
#define MEDIA_MOJO_MOJOM_REMOTING_MOJOM_SHARED_H_

#include <stdint.h>

#include <functional>
#include <iosfwd>
#include <type_traits>
#include <utility>
#include "mojo/public/cpp/bindings/array_data_view.h"
#include "mojo/public/cpp/bindings/enum_traits.h"
#include "mojo/public/cpp/bindings/interface_data_view.h"
#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/serialization.h"
#include "mojo/public/cpp/bindings/map_data_view.h"
#include "mojo/public/cpp/bindings/string_data_view.h"

#include "third_party/perfetto/include/perfetto/tracing/traced_value_forward.h"

#include "media/mojo/mojom/remoting.mojom-shared-internal.h"
#include "media/mojo/mojom/media_types.mojom-shared.h"
#include "media/mojo/mojom/remoting_common.mojom-shared.h"
#include "ui/gfx/geometry/mojom/geometry.mojom-shared.h"
#include "mojo/public/cpp/bindings/lib/interface_serialization.h"






namespace media {
namespace mojom {


}  // namespace mojom
}  // namespace media

namespace mojo {
namespace internal {

}  // namespace internal
}  // namespace mojo


namespace media {
namespace mojom {
// Interface base classes. They are used for type safety check.
class RemoterFactoryInterfaceBase {};

using RemoterFactoryPtrDataView =
    mojo::InterfacePtrDataView<RemoterFactoryInterfaceBase>;
using RemoterFactoryRequestDataView =
    mojo::InterfaceRequestDataView<RemoterFactoryInterfaceBase>;
using RemoterFactoryAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<RemoterFactoryInterfaceBase>;
using RemoterFactoryAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<RemoterFactoryInterfaceBase>;
class RemotingDataStreamSenderInterfaceBase {};

using RemotingDataStreamSenderPtrDataView =
    mojo::InterfacePtrDataView<RemotingDataStreamSenderInterfaceBase>;
using RemotingDataStreamSenderRequestDataView =
    mojo::InterfaceRequestDataView<RemotingDataStreamSenderInterfaceBase>;
using RemotingDataStreamSenderAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<RemotingDataStreamSenderInterfaceBase>;
using RemotingDataStreamSenderAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<RemotingDataStreamSenderInterfaceBase>;
class RemoterInterfaceBase {};

using RemoterPtrDataView =
    mojo::InterfacePtrDataView<RemoterInterfaceBase>;
using RemoterRequestDataView =
    mojo::InterfaceRequestDataView<RemoterInterfaceBase>;
using RemoterAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<RemoterInterfaceBase>;
using RemoterAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<RemoterInterfaceBase>;
class RemotingSourceInterfaceBase {};

using RemotingSourcePtrDataView =
    mojo::InterfacePtrDataView<RemotingSourceInterfaceBase>;
using RemotingSourceRequestDataView =
    mojo::InterfaceRequestDataView<RemotingSourceInterfaceBase>;
using RemotingSourceAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<RemotingSourceInterfaceBase>;
using RemotingSourceAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<RemotingSourceInterfaceBase>;
class RemoteeInterfaceBase {};

using RemoteePtrDataView =
    mojo::InterfacePtrDataView<RemoteeInterfaceBase>;
using RemoteeRequestDataView =
    mojo::InterfaceRequestDataView<RemoteeInterfaceBase>;
using RemoteeAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<RemoteeInterfaceBase>;
using RemoteeAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<RemoteeInterfaceBase>;
class RemotingSinkInterfaceBase {};

using RemotingSinkPtrDataView =
    mojo::InterfacePtrDataView<RemotingSinkInterfaceBase>;
using RemotingSinkRequestDataView =
    mojo::InterfaceRequestDataView<RemotingSinkInterfaceBase>;
using RemotingSinkAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<RemotingSinkInterfaceBase>;
using RemotingSinkAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<RemotingSinkInterfaceBase>;
class RemotingDataStreamReceiverInterfaceBase {};

using RemotingDataStreamReceiverPtrDataView =
    mojo::InterfacePtrDataView<RemotingDataStreamReceiverInterfaceBase>;
using RemotingDataStreamReceiverRequestDataView =
    mojo::InterfaceRequestDataView<RemotingDataStreamReceiverInterfaceBase>;
using RemotingDataStreamReceiverAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<RemotingDataStreamReceiverInterfaceBase>;
using RemotingDataStreamReceiverAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<RemotingDataStreamReceiverInterfaceBase>;


}  // namespace mojom
}  // namespace media

namespace std {

}  // namespace std

namespace mojo {

}  // namespace mojo


namespace media {
namespace mojom {


}  // namespace mojom
}  // namespace media

// Declare TraceFormatTraits for enums, which should be defined in ::perfetto
// namespace.

#endif  // MEDIA_MOJO_MOJOM_REMOTING_MOJOM_SHARED_H_