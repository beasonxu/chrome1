// media/mojo/mojom/stable/stable_video_decoder.mojom-shared.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef MEDIA_MOJO_MOJOM_STABLE_STABLE_VIDEO_DECODER_MOJOM_SHARED_H_
#define MEDIA_MOJO_MOJOM_STABLE_STABLE_VIDEO_DECODER_MOJOM_SHARED_H_

#include <stdint.h>

#include <functional>
#include <iosfwd>
#include <type_traits>
#include <utility>
#include "mojo/public/cpp/bindings/array_data_view.h"
#include "mojo/public/cpp/bindings/enum_traits.h"
#include "mojo/public/cpp/bindings/interface_data_view.h"
#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/serialization.h"
#include "mojo/public/cpp/bindings/map_data_view.h"
#include "mojo/public/cpp/bindings/string_data_view.h"

#include "third_party/perfetto/include/perfetto/tracing/traced_value_forward.h"

#include "media/mojo/mojom/stable/stable_video_decoder.mojom-shared-internal.h"
#include "media/mojo/mojom/stable/stable_video_decoder_types.mojom-shared.h"
#include "mojo/public/mojom/base/unguessable_token.mojom-shared.h"
#include "sandbox/policy/mojom/sandbox.mojom-shared.h"
#include "ui/gfx/geometry/mojom/geometry.mojom-shared.h"
#include "mojo/public/cpp/bindings/lib/interface_serialization.h"






namespace media {
namespace stable {
namespace mojom {


}  // namespace mojom
}  // namespace stable
}  // namespace media

namespace mojo {
namespace internal {

}  // namespace internal
}  // namespace mojo


namespace media {
namespace stable {
namespace mojom {
// Interface base classes. They are used for type safety check.
class MediaLogInterfaceBase {};

using MediaLogPtrDataView =
    mojo::InterfacePtrDataView<MediaLogInterfaceBase>;
using MediaLogRequestDataView =
    mojo::InterfaceRequestDataView<MediaLogInterfaceBase>;
using MediaLogAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<MediaLogInterfaceBase>;
using MediaLogAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<MediaLogInterfaceBase>;
class VideoFrameHandleReleaserInterfaceBase {};

using VideoFrameHandleReleaserPtrDataView =
    mojo::InterfacePtrDataView<VideoFrameHandleReleaserInterfaceBase>;
using VideoFrameHandleReleaserRequestDataView =
    mojo::InterfaceRequestDataView<VideoFrameHandleReleaserInterfaceBase>;
using VideoFrameHandleReleaserAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<VideoFrameHandleReleaserInterfaceBase>;
using VideoFrameHandleReleaserAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<VideoFrameHandleReleaserInterfaceBase>;
class VideoDecoderClientInterfaceBase {};

using VideoDecoderClientPtrDataView =
    mojo::InterfacePtrDataView<VideoDecoderClientInterfaceBase>;
using VideoDecoderClientRequestDataView =
    mojo::InterfaceRequestDataView<VideoDecoderClientInterfaceBase>;
using VideoDecoderClientAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<VideoDecoderClientInterfaceBase>;
using VideoDecoderClientAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<VideoDecoderClientInterfaceBase>;
class CdmContextEventCallbackInterfaceBase {};

using CdmContextEventCallbackPtrDataView =
    mojo::InterfacePtrDataView<CdmContextEventCallbackInterfaceBase>;
using CdmContextEventCallbackRequestDataView =
    mojo::InterfaceRequestDataView<CdmContextEventCallbackInterfaceBase>;
using CdmContextEventCallbackAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<CdmContextEventCallbackInterfaceBase>;
using CdmContextEventCallbackAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<CdmContextEventCallbackInterfaceBase>;
class StableCdmContextInterfaceBase {};

using StableCdmContextPtrDataView =
    mojo::InterfacePtrDataView<StableCdmContextInterfaceBase>;
using StableCdmContextRequestDataView =
    mojo::InterfaceRequestDataView<StableCdmContextInterfaceBase>;
using StableCdmContextAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<StableCdmContextInterfaceBase>;
using StableCdmContextAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<StableCdmContextInterfaceBase>;
class StableVideoDecoderInterfaceBase {};

using StableVideoDecoderPtrDataView =
    mojo::InterfacePtrDataView<StableVideoDecoderInterfaceBase>;
using StableVideoDecoderRequestDataView =
    mojo::InterfaceRequestDataView<StableVideoDecoderInterfaceBase>;
using StableVideoDecoderAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<StableVideoDecoderInterfaceBase>;
using StableVideoDecoderAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<StableVideoDecoderInterfaceBase>;
class StableVideoDecoderFactoryInterfaceBase {};

using StableVideoDecoderFactoryPtrDataView =
    mojo::InterfacePtrDataView<StableVideoDecoderFactoryInterfaceBase>;
using StableVideoDecoderFactoryRequestDataView =
    mojo::InterfaceRequestDataView<StableVideoDecoderFactoryInterfaceBase>;
using StableVideoDecoderFactoryAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<StableVideoDecoderFactoryInterfaceBase>;
using StableVideoDecoderFactoryAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<StableVideoDecoderFactoryInterfaceBase>;


}  // namespace mojom
}  // namespace stable
}  // namespace media

namespace std {

}  // namespace std

namespace mojo {

}  // namespace mojo


namespace media {
namespace stable {
namespace mojom {


}  // namespace mojom
}  // namespace stable
}  // namespace media

// Declare TraceFormatTraits for enums, which should be defined in ::perfetto
// namespace.

#endif  // MEDIA_MOJO_MOJOM_STABLE_STABLE_VIDEO_DECODER_MOJOM_SHARED_H_