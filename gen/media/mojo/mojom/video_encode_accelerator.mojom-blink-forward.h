// media/mojo/mojom/video_encode_accelerator.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef MEDIA_MOJO_MOJOM_VIDEO_ENCODE_ACCELERATOR_MOJOM_BLINK_FORWARD_H_
#define MEDIA_MOJO_MOJOM_VIDEO_ENCODE_ACCELERATOR_MOJOM_BLINK_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"



namespace mojo {
enum class NativeEnum;
}  // namespace mojo
namespace media {
namespace mojom {

enum class VideoEncodeAcceleratorSupportedRateControlMode : int32_t;

enum class VideoEncodeAcceleratorConfig_ContentType : int32_t;

enum class VideoEncodeAcceleratorConfig_InterLayerPredMode : int32_t;

enum class VideoEncodeAcceleratorConfig_StorageType : int32_t;

enum class VideoEncodeAccelerator_Error : int32_t;
class VideoEncodeAcceleratorProviderInterfaceBase;
class VideoEncodeAcceleratorInterfaceBase;
class VideoEncodeAcceleratorClientInterfaceBase;
}  // namespace media
}  // namespace mojom


namespace media {
namespace mojom {
namespace blink {
// Aliases for definition in the parent namespace.
using VideoEncodeAcceleratorSupportedRateControlMode = VideoEncodeAcceleratorSupportedRateControlMode;
using VideoEncodeAcceleratorProviderInterfaceBase = VideoEncodeAcceleratorProviderInterfaceBase;
using VideoEncodeAcceleratorInterfaceBase = VideoEncodeAcceleratorInterfaceBase;
using VideoEncodeAcceleratorClientInterfaceBase = VideoEncodeAcceleratorClientInterfaceBase;
class VideoEncodeAcceleratorSupportedProfile;
using VideoEncodeAcceleratorSupportedProfilePtr = mojo::StructPtr<VideoEncodeAcceleratorSupportedProfile>;

class VariableBitratePeak;
using VariableBitratePeakPtr = mojo::InlinedStructPtr<VariableBitratePeak>;

class VideoBitrateAllocation;
using VideoBitrateAllocationPtr = mojo::StructPtr<VideoBitrateAllocation>;

class SpatialLayer;
using SpatialLayerPtr = mojo::StructPtr<SpatialLayer>;

class ConstantBitrate;
using ConstantBitratePtr = mojo::InlinedStructPtr<ConstantBitrate>;

class VariableBitrate;
using VariableBitratePtr = mojo::InlinedStructPtr<VariableBitrate>;

class VideoEncodeAcceleratorConfig;
using VideoEncodeAcceleratorConfigPtr = mojo::StructPtr<VideoEncodeAcceleratorConfig>;

class H264Metadata;
using H264MetadataPtr = mojo::InlinedStructPtr<H264Metadata>;

class Vp8Metadata;
using Vp8MetadataPtr = mojo::InlinedStructPtr<Vp8Metadata>;

class Vp9Metadata;
using Vp9MetadataPtr = mojo::StructPtr<Vp9Metadata>;

class Av1Metadata;
using Av1MetadataPtr = mojo::StructPtr<Av1Metadata>;

class BitstreamBufferMetadata;
using BitstreamBufferMetadataPtr = mojo::StructPtr<BitstreamBufferMetadata>;

class Bitrate;

using BitratePtr = mojo::StructPtr<Bitrate>;

class CodecMetadata;

using CodecMetadataPtr = mojo::StructPtr<CodecMetadata>;

class VideoEncodeAcceleratorProvider;

class VideoEncodeAccelerator;

class VideoEncodeAcceleratorClient;




}  // namespace blink
}  // namespace mojom
}  // namespace media

#endif  // MEDIA_MOJO_MOJOM_VIDEO_ENCODE_ACCELERATOR_MOJOM_BLINK_FORWARD_H_