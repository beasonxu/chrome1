// media/mojo/mojom/media_drm_storage.mojom.m.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import {mojo} from '../../../mojo/public/js/bindings.js';

import {
  UnguessableToken as mojoBase_mojom_UnguessableToken,
  UnguessableTokenSpec as mojoBase_mojom_UnguessableTokenSpec
} from '../../../mojo/public/mojom/base/unguessable_token.mojom.m.js';




/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export class MediaDrmStoragePendingReceiver {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle, 'media.mojom.MediaDrmStorage', scope);
  }
}

/** @interface */
export class MediaDrmStorageInterface {
  
  /**
   * @return {!Promise<{
        success: !boolean,
        originId: ?mojoBase_mojom_UnguessableToken,
   *  }>}
   */

  initialize() {}
  
  /**
   * @return {!Promise<{
        success: !boolean,
   *  }>}
   */

  onProvisioned() {}
  
  /**
   * @param { !string } sessionId
   * @param { !SessionData } sessionData
   * @return {!Promise<{
        success: !boolean,
   *  }>}
   */

  savePersistentSession(sessionId, sessionData) {}
  
  /**
   * @param { !string } sessionId
   * @return {!Promise<{
        sessionData: ?SessionData,
   *  }>}
   */

  loadPersistentSession(sessionId) {}
  
  /**
   * @param { !string } sessionId
   * @return {!Promise<{
        success: !boolean,
   *  }>}
   */

  removePersistentSession(sessionId) {}
}

/**
 * @implements { MediaDrmStorageInterface }
 */
export class MediaDrmStorageRemote {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!MediaDrmStoragePendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          MediaDrmStoragePendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!MediaDrmStoragePendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @return {!Promise<{
        success: !boolean,
        originId: ?mojoBase_mojom_UnguessableToken,
   *  }>}
   */

  initialize() {
    return this.proxy.sendMessage(
        0,
        MediaDrmStorage_Initialize_ParamsSpec.$,
        MediaDrmStorage_Initialize_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @return {!Promise<{
        success: !boolean,
   *  }>}
   */

  onProvisioned() {
    return this.proxy.sendMessage(
        1,
        MediaDrmStorage_OnProvisioned_ParamsSpec.$,
        MediaDrmStorage_OnProvisioned_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !string } sessionId
   * @param { !SessionData } sessionData
   * @return {!Promise<{
        success: !boolean,
   *  }>}
   */

  savePersistentSession(
      sessionId,
      sessionData) {
    return this.proxy.sendMessage(
        2,
        MediaDrmStorage_SavePersistentSession_ParamsSpec.$,
        MediaDrmStorage_SavePersistentSession_ResponseParamsSpec.$,
        [
          sessionId,
          sessionData
        ]);
  }

  
  /**
   * @param { !string } sessionId
   * @return {!Promise<{
        sessionData: ?SessionData,
   *  }>}
   */

  loadPersistentSession(
      sessionId) {
    return this.proxy.sendMessage(
        3,
        MediaDrmStorage_LoadPersistentSession_ParamsSpec.$,
        MediaDrmStorage_LoadPersistentSession_ResponseParamsSpec.$,
        [
          sessionId
        ]);
  }

  
  /**
   * @param { !string } sessionId
   * @return {!Promise<{
        success: !boolean,
   *  }>}
   */

  removePersistentSession(
      sessionId) {
    return this.proxy.sendMessage(
        4,
        MediaDrmStorage_RemovePersistentSession_ParamsSpec.$,
        MediaDrmStorage_RemovePersistentSession_ResponseParamsSpec.$,
        [
          sessionId
        ]);
  }
}

/**
 * An object which receives request messages for the MediaDrmStorage
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class MediaDrmStorageReceiver {
  /**
   * @param {!MediaDrmStorageInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!MediaDrmStorageRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        MediaDrmStorageRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!MediaDrmStorageRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        MediaDrmStorage_Initialize_ParamsSpec.$,
        MediaDrmStorage_Initialize_ResponseParamsSpec.$,
        impl.initialize.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        MediaDrmStorage_OnProvisioned_ParamsSpec.$,
        MediaDrmStorage_OnProvisioned_ResponseParamsSpec.$,
        impl.onProvisioned.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        MediaDrmStorage_SavePersistentSession_ParamsSpec.$,
        MediaDrmStorage_SavePersistentSession_ResponseParamsSpec.$,
        impl.savePersistentSession.bind(impl));
    this.helper_internal_.registerHandler(
        3,
        MediaDrmStorage_LoadPersistentSession_ParamsSpec.$,
        MediaDrmStorage_LoadPersistentSession_ResponseParamsSpec.$,
        impl.loadPersistentSession.bind(impl));
    this.helper_internal_.registerHandler(
        4,
        MediaDrmStorage_RemovePersistentSession_ParamsSpec.$,
        MediaDrmStorage_RemovePersistentSession_ResponseParamsSpec.$,
        impl.removePersistentSession.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
}

export class MediaDrmStorage {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "media.mojom.MediaDrmStorage";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!MediaDrmStorageRemote}
   */
  static getRemote() {
    let remote = new MediaDrmStorageRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
}


/**
 * An object which receives request messages for the MediaDrmStorage
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class MediaDrmStorageCallbackRouter {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      MediaDrmStorageRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!MediaDrmStorageRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.initialize =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        MediaDrmStorage_Initialize_ParamsSpec.$,
        MediaDrmStorage_Initialize_ResponseParamsSpec.$,
        this.initialize.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onProvisioned =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        MediaDrmStorage_OnProvisioned_ParamsSpec.$,
        MediaDrmStorage_OnProvisioned_ResponseParamsSpec.$,
        this.onProvisioned.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.savePersistentSession =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        MediaDrmStorage_SavePersistentSession_ParamsSpec.$,
        MediaDrmStorage_SavePersistentSession_ResponseParamsSpec.$,
        this.savePersistentSession.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.loadPersistentSession =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        3,
        MediaDrmStorage_LoadPersistentSession_ParamsSpec.$,
        MediaDrmStorage_LoadPersistentSession_ResponseParamsSpec.$,
        this.loadPersistentSession.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.removePersistentSession =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        4,
        MediaDrmStorage_RemovePersistentSession_ParamsSpec.$,
        MediaDrmStorage_RemovePersistentSession_ResponseParamsSpec.$,
        this.removePersistentSession.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
}

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SessionDataSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const MediaDrmStorage_Initialize_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const MediaDrmStorage_Initialize_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const MediaDrmStorage_OnProvisioned_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const MediaDrmStorage_OnProvisioned_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const MediaDrmStorage_SavePersistentSession_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const MediaDrmStorage_SavePersistentSession_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const MediaDrmStorage_LoadPersistentSession_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const MediaDrmStorage_LoadPersistentSession_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const MediaDrmStorage_RemovePersistentSession_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const MediaDrmStorage_RemovePersistentSession_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };



/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const SessionData_KeyTypeSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 */
export const SessionData_KeyType = {
  
};


mojo.internal.Struct(
    SessionDataSpec.$,
    'SessionData',
    [
      mojo.internal.StructField(
        'keySetId', 0,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'mimeType', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'keyType', 16,
        0,
        SessionData_KeyTypeSpec.$,
        0,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class SessionData {
  constructor() {
    /** @type { !Array<!number> } */
    this.keySetId;
    /** @type { !string } */
    this.mimeType;
    /** @type { !SessionData_KeyType } */
    this.keyType;
  }
}



mojo.internal.Struct(
    MediaDrmStorage_Initialize_ParamsSpec.$,
    'MediaDrmStorage_Initialize_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class MediaDrmStorage_Initialize_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    MediaDrmStorage_Initialize_ResponseParamsSpec.$,
    'MediaDrmStorage_Initialize_ResponseParams',
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'originId', 8,
        0,
        mojoBase_mojom_UnguessableTokenSpec.$,
        null,
        true /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class MediaDrmStorage_Initialize_ResponseParams {
  constructor() {
    /** @type { !boolean } */
    this.success;
    /** @type { (mojoBase_mojom_UnguessableToken|undefined) } */
    this.originId;
  }
}



mojo.internal.Struct(
    MediaDrmStorage_OnProvisioned_ParamsSpec.$,
    'MediaDrmStorage_OnProvisioned_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class MediaDrmStorage_OnProvisioned_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    MediaDrmStorage_OnProvisioned_ResponseParamsSpec.$,
    'MediaDrmStorage_OnProvisioned_ResponseParams',
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class MediaDrmStorage_OnProvisioned_ResponseParams {
  constructor() {
    /** @type { !boolean } */
    this.success;
  }
}



mojo.internal.Struct(
    MediaDrmStorage_SavePersistentSession_ParamsSpec.$,
    'MediaDrmStorage_SavePersistentSession_Params',
    [
      mojo.internal.StructField(
        'sessionId', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'sessionData', 8,
        0,
        SessionDataSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class MediaDrmStorage_SavePersistentSession_Params {
  constructor() {
    /** @type { !string } */
    this.sessionId;
    /** @type { !SessionData } */
    this.sessionData;
  }
}



mojo.internal.Struct(
    MediaDrmStorage_SavePersistentSession_ResponseParamsSpec.$,
    'MediaDrmStorage_SavePersistentSession_ResponseParams',
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class MediaDrmStorage_SavePersistentSession_ResponseParams {
  constructor() {
    /** @type { !boolean } */
    this.success;
  }
}



mojo.internal.Struct(
    MediaDrmStorage_LoadPersistentSession_ParamsSpec.$,
    'MediaDrmStorage_LoadPersistentSession_Params',
    [
      mojo.internal.StructField(
        'sessionId', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class MediaDrmStorage_LoadPersistentSession_Params {
  constructor() {
    /** @type { !string } */
    this.sessionId;
  }
}



mojo.internal.Struct(
    MediaDrmStorage_LoadPersistentSession_ResponseParamsSpec.$,
    'MediaDrmStorage_LoadPersistentSession_ResponseParams',
    [
      mojo.internal.StructField(
        'sessionData', 0,
        0,
        SessionDataSpec.$,
        null,
        true /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class MediaDrmStorage_LoadPersistentSession_ResponseParams {
  constructor() {
    /** @type { (SessionData|undefined) } */
    this.sessionData;
  }
}



mojo.internal.Struct(
    MediaDrmStorage_RemovePersistentSession_ParamsSpec.$,
    'MediaDrmStorage_RemovePersistentSession_Params',
    [
      mojo.internal.StructField(
        'sessionId', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class MediaDrmStorage_RemovePersistentSession_Params {
  constructor() {
    /** @type { !string } */
    this.sessionId;
  }
}



mojo.internal.Struct(
    MediaDrmStorage_RemovePersistentSession_ResponseParamsSpec.$,
    'MediaDrmStorage_RemovePersistentSession_ResponseParams',
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class MediaDrmStorage_RemovePersistentSession_ResponseParams {
  constructor() {
    /** @type { !boolean } */
    this.success;
  }
}

