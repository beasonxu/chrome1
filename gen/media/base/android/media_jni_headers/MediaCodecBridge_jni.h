// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/media/MediaCodecBridge

#ifndef org_chromium_media_MediaCodecBridge_JNI
#define org_chromium_media_MediaCodecBridge_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char kClassPath_org_chromium_media_MediaCodecBridge[];
const char kClassPath_org_chromium_media_MediaCodecBridge[] = "org/chromium/media/MediaCodecBridge";

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_media_MediaCodecBridge_00024DequeueInputResult[];
const char kClassPath_org_chromium_media_MediaCodecBridge_00024DequeueInputResult[] =
    "org/chromium/media/MediaCodecBridge$DequeueInputResult";

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_media_MediaCodecBridge_00024DequeueOutputResult[];
const char kClassPath_org_chromium_media_MediaCodecBridge_00024DequeueOutputResult[] =
    "org/chromium/media/MediaCodecBridge$DequeueOutputResult";

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper[];
const char kClassPath_org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper[] =
    "org/chromium/media/MediaCodecBridge$MediaFormatWrapper";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass> g_org_chromium_media_MediaCodecBridge_clazz(nullptr);
#ifndef org_chromium_media_MediaCodecBridge_clazz_defined
#define org_chromium_media_MediaCodecBridge_clazz_defined
inline jclass org_chromium_media_MediaCodecBridge_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_chromium_media_MediaCodecBridge,
      &g_org_chromium_media_MediaCodecBridge_clazz);
}
#endif
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_media_MediaCodecBridge_00024DequeueInputResult_clazz(nullptr);
#ifndef org_chromium_media_MediaCodecBridge_00024DequeueInputResult_clazz_defined
#define org_chromium_media_MediaCodecBridge_00024DequeueInputResult_clazz_defined
inline jclass org_chromium_media_MediaCodecBridge_00024DequeueInputResult_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_media_MediaCodecBridge_00024DequeueInputResult,
      &g_org_chromium_media_MediaCodecBridge_00024DequeueInputResult_clazz);
}
#endif
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_clazz(nullptr);
#ifndef org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_clazz_defined
#define org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_clazz_defined
inline jclass org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_media_MediaCodecBridge_00024DequeueOutputResult,
      &g_org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_clazz);
}
#endif
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_clazz(nullptr);
#ifndef org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_clazz_defined
#define org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_clazz_defined
inline jclass org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper,
      &g_org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace media {

JNI_GENERATOR_EXPORT void Java_J_N_MNqjfk23(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeMediaCodecBridge,
    jobject caller) {
  MediaCodecBridge* native = reinterpret_cast<MediaCodecBridge*>(nativeMediaCodecBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnBuffersAvailable");
  return native->OnBuffersAvailable(env, base::android::JavaParamRef<jobject>(env, caller));
}


static std::atomic<jmethodID>
    g_org_chromium_media_MediaCodecBridge_00024DequeueInputResult_status(nullptr);
static jint Java_DequeueInputResult_status(JNIEnv* env, const base::android::JavaRef<jobject>& obj)
    {
  jclass clazz = org_chromium_media_MediaCodecBridge_00024DequeueInputResult_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_00024DequeueInputResult_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "status",
          "()I",
          &g_org_chromium_media_MediaCodecBridge_00024DequeueInputResult_status);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_media_MediaCodecBridge_00024DequeueInputResult_index(nullptr);
static jint Java_DequeueInputResult_index(JNIEnv* env, const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_media_MediaCodecBridge_00024DequeueInputResult_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_00024DequeueInputResult_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "index",
          "()I",
          &g_org_chromium_media_MediaCodecBridge_00024DequeueInputResult_index);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_status(nullptr);
static jint Java_DequeueOutputResult_status(JNIEnv* env, const base::android::JavaRef<jobject>& obj)
    {
  jclass clazz = org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "status",
          "()I",
          &g_org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_status);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_index(nullptr);
static jint Java_DequeueOutputResult_index(JNIEnv* env, const base::android::JavaRef<jobject>& obj)
    {
  jclass clazz = org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "index",
          "()I",
          &g_org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_index);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_flags(nullptr);
static jint Java_DequeueOutputResult_flags(JNIEnv* env, const base::android::JavaRef<jobject>& obj)
    {
  jclass clazz = org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "flags",
          "()I",
          &g_org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_flags);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_offset(nullptr);
static jint Java_DequeueOutputResult_offset(JNIEnv* env, const base::android::JavaRef<jobject>& obj)
    {
  jclass clazz = org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "offset",
          "()I",
          &g_org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_offset);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_presentationTimeMicroseconds(nullptr);
static jlong Java_DequeueOutputResult_presentationTimeMicroseconds(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "presentationTimeMicroseconds",
          "()J",
&g_org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_presentationTimeMicroseconds);

  jlong ret =
      env->CallLongMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_numBytes(nullptr);
static jint Java_DequeueOutputResult_numBytes(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz = org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "numBytes",
          "()I",
          &g_org_chromium_media_MediaCodecBridge_00024DequeueOutputResult_numBytes);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_width(nullptr);
static jint Java_MediaFormatWrapper_width(JNIEnv* env, const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "width",
          "()I",
          &g_org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_width);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_height(nullptr);
static jint Java_MediaFormatWrapper_height(JNIEnv* env, const base::android::JavaRef<jobject>& obj)
    {
  jclass clazz = org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "height",
          "()I",
          &g_org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_height);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_sampleRate(nullptr);
static jint Java_MediaFormatWrapper_sampleRate(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz = org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "sampleRate",
          "()I",
          &g_org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_sampleRate);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_channelCount(nullptr);
static jint Java_MediaFormatWrapper_channelCount(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz = org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "channelCount",
          "()I",
          &g_org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_channelCount);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_stride(nullptr);
static jint Java_MediaFormatWrapper_stride(JNIEnv* env, const base::android::JavaRef<jobject>& obj)
    {
  jclass clazz = org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "stride",
          "()I",
          &g_org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_stride);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_yPlaneHeight(nullptr);
static jint Java_MediaFormatWrapper_yPlaneHeight(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz = org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "yPlaneHeight",
          "()I",
          &g_org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_yPlaneHeight);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_colorStandard(nullptr);
static jint Java_MediaFormatWrapper_colorStandard(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "colorStandard",
          "()I",
          &g_org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_colorStandard);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_colorRange(nullptr);
static jint Java_MediaFormatWrapper_colorRange(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz = org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "colorRange",
          "()I",
          &g_org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_colorRange);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_colorTransfer(nullptr);
static jint Java_MediaFormatWrapper_colorTransfer(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "colorTransfer",
          "()I",
          &g_org_chromium_media_MediaCodecBridge_00024MediaFormatWrapper_colorTransfer);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_media_MediaCodecBridge_setBuffersAvailableListener(nullptr);
static void Java_MediaCodecBridge_setBuffersAvailableListener(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, jlong nativeMediaCodecBridge) {
  jclass clazz = org_chromium_media_MediaCodecBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setBuffersAvailableListener",
          "(J)V",
          &g_org_chromium_media_MediaCodecBridge_setBuffersAvailableListener);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, nativeMediaCodecBridge);
}

static std::atomic<jmethodID> g_org_chromium_media_MediaCodecBridge_release(nullptr);
static void Java_MediaCodecBridge_release(JNIEnv* env, const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_media_MediaCodecBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "release",
          "()V",
          &g_org_chromium_media_MediaCodecBridge_release);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID> g_org_chromium_media_MediaCodecBridge_dequeueInputBuffer(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_MediaCodecBridge_dequeueInputBuffer(JNIEnv*
    env, const base::android::JavaRef<jobject>& obj, jlong timeoutUs) {
  jclass clazz = org_chromium_media_MediaCodecBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "dequeueInputBuffer",
          "(J)Lorg/chromium/media/MediaCodecBridge$DequeueInputResult;",
          &g_org_chromium_media_MediaCodecBridge_dequeueInputBuffer);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id, timeoutUs);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID> g_org_chromium_media_MediaCodecBridge_flush(nullptr);
static jint Java_MediaCodecBridge_flush(JNIEnv* env, const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_media_MediaCodecBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "flush",
          "()I",
          &g_org_chromium_media_MediaCodecBridge_flush);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID> g_org_chromium_media_MediaCodecBridge_stop(nullptr);
static void Java_MediaCodecBridge_stop(JNIEnv* env, const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_media_MediaCodecBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "stop",
          "()V",
          &g_org_chromium_media_MediaCodecBridge_stop);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID> g_org_chromium_media_MediaCodecBridge_getName(nullptr);
static base::android::ScopedJavaLocalRef<jstring> Java_MediaCodecBridge_getName(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_media_MediaCodecBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getName",
          "()Ljava/lang/String;",
          &g_org_chromium_media_MediaCodecBridge_getName);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID> g_org_chromium_media_MediaCodecBridge_getOutputFormat(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_MediaCodecBridge_getOutputFormat(JNIEnv* env,
    const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_media_MediaCodecBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getOutputFormat",
          "()Lorg/chromium/media/MediaCodecBridge$MediaFormatWrapper;",
          &g_org_chromium_media_MediaCodecBridge_getOutputFormat);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID> g_org_chromium_media_MediaCodecBridge_getInputFormat(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_MediaCodecBridge_getInputFormat(JNIEnv* env,
    const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_media_MediaCodecBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getInputFormat",
          "()Lorg/chromium/media/MediaCodecBridge$MediaFormatWrapper;",
          &g_org_chromium_media_MediaCodecBridge_getInputFormat);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID> g_org_chromium_media_MediaCodecBridge_getInputBuffer(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_MediaCodecBridge_getInputBuffer(JNIEnv* env,
    const base::android::JavaRef<jobject>& obj, JniIntWrapper index) {
  jclass clazz = org_chromium_media_MediaCodecBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getInputBuffer",
          "(I)Ljava/nio/ByteBuffer;",
          &g_org_chromium_media_MediaCodecBridge_getInputBuffer);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id, as_jint(index));
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID> g_org_chromium_media_MediaCodecBridge_getOutputBuffer(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_MediaCodecBridge_getOutputBuffer(JNIEnv* env,
    const base::android::JavaRef<jobject>& obj, JniIntWrapper index) {
  jclass clazz = org_chromium_media_MediaCodecBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getOutputBuffer",
          "(I)Ljava/nio/ByteBuffer;",
          &g_org_chromium_media_MediaCodecBridge_getOutputBuffer);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id, as_jint(index));
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID> g_org_chromium_media_MediaCodecBridge_queueInputBuffer(nullptr);
static jint Java_MediaCodecBridge_queueInputBuffer(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper index,
    JniIntWrapper offset,
    JniIntWrapper size,
    jlong presentationTimeUs,
    JniIntWrapper flags) {
  jclass clazz = org_chromium_media_MediaCodecBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "queueInputBuffer",
          "(IIIJI)I",
          &g_org_chromium_media_MediaCodecBridge_queueInputBuffer);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id, as_jint(index), as_jint(offset), as_jint(size),
              presentationTimeUs, as_jint(flags));
  return ret;
}

static std::atomic<jmethodID> g_org_chromium_media_MediaCodecBridge_setVideoBitrate(nullptr);
static void Java_MediaCodecBridge_setVideoBitrate(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper bps,
    JniIntWrapper frameRate) {
  jclass clazz = org_chromium_media_MediaCodecBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setVideoBitrate",
          "(II)V",
          &g_org_chromium_media_MediaCodecBridge_setVideoBitrate);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(bps), as_jint(frameRate));
}

static std::atomic<jmethodID> g_org_chromium_media_MediaCodecBridge_requestKeyFrameSoon(nullptr);
static void Java_MediaCodecBridge_requestKeyFrameSoon(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_media_MediaCodecBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "requestKeyFrameSoon",
          "()V",
          &g_org_chromium_media_MediaCodecBridge_requestKeyFrameSoon);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID> g_org_chromium_media_MediaCodecBridge_queueSecureInputBuffer(nullptr);
static jint Java_MediaCodecBridge_queueSecureInputBuffer(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper index,
    JniIntWrapper offset,
    const base::android::JavaRef<jbyteArray>& iv,
    const base::android::JavaRef<jbyteArray>& keyId,
    const base::android::JavaRef<jintArray>& numBytesOfClearData,
    const base::android::JavaRef<jintArray>& numBytesOfEncryptedData,
    JniIntWrapper numSubSamples,
    JniIntWrapper cipherMode,
    JniIntWrapper patternEncrypt,
    JniIntWrapper patternSkip,
    jlong presentationTimeUs) {
  jclass clazz = org_chromium_media_MediaCodecBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "queueSecureInputBuffer",
          "(II[B[B[I[IIIIIJ)I",
          &g_org_chromium_media_MediaCodecBridge_queueSecureInputBuffer);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id, as_jint(index), as_jint(offset), iv.obj(), keyId.obj(),
              numBytesOfClearData.obj(), numBytesOfEncryptedData.obj(), as_jint(numSubSamples),
              as_jint(cipherMode), as_jint(patternEncrypt), as_jint(patternSkip),
              presentationTimeUs);
  return ret;
}

static std::atomic<jmethodID> g_org_chromium_media_MediaCodecBridge_releaseOutputBuffer(nullptr);
static void Java_MediaCodecBridge_releaseOutputBuffer(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper index,
    jboolean render) {
  jclass clazz = org_chromium_media_MediaCodecBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "releaseOutputBuffer",
          "(IZ)V",
          &g_org_chromium_media_MediaCodecBridge_releaseOutputBuffer);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(index), render);
}

static std::atomic<jmethodID> g_org_chromium_media_MediaCodecBridge_dequeueOutputBuffer(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_MediaCodecBridge_dequeueOutputBuffer(JNIEnv*
    env, const base::android::JavaRef<jobject>& obj, jlong timeoutUs) {
  jclass clazz = org_chromium_media_MediaCodecBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "dequeueOutputBuffer",
          "(J)Lorg/chromium/media/MediaCodecBridge$DequeueOutputResult;",
          &g_org_chromium_media_MediaCodecBridge_dequeueOutputBuffer);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id, timeoutUs);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID> g_org_chromium_media_MediaCodecBridge_setSurface(nullptr);
static jboolean Java_MediaCodecBridge_setSurface(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj, const base::android::JavaRef<jobject>& surface) {
  jclass clazz = org_chromium_media_MediaCodecBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setSurface",
          "(Landroid/view/Surface;)Z",
          &g_org_chromium_media_MediaCodecBridge_setSurface);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id, surface.obj());
  return ret;
}

static std::atomic<jmethodID> g_org_chromium_media_MediaCodecBridge_getMaxInputSize(nullptr);
static jint Java_MediaCodecBridge_getMaxInputSize(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_media_MediaCodecBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaCodecBridge_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getMaxInputSize",
          "()I",
          &g_org_chromium_media_MediaCodecBridge_getMaxInputSize);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_media_MediaCodecBridge_createCallbackHandlerForTesting(nullptr);
static void Java_MediaCodecBridge_createCallbackHandlerForTesting(JNIEnv* env) {
  jclass clazz = org_chromium_media_MediaCodecBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_media_MediaCodecBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createCallbackHandlerForTesting",
          "()V",
          &g_org_chromium_media_MediaCodecBridge_createCallbackHandlerForTesting);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id);
}

}  // namespace media

#endif  // org_chromium_media_MediaCodecBridge_JNI
