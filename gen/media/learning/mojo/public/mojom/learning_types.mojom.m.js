// media/learning/mojo/public/mojom/learning_types.mojom.m.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import {mojo} from '../../../../../mojo/public/js/bindings.js';



/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const FeatureValueSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const TargetValueSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const LabelledExampleSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const ObservationCompletionSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const TargetHistogramPairSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const TargetHistogramSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    FeatureValueSpec.$,
    'FeatureValue',
    [
      mojo.internal.StructField(
        'value', 0,
        0,
        mojo.internal.Double,
        0,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class FeatureValue {
  constructor() {
    /** @type { !number } */
    this.value;
  }
}



mojo.internal.Struct(
    TargetValueSpec.$,
    'TargetValue',
    [
      mojo.internal.StructField(
        'value', 0,
        0,
        mojo.internal.Double,
        0,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class TargetValue {
  constructor() {
    /** @type { !number } */
    this.value;
  }
}



mojo.internal.Struct(
    LabelledExampleSpec.$,
    'LabelledExample',
    [
      mojo.internal.StructField(
        'features', 0,
        0,
        mojo.internal.Array(FeatureValueSpec.$, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'targetValue', 8,
        0,
        TargetValueSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class LabelledExample {
  constructor() {
    /** @type { !Array<!FeatureValue> } */
    this.features;
    /** @type { !TargetValue } */
    this.targetValue;
  }
}



mojo.internal.Struct(
    ObservationCompletionSpec.$,
    'ObservationCompletion',
    [
      mojo.internal.StructField(
        'targetValue', 0,
        0,
        TargetValueSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'weight', 8,
        0,
        mojo.internal.Uint64,
        BigInt('1'),
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class ObservationCompletion {
  constructor() {
    /** @type { !TargetValue } */
    this.targetValue;
    /** @type { !bigint } */
    this.weight;
  }
}



mojo.internal.Struct(
    TargetHistogramPairSpec.$,
    'TargetHistogramPair',
    [
      mojo.internal.StructField(
        'targetValue', 0,
        0,
        TargetValueSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'count', 8,
        0,
        mojo.internal.Double,
        0,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class TargetHistogramPair {
  constructor() {
    /** @type { !TargetValue } */
    this.targetValue;
    /** @type { !number } */
    this.count;
  }
}



mojo.internal.Struct(
    TargetHistogramSpec.$,
    'TargetHistogram',
    [
      mojo.internal.StructField(
        'pairs', 0,
        0,
        mojo.internal.Array(TargetHistogramPairSpec.$, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class TargetHistogram {
  constructor() {
    /** @type { !Array<!TargetHistogramPair> } */
    this.pairs;
  }
}

