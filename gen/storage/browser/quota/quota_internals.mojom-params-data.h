// storage/browser/quota/quota_internals.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef STORAGE_BROWSER_QUOTA_QUOTA_INTERNALS_MOJOM_PARAMS_DATA_H_
#define STORAGE_BROWSER_QUOTA_QUOTA_INTERNALS_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace storage {
namespace mojom {
namespace internal {

class ValidationContext;
class COMPONENT_EXPORT(STORAGE_BROWSER_INTERFACES_SHARED) QuotaInternalsHandler_GetDiskAvailabilityAndTempPoolSize_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<QuotaInternalsHandler_GetDiskAvailabilityAndTempPoolSize_Params_Data>;

  QuotaInternalsHandler_GetDiskAvailabilityAndTempPoolSize_Params_Data();
  ~QuotaInternalsHandler_GetDiskAvailabilityAndTempPoolSize_Params_Data() = delete;
};
static_assert(sizeof(QuotaInternalsHandler_GetDiskAvailabilityAndTempPoolSize_Params_Data) == 8,
              "Bad sizeof(QuotaInternalsHandler_GetDiskAvailabilityAndTempPoolSize_Params_Data)");
class COMPONENT_EXPORT(STORAGE_BROWSER_INTERFACES_SHARED) QuotaInternalsHandler_GetDiskAvailabilityAndTempPoolSize_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t total_space;
  int64_t available_space;
  int64_t temp_pool_size;

 private:
  friend class mojo::internal::MessageFragment<QuotaInternalsHandler_GetDiskAvailabilityAndTempPoolSize_ResponseParams_Data>;

  QuotaInternalsHandler_GetDiskAvailabilityAndTempPoolSize_ResponseParams_Data();
  ~QuotaInternalsHandler_GetDiskAvailabilityAndTempPoolSize_ResponseParams_Data() = delete;
};
static_assert(sizeof(QuotaInternalsHandler_GetDiskAvailabilityAndTempPoolSize_ResponseParams_Data) == 32,
              "Bad sizeof(QuotaInternalsHandler_GetDiskAvailabilityAndTempPoolSize_ResponseParams_Data)");
class COMPONENT_EXPORT(STORAGE_BROWSER_INTERFACES_SHARED) QuotaInternalsHandler_GetStatistics_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<QuotaInternalsHandler_GetStatistics_Params_Data>;

  QuotaInternalsHandler_GetStatistics_Params_Data();
  ~QuotaInternalsHandler_GetStatistics_Params_Data() = delete;
};
static_assert(sizeof(QuotaInternalsHandler_GetStatistics_Params_Data) == 8,
              "Bad sizeof(QuotaInternalsHandler_GetStatistics_Params_Data)");
class COMPONENT_EXPORT(STORAGE_BROWSER_INTERFACES_SHARED) QuotaInternalsHandler_GetStatistics_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Map_Data<mojo::internal::Pointer<mojo::internal::String_Data>, mojo::internal::Pointer<mojo::internal::String_Data>>> eviction_statistics;

 private:
  friend class mojo::internal::MessageFragment<QuotaInternalsHandler_GetStatistics_ResponseParams_Data>;

  QuotaInternalsHandler_GetStatistics_ResponseParams_Data();
  ~QuotaInternalsHandler_GetStatistics_ResponseParams_Data() = delete;
};
static_assert(sizeof(QuotaInternalsHandler_GetStatistics_ResponseParams_Data) == 16,
              "Bad sizeof(QuotaInternalsHandler_GetStatistics_ResponseParams_Data)");
class COMPONENT_EXPORT(STORAGE_BROWSER_INTERFACES_SHARED) QuotaInternalsHandler_SimulateStoragePressure_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::url::mojom::internal::Origin_Data> origin_url;

 private:
  friend class mojo::internal::MessageFragment<QuotaInternalsHandler_SimulateStoragePressure_Params_Data>;

  QuotaInternalsHandler_SimulateStoragePressure_Params_Data();
  ~QuotaInternalsHandler_SimulateStoragePressure_Params_Data() = delete;
};
static_assert(sizeof(QuotaInternalsHandler_SimulateStoragePressure_Params_Data) == 16,
              "Bad sizeof(QuotaInternalsHandler_SimulateStoragePressure_Params_Data)");
class COMPONENT_EXPORT(STORAGE_BROWSER_INTERFACES_SHARED) QuotaInternalsHandler_RetrieveBucketsTable_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<QuotaInternalsHandler_RetrieveBucketsTable_Params_Data>;

  QuotaInternalsHandler_RetrieveBucketsTable_Params_Data();
  ~QuotaInternalsHandler_RetrieveBucketsTable_Params_Data() = delete;
};
static_assert(sizeof(QuotaInternalsHandler_RetrieveBucketsTable_Params_Data) == 8,
              "Bad sizeof(QuotaInternalsHandler_RetrieveBucketsTable_Params_Data)");
class COMPONENT_EXPORT(STORAGE_BROWSER_INTERFACES_SHARED) QuotaInternalsHandler_RetrieveBucketsTable_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<internal::BucketTableEntry_Data>>> entries;

 private:
  friend class mojo::internal::MessageFragment<QuotaInternalsHandler_RetrieveBucketsTable_ResponseParams_Data>;

  QuotaInternalsHandler_RetrieveBucketsTable_ResponseParams_Data();
  ~QuotaInternalsHandler_RetrieveBucketsTable_ResponseParams_Data() = delete;
};
static_assert(sizeof(QuotaInternalsHandler_RetrieveBucketsTable_ResponseParams_Data) == 16,
              "Bad sizeof(QuotaInternalsHandler_RetrieveBucketsTable_ResponseParams_Data)");
class COMPONENT_EXPORT(STORAGE_BROWSER_INTERFACES_SHARED) QuotaInternalsHandler_GetGlobalUsageForInternals_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t storage_type;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<QuotaInternalsHandler_GetGlobalUsageForInternals_Params_Data>;

  QuotaInternalsHandler_GetGlobalUsageForInternals_Params_Data();
  ~QuotaInternalsHandler_GetGlobalUsageForInternals_Params_Data() = delete;
};
static_assert(sizeof(QuotaInternalsHandler_GetGlobalUsageForInternals_Params_Data) == 16,
              "Bad sizeof(QuotaInternalsHandler_GetGlobalUsageForInternals_Params_Data)");
class COMPONENT_EXPORT(STORAGE_BROWSER_INTERFACES_SHARED) QuotaInternalsHandler_GetGlobalUsageForInternals_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t usage;
  int64_t unlimited_usage;

 private:
  friend class mojo::internal::MessageFragment<QuotaInternalsHandler_GetGlobalUsageForInternals_ResponseParams_Data>;

  QuotaInternalsHandler_GetGlobalUsageForInternals_ResponseParams_Data();
  ~QuotaInternalsHandler_GetGlobalUsageForInternals_ResponseParams_Data() = delete;
};
static_assert(sizeof(QuotaInternalsHandler_GetGlobalUsageForInternals_ResponseParams_Data) == 24,
              "Bad sizeof(QuotaInternalsHandler_GetGlobalUsageForInternals_ResponseParams_Data)");

}  // namespace internal


class QuotaInternalsHandler_GetDiskAvailabilityAndTempPoolSize_ParamsDataView {
 public:
  QuotaInternalsHandler_GetDiskAvailabilityAndTempPoolSize_ParamsDataView() = default;

  QuotaInternalsHandler_GetDiskAvailabilityAndTempPoolSize_ParamsDataView(
      internal::QuotaInternalsHandler_GetDiskAvailabilityAndTempPoolSize_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::QuotaInternalsHandler_GetDiskAvailabilityAndTempPoolSize_Params_Data* data_ = nullptr;
};



class QuotaInternalsHandler_GetDiskAvailabilityAndTempPoolSize_ResponseParamsDataView {
 public:
  QuotaInternalsHandler_GetDiskAvailabilityAndTempPoolSize_ResponseParamsDataView() = default;

  QuotaInternalsHandler_GetDiskAvailabilityAndTempPoolSize_ResponseParamsDataView(
      internal::QuotaInternalsHandler_GetDiskAvailabilityAndTempPoolSize_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int64_t total_space() const {
    return data_->total_space;
  }
  int64_t available_space() const {
    return data_->available_space;
  }
  int64_t temp_pool_size() const {
    return data_->temp_pool_size;
  }
 private:
  internal::QuotaInternalsHandler_GetDiskAvailabilityAndTempPoolSize_ResponseParams_Data* data_ = nullptr;
};



class QuotaInternalsHandler_GetStatistics_ParamsDataView {
 public:
  QuotaInternalsHandler_GetStatistics_ParamsDataView() = default;

  QuotaInternalsHandler_GetStatistics_ParamsDataView(
      internal::QuotaInternalsHandler_GetStatistics_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::QuotaInternalsHandler_GetStatistics_Params_Data* data_ = nullptr;
};



class QuotaInternalsHandler_GetStatistics_ResponseParamsDataView {
 public:
  QuotaInternalsHandler_GetStatistics_ResponseParamsDataView() = default;

  QuotaInternalsHandler_GetStatistics_ResponseParamsDataView(
      internal::QuotaInternalsHandler_GetStatistics_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetEvictionStatisticsDataView(
      mojo::MapDataView<mojo::StringDataView, mojo::StringDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadEvictionStatistics(UserType* output) {
    
    auto* pointer = data_->eviction_statistics.Get();
    return mojo::internal::Deserialize<mojo::MapDataView<mojo::StringDataView, mojo::StringDataView>>(
        pointer, output, message_);
  }
 private:
  internal::QuotaInternalsHandler_GetStatistics_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class QuotaInternalsHandler_SimulateStoragePressure_ParamsDataView {
 public:
  QuotaInternalsHandler_SimulateStoragePressure_ParamsDataView() = default;

  QuotaInternalsHandler_SimulateStoragePressure_ParamsDataView(
      internal::QuotaInternalsHandler_SimulateStoragePressure_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetOriginUrlDataView(
      ::url::mojom::OriginDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadOriginUrl(UserType* output) {
    
    auto* pointer = data_->origin_url.Get();
    return mojo::internal::Deserialize<::url::mojom::OriginDataView>(
        pointer, output, message_);
  }
 private:
  internal::QuotaInternalsHandler_SimulateStoragePressure_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class QuotaInternalsHandler_RetrieveBucketsTable_ParamsDataView {
 public:
  QuotaInternalsHandler_RetrieveBucketsTable_ParamsDataView() = default;

  QuotaInternalsHandler_RetrieveBucketsTable_ParamsDataView(
      internal::QuotaInternalsHandler_RetrieveBucketsTable_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::QuotaInternalsHandler_RetrieveBucketsTable_Params_Data* data_ = nullptr;
};



class QuotaInternalsHandler_RetrieveBucketsTable_ResponseParamsDataView {
 public:
  QuotaInternalsHandler_RetrieveBucketsTable_ResponseParamsDataView() = default;

  QuotaInternalsHandler_RetrieveBucketsTable_ResponseParamsDataView(
      internal::QuotaInternalsHandler_RetrieveBucketsTable_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetEntriesDataView(
      mojo::ArrayDataView<BucketTableEntryDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadEntries(UserType* output) {
    
    auto* pointer = data_->entries.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::storage::mojom::BucketTableEntryDataView>>(
        pointer, output, message_);
  }
 private:
  internal::QuotaInternalsHandler_RetrieveBucketsTable_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class QuotaInternalsHandler_GetGlobalUsageForInternals_ParamsDataView {
 public:
  QuotaInternalsHandler_GetGlobalUsageForInternals_ParamsDataView() = default;

  QuotaInternalsHandler_GetGlobalUsageForInternals_ParamsDataView(
      internal::QuotaInternalsHandler_GetGlobalUsageForInternals_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStorageType(UserType* output) const {
    auto data_value = data_->storage_type;
    return mojo::internal::Deserialize<::storage::mojom::StorageType>(
        data_value, output);
  }
  StorageType storage_type() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::StorageType>(data_->storage_type));
  }
 private:
  internal::QuotaInternalsHandler_GetGlobalUsageForInternals_Params_Data* data_ = nullptr;
};



class QuotaInternalsHandler_GetGlobalUsageForInternals_ResponseParamsDataView {
 public:
  QuotaInternalsHandler_GetGlobalUsageForInternals_ResponseParamsDataView() = default;

  QuotaInternalsHandler_GetGlobalUsageForInternals_ResponseParamsDataView(
      internal::QuotaInternalsHandler_GetGlobalUsageForInternals_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int64_t usage() const {
    return data_->usage;
  }
  int64_t unlimited_usage() const {
    return data_->unlimited_usage;
  }
 private:
  internal::QuotaInternalsHandler_GetGlobalUsageForInternals_ResponseParams_Data* data_ = nullptr;
};








inline void QuotaInternalsHandler_GetStatistics_ResponseParamsDataView::GetEvictionStatisticsDataView(
    mojo::MapDataView<mojo::StringDataView, mojo::StringDataView>* output) {
  auto pointer = data_->eviction_statistics.Get();
  *output = mojo::MapDataView<mojo::StringDataView, mojo::StringDataView>(pointer, message_);
}


inline void QuotaInternalsHandler_SimulateStoragePressure_ParamsDataView::GetOriginUrlDataView(
    ::url::mojom::OriginDataView* output) {
  auto pointer = data_->origin_url.Get();
  *output = ::url::mojom::OriginDataView(pointer, message_);
}




inline void QuotaInternalsHandler_RetrieveBucketsTable_ResponseParamsDataView::GetEntriesDataView(
    mojo::ArrayDataView<BucketTableEntryDataView>* output) {
  auto pointer = data_->entries.Get();
  *output = mojo::ArrayDataView<BucketTableEntryDataView>(pointer, message_);
}





}  // namespace mojom
}  // namespace storage

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // STORAGE_BROWSER_QUOTA_QUOTA_INTERNALS_MOJOM_PARAMS_DATA_H_