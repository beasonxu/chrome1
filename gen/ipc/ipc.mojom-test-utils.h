// ipc/ipc.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef IPC_IPC_MOJOM_TEST_UTILS_H_
#define IPC_IPC_MOJOM_TEST_UTILS_H_

#include "ipc/ipc.mojom.h"
#include "base/component_export.h"


namespace IPC {
namespace mojom {


class COMPONENT_EXPORT(IPC_MOJOM) ChannelInterceptorForTesting : public Channel {
  virtual Channel* GetForwardingInterface() = 0;
  void SetPeerPid(int32_t pid) override;
  void Receive(::IPC::MessageView message) override;
  void GetAssociatedInterface(::mojo::GenericPendingAssociatedReceiver receiver) override;
};
class COMPONENT_EXPORT(IPC_MOJOM) ChannelAsyncWaiter {
 public:
  explicit ChannelAsyncWaiter(Channel* proxy);

  ChannelAsyncWaiter(const ChannelAsyncWaiter&) = delete;
  ChannelAsyncWaiter& operator=(const ChannelAsyncWaiter&) = delete;

  ~ChannelAsyncWaiter();

 private:
  Channel* const proxy_;
};


class COMPONENT_EXPORT(IPC_MOJOM) ChannelBootstrapInterceptorForTesting : public ChannelBootstrap {
  virtual ChannelBootstrap* GetForwardingInterface() = 0;
};
class COMPONENT_EXPORT(IPC_MOJOM) ChannelBootstrapAsyncWaiter {
 public:
  explicit ChannelBootstrapAsyncWaiter(ChannelBootstrap* proxy);

  ChannelBootstrapAsyncWaiter(const ChannelBootstrapAsyncWaiter&) = delete;
  ChannelBootstrapAsyncWaiter& operator=(const ChannelBootstrapAsyncWaiter&) = delete;

  ~ChannelBootstrapAsyncWaiter();

 private:
  ChannelBootstrap* const proxy_;
};




}  // namespace mojom
}  // namespace IPC

#endif  // IPC_IPC_MOJOM_TEST_UTILS_H_