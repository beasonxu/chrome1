// services/data_decoder/public/mojom/web_bundler.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SERVICES_DATA_DECODER_PUBLIC_MOJOM_WEB_BUNDLER_MOJOM_PARAMS_DATA_H_
#define SERVICES_DATA_DECODER_PUBLIC_MOJOM_WEB_BUNDLER_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace data_decoder {
namespace mojom {
namespace internal {

class ValidationContext;
class  WebBundler_Generate_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Interface_Data>> snapshots;
  mojo::internal::Pointer<::mojo_base::mojom::internal::File_Data> file;

 private:
  friend class mojo::internal::MessageFragment<WebBundler_Generate_Params_Data>;

  WebBundler_Generate_Params_Data();
  ~WebBundler_Generate_Params_Data() = delete;
};
static_assert(sizeof(WebBundler_Generate_Params_Data) == 24,
              "Bad sizeof(WebBundler_Generate_Params_Data)");
class  WebBundler_Generate_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint64_t file_size;
  int32_t error;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<WebBundler_Generate_ResponseParams_Data>;

  WebBundler_Generate_ResponseParams_Data();
  ~WebBundler_Generate_ResponseParams_Data() = delete;
};
static_assert(sizeof(WebBundler_Generate_ResponseParams_Data) == 24,
              "Bad sizeof(WebBundler_Generate_ResponseParams_Data)");

}  // namespace internal


class WebBundler_Generate_ParamsDataView {
 public:
  WebBundler_Generate_ParamsDataView() = default;

  WebBundler_Generate_ParamsDataView(
      internal::WebBundler_Generate_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetSnapshotsDataView(
      mojo::ArrayDataView<mojo::InterfacePtrDataView<::data_decoder::mojom::ResourceSnapshotForWebBundleInterfaceBase>>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadSnapshots(UserType* output) {
    
    auto* pointer = data_->snapshots.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<mojo::InterfacePtrDataView<::data_decoder::mojom::ResourceSnapshotForWebBundleInterfaceBase>>>(
        pointer, output, message_);
  }
  inline void GetFileDataView(
      ::mojo_base::mojom::FileDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadFile(UserType* output) {
    
    auto* pointer = data_->file.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::FileDataView>(
        pointer, output, message_);
  }
 private:
  internal::WebBundler_Generate_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class WebBundler_Generate_ResponseParamsDataView {
 public:
  WebBundler_Generate_ResponseParamsDataView() = default;

  WebBundler_Generate_ResponseParamsDataView(
      internal::WebBundler_Generate_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  uint64_t file_size() const {
    return data_->file_size;
  }
  template <typename UserType>
  [[nodiscard]] bool ReadError(UserType* output) const {
    auto data_value = data_->error;
    return mojo::internal::Deserialize<::data_decoder::mojom::WebBundlerError>(
        data_value, output);
  }
  WebBundlerError error() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::data_decoder::mojom::WebBundlerError>(data_->error));
  }
 private:
  internal::WebBundler_Generate_ResponseParams_Data* data_ = nullptr;
};


inline void WebBundler_Generate_ParamsDataView::GetSnapshotsDataView(
    mojo::ArrayDataView<mojo::InterfacePtrDataView<::data_decoder::mojom::ResourceSnapshotForWebBundleInterfaceBase>>* output) {
  auto pointer = data_->snapshots.Get();
  *output = mojo::ArrayDataView<mojo::InterfacePtrDataView<::data_decoder::mojom::ResourceSnapshotForWebBundleInterfaceBase>>(pointer, message_);
}
inline void WebBundler_Generate_ParamsDataView::GetFileDataView(
    ::mojo_base::mojom::FileDataView* output) {
  auto pointer = data_->file.Get();
  *output = ::mojo_base::mojom::FileDataView(pointer, message_);
}



}  // namespace mojom
}  // namespace data_decoder

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // SERVICES_DATA_DECODER_PUBLIC_MOJOM_WEB_BUNDLER_MOJOM_PARAMS_DATA_H_