// services/tracing/public/mojom/background_tracing_agent.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SERVICES_TRACING_PUBLIC_MOJOM_BACKGROUND_TRACING_AGENT_MOJOM_TEST_UTILS_H_
#define SERVICES_TRACING_PUBLIC_MOJOM_BACKGROUND_TRACING_AGENT_MOJOM_TEST_UTILS_H_

#include "services/tracing/public/mojom/background_tracing_agent.mojom.h"
#include "base/component_export.h"


namespace tracing {
namespace mojom {


class COMPONENT_EXPORT(TRACING_MOJOM) BackgroundTracingAgentClientInterceptorForTesting : public BackgroundTracingAgentClient {
  virtual BackgroundTracingAgentClient* GetForwardingInterface() = 0;
  void OnInitialized() override;
  void OnTriggerBackgroundTrace(const std::string& histogram_name) override;
  void OnAbortBackgroundTrace() override;
};
class COMPONENT_EXPORT(TRACING_MOJOM) BackgroundTracingAgentClientAsyncWaiter {
 public:
  explicit BackgroundTracingAgentClientAsyncWaiter(BackgroundTracingAgentClient* proxy);

  BackgroundTracingAgentClientAsyncWaiter(const BackgroundTracingAgentClientAsyncWaiter&) = delete;
  BackgroundTracingAgentClientAsyncWaiter& operator=(const BackgroundTracingAgentClientAsyncWaiter&) = delete;

  ~BackgroundTracingAgentClientAsyncWaiter();

 private:
  BackgroundTracingAgentClient* const proxy_;
};


class COMPONENT_EXPORT(TRACING_MOJOM) BackgroundTracingAgentInterceptorForTesting : public BackgroundTracingAgent {
  virtual BackgroundTracingAgent* GetForwardingInterface() = 0;
  void SetUMACallback(const std::string& histogram_name, int32_t histogram_lower_value, int32_t histogram_upper_value, bool repeat) override;
  void ClearUMACallback(const std::string& histogram_name) override;
};
class COMPONENT_EXPORT(TRACING_MOJOM) BackgroundTracingAgentAsyncWaiter {
 public:
  explicit BackgroundTracingAgentAsyncWaiter(BackgroundTracingAgent* proxy);

  BackgroundTracingAgentAsyncWaiter(const BackgroundTracingAgentAsyncWaiter&) = delete;
  BackgroundTracingAgentAsyncWaiter& operator=(const BackgroundTracingAgentAsyncWaiter&) = delete;

  ~BackgroundTracingAgentAsyncWaiter();

 private:
  BackgroundTracingAgent* const proxy_;
};


class COMPONENT_EXPORT(TRACING_MOJOM) BackgroundTracingAgentProviderInterceptorForTesting : public BackgroundTracingAgentProvider {
  virtual BackgroundTracingAgentProvider* GetForwardingInterface() = 0;
  void Create(uint64_t tracing_process_id, ::mojo::PendingRemote<BackgroundTracingAgentClient> client, ::mojo::PendingReceiver<BackgroundTracingAgent> agent) override;
};
class COMPONENT_EXPORT(TRACING_MOJOM) BackgroundTracingAgentProviderAsyncWaiter {
 public:
  explicit BackgroundTracingAgentProviderAsyncWaiter(BackgroundTracingAgentProvider* proxy);

  BackgroundTracingAgentProviderAsyncWaiter(const BackgroundTracingAgentProviderAsyncWaiter&) = delete;
  BackgroundTracingAgentProviderAsyncWaiter& operator=(const BackgroundTracingAgentProviderAsyncWaiter&) = delete;

  ~BackgroundTracingAgentProviderAsyncWaiter();

 private:
  BackgroundTracingAgentProvider* const proxy_;
};




}  // namespace mojom
}  // namespace tracing

#endif  // SERVICES_TRACING_PUBLIC_MOJOM_BACKGROUND_TRACING_AGENT_MOJOM_TEST_UTILS_H_