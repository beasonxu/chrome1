// services/device/public/mojom/device_posture_provider.mojom-blink-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SERVICES_DEVICE_PUBLIC_MOJOM_DEVICE_POSTURE_PROVIDER_MOJOM_BLINK_TEST_UTILS_H_
#define SERVICES_DEVICE_PUBLIC_MOJOM_DEVICE_POSTURE_PROVIDER_MOJOM_BLINK_TEST_UTILS_H_

#include "services/device/public/mojom/device_posture_provider.mojom-blink.h"
#include "third_party/blink/public/platform/web_common.h"


namespace device {
namespace mojom {
namespace blink {


class BLINK_PLATFORM_EXPORT DevicePostureProviderInterceptorForTesting : public DevicePostureProvider {
  virtual DevicePostureProvider* GetForwardingInterface() = 0;
  void AddListenerAndGetCurrentPosture(::mojo::PendingRemote<DevicePostureProviderClient> client, AddListenerAndGetCurrentPostureCallback callback) override;
};
class BLINK_PLATFORM_EXPORT DevicePostureProviderAsyncWaiter {
 public:
  explicit DevicePostureProviderAsyncWaiter(DevicePostureProvider* proxy);

  DevicePostureProviderAsyncWaiter(const DevicePostureProviderAsyncWaiter&) = delete;
  DevicePostureProviderAsyncWaiter& operator=(const DevicePostureProviderAsyncWaiter&) = delete;

  ~DevicePostureProviderAsyncWaiter();
  void AddListenerAndGetCurrentPosture(
      ::mojo::PendingRemote<DevicePostureProviderClient> client, DevicePostureType* out_posture);

 private:
  DevicePostureProvider* const proxy_;
};


class BLINK_PLATFORM_EXPORT DevicePostureProviderClientInterceptorForTesting : public DevicePostureProviderClient {
  virtual DevicePostureProviderClient* GetForwardingInterface() = 0;
  void OnPostureChanged(DevicePostureType posture) override;
};
class BLINK_PLATFORM_EXPORT DevicePostureProviderClientAsyncWaiter {
 public:
  explicit DevicePostureProviderClientAsyncWaiter(DevicePostureProviderClient* proxy);

  DevicePostureProviderClientAsyncWaiter(const DevicePostureProviderClientAsyncWaiter&) = delete;
  DevicePostureProviderClientAsyncWaiter& operator=(const DevicePostureProviderClientAsyncWaiter&) = delete;

  ~DevicePostureProviderClientAsyncWaiter();

 private:
  DevicePostureProviderClient* const proxy_;
};




}  // namespace blink
}  // namespace mojom
}  // namespace device

#endif  // SERVICES_DEVICE_PUBLIC_MOJOM_DEVICE_POSTURE_PROVIDER_MOJOM_BLINK_TEST_UTILS_H_