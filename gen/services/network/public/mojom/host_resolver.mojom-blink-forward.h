// services/network/public/mojom/host_resolver.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SERVICES_NETWORK_PUBLIC_MOJOM_HOST_RESOLVER_MOJOM_BLINK_FORWARD_H_
#define SERVICES_NETWORK_PUBLIC_MOJOM_HOST_RESOLVER_MOJOM_BLINK_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"




namespace network {
namespace mojom {

enum class OptionalSecureDnsMode : int32_t;

enum class SecureDnsMode : int32_t;

enum class SecureDnsPolicy : int32_t;

enum class DnsQueryType : int32_t;

enum class DnsConfigOverrides_Tristate : int32_t;

enum class ResolveHostParameters_Source : int32_t;

enum class ResolveHostParameters_CacheUsage : int32_t;

enum class ResolveHostParameters_Purpose : int32_t;

enum class MdnsListenClient_UpdateType : int32_t;
class ResolveHostHandleInterfaceBase;
class ResolveHostClientInterfaceBase;
class MdnsListenClientInterfaceBase;
class HostResolverInterfaceBase;
class DnsConfigChangeManagerClientInterfaceBase;
class DnsConfigChangeManagerInterfaceBase;
}  // namespace network
}  // namespace mojom


namespace network {
namespace mojom {
namespace blink {
// Aliases for definition in the parent namespace.
using OptionalSecureDnsMode = OptionalSecureDnsMode;
using SecureDnsMode = SecureDnsMode;
using SecureDnsPolicy = SecureDnsPolicy;
using DnsQueryType = DnsQueryType;
using ResolveHostHandleInterfaceBase = ResolveHostHandleInterfaceBase;
using ResolveHostClientInterfaceBase = ResolveHostClientInterfaceBase;
using MdnsListenClientInterfaceBase = MdnsListenClientInterfaceBase;
using HostResolverInterfaceBase = HostResolverInterfaceBase;
using DnsConfigChangeManagerClientInterfaceBase = DnsConfigChangeManagerClientInterfaceBase;
using DnsConfigChangeManagerInterfaceBase = DnsConfigChangeManagerInterfaceBase;
class DnsOverHttpsServerConfig;
using DnsOverHttpsServerConfigPtr = mojo::StructPtr<DnsOverHttpsServerConfig>;

class DnsOverHttpsConfig;
using DnsOverHttpsConfigPtr = mojo::StructPtr<DnsOverHttpsConfig>;

class DnsConfigOverrides;
using DnsConfigOverridesPtr = mojo::StructPtr<DnsConfigOverrides>;

class ResolveHostParameters;
using ResolveHostParametersPtr = mojo::StructPtr<ResolveHostParameters>;

class ResolveHostHandle;

class ResolveHostClient;

class MdnsListenClient;

class HostResolver;

class DnsConfigChangeManagerClient;

class DnsConfigChangeManager;




}  // namespace blink
}  // namespace mojom
}  // namespace network

#endif  // SERVICES_NETWORK_PUBLIC_MOJOM_HOST_RESOLVER_MOJOM_BLINK_FORWARD_H_