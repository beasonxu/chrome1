// services/network/public/mojom/network_context.mojom-lite-for-compile.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';

goog.require('mojo.internal');
goog.require('mojo.internal.interfaceSupport');

goog.require('network.mojom.DefaultCredentials');
goog.require('network.mojom.DeleteStoredTrustTokensStatus');
goog.require('network.mojom.RestrictedCookieManagerRole');
goog.require('certVerifier.mojom.CertVerifierService');
goog.require('network.mojom.CookieAccessObserver');
goog.require('network.mojom.CookieManager');
goog.require('network.mojom.CrossOriginEmbedderPolicyReporter');
goog.require('network.mojom.DevToolsObserver');
goog.require('network.mojom.FirstPartySetsAccessDelegate');
goog.require('network.mojom.HostResolver');
goog.require('network.mojom.HttpCacheBackendFileOperationsFactory');
goog.require('network.mojom.MdnsResponder');
goog.require('network.mojom.NetLogExporter');
goog.require('network.mojom.P2PSocketManager');
goog.require('network.mojom.P2PTrustedSocketManager');
goog.require('network.mojom.P2PTrustedSocketManagerClient');
goog.require('network.mojom.ProxyConfigClient');
goog.require('network.mojom.ProxyConfigPollerClient');
goog.require('network.mojom.ProxyErrorClient');
goog.require('network.mojom.ProxyLookupClient');
goog.require('proxyResolver.mojom.ProxyResolverFactory');
goog.require('network.mojom.ProxyResolvingSocketFactory');
goog.require('network.mojom.ReportingApiObserver');
goog.require('network.mojom.ResolveHostClient');
goog.require('network.mojom.RestrictedCookieManager');
goog.require('network.mojom.SSLConfigClient');
goog.require('network.mojom.SocketBroker');
goog.require('network.mojom.SocketObserver');
goog.require('network.mojom.TCPBoundSocket');
goog.require('network.mojom.TCPConnectedSocket');
goog.require('network.mojom.TCPServerSocket');
goog.require('network.mojom.TrustTokenQueryAnswerer');
goog.require('network.mojom.UDPSocket');
goog.require('network.mojom.UDPSocketListener');
goog.require('network.mojom.URLLoaderFactory');
goog.require('network.mojom.URLLoaderNetworkServiceObserver');
goog.require('network.mojom.WebSocketAuthenticationHandler');
goog.require('network.mojom.WebSocketHandshakeClient');
goog.require('network.mojom.WebTransportHandshakeClient');
goog.require('network.mojom.AddressList');
goog.require('network.mojom.AuthChallengeInfo');
goog.require('network.mojom.AuthCredentials');
goog.require('network.mojom.CertVerifyResult');
goog.require('network.mojom.ClientSecurityState');
goog.require('network.mojom.CookieManagerParams');
goog.require('network.mojom.CorsOriginAccessPatterns');
goog.require('network.mojom.CorsOriginPattern');
goog.require('mojoBase.mojom.DictionaryValue');
goog.require('network.mojom.DnsConfigOverrides');
goog.require('mojoBase.mojom.FilePath');
goog.require('network.mojom.FirstPartySetsAccessDelegateParams');
goog.require('network.mojom.FulfillTrustTokenIssuanceAnswer');
goog.require('network.mojom.FulfillTrustTokenIssuanceRequest');
goog.require('network.mojom.HostPortPair');
goog.require('network.mojom.HttpHeader');
goog.require('network.mojom.HttpRequestHeaders');
goog.require('network.mojom.HttpResponseHeaders');
goog.require('network.mojom.IPAddress');
goog.require('network.mojom.IPEndPoint');
goog.require('network.mojom.IsolationInfo');
goog.require('network.mojom.MutableNetworkTrafficAnnotationTag');
goog.require('network.mojom.NetworkIsolationKey');
goog.require('url.mojom.Origin');
goog.require('network.mojom.ProxyConfigWithAnnotation');
goog.require('network.mojom.ProxyList');
goog.require('network.mojom.ProxyRules');
goog.require('proxyResolver.mojom.ProxyServer');
goog.require('mojoBase.mojom.ReadOnlyFile');
goog.require('network.mojom.ResolveHostParameters');
goog.require('network.mojom.SSLConfig');
goog.require('network.mojom.SiteForCookies');
goog.require('network.mojom.StoredTrustTokensForIssuer');
goog.require('network.mojom.TCPConnectedSocketOptions');
goog.require('mojoBase.mojom.Time');
goog.require('mojoBase.mojom.TimeDelta');
goog.require('network.mojom.URLRequest');
goog.require('mojoBase.mojom.UnguessableToken');
goog.require('url.mojom.Url');
goog.require('network.mojom.WebTransportCertificateFingerprint');
goog.require('network.mojom.X509Certificate');
goog.require('network.mojom.TransferableDirectory');



goog.provide('network.mojom.WEB_SOCKET_OPTION_NONE');
/**
 * @const { !number }
 * @export
 */
network.mojom.WEB_SOCKET_OPTION_NONE = 0;
goog.provide('network.mojom.WEB_SOCKET_OPTION_BLOCK_ALL_COOKIES');
/**
 * @const { !number }
 * @export
 */
network.mojom.WEB_SOCKET_OPTION_BLOCK_ALL_COOKIES = 1;
goog.provide('network.mojom.WEB_SOCKET_OPTION_BLOCK_THIRD_PARTY_COOKIES');
/**
 * @const { !number }
 * @export
 */
network.mojom.WEB_SOCKET_OPTION_BLOCK_THIRD_PARTY_COOKIES = 2;
goog.provide('network.mojom.BROWSER_PROCESS_ID');
/**
 * @const { !number }
 * @export
 */
network.mojom.BROWSER_PROCESS_ID = 0;
goog.provide('network.mojom.INVALID_PROCESS_ID');
/**
 * @const { !number }
 * @export
 */
network.mojom.INVALID_PROCESS_ID = -1;

goog.provide('network.mojom.TrustTokenRedemptionPolicy');
goog.provide('network.mojom.TrustTokenRedemptionPolicySpec');
/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
network.mojom.TrustTokenRedemptionPolicySpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
network.mojom.TrustTokenRedemptionPolicy = {
  
  kForbid: 0,
  kPotentiallyPermit: 1,
  MIN_VALUE: 0,
  MAX_VALUE: 1,
};

goog.provide('network.mojom.SCTAuditingMode');
goog.provide('network.mojom.SCTAuditingModeSpec');
/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
network.mojom.SCTAuditingModeSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
network.mojom.SCTAuditingMode = {
  
  kDisabled: 0,
  kEnhancedSafeBrowsingReporting: 1,
  kHashdance: 2,
  MIN_VALUE: 0,
  MAX_VALUE: 2,
};



goog.provide('network.mojom.CustomProxyConnectionObserver');
goog.provide('network.mojom.CustomProxyConnectionObserverReceiver');
goog.provide('network.mojom.CustomProxyConnectionObserverCallbackRouter');
goog.provide('network.mojom.CustomProxyConnectionObserverInterface');
goog.provide('network.mojom.CustomProxyConnectionObserverRemote');
goog.provide('network.mojom.CustomProxyConnectionObserverPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
network.mojom.CustomProxyConnectionObserverPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        network.mojom.CustomProxyConnectionObserver.$interfaceName,
        scope);
  }
};

/** @interface */
network.mojom.CustomProxyConnectionObserverInterface = class {
  
  /**
   * @param { !proxyResolver.mojom.ProxyServer } badProxy
   * @param { !number } netError
   */

  onFallback(badProxy, netError) {}
  
  /**
   * @param { !proxyResolver.mojom.ProxyServer } proxyServer
   * @param { !network.mojom.HttpResponseHeaders } responseHeaders
   */

  onTunnelHeadersReceived(proxyServer, responseHeaders) {}
};

/**
 * @export
 * @implements { network.mojom.CustomProxyConnectionObserverInterface }
 */
network.mojom.CustomProxyConnectionObserverRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!network.mojom.CustomProxyConnectionObserverPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          network.mojom.CustomProxyConnectionObserverPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!network.mojom.CustomProxyConnectionObserverPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !proxyResolver.mojom.ProxyServer } badProxy
   * @param { !number } netError
   */

  onFallback(
      badProxy,
      netError) {
    this.proxy.sendMessage(
        0,
        network.mojom.CustomProxyConnectionObserver_OnFallback_ParamsSpec.$,
        null,
        [
          badProxy,
          netError
        ]);
  }

  
  /**
   * @param { !proxyResolver.mojom.ProxyServer } proxyServer
   * @param { !network.mojom.HttpResponseHeaders } responseHeaders
   */

  onTunnelHeadersReceived(
      proxyServer,
      responseHeaders) {
    this.proxy.sendMessage(
        1,
        network.mojom.CustomProxyConnectionObserver_OnTunnelHeadersReceived_ParamsSpec.$,
        null,
        [
          proxyServer,
          responseHeaders
        ]);
  }
};

/**
 * An object which receives request messages for the CustomProxyConnectionObserver
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
network.mojom.CustomProxyConnectionObserverReceiver = class {
  /**
   * @param {!network.mojom.CustomProxyConnectionObserverInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!network.mojom.CustomProxyConnectionObserverRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        network.mojom.CustomProxyConnectionObserverRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.CustomProxyConnectionObserverRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        network.mojom.CustomProxyConnectionObserver_OnFallback_ParamsSpec.$,
        null,
        impl.onFallback.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        network.mojom.CustomProxyConnectionObserver_OnTunnelHeadersReceived_ParamsSpec.$,
        null,
        impl.onTunnelHeadersReceived.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
network.mojom.CustomProxyConnectionObserver = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "network.mojom.CustomProxyConnectionObserver";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!network.mojom.CustomProxyConnectionObserverRemote}
   * @export
   */
  static getRemote() {
    let remote = new network.mojom.CustomProxyConnectionObserverRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the CustomProxyConnectionObserver
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
network.mojom.CustomProxyConnectionObserverCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      network.mojom.CustomProxyConnectionObserverRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.CustomProxyConnectionObserverRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onFallback =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        network.mojom.CustomProxyConnectionObserver_OnFallback_ParamsSpec.$,
        null,
        this.onFallback.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onTunnelHeadersReceived =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        network.mojom.CustomProxyConnectionObserver_OnTunnelHeadersReceived_ParamsSpec.$,
        null,
        this.onTunnelHeadersReceived.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('network.mojom.CustomProxyConfigClient');
goog.provide('network.mojom.CustomProxyConfigClientReceiver');
goog.provide('network.mojom.CustomProxyConfigClientCallbackRouter');
goog.provide('network.mojom.CustomProxyConfigClientInterface');
goog.provide('network.mojom.CustomProxyConfigClientRemote');
goog.provide('network.mojom.CustomProxyConfigClientPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
network.mojom.CustomProxyConfigClientPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        network.mojom.CustomProxyConfigClient.$interfaceName,
        scope);
  }
};

/** @interface */
network.mojom.CustomProxyConfigClientInterface = class {
  
  /**
   * @param { !network.mojom.CustomProxyConfig } proxyConfig
   * @return {!Promise}
   */

  onCustomProxyConfigUpdated(proxyConfig) {}
  
  /**
   * @param { !mojoBase.mojom.TimeDelta } bypassDuration
   * @param { !network.mojom.ProxyList } badProxies
   * @return {!Promise}
   */

  markProxiesAsBad(bypassDuration, badProxies) {}
  
  /**
   */

  clearBadProxiesCache() {}
};

/**
 * @export
 * @implements { network.mojom.CustomProxyConfigClientInterface }
 */
network.mojom.CustomProxyConfigClientRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!network.mojom.CustomProxyConfigClientPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          network.mojom.CustomProxyConfigClientPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!network.mojom.CustomProxyConfigClientPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !network.mojom.CustomProxyConfig } proxyConfig
   * @return {!Promise}
   */

  onCustomProxyConfigUpdated(
      proxyConfig) {
    return this.proxy.sendMessage(
        0,
        network.mojom.CustomProxyConfigClient_OnCustomProxyConfigUpdated_ParamsSpec.$,
        network.mojom.CustomProxyConfigClient_OnCustomProxyConfigUpdated_ResponseParamsSpec.$,
        [
          proxyConfig
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.TimeDelta } bypassDuration
   * @param { !network.mojom.ProxyList } badProxies
   * @return {!Promise}
   */

  markProxiesAsBad(
      bypassDuration,
      badProxies) {
    return this.proxy.sendMessage(
        1,
        network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_ParamsSpec.$,
        network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_ResponseParamsSpec.$,
        [
          bypassDuration,
          badProxies
        ]);
  }

  
  /**
   */

  clearBadProxiesCache() {
    this.proxy.sendMessage(
        2,
        network.mojom.CustomProxyConfigClient_ClearBadProxiesCache_ParamsSpec.$,
        null,
        [
        ]);
  }
};

/**
 * An object which receives request messages for the CustomProxyConfigClient
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
network.mojom.CustomProxyConfigClientReceiver = class {
  /**
   * @param {!network.mojom.CustomProxyConfigClientInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!network.mojom.CustomProxyConfigClientRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        network.mojom.CustomProxyConfigClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.CustomProxyConfigClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        network.mojom.CustomProxyConfigClient_OnCustomProxyConfigUpdated_ParamsSpec.$,
        network.mojom.CustomProxyConfigClient_OnCustomProxyConfigUpdated_ResponseParamsSpec.$,
        impl.onCustomProxyConfigUpdated.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_ParamsSpec.$,
        network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_ResponseParamsSpec.$,
        impl.markProxiesAsBad.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        network.mojom.CustomProxyConfigClient_ClearBadProxiesCache_ParamsSpec.$,
        null,
        impl.clearBadProxiesCache.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
network.mojom.CustomProxyConfigClient = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "network.mojom.CustomProxyConfigClient";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!network.mojom.CustomProxyConfigClientRemote}
   * @export
   */
  static getRemote() {
    let remote = new network.mojom.CustomProxyConfigClientRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the CustomProxyConfigClient
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
network.mojom.CustomProxyConfigClientCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      network.mojom.CustomProxyConfigClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.CustomProxyConfigClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onCustomProxyConfigUpdated =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        network.mojom.CustomProxyConfigClient_OnCustomProxyConfigUpdated_ParamsSpec.$,
        network.mojom.CustomProxyConfigClient_OnCustomProxyConfigUpdated_ResponseParamsSpec.$,
        this.onCustomProxyConfigUpdated.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.markProxiesAsBad =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_ParamsSpec.$,
        network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_ResponseParamsSpec.$,
        this.markProxiesAsBad.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearBadProxiesCache =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        network.mojom.CustomProxyConfigClient_ClearBadProxiesCache_ParamsSpec.$,
        null,
        this.clearBadProxiesCache.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('network.mojom.TrustedHeaderClient');
goog.provide('network.mojom.TrustedHeaderClientReceiver');
goog.provide('network.mojom.TrustedHeaderClientCallbackRouter');
goog.provide('network.mojom.TrustedHeaderClientInterface');
goog.provide('network.mojom.TrustedHeaderClientRemote');
goog.provide('network.mojom.TrustedHeaderClientPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
network.mojom.TrustedHeaderClientPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        network.mojom.TrustedHeaderClient.$interfaceName,
        scope);
  }
};

/** @interface */
network.mojom.TrustedHeaderClientInterface = class {
  
  /**
   * @param { !network.mojom.HttpRequestHeaders } headers
   * @return {!Promise<{
        result: !number,
        headers: ?network.mojom.HttpRequestHeaders,
   *  }>}
   */

  onBeforeSendHeaders(headers) {}
  
  /**
   * @param { !string } headers
   * @param { !network.mojom.IPEndPoint } remoteEndpoint
   * @return {!Promise<{
        result: !number,
        headers: ?string,
        preserveFragmentOnRedirectUrl: ?url.mojom.Url,
   *  }>}
   */

  onHeadersReceived(headers, remoteEndpoint) {}
};

/**
 * @export
 * @implements { network.mojom.TrustedHeaderClientInterface }
 */
network.mojom.TrustedHeaderClientRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!network.mojom.TrustedHeaderClientPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          network.mojom.TrustedHeaderClientPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!network.mojom.TrustedHeaderClientPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !network.mojom.HttpRequestHeaders } headers
   * @return {!Promise<{
        result: !number,
        headers: ?network.mojom.HttpRequestHeaders,
   *  }>}
   */

  onBeforeSendHeaders(
      headers) {
    return this.proxy.sendMessage(
        0,
        network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_ParamsSpec.$,
        network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_ResponseParamsSpec.$,
        [
          headers
        ]);
  }

  
  /**
   * @param { !string } headers
   * @param { !network.mojom.IPEndPoint } remoteEndpoint
   * @return {!Promise<{
        result: !number,
        headers: ?string,
        preserveFragmentOnRedirectUrl: ?url.mojom.Url,
   *  }>}
   */

  onHeadersReceived(
      headers,
      remoteEndpoint) {
    return this.proxy.sendMessage(
        1,
        network.mojom.TrustedHeaderClient_OnHeadersReceived_ParamsSpec.$,
        network.mojom.TrustedHeaderClient_OnHeadersReceived_ResponseParamsSpec.$,
        [
          headers,
          remoteEndpoint
        ]);
  }
};

/**
 * An object which receives request messages for the TrustedHeaderClient
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
network.mojom.TrustedHeaderClientReceiver = class {
  /**
   * @param {!network.mojom.TrustedHeaderClientInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!network.mojom.TrustedHeaderClientRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        network.mojom.TrustedHeaderClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.TrustedHeaderClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_ParamsSpec.$,
        network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_ResponseParamsSpec.$,
        impl.onBeforeSendHeaders.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        network.mojom.TrustedHeaderClient_OnHeadersReceived_ParamsSpec.$,
        network.mojom.TrustedHeaderClient_OnHeadersReceived_ResponseParamsSpec.$,
        impl.onHeadersReceived.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
network.mojom.TrustedHeaderClient = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "network.mojom.TrustedHeaderClient";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!network.mojom.TrustedHeaderClientRemote}
   * @export
   */
  static getRemote() {
    let remote = new network.mojom.TrustedHeaderClientRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the TrustedHeaderClient
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
network.mojom.TrustedHeaderClientCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      network.mojom.TrustedHeaderClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.TrustedHeaderClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onBeforeSendHeaders =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_ParamsSpec.$,
        network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_ResponseParamsSpec.$,
        this.onBeforeSendHeaders.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onHeadersReceived =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        network.mojom.TrustedHeaderClient_OnHeadersReceived_ParamsSpec.$,
        network.mojom.TrustedHeaderClient_OnHeadersReceived_ResponseParamsSpec.$,
        this.onHeadersReceived.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('network.mojom.TrustedURLLoaderHeaderClient');
goog.provide('network.mojom.TrustedURLLoaderHeaderClientReceiver');
goog.provide('network.mojom.TrustedURLLoaderHeaderClientCallbackRouter');
goog.provide('network.mojom.TrustedURLLoaderHeaderClientInterface');
goog.provide('network.mojom.TrustedURLLoaderHeaderClientRemote');
goog.provide('network.mojom.TrustedURLLoaderHeaderClientPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
network.mojom.TrustedURLLoaderHeaderClientPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        network.mojom.TrustedURLLoaderHeaderClient.$interfaceName,
        scope);
  }
};

/** @interface */
network.mojom.TrustedURLLoaderHeaderClientInterface = class {
  
  /**
   * @param { !number } requestId
   * @param { !network.mojom.TrustedHeaderClientPendingReceiver } headerClient
   */

  onLoaderCreated(requestId, headerClient) {}
  
  /**
   * @param { !network.mojom.URLRequest } request
   * @param { !network.mojom.TrustedHeaderClientPendingReceiver } headerClient
   */

  onLoaderForCorsPreflightCreated(request, headerClient) {}
};

/**
 * @export
 * @implements { network.mojom.TrustedURLLoaderHeaderClientInterface }
 */
network.mojom.TrustedURLLoaderHeaderClientRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!network.mojom.TrustedURLLoaderHeaderClientPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          network.mojom.TrustedURLLoaderHeaderClientPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!network.mojom.TrustedURLLoaderHeaderClientPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !number } requestId
   * @param { !network.mojom.TrustedHeaderClientPendingReceiver } headerClient
   */

  onLoaderCreated(
      requestId,
      headerClient) {
    this.proxy.sendMessage(
        0,
        network.mojom.TrustedURLLoaderHeaderClient_OnLoaderCreated_ParamsSpec.$,
        null,
        [
          requestId,
          headerClient
        ]);
  }

  
  /**
   * @param { !network.mojom.URLRequest } request
   * @param { !network.mojom.TrustedHeaderClientPendingReceiver } headerClient
   */

  onLoaderForCorsPreflightCreated(
      request,
      headerClient) {
    this.proxy.sendMessage(
        1,
        network.mojom.TrustedURLLoaderHeaderClient_OnLoaderForCorsPreflightCreated_ParamsSpec.$,
        null,
        [
          request,
          headerClient
        ]);
  }
};

/**
 * An object which receives request messages for the TrustedURLLoaderHeaderClient
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
network.mojom.TrustedURLLoaderHeaderClientReceiver = class {
  /**
   * @param {!network.mojom.TrustedURLLoaderHeaderClientInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!network.mojom.TrustedURLLoaderHeaderClientRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        network.mojom.TrustedURLLoaderHeaderClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.TrustedURLLoaderHeaderClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        network.mojom.TrustedURLLoaderHeaderClient_OnLoaderCreated_ParamsSpec.$,
        null,
        impl.onLoaderCreated.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        network.mojom.TrustedURLLoaderHeaderClient_OnLoaderForCorsPreflightCreated_ParamsSpec.$,
        null,
        impl.onLoaderForCorsPreflightCreated.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
network.mojom.TrustedURLLoaderHeaderClient = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "network.mojom.TrustedURLLoaderHeaderClient";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!network.mojom.TrustedURLLoaderHeaderClientRemote}
   * @export
   */
  static getRemote() {
    let remote = new network.mojom.TrustedURLLoaderHeaderClientRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the TrustedURLLoaderHeaderClient
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
network.mojom.TrustedURLLoaderHeaderClientCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      network.mojom.TrustedURLLoaderHeaderClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.TrustedURLLoaderHeaderClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onLoaderCreated =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        network.mojom.TrustedURLLoaderHeaderClient_OnLoaderCreated_ParamsSpec.$,
        null,
        this.onLoaderCreated.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onLoaderForCorsPreflightCreated =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        network.mojom.TrustedURLLoaderHeaderClient_OnLoaderForCorsPreflightCreated_ParamsSpec.$,
        null,
        this.onLoaderForCorsPreflightCreated.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('network.mojom.NetworkContextClient');
goog.provide('network.mojom.NetworkContextClientReceiver');
goog.provide('network.mojom.NetworkContextClientCallbackRouter');
goog.provide('network.mojom.NetworkContextClientInterface');
goog.provide('network.mojom.NetworkContextClientRemote');
goog.provide('network.mojom.NetworkContextClientPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
network.mojom.NetworkContextClientPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        network.mojom.NetworkContextClient.$interfaceName,
        scope);
  }
};

/** @interface */
network.mojom.NetworkContextClientInterface = class {
  
  /**
   * @param { !number } processId
   * @param { !boolean } async
   * @param { !Array<!mojoBase.mojom.FilePath> } filePaths
   * @param { !url.mojom.Url } destinationUrl
   * @return {!Promise<{
        netError: !number,
        files: !Array<!mojoBase.mojom.ReadOnlyFile>,
   *  }>}
   */

  onFileUploadRequested(processId, async, filePaths, destinationUrl) {}
  
  /**
   * @param { !Array<!url.mojom.Origin> } origins
   * @return {!Promise<{
        origins: !Array<!url.mojom.Origin>,
   *  }>}
   */

  onCanSendReportingReports(origins) {}
  
  /**
   * @param { !url.mojom.Origin } origin
   * @return {!Promise<{
        allowed: !boolean,
   *  }>}
   */

  onCanSendDomainReliabilityUpload(origin) {}
  
  /**
   * @param { !string } serverAuthToken
   * @param { !boolean } canDelegate
   * @param { !string } authNegotiateAndroidAccountType
   * @param { !string } spn
   * @return {!Promise<{
        result: !number,
        authToken: !string,
   *  }>}
   */

  onGenerateHttpNegotiateAuthToken(serverAuthToken, canDelegate, authNegotiateAndroidAccountType, spn) {}
  
  /**
   * @param { !network.mojom.FulfillTrustTokenIssuanceRequest } request
   * @return {!Promise<{
        response: !network.mojom.FulfillTrustTokenIssuanceAnswer,
   *  }>}
   */

  onTrustTokenIssuanceDivertedToSystem(request) {}
  
  /**
   * @return {!Promise<{
        allowed: !boolean,
   *  }>}
   */

  onCanSendSCTAuditingReport() {}
  
  /**
   */

  onNewSCTAuditingReportSent() {}
};

/**
 * @export
 * @implements { network.mojom.NetworkContextClientInterface }
 */
network.mojom.NetworkContextClientRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!network.mojom.NetworkContextClientPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          network.mojom.NetworkContextClientPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!network.mojom.NetworkContextClientPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !number } processId
   * @param { !boolean } async
   * @param { !Array<!mojoBase.mojom.FilePath> } filePaths
   * @param { !url.mojom.Url } destinationUrl
   * @return {!Promise<{
        netError: !number,
        files: !Array<!mojoBase.mojom.ReadOnlyFile>,
   *  }>}
   */

  onFileUploadRequested(
      processId,
      async,
      filePaths,
      destinationUrl) {
    return this.proxy.sendMessage(
        0,
        network.mojom.NetworkContextClient_OnFileUploadRequested_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnFileUploadRequested_ResponseParamsSpec.$,
        [
          processId,
          async,
          filePaths,
          destinationUrl
        ]);
  }

  
  /**
   * @param { !Array<!url.mojom.Origin> } origins
   * @return {!Promise<{
        origins: !Array<!url.mojom.Origin>,
   *  }>}
   */

  onCanSendReportingReports(
      origins) {
    return this.proxy.sendMessage(
        1,
        network.mojom.NetworkContextClient_OnCanSendReportingReports_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnCanSendReportingReports_ResponseParamsSpec.$,
        [
          origins
        ]);
  }

  
  /**
   * @param { !url.mojom.Origin } origin
   * @return {!Promise<{
        allowed: !boolean,
   *  }>}
   */

  onCanSendDomainReliabilityUpload(
      origin) {
    return this.proxy.sendMessage(
        2,
        network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_ResponseParamsSpec.$,
        [
          origin
        ]);
  }

  
  /**
   * @param { !string } serverAuthToken
   * @param { !boolean } canDelegate
   * @param { !string } authNegotiateAndroidAccountType
   * @param { !string } spn
   * @return {!Promise<{
        result: !number,
        authToken: !string,
   *  }>}
   */

  onGenerateHttpNegotiateAuthToken(
      serverAuthToken,
      canDelegate,
      authNegotiateAndroidAccountType,
      spn) {
    return this.proxy.sendMessage(
        3,
        network.mojom.NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ResponseParamsSpec.$,
        [
          serverAuthToken,
          canDelegate,
          authNegotiateAndroidAccountType,
          spn
        ]);
  }

  
  /**
   * @param { !network.mojom.FulfillTrustTokenIssuanceRequest } request
   * @return {!Promise<{
        response: !network.mojom.FulfillTrustTokenIssuanceAnswer,
   *  }>}
   */

  onTrustTokenIssuanceDivertedToSystem(
      request) {
    return this.proxy.sendMessage(
        4,
        network.mojom.NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ResponseParamsSpec.$,
        [
          request
        ]);
  }

  
  /**
   * @return {!Promise<{
        allowed: !boolean,
   *  }>}
   */

  onCanSendSCTAuditingReport() {
    return this.proxy.sendMessage(
        5,
        network.mojom.NetworkContextClient_OnCanSendSCTAuditingReport_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnCanSendSCTAuditingReport_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   */

  onNewSCTAuditingReportSent() {
    this.proxy.sendMessage(
        6,
        network.mojom.NetworkContextClient_OnNewSCTAuditingReportSent_ParamsSpec.$,
        null,
        [
        ]);
  }
};

/**
 * An object which receives request messages for the NetworkContextClient
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
network.mojom.NetworkContextClientReceiver = class {
  /**
   * @param {!network.mojom.NetworkContextClientInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!network.mojom.NetworkContextClientRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        network.mojom.NetworkContextClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.NetworkContextClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        network.mojom.NetworkContextClient_OnFileUploadRequested_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnFileUploadRequested_ResponseParamsSpec.$,
        impl.onFileUploadRequested.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        network.mojom.NetworkContextClient_OnCanSendReportingReports_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnCanSendReportingReports_ResponseParamsSpec.$,
        impl.onCanSendReportingReports.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_ResponseParamsSpec.$,
        impl.onCanSendDomainReliabilityUpload.bind(impl));
    this.helper_internal_.registerHandler(
        3,
        network.mojom.NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ResponseParamsSpec.$,
        impl.onGenerateHttpNegotiateAuthToken.bind(impl));
    this.helper_internal_.registerHandler(
        4,
        network.mojom.NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ResponseParamsSpec.$,
        impl.onTrustTokenIssuanceDivertedToSystem.bind(impl));
    this.helper_internal_.registerHandler(
        5,
        network.mojom.NetworkContextClient_OnCanSendSCTAuditingReport_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnCanSendSCTAuditingReport_ResponseParamsSpec.$,
        impl.onCanSendSCTAuditingReport.bind(impl));
    this.helper_internal_.registerHandler(
        6,
        network.mojom.NetworkContextClient_OnNewSCTAuditingReportSent_ParamsSpec.$,
        null,
        impl.onNewSCTAuditingReportSent.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
network.mojom.NetworkContextClient = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "network.mojom.NetworkContextClient";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!network.mojom.NetworkContextClientRemote}
   * @export
   */
  static getRemote() {
    let remote = new network.mojom.NetworkContextClientRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the NetworkContextClient
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
network.mojom.NetworkContextClientCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      network.mojom.NetworkContextClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.NetworkContextClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onFileUploadRequested =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        network.mojom.NetworkContextClient_OnFileUploadRequested_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnFileUploadRequested_ResponseParamsSpec.$,
        this.onFileUploadRequested.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onCanSendReportingReports =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        network.mojom.NetworkContextClient_OnCanSendReportingReports_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnCanSendReportingReports_ResponseParamsSpec.$,
        this.onCanSendReportingReports.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onCanSendDomainReliabilityUpload =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_ResponseParamsSpec.$,
        this.onCanSendDomainReliabilityUpload.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onGenerateHttpNegotiateAuthToken =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        3,
        network.mojom.NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ResponseParamsSpec.$,
        this.onGenerateHttpNegotiateAuthToken.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onTrustTokenIssuanceDivertedToSystem =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        4,
        network.mojom.NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ResponseParamsSpec.$,
        this.onTrustTokenIssuanceDivertedToSystem.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onCanSendSCTAuditingReport =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        5,
        network.mojom.NetworkContextClient_OnCanSendSCTAuditingReport_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnCanSendSCTAuditingReport_ResponseParamsSpec.$,
        this.onCanSendSCTAuditingReport.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onNewSCTAuditingReportSent =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        6,
        network.mojom.NetworkContextClient_OnNewSCTAuditingReportSent_ParamsSpec.$,
        null,
        this.onNewSCTAuditingReportSent.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('network.mojom.NetworkContext');
goog.provide('network.mojom.NetworkContextReceiver');
goog.provide('network.mojom.NetworkContextCallbackRouter');
goog.provide('network.mojom.NetworkContextInterface');
goog.provide('network.mojom.NetworkContextRemote');
goog.provide('network.mojom.NetworkContextPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
network.mojom.NetworkContextPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        network.mojom.NetworkContext.$interfaceName,
        scope);
  }
};

/** @interface */
network.mojom.NetworkContextInterface = class {
  
  /**
   * @param { !network.mojom.NetworkContextClientRemote } client
   */

  setClient(client) {}
  
  /**
   * @param { !network.mojom.URLLoaderFactoryPendingReceiver } urlLoaderFactory
   * @param { !network.mojom.URLLoaderFactoryParams } params
   */

  createURLLoaderFactory(urlLoaderFactory, params) {}
  
  /**
   */

  resetURLLoaderFactories() {}
  
  /**
   * @param { !network.mojom.CookieManagerPendingReceiver } cookieManager
   */

  getCookieManager(cookieManager) {}
  
  /**
   * @param { !network.mojom.RestrictedCookieManagerPendingReceiver } restrictedCookieManager
   * @param { !network.mojom.RestrictedCookieManagerRole } role
   * @param { !url.mojom.Origin } origin
   * @param { !network.mojom.IsolationInfo } isolationInfo
   * @param { ?network.mojom.CookieAccessObserverRemote } cookieObserver
   */

  getRestrictedCookieManager(restrictedCookieManager, role, origin, isolationInfo, cookieObserver) {}
  
  /**
   * @param { !network.mojom.TrustTokenQueryAnswererPendingReceiver } trustTokenQueryAnswerer
   * @param { !url.mojom.Origin } topFrameOrigin
   */

  getTrustTokenQueryAnswerer(trustTokenQueryAnswerer, topFrameOrigin) {}
  
  /**
   * @param { ?network.mojom.ClearDataFilter } filter
   * @return {!Promise}
   */

  clearTrustTokenData(filter) {}
  
  /**
   * @return {!Promise<{
        tokens: !Array<!network.mojom.StoredTrustTokensForIssuer>,
   *  }>}
   */

  getStoredTrustTokenCounts() {}
  
  /**
   * @param { !url.mojom.Origin } issuer
   * @return {!Promise<{
        status: !network.mojom.DeleteStoredTrustTokensStatus,
   *  }>}
   */

  deleteStoredTrustTokens(issuer) {}
  
  /**
   * @param { !boolean } block
   */

  setBlockTrustTokens(block) {}
  
  /**
   * @param { !mojoBase.mojom.Time } startTime
   * @param { !mojoBase.mojom.Time } endTime
   * @return {!Promise}
   */

  clearNetworkingHistoryBetween(startTime, endTime) {}
  
  /**
   * @param { !mojoBase.mojom.Time } startTime
   * @param { !mojoBase.mojom.Time } endTime
   * @param { ?network.mojom.ClearDataFilter } filter
   * @return {!Promise}
   */

  clearHttpCache(startTime, endTime, filter) {}
  
  /**
   * @param { !mojoBase.mojom.Time } startTime
   * @param { !mojoBase.mojom.Time } endTime
   * @return {!Promise<{
        isUpperBound: !boolean,
        sizeOrError: !bigint,
   *  }>}
   */

  computeHttpCacheSize(startTime, endTime) {}
  
  /**
   * @param { !url.mojom.Url } url
   * @param { !string } httpMethod
   * @param { !network.mojom.NetworkIsolationKey } key
   * @param { !boolean } isSubframeDocumentResource
   * @param { !boolean } includeCredentials
   */

  notifyExternalCacheHit(url, httpMethod, key, isSubframeDocumentResource, includeCredentials) {}
  
  /**
   * @param { ?network.mojom.ClearDataFilter } filter
   * @return {!Promise}
   */

  clearHostCache(filter) {}
  
  /**
   * @param { !mojoBase.mojom.Time } startTime
   * @param { !mojoBase.mojom.Time } endTime
   * @return {!Promise}
   */

  clearHttpAuthCache(startTime, endTime) {}
  
  /**
   * @param { ?network.mojom.ClearDataFilter } filter
   * @return {!Promise}
   */

  clearReportingCacheReports(filter) {}
  
  /**
   * @param { ?network.mojom.ClearDataFilter } filter
   * @return {!Promise}
   */

  clearReportingCacheClients(filter) {}
  
  /**
   * @param { ?network.mojom.ClearDataFilter } filter
   * @return {!Promise}
   */

  clearNetworkErrorLogging(filter) {}
  
  /**
   * @param { ?network.mojom.ClearDataFilter } filter
   * @param { !network.mojom.NetworkContext_DomainReliabilityClearMode } mode
   * @return {!Promise}
   */

  clearDomainReliability(filter, mode) {}
  
  /**
   * @param { !mojoBase.mojom.UnguessableToken } reportingSource
   * @param { !url.mojom.Origin } origin
   * @param { !network.mojom.IsolationInfo } isolationInfo
   * @param { !Object<!string, !string> } endpoints
   */

  setDocumentReportingEndpoints(reportingSource, origin, isolationInfo, endpoints) {}
  
  /**
   * @param { !mojoBase.mojom.UnguessableToken } reportingSource
   */

  sendReportsAndRemoveSource(reportingSource) {}
  
  /**
   * @param { !string } type
   * @param { !string } group
   * @param { !url.mojom.Url } url
   * @param { ?mojoBase.mojom.UnguessableToken } reportingSource
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { ?string } userAgent
   * @param { !mojoBase.mojom.DictionaryValue } body
   */

  queueReport(type, group, url, reportingSource, networkIsolationKey, userAgent, body) {}
  
  /**
   * @param { !network.mojom.SignedExchangeReport } report
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   */

  queueSignedExchangeReport(report, networkIsolationKey) {}
  
  /**
   * @return {!Promise}
   */

  closeAllConnections() {}
  
  /**
   * @return {!Promise}
   */

  closeIdleConnections() {}
  
  /**
   * @param { !mojoBase.mojom.UnguessableToken } throttlingProfileId
   * @param { ?network.mojom.NetworkConditions } conditions
   */

  setNetworkConditions(throttlingProfileId, conditions) {}
  
  /**
   * @param { !string } newAcceptLanguage
   */

  setAcceptLanguage(newAcceptLanguage) {}
  
  /**
   * @param { !boolean } enableReferrers
   */

  setEnableReferrers(enableReferrers) {}
  
  /**
   * @param { !network.mojom.CTPolicy } ctPolicy
   */

  setCTPolicy(ctPolicy) {}
  
  /**
   * @param { !string } host
   * @param { !mojoBase.mojom.Time } expiry
   * @param { !boolean } enforce
   * @param { !url.mojom.Url } reportUri
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @return {!Promise<{
        success: !boolean,
   *  }>}
   */

  addExpectCT(host, expiry, enforce, reportUri, networkIsolationKey) {}
  
  /**
   * @param { !url.mojom.Url } reportUri
   * @return {!Promise<{
        success: !boolean,
   *  }>}
   */

  setExpectCTTestReport(reportUri) {}
  
  /**
   * @param { !string } domain
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @return {!Promise<{
        state: !mojoBase.mojom.DictionaryValue,
   *  }>}
   */

  getExpectCTState(domain, networkIsolationKey) {}
  
  /**
   * @param { !network.mojom.UDPSocketPendingReceiver } receiver
   * @param { ?network.mojom.UDPSocketListenerRemote } listener
   */

  createUDPSocket(receiver, listener) {}
  
  /**
   * @param { !network.mojom.IPEndPoint } localAddr
   * @param { !number } backlog
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !network.mojom.TCPServerSocketPendingReceiver } socket
   * @return {!Promise<{
        result: !number,
        localAddrOut: ?network.mojom.IPEndPoint,
   *  }>}
   */

  createTCPServerSocket(localAddr, backlog, trafficAnnotation, socket) {}
  
  /**
   * @param { ?network.mojom.IPEndPoint } localAddr
   * @param { !network.mojom.AddressList } remoteAddrList
   * @param { ?network.mojom.TCPConnectedSocketOptions } tcpConnectedSocketOptions
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !network.mojom.TCPConnectedSocketPendingReceiver } socket
   * @param { ?network.mojom.SocketObserverRemote } observer
   * @return {!Promise<{
        result: !number,
        localAddr: ?network.mojom.IPEndPoint,
        peerAddr: ?network.mojom.IPEndPoint,
        receiveStream: ?MojoHandle,
        sendStream: ?MojoHandle,
   *  }>}
   */

  createTCPConnectedSocket(localAddr, remoteAddrList, tcpConnectedSocketOptions, trafficAnnotation, socket, observer) {}
  
  /**
   * @param { !network.mojom.IPEndPoint } localAddr
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !network.mojom.TCPBoundSocketPendingReceiver } socket
   * @return {!Promise<{
        result: !number,
        localAddr: ?network.mojom.IPEndPoint,
   *  }>}
   */

  createTCPBoundSocket(localAddr, trafficAnnotation, socket) {}
  
  /**
   * @param { !network.mojom.ProxyResolvingSocketFactoryPendingReceiver } factory
   */

  createProxyResolvingSocketFactory(factory) {}
  
  /**
   * @param { !url.mojom.Url } url
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { !network.mojom.ProxyLookupClientRemote } proxyLookupClient
   */

  lookUpProxyForURL(url, networkIsolationKey, proxyLookupClient) {}
  
  /**
   * @return {!Promise}
   */

  forceReloadProxyConfig() {}
  
  /**
   * @return {!Promise}
   */

  clearBadProxiesCache() {}
  
  /**
   * @param { !url.mojom.Url } url
   * @param { !Array<!string> } requestedProtocols
   * @param { !network.mojom.SiteForCookies } siteForCookies
   * @param { !network.mojom.IsolationInfo } isolationInfo
   * @param { !Array<!network.mojom.HttpHeader> } additionalHeaders
   * @param { !number } processId
   * @param { !url.mojom.Origin } origin
   * @param { !number } options
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !network.mojom.WebSocketHandshakeClientRemote } handshakeClient
   * @param { ?network.mojom.URLLoaderNetworkServiceObserverRemote } urlLoaderNetworkObserver
   * @param { ?network.mojom.WebSocketAuthenticationHandlerRemote } authHandler
   * @param { ?network.mojom.TrustedHeaderClientRemote } headerClient
   * @param { ?mojoBase.mojom.UnguessableToken } throttlingProfileId
   */

  createWebSocket(url, requestedProtocols, siteForCookies, isolationInfo, additionalHeaders, processId, origin, options, trafficAnnotation, handshakeClient, urlLoaderNetworkObserver, authHandler, headerClient, throttlingProfileId) {}
  
  /**
   * @param { !url.mojom.Url } url
   * @param { !url.mojom.Origin } origin
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { !Array<!network.mojom.WebTransportCertificateFingerprint> } fingerprints
   * @param { !network.mojom.WebTransportHandshakeClientRemote } handshakeClient
   */

  createWebTransport(url, origin, networkIsolationKey, fingerprints, handshakeClient) {}
  
  /**
   * @param { !network.mojom.NetLogExporterPendingReceiver } receiver
   */

  createNetLogExporter(receiver) {}
  
  /**
   * @param { !number } numStreams
   * @param { !url.mojom.Url } url
   * @param { !boolean } allowCredentials
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   */

  preconnectSockets(numStreams, url, allowCredentials, networkIsolationKey) {}
  
  /**
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { !network.mojom.P2PTrustedSocketManagerClientRemote } client
   * @param { !network.mojom.P2PTrustedSocketManagerPendingReceiver } trustedSocketManager
   * @param { !network.mojom.P2PSocketManagerPendingReceiver } socketManager
   */

  createP2PSocketManager(networkIsolationKey, client, trustedSocketManager, socketManager) {}
  
  /**
   * @param { !network.mojom.MdnsResponderPendingReceiver } responderReceiver
   */

  createMdnsResponder(responderReceiver) {}
  
  /**
   * @param { !network.mojom.HostPortPair } host
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { ?network.mojom.ResolveHostParameters } optionalParameters
   * @param { !network.mojom.ResolveHostClientRemote } responseClient
   */

  resolveHost(host, networkIsolationKey, optionalParameters, responseClient) {}
  
  /**
   * @param { ?network.mojom.DnsConfigOverrides } configOverrides
   * @param { !network.mojom.HostResolverPendingReceiver } hostResolver
   */

  createHostResolver(configOverrides, hostResolver) {}
  
  /**
   * @param { !network.mojom.X509Certificate } certificate
   * @param { !url.mojom.Url } url
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { !string } ocspResponse
   * @param { !string } sctList
   * @return {!Promise<{
        errorCode: !number,
        cvResult: !network.mojom.CertVerifyResult,
        pkpBypassed: !boolean,
        pinningFailureLog: !string,
   *  }>}
   */

  verifyCertForSignedExchange(certificate, url, networkIsolationKey, ocspResponse, sctList) {}
  
  /**
   * @param { !string } host
   * @param { !mojoBase.mojom.Time } expiry
   * @param { !boolean } includeSubdomains
   * @return {!Promise}
   */

  addHSTS(host, expiry, includeSubdomains) {}
  
  /**
   * @param { !string } host
   * @return {!Promise<{
        result: !boolean,
   *  }>}
   */

  isHSTSActiveForHost(host) {}
  
  /**
   * @param { !string } domain
   * @return {!Promise<{
        state: !mojoBase.mojom.DictionaryValue,
   *  }>}
   */

  getHSTSState(domain) {}
  
  /**
   * @param { !url.mojom.Origin } sourceOrigin
   * @param { !Array<!network.mojom.CorsOriginPattern> } allowPatterns
   * @param { !Array<!network.mojom.CorsOriginPattern> } blockPatterns
   * @return {!Promise}
   */

  setCorsOriginAccessListsForOrigin(sourceOrigin, allowPatterns, blockPatterns) {}
  
  /**
   * @param { !string } host
   * @return {!Promise<{
        result: !boolean,
   *  }>}
   */

  deleteDynamicDataForHost(host) {}
  
  /**
   * @param { !boolean } splitAuthCacheByNetworkIsolationKey
   */

  setSplitAuthCacheByNetworkIsolationKey(splitAuthCacheByNetworkIsolationKey) {}
  
  /**
   * @return {!Promise<{
        cacheKey: !mojoBase.mojom.UnguessableToken,
   *  }>}
   */

  saveHttpAuthCacheProxyEntries() {}
  
  /**
   * @param { !mojoBase.mojom.UnguessableToken } cacheKey
   * @return {!Promise}
   */

  loadHttpAuthCacheProxyEntries(cacheKey) {}
  
  /**
   * @param { !network.mojom.AuthChallengeInfo } challenge
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { !network.mojom.AuthCredentials } credentials
   * @return {!Promise}
   */

  addAuthCacheEntry(challenge, networkIsolationKey, credentials) {}
  
  /**
   * @param { !boolean } value
   */

  setCorsNonWildcardRequestHeadersSupport(value) {}
  
  /**
   * @param { !url.mojom.Url } url
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @return {!Promise<{
        credentials: ?network.mojom.AuthCredentials,
   *  }>}
   */

  lookupServerBasicAuthCredentials(url, networkIsolationKey) {}
  
  /**
   * @return {!Promise}
   */

  enableStaticKeyPinningForTesting() {}
  
  /**
   * @param { !network.mojom.X509Certificate } certificate
   * @param { !string } hostname
   * @param { !string } ocspResponse
   * @param { !string } sctList
   * @return {!Promise<{
        errorCode: !number,
   *  }>}
   */

  verifyCertificateForTesting(certificate, hostname, ocspResponse, sctList) {}
  
  /**
   * @param { !url.mojom.Origin } origin
   * @param { !url.mojom.Url } uploadUrl
   * @return {!Promise}
   */

  addDomainReliabilityContextForTesting(origin, uploadUrl) {}
  
  /**
   * @return {!Promise}
   */

  forceDomainReliabilityUploadsForTesting() {}
  
  /**
   */

  setCTLogListAlwaysTimelyForTesting() {}
  
  /**
   * @param { !network.mojom.SCTAuditingMode } mode
   */

  setSCTAuditingMode(mode) {}
  
  /**
   * @param { !network.mojom.ReportingApiObserverRemote } observer
   */

  addReportingApiObserver(observer) {}
};

/**
 * @export
 * @implements { network.mojom.NetworkContextInterface }
 */
network.mojom.NetworkContextRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!network.mojom.NetworkContextPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          network.mojom.NetworkContextPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!network.mojom.NetworkContextPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !network.mojom.NetworkContextClientRemote } client
   */

  setClient(
      client) {
    this.proxy.sendMessage(
        0,
        network.mojom.NetworkContext_SetClient_ParamsSpec.$,
        null,
        [
          client
        ]);
  }

  
  /**
   * @param { !network.mojom.URLLoaderFactoryPendingReceiver } urlLoaderFactory
   * @param { !network.mojom.URLLoaderFactoryParams } params
   */

  createURLLoaderFactory(
      urlLoaderFactory,
      params) {
    this.proxy.sendMessage(
        1,
        network.mojom.NetworkContext_CreateURLLoaderFactory_ParamsSpec.$,
        null,
        [
          urlLoaderFactory,
          params
        ]);
  }

  
  /**
   */

  resetURLLoaderFactories() {
    this.proxy.sendMessage(
        2,
        network.mojom.NetworkContext_ResetURLLoaderFactories_ParamsSpec.$,
        null,
        [
        ]);
  }

  
  /**
   * @param { !network.mojom.CookieManagerPendingReceiver } cookieManager
   */

  getCookieManager(
      cookieManager) {
    this.proxy.sendMessage(
        3,
        network.mojom.NetworkContext_GetCookieManager_ParamsSpec.$,
        null,
        [
          cookieManager
        ]);
  }

  
  /**
   * @param { !network.mojom.RestrictedCookieManagerPendingReceiver } restrictedCookieManager
   * @param { !network.mojom.RestrictedCookieManagerRole } role
   * @param { !url.mojom.Origin } origin
   * @param { !network.mojom.IsolationInfo } isolationInfo
   * @param { ?network.mojom.CookieAccessObserverRemote } cookieObserver
   */

  getRestrictedCookieManager(
      restrictedCookieManager,
      role,
      origin,
      isolationInfo,
      cookieObserver) {
    this.proxy.sendMessage(
        4,
        network.mojom.NetworkContext_GetRestrictedCookieManager_ParamsSpec.$,
        null,
        [
          restrictedCookieManager,
          role,
          origin,
          isolationInfo,
          cookieObserver
        ]);
  }

  
  /**
   * @param { !network.mojom.TrustTokenQueryAnswererPendingReceiver } trustTokenQueryAnswerer
   * @param { !url.mojom.Origin } topFrameOrigin
   */

  getTrustTokenQueryAnswerer(
      trustTokenQueryAnswerer,
      topFrameOrigin) {
    this.proxy.sendMessage(
        5,
        network.mojom.NetworkContext_GetTrustTokenQueryAnswerer_ParamsSpec.$,
        null,
        [
          trustTokenQueryAnswerer,
          topFrameOrigin
        ]);
  }

  
  /**
   * @param { ?network.mojom.ClearDataFilter } filter
   * @return {!Promise}
   */

  clearTrustTokenData(
      filter) {
    return this.proxy.sendMessage(
        6,
        network.mojom.NetworkContext_ClearTrustTokenData_ParamsSpec.$,
        network.mojom.NetworkContext_ClearTrustTokenData_ResponseParamsSpec.$,
        [
          filter
        ]);
  }

  
  /**
   * @return {!Promise<{
        tokens: !Array<!network.mojom.StoredTrustTokensForIssuer>,
   *  }>}
   */

  getStoredTrustTokenCounts() {
    return this.proxy.sendMessage(
        7,
        network.mojom.NetworkContext_GetStoredTrustTokenCounts_ParamsSpec.$,
        network.mojom.NetworkContext_GetStoredTrustTokenCounts_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !url.mojom.Origin } issuer
   * @return {!Promise<{
        status: !network.mojom.DeleteStoredTrustTokensStatus,
   *  }>}
   */

  deleteStoredTrustTokens(
      issuer) {
    return this.proxy.sendMessage(
        8,
        network.mojom.NetworkContext_DeleteStoredTrustTokens_ParamsSpec.$,
        network.mojom.NetworkContext_DeleteStoredTrustTokens_ResponseParamsSpec.$,
        [
          issuer
        ]);
  }

  
  /**
   * @param { !boolean } block
   */

  setBlockTrustTokens(
      block) {
    this.proxy.sendMessage(
        9,
        network.mojom.NetworkContext_SetBlockTrustTokens_ParamsSpec.$,
        null,
        [
          block
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.Time } startTime
   * @param { !mojoBase.mojom.Time } endTime
   * @return {!Promise}
   */

  clearNetworkingHistoryBetween(
      startTime,
      endTime) {
    return this.proxy.sendMessage(
        10,
        network.mojom.NetworkContext_ClearNetworkingHistoryBetween_ParamsSpec.$,
        network.mojom.NetworkContext_ClearNetworkingHistoryBetween_ResponseParamsSpec.$,
        [
          startTime,
          endTime
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.Time } startTime
   * @param { !mojoBase.mojom.Time } endTime
   * @param { ?network.mojom.ClearDataFilter } filter
   * @return {!Promise}
   */

  clearHttpCache(
      startTime,
      endTime,
      filter) {
    return this.proxy.sendMessage(
        11,
        network.mojom.NetworkContext_ClearHttpCache_ParamsSpec.$,
        network.mojom.NetworkContext_ClearHttpCache_ResponseParamsSpec.$,
        [
          startTime,
          endTime,
          filter
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.Time } startTime
   * @param { !mojoBase.mojom.Time } endTime
   * @return {!Promise<{
        isUpperBound: !boolean,
        sizeOrError: !bigint,
   *  }>}
   */

  computeHttpCacheSize(
      startTime,
      endTime) {
    return this.proxy.sendMessage(
        12,
        network.mojom.NetworkContext_ComputeHttpCacheSize_ParamsSpec.$,
        network.mojom.NetworkContext_ComputeHttpCacheSize_ResponseParamsSpec.$,
        [
          startTime,
          endTime
        ]);
  }

  
  /**
   * @param { !url.mojom.Url } url
   * @param { !string } httpMethod
   * @param { !network.mojom.NetworkIsolationKey } key
   * @param { !boolean } isSubframeDocumentResource
   * @param { !boolean } includeCredentials
   */

  notifyExternalCacheHit(
      url,
      httpMethod,
      key,
      isSubframeDocumentResource,
      includeCredentials) {
    this.proxy.sendMessage(
        13,
        network.mojom.NetworkContext_NotifyExternalCacheHit_ParamsSpec.$,
        null,
        [
          url,
          httpMethod,
          key,
          isSubframeDocumentResource,
          includeCredentials
        ]);
  }

  
  /**
   * @param { ?network.mojom.ClearDataFilter } filter
   * @return {!Promise}
   */

  clearHostCache(
      filter) {
    return this.proxy.sendMessage(
        14,
        network.mojom.NetworkContext_ClearHostCache_ParamsSpec.$,
        network.mojom.NetworkContext_ClearHostCache_ResponseParamsSpec.$,
        [
          filter
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.Time } startTime
   * @param { !mojoBase.mojom.Time } endTime
   * @return {!Promise}
   */

  clearHttpAuthCache(
      startTime,
      endTime) {
    return this.proxy.sendMessage(
        15,
        network.mojom.NetworkContext_ClearHttpAuthCache_ParamsSpec.$,
        network.mojom.NetworkContext_ClearHttpAuthCache_ResponseParamsSpec.$,
        [
          startTime,
          endTime
        ]);
  }

  
  /**
   * @param { ?network.mojom.ClearDataFilter } filter
   * @return {!Promise}
   */

  clearReportingCacheReports(
      filter) {
    return this.proxy.sendMessage(
        16,
        network.mojom.NetworkContext_ClearReportingCacheReports_ParamsSpec.$,
        network.mojom.NetworkContext_ClearReportingCacheReports_ResponseParamsSpec.$,
        [
          filter
        ]);
  }

  
  /**
   * @param { ?network.mojom.ClearDataFilter } filter
   * @return {!Promise}
   */

  clearReportingCacheClients(
      filter) {
    return this.proxy.sendMessage(
        17,
        network.mojom.NetworkContext_ClearReportingCacheClients_ParamsSpec.$,
        network.mojom.NetworkContext_ClearReportingCacheClients_ResponseParamsSpec.$,
        [
          filter
        ]);
  }

  
  /**
   * @param { ?network.mojom.ClearDataFilter } filter
   * @return {!Promise}
   */

  clearNetworkErrorLogging(
      filter) {
    return this.proxy.sendMessage(
        18,
        network.mojom.NetworkContext_ClearNetworkErrorLogging_ParamsSpec.$,
        network.mojom.NetworkContext_ClearNetworkErrorLogging_ResponseParamsSpec.$,
        [
          filter
        ]);
  }

  
  /**
   * @param { ?network.mojom.ClearDataFilter } filter
   * @param { !network.mojom.NetworkContext_DomainReliabilityClearMode } mode
   * @return {!Promise}
   */

  clearDomainReliability(
      filter,
      mode) {
    return this.proxy.sendMessage(
        19,
        network.mojom.NetworkContext_ClearDomainReliability_ParamsSpec.$,
        network.mojom.NetworkContext_ClearDomainReliability_ResponseParamsSpec.$,
        [
          filter,
          mode
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.UnguessableToken } reportingSource
   * @param { !url.mojom.Origin } origin
   * @param { !network.mojom.IsolationInfo } isolationInfo
   * @param { !Object<!string, !string> } endpoints
   */

  setDocumentReportingEndpoints(
      reportingSource,
      origin,
      isolationInfo,
      endpoints) {
    this.proxy.sendMessage(
        20,
        network.mojom.NetworkContext_SetDocumentReportingEndpoints_ParamsSpec.$,
        null,
        [
          reportingSource,
          origin,
          isolationInfo,
          endpoints
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.UnguessableToken } reportingSource
   */

  sendReportsAndRemoveSource(
      reportingSource) {
    this.proxy.sendMessage(
        21,
        network.mojom.NetworkContext_SendReportsAndRemoveSource_ParamsSpec.$,
        null,
        [
          reportingSource
        ]);
  }

  
  /**
   * @param { !string } type
   * @param { !string } group
   * @param { !url.mojom.Url } url
   * @param { ?mojoBase.mojom.UnguessableToken } reportingSource
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { ?string } userAgent
   * @param { !mojoBase.mojom.DictionaryValue } body
   */

  queueReport(
      type,
      group,
      url,
      reportingSource,
      networkIsolationKey,
      userAgent,
      body) {
    this.proxy.sendMessage(
        22,
        network.mojom.NetworkContext_QueueReport_ParamsSpec.$,
        null,
        [
          type,
          group,
          url,
          reportingSource,
          networkIsolationKey,
          userAgent,
          body
        ]);
  }

  
  /**
   * @param { !network.mojom.SignedExchangeReport } report
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   */

  queueSignedExchangeReport(
      report,
      networkIsolationKey) {
    this.proxy.sendMessage(
        23,
        network.mojom.NetworkContext_QueueSignedExchangeReport_ParamsSpec.$,
        null,
        [
          report,
          networkIsolationKey
        ]);
  }

  
  /**
   * @return {!Promise}
   */

  closeAllConnections() {
    return this.proxy.sendMessage(
        24,
        network.mojom.NetworkContext_CloseAllConnections_ParamsSpec.$,
        network.mojom.NetworkContext_CloseAllConnections_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @return {!Promise}
   */

  closeIdleConnections() {
    return this.proxy.sendMessage(
        25,
        network.mojom.NetworkContext_CloseIdleConnections_ParamsSpec.$,
        network.mojom.NetworkContext_CloseIdleConnections_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.UnguessableToken } throttlingProfileId
   * @param { ?network.mojom.NetworkConditions } conditions
   */

  setNetworkConditions(
      throttlingProfileId,
      conditions) {
    this.proxy.sendMessage(
        26,
        network.mojom.NetworkContext_SetNetworkConditions_ParamsSpec.$,
        null,
        [
          throttlingProfileId,
          conditions
        ]);
  }

  
  /**
   * @param { !string } newAcceptLanguage
   */

  setAcceptLanguage(
      newAcceptLanguage) {
    this.proxy.sendMessage(
        27,
        network.mojom.NetworkContext_SetAcceptLanguage_ParamsSpec.$,
        null,
        [
          newAcceptLanguage
        ]);
  }

  
  /**
   * @param { !boolean } enableReferrers
   */

  setEnableReferrers(
      enableReferrers) {
    this.proxy.sendMessage(
        28,
        network.mojom.NetworkContext_SetEnableReferrers_ParamsSpec.$,
        null,
        [
          enableReferrers
        ]);
  }

  
  /**
   * @param { !network.mojom.CTPolicy } ctPolicy
   */

  setCTPolicy(
      ctPolicy) {
    this.proxy.sendMessage(
        29,
        network.mojom.NetworkContext_SetCTPolicy_ParamsSpec.$,
        null,
        [
          ctPolicy
        ]);
  }

  
  /**
   * @param { !string } host
   * @param { !mojoBase.mojom.Time } expiry
   * @param { !boolean } enforce
   * @param { !url.mojom.Url } reportUri
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @return {!Promise<{
        success: !boolean,
   *  }>}
   */

  addExpectCT(
      host,
      expiry,
      enforce,
      reportUri,
      networkIsolationKey) {
    return this.proxy.sendMessage(
        30,
        network.mojom.NetworkContext_AddExpectCT_ParamsSpec.$,
        network.mojom.NetworkContext_AddExpectCT_ResponseParamsSpec.$,
        [
          host,
          expiry,
          enforce,
          reportUri,
          networkIsolationKey
        ]);
  }

  
  /**
   * @param { !url.mojom.Url } reportUri
   * @return {!Promise<{
        success: !boolean,
   *  }>}
   */

  setExpectCTTestReport(
      reportUri) {
    return this.proxy.sendMessage(
        31,
        network.mojom.NetworkContext_SetExpectCTTestReport_ParamsSpec.$,
        network.mojom.NetworkContext_SetExpectCTTestReport_ResponseParamsSpec.$,
        [
          reportUri
        ]);
  }

  
  /**
   * @param { !string } domain
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @return {!Promise<{
        state: !mojoBase.mojom.DictionaryValue,
   *  }>}
   */

  getExpectCTState(
      domain,
      networkIsolationKey) {
    return this.proxy.sendMessage(
        32,
        network.mojom.NetworkContext_GetExpectCTState_ParamsSpec.$,
        network.mojom.NetworkContext_GetExpectCTState_ResponseParamsSpec.$,
        [
          domain,
          networkIsolationKey
        ]);
  }

  
  /**
   * @param { !network.mojom.UDPSocketPendingReceiver } receiver
   * @param { ?network.mojom.UDPSocketListenerRemote } listener
   */

  createUDPSocket(
      receiver,
      listener) {
    this.proxy.sendMessage(
        33,
        network.mojom.NetworkContext_CreateUDPSocket_ParamsSpec.$,
        null,
        [
          receiver,
          listener
        ]);
  }

  
  /**
   * @param { !network.mojom.IPEndPoint } localAddr
   * @param { !number } backlog
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !network.mojom.TCPServerSocketPendingReceiver } socket
   * @return {!Promise<{
        result: !number,
        localAddrOut: ?network.mojom.IPEndPoint,
   *  }>}
   */

  createTCPServerSocket(
      localAddr,
      backlog,
      trafficAnnotation,
      socket) {
    return this.proxy.sendMessage(
        34,
        network.mojom.NetworkContext_CreateTCPServerSocket_ParamsSpec.$,
        network.mojom.NetworkContext_CreateTCPServerSocket_ResponseParamsSpec.$,
        [
          localAddr,
          backlog,
          trafficAnnotation,
          socket
        ]);
  }

  
  /**
   * @param { ?network.mojom.IPEndPoint } localAddr
   * @param { !network.mojom.AddressList } remoteAddrList
   * @param { ?network.mojom.TCPConnectedSocketOptions } tcpConnectedSocketOptions
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !network.mojom.TCPConnectedSocketPendingReceiver } socket
   * @param { ?network.mojom.SocketObserverRemote } observer
   * @return {!Promise<{
        result: !number,
        localAddr: ?network.mojom.IPEndPoint,
        peerAddr: ?network.mojom.IPEndPoint,
        receiveStream: ?MojoHandle,
        sendStream: ?MojoHandle,
   *  }>}
   */

  createTCPConnectedSocket(
      localAddr,
      remoteAddrList,
      tcpConnectedSocketOptions,
      trafficAnnotation,
      socket,
      observer) {
    return this.proxy.sendMessage(
        35,
        network.mojom.NetworkContext_CreateTCPConnectedSocket_ParamsSpec.$,
        network.mojom.NetworkContext_CreateTCPConnectedSocket_ResponseParamsSpec.$,
        [
          localAddr,
          remoteAddrList,
          tcpConnectedSocketOptions,
          trafficAnnotation,
          socket,
          observer
        ]);
  }

  
  /**
   * @param { !network.mojom.IPEndPoint } localAddr
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !network.mojom.TCPBoundSocketPendingReceiver } socket
   * @return {!Promise<{
        result: !number,
        localAddr: ?network.mojom.IPEndPoint,
   *  }>}
   */

  createTCPBoundSocket(
      localAddr,
      trafficAnnotation,
      socket) {
    return this.proxy.sendMessage(
        36,
        network.mojom.NetworkContext_CreateTCPBoundSocket_ParamsSpec.$,
        network.mojom.NetworkContext_CreateTCPBoundSocket_ResponseParamsSpec.$,
        [
          localAddr,
          trafficAnnotation,
          socket
        ]);
  }

  
  /**
   * @param { !network.mojom.ProxyResolvingSocketFactoryPendingReceiver } factory
   */

  createProxyResolvingSocketFactory(
      factory) {
    this.proxy.sendMessage(
        37,
        network.mojom.NetworkContext_CreateProxyResolvingSocketFactory_ParamsSpec.$,
        null,
        [
          factory
        ]);
  }

  
  /**
   * @param { !url.mojom.Url } url
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { !network.mojom.ProxyLookupClientRemote } proxyLookupClient
   */

  lookUpProxyForURL(
      url,
      networkIsolationKey,
      proxyLookupClient) {
    this.proxy.sendMessage(
        38,
        network.mojom.NetworkContext_LookUpProxyForURL_ParamsSpec.$,
        null,
        [
          url,
          networkIsolationKey,
          proxyLookupClient
        ]);
  }

  
  /**
   * @return {!Promise}
   */

  forceReloadProxyConfig() {
    return this.proxy.sendMessage(
        39,
        network.mojom.NetworkContext_ForceReloadProxyConfig_ParamsSpec.$,
        network.mojom.NetworkContext_ForceReloadProxyConfig_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @return {!Promise}
   */

  clearBadProxiesCache() {
    return this.proxy.sendMessage(
        40,
        network.mojom.NetworkContext_ClearBadProxiesCache_ParamsSpec.$,
        network.mojom.NetworkContext_ClearBadProxiesCache_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !url.mojom.Url } url
   * @param { !Array<!string> } requestedProtocols
   * @param { !network.mojom.SiteForCookies } siteForCookies
   * @param { !network.mojom.IsolationInfo } isolationInfo
   * @param { !Array<!network.mojom.HttpHeader> } additionalHeaders
   * @param { !number } processId
   * @param { !url.mojom.Origin } origin
   * @param { !number } options
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !network.mojom.WebSocketHandshakeClientRemote } handshakeClient
   * @param { ?network.mojom.URLLoaderNetworkServiceObserverRemote } urlLoaderNetworkObserver
   * @param { ?network.mojom.WebSocketAuthenticationHandlerRemote } authHandler
   * @param { ?network.mojom.TrustedHeaderClientRemote } headerClient
   * @param { ?mojoBase.mojom.UnguessableToken } throttlingProfileId
   */

  createWebSocket(
      url,
      requestedProtocols,
      siteForCookies,
      isolationInfo,
      additionalHeaders,
      processId,
      origin,
      options,
      trafficAnnotation,
      handshakeClient,
      urlLoaderNetworkObserver,
      authHandler,
      headerClient,
      throttlingProfileId) {
    this.proxy.sendMessage(
        41,
        network.mojom.NetworkContext_CreateWebSocket_ParamsSpec.$,
        null,
        [
          url,
          requestedProtocols,
          siteForCookies,
          isolationInfo,
          additionalHeaders,
          processId,
          origin,
          options,
          trafficAnnotation,
          handshakeClient,
          urlLoaderNetworkObserver,
          authHandler,
          headerClient,
          throttlingProfileId
        ]);
  }

  
  /**
   * @param { !url.mojom.Url } url
   * @param { !url.mojom.Origin } origin
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { !Array<!network.mojom.WebTransportCertificateFingerprint> } fingerprints
   * @param { !network.mojom.WebTransportHandshakeClientRemote } handshakeClient
   */

  createWebTransport(
      url,
      origin,
      networkIsolationKey,
      fingerprints,
      handshakeClient) {
    this.proxy.sendMessage(
        42,
        network.mojom.NetworkContext_CreateWebTransport_ParamsSpec.$,
        null,
        [
          url,
          origin,
          networkIsolationKey,
          fingerprints,
          handshakeClient
        ]);
  }

  
  /**
   * @param { !network.mojom.NetLogExporterPendingReceiver } receiver
   */

  createNetLogExporter(
      receiver) {
    this.proxy.sendMessage(
        43,
        network.mojom.NetworkContext_CreateNetLogExporter_ParamsSpec.$,
        null,
        [
          receiver
        ]);
  }

  
  /**
   * @param { !number } numStreams
   * @param { !url.mojom.Url } url
   * @param { !boolean } allowCredentials
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   */

  preconnectSockets(
      numStreams,
      url,
      allowCredentials,
      networkIsolationKey) {
    this.proxy.sendMessage(
        44,
        network.mojom.NetworkContext_PreconnectSockets_ParamsSpec.$,
        null,
        [
          numStreams,
          url,
          allowCredentials,
          networkIsolationKey
        ]);
  }

  
  /**
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { !network.mojom.P2PTrustedSocketManagerClientRemote } client
   * @param { !network.mojom.P2PTrustedSocketManagerPendingReceiver } trustedSocketManager
   * @param { !network.mojom.P2PSocketManagerPendingReceiver } socketManager
   */

  createP2PSocketManager(
      networkIsolationKey,
      client,
      trustedSocketManager,
      socketManager) {
    this.proxy.sendMessage(
        45,
        network.mojom.NetworkContext_CreateP2PSocketManager_ParamsSpec.$,
        null,
        [
          networkIsolationKey,
          client,
          trustedSocketManager,
          socketManager
        ]);
  }

  
  /**
   * @param { !network.mojom.MdnsResponderPendingReceiver } responderReceiver
   */

  createMdnsResponder(
      responderReceiver) {
    this.proxy.sendMessage(
        46,
        network.mojom.NetworkContext_CreateMdnsResponder_ParamsSpec.$,
        null,
        [
          responderReceiver
        ]);
  }

  
  /**
   * @param { !network.mojom.HostPortPair } host
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { ?network.mojom.ResolveHostParameters } optionalParameters
   * @param { !network.mojom.ResolveHostClientRemote } responseClient
   */

  resolveHost(
      host,
      networkIsolationKey,
      optionalParameters,
      responseClient) {
    this.proxy.sendMessage(
        47,
        network.mojom.NetworkContext_ResolveHost_ParamsSpec.$,
        null,
        [
          host,
          networkIsolationKey,
          optionalParameters,
          responseClient
        ]);
  }

  
  /**
   * @param { ?network.mojom.DnsConfigOverrides } configOverrides
   * @param { !network.mojom.HostResolverPendingReceiver } hostResolver
   */

  createHostResolver(
      configOverrides,
      hostResolver) {
    this.proxy.sendMessage(
        48,
        network.mojom.NetworkContext_CreateHostResolver_ParamsSpec.$,
        null,
        [
          configOverrides,
          hostResolver
        ]);
  }

  
  /**
   * @param { !network.mojom.X509Certificate } certificate
   * @param { !url.mojom.Url } url
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { !string } ocspResponse
   * @param { !string } sctList
   * @return {!Promise<{
        errorCode: !number,
        cvResult: !network.mojom.CertVerifyResult,
        pkpBypassed: !boolean,
        pinningFailureLog: !string,
   *  }>}
   */

  verifyCertForSignedExchange(
      certificate,
      url,
      networkIsolationKey,
      ocspResponse,
      sctList) {
    return this.proxy.sendMessage(
        49,
        network.mojom.NetworkContext_VerifyCertForSignedExchange_ParamsSpec.$,
        network.mojom.NetworkContext_VerifyCertForSignedExchange_ResponseParamsSpec.$,
        [
          certificate,
          url,
          networkIsolationKey,
          ocspResponse,
          sctList
        ]);
  }

  
  /**
   * @param { !string } host
   * @param { !mojoBase.mojom.Time } expiry
   * @param { !boolean } includeSubdomains
   * @return {!Promise}
   */

  addHSTS(
      host,
      expiry,
      includeSubdomains) {
    return this.proxy.sendMessage(
        50,
        network.mojom.NetworkContext_AddHSTS_ParamsSpec.$,
        network.mojom.NetworkContext_AddHSTS_ResponseParamsSpec.$,
        [
          host,
          expiry,
          includeSubdomains
        ]);
  }

  
  /**
   * @param { !string } host
   * @return {!Promise<{
        result: !boolean,
   *  }>}
   */

  isHSTSActiveForHost(
      host) {
    return this.proxy.sendMessage(
        51,
        network.mojom.NetworkContext_IsHSTSActiveForHost_ParamsSpec.$,
        network.mojom.NetworkContext_IsHSTSActiveForHost_ResponseParamsSpec.$,
        [
          host
        ]);
  }

  
  /**
   * @param { !string } domain
   * @return {!Promise<{
        state: !mojoBase.mojom.DictionaryValue,
   *  }>}
   */

  getHSTSState(
      domain) {
    return this.proxy.sendMessage(
        52,
        network.mojom.NetworkContext_GetHSTSState_ParamsSpec.$,
        network.mojom.NetworkContext_GetHSTSState_ResponseParamsSpec.$,
        [
          domain
        ]);
  }

  
  /**
   * @param { !url.mojom.Origin } sourceOrigin
   * @param { !Array<!network.mojom.CorsOriginPattern> } allowPatterns
   * @param { !Array<!network.mojom.CorsOriginPattern> } blockPatterns
   * @return {!Promise}
   */

  setCorsOriginAccessListsForOrigin(
      sourceOrigin,
      allowPatterns,
      blockPatterns) {
    return this.proxy.sendMessage(
        53,
        network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_ParamsSpec.$,
        network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_ResponseParamsSpec.$,
        [
          sourceOrigin,
          allowPatterns,
          blockPatterns
        ]);
  }

  
  /**
   * @param { !string } host
   * @return {!Promise<{
        result: !boolean,
   *  }>}
   */

  deleteDynamicDataForHost(
      host) {
    return this.proxy.sendMessage(
        54,
        network.mojom.NetworkContext_DeleteDynamicDataForHost_ParamsSpec.$,
        network.mojom.NetworkContext_DeleteDynamicDataForHost_ResponseParamsSpec.$,
        [
          host
        ]);
  }

  
  /**
   * @param { !boolean } splitAuthCacheByNetworkIsolationKey
   */

  setSplitAuthCacheByNetworkIsolationKey(
      splitAuthCacheByNetworkIsolationKey) {
    this.proxy.sendMessage(
        55,
        network.mojom.NetworkContext_SetSplitAuthCacheByNetworkIsolationKey_ParamsSpec.$,
        null,
        [
          splitAuthCacheByNetworkIsolationKey
        ]);
  }

  
  /**
   * @return {!Promise<{
        cacheKey: !mojoBase.mojom.UnguessableToken,
   *  }>}
   */

  saveHttpAuthCacheProxyEntries() {
    return this.proxy.sendMessage(
        56,
        network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_ParamsSpec.$,
        network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.UnguessableToken } cacheKey
   * @return {!Promise}
   */

  loadHttpAuthCacheProxyEntries(
      cacheKey) {
    return this.proxy.sendMessage(
        57,
        network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_ParamsSpec.$,
        network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_ResponseParamsSpec.$,
        [
          cacheKey
        ]);
  }

  
  /**
   * @param { !network.mojom.AuthChallengeInfo } challenge
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { !network.mojom.AuthCredentials } credentials
   * @return {!Promise}
   */

  addAuthCacheEntry(
      challenge,
      networkIsolationKey,
      credentials) {
    return this.proxy.sendMessage(
        58,
        network.mojom.NetworkContext_AddAuthCacheEntry_ParamsSpec.$,
        network.mojom.NetworkContext_AddAuthCacheEntry_ResponseParamsSpec.$,
        [
          challenge,
          networkIsolationKey,
          credentials
        ]);
  }

  
  /**
   * @param { !boolean } value
   */

  setCorsNonWildcardRequestHeadersSupport(
      value) {
    this.proxy.sendMessage(
        59,
        network.mojom.NetworkContext_SetCorsNonWildcardRequestHeadersSupport_ParamsSpec.$,
        null,
        [
          value
        ]);
  }

  
  /**
   * @param { !url.mojom.Url } url
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @return {!Promise<{
        credentials: ?network.mojom.AuthCredentials,
   *  }>}
   */

  lookupServerBasicAuthCredentials(
      url,
      networkIsolationKey) {
    return this.proxy.sendMessage(
        60,
        network.mojom.NetworkContext_LookupServerBasicAuthCredentials_ParamsSpec.$,
        network.mojom.NetworkContext_LookupServerBasicAuthCredentials_ResponseParamsSpec.$,
        [
          url,
          networkIsolationKey
        ]);
  }

  
  /**
   * @return {!Promise}
   */

  enableStaticKeyPinningForTesting() {
    return this.proxy.sendMessage(
        61,
        network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_ParamsSpec.$,
        network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !network.mojom.X509Certificate } certificate
   * @param { !string } hostname
   * @param { !string } ocspResponse
   * @param { !string } sctList
   * @return {!Promise<{
        errorCode: !number,
   *  }>}
   */

  verifyCertificateForTesting(
      certificate,
      hostname,
      ocspResponse,
      sctList) {
    return this.proxy.sendMessage(
        62,
        network.mojom.NetworkContext_VerifyCertificateForTesting_ParamsSpec.$,
        network.mojom.NetworkContext_VerifyCertificateForTesting_ResponseParamsSpec.$,
        [
          certificate,
          hostname,
          ocspResponse,
          sctList
        ]);
  }

  
  /**
   * @param { !url.mojom.Origin } origin
   * @param { !url.mojom.Url } uploadUrl
   * @return {!Promise}
   */

  addDomainReliabilityContextForTesting(
      origin,
      uploadUrl) {
    return this.proxy.sendMessage(
        63,
        network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_ParamsSpec.$,
        network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_ResponseParamsSpec.$,
        [
          origin,
          uploadUrl
        ]);
  }

  
  /**
   * @return {!Promise}
   */

  forceDomainReliabilityUploadsForTesting() {
    return this.proxy.sendMessage(
        64,
        network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_ParamsSpec.$,
        network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   */

  setCTLogListAlwaysTimelyForTesting() {
    this.proxy.sendMessage(
        65,
        network.mojom.NetworkContext_SetCTLogListAlwaysTimelyForTesting_ParamsSpec.$,
        null,
        [
        ]);
  }

  
  /**
   * @param { !network.mojom.SCTAuditingMode } mode
   */

  setSCTAuditingMode(
      mode) {
    this.proxy.sendMessage(
        66,
        network.mojom.NetworkContext_SetSCTAuditingMode_ParamsSpec.$,
        null,
        [
          mode
        ]);
  }

  
  /**
   * @param { !network.mojom.ReportingApiObserverRemote } observer
   */

  addReportingApiObserver(
      observer) {
    this.proxy.sendMessage(
        67,
        network.mojom.NetworkContext_AddReportingApiObserver_ParamsSpec.$,
        null,
        [
          observer
        ]);
  }
};

/**
 * An object which receives request messages for the NetworkContext
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
network.mojom.NetworkContextReceiver = class {
  /**
   * @param {!network.mojom.NetworkContextInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!network.mojom.NetworkContextRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        network.mojom.NetworkContextRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.NetworkContextRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        network.mojom.NetworkContext_SetClient_ParamsSpec.$,
        null,
        impl.setClient.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        network.mojom.NetworkContext_CreateURLLoaderFactory_ParamsSpec.$,
        null,
        impl.createURLLoaderFactory.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        network.mojom.NetworkContext_ResetURLLoaderFactories_ParamsSpec.$,
        null,
        impl.resetURLLoaderFactories.bind(impl));
    this.helper_internal_.registerHandler(
        3,
        network.mojom.NetworkContext_GetCookieManager_ParamsSpec.$,
        null,
        impl.getCookieManager.bind(impl));
    this.helper_internal_.registerHandler(
        4,
        network.mojom.NetworkContext_GetRestrictedCookieManager_ParamsSpec.$,
        null,
        impl.getRestrictedCookieManager.bind(impl));
    this.helper_internal_.registerHandler(
        5,
        network.mojom.NetworkContext_GetTrustTokenQueryAnswerer_ParamsSpec.$,
        null,
        impl.getTrustTokenQueryAnswerer.bind(impl));
    this.helper_internal_.registerHandler(
        6,
        network.mojom.NetworkContext_ClearTrustTokenData_ParamsSpec.$,
        network.mojom.NetworkContext_ClearTrustTokenData_ResponseParamsSpec.$,
        impl.clearTrustTokenData.bind(impl));
    this.helper_internal_.registerHandler(
        7,
        network.mojom.NetworkContext_GetStoredTrustTokenCounts_ParamsSpec.$,
        network.mojom.NetworkContext_GetStoredTrustTokenCounts_ResponseParamsSpec.$,
        impl.getStoredTrustTokenCounts.bind(impl));
    this.helper_internal_.registerHandler(
        8,
        network.mojom.NetworkContext_DeleteStoredTrustTokens_ParamsSpec.$,
        network.mojom.NetworkContext_DeleteStoredTrustTokens_ResponseParamsSpec.$,
        impl.deleteStoredTrustTokens.bind(impl));
    this.helper_internal_.registerHandler(
        9,
        network.mojom.NetworkContext_SetBlockTrustTokens_ParamsSpec.$,
        null,
        impl.setBlockTrustTokens.bind(impl));
    this.helper_internal_.registerHandler(
        10,
        network.mojom.NetworkContext_ClearNetworkingHistoryBetween_ParamsSpec.$,
        network.mojom.NetworkContext_ClearNetworkingHistoryBetween_ResponseParamsSpec.$,
        impl.clearNetworkingHistoryBetween.bind(impl));
    this.helper_internal_.registerHandler(
        11,
        network.mojom.NetworkContext_ClearHttpCache_ParamsSpec.$,
        network.mojom.NetworkContext_ClearHttpCache_ResponseParamsSpec.$,
        impl.clearHttpCache.bind(impl));
    this.helper_internal_.registerHandler(
        12,
        network.mojom.NetworkContext_ComputeHttpCacheSize_ParamsSpec.$,
        network.mojom.NetworkContext_ComputeHttpCacheSize_ResponseParamsSpec.$,
        impl.computeHttpCacheSize.bind(impl));
    this.helper_internal_.registerHandler(
        13,
        network.mojom.NetworkContext_NotifyExternalCacheHit_ParamsSpec.$,
        null,
        impl.notifyExternalCacheHit.bind(impl));
    this.helper_internal_.registerHandler(
        14,
        network.mojom.NetworkContext_ClearHostCache_ParamsSpec.$,
        network.mojom.NetworkContext_ClearHostCache_ResponseParamsSpec.$,
        impl.clearHostCache.bind(impl));
    this.helper_internal_.registerHandler(
        15,
        network.mojom.NetworkContext_ClearHttpAuthCache_ParamsSpec.$,
        network.mojom.NetworkContext_ClearHttpAuthCache_ResponseParamsSpec.$,
        impl.clearHttpAuthCache.bind(impl));
    this.helper_internal_.registerHandler(
        16,
        network.mojom.NetworkContext_ClearReportingCacheReports_ParamsSpec.$,
        network.mojom.NetworkContext_ClearReportingCacheReports_ResponseParamsSpec.$,
        impl.clearReportingCacheReports.bind(impl));
    this.helper_internal_.registerHandler(
        17,
        network.mojom.NetworkContext_ClearReportingCacheClients_ParamsSpec.$,
        network.mojom.NetworkContext_ClearReportingCacheClients_ResponseParamsSpec.$,
        impl.clearReportingCacheClients.bind(impl));
    this.helper_internal_.registerHandler(
        18,
        network.mojom.NetworkContext_ClearNetworkErrorLogging_ParamsSpec.$,
        network.mojom.NetworkContext_ClearNetworkErrorLogging_ResponseParamsSpec.$,
        impl.clearNetworkErrorLogging.bind(impl));
    this.helper_internal_.registerHandler(
        19,
        network.mojom.NetworkContext_ClearDomainReliability_ParamsSpec.$,
        network.mojom.NetworkContext_ClearDomainReliability_ResponseParamsSpec.$,
        impl.clearDomainReliability.bind(impl));
    this.helper_internal_.registerHandler(
        20,
        network.mojom.NetworkContext_SetDocumentReportingEndpoints_ParamsSpec.$,
        null,
        impl.setDocumentReportingEndpoints.bind(impl));
    this.helper_internal_.registerHandler(
        21,
        network.mojom.NetworkContext_SendReportsAndRemoveSource_ParamsSpec.$,
        null,
        impl.sendReportsAndRemoveSource.bind(impl));
    this.helper_internal_.registerHandler(
        22,
        network.mojom.NetworkContext_QueueReport_ParamsSpec.$,
        null,
        impl.queueReport.bind(impl));
    this.helper_internal_.registerHandler(
        23,
        network.mojom.NetworkContext_QueueSignedExchangeReport_ParamsSpec.$,
        null,
        impl.queueSignedExchangeReport.bind(impl));
    this.helper_internal_.registerHandler(
        24,
        network.mojom.NetworkContext_CloseAllConnections_ParamsSpec.$,
        network.mojom.NetworkContext_CloseAllConnections_ResponseParamsSpec.$,
        impl.closeAllConnections.bind(impl));
    this.helper_internal_.registerHandler(
        25,
        network.mojom.NetworkContext_CloseIdleConnections_ParamsSpec.$,
        network.mojom.NetworkContext_CloseIdleConnections_ResponseParamsSpec.$,
        impl.closeIdleConnections.bind(impl));
    this.helper_internal_.registerHandler(
        26,
        network.mojom.NetworkContext_SetNetworkConditions_ParamsSpec.$,
        null,
        impl.setNetworkConditions.bind(impl));
    this.helper_internal_.registerHandler(
        27,
        network.mojom.NetworkContext_SetAcceptLanguage_ParamsSpec.$,
        null,
        impl.setAcceptLanguage.bind(impl));
    this.helper_internal_.registerHandler(
        28,
        network.mojom.NetworkContext_SetEnableReferrers_ParamsSpec.$,
        null,
        impl.setEnableReferrers.bind(impl));
    this.helper_internal_.registerHandler(
        29,
        network.mojom.NetworkContext_SetCTPolicy_ParamsSpec.$,
        null,
        impl.setCTPolicy.bind(impl));
    this.helper_internal_.registerHandler(
        30,
        network.mojom.NetworkContext_AddExpectCT_ParamsSpec.$,
        network.mojom.NetworkContext_AddExpectCT_ResponseParamsSpec.$,
        impl.addExpectCT.bind(impl));
    this.helper_internal_.registerHandler(
        31,
        network.mojom.NetworkContext_SetExpectCTTestReport_ParamsSpec.$,
        network.mojom.NetworkContext_SetExpectCTTestReport_ResponseParamsSpec.$,
        impl.setExpectCTTestReport.bind(impl));
    this.helper_internal_.registerHandler(
        32,
        network.mojom.NetworkContext_GetExpectCTState_ParamsSpec.$,
        network.mojom.NetworkContext_GetExpectCTState_ResponseParamsSpec.$,
        impl.getExpectCTState.bind(impl));
    this.helper_internal_.registerHandler(
        33,
        network.mojom.NetworkContext_CreateUDPSocket_ParamsSpec.$,
        null,
        impl.createUDPSocket.bind(impl));
    this.helper_internal_.registerHandler(
        34,
        network.mojom.NetworkContext_CreateTCPServerSocket_ParamsSpec.$,
        network.mojom.NetworkContext_CreateTCPServerSocket_ResponseParamsSpec.$,
        impl.createTCPServerSocket.bind(impl));
    this.helper_internal_.registerHandler(
        35,
        network.mojom.NetworkContext_CreateTCPConnectedSocket_ParamsSpec.$,
        network.mojom.NetworkContext_CreateTCPConnectedSocket_ResponseParamsSpec.$,
        impl.createTCPConnectedSocket.bind(impl));
    this.helper_internal_.registerHandler(
        36,
        network.mojom.NetworkContext_CreateTCPBoundSocket_ParamsSpec.$,
        network.mojom.NetworkContext_CreateTCPBoundSocket_ResponseParamsSpec.$,
        impl.createTCPBoundSocket.bind(impl));
    this.helper_internal_.registerHandler(
        37,
        network.mojom.NetworkContext_CreateProxyResolvingSocketFactory_ParamsSpec.$,
        null,
        impl.createProxyResolvingSocketFactory.bind(impl));
    this.helper_internal_.registerHandler(
        38,
        network.mojom.NetworkContext_LookUpProxyForURL_ParamsSpec.$,
        null,
        impl.lookUpProxyForURL.bind(impl));
    this.helper_internal_.registerHandler(
        39,
        network.mojom.NetworkContext_ForceReloadProxyConfig_ParamsSpec.$,
        network.mojom.NetworkContext_ForceReloadProxyConfig_ResponseParamsSpec.$,
        impl.forceReloadProxyConfig.bind(impl));
    this.helper_internal_.registerHandler(
        40,
        network.mojom.NetworkContext_ClearBadProxiesCache_ParamsSpec.$,
        network.mojom.NetworkContext_ClearBadProxiesCache_ResponseParamsSpec.$,
        impl.clearBadProxiesCache.bind(impl));
    this.helper_internal_.registerHandler(
        41,
        network.mojom.NetworkContext_CreateWebSocket_ParamsSpec.$,
        null,
        impl.createWebSocket.bind(impl));
    this.helper_internal_.registerHandler(
        42,
        network.mojom.NetworkContext_CreateWebTransport_ParamsSpec.$,
        null,
        impl.createWebTransport.bind(impl));
    this.helper_internal_.registerHandler(
        43,
        network.mojom.NetworkContext_CreateNetLogExporter_ParamsSpec.$,
        null,
        impl.createNetLogExporter.bind(impl));
    this.helper_internal_.registerHandler(
        44,
        network.mojom.NetworkContext_PreconnectSockets_ParamsSpec.$,
        null,
        impl.preconnectSockets.bind(impl));
    this.helper_internal_.registerHandler(
        45,
        network.mojom.NetworkContext_CreateP2PSocketManager_ParamsSpec.$,
        null,
        impl.createP2PSocketManager.bind(impl));
    this.helper_internal_.registerHandler(
        46,
        network.mojom.NetworkContext_CreateMdnsResponder_ParamsSpec.$,
        null,
        impl.createMdnsResponder.bind(impl));
    this.helper_internal_.registerHandler(
        47,
        network.mojom.NetworkContext_ResolveHost_ParamsSpec.$,
        null,
        impl.resolveHost.bind(impl));
    this.helper_internal_.registerHandler(
        48,
        network.mojom.NetworkContext_CreateHostResolver_ParamsSpec.$,
        null,
        impl.createHostResolver.bind(impl));
    this.helper_internal_.registerHandler(
        49,
        network.mojom.NetworkContext_VerifyCertForSignedExchange_ParamsSpec.$,
        network.mojom.NetworkContext_VerifyCertForSignedExchange_ResponseParamsSpec.$,
        impl.verifyCertForSignedExchange.bind(impl));
    this.helper_internal_.registerHandler(
        50,
        network.mojom.NetworkContext_AddHSTS_ParamsSpec.$,
        network.mojom.NetworkContext_AddHSTS_ResponseParamsSpec.$,
        impl.addHSTS.bind(impl));
    this.helper_internal_.registerHandler(
        51,
        network.mojom.NetworkContext_IsHSTSActiveForHost_ParamsSpec.$,
        network.mojom.NetworkContext_IsHSTSActiveForHost_ResponseParamsSpec.$,
        impl.isHSTSActiveForHost.bind(impl));
    this.helper_internal_.registerHandler(
        52,
        network.mojom.NetworkContext_GetHSTSState_ParamsSpec.$,
        network.mojom.NetworkContext_GetHSTSState_ResponseParamsSpec.$,
        impl.getHSTSState.bind(impl));
    this.helper_internal_.registerHandler(
        53,
        network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_ParamsSpec.$,
        network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_ResponseParamsSpec.$,
        impl.setCorsOriginAccessListsForOrigin.bind(impl));
    this.helper_internal_.registerHandler(
        54,
        network.mojom.NetworkContext_DeleteDynamicDataForHost_ParamsSpec.$,
        network.mojom.NetworkContext_DeleteDynamicDataForHost_ResponseParamsSpec.$,
        impl.deleteDynamicDataForHost.bind(impl));
    this.helper_internal_.registerHandler(
        55,
        network.mojom.NetworkContext_SetSplitAuthCacheByNetworkIsolationKey_ParamsSpec.$,
        null,
        impl.setSplitAuthCacheByNetworkIsolationKey.bind(impl));
    this.helper_internal_.registerHandler(
        56,
        network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_ParamsSpec.$,
        network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_ResponseParamsSpec.$,
        impl.saveHttpAuthCacheProxyEntries.bind(impl));
    this.helper_internal_.registerHandler(
        57,
        network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_ParamsSpec.$,
        network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_ResponseParamsSpec.$,
        impl.loadHttpAuthCacheProxyEntries.bind(impl));
    this.helper_internal_.registerHandler(
        58,
        network.mojom.NetworkContext_AddAuthCacheEntry_ParamsSpec.$,
        network.mojom.NetworkContext_AddAuthCacheEntry_ResponseParamsSpec.$,
        impl.addAuthCacheEntry.bind(impl));
    this.helper_internal_.registerHandler(
        59,
        network.mojom.NetworkContext_SetCorsNonWildcardRequestHeadersSupport_ParamsSpec.$,
        null,
        impl.setCorsNonWildcardRequestHeadersSupport.bind(impl));
    this.helper_internal_.registerHandler(
        60,
        network.mojom.NetworkContext_LookupServerBasicAuthCredentials_ParamsSpec.$,
        network.mojom.NetworkContext_LookupServerBasicAuthCredentials_ResponseParamsSpec.$,
        impl.lookupServerBasicAuthCredentials.bind(impl));
    this.helper_internal_.registerHandler(
        61,
        network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_ParamsSpec.$,
        network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_ResponseParamsSpec.$,
        impl.enableStaticKeyPinningForTesting.bind(impl));
    this.helper_internal_.registerHandler(
        62,
        network.mojom.NetworkContext_VerifyCertificateForTesting_ParamsSpec.$,
        network.mojom.NetworkContext_VerifyCertificateForTesting_ResponseParamsSpec.$,
        impl.verifyCertificateForTesting.bind(impl));
    this.helper_internal_.registerHandler(
        63,
        network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_ParamsSpec.$,
        network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_ResponseParamsSpec.$,
        impl.addDomainReliabilityContextForTesting.bind(impl));
    this.helper_internal_.registerHandler(
        64,
        network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_ParamsSpec.$,
        network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_ResponseParamsSpec.$,
        impl.forceDomainReliabilityUploadsForTesting.bind(impl));
    this.helper_internal_.registerHandler(
        65,
        network.mojom.NetworkContext_SetCTLogListAlwaysTimelyForTesting_ParamsSpec.$,
        null,
        impl.setCTLogListAlwaysTimelyForTesting.bind(impl));
    this.helper_internal_.registerHandler(
        66,
        network.mojom.NetworkContext_SetSCTAuditingMode_ParamsSpec.$,
        null,
        impl.setSCTAuditingMode.bind(impl));
    this.helper_internal_.registerHandler(
        67,
        network.mojom.NetworkContext_AddReportingApiObserver_ParamsSpec.$,
        null,
        impl.addReportingApiObserver.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
network.mojom.NetworkContext = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "network.mojom.NetworkContext";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!network.mojom.NetworkContextRemote}
   * @export
   */
  static getRemote() {
    let remote = new network.mojom.NetworkContextRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};

goog.provide('network.mojom.NetworkContext_DomainReliabilityClearMode');
goog.provide('network.mojom.NetworkContext.DomainReliabilityClearModeSpec');
/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
network.mojom.NetworkContext.DomainReliabilityClearModeSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
network.mojom.NetworkContext_DomainReliabilityClearMode = {
  
  CLEAR_CONTEXTS: 0,
  CLEAR_BEACONS: 1,
  MIN_VALUE: 0,
  MAX_VALUE: 1,
};

/**
 * An object which receives request messages for the NetworkContext
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
network.mojom.NetworkContextCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      network.mojom.NetworkContextRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.NetworkContextRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setClient =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        network.mojom.NetworkContext_SetClient_ParamsSpec.$,
        null,
        this.setClient.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createURLLoaderFactory =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        network.mojom.NetworkContext_CreateURLLoaderFactory_ParamsSpec.$,
        null,
        this.createURLLoaderFactory.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.resetURLLoaderFactories =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        network.mojom.NetworkContext_ResetURLLoaderFactories_ParamsSpec.$,
        null,
        this.resetURLLoaderFactories.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getCookieManager =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        3,
        network.mojom.NetworkContext_GetCookieManager_ParamsSpec.$,
        null,
        this.getCookieManager.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getRestrictedCookieManager =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        4,
        network.mojom.NetworkContext_GetRestrictedCookieManager_ParamsSpec.$,
        null,
        this.getRestrictedCookieManager.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getTrustTokenQueryAnswerer =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        5,
        network.mojom.NetworkContext_GetTrustTokenQueryAnswerer_ParamsSpec.$,
        null,
        this.getTrustTokenQueryAnswerer.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearTrustTokenData =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        6,
        network.mojom.NetworkContext_ClearTrustTokenData_ParamsSpec.$,
        network.mojom.NetworkContext_ClearTrustTokenData_ResponseParamsSpec.$,
        this.clearTrustTokenData.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getStoredTrustTokenCounts =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        7,
        network.mojom.NetworkContext_GetStoredTrustTokenCounts_ParamsSpec.$,
        network.mojom.NetworkContext_GetStoredTrustTokenCounts_ResponseParamsSpec.$,
        this.getStoredTrustTokenCounts.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.deleteStoredTrustTokens =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        8,
        network.mojom.NetworkContext_DeleteStoredTrustTokens_ParamsSpec.$,
        network.mojom.NetworkContext_DeleteStoredTrustTokens_ResponseParamsSpec.$,
        this.deleteStoredTrustTokens.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setBlockTrustTokens =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        9,
        network.mojom.NetworkContext_SetBlockTrustTokens_ParamsSpec.$,
        null,
        this.setBlockTrustTokens.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearNetworkingHistoryBetween =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        10,
        network.mojom.NetworkContext_ClearNetworkingHistoryBetween_ParamsSpec.$,
        network.mojom.NetworkContext_ClearNetworkingHistoryBetween_ResponseParamsSpec.$,
        this.clearNetworkingHistoryBetween.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearHttpCache =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        11,
        network.mojom.NetworkContext_ClearHttpCache_ParamsSpec.$,
        network.mojom.NetworkContext_ClearHttpCache_ResponseParamsSpec.$,
        this.clearHttpCache.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.computeHttpCacheSize =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        12,
        network.mojom.NetworkContext_ComputeHttpCacheSize_ParamsSpec.$,
        network.mojom.NetworkContext_ComputeHttpCacheSize_ResponseParamsSpec.$,
        this.computeHttpCacheSize.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.notifyExternalCacheHit =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        13,
        network.mojom.NetworkContext_NotifyExternalCacheHit_ParamsSpec.$,
        null,
        this.notifyExternalCacheHit.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearHostCache =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        14,
        network.mojom.NetworkContext_ClearHostCache_ParamsSpec.$,
        network.mojom.NetworkContext_ClearHostCache_ResponseParamsSpec.$,
        this.clearHostCache.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearHttpAuthCache =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        15,
        network.mojom.NetworkContext_ClearHttpAuthCache_ParamsSpec.$,
        network.mojom.NetworkContext_ClearHttpAuthCache_ResponseParamsSpec.$,
        this.clearHttpAuthCache.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearReportingCacheReports =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        16,
        network.mojom.NetworkContext_ClearReportingCacheReports_ParamsSpec.$,
        network.mojom.NetworkContext_ClearReportingCacheReports_ResponseParamsSpec.$,
        this.clearReportingCacheReports.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearReportingCacheClients =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        17,
        network.mojom.NetworkContext_ClearReportingCacheClients_ParamsSpec.$,
        network.mojom.NetworkContext_ClearReportingCacheClients_ResponseParamsSpec.$,
        this.clearReportingCacheClients.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearNetworkErrorLogging =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        18,
        network.mojom.NetworkContext_ClearNetworkErrorLogging_ParamsSpec.$,
        network.mojom.NetworkContext_ClearNetworkErrorLogging_ResponseParamsSpec.$,
        this.clearNetworkErrorLogging.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearDomainReliability =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        19,
        network.mojom.NetworkContext_ClearDomainReliability_ParamsSpec.$,
        network.mojom.NetworkContext_ClearDomainReliability_ResponseParamsSpec.$,
        this.clearDomainReliability.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setDocumentReportingEndpoints =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        20,
        network.mojom.NetworkContext_SetDocumentReportingEndpoints_ParamsSpec.$,
        null,
        this.setDocumentReportingEndpoints.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.sendReportsAndRemoveSource =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        21,
        network.mojom.NetworkContext_SendReportsAndRemoveSource_ParamsSpec.$,
        null,
        this.sendReportsAndRemoveSource.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.queueReport =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        22,
        network.mojom.NetworkContext_QueueReport_ParamsSpec.$,
        null,
        this.queueReport.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.queueSignedExchangeReport =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        23,
        network.mojom.NetworkContext_QueueSignedExchangeReport_ParamsSpec.$,
        null,
        this.queueSignedExchangeReport.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.closeAllConnections =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        24,
        network.mojom.NetworkContext_CloseAllConnections_ParamsSpec.$,
        network.mojom.NetworkContext_CloseAllConnections_ResponseParamsSpec.$,
        this.closeAllConnections.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.closeIdleConnections =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        25,
        network.mojom.NetworkContext_CloseIdleConnections_ParamsSpec.$,
        network.mojom.NetworkContext_CloseIdleConnections_ResponseParamsSpec.$,
        this.closeIdleConnections.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setNetworkConditions =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        26,
        network.mojom.NetworkContext_SetNetworkConditions_ParamsSpec.$,
        null,
        this.setNetworkConditions.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setAcceptLanguage =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        27,
        network.mojom.NetworkContext_SetAcceptLanguage_ParamsSpec.$,
        null,
        this.setAcceptLanguage.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setEnableReferrers =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        28,
        network.mojom.NetworkContext_SetEnableReferrers_ParamsSpec.$,
        null,
        this.setEnableReferrers.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setCTPolicy =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        29,
        network.mojom.NetworkContext_SetCTPolicy_ParamsSpec.$,
        null,
        this.setCTPolicy.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.addExpectCT =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        30,
        network.mojom.NetworkContext_AddExpectCT_ParamsSpec.$,
        network.mojom.NetworkContext_AddExpectCT_ResponseParamsSpec.$,
        this.addExpectCT.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setExpectCTTestReport =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        31,
        network.mojom.NetworkContext_SetExpectCTTestReport_ParamsSpec.$,
        network.mojom.NetworkContext_SetExpectCTTestReport_ResponseParamsSpec.$,
        this.setExpectCTTestReport.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getExpectCTState =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        32,
        network.mojom.NetworkContext_GetExpectCTState_ParamsSpec.$,
        network.mojom.NetworkContext_GetExpectCTState_ResponseParamsSpec.$,
        this.getExpectCTState.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createUDPSocket =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        33,
        network.mojom.NetworkContext_CreateUDPSocket_ParamsSpec.$,
        null,
        this.createUDPSocket.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createTCPServerSocket =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        34,
        network.mojom.NetworkContext_CreateTCPServerSocket_ParamsSpec.$,
        network.mojom.NetworkContext_CreateTCPServerSocket_ResponseParamsSpec.$,
        this.createTCPServerSocket.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createTCPConnectedSocket =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        35,
        network.mojom.NetworkContext_CreateTCPConnectedSocket_ParamsSpec.$,
        network.mojom.NetworkContext_CreateTCPConnectedSocket_ResponseParamsSpec.$,
        this.createTCPConnectedSocket.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createTCPBoundSocket =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        36,
        network.mojom.NetworkContext_CreateTCPBoundSocket_ParamsSpec.$,
        network.mojom.NetworkContext_CreateTCPBoundSocket_ResponseParamsSpec.$,
        this.createTCPBoundSocket.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createProxyResolvingSocketFactory =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        37,
        network.mojom.NetworkContext_CreateProxyResolvingSocketFactory_ParamsSpec.$,
        null,
        this.createProxyResolvingSocketFactory.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.lookUpProxyForURL =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        38,
        network.mojom.NetworkContext_LookUpProxyForURL_ParamsSpec.$,
        null,
        this.lookUpProxyForURL.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.forceReloadProxyConfig =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        39,
        network.mojom.NetworkContext_ForceReloadProxyConfig_ParamsSpec.$,
        network.mojom.NetworkContext_ForceReloadProxyConfig_ResponseParamsSpec.$,
        this.forceReloadProxyConfig.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearBadProxiesCache =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        40,
        network.mojom.NetworkContext_ClearBadProxiesCache_ParamsSpec.$,
        network.mojom.NetworkContext_ClearBadProxiesCache_ResponseParamsSpec.$,
        this.clearBadProxiesCache.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createWebSocket =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        41,
        network.mojom.NetworkContext_CreateWebSocket_ParamsSpec.$,
        null,
        this.createWebSocket.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createWebTransport =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        42,
        network.mojom.NetworkContext_CreateWebTransport_ParamsSpec.$,
        null,
        this.createWebTransport.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createNetLogExporter =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        43,
        network.mojom.NetworkContext_CreateNetLogExporter_ParamsSpec.$,
        null,
        this.createNetLogExporter.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.preconnectSockets =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        44,
        network.mojom.NetworkContext_PreconnectSockets_ParamsSpec.$,
        null,
        this.preconnectSockets.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createP2PSocketManager =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        45,
        network.mojom.NetworkContext_CreateP2PSocketManager_ParamsSpec.$,
        null,
        this.createP2PSocketManager.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createMdnsResponder =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        46,
        network.mojom.NetworkContext_CreateMdnsResponder_ParamsSpec.$,
        null,
        this.createMdnsResponder.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.resolveHost =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        47,
        network.mojom.NetworkContext_ResolveHost_ParamsSpec.$,
        null,
        this.resolveHost.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createHostResolver =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        48,
        network.mojom.NetworkContext_CreateHostResolver_ParamsSpec.$,
        null,
        this.createHostResolver.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.verifyCertForSignedExchange =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        49,
        network.mojom.NetworkContext_VerifyCertForSignedExchange_ParamsSpec.$,
        network.mojom.NetworkContext_VerifyCertForSignedExchange_ResponseParamsSpec.$,
        this.verifyCertForSignedExchange.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.addHSTS =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        50,
        network.mojom.NetworkContext_AddHSTS_ParamsSpec.$,
        network.mojom.NetworkContext_AddHSTS_ResponseParamsSpec.$,
        this.addHSTS.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.isHSTSActiveForHost =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        51,
        network.mojom.NetworkContext_IsHSTSActiveForHost_ParamsSpec.$,
        network.mojom.NetworkContext_IsHSTSActiveForHost_ResponseParamsSpec.$,
        this.isHSTSActiveForHost.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getHSTSState =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        52,
        network.mojom.NetworkContext_GetHSTSState_ParamsSpec.$,
        network.mojom.NetworkContext_GetHSTSState_ResponseParamsSpec.$,
        this.getHSTSState.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setCorsOriginAccessListsForOrigin =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        53,
        network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_ParamsSpec.$,
        network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_ResponseParamsSpec.$,
        this.setCorsOriginAccessListsForOrigin.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.deleteDynamicDataForHost =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        54,
        network.mojom.NetworkContext_DeleteDynamicDataForHost_ParamsSpec.$,
        network.mojom.NetworkContext_DeleteDynamicDataForHost_ResponseParamsSpec.$,
        this.deleteDynamicDataForHost.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setSplitAuthCacheByNetworkIsolationKey =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        55,
        network.mojom.NetworkContext_SetSplitAuthCacheByNetworkIsolationKey_ParamsSpec.$,
        null,
        this.setSplitAuthCacheByNetworkIsolationKey.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.saveHttpAuthCacheProxyEntries =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        56,
        network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_ParamsSpec.$,
        network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_ResponseParamsSpec.$,
        this.saveHttpAuthCacheProxyEntries.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.loadHttpAuthCacheProxyEntries =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        57,
        network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_ParamsSpec.$,
        network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_ResponseParamsSpec.$,
        this.loadHttpAuthCacheProxyEntries.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.addAuthCacheEntry =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        58,
        network.mojom.NetworkContext_AddAuthCacheEntry_ParamsSpec.$,
        network.mojom.NetworkContext_AddAuthCacheEntry_ResponseParamsSpec.$,
        this.addAuthCacheEntry.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setCorsNonWildcardRequestHeadersSupport =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        59,
        network.mojom.NetworkContext_SetCorsNonWildcardRequestHeadersSupport_ParamsSpec.$,
        null,
        this.setCorsNonWildcardRequestHeadersSupport.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.lookupServerBasicAuthCredentials =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        60,
        network.mojom.NetworkContext_LookupServerBasicAuthCredentials_ParamsSpec.$,
        network.mojom.NetworkContext_LookupServerBasicAuthCredentials_ResponseParamsSpec.$,
        this.lookupServerBasicAuthCredentials.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.enableStaticKeyPinningForTesting =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        61,
        network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_ParamsSpec.$,
        network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_ResponseParamsSpec.$,
        this.enableStaticKeyPinningForTesting.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.verifyCertificateForTesting =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        62,
        network.mojom.NetworkContext_VerifyCertificateForTesting_ParamsSpec.$,
        network.mojom.NetworkContext_VerifyCertificateForTesting_ResponseParamsSpec.$,
        this.verifyCertificateForTesting.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.addDomainReliabilityContextForTesting =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        63,
        network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_ParamsSpec.$,
        network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_ResponseParamsSpec.$,
        this.addDomainReliabilityContextForTesting.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.forceDomainReliabilityUploadsForTesting =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        64,
        network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_ParamsSpec.$,
        network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_ResponseParamsSpec.$,
        this.forceDomainReliabilityUploadsForTesting.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setCTLogListAlwaysTimelyForTesting =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        65,
        network.mojom.NetworkContext_SetCTLogListAlwaysTimelyForTesting_ParamsSpec.$,
        null,
        this.setCTLogListAlwaysTimelyForTesting.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setSCTAuditingMode =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        66,
        network.mojom.NetworkContext_SetSCTAuditingMode_ParamsSpec.$,
        null,
        this.setSCTAuditingMode.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.addReportingApiObserver =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        67,
        network.mojom.NetworkContext_AddReportingApiObserver_ParamsSpec.$,
        null,
        this.addReportingApiObserver.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('network.mojom.CustomProxyConfigSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.CustomProxyConfigSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.CertVerifierServiceRemoteParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.CertVerifierServiceRemoteParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.HttpAuthStaticNetworkContextParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.HttpAuthStaticNetworkContextParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.CTPolicySpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.CTPolicySpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContextFilePathsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextFilePathsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContextParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkConditionsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkConditionsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.ClearDataFilterSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.ClearDataFilterSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.SignedExchangeReportSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.SignedExchangeReportSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.URLLoaderFactoryOverrideSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.URLLoaderFactoryOverrideSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.URLLoaderFactoryParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.URLLoaderFactoryParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.CustomProxyConnectionObserver_OnFallback_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.CustomProxyConnectionObserver_OnFallback_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.CustomProxyConnectionObserver_OnTunnelHeadersReceived_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.CustomProxyConnectionObserver_OnTunnelHeadersReceived_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.CustomProxyConfigClient_OnCustomProxyConfigUpdated_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.CustomProxyConfigClient_OnCustomProxyConfigUpdated_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.CustomProxyConfigClient_OnCustomProxyConfigUpdated_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.CustomProxyConfigClient_OnCustomProxyConfigUpdated_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.CustomProxyConfigClient_ClearBadProxiesCache_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.CustomProxyConfigClient_ClearBadProxiesCache_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.TrustedHeaderClient_OnHeadersReceived_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.TrustedHeaderClient_OnHeadersReceived_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.TrustedHeaderClient_OnHeadersReceived_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.TrustedHeaderClient_OnHeadersReceived_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.TrustedURLLoaderHeaderClient_OnLoaderCreated_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.TrustedURLLoaderHeaderClient_OnLoaderCreated_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.TrustedURLLoaderHeaderClient_OnLoaderForCorsPreflightCreated_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.TrustedURLLoaderHeaderClient_OnLoaderForCorsPreflightCreated_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContextClient_OnFileUploadRequested_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextClient_OnFileUploadRequested_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContextClient_OnFileUploadRequested_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextClient_OnFileUploadRequested_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContextClient_OnCanSendReportingReports_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextClient_OnCanSendReportingReports_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContextClient_OnCanSendReportingReports_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextClient_OnCanSendReportingReports_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContextClient_OnCanSendSCTAuditingReport_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextClient_OnCanSendSCTAuditingReport_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContextClient_OnCanSendSCTAuditingReport_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextClient_OnCanSendSCTAuditingReport_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContextClient_OnNewSCTAuditingReportSent_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextClient_OnNewSCTAuditingReportSent_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_SetClient_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SetClient_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_CreateURLLoaderFactory_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateURLLoaderFactory_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ResetURLLoaderFactories_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ResetURLLoaderFactories_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_GetCookieManager_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_GetCookieManager_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_GetRestrictedCookieManager_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_GetRestrictedCookieManager_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_GetTrustTokenQueryAnswerer_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_GetTrustTokenQueryAnswerer_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ClearTrustTokenData_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearTrustTokenData_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ClearTrustTokenData_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearTrustTokenData_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_GetStoredTrustTokenCounts_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_GetStoredTrustTokenCounts_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_GetStoredTrustTokenCounts_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_GetStoredTrustTokenCounts_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_DeleteStoredTrustTokens_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_DeleteStoredTrustTokens_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_DeleteStoredTrustTokens_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_DeleteStoredTrustTokens_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_SetBlockTrustTokens_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SetBlockTrustTokens_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ClearNetworkingHistoryBetween_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearNetworkingHistoryBetween_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ClearNetworkingHistoryBetween_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearNetworkingHistoryBetween_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ClearHttpCache_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearHttpCache_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ClearHttpCache_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearHttpCache_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ComputeHttpCacheSize_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ComputeHttpCacheSize_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ComputeHttpCacheSize_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ComputeHttpCacheSize_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_NotifyExternalCacheHit_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_NotifyExternalCacheHit_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ClearHostCache_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearHostCache_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ClearHostCache_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearHostCache_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ClearHttpAuthCache_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearHttpAuthCache_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ClearHttpAuthCache_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearHttpAuthCache_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ClearReportingCacheReports_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearReportingCacheReports_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ClearReportingCacheReports_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearReportingCacheReports_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ClearReportingCacheClients_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearReportingCacheClients_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ClearReportingCacheClients_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearReportingCacheClients_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ClearNetworkErrorLogging_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearNetworkErrorLogging_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ClearNetworkErrorLogging_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearNetworkErrorLogging_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ClearDomainReliability_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearDomainReliability_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ClearDomainReliability_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearDomainReliability_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_SetDocumentReportingEndpoints_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SetDocumentReportingEndpoints_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_SendReportsAndRemoveSource_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SendReportsAndRemoveSource_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_QueueReport_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_QueueReport_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_QueueSignedExchangeReport_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_QueueSignedExchangeReport_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_CloseAllConnections_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CloseAllConnections_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_CloseAllConnections_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CloseAllConnections_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_CloseIdleConnections_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CloseIdleConnections_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_CloseIdleConnections_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CloseIdleConnections_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_SetNetworkConditions_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SetNetworkConditions_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_SetAcceptLanguage_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SetAcceptLanguage_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_SetEnableReferrers_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SetEnableReferrers_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_SetCTPolicy_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SetCTPolicy_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_AddExpectCT_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_AddExpectCT_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_AddExpectCT_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_AddExpectCT_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_SetExpectCTTestReport_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SetExpectCTTestReport_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_SetExpectCTTestReport_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SetExpectCTTestReport_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_GetExpectCTState_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_GetExpectCTState_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_GetExpectCTState_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_GetExpectCTState_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_CreateUDPSocket_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateUDPSocket_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_CreateTCPServerSocket_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateTCPServerSocket_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_CreateTCPServerSocket_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateTCPServerSocket_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_CreateTCPConnectedSocket_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateTCPConnectedSocket_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_CreateTCPConnectedSocket_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateTCPConnectedSocket_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_CreateTCPBoundSocket_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateTCPBoundSocket_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_CreateTCPBoundSocket_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateTCPBoundSocket_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_CreateProxyResolvingSocketFactory_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateProxyResolvingSocketFactory_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_LookUpProxyForURL_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_LookUpProxyForURL_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ForceReloadProxyConfig_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ForceReloadProxyConfig_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ForceReloadProxyConfig_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ForceReloadProxyConfig_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ClearBadProxiesCache_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearBadProxiesCache_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ClearBadProxiesCache_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearBadProxiesCache_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_CreateWebSocket_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateWebSocket_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_CreateWebTransport_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateWebTransport_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_CreateNetLogExporter_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateNetLogExporter_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_PreconnectSockets_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_PreconnectSockets_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_CreateP2PSocketManager_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateP2PSocketManager_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_CreateMdnsResponder_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateMdnsResponder_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ResolveHost_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ResolveHost_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_CreateHostResolver_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateHostResolver_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_VerifyCertForSignedExchange_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_VerifyCertForSignedExchange_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_VerifyCertForSignedExchange_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_VerifyCertForSignedExchange_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_AddHSTS_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_AddHSTS_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_AddHSTS_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_AddHSTS_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_IsHSTSActiveForHost_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_IsHSTSActiveForHost_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_IsHSTSActiveForHost_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_IsHSTSActiveForHost_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_GetHSTSState_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_GetHSTSState_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_GetHSTSState_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_GetHSTSState_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_DeleteDynamicDataForHost_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_DeleteDynamicDataForHost_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_DeleteDynamicDataForHost_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_DeleteDynamicDataForHost_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_SetSplitAuthCacheByNetworkIsolationKey_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SetSplitAuthCacheByNetworkIsolationKey_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_AddAuthCacheEntry_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_AddAuthCacheEntry_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_AddAuthCacheEntry_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_AddAuthCacheEntry_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_SetCorsNonWildcardRequestHeadersSupport_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SetCorsNonWildcardRequestHeadersSupport_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_LookupServerBasicAuthCredentials_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_LookupServerBasicAuthCredentials_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_LookupServerBasicAuthCredentials_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_LookupServerBasicAuthCredentials_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_VerifyCertificateForTesting_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_VerifyCertificateForTesting_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_VerifyCertificateForTesting_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_VerifyCertificateForTesting_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_SetCTLogListAlwaysTimelyForTesting_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SetCTLogListAlwaysTimelyForTesting_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_SetSCTAuditingMode_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SetSCTAuditingMode_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.NetworkContext_AddReportingApiObserver_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_AddReportingApiObserver_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    network.mojom.CustomProxyConfigSpec.$,
    'CustomProxyConfig',
    [
      mojo.internal.StructField(
        'rules', 0,
        0,
        network.mojom.ProxyRulesSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'shouldOverrideExistingConfig', 8,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'allowNonIdempotentMethods', 8,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'connectTunnelHeaders', 16,
        0,
        network.mojom.HttpRequestHeadersSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 32],]);



goog.provide('network.mojom.CustomProxyConfig');

/** @record */
network.mojom.CustomProxyConfig = class {
  constructor() {
    /** @export { !network.mojom.ProxyRules } */
    this.rules;
    /** @export { !boolean } */
    this.shouldOverrideExistingConfig;
    /** @export { !boolean } */
    this.allowNonIdempotentMethods;
    /** @export { !network.mojom.HttpRequestHeaders } */
    this.connectTunnelHeaders;
  }
};




mojo.internal.Struct(
    network.mojom.CertVerifierServiceRemoteParamsSpec.$,
    'CertVerifierServiceRemoteParams',
    [
      mojo.internal.StructField(
        'certVerifierService', 0,
        0,
        mojo.internal.InterfaceProxy(certVerifier.mojom.CertVerifierServiceRemote),
        null,
        true /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.CertVerifierServiceRemoteParams');

/** @record */
network.mojom.CertVerifierServiceRemoteParams = class {
  constructor() {
    /** @export { (certVerifier.mojom.CertVerifierServiceRemote|undefined) } */
    this.certVerifierService;
  }
};




mojo.internal.Struct(
    network.mojom.HttpAuthStaticNetworkContextParamsSpec.$,
    'HttpAuthStaticNetworkContextParams',
    [
      mojo.internal.StructField(
        'allowDefaultCredentials', 0,
        0,
        network.mojom.DefaultCredentialsSpec.$,
        network.mojom.DefaultCredentials.ALLOW_DEFAULT_CREDENTIALS,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.HttpAuthStaticNetworkContextParams');

/** @record */
network.mojom.HttpAuthStaticNetworkContextParams = class {
  constructor() {
    /** @export { !network.mojom.DefaultCredentials } */
    this.allowDefaultCredentials;
  }
};




mojo.internal.Struct(
    network.mojom.CTPolicySpec.$,
    'CTPolicy',
    [
      mojo.internal.StructField(
        'requiredHosts', 0,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'excludedHosts', 8,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'excludedSpkis', 16,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'excludedLegacySpkis', 24,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */),
    ],
    [[0, 40],]);



goog.provide('network.mojom.CTPolicy');

/** @record */
network.mojom.CTPolicy = class {
  constructor() {
    /** @export { !Array<!string> } */
    this.requiredHosts;
    /** @export { !Array<!string> } */
    this.excludedHosts;
    /** @export { !Array<!string> } */
    this.excludedSpkis;
    /** @export { !Array<!string> } */
    this.excludedLegacySpkis;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContextFilePathsSpec.$,
    'NetworkContextFilePaths',
    [
      mojo.internal.StructField(
        'dataDirectory', 0,
        0,
        network.mojom.TransferableDirectorySpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'unsandboxedDataPath', 16,
        0,
        mojoBase.mojom.FilePathSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'cookieDatabaseName', 24,
        0,
        mojoBase.mojom.FilePathSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'trustTokenDatabaseName', 32,
        0,
        mojoBase.mojom.FilePathSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'httpServerPropertiesFileName', 40,
        0,
        mojoBase.mojom.FilePathSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'transportSecurityPersisterFileName', 48,
        0,
        mojoBase.mojom.FilePathSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'reportingAndNelStoreDatabaseName', 56,
        0,
        mojoBase.mojom.FilePathSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'sctAuditingPendingReportsFileName', 64,
        0,
        mojoBase.mojom.FilePathSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'triggerMigration', 72,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 88],]);



goog.provide('network.mojom.NetworkContextFilePaths');

/** @record */
network.mojom.NetworkContextFilePaths = class {
  constructor() {
    /** @export { !network.mojom.TransferableDirectory } */
    this.dataDirectory;
    /** @export { (mojoBase.mojom.FilePath|undefined) } */
    this.unsandboxedDataPath;
    /** @export { (mojoBase.mojom.FilePath|undefined) } */
    this.cookieDatabaseName;
    /** @export { (mojoBase.mojom.FilePath|undefined) } */
    this.trustTokenDatabaseName;
    /** @export { (mojoBase.mojom.FilePath|undefined) } */
    this.httpServerPropertiesFileName;
    /** @export { (mojoBase.mojom.FilePath|undefined) } */
    this.transportSecurityPersisterFileName;
    /** @export { (mojoBase.mojom.FilePath|undefined) } */
    this.reportingAndNelStoreDatabaseName;
    /** @export { (mojoBase.mojom.FilePath|undefined) } */
    this.sctAuditingPendingReportsFileName;
    /** @export { !boolean } */
    this.triggerMigration;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContextParamsSpec.$,
    'NetworkContextParams',
    [
      mojo.internal.StructField(
        'userAgent', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'acceptLanguage', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'enableBrotli', 16,
        0,
        mojo.internal.Bool,
        true,
        false /* nullable */),
      mojo.internal.StructField(
        'quicUserAgentId', 24,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'enableReferrers', 16,
        1,
        mojo.internal.Bool,
        true,
        false /* nullable */),
      mojo.internal.StructField(
        'validateReferrerPolicyOnInitialRequest', 16,
        2,
        mojo.internal.Bool,
        true,
        false /* nullable */),
      mojo.internal.StructField(
        'proxyResolverFactory', 32,
        0,
        mojo.internal.InterfaceProxy(proxyResolver.mojom.ProxyResolverFactoryRemote),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'enableEncryptedCookies', 16,
        3,
        mojo.internal.Bool,
        true,
        false /* nullable */),
      mojo.internal.StructField(
        'restoreOldSessionCookies', 16,
        4,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'persistSessionCookies', 16,
        5,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'httpCacheEnabled', 16,
        6,
        mojo.internal.Bool,
        true,
        false /* nullable */),
      mojo.internal.StructField(
        'httpCacheMaxSize', 20,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'httpCacheDirectory', 40,
        0,
        network.mojom.TransferableDirectorySpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'httpCacheFileOperationsFactory', 56,
        0,
        mojo.internal.InterfaceProxy(network.mojom.HttpCacheBackendFileOperationsFactoryRemote),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'checkClearTextPermitted', 16,
        7,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'disableIdleSocketsCloseOnMemoryPressure', 17,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'initialSslConfig', 64,
        0,
        network.mojom.SSLConfigSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'sslConfigClientReceiver', 72,
        0,
        mojo.internal.InterfaceRequest(network.mojom.SSLConfigClientPendingReceiver),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'initialProxyConfig', 80,
        0,
        network.mojom.ProxyConfigWithAnnotationSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'proxyConfigClientReceiver', 76,
        0,
        mojo.internal.InterfaceRequest(network.mojom.ProxyConfigClientPendingReceiver),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'initialCustomProxyConfig', 88,
        0,
        network.mojom.CustomProxyConfigSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'customProxyConfigClientReceiver', 96,
        0,
        mojo.internal.InterfaceRequest(network.mojom.CustomProxyConfigClientPendingReceiver),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'customProxyConnectionObserverRemote', 100,
        0,
        mojo.internal.InterfaceProxy(network.mojom.CustomProxyConnectionObserverRemote),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'proxyConfigPollerClient', 108,
        0,
        mojo.internal.InterfaceProxy(network.mojom.ProxyConfigPollerClientRemote),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'proxyErrorClient', 116,
        0,
        mojo.internal.InterfaceProxy(network.mojom.ProxyErrorClientRemote),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'socketBroker', 124,
        0,
        mojo.internal.InterfaceProxy(network.mojom.SocketBrokerRemote),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'pacQuickCheckEnabled', 17,
        1,
        mojo.internal.Bool,
        true,
        false /* nullable */),
      mojo.internal.StructField(
        'enableCertificateReporting', 17,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'enforceChromeCtPolicy', 17,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'enableExpectCtReporting', 17,
        4,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'sctAuditingMode', 132,
        0,
        network.mojom.SCTAuditingModeSpec.$,
        network.mojom.SCTAuditingMode.kDisabled,
        false /* nullable */),
      mojo.internal.StructField(
        'ctPolicy', 136,
        0,
        network.mojom.CTPolicySpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'certVerifierParams', 144,
        0,
        network.mojom.CertVerifierServiceRemoteParamsSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'cookieManagerParams', 152,
        0,
        network.mojom.CookieManagerParamsSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'cookieManager', 160,
        0,
        mojo.internal.InterfaceRequest(network.mojom.CookieManagerPendingReceiver),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'enableDomainReliability', 17,
        5,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'domainReliabilityUploadReporter', 168,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'discardDomainReliablityUploads', 17,
        6,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'reportingDeliveryInterval', 176,
        0,
        mojoBase.mojom.TimeDeltaSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'skipReportingSendPermissionCheck', 17,
        7,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'corsOriginAccessList', 184,
        0,
        mojo.internal.Array(network.mojom.CorsOriginAccessPatternsSpec.$, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'corsExemptHeaderList', 192,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'allowAnyCorsExemptHeaderForBrowser', 18,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'hstsPolicyBypassList', 200,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'httpAuthStaticNetworkContextParams', 208,
        0,
        network.mojom.HttpAuthStaticNetworkContextParamsSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'resetHttpCacheBackend', 18,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'splitAuthCacheByNetworkIsolationKey', 18,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'requireNetworkIsolationKey', 18,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'filePaths', 216,
        0,
        network.mojom.NetworkContextFilePathsSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'blockTrustTokens', 18,
        4,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'firstPartySetsAccessDelegateParams', 224,
        0,
        network.mojom.FirstPartySetsAccessDelegateParamsSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'firstPartySetsAccessDelegateReceiver', 164,
        0,
        mojo.internal.InterfaceRequest(network.mojom.FirstPartySetsAccessDelegatePendingReceiver),
        null,
        true /* nullable */),
    ],
    [[0, 240],]);



goog.provide('network.mojom.NetworkContextParams');

/** @record */
network.mojom.NetworkContextParams = class {
  constructor() {
    /** @export { !string } */
    this.userAgent;
    /** @export { !string } */
    this.acceptLanguage;
    /** @export { !boolean } */
    this.enableBrotli;
    /** @export { !boolean } */
    this.enableReferrers;
    /** @export { !boolean } */
    this.validateReferrerPolicyOnInitialRequest;
    /** @export { !boolean } */
    this.enableEncryptedCookies;
    /** @export { !boolean } */
    this.restoreOldSessionCookies;
    /** @export { !boolean } */
    this.persistSessionCookies;
    /** @export { !boolean } */
    this.httpCacheEnabled;
    /** @export { !boolean } */
    this.checkClearTextPermitted;
    /** @export { !boolean } */
    this.disableIdleSocketsCloseOnMemoryPressure;
    /** @export { !boolean } */
    this.pacQuickCheckEnabled;
    /** @export { !boolean } */
    this.enableCertificateReporting;
    /** @export { !boolean } */
    this.enforceChromeCtPolicy;
    /** @export { !boolean } */
    this.enableExpectCtReporting;
    /** @export { !boolean } */
    this.enableDomainReliability;
    /** @export { !boolean } */
    this.discardDomainReliablityUploads;
    /** @export { !boolean } */
    this.skipReportingSendPermissionCheck;
    /** @export { !boolean } */
    this.allowAnyCorsExemptHeaderForBrowser;
    /** @export { !boolean } */
    this.resetHttpCacheBackend;
    /** @export { !boolean } */
    this.splitAuthCacheByNetworkIsolationKey;
    /** @export { !boolean } */
    this.requireNetworkIsolationKey;
    /** @export { !boolean } */
    this.blockTrustTokens;
    /** @export { !number } */
    this.httpCacheMaxSize;
    /** @export { !string } */
    this.quicUserAgentId;
    /** @export { (proxyResolver.mojom.ProxyResolverFactoryRemote|undefined) } */
    this.proxyResolverFactory;
    /** @export { (network.mojom.TransferableDirectory|undefined) } */
    this.httpCacheDirectory;
    /** @export { (network.mojom.HttpCacheBackendFileOperationsFactoryRemote|undefined) } */
    this.httpCacheFileOperationsFactory;
    /** @export { (network.mojom.SSLConfig|undefined) } */
    this.initialSslConfig;
    /** @export { (network.mojom.SSLConfigClientPendingReceiver|undefined) } */
    this.sslConfigClientReceiver;
    /** @export { (network.mojom.ProxyConfigClientPendingReceiver|undefined) } */
    this.proxyConfigClientReceiver;
    /** @export { (network.mojom.ProxyConfigWithAnnotation|undefined) } */
    this.initialProxyConfig;
    /** @export { (network.mojom.CustomProxyConfig|undefined) } */
    this.initialCustomProxyConfig;
    /** @export { (network.mojom.CustomProxyConfigClientPendingReceiver|undefined) } */
    this.customProxyConfigClientReceiver;
    /** @export { (network.mojom.CustomProxyConnectionObserverRemote|undefined) } */
    this.customProxyConnectionObserverRemote;
    /** @export { (network.mojom.ProxyConfigPollerClientRemote|undefined) } */
    this.proxyConfigPollerClient;
    /** @export { (network.mojom.ProxyErrorClientRemote|undefined) } */
    this.proxyErrorClient;
    /** @export { (network.mojom.SocketBrokerRemote|undefined) } */
    this.socketBroker;
    /** @export { !network.mojom.SCTAuditingMode } */
    this.sctAuditingMode;
    /** @export { (network.mojom.CTPolicy|undefined) } */
    this.ctPolicy;
    /** @export { !network.mojom.CertVerifierServiceRemoteParams } */
    this.certVerifierParams;
    /** @export { (network.mojom.CookieManagerParams|undefined) } */
    this.cookieManagerParams;
    /** @export { (network.mojom.CookieManagerPendingReceiver|undefined) } */
    this.cookieManager;
    /** @export { (network.mojom.FirstPartySetsAccessDelegatePendingReceiver|undefined) } */
    this.firstPartySetsAccessDelegateReceiver;
    /** @export { !string } */
    this.domainReliabilityUploadReporter;
    /** @export { (mojoBase.mojom.TimeDelta|undefined) } */
    this.reportingDeliveryInterval;
    /** @export { !Array<!network.mojom.CorsOriginAccessPatterns> } */
    this.corsOriginAccessList;
    /** @export { !Array<!string> } */
    this.corsExemptHeaderList;
    /** @export { !Array<!string> } */
    this.hstsPolicyBypassList;
    /** @export { (network.mojom.HttpAuthStaticNetworkContextParams|undefined) } */
    this.httpAuthStaticNetworkContextParams;
    /** @export { (network.mojom.NetworkContextFilePaths|undefined) } */
    this.filePaths;
    /** @export { (network.mojom.FirstPartySetsAccessDelegateParams|undefined) } */
    this.firstPartySetsAccessDelegateParams;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkConditionsSpec.$,
    'NetworkConditions',
    [
      mojo.internal.StructField(
        'offline', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'latency', 8,
        0,
        mojoBase.mojom.TimeDeltaSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'downloadThroughput', 16,
        0,
        mojo.internal.Double,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'uploadThroughput', 24,
        0,
        mojo.internal.Double,
        0,
        false /* nullable */),
    ],
    [[0, 40],]);



goog.provide('network.mojom.NetworkConditions');

/** @record */
network.mojom.NetworkConditions = class {
  constructor() {
    /** @export { !boolean } */
    this.offline;
    /** @export { !mojoBase.mojom.TimeDelta } */
    this.latency;
    /** @export { !number } */
    this.downloadThroughput;
    /** @export { !number } */
    this.uploadThroughput;
  }
};



goog.provide('network.mojom.ClearDataFilter_Type');
goog.provide('network.mojom.ClearDataFilterSpec.TypeSpec');
/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
network.mojom.ClearDataFilterSpec.TypeSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
network.mojom.ClearDataFilter_Type = {
  
  DELETE_MATCHES: 0,
  KEEP_MATCHES: 1,
  MIN_VALUE: 0,
  MAX_VALUE: 1,
};


mojo.internal.Struct(
    network.mojom.ClearDataFilterSpec.$,
    'ClearDataFilter',
    [
      mojo.internal.StructField(
        'type', 0,
        0,
        network.mojom.ClearDataFilterSpec.TypeSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'domains', 8,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'origins', 16,
        0,
        mojo.internal.Array(url.mojom.OriginSpec.$, false),
        null,
        false /* nullable */),
    ],
    [[0, 32],]);



goog.provide('network.mojom.ClearDataFilter');

/** @record */
network.mojom.ClearDataFilter = class {
  constructor() {
    /** @export { !network.mojom.ClearDataFilter_Type } */
    this.type;
    /** @export { !Array<!string> } */
    this.domains;
    /** @export { !Array<!url.mojom.Origin> } */
    this.origins;
  }
};




mojo.internal.Struct(
    network.mojom.SignedExchangeReportSpec.$,
    'SignedExchangeReport',
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'type', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'outerUrl', 16,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'innerUrl', 24,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'certUrl', 32,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'referrer', 40,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'serverIpAddress', 48,
        0,
        network.mojom.IPAddressSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'protocol', 56,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'method', 64,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'statusCode', 4,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'elapsedTime', 72,
        0,
        mojoBase.mojom.TimeDeltaSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 88],]);



goog.provide('network.mojom.SignedExchangeReport');

/** @record */
network.mojom.SignedExchangeReport = class {
  constructor() {
    /** @export { !boolean } */
    this.success;
    /** @export { !number } */
    this.statusCode;
    /** @export { !string } */
    this.type;
    /** @export { !url.mojom.Url } */
    this.outerUrl;
    /** @export { !url.mojom.Url } */
    this.innerUrl;
    /** @export { !url.mojom.Url } */
    this.certUrl;
    /** @export { !string } */
    this.referrer;
    /** @export { !network.mojom.IPAddress } */
    this.serverIpAddress;
    /** @export { !string } */
    this.protocol;
    /** @export { !string } */
    this.method;
    /** @export { !mojoBase.mojom.TimeDelta } */
    this.elapsedTime;
  }
};




mojo.internal.Struct(
    network.mojom.URLLoaderFactoryOverrideSpec.$,
    'URLLoaderFactoryOverride',
    [
      mojo.internal.StructField(
        'overridingFactory', 0,
        0,
        mojo.internal.InterfaceProxy(network.mojom.URLLoaderFactoryRemote),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'overriddenFactoryReceiver', 8,
        0,
        mojo.internal.InterfaceRequest(network.mojom.URLLoaderFactoryPendingReceiver),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'skipCorsEnabledSchemeCheck', 12,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.URLLoaderFactoryOverride');

/** @record */
network.mojom.URLLoaderFactoryOverride = class {
  constructor() {
    /** @export { !network.mojom.URLLoaderFactoryRemote } */
    this.overridingFactory;
    /** @export { (network.mojom.URLLoaderFactoryPendingReceiver|undefined) } */
    this.overriddenFactoryReceiver;
    /** @export { !boolean } */
    this.skipCorsEnabledSchemeCheck;
  }
};




mojo.internal.Struct(
    network.mojom.URLLoaderFactoryParamsSpec.$,
    'URLLoaderFactoryParams',
    [
      mojo.internal.StructField(
        'processId', 0,
        0,
        mojo.internal.Int32,
        network.mojom.INVALID_PROCESS_ID,
        false /* nullable */),
      mojo.internal.StructField(
        'requestInitiatorOriginLock', 8,
        0,
        url.mojom.OriginSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'isCorbEnabled', 4,
        0,
        mojo.internal.Bool,
        true,
        false /* nullable */),
      mojo.internal.StructField(
        'ignoreIsolatedWorldOrigin', 4,
        1,
        mojo.internal.Bool,
        true,
        false /* nullable */),
      mojo.internal.StructField(
        'unsafeNonWebbyInitiator', 4,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'disableWebSecurity', 4,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'headerClient', 16,
        0,
        mojo.internal.InterfaceProxy(network.mojom.TrustedURLLoaderHeaderClientRemote),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'isolationInfo', 24,
        0,
        network.mojom.IsolationInfoSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'disableSecureDns', 4,
        4,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'isTrusted', 4,
        5,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'automaticallyAssignIsolationInfo', 4,
        6,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'provideLoadingStateUpdates', 4,
        7,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'topFrameId', 32,
        0,
        mojoBase.mojom.UnguessableTokenSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'factoryOverride', 40,
        0,
        network.mojom.URLLoaderFactoryOverrideSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'clientSecurityState', 48,
        0,
        network.mojom.ClientSecurityStateSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'coepReporter', 56,
        0,
        mojo.internal.InterfaceProxy(network.mojom.CrossOriginEmbedderPolicyReporterRemote),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'cookieObserver', 64,
        0,
        mojo.internal.InterfaceProxy(network.mojom.CookieAccessObserverRemote),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'urlLoaderNetworkObserver', 72,
        0,
        mojo.internal.InterfaceProxy(network.mojom.URLLoaderNetworkServiceObserverRemote),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'devtoolsObserver', 80,
        0,
        mojo.internal.InterfaceProxy(network.mojom.DevToolsObserverRemote),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'trustTokenRedemptionPolicy', 88,
        0,
        network.mojom.TrustTokenRedemptionPolicySpec.$,
        network.mojom.TrustTokenRedemptionPolicy.kPotentiallyPermit,
        false /* nullable */),
      mojo.internal.StructField(
        'debugTag', 96,
        0,
        mojo.internal.String,
        "",
        false /* nullable */),
    ],
    [[0, 112],]);



goog.provide('network.mojom.URLLoaderFactoryParams');

/** @record */
network.mojom.URLLoaderFactoryParams = class {
  constructor() {
    /** @export { !number } */
    this.processId;
    /** @export { !boolean } */
    this.isCorbEnabled;
    /** @export { !boolean } */
    this.ignoreIsolatedWorldOrigin;
    /** @export { !boolean } */
    this.unsafeNonWebbyInitiator;
    /** @export { !boolean } */
    this.disableWebSecurity;
    /** @export { !boolean } */
    this.disableSecureDns;
    /** @export { !boolean } */
    this.isTrusted;
    /** @export { !boolean } */
    this.automaticallyAssignIsolationInfo;
    /** @export { !boolean } */
    this.provideLoadingStateUpdates;
    /** @export { (url.mojom.Origin|undefined) } */
    this.requestInitiatorOriginLock;
    /** @export { (network.mojom.TrustedURLLoaderHeaderClientRemote|undefined) } */
    this.headerClient;
    /** @export { !network.mojom.IsolationInfo } */
    this.isolationInfo;
    /** @export { (mojoBase.mojom.UnguessableToken|undefined) } */
    this.topFrameId;
    /** @export { (network.mojom.URLLoaderFactoryOverride|undefined) } */
    this.factoryOverride;
    /** @export { (network.mojom.ClientSecurityState|undefined) } */
    this.clientSecurityState;
    /** @export { (network.mojom.CrossOriginEmbedderPolicyReporterRemote|undefined) } */
    this.coepReporter;
    /** @export { (network.mojom.CookieAccessObserverRemote|undefined) } */
    this.cookieObserver;
    /** @export { (network.mojom.URLLoaderNetworkServiceObserverRemote|undefined) } */
    this.urlLoaderNetworkObserver;
    /** @export { (network.mojom.DevToolsObserverRemote|undefined) } */
    this.devtoolsObserver;
    /** @export { !network.mojom.TrustTokenRedemptionPolicy } */
    this.trustTokenRedemptionPolicy;
    /** @export { !string } */
    this.debugTag;
  }
};




mojo.internal.Struct(
    network.mojom.CustomProxyConnectionObserver_OnFallback_ParamsSpec.$,
    'CustomProxyConnectionObserver_OnFallback_Params',
    [
      mojo.internal.StructField(
        'badProxy', 0,
        0,
        proxyResolver.mojom.ProxyServerSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'netError', 8,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.CustomProxyConnectionObserver_OnFallback_Params');

/** @record */
network.mojom.CustomProxyConnectionObserver_OnFallback_Params = class {
  constructor() {
    /** @export { !proxyResolver.mojom.ProxyServer } */
    this.badProxy;
    /** @export { !number } */
    this.netError;
  }
};




mojo.internal.Struct(
    network.mojom.CustomProxyConnectionObserver_OnTunnelHeadersReceived_ParamsSpec.$,
    'CustomProxyConnectionObserver_OnTunnelHeadersReceived_Params',
    [
      mojo.internal.StructField(
        'proxyServer', 0,
        0,
        proxyResolver.mojom.ProxyServerSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'responseHeaders', 8,
        0,
        network.mojom.HttpResponseHeadersSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.CustomProxyConnectionObserver_OnTunnelHeadersReceived_Params');

/** @record */
network.mojom.CustomProxyConnectionObserver_OnTunnelHeadersReceived_Params = class {
  constructor() {
    /** @export { !proxyResolver.mojom.ProxyServer } */
    this.proxyServer;
    /** @export { !network.mojom.HttpResponseHeaders } */
    this.responseHeaders;
  }
};




mojo.internal.Struct(
    network.mojom.CustomProxyConfigClient_OnCustomProxyConfigUpdated_ParamsSpec.$,
    'CustomProxyConfigClient_OnCustomProxyConfigUpdated_Params',
    [
      mojo.internal.StructField(
        'proxyConfig', 0,
        0,
        network.mojom.CustomProxyConfigSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.CustomProxyConfigClient_OnCustomProxyConfigUpdated_Params');

/** @record */
network.mojom.CustomProxyConfigClient_OnCustomProxyConfigUpdated_Params = class {
  constructor() {
    /** @export { !network.mojom.CustomProxyConfig } */
    this.proxyConfig;
  }
};




mojo.internal.Struct(
    network.mojom.CustomProxyConfigClient_OnCustomProxyConfigUpdated_ResponseParamsSpec.$,
    'CustomProxyConfigClient_OnCustomProxyConfigUpdated_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.CustomProxyConfigClient_OnCustomProxyConfigUpdated_ResponseParams');

/** @record */
network.mojom.CustomProxyConfigClient_OnCustomProxyConfigUpdated_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_ParamsSpec.$,
    'CustomProxyConfigClient_MarkProxiesAsBad_Params',
    [
      mojo.internal.StructField(
        'bypassDuration', 0,
        0,
        mojoBase.mojom.TimeDeltaSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'badProxies', 8,
        0,
        network.mojom.ProxyListSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_Params');

/** @record */
network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_Params = class {
  constructor() {
    /** @export { !mojoBase.mojom.TimeDelta } */
    this.bypassDuration;
    /** @export { !network.mojom.ProxyList } */
    this.badProxies;
  }
};




mojo.internal.Struct(
    network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_ResponseParamsSpec.$,
    'CustomProxyConfigClient_MarkProxiesAsBad_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_ResponseParams');

/** @record */
network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.CustomProxyConfigClient_ClearBadProxiesCache_ParamsSpec.$,
    'CustomProxyConfigClient_ClearBadProxiesCache_Params',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.CustomProxyConfigClient_ClearBadProxiesCache_Params');

/** @record */
network.mojom.CustomProxyConfigClient_ClearBadProxiesCache_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_ParamsSpec.$,
    'TrustedHeaderClient_OnBeforeSendHeaders_Params',
    [
      mojo.internal.StructField(
        'headers', 0,
        0,
        network.mojom.HttpRequestHeadersSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_Params');

/** @record */
network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_Params = class {
  constructor() {
    /** @export { !network.mojom.HttpRequestHeaders } */
    this.headers;
  }
};




mojo.internal.Struct(
    network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_ResponseParamsSpec.$,
    'TrustedHeaderClient_OnBeforeSendHeaders_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'headers', 8,
        0,
        network.mojom.HttpRequestHeadersSpec.$,
        null,
        true /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_ResponseParams');

/** @record */
network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_ResponseParams = class {
  constructor() {
    /** @export { !number } */
    this.result;
    /** @export { (network.mojom.HttpRequestHeaders|undefined) } */
    this.headers;
  }
};




mojo.internal.Struct(
    network.mojom.TrustedHeaderClient_OnHeadersReceived_ParamsSpec.$,
    'TrustedHeaderClient_OnHeadersReceived_Params',
    [
      mojo.internal.StructField(
        'headers', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'remoteEndpoint', 8,
        0,
        network.mojom.IPEndPointSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.TrustedHeaderClient_OnHeadersReceived_Params');

/** @record */
network.mojom.TrustedHeaderClient_OnHeadersReceived_Params = class {
  constructor() {
    /** @export { !string } */
    this.headers;
    /** @export { !network.mojom.IPEndPoint } */
    this.remoteEndpoint;
  }
};




mojo.internal.Struct(
    network.mojom.TrustedHeaderClient_OnHeadersReceived_ResponseParamsSpec.$,
    'TrustedHeaderClient_OnHeadersReceived_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'headers', 8,
        0,
        mojo.internal.String,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'preserveFragmentOnRedirectUrl', 16,
        0,
        url.mojom.UrlSpec.$,
        null,
        true /* nullable */),
    ],
    [[0, 32],]);



goog.provide('network.mojom.TrustedHeaderClient_OnHeadersReceived_ResponseParams');

/** @record */
network.mojom.TrustedHeaderClient_OnHeadersReceived_ResponseParams = class {
  constructor() {
    /** @export { !number } */
    this.result;
    /** @export { (string|undefined) } */
    this.headers;
    /** @export { (url.mojom.Url|undefined) } */
    this.preserveFragmentOnRedirectUrl;
  }
};




mojo.internal.Struct(
    network.mojom.TrustedURLLoaderHeaderClient_OnLoaderCreated_ParamsSpec.$,
    'TrustedURLLoaderHeaderClient_OnLoaderCreated_Params',
    [
      mojo.internal.StructField(
        'requestId', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'headerClient', 4,
        0,
        mojo.internal.InterfaceRequest(network.mojom.TrustedHeaderClientPendingReceiver),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.TrustedURLLoaderHeaderClient_OnLoaderCreated_Params');

/** @record */
network.mojom.TrustedURLLoaderHeaderClient_OnLoaderCreated_Params = class {
  constructor() {
    /** @export { !number } */
    this.requestId;
    /** @export { !network.mojom.TrustedHeaderClientPendingReceiver } */
    this.headerClient;
  }
};




mojo.internal.Struct(
    network.mojom.TrustedURLLoaderHeaderClient_OnLoaderForCorsPreflightCreated_ParamsSpec.$,
    'TrustedURLLoaderHeaderClient_OnLoaderForCorsPreflightCreated_Params',
    [
      mojo.internal.StructField(
        'request', 0,
        0,
        network.mojom.URLRequestSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'headerClient', 8,
        0,
        mojo.internal.InterfaceRequest(network.mojom.TrustedHeaderClientPendingReceiver),
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.TrustedURLLoaderHeaderClient_OnLoaderForCorsPreflightCreated_Params');

/** @record */
network.mojom.TrustedURLLoaderHeaderClient_OnLoaderForCorsPreflightCreated_Params = class {
  constructor() {
    /** @export { !network.mojom.URLRequest } */
    this.request;
    /** @export { !network.mojom.TrustedHeaderClientPendingReceiver } */
    this.headerClient;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContextClient_OnFileUploadRequested_ParamsSpec.$,
    'NetworkContextClient_OnFileUploadRequested_Params',
    [
      mojo.internal.StructField(
        'processId', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'async', 4,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'filePaths', 8,
        0,
        mojo.internal.Array(mojoBase.mojom.FilePathSpec.$, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'destinationUrl', 16,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 32],]);



goog.provide('network.mojom.NetworkContextClient_OnFileUploadRequested_Params');

/** @record */
network.mojom.NetworkContextClient_OnFileUploadRequested_Params = class {
  constructor() {
    /** @export { !number } */
    this.processId;
    /** @export { !boolean } */
    this.async;
    /** @export { !Array<!mojoBase.mojom.FilePath> } */
    this.filePaths;
    /** @export { !url.mojom.Url } */
    this.destinationUrl;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContextClient_OnFileUploadRequested_ResponseParamsSpec.$,
    'NetworkContextClient_OnFileUploadRequested_ResponseParams',
    [
      mojo.internal.StructField(
        'netError', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'files', 8,
        0,
        mojo.internal.Array(mojoBase.mojom.ReadOnlyFileSpec.$, false),
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.NetworkContextClient_OnFileUploadRequested_ResponseParams');

/** @record */
network.mojom.NetworkContextClient_OnFileUploadRequested_ResponseParams = class {
  constructor() {
    /** @export { !number } */
    this.netError;
    /** @export { !Array<!mojoBase.mojom.ReadOnlyFile> } */
    this.files;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContextClient_OnCanSendReportingReports_ParamsSpec.$,
    'NetworkContextClient_OnCanSendReportingReports_Params',
    [
      mojo.internal.StructField(
        'origins', 0,
        0,
        mojo.internal.Array(url.mojom.OriginSpec.$, false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContextClient_OnCanSendReportingReports_Params');

/** @record */
network.mojom.NetworkContextClient_OnCanSendReportingReports_Params = class {
  constructor() {
    /** @export { !Array<!url.mojom.Origin> } */
    this.origins;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContextClient_OnCanSendReportingReports_ResponseParamsSpec.$,
    'NetworkContextClient_OnCanSendReportingReports_ResponseParams',
    [
      mojo.internal.StructField(
        'origins', 0,
        0,
        mojo.internal.Array(url.mojom.OriginSpec.$, false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContextClient_OnCanSendReportingReports_ResponseParams');

/** @record */
network.mojom.NetworkContextClient_OnCanSendReportingReports_ResponseParams = class {
  constructor() {
    /** @export { !Array<!url.mojom.Origin> } */
    this.origins;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_ParamsSpec.$,
    'NetworkContextClient_OnCanSendDomainReliabilityUpload_Params',
    [
      mojo.internal.StructField(
        'origin', 0,
        0,
        url.mojom.OriginSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_Params');

/** @record */
network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_Params = class {
  constructor() {
    /** @export { !url.mojom.Origin } */
    this.origin;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_ResponseParamsSpec.$,
    'NetworkContextClient_OnCanSendDomainReliabilityUpload_ResponseParams',
    [
      mojo.internal.StructField(
        'allowed', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_ResponseParams');

/** @record */
network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_ResponseParams = class {
  constructor() {
    /** @export { !boolean } */
    this.allowed;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ParamsSpec.$,
    'NetworkContextClient_OnGenerateHttpNegotiateAuthToken_Params',
    [
      mojo.internal.StructField(
        'serverAuthToken', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'canDelegate', 8,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'authNegotiateAndroidAccountType', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'spn', 24,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ],
    [[0, 40],]);



goog.provide('network.mojom.NetworkContextClient_OnGenerateHttpNegotiateAuthToken_Params');

/** @record */
network.mojom.NetworkContextClient_OnGenerateHttpNegotiateAuthToken_Params = class {
  constructor() {
    /** @export { !string } */
    this.serverAuthToken;
    /** @export { !boolean } */
    this.canDelegate;
    /** @export { !string } */
    this.authNegotiateAndroidAccountType;
    /** @export { !string } */
    this.spn;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ResponseParamsSpec.$,
    'NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'authToken', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ResponseParams');

/** @record */
network.mojom.NetworkContextClient_OnGenerateHttpNegotiateAuthToken_ResponseParams = class {
  constructor() {
    /** @export { !number } */
    this.result;
    /** @export { !string } */
    this.authToken;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ParamsSpec.$,
    'NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_Params',
    [
      mojo.internal.StructField(
        'request', 0,
        0,
        network.mojom.FulfillTrustTokenIssuanceRequestSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_Params');

/** @record */
network.mojom.NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_Params = class {
  constructor() {
    /** @export { !network.mojom.FulfillTrustTokenIssuanceRequest } */
    this.request;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ResponseParamsSpec.$,
    'NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ResponseParams',
    [
      mojo.internal.StructField(
        'response', 0,
        0,
        network.mojom.FulfillTrustTokenIssuanceAnswerSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ResponseParams');

/** @record */
network.mojom.NetworkContextClient_OnTrustTokenIssuanceDivertedToSystem_ResponseParams = class {
  constructor() {
    /** @export { !network.mojom.FulfillTrustTokenIssuanceAnswer } */
    this.response;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContextClient_OnCanSendSCTAuditingReport_ParamsSpec.$,
    'NetworkContextClient_OnCanSendSCTAuditingReport_Params',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContextClient_OnCanSendSCTAuditingReport_Params');

/** @record */
network.mojom.NetworkContextClient_OnCanSendSCTAuditingReport_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContextClient_OnCanSendSCTAuditingReport_ResponseParamsSpec.$,
    'NetworkContextClient_OnCanSendSCTAuditingReport_ResponseParams',
    [
      mojo.internal.StructField(
        'allowed', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContextClient_OnCanSendSCTAuditingReport_ResponseParams');

/** @record */
network.mojom.NetworkContextClient_OnCanSendSCTAuditingReport_ResponseParams = class {
  constructor() {
    /** @export { !boolean } */
    this.allowed;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContextClient_OnNewSCTAuditingReportSent_ParamsSpec.$,
    'NetworkContextClient_OnNewSCTAuditingReportSent_Params',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContextClient_OnNewSCTAuditingReportSent_Params');

/** @record */
network.mojom.NetworkContextClient_OnNewSCTAuditingReportSent_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_SetClient_ParamsSpec.$,
    'NetworkContext_SetClient_Params',
    [
      mojo.internal.StructField(
        'client', 0,
        0,
        mojo.internal.InterfaceProxy(network.mojom.NetworkContextClientRemote),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_SetClient_Params');

/** @record */
network.mojom.NetworkContext_SetClient_Params = class {
  constructor() {
    /** @export { !network.mojom.NetworkContextClientRemote } */
    this.client;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_CreateURLLoaderFactory_ParamsSpec.$,
    'NetworkContext_CreateURLLoaderFactory_Params',
    [
      mojo.internal.StructField(
        'urlLoaderFactory', 0,
        0,
        mojo.internal.InterfaceRequest(network.mojom.URLLoaderFactoryPendingReceiver),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'params', 8,
        0,
        network.mojom.URLLoaderFactoryParamsSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.NetworkContext_CreateURLLoaderFactory_Params');

/** @record */
network.mojom.NetworkContext_CreateURLLoaderFactory_Params = class {
  constructor() {
    /** @export { !network.mojom.URLLoaderFactoryPendingReceiver } */
    this.urlLoaderFactory;
    /** @export { !network.mojom.URLLoaderFactoryParams } */
    this.params;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ResetURLLoaderFactories_ParamsSpec.$,
    'NetworkContext_ResetURLLoaderFactories_Params',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_ResetURLLoaderFactories_Params');

/** @record */
network.mojom.NetworkContext_ResetURLLoaderFactories_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_GetCookieManager_ParamsSpec.$,
    'NetworkContext_GetCookieManager_Params',
    [
      mojo.internal.StructField(
        'cookieManager', 0,
        0,
        mojo.internal.InterfaceRequest(network.mojom.CookieManagerPendingReceiver),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_GetCookieManager_Params');

/** @record */
network.mojom.NetworkContext_GetCookieManager_Params = class {
  constructor() {
    /** @export { !network.mojom.CookieManagerPendingReceiver } */
    this.cookieManager;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_GetRestrictedCookieManager_ParamsSpec.$,
    'NetworkContext_GetRestrictedCookieManager_Params',
    [
      mojo.internal.StructField(
        'restrictedCookieManager', 0,
        0,
        mojo.internal.InterfaceRequest(network.mojom.RestrictedCookieManagerPendingReceiver),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'role', 4,
        0,
        network.mojom.RestrictedCookieManagerRoleSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'origin', 8,
        0,
        url.mojom.OriginSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'isolationInfo', 16,
        0,
        network.mojom.IsolationInfoSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'cookieObserver', 24,
        0,
        mojo.internal.InterfaceProxy(network.mojom.CookieAccessObserverRemote),
        null,
        true /* nullable */),
    ],
    [[0, 40],]);



goog.provide('network.mojom.NetworkContext_GetRestrictedCookieManager_Params');

/** @record */
network.mojom.NetworkContext_GetRestrictedCookieManager_Params = class {
  constructor() {
    /** @export { !network.mojom.RestrictedCookieManagerPendingReceiver } */
    this.restrictedCookieManager;
    /** @export { !network.mojom.RestrictedCookieManagerRole } */
    this.role;
    /** @export { !url.mojom.Origin } */
    this.origin;
    /** @export { !network.mojom.IsolationInfo } */
    this.isolationInfo;
    /** @export { (network.mojom.CookieAccessObserverRemote|undefined) } */
    this.cookieObserver;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_GetTrustTokenQueryAnswerer_ParamsSpec.$,
    'NetworkContext_GetTrustTokenQueryAnswerer_Params',
    [
      mojo.internal.StructField(
        'trustTokenQueryAnswerer', 0,
        0,
        mojo.internal.InterfaceRequest(network.mojom.TrustTokenQueryAnswererPendingReceiver),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'topFrameOrigin', 8,
        0,
        url.mojom.OriginSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.NetworkContext_GetTrustTokenQueryAnswerer_Params');

/** @record */
network.mojom.NetworkContext_GetTrustTokenQueryAnswerer_Params = class {
  constructor() {
    /** @export { !network.mojom.TrustTokenQueryAnswererPendingReceiver } */
    this.trustTokenQueryAnswerer;
    /** @export { !url.mojom.Origin } */
    this.topFrameOrigin;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ClearTrustTokenData_ParamsSpec.$,
    'NetworkContext_ClearTrustTokenData_Params',
    [
      mojo.internal.StructField(
        'filter', 0,
        0,
        network.mojom.ClearDataFilterSpec.$,
        null,
        true /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_ClearTrustTokenData_Params');

/** @record */
network.mojom.NetworkContext_ClearTrustTokenData_Params = class {
  constructor() {
    /** @export { (network.mojom.ClearDataFilter|undefined) } */
    this.filter;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ClearTrustTokenData_ResponseParamsSpec.$,
    'NetworkContext_ClearTrustTokenData_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_ClearTrustTokenData_ResponseParams');

/** @record */
network.mojom.NetworkContext_ClearTrustTokenData_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_GetStoredTrustTokenCounts_ParamsSpec.$,
    'NetworkContext_GetStoredTrustTokenCounts_Params',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_GetStoredTrustTokenCounts_Params');

/** @record */
network.mojom.NetworkContext_GetStoredTrustTokenCounts_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_GetStoredTrustTokenCounts_ResponseParamsSpec.$,
    'NetworkContext_GetStoredTrustTokenCounts_ResponseParams',
    [
      mojo.internal.StructField(
        'tokens', 0,
        0,
        mojo.internal.Array(network.mojom.StoredTrustTokensForIssuerSpec.$, false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_GetStoredTrustTokenCounts_ResponseParams');

/** @record */
network.mojom.NetworkContext_GetStoredTrustTokenCounts_ResponseParams = class {
  constructor() {
    /** @export { !Array<!network.mojom.StoredTrustTokensForIssuer> } */
    this.tokens;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_DeleteStoredTrustTokens_ParamsSpec.$,
    'NetworkContext_DeleteStoredTrustTokens_Params',
    [
      mojo.internal.StructField(
        'issuer', 0,
        0,
        url.mojom.OriginSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_DeleteStoredTrustTokens_Params');

/** @record */
network.mojom.NetworkContext_DeleteStoredTrustTokens_Params = class {
  constructor() {
    /** @export { !url.mojom.Origin } */
    this.issuer;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_DeleteStoredTrustTokens_ResponseParamsSpec.$,
    'NetworkContext_DeleteStoredTrustTokens_ResponseParams',
    [
      mojo.internal.StructField(
        'status', 0,
        0,
        network.mojom.DeleteStoredTrustTokensStatusSpec.$,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_DeleteStoredTrustTokens_ResponseParams');

/** @record */
network.mojom.NetworkContext_DeleteStoredTrustTokens_ResponseParams = class {
  constructor() {
    /** @export { !network.mojom.DeleteStoredTrustTokensStatus } */
    this.status;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_SetBlockTrustTokens_ParamsSpec.$,
    'NetworkContext_SetBlockTrustTokens_Params',
    [
      mojo.internal.StructField(
        'block', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_SetBlockTrustTokens_Params');

/** @record */
network.mojom.NetworkContext_SetBlockTrustTokens_Params = class {
  constructor() {
    /** @export { !boolean } */
    this.block;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ClearNetworkingHistoryBetween_ParamsSpec.$,
    'NetworkContext_ClearNetworkingHistoryBetween_Params',
    [
      mojo.internal.StructField(
        'startTime', 0,
        0,
        mojoBase.mojom.TimeSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'endTime', 8,
        0,
        mojoBase.mojom.TimeSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.NetworkContext_ClearNetworkingHistoryBetween_Params');

/** @record */
network.mojom.NetworkContext_ClearNetworkingHistoryBetween_Params = class {
  constructor() {
    /** @export { !mojoBase.mojom.Time } */
    this.startTime;
    /** @export { !mojoBase.mojom.Time } */
    this.endTime;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ClearNetworkingHistoryBetween_ResponseParamsSpec.$,
    'NetworkContext_ClearNetworkingHistoryBetween_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_ClearNetworkingHistoryBetween_ResponseParams');

/** @record */
network.mojom.NetworkContext_ClearNetworkingHistoryBetween_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ClearHttpCache_ParamsSpec.$,
    'NetworkContext_ClearHttpCache_Params',
    [
      mojo.internal.StructField(
        'startTime', 0,
        0,
        mojoBase.mojom.TimeSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'endTime', 8,
        0,
        mojoBase.mojom.TimeSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'filter', 16,
        0,
        network.mojom.ClearDataFilterSpec.$,
        null,
        true /* nullable */),
    ],
    [[0, 32],]);



goog.provide('network.mojom.NetworkContext_ClearHttpCache_Params');

/** @record */
network.mojom.NetworkContext_ClearHttpCache_Params = class {
  constructor() {
    /** @export { !mojoBase.mojom.Time } */
    this.startTime;
    /** @export { !mojoBase.mojom.Time } */
    this.endTime;
    /** @export { (network.mojom.ClearDataFilter|undefined) } */
    this.filter;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ClearHttpCache_ResponseParamsSpec.$,
    'NetworkContext_ClearHttpCache_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_ClearHttpCache_ResponseParams');

/** @record */
network.mojom.NetworkContext_ClearHttpCache_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ComputeHttpCacheSize_ParamsSpec.$,
    'NetworkContext_ComputeHttpCacheSize_Params',
    [
      mojo.internal.StructField(
        'startTime', 0,
        0,
        mojoBase.mojom.TimeSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'endTime', 8,
        0,
        mojoBase.mojom.TimeSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.NetworkContext_ComputeHttpCacheSize_Params');

/** @record */
network.mojom.NetworkContext_ComputeHttpCacheSize_Params = class {
  constructor() {
    /** @export { !mojoBase.mojom.Time } */
    this.startTime;
    /** @export { !mojoBase.mojom.Time } */
    this.endTime;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ComputeHttpCacheSize_ResponseParamsSpec.$,
    'NetworkContext_ComputeHttpCacheSize_ResponseParams',
    [
      mojo.internal.StructField(
        'isUpperBound', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'sizeOrError', 8,
        0,
        mojo.internal.Int64,
        BigInt(0),
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.NetworkContext_ComputeHttpCacheSize_ResponseParams');

/** @record */
network.mojom.NetworkContext_ComputeHttpCacheSize_ResponseParams = class {
  constructor() {
    /** @export { !boolean } */
    this.isUpperBound;
    /** @export { !bigint } */
    this.sizeOrError;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_NotifyExternalCacheHit_ParamsSpec.$,
    'NetworkContext_NotifyExternalCacheHit_Params',
    [
      mojo.internal.StructField(
        'url', 0,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'httpMethod', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'key', 16,
        0,
        network.mojom.NetworkIsolationKeySpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'isSubframeDocumentResource', 24,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'includeCredentials', 24,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 40],]);



goog.provide('network.mojom.NetworkContext_NotifyExternalCacheHit_Params');

/** @record */
network.mojom.NetworkContext_NotifyExternalCacheHit_Params = class {
  constructor() {
    /** @export { !url.mojom.Url } */
    this.url;
    /** @export { !string } */
    this.httpMethod;
    /** @export { !network.mojom.NetworkIsolationKey } */
    this.key;
    /** @export { !boolean } */
    this.isSubframeDocumentResource;
    /** @export { !boolean } */
    this.includeCredentials;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ClearHostCache_ParamsSpec.$,
    'NetworkContext_ClearHostCache_Params',
    [
      mojo.internal.StructField(
        'filter', 0,
        0,
        network.mojom.ClearDataFilterSpec.$,
        null,
        true /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_ClearHostCache_Params');

/** @record */
network.mojom.NetworkContext_ClearHostCache_Params = class {
  constructor() {
    /** @export { (network.mojom.ClearDataFilter|undefined) } */
    this.filter;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ClearHostCache_ResponseParamsSpec.$,
    'NetworkContext_ClearHostCache_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_ClearHostCache_ResponseParams');

/** @record */
network.mojom.NetworkContext_ClearHostCache_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ClearHttpAuthCache_ParamsSpec.$,
    'NetworkContext_ClearHttpAuthCache_Params',
    [
      mojo.internal.StructField(
        'startTime', 0,
        0,
        mojoBase.mojom.TimeSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'endTime', 8,
        0,
        mojoBase.mojom.TimeSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.NetworkContext_ClearHttpAuthCache_Params');

/** @record */
network.mojom.NetworkContext_ClearHttpAuthCache_Params = class {
  constructor() {
    /** @export { !mojoBase.mojom.Time } */
    this.startTime;
    /** @export { !mojoBase.mojom.Time } */
    this.endTime;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ClearHttpAuthCache_ResponseParamsSpec.$,
    'NetworkContext_ClearHttpAuthCache_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_ClearHttpAuthCache_ResponseParams');

/** @record */
network.mojom.NetworkContext_ClearHttpAuthCache_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ClearReportingCacheReports_ParamsSpec.$,
    'NetworkContext_ClearReportingCacheReports_Params',
    [
      mojo.internal.StructField(
        'filter', 0,
        0,
        network.mojom.ClearDataFilterSpec.$,
        null,
        true /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_ClearReportingCacheReports_Params');

/** @record */
network.mojom.NetworkContext_ClearReportingCacheReports_Params = class {
  constructor() {
    /** @export { (network.mojom.ClearDataFilter|undefined) } */
    this.filter;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ClearReportingCacheReports_ResponseParamsSpec.$,
    'NetworkContext_ClearReportingCacheReports_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_ClearReportingCacheReports_ResponseParams');

/** @record */
network.mojom.NetworkContext_ClearReportingCacheReports_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ClearReportingCacheClients_ParamsSpec.$,
    'NetworkContext_ClearReportingCacheClients_Params',
    [
      mojo.internal.StructField(
        'filter', 0,
        0,
        network.mojom.ClearDataFilterSpec.$,
        null,
        true /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_ClearReportingCacheClients_Params');

/** @record */
network.mojom.NetworkContext_ClearReportingCacheClients_Params = class {
  constructor() {
    /** @export { (network.mojom.ClearDataFilter|undefined) } */
    this.filter;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ClearReportingCacheClients_ResponseParamsSpec.$,
    'NetworkContext_ClearReportingCacheClients_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_ClearReportingCacheClients_ResponseParams');

/** @record */
network.mojom.NetworkContext_ClearReportingCacheClients_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ClearNetworkErrorLogging_ParamsSpec.$,
    'NetworkContext_ClearNetworkErrorLogging_Params',
    [
      mojo.internal.StructField(
        'filter', 0,
        0,
        network.mojom.ClearDataFilterSpec.$,
        null,
        true /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_ClearNetworkErrorLogging_Params');

/** @record */
network.mojom.NetworkContext_ClearNetworkErrorLogging_Params = class {
  constructor() {
    /** @export { (network.mojom.ClearDataFilter|undefined) } */
    this.filter;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ClearNetworkErrorLogging_ResponseParamsSpec.$,
    'NetworkContext_ClearNetworkErrorLogging_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_ClearNetworkErrorLogging_ResponseParams');

/** @record */
network.mojom.NetworkContext_ClearNetworkErrorLogging_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ClearDomainReliability_ParamsSpec.$,
    'NetworkContext_ClearDomainReliability_Params',
    [
      mojo.internal.StructField(
        'filter', 0,
        0,
        network.mojom.ClearDataFilterSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'mode', 8,
        0,
        network.mojom.NetworkContext.DomainReliabilityClearModeSpec.$,
        0,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.NetworkContext_ClearDomainReliability_Params');

/** @record */
network.mojom.NetworkContext_ClearDomainReliability_Params = class {
  constructor() {
    /** @export { (network.mojom.ClearDataFilter|undefined) } */
    this.filter;
    /** @export { !network.mojom.NetworkContext_DomainReliabilityClearMode } */
    this.mode;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ClearDomainReliability_ResponseParamsSpec.$,
    'NetworkContext_ClearDomainReliability_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_ClearDomainReliability_ResponseParams');

/** @record */
network.mojom.NetworkContext_ClearDomainReliability_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_SetDocumentReportingEndpoints_ParamsSpec.$,
    'NetworkContext_SetDocumentReportingEndpoints_Params',
    [
      mojo.internal.StructField(
        'reportingSource', 0,
        0,
        mojoBase.mojom.UnguessableTokenSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'origin', 8,
        0,
        url.mojom.OriginSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'isolationInfo', 16,
        0,
        network.mojom.IsolationInfoSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'endpoints', 24,
        0,
        mojo.internal.Map(mojo.internal.String, mojo.internal.String, false),
        null,
        false /* nullable */),
    ],
    [[0, 40],]);



goog.provide('network.mojom.NetworkContext_SetDocumentReportingEndpoints_Params');

/** @record */
network.mojom.NetworkContext_SetDocumentReportingEndpoints_Params = class {
  constructor() {
    /** @export { !mojoBase.mojom.UnguessableToken } */
    this.reportingSource;
    /** @export { !url.mojom.Origin } */
    this.origin;
    /** @export { !network.mojom.IsolationInfo } */
    this.isolationInfo;
    /** @export { !Object<!string, !string> } */
    this.endpoints;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_SendReportsAndRemoveSource_ParamsSpec.$,
    'NetworkContext_SendReportsAndRemoveSource_Params',
    [
      mojo.internal.StructField(
        'reportingSource', 0,
        0,
        mojoBase.mojom.UnguessableTokenSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_SendReportsAndRemoveSource_Params');

/** @record */
network.mojom.NetworkContext_SendReportsAndRemoveSource_Params = class {
  constructor() {
    /** @export { !mojoBase.mojom.UnguessableToken } */
    this.reportingSource;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_QueueReport_ParamsSpec.$,
    'NetworkContext_QueueReport_Params',
    [
      mojo.internal.StructField(
        'type', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'group', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'url', 16,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'reportingSource', 24,
        0,
        mojoBase.mojom.UnguessableTokenSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'networkIsolationKey', 32,
        0,
        network.mojom.NetworkIsolationKeySpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'userAgent', 40,
        0,
        mojo.internal.String,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'body', 48,
        0,
        mojoBase.mojom.DictionaryValueSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 64],]);



goog.provide('network.mojom.NetworkContext_QueueReport_Params');

/** @record */
network.mojom.NetworkContext_QueueReport_Params = class {
  constructor() {
    /** @export { !string } */
    this.type;
    /** @export { !string } */
    this.group;
    /** @export { !url.mojom.Url } */
    this.url;
    /** @export { (mojoBase.mojom.UnguessableToken|undefined) } */
    this.reportingSource;
    /** @export { !network.mojom.NetworkIsolationKey } */
    this.networkIsolationKey;
    /** @export { (string|undefined) } */
    this.userAgent;
    /** @export { !mojoBase.mojom.DictionaryValue } */
    this.body;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_QueueSignedExchangeReport_ParamsSpec.$,
    'NetworkContext_QueueSignedExchangeReport_Params',
    [
      mojo.internal.StructField(
        'report', 0,
        0,
        network.mojom.SignedExchangeReportSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'networkIsolationKey', 8,
        0,
        network.mojom.NetworkIsolationKeySpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.NetworkContext_QueueSignedExchangeReport_Params');

/** @record */
network.mojom.NetworkContext_QueueSignedExchangeReport_Params = class {
  constructor() {
    /** @export { !network.mojom.SignedExchangeReport } */
    this.report;
    /** @export { !network.mojom.NetworkIsolationKey } */
    this.networkIsolationKey;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_CloseAllConnections_ParamsSpec.$,
    'NetworkContext_CloseAllConnections_Params',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_CloseAllConnections_Params');

/** @record */
network.mojom.NetworkContext_CloseAllConnections_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_CloseAllConnections_ResponseParamsSpec.$,
    'NetworkContext_CloseAllConnections_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_CloseAllConnections_ResponseParams');

/** @record */
network.mojom.NetworkContext_CloseAllConnections_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_CloseIdleConnections_ParamsSpec.$,
    'NetworkContext_CloseIdleConnections_Params',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_CloseIdleConnections_Params');

/** @record */
network.mojom.NetworkContext_CloseIdleConnections_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_CloseIdleConnections_ResponseParamsSpec.$,
    'NetworkContext_CloseIdleConnections_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_CloseIdleConnections_ResponseParams');

/** @record */
network.mojom.NetworkContext_CloseIdleConnections_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_SetNetworkConditions_ParamsSpec.$,
    'NetworkContext_SetNetworkConditions_Params',
    [
      mojo.internal.StructField(
        'throttlingProfileId', 0,
        0,
        mojoBase.mojom.UnguessableTokenSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'conditions', 8,
        0,
        network.mojom.NetworkConditionsSpec.$,
        null,
        true /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.NetworkContext_SetNetworkConditions_Params');

/** @record */
network.mojom.NetworkContext_SetNetworkConditions_Params = class {
  constructor() {
    /** @export { !mojoBase.mojom.UnguessableToken } */
    this.throttlingProfileId;
    /** @export { (network.mojom.NetworkConditions|undefined) } */
    this.conditions;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_SetAcceptLanguage_ParamsSpec.$,
    'NetworkContext_SetAcceptLanguage_Params',
    [
      mojo.internal.StructField(
        'newAcceptLanguage', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_SetAcceptLanguage_Params');

/** @record */
network.mojom.NetworkContext_SetAcceptLanguage_Params = class {
  constructor() {
    /** @export { !string } */
    this.newAcceptLanguage;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_SetEnableReferrers_ParamsSpec.$,
    'NetworkContext_SetEnableReferrers_Params',
    [
      mojo.internal.StructField(
        'enableReferrers', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_SetEnableReferrers_Params');

/** @record */
network.mojom.NetworkContext_SetEnableReferrers_Params = class {
  constructor() {
    /** @export { !boolean } */
    this.enableReferrers;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_SetCTPolicy_ParamsSpec.$,
    'NetworkContext_SetCTPolicy_Params',
    [
      mojo.internal.StructField(
        'ctPolicy', 0,
        0,
        network.mojom.CTPolicySpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_SetCTPolicy_Params');

/** @record */
network.mojom.NetworkContext_SetCTPolicy_Params = class {
  constructor() {
    /** @export { !network.mojom.CTPolicy } */
    this.ctPolicy;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_AddExpectCT_ParamsSpec.$,
    'NetworkContext_AddExpectCT_Params',
    [
      mojo.internal.StructField(
        'host', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'expiry', 8,
        0,
        mojoBase.mojom.TimeSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'enforce', 16,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'reportUri', 24,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'networkIsolationKey', 32,
        0,
        network.mojom.NetworkIsolationKeySpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 48],]);



goog.provide('network.mojom.NetworkContext_AddExpectCT_Params');

/** @record */
network.mojom.NetworkContext_AddExpectCT_Params = class {
  constructor() {
    /** @export { !string } */
    this.host;
    /** @export { !mojoBase.mojom.Time } */
    this.expiry;
    /** @export { !boolean } */
    this.enforce;
    /** @export { !url.mojom.Url } */
    this.reportUri;
    /** @export { !network.mojom.NetworkIsolationKey } */
    this.networkIsolationKey;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_AddExpectCT_ResponseParamsSpec.$,
    'NetworkContext_AddExpectCT_ResponseParams',
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_AddExpectCT_ResponseParams');

/** @record */
network.mojom.NetworkContext_AddExpectCT_ResponseParams = class {
  constructor() {
    /** @export { !boolean } */
    this.success;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_SetExpectCTTestReport_ParamsSpec.$,
    'NetworkContext_SetExpectCTTestReport_Params',
    [
      mojo.internal.StructField(
        'reportUri', 0,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_SetExpectCTTestReport_Params');

/** @record */
network.mojom.NetworkContext_SetExpectCTTestReport_Params = class {
  constructor() {
    /** @export { !url.mojom.Url } */
    this.reportUri;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_SetExpectCTTestReport_ResponseParamsSpec.$,
    'NetworkContext_SetExpectCTTestReport_ResponseParams',
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_SetExpectCTTestReport_ResponseParams');

/** @record */
network.mojom.NetworkContext_SetExpectCTTestReport_ResponseParams = class {
  constructor() {
    /** @export { !boolean } */
    this.success;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_GetExpectCTState_ParamsSpec.$,
    'NetworkContext_GetExpectCTState_Params',
    [
      mojo.internal.StructField(
        'domain', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'networkIsolationKey', 8,
        0,
        network.mojom.NetworkIsolationKeySpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.NetworkContext_GetExpectCTState_Params');

/** @record */
network.mojom.NetworkContext_GetExpectCTState_Params = class {
  constructor() {
    /** @export { !string } */
    this.domain;
    /** @export { !network.mojom.NetworkIsolationKey } */
    this.networkIsolationKey;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_GetExpectCTState_ResponseParamsSpec.$,
    'NetworkContext_GetExpectCTState_ResponseParams',
    [
      mojo.internal.StructField(
        'state', 0,
        0,
        mojoBase.mojom.DictionaryValueSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_GetExpectCTState_ResponseParams');

/** @record */
network.mojom.NetworkContext_GetExpectCTState_ResponseParams = class {
  constructor() {
    /** @export { !mojoBase.mojom.DictionaryValue } */
    this.state;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_CreateUDPSocket_ParamsSpec.$,
    'NetworkContext_CreateUDPSocket_Params',
    [
      mojo.internal.StructField(
        'receiver', 0,
        0,
        mojo.internal.InterfaceRequest(network.mojom.UDPSocketPendingReceiver),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'listener', 4,
        0,
        mojo.internal.InterfaceProxy(network.mojom.UDPSocketListenerRemote),
        null,
        true /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.NetworkContext_CreateUDPSocket_Params');

/** @record */
network.mojom.NetworkContext_CreateUDPSocket_Params = class {
  constructor() {
    /** @export { !network.mojom.UDPSocketPendingReceiver } */
    this.receiver;
    /** @export { (network.mojom.UDPSocketListenerRemote|undefined) } */
    this.listener;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_CreateTCPServerSocket_ParamsSpec.$,
    'NetworkContext_CreateTCPServerSocket_Params',
    [
      mojo.internal.StructField(
        'localAddr', 0,
        0,
        network.mojom.IPEndPointSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'backlog', 8,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'trafficAnnotation', 16,
        0,
        network.mojom.MutableNetworkTrafficAnnotationTagSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'socket', 12,
        0,
        mojo.internal.InterfaceRequest(network.mojom.TCPServerSocketPendingReceiver),
        null,
        false /* nullable */),
    ],
    [[0, 32],]);



goog.provide('network.mojom.NetworkContext_CreateTCPServerSocket_Params');

/** @record */
network.mojom.NetworkContext_CreateTCPServerSocket_Params = class {
  constructor() {
    /** @export { !network.mojom.IPEndPoint } */
    this.localAddr;
    /** @export { !number } */
    this.backlog;
    /** @export { !network.mojom.TCPServerSocketPendingReceiver } */
    this.socket;
    /** @export { !network.mojom.MutableNetworkTrafficAnnotationTag } */
    this.trafficAnnotation;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_CreateTCPServerSocket_ResponseParamsSpec.$,
    'NetworkContext_CreateTCPServerSocket_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'localAddrOut', 8,
        0,
        network.mojom.IPEndPointSpec.$,
        null,
        true /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.NetworkContext_CreateTCPServerSocket_ResponseParams');

/** @record */
network.mojom.NetworkContext_CreateTCPServerSocket_ResponseParams = class {
  constructor() {
    /** @export { !number } */
    this.result;
    /** @export { (network.mojom.IPEndPoint|undefined) } */
    this.localAddrOut;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_CreateTCPConnectedSocket_ParamsSpec.$,
    'NetworkContext_CreateTCPConnectedSocket_Params',
    [
      mojo.internal.StructField(
        'localAddr', 0,
        0,
        network.mojom.IPEndPointSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'remoteAddrList', 8,
        0,
        network.mojom.AddressListSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'tcpConnectedSocketOptions', 16,
        0,
        network.mojom.TCPConnectedSocketOptionsSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'trafficAnnotation', 24,
        0,
        network.mojom.MutableNetworkTrafficAnnotationTagSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'socket', 32,
        0,
        mojo.internal.InterfaceRequest(network.mojom.TCPConnectedSocketPendingReceiver),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'observer', 36,
        0,
        mojo.internal.InterfaceProxy(network.mojom.SocketObserverRemote),
        null,
        true /* nullable */),
    ],
    [[0, 56],]);



goog.provide('network.mojom.NetworkContext_CreateTCPConnectedSocket_Params');

/** @record */
network.mojom.NetworkContext_CreateTCPConnectedSocket_Params = class {
  constructor() {
    /** @export { (network.mojom.IPEndPoint|undefined) } */
    this.localAddr;
    /** @export { !network.mojom.AddressList } */
    this.remoteAddrList;
    /** @export { (network.mojom.TCPConnectedSocketOptions|undefined) } */
    this.tcpConnectedSocketOptions;
    /** @export { !network.mojom.MutableNetworkTrafficAnnotationTag } */
    this.trafficAnnotation;
    /** @export { !network.mojom.TCPConnectedSocketPendingReceiver } */
    this.socket;
    /** @export { (network.mojom.SocketObserverRemote|undefined) } */
    this.observer;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_CreateTCPConnectedSocket_ResponseParamsSpec.$,
    'NetworkContext_CreateTCPConnectedSocket_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'localAddr', 8,
        0,
        network.mojom.IPEndPointSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'peerAddr', 16,
        0,
        network.mojom.IPEndPointSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'receiveStream', 4,
        0,
        mojo.internal.Handle,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'sendStream', 24,
        0,
        mojo.internal.Handle,
        null,
        true /* nullable */),
    ],
    [[0, 40],]);



goog.provide('network.mojom.NetworkContext_CreateTCPConnectedSocket_ResponseParams');

/** @record */
network.mojom.NetworkContext_CreateTCPConnectedSocket_ResponseParams = class {
  constructor() {
    /** @export { !number } */
    this.result;
    /** @export { (MojoHandle|undefined) } */
    this.receiveStream;
    /** @export { (network.mojom.IPEndPoint|undefined) } */
    this.localAddr;
    /** @export { (network.mojom.IPEndPoint|undefined) } */
    this.peerAddr;
    /** @export { (MojoHandle|undefined) } */
    this.sendStream;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_CreateTCPBoundSocket_ParamsSpec.$,
    'NetworkContext_CreateTCPBoundSocket_Params',
    [
      mojo.internal.StructField(
        'localAddr', 0,
        0,
        network.mojom.IPEndPointSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'trafficAnnotation', 8,
        0,
        network.mojom.MutableNetworkTrafficAnnotationTagSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'socket', 16,
        0,
        mojo.internal.InterfaceRequest(network.mojom.TCPBoundSocketPendingReceiver),
        null,
        false /* nullable */),
    ],
    [[0, 32],]);



goog.provide('network.mojom.NetworkContext_CreateTCPBoundSocket_Params');

/** @record */
network.mojom.NetworkContext_CreateTCPBoundSocket_Params = class {
  constructor() {
    /** @export { !network.mojom.IPEndPoint } */
    this.localAddr;
    /** @export { !network.mojom.MutableNetworkTrafficAnnotationTag } */
    this.trafficAnnotation;
    /** @export { !network.mojom.TCPBoundSocketPendingReceiver } */
    this.socket;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_CreateTCPBoundSocket_ResponseParamsSpec.$,
    'NetworkContext_CreateTCPBoundSocket_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'localAddr', 8,
        0,
        network.mojom.IPEndPointSpec.$,
        null,
        true /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.NetworkContext_CreateTCPBoundSocket_ResponseParams');

/** @record */
network.mojom.NetworkContext_CreateTCPBoundSocket_ResponseParams = class {
  constructor() {
    /** @export { !number } */
    this.result;
    /** @export { (network.mojom.IPEndPoint|undefined) } */
    this.localAddr;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_CreateProxyResolvingSocketFactory_ParamsSpec.$,
    'NetworkContext_CreateProxyResolvingSocketFactory_Params',
    [
      mojo.internal.StructField(
        'factory', 0,
        0,
        mojo.internal.InterfaceRequest(network.mojom.ProxyResolvingSocketFactoryPendingReceiver),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_CreateProxyResolvingSocketFactory_Params');

/** @record */
network.mojom.NetworkContext_CreateProxyResolvingSocketFactory_Params = class {
  constructor() {
    /** @export { !network.mojom.ProxyResolvingSocketFactoryPendingReceiver } */
    this.factory;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_LookUpProxyForURL_ParamsSpec.$,
    'NetworkContext_LookUpProxyForURL_Params',
    [
      mojo.internal.StructField(
        'url', 0,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'networkIsolationKey', 8,
        0,
        network.mojom.NetworkIsolationKeySpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'proxyLookupClient', 16,
        0,
        mojo.internal.InterfaceProxy(network.mojom.ProxyLookupClientRemote),
        null,
        false /* nullable */),
    ],
    [[0, 32],]);



goog.provide('network.mojom.NetworkContext_LookUpProxyForURL_Params');

/** @record */
network.mojom.NetworkContext_LookUpProxyForURL_Params = class {
  constructor() {
    /** @export { !url.mojom.Url } */
    this.url;
    /** @export { !network.mojom.NetworkIsolationKey } */
    this.networkIsolationKey;
    /** @export { !network.mojom.ProxyLookupClientRemote } */
    this.proxyLookupClient;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ForceReloadProxyConfig_ParamsSpec.$,
    'NetworkContext_ForceReloadProxyConfig_Params',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_ForceReloadProxyConfig_Params');

/** @record */
network.mojom.NetworkContext_ForceReloadProxyConfig_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ForceReloadProxyConfig_ResponseParamsSpec.$,
    'NetworkContext_ForceReloadProxyConfig_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_ForceReloadProxyConfig_ResponseParams');

/** @record */
network.mojom.NetworkContext_ForceReloadProxyConfig_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ClearBadProxiesCache_ParamsSpec.$,
    'NetworkContext_ClearBadProxiesCache_Params',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_ClearBadProxiesCache_Params');

/** @record */
network.mojom.NetworkContext_ClearBadProxiesCache_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ClearBadProxiesCache_ResponseParamsSpec.$,
    'NetworkContext_ClearBadProxiesCache_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_ClearBadProxiesCache_ResponseParams');

/** @record */
network.mojom.NetworkContext_ClearBadProxiesCache_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_CreateWebSocket_ParamsSpec.$,
    'NetworkContext_CreateWebSocket_Params',
    [
      mojo.internal.StructField(
        'url', 0,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'requestedProtocols', 8,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'siteForCookies', 16,
        0,
        network.mojom.SiteForCookiesSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'isolationInfo', 24,
        0,
        network.mojom.IsolationInfoSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'additionalHeaders', 32,
        0,
        mojo.internal.Array(network.mojom.HttpHeaderSpec.$, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'processId', 40,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'origin', 48,
        0,
        url.mojom.OriginSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'options', 44,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'trafficAnnotation', 56,
        0,
        network.mojom.MutableNetworkTrafficAnnotationTagSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'handshakeClient', 64,
        0,
        mojo.internal.InterfaceProxy(network.mojom.WebSocketHandshakeClientRemote),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'urlLoaderNetworkObserver', 72,
        0,
        mojo.internal.InterfaceProxy(network.mojom.URLLoaderNetworkServiceObserverRemote),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'authHandler', 80,
        0,
        mojo.internal.InterfaceProxy(network.mojom.WebSocketAuthenticationHandlerRemote),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'headerClient', 88,
        0,
        mojo.internal.InterfaceProxy(network.mojom.TrustedHeaderClientRemote),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'throttlingProfileId', 96,
        0,
        mojoBase.mojom.UnguessableTokenSpec.$,
        null,
        true /* nullable */),
    ],
    [[0, 112],]);



goog.provide('network.mojom.NetworkContext_CreateWebSocket_Params');

/** @record */
network.mojom.NetworkContext_CreateWebSocket_Params = class {
  constructor() {
    /** @export { !url.mojom.Url } */
    this.url;
    /** @export { !Array<!string> } */
    this.requestedProtocols;
    /** @export { !network.mojom.SiteForCookies } */
    this.siteForCookies;
    /** @export { !network.mojom.IsolationInfo } */
    this.isolationInfo;
    /** @export { !Array<!network.mojom.HttpHeader> } */
    this.additionalHeaders;
    /** @export { !number } */
    this.processId;
    /** @export { !number } */
    this.options;
    /** @export { !url.mojom.Origin } */
    this.origin;
    /** @export { !network.mojom.MutableNetworkTrafficAnnotationTag } */
    this.trafficAnnotation;
    /** @export { !network.mojom.WebSocketHandshakeClientRemote } */
    this.handshakeClient;
    /** @export { (network.mojom.URLLoaderNetworkServiceObserverRemote|undefined) } */
    this.urlLoaderNetworkObserver;
    /** @export { (network.mojom.WebSocketAuthenticationHandlerRemote|undefined) } */
    this.authHandler;
    /** @export { (network.mojom.TrustedHeaderClientRemote|undefined) } */
    this.headerClient;
    /** @export { (mojoBase.mojom.UnguessableToken|undefined) } */
    this.throttlingProfileId;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_CreateWebTransport_ParamsSpec.$,
    'NetworkContext_CreateWebTransport_Params',
    [
      mojo.internal.StructField(
        'url', 0,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'origin', 8,
        0,
        url.mojom.OriginSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'networkIsolationKey', 16,
        0,
        network.mojom.NetworkIsolationKeySpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'fingerprints', 24,
        0,
        mojo.internal.Array(network.mojom.WebTransportCertificateFingerprintSpec.$, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'handshakeClient', 32,
        0,
        mojo.internal.InterfaceProxy(network.mojom.WebTransportHandshakeClientRemote),
        null,
        false /* nullable */),
    ],
    [[0, 48],]);



goog.provide('network.mojom.NetworkContext_CreateWebTransport_Params');

/** @record */
network.mojom.NetworkContext_CreateWebTransport_Params = class {
  constructor() {
    /** @export { !url.mojom.Url } */
    this.url;
    /** @export { !url.mojom.Origin } */
    this.origin;
    /** @export { !network.mojom.NetworkIsolationKey } */
    this.networkIsolationKey;
    /** @export { !Array<!network.mojom.WebTransportCertificateFingerprint> } */
    this.fingerprints;
    /** @export { !network.mojom.WebTransportHandshakeClientRemote } */
    this.handshakeClient;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_CreateNetLogExporter_ParamsSpec.$,
    'NetworkContext_CreateNetLogExporter_Params',
    [
      mojo.internal.StructField(
        'receiver', 0,
        0,
        mojo.internal.InterfaceRequest(network.mojom.NetLogExporterPendingReceiver),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_CreateNetLogExporter_Params');

/** @record */
network.mojom.NetworkContext_CreateNetLogExporter_Params = class {
  constructor() {
    /** @export { !network.mojom.NetLogExporterPendingReceiver } */
    this.receiver;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_PreconnectSockets_ParamsSpec.$,
    'NetworkContext_PreconnectSockets_Params',
    [
      mojo.internal.StructField(
        'numStreams', 0,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'url', 8,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'allowCredentials', 4,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'networkIsolationKey', 16,
        0,
        network.mojom.NetworkIsolationKeySpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 32],]);



goog.provide('network.mojom.NetworkContext_PreconnectSockets_Params');

/** @record */
network.mojom.NetworkContext_PreconnectSockets_Params = class {
  constructor() {
    /** @export { !number } */
    this.numStreams;
    /** @export { !boolean } */
    this.allowCredentials;
    /** @export { !url.mojom.Url } */
    this.url;
    /** @export { !network.mojom.NetworkIsolationKey } */
    this.networkIsolationKey;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_CreateP2PSocketManager_ParamsSpec.$,
    'NetworkContext_CreateP2PSocketManager_Params',
    [
      mojo.internal.StructField(
        'networkIsolationKey', 0,
        0,
        network.mojom.NetworkIsolationKeySpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'client', 8,
        0,
        mojo.internal.InterfaceProxy(network.mojom.P2PTrustedSocketManagerClientRemote),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'trustedSocketManager', 16,
        0,
        mojo.internal.InterfaceRequest(network.mojom.P2PTrustedSocketManagerPendingReceiver),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'socketManager', 20,
        0,
        mojo.internal.InterfaceRequest(network.mojom.P2PSocketManagerPendingReceiver),
        null,
        false /* nullable */),
    ],
    [[0, 32],]);



goog.provide('network.mojom.NetworkContext_CreateP2PSocketManager_Params');

/** @record */
network.mojom.NetworkContext_CreateP2PSocketManager_Params = class {
  constructor() {
    /** @export { !network.mojom.NetworkIsolationKey } */
    this.networkIsolationKey;
    /** @export { !network.mojom.P2PTrustedSocketManagerClientRemote } */
    this.client;
    /** @export { !network.mojom.P2PTrustedSocketManagerPendingReceiver } */
    this.trustedSocketManager;
    /** @export { !network.mojom.P2PSocketManagerPendingReceiver } */
    this.socketManager;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_CreateMdnsResponder_ParamsSpec.$,
    'NetworkContext_CreateMdnsResponder_Params',
    [
      mojo.internal.StructField(
        'responderReceiver', 0,
        0,
        mojo.internal.InterfaceRequest(network.mojom.MdnsResponderPendingReceiver),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_CreateMdnsResponder_Params');

/** @record */
network.mojom.NetworkContext_CreateMdnsResponder_Params = class {
  constructor() {
    /** @export { !network.mojom.MdnsResponderPendingReceiver } */
    this.responderReceiver;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ResolveHost_ParamsSpec.$,
    'NetworkContext_ResolveHost_Params',
    [
      mojo.internal.StructField(
        'host', 0,
        0,
        network.mojom.HostPortPairSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'networkIsolationKey', 8,
        0,
        network.mojom.NetworkIsolationKeySpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'optionalParameters', 16,
        0,
        network.mojom.ResolveHostParametersSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'responseClient', 24,
        0,
        mojo.internal.InterfaceProxy(network.mojom.ResolveHostClientRemote),
        null,
        false /* nullable */),
    ],
    [[0, 40],]);



goog.provide('network.mojom.NetworkContext_ResolveHost_Params');

/** @record */
network.mojom.NetworkContext_ResolveHost_Params = class {
  constructor() {
    /** @export { !network.mojom.HostPortPair } */
    this.host;
    /** @export { !network.mojom.NetworkIsolationKey } */
    this.networkIsolationKey;
    /** @export { (network.mojom.ResolveHostParameters|undefined) } */
    this.optionalParameters;
    /** @export { !network.mojom.ResolveHostClientRemote } */
    this.responseClient;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_CreateHostResolver_ParamsSpec.$,
    'NetworkContext_CreateHostResolver_Params',
    [
      mojo.internal.StructField(
        'configOverrides', 0,
        0,
        network.mojom.DnsConfigOverridesSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'hostResolver', 8,
        0,
        mojo.internal.InterfaceRequest(network.mojom.HostResolverPendingReceiver),
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.NetworkContext_CreateHostResolver_Params');

/** @record */
network.mojom.NetworkContext_CreateHostResolver_Params = class {
  constructor() {
    /** @export { (network.mojom.DnsConfigOverrides|undefined) } */
    this.configOverrides;
    /** @export { !network.mojom.HostResolverPendingReceiver } */
    this.hostResolver;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_VerifyCertForSignedExchange_ParamsSpec.$,
    'NetworkContext_VerifyCertForSignedExchange_Params',
    [
      mojo.internal.StructField(
        'certificate', 0,
        0,
        network.mojom.X509CertificateSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'url', 8,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'networkIsolationKey', 16,
        0,
        network.mojom.NetworkIsolationKeySpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'ocspResponse', 24,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'sctList', 32,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ],
    [[0, 48],]);



goog.provide('network.mojom.NetworkContext_VerifyCertForSignedExchange_Params');

/** @record */
network.mojom.NetworkContext_VerifyCertForSignedExchange_Params = class {
  constructor() {
    /** @export { !network.mojom.X509Certificate } */
    this.certificate;
    /** @export { !url.mojom.Url } */
    this.url;
    /** @export { !network.mojom.NetworkIsolationKey } */
    this.networkIsolationKey;
    /** @export { !string } */
    this.ocspResponse;
    /** @export { !string } */
    this.sctList;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_VerifyCertForSignedExchange_ResponseParamsSpec.$,
    'NetworkContext_VerifyCertForSignedExchange_ResponseParams',
    [
      mojo.internal.StructField(
        'errorCode', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'cvResult', 8,
        0,
        network.mojom.CertVerifyResultSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'pkpBypassed', 4,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'pinningFailureLog', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ],
    [[0, 32],]);



goog.provide('network.mojom.NetworkContext_VerifyCertForSignedExchange_ResponseParams');

/** @record */
network.mojom.NetworkContext_VerifyCertForSignedExchange_ResponseParams = class {
  constructor() {
    /** @export { !number } */
    this.errorCode;
    /** @export { !boolean } */
    this.pkpBypassed;
    /** @export { !network.mojom.CertVerifyResult } */
    this.cvResult;
    /** @export { !string } */
    this.pinningFailureLog;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_AddHSTS_ParamsSpec.$,
    'NetworkContext_AddHSTS_Params',
    [
      mojo.internal.StructField(
        'host', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'expiry', 8,
        0,
        mojoBase.mojom.TimeSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'includeSubdomains', 16,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 32],]);



goog.provide('network.mojom.NetworkContext_AddHSTS_Params');

/** @record */
network.mojom.NetworkContext_AddHSTS_Params = class {
  constructor() {
    /** @export { !string } */
    this.host;
    /** @export { !mojoBase.mojom.Time } */
    this.expiry;
    /** @export { !boolean } */
    this.includeSubdomains;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_AddHSTS_ResponseParamsSpec.$,
    'NetworkContext_AddHSTS_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_AddHSTS_ResponseParams');

/** @record */
network.mojom.NetworkContext_AddHSTS_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_IsHSTSActiveForHost_ParamsSpec.$,
    'NetworkContext_IsHSTSActiveForHost_Params',
    [
      mojo.internal.StructField(
        'host', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_IsHSTSActiveForHost_Params');

/** @record */
network.mojom.NetworkContext_IsHSTSActiveForHost_Params = class {
  constructor() {
    /** @export { !string } */
    this.host;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_IsHSTSActiveForHost_ResponseParamsSpec.$,
    'NetworkContext_IsHSTSActiveForHost_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_IsHSTSActiveForHost_ResponseParams');

/** @record */
network.mojom.NetworkContext_IsHSTSActiveForHost_ResponseParams = class {
  constructor() {
    /** @export { !boolean } */
    this.result;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_GetHSTSState_ParamsSpec.$,
    'NetworkContext_GetHSTSState_Params',
    [
      mojo.internal.StructField(
        'domain', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_GetHSTSState_Params');

/** @record */
network.mojom.NetworkContext_GetHSTSState_Params = class {
  constructor() {
    /** @export { !string } */
    this.domain;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_GetHSTSState_ResponseParamsSpec.$,
    'NetworkContext_GetHSTSState_ResponseParams',
    [
      mojo.internal.StructField(
        'state', 0,
        0,
        mojoBase.mojom.DictionaryValueSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_GetHSTSState_ResponseParams');

/** @record */
network.mojom.NetworkContext_GetHSTSState_ResponseParams = class {
  constructor() {
    /** @export { !mojoBase.mojom.DictionaryValue } */
    this.state;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_ParamsSpec.$,
    'NetworkContext_SetCorsOriginAccessListsForOrigin_Params',
    [
      mojo.internal.StructField(
        'sourceOrigin', 0,
        0,
        url.mojom.OriginSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'allowPatterns', 8,
        0,
        mojo.internal.Array(network.mojom.CorsOriginPatternSpec.$, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'blockPatterns', 16,
        0,
        mojo.internal.Array(network.mojom.CorsOriginPatternSpec.$, false),
        null,
        false /* nullable */),
    ],
    [[0, 32],]);



goog.provide('network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_Params');

/** @record */
network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_Params = class {
  constructor() {
    /** @export { !url.mojom.Origin } */
    this.sourceOrigin;
    /** @export { !Array<!network.mojom.CorsOriginPattern> } */
    this.allowPatterns;
    /** @export { !Array<!network.mojom.CorsOriginPattern> } */
    this.blockPatterns;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_ResponseParamsSpec.$,
    'NetworkContext_SetCorsOriginAccessListsForOrigin_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_ResponseParams');

/** @record */
network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_DeleteDynamicDataForHost_ParamsSpec.$,
    'NetworkContext_DeleteDynamicDataForHost_Params',
    [
      mojo.internal.StructField(
        'host', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_DeleteDynamicDataForHost_Params');

/** @record */
network.mojom.NetworkContext_DeleteDynamicDataForHost_Params = class {
  constructor() {
    /** @export { !string } */
    this.host;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_DeleteDynamicDataForHost_ResponseParamsSpec.$,
    'NetworkContext_DeleteDynamicDataForHost_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_DeleteDynamicDataForHost_ResponseParams');

/** @record */
network.mojom.NetworkContext_DeleteDynamicDataForHost_ResponseParams = class {
  constructor() {
    /** @export { !boolean } */
    this.result;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_SetSplitAuthCacheByNetworkIsolationKey_ParamsSpec.$,
    'NetworkContext_SetSplitAuthCacheByNetworkIsolationKey_Params',
    [
      mojo.internal.StructField(
        'splitAuthCacheByNetworkIsolationKey', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_SetSplitAuthCacheByNetworkIsolationKey_Params');

/** @record */
network.mojom.NetworkContext_SetSplitAuthCacheByNetworkIsolationKey_Params = class {
  constructor() {
    /** @export { !boolean } */
    this.splitAuthCacheByNetworkIsolationKey;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_ParamsSpec.$,
    'NetworkContext_SaveHttpAuthCacheProxyEntries_Params',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_Params');

/** @record */
network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_ResponseParamsSpec.$,
    'NetworkContext_SaveHttpAuthCacheProxyEntries_ResponseParams',
    [
      mojo.internal.StructField(
        'cacheKey', 0,
        0,
        mojoBase.mojom.UnguessableTokenSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_ResponseParams');

/** @record */
network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_ResponseParams = class {
  constructor() {
    /** @export { !mojoBase.mojom.UnguessableToken } */
    this.cacheKey;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_ParamsSpec.$,
    'NetworkContext_LoadHttpAuthCacheProxyEntries_Params',
    [
      mojo.internal.StructField(
        'cacheKey', 0,
        0,
        mojoBase.mojom.UnguessableTokenSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_Params');

/** @record */
network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_Params = class {
  constructor() {
    /** @export { !mojoBase.mojom.UnguessableToken } */
    this.cacheKey;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_ResponseParamsSpec.$,
    'NetworkContext_LoadHttpAuthCacheProxyEntries_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_ResponseParams');

/** @record */
network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_AddAuthCacheEntry_ParamsSpec.$,
    'NetworkContext_AddAuthCacheEntry_Params',
    [
      mojo.internal.StructField(
        'challenge', 0,
        0,
        network.mojom.AuthChallengeInfoSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'networkIsolationKey', 8,
        0,
        network.mojom.NetworkIsolationKeySpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'credentials', 16,
        0,
        network.mojom.AuthCredentialsSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 32],]);



goog.provide('network.mojom.NetworkContext_AddAuthCacheEntry_Params');

/** @record */
network.mojom.NetworkContext_AddAuthCacheEntry_Params = class {
  constructor() {
    /** @export { !network.mojom.AuthChallengeInfo } */
    this.challenge;
    /** @export { !network.mojom.NetworkIsolationKey } */
    this.networkIsolationKey;
    /** @export { !network.mojom.AuthCredentials } */
    this.credentials;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_AddAuthCacheEntry_ResponseParamsSpec.$,
    'NetworkContext_AddAuthCacheEntry_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_AddAuthCacheEntry_ResponseParams');

/** @record */
network.mojom.NetworkContext_AddAuthCacheEntry_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_SetCorsNonWildcardRequestHeadersSupport_ParamsSpec.$,
    'NetworkContext_SetCorsNonWildcardRequestHeadersSupport_Params',
    [
      mojo.internal.StructField(
        'value', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_SetCorsNonWildcardRequestHeadersSupport_Params');

/** @record */
network.mojom.NetworkContext_SetCorsNonWildcardRequestHeadersSupport_Params = class {
  constructor() {
    /** @export { !boolean } */
    this.value;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_LookupServerBasicAuthCredentials_ParamsSpec.$,
    'NetworkContext_LookupServerBasicAuthCredentials_Params',
    [
      mojo.internal.StructField(
        'url', 0,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'networkIsolationKey', 8,
        0,
        network.mojom.NetworkIsolationKeySpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.NetworkContext_LookupServerBasicAuthCredentials_Params');

/** @record */
network.mojom.NetworkContext_LookupServerBasicAuthCredentials_Params = class {
  constructor() {
    /** @export { !url.mojom.Url } */
    this.url;
    /** @export { !network.mojom.NetworkIsolationKey } */
    this.networkIsolationKey;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_LookupServerBasicAuthCredentials_ResponseParamsSpec.$,
    'NetworkContext_LookupServerBasicAuthCredentials_ResponseParams',
    [
      mojo.internal.StructField(
        'credentials', 0,
        0,
        network.mojom.AuthCredentialsSpec.$,
        null,
        true /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_LookupServerBasicAuthCredentials_ResponseParams');

/** @record */
network.mojom.NetworkContext_LookupServerBasicAuthCredentials_ResponseParams = class {
  constructor() {
    /** @export { (network.mojom.AuthCredentials|undefined) } */
    this.credentials;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_ParamsSpec.$,
    'NetworkContext_EnableStaticKeyPinningForTesting_Params',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_Params');

/** @record */
network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_ResponseParamsSpec.$,
    'NetworkContext_EnableStaticKeyPinningForTesting_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_ResponseParams');

/** @record */
network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_VerifyCertificateForTesting_ParamsSpec.$,
    'NetworkContext_VerifyCertificateForTesting_Params',
    [
      mojo.internal.StructField(
        'certificate', 0,
        0,
        network.mojom.X509CertificateSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'hostname', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'ocspResponse', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'sctList', 24,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ],
    [[0, 40],]);



goog.provide('network.mojom.NetworkContext_VerifyCertificateForTesting_Params');

/** @record */
network.mojom.NetworkContext_VerifyCertificateForTesting_Params = class {
  constructor() {
    /** @export { !network.mojom.X509Certificate } */
    this.certificate;
    /** @export { !string } */
    this.hostname;
    /** @export { !string } */
    this.ocspResponse;
    /** @export { !string } */
    this.sctList;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_VerifyCertificateForTesting_ResponseParamsSpec.$,
    'NetworkContext_VerifyCertificateForTesting_ResponseParams',
    [
      mojo.internal.StructField(
        'errorCode', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_VerifyCertificateForTesting_ResponseParams');

/** @record */
network.mojom.NetworkContext_VerifyCertificateForTesting_ResponseParams = class {
  constructor() {
    /** @export { !number } */
    this.errorCode;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_ParamsSpec.$,
    'NetworkContext_AddDomainReliabilityContextForTesting_Params',
    [
      mojo.internal.StructField(
        'origin', 0,
        0,
        url.mojom.OriginSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'uploadUrl', 8,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_Params');

/** @record */
network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_Params = class {
  constructor() {
    /** @export { !url.mojom.Origin } */
    this.origin;
    /** @export { !url.mojom.Url } */
    this.uploadUrl;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_ResponseParamsSpec.$,
    'NetworkContext_AddDomainReliabilityContextForTesting_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_ResponseParams');

/** @record */
network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_ParamsSpec.$,
    'NetworkContext_ForceDomainReliabilityUploadsForTesting_Params',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_Params');

/** @record */
network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_ResponseParamsSpec.$,
    'NetworkContext_ForceDomainReliabilityUploadsForTesting_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_ResponseParams');

/** @record */
network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_SetCTLogListAlwaysTimelyForTesting_ParamsSpec.$,
    'NetworkContext_SetCTLogListAlwaysTimelyForTesting_Params',
    [
    ],
    [[0, 8],]);



goog.provide('network.mojom.NetworkContext_SetCTLogListAlwaysTimelyForTesting_Params');

/** @record */
network.mojom.NetworkContext_SetCTLogListAlwaysTimelyForTesting_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_SetSCTAuditingMode_ParamsSpec.$,
    'NetworkContext_SetSCTAuditingMode_Params',
    [
      mojo.internal.StructField(
        'mode', 0,
        0,
        network.mojom.SCTAuditingModeSpec.$,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_SetSCTAuditingMode_Params');

/** @record */
network.mojom.NetworkContext_SetSCTAuditingMode_Params = class {
  constructor() {
    /** @export { !network.mojom.SCTAuditingMode } */
    this.mode;
  }
};




mojo.internal.Struct(
    network.mojom.NetworkContext_AddReportingApiObserver_ParamsSpec.$,
    'NetworkContext_AddReportingApiObserver_Params',
    [
      mojo.internal.StructField(
        'observer', 0,
        0,
        mojo.internal.InterfaceProxy(network.mojom.ReportingApiObserverRemote),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('network.mojom.NetworkContext_AddReportingApiObserver_Params');

/** @record */
network.mojom.NetworkContext_AddReportingApiObserver_Params = class {
  constructor() {
    /** @export { !network.mojom.ReportingApiObserverRemote } */
    this.observer;
  }
};


