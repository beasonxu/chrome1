// services/network/public/mojom/network_param.mojom.m.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import {mojo} from '../../../../mojo/public/js/bindings.js';

import {
  SchemeHostPort as url_mojom_SchemeHostPort,
  SchemeHostPortSpec as url_mojom_SchemeHostPortSpec
} from '../../../../url/mojom/scheme_host_port.mojom.m.js';



/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const AuthChallengeInfoSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const AuthCredentialsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const CertVerifyResultSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const HttpResponseHeadersSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const HttpVersionSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const HostPortPairSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const ProxyServerSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const ResolveErrorInfoSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SSLCertRequestInfoSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SSLInfoSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const X509CertificateSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    AuthChallengeInfoSpec.$,
    'AuthChallengeInfo',
    [
      mojo.internal.StructField(
        'isProxy', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'challenger', 8,
        0,
        url_mojom_SchemeHostPortSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'scheme', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'realm', 24,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'challenge', 32,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'path', 40,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 56],]);



/**
 * @record
 */
export class AuthChallengeInfo {
  constructor() {
    /** @type { !boolean } */
    this.isProxy;
    /** @type { !url_mojom_SchemeHostPort } */
    this.challenger;
    /** @type { !string } */
    this.scheme;
    /** @type { !string } */
    this.realm;
    /** @type { !string } */
    this.challenge;
    /** @type { !string } */
    this.path;
  }
}



mojo.internal.Struct(
    AuthCredentialsSpec.$,
    'AuthCredentials',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class AuthCredentials {
  constructor() {
  }
}



mojo.internal.Struct(
    CertVerifyResultSpec.$,
    'CertVerifyResult',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class CertVerifyResult {
  constructor() {
  }
}



mojo.internal.Struct(
    HttpResponseHeadersSpec.$,
    'HttpResponseHeaders',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class HttpResponseHeaders {
  constructor() {
  }
}



mojo.internal.Struct(
    HttpVersionSpec.$,
    'HttpVersion',
    [
      mojo.internal.StructField(
        'majorValue', 0,
        0,
        mojo.internal.Uint16,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'minorValue', 2,
        0,
        mojo.internal.Uint16,
        0,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class HttpVersion {
  constructor() {
    /** @type { !number } */
    this.majorValue;
    /** @type { !number } */
    this.minorValue;
  }
}



mojo.internal.Struct(
    HostPortPairSpec.$,
    'HostPortPair',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class HostPortPair {
  constructor() {
  }
}



mojo.internal.Struct(
    ProxyServerSpec.$,
    'ProxyServer',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class ProxyServer {
  constructor() {
  }
}



mojo.internal.Struct(
    ResolveErrorInfoSpec.$,
    'ResolveErrorInfo',
    [
      mojo.internal.StructField(
        'error', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'isSecureNetworkError', 4,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class ResolveErrorInfo {
  constructor() {
    /** @type { !number } */
    this.error;
    /** @type { !boolean } */
    this.isSecureNetworkError;
  }
}



mojo.internal.Struct(
    SSLCertRequestInfoSpec.$,
    'SSLCertRequestInfo',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class SSLCertRequestInfo {
  constructor() {
  }
}



mojo.internal.Struct(
    SSLInfoSpec.$,
    'SSLInfo',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class SSLInfo {
  constructor() {
  }
}



mojo.internal.Struct(
    X509CertificateSpec.$,
    'X509Certificate',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class X509Certificate {
  constructor() {
  }
}

