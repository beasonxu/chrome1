// services/network/public/mojom/url_response_head.mojom-lite.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';


mojo.internal.exportModule('network.mojom');







/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.URLResponseHeadSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    network.mojom.URLResponseHeadSpec.$,
    'URLResponseHead',
    [
      mojo.internal.StructField(
        'requestTime', 0,
        0,
        mojoBase.mojom.TimeSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'responseTime', 8,
        0,
        mojoBase.mojom.TimeSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'headers', 16,
        0,
        network.mojom.HttpResponseHeadersSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'mimeType', 24,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'charset', 32,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'ctPolicyCompliance', 40,
        0,
        network.mojom.CTPolicyComplianceSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'contentLength', 48,
        0,
        mojo.internal.Int64,
        BigInt('-1'),
        false /* nullable */),
      mojo.internal.StructField(
        'encodedDataLength', 56,
        0,
        mojo.internal.Int64,
        BigInt('-1'),
        false /* nullable */),
      mojo.internal.StructField(
        'encodedBodyLength', 64,
        0,
        mojo.internal.Int64,
        BigInt('-1'),
        false /* nullable */),
      mojo.internal.StructField(
        'networkAccessed', 44,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'loadTiming', 72,
        0,
        network.mojom.LoadTimingInfoSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'emittedExtraInfo', 44,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'wasFetchedViaSpdy', 44,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'wasAlpnNegotiated', 44,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'wasAlternateProtocolAvailable', 44,
        4,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'connectionInfo', 80,
        0,
        network.mojom.ConnectionInfoSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'alpnNegotiatedProtocol', 88,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'remoteEndpoint', 96,
        0,
        network.mojom.IPEndPointSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'clientAddressSpace', 84,
        0,
        network.mojom.IPAddressSpaceSpec.$,
        network.mojom.IPAddressSpace.kUnknown,
        false /* nullable */),
      mojo.internal.StructField(
        'responseAddressSpace', 104,
        0,
        network.mojom.IPAddressSpaceSpec.$,
        network.mojom.IPAddressSpace.kUnknown,
        false /* nullable */),
      mojo.internal.StructField(
        'isValidated', 44,
        5,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'wasFetchedViaCache', 44,
        6,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'proxyServer', 112,
        0,
        proxyResolver.mojom.ProxyServerSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'wasFetchedViaServiceWorker', 44,
        7,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'serviceWorkerResponseSource', 108,
        0,
        network.mojom.FetchResponseSourceSpec.$,
        network.mojom.FetchResponseSource.kUnspecified,
        false /* nullable */),
      mojo.internal.StructField(
        'urlListViaServiceWorker', 120,
        0,
        mojo.internal.Array(url.mojom.UrlSpec.$, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'responseType', 128,
        0,
        network.mojom.FetchResponseTypeSpec.$,
        network.mojom.FetchResponseType.kDefault,
        false /* nullable */),
      mojo.internal.StructField(
        'padding', 136,
        0,
        mojo.internal.Int64,
        BigInt('0'),
        false /* nullable */),
      mojo.internal.StructField(
        'cacheStorageCacheName', 144,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'certStatus', 132,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'sslInfo', 152,
        0,
        network.mojom.SSLInfoSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'corsExposedHeaderNames', 160,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'didServiceWorkerNavigationPreload', 45,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'shouldReportCorbBlocking', 45,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'asyncRevalidationRequested', 45,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'didMimeSniff', 45,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'isSignedExchangeInnerResponse', 45,
        4,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'wasInPrefetchCache', 45,
        5,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'wasCookieInRequest', 45,
        6,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'interceptedByPlugin', 45,
        7,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'isLegacyTlsVersion', 46,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'hasRangeRequested', 46,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'timingAllowPassed', 46,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'authChallengeInfo', 168,
        0,
        network.mojom.AuthChallengeInfoSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'requestStart', 176,
        0,
        mojoBase.mojom.TimeTicksSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'responseStart', 184,
        0,
        mojoBase.mojom.TimeTicksSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'parsedHeaders', 192,
        0,
        network.mojom.ParsedHeadersSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'recursivePrefetchToken', 200,
        0,
        mojoBase.mojom.UnguessableTokenSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'dnsAliases', 208,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'webBundleUrl', 216,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'hasAuthorizationCoveredByWildcardOnPreflight', 46,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'requestIncludeCredentials', 46,
        4,
        mojo.internal.Bool,
        true,
        false /* nullable */),
      mojo.internal.StructField(
        'hasPartitionedCookie', 46,
        5,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 232],]);





/** @record */
network.mojom.URLResponseHead = class {
  constructor() {
    /** @export { !mojoBase.mojom.Time } */
    this.requestTime;
    /** @export { !mojoBase.mojom.Time } */
    this.responseTime;
    /** @export { !network.mojom.HttpResponseHeaders } */
    this.headers;
    /** @export { !string } */
    this.mimeType;
    /** @export { !string } */
    this.charset;
    /** @export { !network.mojom.CTPolicyCompliance } */
    this.ctPolicyCompliance;
    /** @export { !boolean } */
    this.networkAccessed;
    /** @export { !boolean } */
    this.emittedExtraInfo;
    /** @export { !boolean } */
    this.wasFetchedViaSpdy;
    /** @export { !boolean } */
    this.wasAlpnNegotiated;
    /** @export { !boolean } */
    this.wasAlternateProtocolAvailable;
    /** @export { !boolean } */
    this.isValidated;
    /** @export { !boolean } */
    this.wasFetchedViaCache;
    /** @export { !boolean } */
    this.wasFetchedViaServiceWorker;
    /** @export { !boolean } */
    this.didServiceWorkerNavigationPreload;
    /** @export { !boolean } */
    this.shouldReportCorbBlocking;
    /** @export { !boolean } */
    this.asyncRevalidationRequested;
    /** @export { !boolean } */
    this.didMimeSniff;
    /** @export { !boolean } */
    this.isSignedExchangeInnerResponse;
    /** @export { !boolean } */
    this.wasInPrefetchCache;
    /** @export { !boolean } */
    this.wasCookieInRequest;
    /** @export { !boolean } */
    this.interceptedByPlugin;
    /** @export { !boolean } */
    this.isLegacyTlsVersion;
    /** @export { !boolean } */
    this.hasRangeRequested;
    /** @export { !boolean } */
    this.timingAllowPassed;
    /** @export { !boolean } */
    this.hasAuthorizationCoveredByWildcardOnPreflight;
    /** @export { !boolean } */
    this.requestIncludeCredentials;
    /** @export { !boolean } */
    this.hasPartitionedCookie;
    /** @export { !bigint } */
    this.contentLength;
    /** @export { !bigint } */
    this.encodedDataLength;
    /** @export { !bigint } */
    this.encodedBodyLength;
    /** @export { !network.mojom.LoadTimingInfo } */
    this.loadTiming;
    /** @export { !network.mojom.ConnectionInfo } */
    this.connectionInfo;
    /** @export { !network.mojom.IPAddressSpace } */
    this.clientAddressSpace;
    /** @export { !string } */
    this.alpnNegotiatedProtocol;
    /** @export { !network.mojom.IPEndPoint } */
    this.remoteEndpoint;
    /** @export { !network.mojom.IPAddressSpace } */
    this.responseAddressSpace;
    /** @export { !network.mojom.FetchResponseSource } */
    this.serviceWorkerResponseSource;
    /** @export { !proxyResolver.mojom.ProxyServer } */
    this.proxyServer;
    /** @export { !Array<!url.mojom.Url> } */
    this.urlListViaServiceWorker;
    /** @export { !network.mojom.FetchResponseType } */
    this.responseType;
    /** @export { !number } */
    this.certStatus;
    /** @export { !bigint } */
    this.padding;
    /** @export { !string } */
    this.cacheStorageCacheName;
    /** @export { (network.mojom.SSLInfo|undefined) } */
    this.sslInfo;
    /** @export { !Array<!string> } */
    this.corsExposedHeaderNames;
    /** @export { (network.mojom.AuthChallengeInfo|undefined) } */
    this.authChallengeInfo;
    /** @export { !mojoBase.mojom.TimeTicks } */
    this.requestStart;
    /** @export { !mojoBase.mojom.TimeTicks } */
    this.responseStart;
    /** @export { (network.mojom.ParsedHeaders|undefined) } */
    this.parsedHeaders;
    /** @export { (mojoBase.mojom.UnguessableToken|undefined) } */
    this.recursivePrefetchToken;
    /** @export { !Array<!string> } */
    this.dnsAliases;
    /** @export { !url.mojom.Url } */
    this.webBundleUrl;
  }
};


