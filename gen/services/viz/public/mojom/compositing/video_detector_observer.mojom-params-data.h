// services/viz/public/mojom/compositing/video_detector_observer.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SERVICES_VIZ_PUBLIC_MOJOM_COMPOSITING_VIDEO_DETECTOR_OBSERVER_MOJOM_PARAMS_DATA_H_
#define SERVICES_VIZ_PUBLIC_MOJOM_COMPOSITING_VIDEO_DETECTOR_OBSERVER_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace viz {
namespace mojom {
namespace internal {

class ValidationContext;
class  VideoDetectorObserver_OnVideoActivityStarted_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<VideoDetectorObserver_OnVideoActivityStarted_Params_Data>;

  VideoDetectorObserver_OnVideoActivityStarted_Params_Data();
  ~VideoDetectorObserver_OnVideoActivityStarted_Params_Data() = delete;
};
static_assert(sizeof(VideoDetectorObserver_OnVideoActivityStarted_Params_Data) == 8,
              "Bad sizeof(VideoDetectorObserver_OnVideoActivityStarted_Params_Data)");
class  VideoDetectorObserver_OnVideoActivityEnded_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<VideoDetectorObserver_OnVideoActivityEnded_Params_Data>;

  VideoDetectorObserver_OnVideoActivityEnded_Params_Data();
  ~VideoDetectorObserver_OnVideoActivityEnded_Params_Data() = delete;
};
static_assert(sizeof(VideoDetectorObserver_OnVideoActivityEnded_Params_Data) == 8,
              "Bad sizeof(VideoDetectorObserver_OnVideoActivityEnded_Params_Data)");

}  // namespace internal


class VideoDetectorObserver_OnVideoActivityStarted_ParamsDataView {
 public:
  VideoDetectorObserver_OnVideoActivityStarted_ParamsDataView() = default;

  VideoDetectorObserver_OnVideoActivityStarted_ParamsDataView(
      internal::VideoDetectorObserver_OnVideoActivityStarted_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::VideoDetectorObserver_OnVideoActivityStarted_Params_Data* data_ = nullptr;
};



class VideoDetectorObserver_OnVideoActivityEnded_ParamsDataView {
 public:
  VideoDetectorObserver_OnVideoActivityEnded_ParamsDataView() = default;

  VideoDetectorObserver_OnVideoActivityEnded_ParamsDataView(
      internal::VideoDetectorObserver_OnVideoActivityEnded_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::VideoDetectorObserver_OnVideoActivityEnded_Params_Data* data_ = nullptr;
};





}  // namespace mojom
}  // namespace viz

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // SERVICES_VIZ_PUBLIC_MOJOM_COMPOSITING_VIDEO_DETECTOR_OBSERVER_MOJOM_PARAMS_DATA_H_