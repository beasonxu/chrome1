// ui/gfx/mojom/delegated_ink_point_renderer.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef UI_GFX_MOJOM_DELEGATED_INK_POINT_RENDERER_MOJOM_PARAMS_DATA_H_
#define UI_GFX_MOJOM_DELEGATED_INK_POINT_RENDERER_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace gfx {
namespace mojom {
namespace internal {

class ValidationContext;
class  DelegatedInkPointRenderer_StoreDelegatedInkPoint_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::gfx::mojom::internal::DelegatedInkPoint_Data> point;

 private:
  friend class mojo::internal::MessageFragment<DelegatedInkPointRenderer_StoreDelegatedInkPoint_Params_Data>;

  DelegatedInkPointRenderer_StoreDelegatedInkPoint_Params_Data();
  ~DelegatedInkPointRenderer_StoreDelegatedInkPoint_Params_Data() = delete;
};
static_assert(sizeof(DelegatedInkPointRenderer_StoreDelegatedInkPoint_Params_Data) == 16,
              "Bad sizeof(DelegatedInkPointRenderer_StoreDelegatedInkPoint_Params_Data)");
class  DelegatedInkPointRenderer_ResetPrediction_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<DelegatedInkPointRenderer_ResetPrediction_Params_Data>;

  DelegatedInkPointRenderer_ResetPrediction_Params_Data();
  ~DelegatedInkPointRenderer_ResetPrediction_Params_Data() = delete;
};
static_assert(sizeof(DelegatedInkPointRenderer_ResetPrediction_Params_Data) == 8,
              "Bad sizeof(DelegatedInkPointRenderer_ResetPrediction_Params_Data)");

}  // namespace internal


class DelegatedInkPointRenderer_StoreDelegatedInkPoint_ParamsDataView {
 public:
  DelegatedInkPointRenderer_StoreDelegatedInkPoint_ParamsDataView() = default;

  DelegatedInkPointRenderer_StoreDelegatedInkPoint_ParamsDataView(
      internal::DelegatedInkPointRenderer_StoreDelegatedInkPoint_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetPointDataView(
      ::gfx::mojom::DelegatedInkPointDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadPoint(UserType* output) {
    
    auto* pointer = data_->point.Get();
    return mojo::internal::Deserialize<::gfx::mojom::DelegatedInkPointDataView>(
        pointer, output, message_);
  }
 private:
  internal::DelegatedInkPointRenderer_StoreDelegatedInkPoint_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class DelegatedInkPointRenderer_ResetPrediction_ParamsDataView {
 public:
  DelegatedInkPointRenderer_ResetPrediction_ParamsDataView() = default;

  DelegatedInkPointRenderer_ResetPrediction_ParamsDataView(
      internal::DelegatedInkPointRenderer_ResetPrediction_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::DelegatedInkPointRenderer_ResetPrediction_Params_Data* data_ = nullptr;
};


inline void DelegatedInkPointRenderer_StoreDelegatedInkPoint_ParamsDataView::GetPointDataView(
    ::gfx::mojom::DelegatedInkPointDataView* output) {
  auto pointer = data_->point.Get();
  *output = ::gfx::mojom::DelegatedInkPointDataView(pointer, message_);
}



}  // namespace mojom
}  // namespace gfx

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // UI_GFX_MOJOM_DELEGATED_INK_POINT_RENDERER_MOJOM_PARAMS_DATA_H_