// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/modules/stack_unwinder/StackUnwinderModuleProvider

#ifndef org_chromium_chrome_modules_stack_unwinder_StackUnwinderModuleProvider_JNI
#define org_chromium_chrome_modules_stack_unwinder_StackUnwinderModuleProvider_JNI

#include <jni.h>

#include "../../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider[];
const char kClassPath_org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider[] =
    "org/chromium/chrome/modules/stack_unwinder/StackUnwinderModuleProvider";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider_clazz(nullptr);
#ifndef org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider_clazz_defined
#define org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider_clazz_defined
inline jclass org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider,
      &g_org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.

static std::atomic<jmethodID>
    g_org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider_isModuleInstalled(nullptr);
static jboolean Java_StackUnwinderModuleProvider_isModuleInstalled(JNIEnv* env) {
  jclass clazz = org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "isModuleInstalled",
          "()Z",
&g_org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider_isModuleInstalled);

  jboolean ret =
      env->CallStaticBooleanMethod(clazz,
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider_installModule(nullptr);
static void Java_StackUnwinderModuleProvider_installModule(JNIEnv* env) {
  jclass clazz = org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "installModule",
          "()V",
          &g_org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider_installModule);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider_ensureNativeLoaded(nullptr);
static void Java_StackUnwinderModuleProvider_ensureNativeLoaded(JNIEnv* env) {
  jclass clazz = org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "ensureNativeLoaded",
          "()V",
&g_org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider_ensureNativeLoaded);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider_getCreateMemoryRegionsMapFunction(nullptr);
static jlong Java_StackUnwinderModuleProvider_getCreateMemoryRegionsMapFunction(JNIEnv* env) {
  jclass clazz = org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "getCreateMemoryRegionsMapFunction",
          "()J",
&g_org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider_getCreateMemoryRegionsMapFunction);

  jlong ret =
      env->CallStaticLongMethod(clazz,
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider_getCreateNativeUnwinderFunction(nullptr);
static jlong Java_StackUnwinderModuleProvider_getCreateNativeUnwinderFunction(JNIEnv* env) {
  jclass clazz = org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "getCreateNativeUnwinderFunction",
          "()J",
&g_org_chromium_chrome_modules_stack_1unwinder_StackUnwinderModuleProvider_getCreateNativeUnwinderFunction);

  jlong ret =
      env->CallStaticLongMethod(clazz,
          call_context.base.method_id);
  return ret;
}

#endif  // org_chromium_chrome_modules_stack_unwinder_StackUnwinderModuleProvider_JNI
