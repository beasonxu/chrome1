// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/historyreport/HistoryReportJniBridge

#ifndef org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_JNI
#define org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_historyreport_HistoryReportJniBridge[];
const char kClassPath_org_chromium_chrome_browser_historyreport_HistoryReportJniBridge[] =
    "org/chromium/chrome/browser/historyreport/HistoryReportJniBridge";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_clazz(nullptr);
#ifndef org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_clazz_defined
#define org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_clazz_defined
inline jclass org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_historyreport_HistoryReportJniBridge,
      &g_org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace history_report {

static jlong JNI_HistoryReportJniBridge_Init(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& caller);

JNI_GENERATOR_EXPORT jlong Java_J_N_MTybPOFS(
    JNIEnv* env,
    jclass jcaller,
    jobject caller) {
  return JNI_HistoryReportJniBridge_Init(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT jlong Java_J_N_Mao2fV_1W(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeHistoryReportJniBridge,
    jobject caller,
    jlong seqNoLowerBound) {
  HistoryReportJniBridge* native =
      reinterpret_cast<HistoryReportJniBridge*>(nativeHistoryReportJniBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "TrimDeltaFile", 0);
  return native->TrimDeltaFile(env, base::android::JavaParamRef<jobject>(env, caller),
      seqNoLowerBound);
}

JNI_GENERATOR_EXPORT jobjectArray Java_J_N_MRHqDjPT(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeHistoryReportJniBridge,
    jobject caller,
    jlong lastSeqNo,
    jint limit) {
  HistoryReportJniBridge* native =
      reinterpret_cast<HistoryReportJniBridge*>(nativeHistoryReportJniBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "Query", NULL);
  return native->Query(env, base::android::JavaParamRef<jobject>(env, caller), lastSeqNo,
      limit).Release();
}

JNI_GENERATOR_EXPORT jobjectArray Java_J_N_MLhU72Je(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeHistoryReportJniBridge,
    jobject caller,
    jint batchSize) {
  HistoryReportJniBridge* native =
      reinterpret_cast<HistoryReportJniBridge*>(nativeHistoryReportJniBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetUsageReportsBatch", NULL);
  return native->GetUsageReportsBatch(env, base::android::JavaParamRef<jobject>(env, caller),
      batchSize).Release();
}

JNI_GENERATOR_EXPORT void Java_J_N_MilENC5v(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeHistoryReportJniBridge,
    jobject caller,
    jobjectArray reportIds) {
  HistoryReportJniBridge* native =
      reinterpret_cast<HistoryReportJniBridge*>(nativeHistoryReportJniBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "RemoveUsageReports");
  return native->RemoveUsageReports(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jobjectArray>(env, reportIds));
}

JNI_GENERATOR_EXPORT void Java_J_N_M6zbYlIM(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeHistoryReportJniBridge,
    jobject caller) {
  HistoryReportJniBridge* native =
      reinterpret_cast<HistoryReportJniBridge*>(nativeHistoryReportJniBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "ClearUsageReports");
  return native->ClearUsageReports(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT jboolean Java_J_N_MgsI50d_1(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeHistoryReportJniBridge,
    jobject caller) {
  HistoryReportJniBridge* native =
      reinterpret_cast<HistoryReportJniBridge*>(nativeHistoryReportJniBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "AddHistoricVisitsToUsageReportsBuffer", false);
  return native->AddHistoricVisitsToUsageReportsBuffer(env,
      base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT jstring Java_J_N_MQUkZY_1W(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeHistoryReportJniBridge,
    jobject caller) {
  HistoryReportJniBridge* native =
      reinterpret_cast<HistoryReportJniBridge*>(nativeHistoryReportJniBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "Dump", NULL);
  return native->Dump(env, base::android::JavaParamRef<jobject>(env, caller)).Release();
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_createDeltaFileEntriesArray(nullptr);
static base::android::ScopedJavaLocalRef<jobjectArray>
    Java_HistoryReportJniBridge_createDeltaFileEntriesArray(JNIEnv* env, JniIntWrapper size) {
  jclass clazz = org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createDeltaFileEntriesArray",
          "(I)[Lorg/chromium/chrome/browser/historyreport/DeltaFileEntry;",
&g_org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_createDeltaFileEntriesArray);

  jobjectArray ret =
      static_cast<jobjectArray>(env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, as_jint(size)));
  return base::android::ScopedJavaLocalRef<jobjectArray>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_setDeltaFileEntry(nullptr);
static void Java_HistoryReportJniBridge_setDeltaFileEntry(JNIEnv* env, const
    base::android::JavaRef<jobjectArray>& entries,
    JniIntWrapper position,
    jlong seqNo,
    const base::android::JavaRef<jstring>& type,
    const base::android::JavaRef<jstring>& id,
    const base::android::JavaRef<jstring>& url,
    JniIntWrapper score,
    const base::android::JavaRef<jstring>& title,
    const base::android::JavaRef<jstring>& indexedUrl) {
  jclass clazz = org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "setDeltaFileEntry",
"([Lorg/chromium/chrome/browser/historyreport/DeltaFileEntry;IJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V",
          &g_org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_setDeltaFileEntry);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, entries.obj(), as_jint(position), seqNo, type.obj(),
              id.obj(), url.obj(), as_jint(score), title.obj(), indexedUrl.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_createUsageReportsArray(nullptr);
static base::android::ScopedJavaLocalRef<jobjectArray>
    Java_HistoryReportJniBridge_createUsageReportsArray(JNIEnv* env, JniIntWrapper size) {
  jclass clazz = org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createUsageReportsArray",
          "(I)[Lorg/chromium/chrome/browser/historyreport/UsageReport;",
&g_org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_createUsageReportsArray);

  jobjectArray ret =
      static_cast<jobjectArray>(env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, as_jint(size)));
  return base::android::ScopedJavaLocalRef<jobjectArray>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_setUsageReport(nullptr);
static void Java_HistoryReportJniBridge_setUsageReport(JNIEnv* env, const
    base::android::JavaRef<jobjectArray>& reports,
    JniIntWrapper position,
    const base::android::JavaRef<jstring>& reportId,
    const base::android::JavaRef<jstring>& pageId,
    jlong timestampMs,
    jboolean typedVisit) {
  jclass clazz = org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "setUsageReport",
"([Lorg/chromium/chrome/browser/historyreport/UsageReport;ILjava/lang/String;Ljava/lang/String;JZ)V",
          &g_org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_setUsageReport);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, reports.obj(), as_jint(position), reportId.obj(),
              pageId.obj(), timestampMs, typedVisit);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_onDataChanged(nullptr);
static void Java_HistoryReportJniBridge_onDataChanged(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onDataChanged",
          "()V",
          &g_org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_onDataChanged);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_onDataCleared(nullptr);
static void Java_HistoryReportJniBridge_onDataCleared(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onDataCleared",
          "()V",
          &g_org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_onDataCleared);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_startReportingTask(nullptr);
static void Java_HistoryReportJniBridge_startReportingTask(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "startReportingTask",
          "()V",
          &g_org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_startReportingTask);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_stopReportingTask(nullptr);
static void Java_HistoryReportJniBridge_stopReportingTask(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "stopReportingTask",
          "()V",
          &g_org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_stopReportingTask);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

}  // namespace history_report

#endif  // org_chromium_chrome_browser_historyreport_HistoryReportJniBridge_JNI
