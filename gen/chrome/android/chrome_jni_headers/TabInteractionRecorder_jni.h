// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/customtabs/features/TabInteractionRecorder

#ifndef org_chromium_chrome_browser_customtabs_features_TabInteractionRecorder_JNI
#define org_chromium_chrome_browser_customtabs_features_TabInteractionRecorder_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_customtabs_features_TabInteractionRecorder[];
const char kClassPath_org_chromium_chrome_browser_customtabs_features_TabInteractionRecorder[] =
    "org/chromium/chrome/browser/customtabs/features/TabInteractionRecorder";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_customtabs_features_TabInteractionRecorder_clazz(nullptr);
#ifndef org_chromium_chrome_browser_customtabs_features_TabInteractionRecorder_clazz_defined
#define org_chromium_chrome_browser_customtabs_features_TabInteractionRecorder_clazz_defined
inline jclass org_chromium_chrome_browser_customtabs_features_TabInteractionRecorder_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_customtabs_features_TabInteractionRecorder,
      &g_org_chromium_chrome_browser_customtabs_features_TabInteractionRecorder_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace customtabs {

static base::android::ScopedJavaLocalRef<jobject> JNI_TabInteractionRecorder_GetFromTab(JNIEnv* env,
    const base::android::JavaParamRef<jobject>& tab);

JNI_GENERATOR_EXPORT jobject Java_J_N_MJqYRCCN(
    JNIEnv* env,
    jclass jcaller,
    jobject tab) {
  return JNI_TabInteractionRecorder_GetFromTab(env, base::android::JavaParamRef<jobject>(env,
      tab)).Release();
}

static base::android::ScopedJavaLocalRef<jobject> JNI_TabInteractionRecorder_CreateForTab(JNIEnv*
    env, const base::android::JavaParamRef<jobject>& tab);

JNI_GENERATOR_EXPORT jobject Java_J_N_MHUvRdlB(
    JNIEnv* env,
    jclass jcaller,
    jobject tab) {
  return JNI_TabInteractionRecorder_CreateForTab(env, base::android::JavaParamRef<jobject>(env,
      tab)).Release();
}

JNI_GENERATOR_EXPORT jboolean Java_J_N_M6Cn7pUF(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeTabInteractionRecorderAndroid) {
  TabInteractionRecorderAndroid* native =
      reinterpret_cast<TabInteractionRecorderAndroid*>(nativeTabInteractionRecorderAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "HadInteraction", false);
  return native->HadInteraction(env);
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_customtabs_features_TabInteractionRecorder_create(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_TabInteractionRecorder_create(JNIEnv* env,
    jlong nativePtr) {
  jclass clazz = org_chromium_chrome_browser_customtabs_features_TabInteractionRecorder_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_customtabs_features_TabInteractionRecorder_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "create",
          "(J)Lorg/chromium/chrome/browser/customtabs/features/TabInteractionRecorder;",
          &g_org_chromium_chrome_browser_customtabs_features_TabInteractionRecorder_create);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, nativePtr);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

}  // namespace customtabs

#endif  // org_chromium_chrome_browser_customtabs_features_TabInteractionRecorder_JNI
