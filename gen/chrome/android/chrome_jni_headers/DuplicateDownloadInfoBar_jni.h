// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/infobar/DuplicateDownloadInfoBar

#ifndef org_chromium_chrome_browser_infobar_DuplicateDownloadInfoBar_JNI
#define org_chromium_chrome_browser_infobar_DuplicateDownloadInfoBar_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_infobar_DuplicateDownloadInfoBar[];
const char kClassPath_org_chromium_chrome_browser_infobar_DuplicateDownloadInfoBar[] =
    "org/chromium/chrome/browser/infobar/DuplicateDownloadInfoBar";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_infobar_DuplicateDownloadInfoBar_clazz(nullptr);
#ifndef org_chromium_chrome_browser_infobar_DuplicateDownloadInfoBar_clazz_defined
#define org_chromium_chrome_browser_infobar_DuplicateDownloadInfoBar_clazz_defined
inline jclass org_chromium_chrome_browser_infobar_DuplicateDownloadInfoBar_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_infobar_DuplicateDownloadInfoBar,
      &g_org_chromium_chrome_browser_infobar_DuplicateDownloadInfoBar_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_infobar_DuplicateDownloadInfoBar_createInfoBar(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_DuplicateDownloadInfoBar_createInfoBar(JNIEnv* env, const base::android::JavaRef<jstring>&
    filePath,
    jboolean isOfflinePage,
    const base::android::JavaRef<jstring>& pageUrl,
    const base::android::JavaRef<jobject>& otrProfileID,
    jboolean duplicateRequestExists) {
  jclass clazz = org_chromium_chrome_browser_infobar_DuplicateDownloadInfoBar_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_infobar_DuplicateDownloadInfoBar_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createInfoBar",
"(Ljava/lang/String;ZLjava/lang/String;Lorg/chromium/chrome/browser/profiles/OTRProfileID;Z)Lorg/chromium/components/infobars/InfoBar;",
          &g_org_chromium_chrome_browser_infobar_DuplicateDownloadInfoBar_createInfoBar);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, filePath.obj(), isOfflinePage, pageUrl.obj(),
              otrProfileID.obj(), duplicateRequestExists);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

#endif  // org_chromium_chrome_browser_infobar_DuplicateDownloadInfoBar_JNI
