// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/autofill/CreditCardScannerBridge

#ifndef org_chromium_chrome_browser_autofill_CreditCardScannerBridge_JNI
#define org_chromium_chrome_browser_autofill_CreditCardScannerBridge_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_autofill_CreditCardScannerBridge[];
const char kClassPath_org_chromium_chrome_browser_autofill_CreditCardScannerBridge[] =
    "org/chromium/chrome/browser/autofill/CreditCardScannerBridge";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_autofill_CreditCardScannerBridge_clazz(nullptr);
#ifndef org_chromium_chrome_browser_autofill_CreditCardScannerBridge_clazz_defined
#define org_chromium_chrome_browser_autofill_CreditCardScannerBridge_clazz_defined
inline jclass org_chromium_chrome_browser_autofill_CreditCardScannerBridge_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_autofill_CreditCardScannerBridge,
      &g_org_chromium_chrome_browser_autofill_CreditCardScannerBridge_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace autofill {

JNI_GENERATOR_EXPORT void Java_J_N_MzlSwhwH(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeCreditCardScannerViewAndroid,
    jobject caller) {
  CreditCardScannerViewAndroid* native =
      reinterpret_cast<CreditCardScannerViewAndroid*>(nativeCreditCardScannerViewAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "ScanCancelled");
  return native->ScanCancelled(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT void Java_J_N_Md35y73f(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeCreditCardScannerViewAndroid,
    jobject caller,
    jstring cardHolderName,
    jstring cardNumber,
    jint expirationMonth,
    jint expirationYear) {
  CreditCardScannerViewAndroid* native =
      reinterpret_cast<CreditCardScannerViewAndroid*>(nativeCreditCardScannerViewAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "ScanCompleted");
  return native->ScanCompleted(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, cardHolderName),
      base::android::JavaParamRef<jstring>(env, cardNumber), expirationMonth, expirationYear);
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_autofill_CreditCardScannerBridge_create(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_CreditCardScannerBridge_create(JNIEnv* env,
    jlong nativeScanner,
    const base::android::JavaRef<jobject>& webContents) {
  jclass clazz = org_chromium_chrome_browser_autofill_CreditCardScannerBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_autofill_CreditCardScannerBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "create",
"(JLorg/chromium/content_public/browser/WebContents;)Lorg/chromium/chrome/browser/autofill/CreditCardScannerBridge;",
          &g_org_chromium_chrome_browser_autofill_CreditCardScannerBridge_create);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, nativeScanner, webContents.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_autofill_CreditCardScannerBridge_canScan(nullptr);
static jboolean Java_CreditCardScannerBridge_canScan(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_chrome_browser_autofill_CreditCardScannerBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_autofill_CreditCardScannerBridge_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "canScan",
          "()Z",
          &g_org_chromium_chrome_browser_autofill_CreditCardScannerBridge_canScan);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_autofill_CreditCardScannerBridge_scan(nullptr);
static void Java_CreditCardScannerBridge_scan(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz = org_chromium_chrome_browser_autofill_CreditCardScannerBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_autofill_CreditCardScannerBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "scan",
          "()V",
          &g_org_chromium_chrome_browser_autofill_CreditCardScannerBridge_scan);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

}  // namespace autofill

#endif  // org_chromium_chrome_browser_autofill_CreditCardScannerBridge_JNI
