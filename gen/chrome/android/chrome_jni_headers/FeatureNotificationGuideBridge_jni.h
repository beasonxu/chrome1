// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/feature_guide/notifications/FeatureNotificationGuideBridge

#ifndef org_chromium_chrome_browser_feature_guide_notifications_FeatureNotificationGuideBridge_JNI
#define org_chromium_chrome_browser_feature_guide_notifications_FeatureNotificationGuideBridge_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge[];
const char
    kClassPath_org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge[]
    = "org/chromium/chrome/browser/feature_guide/notifications/FeatureNotificationGuideBridge";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_clazz(nullptr);
#ifndef org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_clazz_defined
#define org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_clazz_defined
inline jclass
    org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge,
      &g_org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace feature_guide {


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_create(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_FeatureNotificationGuideBridge_create(JNIEnv*
    env, jlong nativePtr) {
  jclass clazz =
      org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "create",
"(J)Lorg/chromium/chrome/browser/feature_guide/notifications/FeatureNotificationGuideBridge;",
&g_org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_create);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, nativePtr);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_clearNativePtr(nullptr);
static void Java_FeatureNotificationGuideBridge_clearNativePtr(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "clearNativePtr",
          "()V",
&g_org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_clearNativePtr);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_getNotificationTitle(nullptr);
static base::android::ScopedJavaLocalRef<jstring>
    Java_FeatureNotificationGuideBridge_getNotificationTitle(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper featureType) {
  jclass clazz =
      org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getNotificationTitle",
          "(I)Ljava/lang/String;",
&g_org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_getNotificationTitle);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id, as_jint(featureType)));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_getNotificationMessage(nullptr);
static base::android::ScopedJavaLocalRef<jstring>
    Java_FeatureNotificationGuideBridge_getNotificationMessage(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper featureType) {
  jclass clazz =
      org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getNotificationMessage",
          "(I)Ljava/lang/String;",
&g_org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_getNotificationMessage);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id, as_jint(featureType)));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_onNotificationClick(nullptr);
static void Java_FeatureNotificationGuideBridge_onNotificationClick(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper featureType) {
  jclass clazz =
      org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onNotificationClick",
          "(I)V",
&g_org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_onNotificationClick);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(featureType));
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_closeNotification(nullptr);
static void Java_FeatureNotificationGuideBridge_closeNotification(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& notificationGuid) {
  jclass clazz =
      org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "closeNotification",
          "(Ljava/lang/String;)V",
&g_org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_closeNotification);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, notificationGuid.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_shouldSkipFeature(nullptr);
static jboolean Java_FeatureNotificationGuideBridge_shouldSkipFeature(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper featureType) {
  jclass clazz =
      org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_clazz(env),
          false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "shouldSkipFeature",
          "(I)Z",
&g_org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_shouldSkipFeature);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id, as_jint(featureType));
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_getNotificationParamGuidForFeature(nullptr);
static base::android::ScopedJavaLocalRef<jstring>
    Java_FeatureNotificationGuideBridge_getNotificationParamGuidForFeature(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper featureType) {
  jclass clazz =
      org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getNotificationParamGuidForFeature",
          "(I)Ljava/lang/String;",
&g_org_chromium_chrome_browser_feature_1guide_notifications_FeatureNotificationGuideBridge_getNotificationParamGuidForFeature);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id, as_jint(featureType)));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

}  // namespace feature_guide

#endif  // org_chromium_chrome_browser_feature_guide_notifications_FeatureNotificationGuideBridge_JNI
