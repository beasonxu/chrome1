// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/webapps/WebApkInstallService

#ifndef org_chromium_chrome_browser_webapps_WebApkInstallService_JNI
#define org_chromium_chrome_browser_webapps_WebApkInstallService_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_webapps_WebApkInstallService[];
const char kClassPath_org_chromium_chrome_browser_webapps_WebApkInstallService[] =
    "org/chromium/chrome/browser/webapps/WebApkInstallService";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_webapps_WebApkInstallService_clazz(nullptr);
#ifndef org_chromium_chrome_browser_webapps_WebApkInstallService_clazz_defined
#define org_chromium_chrome_browser_webapps_WebApkInstallService_clazz_defined
inline jclass org_chromium_chrome_browser_webapps_WebApkInstallService_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_webapps_WebApkInstallService,
      &g_org_chromium_chrome_browser_webapps_WebApkInstallService_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_webapps_WebApkInstallService_showInstalledNotification(nullptr);
static void Java_WebApkInstallService_showInstalledNotification(JNIEnv* env, const
    base::android::JavaRef<jstring>& webApkPackage,
    const base::android::JavaRef<jstring>& manifestUrl,
    const base::android::JavaRef<jstring>& shortName,
    const base::android::JavaRef<jstring>& url,
    const base::android::JavaRef<jobject>& icon,
    jboolean isIconMaskable) {
  jclass clazz = org_chromium_chrome_browser_webapps_WebApkInstallService_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_webapps_WebApkInstallService_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "showInstalledNotification",
"(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/graphics/Bitmap;Z)V",
          &g_org_chromium_chrome_browser_webapps_WebApkInstallService_showInstalledNotification);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, webApkPackage.obj(), manifestUrl.obj(), shortName.obj(),
              url.obj(), icon.obj(), isIconMaskable);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_webapps_WebApkInstallService_showInstallInProgressNotification(nullptr);
static void Java_WebApkInstallService_showInstallInProgressNotification(JNIEnv* env, const
    base::android::JavaRef<jstring>& manifestUrl,
    const base::android::JavaRef<jstring>& shortName,
    const base::android::JavaRef<jstring>& url,
    const base::android::JavaRef<jobject>& icon,
    jboolean isIconMaskable) {
  jclass clazz = org_chromium_chrome_browser_webapps_WebApkInstallService_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_webapps_WebApkInstallService_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "showInstallInProgressNotification",
          "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/graphics/Bitmap;Z)V",
&g_org_chromium_chrome_browser_webapps_WebApkInstallService_showInstallInProgressNotification);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, manifestUrl.obj(), shortName.obj(), url.obj(), icon.obj(),
              isIconMaskable);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_webapps_WebApkInstallService_cancelNotification(nullptr);
static void Java_WebApkInstallService_cancelNotification(JNIEnv* env, const
    base::android::JavaRef<jstring>& notificationId) {
  jclass clazz = org_chromium_chrome_browser_webapps_WebApkInstallService_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_webapps_WebApkInstallService_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "cancelNotification",
          "(Ljava/lang/String;)V",
          &g_org_chromium_chrome_browser_webapps_WebApkInstallService_cancelNotification);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, notificationId.obj());
}

#endif  // org_chromium_chrome_browser_webapps_WebApkInstallService_JNI
