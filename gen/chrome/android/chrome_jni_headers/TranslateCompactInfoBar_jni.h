// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/infobar/TranslateCompactInfoBar

#ifndef org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_JNI
#define org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_infobar_TranslateCompactInfoBar[];
const char kClassPath_org_chromium_chrome_browser_infobar_TranslateCompactInfoBar[] =
    "org/chromium/chrome/browser/infobar/TranslateCompactInfoBar";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_clazz(nullptr);
#ifndef org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_clazz_defined
#define org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_clazz_defined
inline jclass org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_infobar_TranslateCompactInfoBar,
      &g_org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
JNI_GENERATOR_EXPORT void Java_J_N_Mcr_00024d_10m(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeTranslateCompactInfoBar,
    jobject caller,
    jint option,
    jstring value) {
  TranslateCompactInfoBar* native =
      reinterpret_cast<TranslateCompactInfoBar*>(nativeTranslateCompactInfoBar);
  CHECK_NATIVE_PTR(env, jcaller, native, "ApplyStringTranslateOption");
  return native->ApplyStringTranslateOption(env, base::android::JavaParamRef<jobject>(env, caller),
      option, base::android::JavaParamRef<jstring>(env, value));
}

JNI_GENERATOR_EXPORT void Java_J_N_MIY_00024H5s3(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeTranslateCompactInfoBar,
    jobject caller,
    jint option,
    jboolean value) {
  TranslateCompactInfoBar* native =
      reinterpret_cast<TranslateCompactInfoBar*>(nativeTranslateCompactInfoBar);
  CHECK_NATIVE_PTR(env, jcaller, native, "ApplyBoolTranslateOption");
  return native->ApplyBoolTranslateOption(env, base::android::JavaParamRef<jobject>(env, caller),
      option, value);
}

JNI_GENERATOR_EXPORT jboolean Java_J_N_MX8X_00024p3M(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeTranslateCompactInfoBar,
    jobject caller,
    jboolean menuExpanded) {
  TranslateCompactInfoBar* native =
      reinterpret_cast<TranslateCompactInfoBar*>(nativeTranslateCompactInfoBar);
  CHECK_NATIVE_PTR(env, jcaller, native, "ShouldAutoNeverTranslate", false);
  return native->ShouldAutoNeverTranslate(env, base::android::JavaParamRef<jobject>(env, caller),
      menuExpanded);
}

JNI_GENERATOR_EXPORT jboolean Java_J_N_MM0pw8sM(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeTranslateCompactInfoBar,
    jobject caller) {
  TranslateCompactInfoBar* native =
      reinterpret_cast<TranslateCompactInfoBar*>(nativeTranslateCompactInfoBar);
  CHECK_NATIVE_PTR(env, jcaller, native, "IsIncognito", false);
  return native->IsIncognito(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT jobjectArray Java_J_N_M4cX9AMK(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeTranslateCompactInfoBar,
    jobject caller) {
  TranslateCompactInfoBar* native =
      reinterpret_cast<TranslateCompactInfoBar*>(nativeTranslateCompactInfoBar);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetContentLanguagesCodes", NULL);
  return native->GetContentLanguagesCodes(env, base::android::JavaParamRef<jobject>(env,
      caller)).Release();
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_create(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_TranslateCompactInfoBar_create(JNIEnv* env,
    const base::android::JavaRef<jobject>& tab,
    JniIntWrapper initialStep,
    const base::android::JavaRef<jstring>& sourceLanguageCode,
    const base::android::JavaRef<jstring>& targetLanguageCode,
    jboolean neverLanguage,
    jboolean neverDomain,
    jboolean alwaysTranslate,
    jboolean triggeredFromMenu,
    const base::android::JavaRef<jobjectArray>& allLanguages,
    const base::android::JavaRef<jobjectArray>& allLanguagesCodes,
    const base::android::JavaRef<jintArray>& allLanguagesHashCodes,
    const base::android::JavaRef<jobjectArray>& contentLanguagesCodes,
    JniIntWrapper tabTextColor) {
  jclass clazz = org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "create",
"(Lorg/chromium/chrome/browser/tab/Tab;ILjava/lang/String;Ljava/lang/String;ZZZZ[Ljava/lang/String;[Ljava/lang/String;[I[Ljava/lang/String;I)Lorg/chromium/components/infobars/InfoBar;",
          &g_org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_create);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, tab.obj(), as_jint(initialStep), sourceLanguageCode.obj(),
              targetLanguageCode.obj(), neverLanguage, neverDomain, alwaysTranslate,
              triggeredFromMenu, allLanguages.obj(), allLanguagesCodes.obj(),
              allLanguagesHashCodes.obj(), contentLanguagesCodes.obj(), as_jint(tabTextColor));
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_onTranslating(nullptr);
static void Java_TranslateCompactInfoBar_onTranslating(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onTranslating",
          "()V",
          &g_org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_onTranslating);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_onPageTranslated(nullptr);
static jboolean Java_TranslateCompactInfoBar_onPageTranslated(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper errorType) {
  jclass clazz = org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onPageTranslated",
          "(I)Z",
          &g_org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_onPageTranslated);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id, as_jint(errorType));
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_setNativePtr(nullptr);
static void Java_TranslateCompactInfoBar_setNativePtr(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, jlong nativePtr) {
  jclass clazz = org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setNativePtr",
          "(J)V",
          &g_org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_setNativePtr);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, nativePtr);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_setAutoAlwaysTranslate(nullptr);
static void Java_TranslateCompactInfoBar_setAutoAlwaysTranslate(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setAutoAlwaysTranslate",
          "()V",
          &g_org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_setAutoAlwaysTranslate);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_onTargetLanguageChanged(nullptr);
static void Java_TranslateCompactInfoBar_onTargetLanguageChanged(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& languageCode) {
  jclass clazz = org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onTargetLanguageChanged",
          "(Ljava/lang/String;)V",
          &g_org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_onTargetLanguageChanged);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, languageCode.obj());
}

#endif  // org_chromium_chrome_browser_infobar_TranslateCompactInfoBar_JNI
