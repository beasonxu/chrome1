// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/safe_browsing/SafeBrowsingReferringAppBridge

#ifndef org_chromium_chrome_browser_safe_browsing_SafeBrowsingReferringAppBridge_JNI
#define org_chromium_chrome_browser_safe_browsing_SafeBrowsingReferringAppBridge_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge[];
const char kClassPath_org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge[] =
    "org/chromium/chrome/browser/safe_browsing/SafeBrowsingReferringAppBridge";

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge_00024ReferringAppInfo[];
const char
    kClassPath_org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge_00024ReferringAppInfo[]
    = "org/chromium/chrome/browser/safe_browsing/SafeBrowsingReferringAppBridge$ReferringAppInfo";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge_clazz(nullptr);
#ifndef org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge_clazz_defined
#define org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge_clazz_defined
inline jclass
    org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge,
      &g_org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge_clazz);
}
#endif
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge_00024ReferringAppInfo_clazz(nullptr);
#ifndef org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge_00024ReferringAppInfo_clazz_defined
#define org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge_00024ReferringAppInfo_clazz_defined
inline jclass
    org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge_00024ReferringAppInfo_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge_00024ReferringAppInfo,
      &g_org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge_00024ReferringAppInfo_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge_00024ReferringAppInfo_getSource(nullptr);
static jint Java_ReferringAppInfo_getSource(JNIEnv* env, const base::android::JavaRef<jobject>& obj)
    {
  jclass clazz =
      org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge_00024ReferringAppInfo_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge_00024ReferringAppInfo_clazz(env),
          0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getSource",
          "()I",
&g_org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge_00024ReferringAppInfo_getSource);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge_00024ReferringAppInfo_getName(nullptr);
static base::android::ScopedJavaLocalRef<jstring> Java_ReferringAppInfo_getName(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge_00024ReferringAppInfo_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge_00024ReferringAppInfo_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getName",
          "()Ljava/lang/String;",
&g_org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge_00024ReferringAppInfo_getName);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge_getReferringAppInfo(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_SafeBrowsingReferringAppBridge_getReferringAppInfo(JNIEnv* env, const
    base::android::JavaRef<jobject>& windowAndroid) {
  jclass clazz =
      org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "getReferringAppInfo",
"(Lorg/chromium/ui/base/WindowAndroid;)Lorg/chromium/chrome/browser/safe_browsing/SafeBrowsingReferringAppBridge$ReferringAppInfo;",
&g_org_chromium_chrome_browser_safe_1browsing_SafeBrowsingReferringAppBridge_getReferringAppInfo);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, windowAndroid.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

#endif  // org_chromium_chrome_browser_safe_browsing_SafeBrowsingReferringAppBridge_JNI
