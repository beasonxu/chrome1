// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/tab/TabWebContentsDelegateAndroidImpl

#ifndef org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_JNI
#define org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl[];
const char kClassPath_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl[] =
    "org/chromium/chrome/browser/tab/TabWebContentsDelegateAndroidImpl";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(nullptr);
#ifndef org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz_defined
#define org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz_defined
inline jclass org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl,
      &g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
static void JNI_TabWebContentsDelegateAndroidImpl_OnRendererUnresponsive(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& webContents);

JNI_GENERATOR_EXPORT void Java_J_N_MsGvyS6g(
    JNIEnv* env,
    jclass jcaller,
    jobject webContents) {
  return JNI_TabWebContentsDelegateAndroidImpl_OnRendererUnresponsive(env,
      base::android::JavaParamRef<jobject>(env, webContents));
}

static void JNI_TabWebContentsDelegateAndroidImpl_OnRendererResponsive(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& webContents);

JNI_GENERATOR_EXPORT void Java_J_N_M8ARKEz4(
    JNIEnv* env,
    jclass jcaller,
    jobject webContents) {
  return JNI_TabWebContentsDelegateAndroidImpl_OnRendererResponsive(env,
      base::android::JavaParamRef<jobject>(env, webContents));
}

static void JNI_TabWebContentsDelegateAndroidImpl_ShowFramebustBlockInfoBar(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& webContents,
    const base::android::JavaParamRef<jstring>& url);

JNI_GENERATOR_EXPORT void Java_J_N_MvTn1Qnm(
    JNIEnv* env,
    jclass jcaller,
    jobject webContents,
    jstring url) {
  return JNI_TabWebContentsDelegateAndroidImpl_ShowFramebustBlockInfoBar(env,
      base::android::JavaParamRef<jobject>(env, webContents),
      base::android::JavaParamRef<jstring>(env, url));
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_onFindResultAvailable(nullptr);
static void Java_TabWebContentsDelegateAndroidImpl_onFindResultAvailable(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>& result) {
  jclass clazz = org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onFindResultAvailable",
          "(Lorg/chromium/components/find_in_page/FindNotificationDetails;)V",
&g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_onFindResultAvailable);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, result.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_onFindMatchRectsAvailable(nullptr);
static void Java_TabWebContentsDelegateAndroidImpl_onFindMatchRectsAvailable(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>& result) {
  jclass clazz = org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onFindMatchRectsAvailable",
          "(Lorg/chromium/components/find_in_page/FindMatchRectsDetails;)V",
&g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_onFindMatchRectsAvailable);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, result.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_createRect(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_TabWebContentsDelegateAndroidImpl_createRect(JNIEnv* env, JniIntWrapper x,
    JniIntWrapper y,
    JniIntWrapper right,
    JniIntWrapper bottom) {
  jclass clazz = org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createRect",
          "(IIII)Landroid/graphics/Rect;",
          &g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_createRect);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, as_jint(x), as_jint(y), as_jint(right), as_jint(bottom));
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_createRectF(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_TabWebContentsDelegateAndroidImpl_createRectF(JNIEnv* env, jfloat x,
    jfloat y,
    jfloat right,
    jfloat bottom) {
  jclass clazz = org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createRectF",
          "(FFFF)Landroid/graphics/RectF;",
          &g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_createRectF);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, x, y, right, bottom);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_createFindNotificationDetails(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_TabWebContentsDelegateAndroidImpl_createFindNotificationDetails(JNIEnv* env, JniIntWrapper
    numberOfMatches,
    const base::android::JavaRef<jobject>& rendererSelectionRect,
    JniIntWrapper activeMatchOrdinal,
    jboolean finalUpdate) {
  jclass clazz = org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createFindNotificationDetails",
"(ILandroid/graphics/Rect;IZ)Lorg/chromium/components/find_in_page/FindNotificationDetails;",
&g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_createFindNotificationDetails);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, as_jint(numberOfMatches), rendererSelectionRect.obj(),
              as_jint(activeMatchOrdinal), finalUpdate);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_createFindMatchRectsDetails(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_TabWebContentsDelegateAndroidImpl_createFindMatchRectsDetails(JNIEnv* env, JniIntWrapper
    version,
    JniIntWrapper numRects,
    const base::android::JavaRef<jobject>& activeRect) {
  jclass clazz = org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createFindMatchRectsDetails",
"(IILandroid/graphics/RectF;)Lorg/chromium/components/find_in_page/FindMatchRectsDetails;",
&g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_createFindMatchRectsDetails);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, as_jint(version), as_jint(numRects), activeRect.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_setMatchRectByIndex(nullptr);
static void Java_TabWebContentsDelegateAndroidImpl_setMatchRectByIndex(JNIEnv* env, const
    base::android::JavaRef<jobject>& findMatchRectsDetails,
    JniIntWrapper index,
    const base::android::JavaRef<jobject>& rect) {
  jclass clazz = org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "setMatchRectByIndex",
"(Lorg/chromium/components/find_in_page/FindMatchRectsDetails;ILandroid/graphics/RectF;)V",
          &g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_setMatchRectByIndex);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, findMatchRectsDetails.obj(), as_jint(index), rect.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_shouldResumeRequestsForCreatedWindow(nullptr);
static jboolean Java_TabWebContentsDelegateAndroidImpl_shouldResumeRequestsForCreatedWindow(JNIEnv*
    env, const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "shouldResumeRequestsForCreatedWindow",
          "()Z",
&g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_shouldResumeRequestsForCreatedWindow);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_addNewContents(nullptr);
static jboolean Java_TabWebContentsDelegateAndroidImpl_addNewContents(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>& sourceWebContents,
    const base::android::JavaRef<jobject>& webContents,
    JniIntWrapper disposition,
    const base::android::JavaRef<jobject>& initialPosition,
    jboolean userGesture) {
  jclass clazz = org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "addNewContents",
"(Lorg/chromium/content_public/browser/WebContents;Lorg/chromium/content_public/browser/WebContents;ILandroid/graphics/Rect;Z)Z",
          &g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_addNewContents);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id, sourceWebContents.obj(), webContents.obj(),
              as_jint(disposition), initialPosition.obj(), userGesture);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_setOverlayMode(nullptr);
static void Java_TabWebContentsDelegateAndroidImpl_setOverlayMode(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, jboolean useOverlayMode) {
  jclass clazz = org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setOverlayMode",
          "(Z)V",
          &g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_setOverlayMode);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, useOverlayMode);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_shouldEnableEmbeddedMediaExperience(nullptr);
static jboolean Java_TabWebContentsDelegateAndroidImpl_shouldEnableEmbeddedMediaExperience(JNIEnv*
    env, const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "shouldEnableEmbeddedMediaExperience",
          "()Z",
&g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_shouldEnableEmbeddedMediaExperience);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_isPictureInPictureEnabled(nullptr);
static jboolean Java_TabWebContentsDelegateAndroidImpl_isPictureInPictureEnabled(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "isPictureInPictureEnabled",
          "()Z",
&g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_isPictureInPictureEnabled);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_isNightModeEnabled(nullptr);
static jboolean Java_TabWebContentsDelegateAndroidImpl_isNightModeEnabled(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "isNightModeEnabled",
          "()Z",
          &g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_isNightModeEnabled);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_isForceDarkWebContentEnabled(nullptr);
static jboolean Java_TabWebContentsDelegateAndroidImpl_isForceDarkWebContentEnabled(JNIEnv* env,
    const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "isForceDarkWebContentEnabled",
          "()Z",
&g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_isForceDarkWebContentEnabled);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_canShowAppBanners(nullptr);
static jboolean Java_TabWebContentsDelegateAndroidImpl_canShowAppBanners(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "canShowAppBanners",
          "()Z",
          &g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_canShowAppBanners);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_isTabLargeEnoughForDesktopSite(nullptr);
static jboolean Java_TabWebContentsDelegateAndroidImpl_isTabLargeEnoughForDesktopSite(JNIEnv* env,
    const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "isTabLargeEnoughForDesktopSite",
          "()Z",
&g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_isTabLargeEnoughForDesktopSite);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_getManifestScope(nullptr);
static base::android::ScopedJavaLocalRef<jstring>
    Java_TabWebContentsDelegateAndroidImpl_getManifestScope(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getManifestScope",
          "()Ljava/lang/String;",
          &g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_getManifestScope);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_isCustomTab(nullptr);
static jboolean Java_TabWebContentsDelegateAndroidImpl_isCustomTab(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "isCustomTab",
          "()Z",
          &g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_isCustomTab);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_isInstalledWebappDelegateGeolocation(nullptr);
static jboolean Java_TabWebContentsDelegateAndroidImpl_isInstalledWebappDelegateGeolocation(JNIEnv*
    env, const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "isInstalledWebappDelegateGeolocation",
          "()Z",
&g_org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_isInstalledWebappDelegateGeolocation);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

#endif  // org_chromium_chrome_browser_tab_TabWebContentsDelegateAndroidImpl_JNI
