// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/device_dialog/UsbChooserDialog

#ifndef org_chromium_chrome_browser_device_dialog_UsbChooserDialog_JNI
#define org_chromium_chrome_browser_device_dialog_UsbChooserDialog_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_device_1dialog_UsbChooserDialog[];
const char kClassPath_org_chromium_chrome_browser_device_1dialog_UsbChooserDialog[] =
    "org/chromium/chrome/browser/device_dialog/UsbChooserDialog";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_device_1dialog_UsbChooserDialog_clazz(nullptr);
#ifndef org_chromium_chrome_browser_device_1dialog_UsbChooserDialog_clazz_defined
#define org_chromium_chrome_browser_device_1dialog_UsbChooserDialog_clazz_defined
inline jclass org_chromium_chrome_browser_device_1dialog_UsbChooserDialog_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_device_1dialog_UsbChooserDialog,
      &g_org_chromium_chrome_browser_device_1dialog_UsbChooserDialog_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
JNI_GENERATOR_EXPORT void Java_J_N_M8m3iwzV(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeUsbChooserDialogAndroid,
    jstring deviceId) {
  UsbChooserDialogAndroid* native =
      reinterpret_cast<UsbChooserDialogAndroid*>(nativeUsbChooserDialogAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnItemSelected");
  return native->OnItemSelected(env, base::android::JavaParamRef<jstring>(env, deviceId));
}

JNI_GENERATOR_EXPORT void Java_J_N_MyQOumx4(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeUsbChooserDialogAndroid) {
  UsbChooserDialogAndroid* native =
      reinterpret_cast<UsbChooserDialogAndroid*>(nativeUsbChooserDialogAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnDialogCancelled");
  return native->OnDialogCancelled(env);
}

JNI_GENERATOR_EXPORT void Java_J_N_M0RyTBvz(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeUsbChooserDialogAndroid) {
  UsbChooserDialogAndroid* native =
      reinterpret_cast<UsbChooserDialogAndroid*>(nativeUsbChooserDialogAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "LoadUsbHelpPage");
  return native->LoadUsbHelpPage(env);
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_device_1dialog_UsbChooserDialog_create(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_UsbChooserDialog_create(JNIEnv* env, const
    base::android::JavaRef<jobject>& windowAndroid,
    const base::android::JavaRef<jstring>& origin,
    JniIntWrapper securityLevel,
    const base::android::JavaRef<jobject>& profile,
    jlong nativeUsbChooserDialogPtr) {
  jclass clazz = org_chromium_chrome_browser_device_1dialog_UsbChooserDialog_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_device_1dialog_UsbChooserDialog_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "create",
"(Lorg/chromium/ui/base/WindowAndroid;Ljava/lang/String;ILorg/chromium/chrome/browser/profiles/Profile;J)Lorg/chromium/chrome/browser/device_dialog/UsbChooserDialog;",
          &g_org_chromium_chrome_browser_device_1dialog_UsbChooserDialog_create);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, windowAndroid.obj(), origin.obj(), as_jint(securityLevel),
              profile.obj(), nativeUsbChooserDialogPtr);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_device_1dialog_UsbChooserDialog_setIdleState(nullptr);
static void Java_UsbChooserDialog_setIdleState(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz = org_chromium_chrome_browser_device_1dialog_UsbChooserDialog_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_device_1dialog_UsbChooserDialog_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setIdleState",
          "()V",
          &g_org_chromium_chrome_browser_device_1dialog_UsbChooserDialog_setIdleState);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_device_1dialog_UsbChooserDialog_addDevice(nullptr);
static void Java_UsbChooserDialog_addDevice(JNIEnv* env, const base::android::JavaRef<jobject>& obj,
    const base::android::JavaRef<jstring>& deviceId,
    const base::android::JavaRef<jstring>& deviceName) {
  jclass clazz = org_chromium_chrome_browser_device_1dialog_UsbChooserDialog_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_device_1dialog_UsbChooserDialog_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "addDevice",
          "(Ljava/lang/String;Ljava/lang/String;)V",
          &g_org_chromium_chrome_browser_device_1dialog_UsbChooserDialog_addDevice);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, deviceId.obj(), deviceName.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_device_1dialog_UsbChooserDialog_removeDevice(nullptr);
static void Java_UsbChooserDialog_removeDevice(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj, const base::android::JavaRef<jstring>& deviceId) {
  jclass clazz = org_chromium_chrome_browser_device_1dialog_UsbChooserDialog_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_device_1dialog_UsbChooserDialog_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "removeDevice",
          "(Ljava/lang/String;)V",
          &g_org_chromium_chrome_browser_device_1dialog_UsbChooserDialog_removeDevice);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, deviceId.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_device_1dialog_UsbChooserDialog_closeDialog(nullptr);
static void Java_UsbChooserDialog_closeDialog(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz = org_chromium_chrome_browser_device_1dialog_UsbChooserDialog_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_device_1dialog_UsbChooserDialog_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "closeDialog",
          "()V",
          &g_org_chromium_chrome_browser_device_1dialog_UsbChooserDialog_closeDialog);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

#endif  // org_chromium_chrome_browser_device_dialog_UsbChooserDialog_JNI
