// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/metrics/VariationsSession

#ifndef org_chromium_chrome_browser_metrics_VariationsSession_JNI
#define org_chromium_chrome_browser_metrics_VariationsSession_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.


// Step 2: Constants (optional).


// Step 3: Method stubs.
static void JNI_VariationsSession_StartVariationsSession(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& caller,
    const base::android::JavaParamRef<jstring>& restrictMode);

JNI_GENERATOR_EXPORT void Java_J_N_McCUpqFO(
    JNIEnv* env,
    jclass jcaller,
    jobject caller,
    jstring restrictMode) {
  return JNI_VariationsSession_StartVariationsSession(env, base::android::JavaParamRef<jobject>(env,
      caller), base::android::JavaParamRef<jstring>(env, restrictMode));
}

static base::android::ScopedJavaLocalRef<jstring> JNI_VariationsSession_GetLatestCountry(JNIEnv*
    env, const base::android::JavaParamRef<jobject>& caller);

JNI_GENERATOR_EXPORT jstring Java_J_N_MYfm_1yKk(
    JNIEnv* env,
    jclass jcaller,
    jobject caller) {
  return JNI_VariationsSession_GetLatestCountry(env, base::android::JavaParamRef<jobject>(env,
      caller)).Release();
}


#endif  // org_chromium_chrome_browser_metrics_VariationsSession_JNI
