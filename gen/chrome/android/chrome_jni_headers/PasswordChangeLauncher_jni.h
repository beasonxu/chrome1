// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/password_manager/PasswordChangeLauncher

#ifndef org_chromium_chrome_browser_password_manager_PasswordChangeLauncher_JNI
#define org_chromium_chrome_browser_password_manager_PasswordChangeLauncher_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_password_1manager_PasswordChangeLauncher[];
const char kClassPath_org_chromium_chrome_browser_password_1manager_PasswordChangeLauncher[] =
    "org/chromium/chrome/browser/password_manager/PasswordChangeLauncher";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_password_1manager_PasswordChangeLauncher_clazz(nullptr);
#ifndef org_chromium_chrome_browser_password_1manager_PasswordChangeLauncher_clazz_defined
#define org_chromium_chrome_browser_password_1manager_PasswordChangeLauncher_clazz_defined
inline jclass org_chromium_chrome_browser_password_1manager_PasswordChangeLauncher_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_password_1manager_PasswordChangeLauncher,
      &g_org_chromium_chrome_browser_password_1manager_PasswordChangeLauncher_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1manager_PasswordChangeLauncher_start(nullptr);
static void Java_PasswordChangeLauncher_start(JNIEnv* env, const base::android::JavaRef<jobject>&
    windowAndroid,
    const base::android::JavaRef<jobject>& origin,
    const base::android::JavaRef<jstring>& username,
    jboolean skipLogin) {
  jclass clazz = org_chromium_chrome_browser_password_1manager_PasswordChangeLauncher_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_password_1manager_PasswordChangeLauncher_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "start",
          "(Lorg/chromium/ui/base/WindowAndroid;Lorg/chromium/url/GURL;Ljava/lang/String;Z)V",
          &g_org_chromium_chrome_browser_password_1manager_PasswordChangeLauncher_start);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, windowAndroid.obj(), origin.obj(), username.obj(),
              skipLogin);
}

#endif  // org_chromium_chrome_browser_password_manager_PasswordChangeLauncher_JNI
