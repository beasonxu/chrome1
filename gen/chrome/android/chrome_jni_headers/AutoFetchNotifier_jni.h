// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/offlinepages/AutoFetchNotifier

#ifndef org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_JNI
#define org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_offlinepages_AutoFetchNotifier[];
const char kClassPath_org_chromium_chrome_browser_offlinepages_AutoFetchNotifier[] =
    "org/chromium/chrome/browser/offlinepages/AutoFetchNotifier";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_clazz(nullptr);
#ifndef org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_clazz_defined
#define org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_clazz_defined
inline jclass org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_offlinepages_AutoFetchNotifier,
      &g_org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace offline_pages {

static void JNI_AutoFetchNotifier_CancelInProgress(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& profile);

JNI_GENERATOR_EXPORT void Java_J_N_MytEgqET(
    JNIEnv* env,
    jclass jcaller,
    jobject profile) {
  return JNI_AutoFetchNotifier_CancelInProgress(env, base::android::JavaParamRef<jobject>(env,
      profile));
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_updateInProgressNotificationCountIfShowing(nullptr);
static void Java_AutoFetchNotifier_updateInProgressNotificationCountIfShowing(JNIEnv* env,
    JniIntWrapper inProgressCount) {
  jclass clazz = org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "updateInProgressNotificationCountIfShowing",
          "(I)V",
&g_org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_updateInProgressNotificationCountIfShowing);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, as_jint(inProgressCount));
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_showInProgressNotification(nullptr);
static void Java_AutoFetchNotifier_showInProgressNotification(JNIEnv* env, JniIntWrapper
    inProgressCount) {
  jclass clazz = org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "showInProgressNotification",
          "(I)V",
          &g_org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_showInProgressNotification);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, as_jint(inProgressCount));
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_cancellationComplete(nullptr);
static void Java_AutoFetchNotifier_cancellationComplete(JNIEnv* env) {
  jclass clazz = org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "cancellationComplete",
          "()V",
          &g_org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_cancellationComplete);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_autoFetchInProgressNotificationCanceled(nullptr);
static jboolean Java_AutoFetchNotifier_autoFetchInProgressNotificationCanceled(JNIEnv* env) {
  jclass clazz = org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "autoFetchInProgressNotificationCanceled",
          "()Z",
&g_org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_autoFetchInProgressNotificationCanceled);

  jboolean ret =
      env->CallStaticBooleanMethod(clazz,
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_showCompleteNotification(nullptr);
static void Java_AutoFetchNotifier_showCompleteNotification(JNIEnv* env, const
    base::android::JavaRef<jstring>& pageTitle,
    const base::android::JavaRef<jstring>& originalUrl,
    const base::android::JavaRef<jstring>& finalUrl,
    JniIntWrapper tabId,
    jlong offlineId) {
  jclass clazz = org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "showCompleteNotification",
          "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IJ)V",
          &g_org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_showCompleteNotification);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, pageTitle.obj(), originalUrl.obj(), finalUrl.obj(),
              as_jint(tabId), offlineId);
}

}  // namespace offline_pages

#endif  // org_chromium_chrome_browser_offlinepages_AutoFetchNotifier_JNI
