// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/partnerbookmarks/PartnerBookmarksReader

#ifndef org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader_JNI
#define org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader[];
const char kClassPath_org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader[] =
    "org/chromium/chrome/browser/partnerbookmarks/PartnerBookmarksReader";

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader_00024FetchFaviconCallback[];
const char
    kClassPath_org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader_00024FetchFaviconCallback[]
    = "org/chromium/chrome/browser/partnerbookmarks/PartnerBookmarksReader$FetchFaviconCallback";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader_clazz(nullptr);
#ifndef org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader_clazz_defined
#define org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader_clazz_defined
inline jclass org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader_clazz(JNIEnv* env)
    {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader,
      &g_org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader_clazz);
}
#endif
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader_00024FetchFaviconCallback_clazz(nullptr);
#ifndef org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader_00024FetchFaviconCallback_clazz_defined
#define org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader_00024FetchFaviconCallback_clazz_defined
inline jclass
    org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader_00024FetchFaviconCallback_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader_00024FetchFaviconCallback,
      &g_org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader_00024FetchFaviconCallback_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
static jlong JNI_PartnerBookmarksReader_Init(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& caller);

JNI_GENERATOR_EXPORT jlong Java_J_N_MQQiT1PE(
    JNIEnv* env,
    jclass jcaller,
    jobject caller) {
  return JNI_PartnerBookmarksReader_Init(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT void Java_J_N_MBit8Vx9(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePartnerBookmarksReader,
    jobject caller) {
  PartnerBookmarksReader* native =
      reinterpret_cast<PartnerBookmarksReader*>(nativePartnerBookmarksReader);
  CHECK_NATIVE_PTR(env, jcaller, native, "Reset");
  return native->Reset(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT void Java_J_N_Mp38r97L(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePartnerBookmarksReader,
    jobject caller) {
  PartnerBookmarksReader* native =
      reinterpret_cast<PartnerBookmarksReader*>(nativePartnerBookmarksReader);
  CHECK_NATIVE_PTR(env, jcaller, native, "Destroy");
  return native->Destroy(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT jlong Java_J_N_M1QiERX9(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePartnerBookmarksReader,
    jobject caller,
    jstring url,
    jstring title,
    jboolean isFolder,
    jlong parentId,
    jbyteArray favicon,
    jbyteArray touchicon,
    jboolean fetchUncachedFaviconsFromServer,
    jint desiredFaviconSizePx,
    jobject callback) {
  PartnerBookmarksReader* native =
      reinterpret_cast<PartnerBookmarksReader*>(nativePartnerBookmarksReader);
  CHECK_NATIVE_PTR(env, jcaller, native, "AddPartnerBookmark", 0);
  return native->AddPartnerBookmark(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, url), base::android::JavaParamRef<jstring>(env,
      title), isFolder, parentId, base::android::JavaParamRef<jbyteArray>(env, favicon),
      base::android::JavaParamRef<jbyteArray>(env, touchicon), fetchUncachedFaviconsFromServer,
      desiredFaviconSizePx, base::android::JavaParamRef<jobject>(env, callback));
}

JNI_GENERATOR_EXPORT void Java_J_N_MZy4XMIu(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePartnerBookmarksReader,
    jobject caller) {
  PartnerBookmarksReader* native =
      reinterpret_cast<PartnerBookmarksReader*>(nativePartnerBookmarksReader);
  CHECK_NATIVE_PTR(env, jcaller, native, "PartnerBookmarksCreationComplete");
  return native->PartnerBookmarksCreationComplete(env, base::android::JavaParamRef<jobject>(env,
      caller));
}

static base::android::ScopedJavaLocalRef<jstring>
    JNI_PartnerBookmarksReader_GetNativeUrlString(JNIEnv* env, const
    base::android::JavaParamRef<jstring>& url);

JNI_GENERATOR_EXPORT jstring Java_J_N_McXhQJZC(
    JNIEnv* env,
    jclass jcaller,
    jstring url) {
  return JNI_PartnerBookmarksReader_GetNativeUrlString(env,
      base::android::JavaParamRef<jstring>(env, url)).Release();
}

static void JNI_PartnerBookmarksReader_DisablePartnerBookmarksEditing(JNIEnv* env);

JNI_GENERATOR_EXPORT void Java_J_N_McEggOd3(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_PartnerBookmarksReader_DisablePartnerBookmarksEditing(env);
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader_00024FetchFaviconCallback_onFaviconFetched(nullptr);
static void Java_FetchFaviconCallback_onFaviconFetched(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper result) {
  jclass clazz =
      org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader_00024FetchFaviconCallback_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader_00024FetchFaviconCallback_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onFaviconFetched",
          "(I)V",
&g_org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader_00024FetchFaviconCallback_onFaviconFetched);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(result));
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader_00024FetchFaviconCallback_onFaviconFetch(nullptr);
static void Java_FetchFaviconCallback_onFaviconFetch(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader_00024FetchFaviconCallback_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader_00024FetchFaviconCallback_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onFaviconFetch",
          "()V",
&g_org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader_00024FetchFaviconCallback_onFaviconFetch);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

#endif  // org_chromium_chrome_browser_partnerbookmarks_PartnerBookmarksReader_JNI
