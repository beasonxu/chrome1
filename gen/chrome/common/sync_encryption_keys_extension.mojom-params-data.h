// chrome/common/sync_encryption_keys_extension.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CHROME_COMMON_SYNC_ENCRYPTION_KEYS_EXTENSION_MOJOM_PARAMS_DATA_H_
#define CHROME_COMMON_SYNC_ENCRYPTION_KEYS_EXTENSION_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace chrome {
namespace mojom {
namespace internal {

class ValidationContext;
class  SyncEncryptionKeysExtension_SetEncryptionKeys_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> gaia_id;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<mojo::internal::Array_Data<uint8_t>>>> encryption_keys;
  int32_t last_key_version;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<SyncEncryptionKeysExtension_SetEncryptionKeys_Params_Data>;

  SyncEncryptionKeysExtension_SetEncryptionKeys_Params_Data();
  ~SyncEncryptionKeysExtension_SetEncryptionKeys_Params_Data() = delete;
};
static_assert(sizeof(SyncEncryptionKeysExtension_SetEncryptionKeys_Params_Data) == 32,
              "Bad sizeof(SyncEncryptionKeysExtension_SetEncryptionKeys_Params_Data)");
class  SyncEncryptionKeysExtension_SetEncryptionKeys_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<SyncEncryptionKeysExtension_SetEncryptionKeys_ResponseParams_Data>;

  SyncEncryptionKeysExtension_SetEncryptionKeys_ResponseParams_Data();
  ~SyncEncryptionKeysExtension_SetEncryptionKeys_ResponseParams_Data() = delete;
};
static_assert(sizeof(SyncEncryptionKeysExtension_SetEncryptionKeys_ResponseParams_Data) == 8,
              "Bad sizeof(SyncEncryptionKeysExtension_SetEncryptionKeys_ResponseParams_Data)");
class  SyncEncryptionKeysExtension_AddTrustedRecoveryMethod_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> gaia_id;
  mojo::internal::Pointer<mojo::internal::Array_Data<uint8_t>> public_key;
  int32_t method_type_hint;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<SyncEncryptionKeysExtension_AddTrustedRecoveryMethod_Params_Data>;

  SyncEncryptionKeysExtension_AddTrustedRecoveryMethod_Params_Data();
  ~SyncEncryptionKeysExtension_AddTrustedRecoveryMethod_Params_Data() = delete;
};
static_assert(sizeof(SyncEncryptionKeysExtension_AddTrustedRecoveryMethod_Params_Data) == 32,
              "Bad sizeof(SyncEncryptionKeysExtension_AddTrustedRecoveryMethod_Params_Data)");
class  SyncEncryptionKeysExtension_AddTrustedRecoveryMethod_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<SyncEncryptionKeysExtension_AddTrustedRecoveryMethod_ResponseParams_Data>;

  SyncEncryptionKeysExtension_AddTrustedRecoveryMethod_ResponseParams_Data();
  ~SyncEncryptionKeysExtension_AddTrustedRecoveryMethod_ResponseParams_Data() = delete;
};
static_assert(sizeof(SyncEncryptionKeysExtension_AddTrustedRecoveryMethod_ResponseParams_Data) == 8,
              "Bad sizeof(SyncEncryptionKeysExtension_AddTrustedRecoveryMethod_ResponseParams_Data)");

}  // namespace internal


class SyncEncryptionKeysExtension_SetEncryptionKeys_ParamsDataView {
 public:
  SyncEncryptionKeysExtension_SetEncryptionKeys_ParamsDataView() = default;

  SyncEncryptionKeysExtension_SetEncryptionKeys_ParamsDataView(
      internal::SyncEncryptionKeysExtension_SetEncryptionKeys_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetGaiaIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadGaiaId(UserType* output) {
    
    auto* pointer = data_->gaia_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  inline void GetEncryptionKeysDataView(
      mojo::ArrayDataView<mojo::ArrayDataView<uint8_t>>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadEncryptionKeys(UserType* output) {
    
    auto* pointer = data_->encryption_keys.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<mojo::ArrayDataView<uint8_t>>>(
        pointer, output, message_);
  }
  int32_t last_key_version() const {
    return data_->last_key_version;
  }
 private:
  internal::SyncEncryptionKeysExtension_SetEncryptionKeys_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SyncEncryptionKeysExtension_SetEncryptionKeys_ResponseParamsDataView {
 public:
  SyncEncryptionKeysExtension_SetEncryptionKeys_ResponseParamsDataView() = default;

  SyncEncryptionKeysExtension_SetEncryptionKeys_ResponseParamsDataView(
      internal::SyncEncryptionKeysExtension_SetEncryptionKeys_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::SyncEncryptionKeysExtension_SetEncryptionKeys_ResponseParams_Data* data_ = nullptr;
};



class SyncEncryptionKeysExtension_AddTrustedRecoveryMethod_ParamsDataView {
 public:
  SyncEncryptionKeysExtension_AddTrustedRecoveryMethod_ParamsDataView() = default;

  SyncEncryptionKeysExtension_AddTrustedRecoveryMethod_ParamsDataView(
      internal::SyncEncryptionKeysExtension_AddTrustedRecoveryMethod_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetGaiaIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadGaiaId(UserType* output) {
    
    auto* pointer = data_->gaia_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  inline void GetPublicKeyDataView(
      mojo::ArrayDataView<uint8_t>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadPublicKey(UserType* output) {
    
    auto* pointer = data_->public_key.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<uint8_t>>(
        pointer, output, message_);
  }
  int32_t method_type_hint() const {
    return data_->method_type_hint;
  }
 private:
  internal::SyncEncryptionKeysExtension_AddTrustedRecoveryMethod_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SyncEncryptionKeysExtension_AddTrustedRecoveryMethod_ResponseParamsDataView {
 public:
  SyncEncryptionKeysExtension_AddTrustedRecoveryMethod_ResponseParamsDataView() = default;

  SyncEncryptionKeysExtension_AddTrustedRecoveryMethod_ResponseParamsDataView(
      internal::SyncEncryptionKeysExtension_AddTrustedRecoveryMethod_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::SyncEncryptionKeysExtension_AddTrustedRecoveryMethod_ResponseParams_Data* data_ = nullptr;
};


inline void SyncEncryptionKeysExtension_SetEncryptionKeys_ParamsDataView::GetGaiaIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->gaia_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}
inline void SyncEncryptionKeysExtension_SetEncryptionKeys_ParamsDataView::GetEncryptionKeysDataView(
    mojo::ArrayDataView<mojo::ArrayDataView<uint8_t>>* output) {
  auto pointer = data_->encryption_keys.Get();
  *output = mojo::ArrayDataView<mojo::ArrayDataView<uint8_t>>(pointer, message_);
}




inline void SyncEncryptionKeysExtension_AddTrustedRecoveryMethod_ParamsDataView::GetGaiaIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->gaia_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}
inline void SyncEncryptionKeysExtension_AddTrustedRecoveryMethod_ParamsDataView::GetPublicKeyDataView(
    mojo::ArrayDataView<uint8_t>* output) {
  auto pointer = data_->public_key.Get();
  *output = mojo::ArrayDataView<uint8_t>(pointer, message_);
}



}  // namespace mojom
}  // namespace chrome

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // CHROME_COMMON_SYNC_ENCRYPTION_KEYS_EXTENSION_MOJOM_PARAMS_DATA_H_