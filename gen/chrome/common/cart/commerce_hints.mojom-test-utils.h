// chrome/common/cart/commerce_hints.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CHROME_COMMON_CART_COMMERCE_HINTS_MOJOM_TEST_UTILS_H_
#define CHROME_COMMON_CART_COMMERCE_HINTS_MOJOM_TEST_UTILS_H_

#include "chrome/common/cart/commerce_hints.mojom.h"


namespace cart {
namespace mojom {


class  CommerceHintObserverInterceptorForTesting : public CommerceHintObserver {
  virtual CommerceHintObserver* GetForwardingInterface() = 0;
  void OnAddToCart(const absl::optional<::GURL>& cart_url, const std::string& product_id) override;
  void OnVisitCart() override;
  void OnCartProductUpdated(std::vector<ProductPtr> products) override;
  void OnVisitCheckout() override;
  void OnPurchase() override;
  void OnFormSubmit(bool is_purchase) override;
  void OnWillSendRequest(bool is_addtocart) override;
  void OnNavigation(const ::GURL& url, const std::string& version_number, OnNavigationCallback callback) override;
  void OnCartExtraction(OnCartExtractionCallback callback) override;
};
class  CommerceHintObserverAsyncWaiter {
 public:
  explicit CommerceHintObserverAsyncWaiter(CommerceHintObserver* proxy);

  CommerceHintObserverAsyncWaiter(const CommerceHintObserverAsyncWaiter&) = delete;
  CommerceHintObserverAsyncWaiter& operator=(const CommerceHintObserverAsyncWaiter&) = delete;

  ~CommerceHintObserverAsyncWaiter();
  void OnNavigation(
      const ::GURL& url, const std::string& version_number, bool* out_should_skip, HeuristicsPtr* out_heuristics);
  void OnCartExtraction(
      std::string* out_product_id_json, std::string* out_cart_extraction_script);

 private:
  CommerceHintObserver* const proxy_;
};




}  // namespace mojom
}  // namespace cart

#endif  // CHROME_COMMON_CART_COMMERCE_HINTS_MOJOM_TEST_UTILS_H_