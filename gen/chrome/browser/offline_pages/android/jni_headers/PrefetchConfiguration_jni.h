// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/offlinepages/prefetch/PrefetchConfiguration

#ifndef org_chromium_chrome_browser_offlinepages_prefetch_PrefetchConfiguration_JNI
#define org_chromium_chrome_browser_offlinepages_prefetch_PrefetchConfiguration_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace offline_pages {
namespace android {

static jboolean JNI_PrefetchConfiguration_IsPrefetchingEnabled(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& key);

JNI_GENERATOR_EXPORT jboolean Java_J_N_MmFeqmtn(
    JNIEnv* env,
    jclass jcaller,
    jobject key) {
  return JNI_PrefetchConfiguration_IsPrefetchingEnabled(env,
      base::android::JavaParamRef<jobject>(env, key));
}

static jboolean JNI_PrefetchConfiguration_IsEnabledByServer(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& key);

JNI_GENERATOR_EXPORT jboolean Java_J_N_M9WQl0ie(
    JNIEnv* env,
    jclass jcaller,
    jobject key) {
  return JNI_PrefetchConfiguration_IsEnabledByServer(env, base::android::JavaParamRef<jobject>(env,
      key));
}

static jboolean JNI_PrefetchConfiguration_IsForbiddenCheckDue(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& key);

JNI_GENERATOR_EXPORT jboolean Java_J_N_MBbHDYGg(
    JNIEnv* env,
    jclass jcaller,
    jobject key) {
  return JNI_PrefetchConfiguration_IsForbiddenCheckDue(env,
      base::android::JavaParamRef<jobject>(env, key));
}

static jboolean JNI_PrefetchConfiguration_IsEnabledByServerUnknown(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& key);

JNI_GENERATOR_EXPORT jboolean Java_J_N_M94kN9ol(
    JNIEnv* env,
    jclass jcaller,
    jobject key) {
  return JNI_PrefetchConfiguration_IsEnabledByServerUnknown(env,
      base::android::JavaParamRef<jobject>(env, key));
}

static void JNI_PrefetchConfiguration_SetPrefetchingEnabledInSettings(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& key,
    jboolean enabled);

JNI_GENERATOR_EXPORT void Java_J_N_MBd5XB3K(
    JNIEnv* env,
    jclass jcaller,
    jobject key,
    jboolean enabled) {
  return JNI_PrefetchConfiguration_SetPrefetchingEnabledInSettings(env,
      base::android::JavaParamRef<jobject>(env, key), enabled);
}

static jboolean JNI_PrefetchConfiguration_IsPrefetchingEnabledInSettings(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& key);

JNI_GENERATOR_EXPORT jboolean Java_J_N_MNfhveva(
    JNIEnv* env,
    jclass jcaller,
    jobject key) {
  return JNI_PrefetchConfiguration_IsPrefetchingEnabledInSettings(env,
      base::android::JavaParamRef<jobject>(env, key));
}


}  // namespace android
}  // namespace offline_pages

#endif  // org_chromium_chrome_browser_offlinepages_prefetch_PrefetchConfiguration_JNI
