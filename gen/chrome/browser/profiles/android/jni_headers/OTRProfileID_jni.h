// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/profiles/OTRProfileID

#ifndef org_chromium_chrome_browser_profiles_OTRProfileID_JNI
#define org_chromium_chrome_browser_profiles_OTRProfileID_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_profiles_OTRProfileID[];
const char kClassPath_org_chromium_chrome_browser_profiles_OTRProfileID[] =
    "org/chromium/chrome/browser/profiles/OTRProfileID";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_profiles_OTRProfileID_clazz(nullptr);
#ifndef org_chromium_chrome_browser_profiles_OTRProfileID_clazz_defined
#define org_chromium_chrome_browser_profiles_OTRProfileID_clazz_defined
inline jclass org_chromium_chrome_browser_profiles_OTRProfileID_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_profiles_OTRProfileID,
      &g_org_chromium_chrome_browser_profiles_OTRProfileID_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
static base::android::ScopedJavaLocalRef<jobject> JNI_OTRProfileID_CreateUniqueOTRProfileID(JNIEnv*
    env, const base::android::JavaParamRef<jstring>& profileIDPrefix);

JNI_GENERATOR_EXPORT jobject Java_J_N_Mgdxq2wn(
    JNIEnv* env,
    jclass jcaller,
    jstring profileIDPrefix) {
  return JNI_OTRProfileID_CreateUniqueOTRProfileID(env, base::android::JavaParamRef<jstring>(env,
      profileIDPrefix)).Release();
}

static base::android::ScopedJavaLocalRef<jobject> JNI_OTRProfileID_GetPrimaryID(JNIEnv* env);

JNI_GENERATOR_EXPORT jobject Java_J_N_M7eLuem4(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_OTRProfileID_GetPrimaryID(env).Release();
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_profiles_OTRProfileID_Constructor(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_OTRProfileID_Constructor(JNIEnv* env, const
    base::android::JavaRef<jstring>& profileID) {
  jclass clazz = org_chromium_chrome_browser_profiles_OTRProfileID_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_profiles_OTRProfileID_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "<init>",
          "(Ljava/lang/String;)V",
          &g_org_chromium_chrome_browser_profiles_OTRProfileID_Constructor);

  jobject ret =
      env->NewObject(clazz,
          call_context.base.method_id, profileID.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_profiles_OTRProfileID_getProfileID(nullptr);
static base::android::ScopedJavaLocalRef<jstring> Java_OTRProfileID_getProfileID(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_chrome_browser_profiles_OTRProfileID_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_profiles_OTRProfileID_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getProfileID",
          "()Ljava/lang/String;",
          &g_org_chromium_chrome_browser_profiles_OTRProfileID_getProfileID);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_profiles_OTRProfileID_serialize(nullptr);
static base::android::ScopedJavaLocalRef<jstring> Java_OTRProfileID_serialize(JNIEnv* env, const
    base::android::JavaRef<jobject>& otrProfileID) {
  jclass clazz = org_chromium_chrome_browser_profiles_OTRProfileID_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_profiles_OTRProfileID_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "serialize",
          "(Lorg/chromium/chrome/browser/profiles/OTRProfileID;)Ljava/lang/String;",
          &g_org_chromium_chrome_browser_profiles_OTRProfileID_serialize);

  jstring ret =
      static_cast<jstring>(env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, otrProfileID.obj()));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_profiles_OTRProfileID_deserializeWithoutVerify(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_OTRProfileID_deserializeWithoutVerify(JNIEnv*
    env, const base::android::JavaRef<jstring>& value) {
  jclass clazz = org_chromium_chrome_browser_profiles_OTRProfileID_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_profiles_OTRProfileID_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "deserializeWithoutVerify",
          "(Ljava/lang/String;)Lorg/chromium/chrome/browser/profiles/OTRProfileID;",
          &g_org_chromium_chrome_browser_profiles_OTRProfileID_deserializeWithoutVerify);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, value.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

#endif  // org_chromium_chrome_browser_profiles_OTRProfileID_JNI
