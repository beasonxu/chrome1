// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/endpoint_fetcher/EndpointFetcher

#ifndef org_chromium_chrome_browser_endpoint_fetcher_EndpointFetcher_JNI
#define org_chromium_chrome_browser_endpoint_fetcher_EndpointFetcher_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.


// Step 2: Constants (optional).


// Step 3: Method stubs.
static void JNI_EndpointFetcher_NativeFetchOAuth(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& profile,
    const base::android::JavaParamRef<jstring>& oathConsumerName,
    const base::android::JavaParamRef<jstring>& url,
    const base::android::JavaParamRef<jstring>& httpsMethod,
    const base::android::JavaParamRef<jstring>& contentType,
    const base::android::JavaParamRef<jobjectArray>& scopes,
    const base::android::JavaParamRef<jstring>& postData,
    jlong timeout,
    jint annotationHashCode,
    const base::android::JavaParamRef<jobject>& callback);

JNI_GENERATOR_EXPORT void Java_J_N_M70bBKgp(
    JNIEnv* env,
    jclass jcaller,
    jobject profile,
    jstring oathConsumerName,
    jstring url,
    jstring httpsMethod,
    jstring contentType,
    jobjectArray scopes,
    jstring postData,
    jlong timeout,
    jint annotationHashCode,
    jobject callback) {
  return JNI_EndpointFetcher_NativeFetchOAuth(env, base::android::JavaParamRef<jobject>(env,
      profile), base::android::JavaParamRef<jstring>(env, oathConsumerName),
      base::android::JavaParamRef<jstring>(env, url), base::android::JavaParamRef<jstring>(env,
      httpsMethod), base::android::JavaParamRef<jstring>(env, contentType),
      base::android::JavaParamRef<jobjectArray>(env, scopes),
      base::android::JavaParamRef<jstring>(env, postData), timeout, annotationHashCode,
      base::android::JavaParamRef<jobject>(env, callback));
}

static void JNI_EndpointFetcher_NativeFetchChromeAPIKey(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& profile,
    const base::android::JavaParamRef<jstring>& url,
    const base::android::JavaParamRef<jstring>& httpsMethod,
    const base::android::JavaParamRef<jstring>& contentType,
    const base::android::JavaParamRef<jstring>& postData,
    jlong timeout,
    const base::android::JavaParamRef<jobjectArray>& headers,
    jint annotationHashCode,
    const base::android::JavaParamRef<jobject>& callback);

JNI_GENERATOR_EXPORT void Java_J_N_MiPC31k4(
    JNIEnv* env,
    jclass jcaller,
    jobject profile,
    jstring url,
    jstring httpsMethod,
    jstring contentType,
    jstring postData,
    jlong timeout,
    jobjectArray headers,
    jint annotationHashCode,
    jobject callback) {
  return JNI_EndpointFetcher_NativeFetchChromeAPIKey(env, base::android::JavaParamRef<jobject>(env,
      profile), base::android::JavaParamRef<jstring>(env, url),
      base::android::JavaParamRef<jstring>(env, httpsMethod),
      base::android::JavaParamRef<jstring>(env, contentType),
      base::android::JavaParamRef<jstring>(env, postData), timeout,
      base::android::JavaParamRef<jobjectArray>(env, headers), annotationHashCode,
      base::android::JavaParamRef<jobject>(env, callback));
}

static void JNI_EndpointFetcher_NativeFetchWithNoAuth(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& profile,
    const base::android::JavaParamRef<jstring>& url,
    jint annotationHashCode,
    const base::android::JavaParamRef<jobject>& callback);

JNI_GENERATOR_EXPORT void Java_J_N_MC5V7t2n(
    JNIEnv* env,
    jclass jcaller,
    jobject profile,
    jstring url,
    jint annotationHashCode,
    jobject callback) {
  return JNI_EndpointFetcher_NativeFetchWithNoAuth(env, base::android::JavaParamRef<jobject>(env,
      profile), base::android::JavaParamRef<jstring>(env, url), annotationHashCode,
      base::android::JavaParamRef<jobject>(env, callback));
}


#endif  // org_chromium_chrome_browser_endpoint_fetcher_EndpointFetcher_JNI
