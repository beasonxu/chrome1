// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/signin/services/UnifiedConsentServiceBridge

#ifndef org_chromium_chrome_browser_signin_services_UnifiedConsentServiceBridge_JNI
#define org_chromium_chrome_browser_signin_services_UnifiedConsentServiceBridge_JNI

#include <jni.h>

#include "../../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.


// Step 2: Constants (optional).


// Step 3: Method stubs.
static jboolean JNI_UnifiedConsentServiceBridge_IsUrlKeyedAnonymizedDataCollectionEnabled(JNIEnv*
    env, const base::android::JavaParamRef<jobject>& profile);

JNI_GENERATOR_EXPORT jboolean Java_J_N_Mfmn09fr(
    JNIEnv* env,
    jclass jcaller,
    jobject profile) {
  return JNI_UnifiedConsentServiceBridge_IsUrlKeyedAnonymizedDataCollectionEnabled(env,
      base::android::JavaParamRef<jobject>(env, profile));
}

static void JNI_UnifiedConsentServiceBridge_SetUrlKeyedAnonymizedDataCollectionEnabled(JNIEnv* env,
    const base::android::JavaParamRef<jobject>& profile,
    jboolean enabled);

JNI_GENERATOR_EXPORT void Java_J_N_MnEYaN9w(
    JNIEnv* env,
    jclass jcaller,
    jobject profile,
    jboolean enabled) {
  return JNI_UnifiedConsentServiceBridge_SetUrlKeyedAnonymizedDataCollectionEnabled(env,
      base::android::JavaParamRef<jobject>(env, profile), enabled);
}

static jboolean JNI_UnifiedConsentServiceBridge_IsUrlKeyedAnonymizedDataCollectionManaged(JNIEnv*
    env, const base::android::JavaParamRef<jobject>& profile);

JNI_GENERATOR_EXPORT jboolean Java_J_N_MIMq96JJ(
    JNIEnv* env,
    jclass jcaller,
    jobject profile) {
  return JNI_UnifiedConsentServiceBridge_IsUrlKeyedAnonymizedDataCollectionManaged(env,
      base::android::JavaParamRef<jobject>(env, profile));
}

static void JNI_UnifiedConsentServiceBridge_RecordSyncSetupDataTypesHistogram(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& profile);

JNI_GENERATOR_EXPORT void Java_J_N_M2AYruv7(
    JNIEnv* env,
    jclass jcaller,
    jobject profile) {
  return JNI_UnifiedConsentServiceBridge_RecordSyncSetupDataTypesHistogram(env,
      base::android::JavaParamRef<jobject>(env, profile));
}


#endif  // org_chromium_chrome_browser_signin_services_UnifiedConsentServiceBridge_JNI
