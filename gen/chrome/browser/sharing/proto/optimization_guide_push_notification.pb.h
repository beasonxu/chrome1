// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: optimization_guide_push_notification.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_optimization_5fguide_5fpush_5fnotification_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_optimization_5fguide_5fpush_5fnotification_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_optimization_5fguide_5fpush_5fnotification_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_optimization_5fguide_5fpush_5fnotification_2eproto {
  static const uint32_t offsets[];
};
namespace chrome_browser_sharing {
class OptimizationGuidePushNotification;
struct OptimizationGuidePushNotificationDefaultTypeInternal;
extern OptimizationGuidePushNotificationDefaultTypeInternal _OptimizationGuidePushNotification_default_instance_;
}  // namespace chrome_browser_sharing
PROTOBUF_NAMESPACE_OPEN
template<> ::chrome_browser_sharing::OptimizationGuidePushNotification* Arena::CreateMaybeMessage<::chrome_browser_sharing::OptimizationGuidePushNotification>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace chrome_browser_sharing {

// ===================================================================

class OptimizationGuidePushNotification final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:chrome_browser_sharing.OptimizationGuidePushNotification) */ {
 public:
  inline OptimizationGuidePushNotification() : OptimizationGuidePushNotification(nullptr) {}
  ~OptimizationGuidePushNotification() override;
  explicit PROTOBUF_CONSTEXPR OptimizationGuidePushNotification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  OptimizationGuidePushNotification(const OptimizationGuidePushNotification& from);
  OptimizationGuidePushNotification(OptimizationGuidePushNotification&& from) noexcept
    : OptimizationGuidePushNotification() {
    *this = ::std::move(from);
  }

  inline OptimizationGuidePushNotification& operator=(const OptimizationGuidePushNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline OptimizationGuidePushNotification& operator=(OptimizationGuidePushNotification&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const OptimizationGuidePushNotification& default_instance() {
    return *internal_default_instance();
  }
  static inline const OptimizationGuidePushNotification* internal_default_instance() {
    return reinterpret_cast<const OptimizationGuidePushNotification*>(
               &_OptimizationGuidePushNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(OptimizationGuidePushNotification& a, OptimizationGuidePushNotification& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(OptimizationGuidePushNotification* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OptimizationGuidePushNotification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OptimizationGuidePushNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<OptimizationGuidePushNotification>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const OptimizationGuidePushNotification& from);
  void MergeFrom(const OptimizationGuidePushNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OptimizationGuidePushNotification* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "chrome_browser_sharing.OptimizationGuidePushNotification";
  }
  protected:
  explicit OptimizationGuidePushNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHintNotificationPayloadBytesFieldNumber = 1,
  };
  // bytes hint_notification_payload_bytes = 1;
  void clear_hint_notification_payload_bytes();
  const std::string& hint_notification_payload_bytes() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_hint_notification_payload_bytes(ArgT0&& arg0, ArgT... args);
  std::string* mutable_hint_notification_payload_bytes();
  PROTOBUF_NODISCARD std::string* release_hint_notification_payload_bytes();
  void set_allocated_hint_notification_payload_bytes(std::string* hint_notification_payload_bytes);
  private:
  const std::string& _internal_hint_notification_payload_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_hint_notification_payload_bytes(const std::string& value);
  std::string* _internal_mutable_hint_notification_payload_bytes();
  public:

  // @@protoc_insertion_point(class_scope:chrome_browser_sharing.OptimizationGuidePushNotification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr hint_notification_payload_bytes_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimization_5fguide_5fpush_5fnotification_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// OptimizationGuidePushNotification

// bytes hint_notification_payload_bytes = 1;
inline void OptimizationGuidePushNotification::clear_hint_notification_payload_bytes() {
  hint_notification_payload_bytes_.ClearToEmpty();
}
inline const std::string& OptimizationGuidePushNotification::hint_notification_payload_bytes() const {
  // @@protoc_insertion_point(field_get:chrome_browser_sharing.OptimizationGuidePushNotification.hint_notification_payload_bytes)
  return _internal_hint_notification_payload_bytes();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void OptimizationGuidePushNotification::set_hint_notification_payload_bytes(ArgT0&& arg0, ArgT... args) {
 
 hint_notification_payload_bytes_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:chrome_browser_sharing.OptimizationGuidePushNotification.hint_notification_payload_bytes)
}
inline std::string* OptimizationGuidePushNotification::mutable_hint_notification_payload_bytes() {
  std::string* _s = _internal_mutable_hint_notification_payload_bytes();
  // @@protoc_insertion_point(field_mutable:chrome_browser_sharing.OptimizationGuidePushNotification.hint_notification_payload_bytes)
  return _s;
}
inline const std::string& OptimizationGuidePushNotification::_internal_hint_notification_payload_bytes() const {
  return hint_notification_payload_bytes_.Get();
}
inline void OptimizationGuidePushNotification::_internal_set_hint_notification_payload_bytes(const std::string& value) {
  
  hint_notification_payload_bytes_.Set(value, GetArenaForAllocation());
}
inline std::string* OptimizationGuidePushNotification::_internal_mutable_hint_notification_payload_bytes() {
  
  return hint_notification_payload_bytes_.Mutable(GetArenaForAllocation());
}
inline std::string* OptimizationGuidePushNotification::release_hint_notification_payload_bytes() {
  // @@protoc_insertion_point(field_release:chrome_browser_sharing.OptimizationGuidePushNotification.hint_notification_payload_bytes)
  return hint_notification_payload_bytes_.Release();
}
inline void OptimizationGuidePushNotification::set_allocated_hint_notification_payload_bytes(std::string* hint_notification_payload_bytes) {
  if (hint_notification_payload_bytes != nullptr) {
    
  } else {
    
  }
  hint_notification_payload_bytes_.SetAllocated(hint_notification_payload_bytes, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (hint_notification_payload_bytes_.IsDefault()) {
    hint_notification_payload_bytes_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:chrome_browser_sharing.OptimizationGuidePushNotification.hint_notification_payload_bytes)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace chrome_browser_sharing

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_optimization_5fguide_5fpush_5fnotification_2eproto
