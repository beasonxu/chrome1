// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/history_clusters/HistoryClustersBridge

#ifndef org_chromium_chrome_browser_history_clusters_HistoryClustersBridge_JNI
#define org_chromium_chrome_browser_history_clusters_HistoryClustersBridge_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_history_1clusters_HistoryClustersBridge[];
const char kClassPath_org_chromium_chrome_browser_history_1clusters_HistoryClustersBridge[] =
    "org/chromium/chrome/browser/history_clusters/HistoryClustersBridge";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_history_1clusters_HistoryClustersBridge_clazz(nullptr);
#ifndef org_chromium_chrome_browser_history_1clusters_HistoryClustersBridge_clazz_defined
#define org_chromium_chrome_browser_history_1clusters_HistoryClustersBridge_clazz_defined
inline jclass org_chromium_chrome_browser_history_1clusters_HistoryClustersBridge_clazz(JNIEnv* env)
    {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_history_1clusters_HistoryClustersBridge,
      &g_org_chromium_chrome_browser_history_1clusters_HistoryClustersBridge_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace history_clusters {

static base::android::ScopedJavaLocalRef<jobject> JNI_HistoryClustersBridge_GetForProfile(JNIEnv*
    env, const base::android::JavaParamRef<jobject>& profile);

JNI_GENERATOR_EXPORT jobject Java_J_N_M1GgDf6u(
    JNIEnv* env,
    jclass jcaller,
    jobject profile) {
  return JNI_HistoryClustersBridge_GetForProfile(env, base::android::JavaParamRef<jobject>(env,
      profile)).Release();
}

JNI_GENERATOR_EXPORT void Java_J_N_MD4nuvYC(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeHistoryClustersBridge,
    jobject caller,
    jstring query,
    jobject callback) {
  HistoryClustersBridge* native =
      reinterpret_cast<HistoryClustersBridge*>(nativeHistoryClustersBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "QueryClusters");
  return native->QueryClusters(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, query), base::android::JavaParamRef<jobject>(env,
      callback));
}

JNI_GENERATOR_EXPORT void Java_J_N_MMJAutz7(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeHistoryClustersBridge,
    jobject caller,
    jstring query,
    jobject callback) {
  HistoryClustersBridge* native =
      reinterpret_cast<HistoryClustersBridge*>(nativeHistoryClustersBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "LoadMoreClusters");
  return native->LoadMoreClusters(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, query), base::android::JavaParamRef<jobject>(env,
      callback));
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_history_1clusters_HistoryClustersBridge_create(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_HistoryClustersBridge_create(JNIEnv* env,
    jlong nativeBridgePointer) {
  jclass clazz = org_chromium_chrome_browser_history_1clusters_HistoryClustersBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_history_1clusters_HistoryClustersBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "create",
          "(J)Lorg/chromium/chrome/browser/history_clusters/HistoryClustersBridge;",
          &g_org_chromium_chrome_browser_history_1clusters_HistoryClustersBridge_create);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, nativeBridgePointer);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_history_1clusters_HistoryClustersBridge_buildClusterResult(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_HistoryClustersBridge_buildClusterResult(JNIEnv* env, const
    base::android::JavaRef<jobjectArray>& clusters,
    const base::android::JavaRef<jobjectArray>& uniqueRawLabels,
    const base::android::JavaRef<jintArray>& labelCounts,
    const base::android::JavaRef<jstring>& query,
    jboolean canLoadMore,
    jboolean isContinuation) {
  jclass clazz = org_chromium_chrome_browser_history_1clusters_HistoryClustersBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_history_1clusters_HistoryClustersBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "buildClusterResult",
"([Lorg/chromium/chrome/browser/history_clusters/HistoryCluster;[Ljava/lang/String;[ILjava/lang/String;ZZ)Lorg/chromium/chrome/browser/history_clusters/HistoryClustersResult;",
&g_org_chromium_chrome_browser_history_1clusters_HistoryClustersBridge_buildClusterResult);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, clusters.obj(), uniqueRawLabels.obj(), labelCounts.obj(),
              query.obj(), canLoadMore, isContinuation);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_history_1clusters_HistoryClustersBridge_buildCluster(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_HistoryClustersBridge_buildCluster(JNIEnv*
    env, const base::android::JavaRef<jobjectArray>& visits,
    const base::android::JavaRef<jstring>& label,
    const base::android::JavaRef<jstring>& rawLabel,
    const base::android::JavaRef<jintArray>& labelMatchStarts,
    const base::android::JavaRef<jintArray>& labelMatchEnds,
    jlong timestamp,
    const base::android::JavaRef<jobjectArray>& relatedSearches) {
  jclass clazz = org_chromium_chrome_browser_history_1clusters_HistoryClustersBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_history_1clusters_HistoryClustersBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "buildCluster",
"([Lorg/chromium/chrome/browser/history_clusters/ClusterVisit;Ljava/lang/String;Ljava/lang/String;[I[IJ[Ljava/lang/String;)Lorg/chromium/chrome/browser/history_clusters/HistoryCluster;",
          &g_org_chromium_chrome_browser_history_1clusters_HistoryClustersBridge_buildCluster);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, visits.obj(), label.obj(), rawLabel.obj(),
              labelMatchStarts.obj(), labelMatchEnds.obj(), timestamp, relatedSearches.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_history_1clusters_HistoryClustersBridge_buildClusterVisit(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_HistoryClustersBridge_buildClusterVisit(JNIEnv* env, jfloat score,
    const base::android::JavaRef<jobject>& normalizedUrl,
    const base::android::JavaRef<jstring>& urlForDisplay,
    const base::android::JavaRef<jstring>& title,
    const base::android::JavaRef<jintArray>& titleMatchStarts,
    const base::android::JavaRef<jintArray>& titleMatchEnds,
    const base::android::JavaRef<jintArray>& urlMatchStarts,
    const base::android::JavaRef<jintArray>& urlMatchEnds,
    const base::android::JavaRef<jobject>& rawUrl,
    jlong timestamp,
    const base::android::JavaRef<jlongArray>& duplicateVisitTimestamps,
    const base::android::JavaRef<jobjectArray>& duplicateVisitUrls) {
  jclass clazz = org_chromium_chrome_browser_history_1clusters_HistoryClustersBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_history_1clusters_HistoryClustersBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "buildClusterVisit",
"(FLorg/chromium/url/GURL;Ljava/lang/String;Ljava/lang/String;[I[I[I[ILorg/chromium/url/GURL;J[J[Lorg/chromium/url/GURL;)Lorg/chromium/chrome/browser/history_clusters/ClusterVisit;",
          &g_org_chromium_chrome_browser_history_1clusters_HistoryClustersBridge_buildClusterVisit);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, score, normalizedUrl.obj(), urlForDisplay.obj(), title.obj(),
              titleMatchStarts.obj(), titleMatchEnds.obj(), urlMatchStarts.obj(),
              urlMatchEnds.obj(), rawUrl.obj(), timestamp, duplicateVisitTimestamps.obj(),
              duplicateVisitUrls.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

}  // namespace history_clusters

#endif  // org_chromium_chrome_browser_history_clusters_HistoryClustersBridge_JNI
