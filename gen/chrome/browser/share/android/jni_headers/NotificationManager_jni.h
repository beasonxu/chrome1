// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/share/send_tab_to_self/NotificationManager

#ifndef org_chromium_chrome_browser_share_send_tab_to_self_NotificationManager_JNI
#define org_chromium_chrome_browser_share_send_tab_to_self_NotificationManager_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_share_send_1tab_1to_1self_NotificationManager[];
const char kClassPath_org_chromium_chrome_browser_share_send_1tab_1to_1self_NotificationManager[] =
    "org/chromium/chrome/browser/share/send_tab_to_self/NotificationManager";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_share_send_1tab_1to_1self_NotificationManager_clazz(nullptr);
#ifndef org_chromium_chrome_browser_share_send_1tab_1to_1self_NotificationManager_clazz_defined
#define org_chromium_chrome_browser_share_send_1tab_1to_1self_NotificationManager_clazz_defined
inline jclass
    org_chromium_chrome_browser_share_send_1tab_1to_1self_NotificationManager_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_share_send_1tab_1to_1self_NotificationManager,
      &g_org_chromium_chrome_browser_share_send_1tab_1to_1self_NotificationManager_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_share_send_1tab_1to_1self_NotificationManager_hideNotification(nullptr);
static jboolean Java_NotificationManager_hideNotification(JNIEnv* env, const
    base::android::JavaRef<jstring>& guid) {
  jclass clazz =
      org_chromium_chrome_browser_share_send_1tab_1to_1self_NotificationManager_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_share_send_1tab_1to_1self_NotificationManager_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "hideNotification",
          "(Ljava/lang/String;)Z",
&g_org_chromium_chrome_browser_share_send_1tab_1to_1self_NotificationManager_hideNotification);

  jboolean ret =
      env->CallStaticBooleanMethod(clazz,
          call_context.base.method_id, guid.obj());
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_share_send_1tab_1to_1self_NotificationManager_showNotification(nullptr);
static jboolean Java_NotificationManager_showNotification(JNIEnv* env, const
    base::android::JavaRef<jstring>& guid,
    const base::android::JavaRef<jstring>& url,
    const base::android::JavaRef<jstring>& title,
    const base::android::JavaRef<jstring>& deviceName,
    jlong timeoutAtMillis,
    const base::android::JavaRef<jclass>& broadcastReceiver) {
  jclass clazz =
      org_chromium_chrome_browser_share_send_1tab_1to_1self_NotificationManager_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_chrome_browser_share_send_1tab_1to_1self_NotificationManager_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "showNotification",
"(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/Class;)Z",
&g_org_chromium_chrome_browser_share_send_1tab_1to_1self_NotificationManager_showNotification);

  jboolean ret =
      env->CallStaticBooleanMethod(clazz,
          call_context.base.method_id, guid.obj(), url.obj(), title.obj(), deviceName.obj(),
              timeoutAtMillis, broadcastReceiver.obj());
  return ret;
}

#endif  // org_chromium_chrome_browser_share_send_tab_to_self_NotificationManager_JNI
