// chrome/browser/ui/webui/omnibox/omnibox.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CHROME_BROWSER_UI_WEBUI_OMNIBOX_OMNIBOX_MOJOM_PARAMS_DATA_H_
#define CHROME_BROWSER_UI_WEBUI_OMNIBOX_OMNIBOX_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace mojom {
namespace internal {

class ValidationContext;
class  OmniboxPageHandler_SetClientPage_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Interface_Data page;

 private:
  friend class mojo::internal::MessageFragment<OmniboxPageHandler_SetClientPage_Params_Data>;

  OmniboxPageHandler_SetClientPage_Params_Data();
  ~OmniboxPageHandler_SetClientPage_Params_Data() = delete;
};
static_assert(sizeof(OmniboxPageHandler_SetClientPage_Params_Data) == 16,
              "Bad sizeof(OmniboxPageHandler_SetClientPage_Params_Data)");
class  OmniboxPageHandler_StartOmniboxQuery_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> input_string;
  uint8_t reset_autocomplete_controller : 1;
  uint8_t zero_suggest : 1;
  uint8_t prevent_inline_autocomplete : 1;
  uint8_t prefer_keyword : 1;
  uint8_t pad4_[3];
  int32_t cursor_position;
  mojo::internal::Pointer<mojo::internal::String_Data> current_url;
  int32_t page_classification;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<OmniboxPageHandler_StartOmniboxQuery_Params_Data>;

  OmniboxPageHandler_StartOmniboxQuery_Params_Data();
  ~OmniboxPageHandler_StartOmniboxQuery_Params_Data() = delete;
};
static_assert(sizeof(OmniboxPageHandler_StartOmniboxQuery_Params_Data) == 40,
              "Bad sizeof(OmniboxPageHandler_StartOmniboxQuery_Params_Data)");
class  OmniboxPage_HandleNewAutocompleteResponse_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::OmniboxResponse_Data> response;
  uint8_t is_page_controller : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<OmniboxPage_HandleNewAutocompleteResponse_Params_Data>;

  OmniboxPage_HandleNewAutocompleteResponse_Params_Data();
  ~OmniboxPage_HandleNewAutocompleteResponse_Params_Data() = delete;
};
static_assert(sizeof(OmniboxPage_HandleNewAutocompleteResponse_Params_Data) == 24,
              "Bad sizeof(OmniboxPage_HandleNewAutocompleteResponse_Params_Data)");
class  OmniboxPage_HandleNewAutocompleteQuery_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t is_page_controller : 1;
  uint8_t pad0_[7];
  mojo::internal::Pointer<mojo::internal::String_Data> input_text;

 private:
  friend class mojo::internal::MessageFragment<OmniboxPage_HandleNewAutocompleteQuery_Params_Data>;

  OmniboxPage_HandleNewAutocompleteQuery_Params_Data();
  ~OmniboxPage_HandleNewAutocompleteQuery_Params_Data() = delete;
};
static_assert(sizeof(OmniboxPage_HandleNewAutocompleteQuery_Params_Data) == 24,
              "Bad sizeof(OmniboxPage_HandleNewAutocompleteQuery_Params_Data)");
class  OmniboxPage_HandleAnswerImageData_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> image_url;
  mojo::internal::Pointer<mojo::internal::String_Data> image_data;

 private:
  friend class mojo::internal::MessageFragment<OmniboxPage_HandleAnswerImageData_Params_Data>;

  OmniboxPage_HandleAnswerImageData_Params_Data();
  ~OmniboxPage_HandleAnswerImageData_Params_Data() = delete;
};
static_assert(sizeof(OmniboxPage_HandleAnswerImageData_Params_Data) == 24,
              "Bad sizeof(OmniboxPage_HandleAnswerImageData_Params_Data)");

}  // namespace internal


class OmniboxPageHandler_SetClientPage_ParamsDataView {
 public:
  OmniboxPageHandler_SetClientPage_ParamsDataView() = default;

  OmniboxPageHandler_SetClientPage_ParamsDataView(
      internal::OmniboxPageHandler_SetClientPage_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakePage() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfacePtrDataView<::mojom::OmniboxPageInterfaceBase>>(
            &data_->page, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::OmniboxPageHandler_SetClientPage_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class OmniboxPageHandler_StartOmniboxQuery_ParamsDataView {
 public:
  OmniboxPageHandler_StartOmniboxQuery_ParamsDataView() = default;

  OmniboxPageHandler_StartOmniboxQuery_ParamsDataView(
      internal::OmniboxPageHandler_StartOmniboxQuery_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetInputStringDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadInputString(UserType* output) {
    
    auto* pointer = data_->input_string.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  bool reset_autocomplete_controller() const {
    return data_->reset_autocomplete_controller;
  }
  int32_t cursor_position() const {
    return data_->cursor_position;
  }
  bool zero_suggest() const {
    return data_->zero_suggest;
  }
  bool prevent_inline_autocomplete() const {
    return data_->prevent_inline_autocomplete;
  }
  bool prefer_keyword() const {
    return data_->prefer_keyword;
  }
  inline void GetCurrentUrlDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadCurrentUrl(UserType* output) {
    
    auto* pointer = data_->current_url.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  int32_t page_classification() const {
    return data_->page_classification;
  }
 private:
  internal::OmniboxPageHandler_StartOmniboxQuery_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class OmniboxPage_HandleNewAutocompleteResponse_ParamsDataView {
 public:
  OmniboxPage_HandleNewAutocompleteResponse_ParamsDataView() = default;

  OmniboxPage_HandleNewAutocompleteResponse_ParamsDataView(
      internal::OmniboxPage_HandleNewAutocompleteResponse_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetResponseDataView(
      OmniboxResponseDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadResponse(UserType* output) {
    
    auto* pointer = data_->response.Get();
    return mojo::internal::Deserialize<::mojom::OmniboxResponseDataView>(
        pointer, output, message_);
  }
  bool is_page_controller() const {
    return data_->is_page_controller;
  }
 private:
  internal::OmniboxPage_HandleNewAutocompleteResponse_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class OmniboxPage_HandleNewAutocompleteQuery_ParamsDataView {
 public:
  OmniboxPage_HandleNewAutocompleteQuery_ParamsDataView() = default;

  OmniboxPage_HandleNewAutocompleteQuery_ParamsDataView(
      internal::OmniboxPage_HandleNewAutocompleteQuery_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  bool is_page_controller() const {
    return data_->is_page_controller;
  }
  inline void GetInputTextDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadInputText(UserType* output) {
    
    auto* pointer = data_->input_text.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::OmniboxPage_HandleNewAutocompleteQuery_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class OmniboxPage_HandleAnswerImageData_ParamsDataView {
 public:
  OmniboxPage_HandleAnswerImageData_ParamsDataView() = default;

  OmniboxPage_HandleAnswerImageData_ParamsDataView(
      internal::OmniboxPage_HandleAnswerImageData_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetImageUrlDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadImageUrl(UserType* output) {
    
    auto* pointer = data_->image_url.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  inline void GetImageDataDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadImageData(UserType* output) {
    
    auto* pointer = data_->image_data.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::OmniboxPage_HandleAnswerImageData_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};




inline void OmniboxPageHandler_StartOmniboxQuery_ParamsDataView::GetInputStringDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->input_string.Get();
  *output = mojo::StringDataView(pointer, message_);
}
inline void OmniboxPageHandler_StartOmniboxQuery_ParamsDataView::GetCurrentUrlDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->current_url.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void OmniboxPage_HandleNewAutocompleteResponse_ParamsDataView::GetResponseDataView(
    OmniboxResponseDataView* output) {
  auto pointer = data_->response.Get();
  *output = OmniboxResponseDataView(pointer, message_);
}


inline void OmniboxPage_HandleNewAutocompleteQuery_ParamsDataView::GetInputTextDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->input_text.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void OmniboxPage_HandleAnswerImageData_ParamsDataView::GetImageUrlDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->image_url.Get();
  *output = mojo::StringDataView(pointer, message_);
}
inline void OmniboxPage_HandleAnswerImageData_ParamsDataView::GetImageDataDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->image_data.Get();
  *output = mojo::StringDataView(pointer, message_);
}

}  // namespace mojom

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // CHROME_BROWSER_UI_WEBUI_OMNIBOX_OMNIBOX_MOJOM_PARAMS_DATA_H_