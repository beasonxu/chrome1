// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/layouts/scene_layer/SceneLayer

#ifndef org_chromium_chrome_browser_layouts_scene_layer_SceneLayer_JNI
#define org_chromium_chrome_browser_layouts_scene_layer_SceneLayer_JNI

#include <jni.h>

#include "../../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_layouts_scene_1layer_SceneLayer[];
const char kClassPath_org_chromium_chrome_browser_layouts_scene_1layer_SceneLayer[] =
    "org/chromium/chrome/browser/layouts/scene_layer/SceneLayer";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_layouts_scene_1layer_SceneLayer_clazz(nullptr);
#ifndef org_chromium_chrome_browser_layouts_scene_1layer_SceneLayer_clazz_defined
#define org_chromium_chrome_browser_layouts_scene_1layer_SceneLayer_clazz_defined
inline jclass org_chromium_chrome_browser_layouts_scene_1layer_SceneLayer_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_layouts_scene_1layer_SceneLayer,
      &g_org_chromium_chrome_browser_layouts_scene_1layer_SceneLayer_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace android {

static jlong JNI_SceneLayer_Init(JNIEnv* env, const base::android::JavaParamRef<jobject>& caller);

JNI_GENERATOR_EXPORT jlong Java_J_N_Mw0UUAvK(
    JNIEnv* env,
    jclass jcaller,
    jobject caller) {
  return JNI_SceneLayer_Init(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT void Java_J_N_MJ5Z0mi3(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeSceneLayer,
    jobject caller) {
  SceneLayer* native = reinterpret_cast<SceneLayer*>(nativeSceneLayer);
  CHECK_NATIVE_PTR(env, jcaller, native, "RemoveFromParent");
  return native->RemoveFromParent(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT void Java_J_N_MPFnESYL(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeSceneLayer,
    jobject caller) {
  SceneLayer* native = reinterpret_cast<SceneLayer*>(nativeSceneLayer);
  CHECK_NATIVE_PTR(env, jcaller, native, "Destroy");
  return native->Destroy(env, base::android::JavaParamRef<jobject>(env, caller));
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_layouts_scene_1layer_SceneLayer_setNativePtr(nullptr);
static void Java_SceneLayer_setNativePtr(JNIEnv* env, const base::android::JavaRef<jobject>& obj,
    jlong nativeSceneLayerPtr) {
  jclass clazz = org_chromium_chrome_browser_layouts_scene_1layer_SceneLayer_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_layouts_scene_1layer_SceneLayer_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setNativePtr",
          "(J)V",
          &g_org_chromium_chrome_browser_layouts_scene_1layer_SceneLayer_setNativePtr);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, nativeSceneLayerPtr);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_layouts_scene_1layer_SceneLayer_getNativePtr(nullptr);
static jlong Java_SceneLayer_getNativePtr(JNIEnv* env, const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_chrome_browser_layouts_scene_1layer_SceneLayer_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_chrome_browser_layouts_scene_1layer_SceneLayer_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getNativePtr",
          "()J",
          &g_org_chromium_chrome_browser_layouts_scene_1layer_SceneLayer_getNativePtr);

  jlong ret =
      env->CallLongMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

}  // namespace android

#endif  // org_chromium_chrome_browser_layouts_scene_layer_SceneLayer_JNI
