// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/chrome/browser/password_manager/PasswordStoreAndroidBackendBridgeImpl

#ifndef org_chromium_chrome_browser_password_manager_PasswordStoreAndroidBackendBridgeImpl_JNI
#define org_chromium_chrome_browser_password_manager_PasswordStoreAndroidBackendBridgeImpl_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl[];
const char
    kClassPath_org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl[]
    = "org/chromium/chrome/browser/password_manager/PasswordStoreAndroidBackendBridgeImpl";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_clazz(nullptr);
#ifndef org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_clazz_defined
#define org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_clazz_defined
inline jclass
    org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl,
      &g_org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
JNI_GENERATOR_EXPORT void Java_J_N_MAO3UVMv(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePasswordStoreAndroidBackendBridgeImpl,
    jint jobId,
    jbyteArray passwords) {
  PasswordStoreAndroidBackendBridgeImpl* native =
      reinterpret_cast<PasswordStoreAndroidBackendBridgeImpl*>(nativePasswordStoreAndroidBackendBridgeImpl);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnCompleteWithLogins");
  return native->OnCompleteWithLogins(env, jobId, base::android::JavaParamRef<jbyteArray>(env,
      passwords));
}

JNI_GENERATOR_EXPORT void Java_J_N_MvFamNgw(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePasswordStoreAndroidBackendBridgeImpl,
    jint jobId) {
  PasswordStoreAndroidBackendBridgeImpl* native =
      reinterpret_cast<PasswordStoreAndroidBackendBridgeImpl*>(nativePasswordStoreAndroidBackendBridgeImpl);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnLoginChanged");
  return native->OnLoginChanged(env, jobId);
}

JNI_GENERATOR_EXPORT void Java_J_N_MzDgwXmx(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePasswordStoreAndroidBackendBridgeImpl,
    jint jobId,
    jint errorType,
    jint apiErrorCode,
    jboolean hasConnectionResult,
    jint connectionResultStatusCode) {
  PasswordStoreAndroidBackendBridgeImpl* native =
      reinterpret_cast<PasswordStoreAndroidBackendBridgeImpl*>(nativePasswordStoreAndroidBackendBridgeImpl);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnError");
  return native->OnError(env, jobId, errorType, apiErrorCode, hasConnectionResult,
      connectionResultStatusCode);
}


static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_create(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_PasswordStoreAndroidBackendBridgeImpl_create(JNIEnv* env, jlong nativeBackendBridge) {
  jclass clazz =
      org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_clazz(env);
  CHECK_CLAZZ(env, clazz,
org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "create",
          "(J)Lorg/chromium/chrome/browser/password_manager/PasswordStoreAndroidBackendBridgeImpl;",
&g_org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_create);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, nativeBackendBridge);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_canCreateBackend(nullptr);
static jboolean Java_PasswordStoreAndroidBackendBridgeImpl_canCreateBackend(JNIEnv* env) {
  jclass clazz =
      org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_clazz(env);
  CHECK_CLAZZ(env, clazz,
org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_clazz(env),
          false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "canCreateBackend",
          "()Z",
&g_org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_canCreateBackend);

  jboolean ret =
      env->CallStaticBooleanMethod(clazz,
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_getAllLogins(nullptr);
static void Java_PasswordStoreAndroidBackendBridgeImpl_getAllLogins(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper jobId,
    const base::android::JavaRef<jstring>& syncingAccount) {
  jclass clazz =
      org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getAllLogins",
          "(ILjava/lang/String;)V",
&g_org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_getAllLogins);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(jobId), syncingAccount.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_getAutofillableLogins(nullptr);
static void Java_PasswordStoreAndroidBackendBridgeImpl_getAutofillableLogins(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper jobId,
    const base::android::JavaRef<jstring>& syncingAccount) {
  jclass clazz =
      org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getAutofillableLogins",
          "(ILjava/lang/String;)V",
&g_org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_getAutofillableLogins);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(jobId), syncingAccount.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_getLoginsForSignonRealm(nullptr);
static void Java_PasswordStoreAndroidBackendBridgeImpl_getLoginsForSignonRealm(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper jobId,
    const base::android::JavaRef<jstring>& signonRealm,
    const base::android::JavaRef<jstring>& syncingAccount) {
  jclass clazz =
      org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getLoginsForSignonRealm",
          "(ILjava/lang/String;Ljava/lang/String;)V",
&g_org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_getLoginsForSignonRealm);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(jobId), signonRealm.obj(), syncingAccount.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_addLogin(nullptr);
static void Java_PasswordStoreAndroidBackendBridgeImpl_addLogin(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper jobId,
    const base::android::JavaRef<jbyteArray>& pwdWithLocalData,
    const base::android::JavaRef<jstring>& syncingAccount) {
  jclass clazz =
      org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "addLogin",
          "(I[BLjava/lang/String;)V",
&g_org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_addLogin);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(jobId), pwdWithLocalData.obj(),
              syncingAccount.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_updateLogin(nullptr);
static void Java_PasswordStoreAndroidBackendBridgeImpl_updateLogin(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper jobId,
    const base::android::JavaRef<jbyteArray>& pwdWithLocalData,
    const base::android::JavaRef<jstring>& syncingAccount) {
  jclass clazz =
      org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "updateLogin",
          "(I[BLjava/lang/String;)V",
&g_org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_updateLogin);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(jobId), pwdWithLocalData.obj(),
              syncingAccount.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_removeLogin(nullptr);
static void Java_PasswordStoreAndroidBackendBridgeImpl_removeLogin(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper jobId,
    const base::android::JavaRef<jbyteArray>& pwdSpecificsData,
    const base::android::JavaRef<jstring>& syncingAccount) {
  jclass clazz =
      org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "removeLogin",
          "(I[BLjava/lang/String;)V",
&g_org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_removeLogin);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(jobId), pwdSpecificsData.obj(),
              syncingAccount.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_showErrorUi(nullptr);
static void Java_PasswordStoreAndroidBackendBridgeImpl_showErrorUi(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "showErrorUi",
          "()V",
&g_org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_showErrorUi);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_destroy(nullptr);
static void Java_PasswordStoreAndroidBackendBridgeImpl_destroy(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "destroy",
          "()V",
&g_org_chromium_chrome_browser_password_1manager_PasswordStoreAndroidBackendBridgeImpl_destroy);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

#endif  // org_chromium_chrome_browser_password_manager_PasswordStoreAndroidBackendBridgeImpl_JNI
