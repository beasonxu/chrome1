// content/common/render_message_filter.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CONTENT_COMMON_RENDER_MESSAGE_FILTER_MOJOM_PARAMS_DATA_H_
#define CONTENT_COMMON_RENDER_MESSAGE_FILTER_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace content {
namespace mojom {
namespace internal {

class ValidationContext;
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) RenderMessageFilter_GenerateRoutingID_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<RenderMessageFilter_GenerateRoutingID_Params_Data>;

  RenderMessageFilter_GenerateRoutingID_Params_Data();
  ~RenderMessageFilter_GenerateRoutingID_Params_Data() = delete;
};
static_assert(sizeof(RenderMessageFilter_GenerateRoutingID_Params_Data) == 8,
              "Bad sizeof(RenderMessageFilter_GenerateRoutingID_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) RenderMessageFilter_GenerateRoutingID_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t routing_id;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<RenderMessageFilter_GenerateRoutingID_ResponseParams_Data>;

  RenderMessageFilter_GenerateRoutingID_ResponseParams_Data();
  ~RenderMessageFilter_GenerateRoutingID_ResponseParams_Data() = delete;
};
static_assert(sizeof(RenderMessageFilter_GenerateRoutingID_ResponseParams_Data) == 16,
              "Bad sizeof(RenderMessageFilter_GenerateRoutingID_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) RenderMessageFilter_GenerateFrameRoutingID_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<RenderMessageFilter_GenerateFrameRoutingID_Params_Data>;

  RenderMessageFilter_GenerateFrameRoutingID_Params_Data();
  ~RenderMessageFilter_GenerateFrameRoutingID_Params_Data() = delete;
};
static_assert(sizeof(RenderMessageFilter_GenerateFrameRoutingID_Params_Data) == 8,
              "Bad sizeof(RenderMessageFilter_GenerateFrameRoutingID_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) RenderMessageFilter_GenerateFrameRoutingID_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t routing_id;
  uint8_t pad0_[4];
  mojo::internal::Pointer<::blink::mojom::internal::LocalFrameToken_Data> frame_token;
  mojo::internal::Pointer<::mojo_base::mojom::internal::UnguessableToken_Data> devtools_frame_token;

 private:
  friend class mojo::internal::MessageFragment<RenderMessageFilter_GenerateFrameRoutingID_ResponseParams_Data>;

  RenderMessageFilter_GenerateFrameRoutingID_ResponseParams_Data();
  ~RenderMessageFilter_GenerateFrameRoutingID_ResponseParams_Data() = delete;
};
static_assert(sizeof(RenderMessageFilter_GenerateFrameRoutingID_ResponseParams_Data) == 32,
              "Bad sizeof(RenderMessageFilter_GenerateFrameRoutingID_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) RenderMessageFilter_HasGpuProcess_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<RenderMessageFilter_HasGpuProcess_Params_Data>;

  RenderMessageFilter_HasGpuProcess_Params_Data();
  ~RenderMessageFilter_HasGpuProcess_Params_Data() = delete;
};
static_assert(sizeof(RenderMessageFilter_HasGpuProcess_Params_Data) == 8,
              "Bad sizeof(RenderMessageFilter_HasGpuProcess_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) RenderMessageFilter_HasGpuProcess_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t has_gpu_process : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<RenderMessageFilter_HasGpuProcess_ResponseParams_Data>;

  RenderMessageFilter_HasGpuProcess_ResponseParams_Data();
  ~RenderMessageFilter_HasGpuProcess_ResponseParams_Data() = delete;
};
static_assert(sizeof(RenderMessageFilter_HasGpuProcess_ResponseParams_Data) == 16,
              "Bad sizeof(RenderMessageFilter_HasGpuProcess_ResponseParams_Data)");

}  // namespace internal


class RenderMessageFilter_GenerateRoutingID_ParamsDataView {
 public:
  RenderMessageFilter_GenerateRoutingID_ParamsDataView() = default;

  RenderMessageFilter_GenerateRoutingID_ParamsDataView(
      internal::RenderMessageFilter_GenerateRoutingID_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::RenderMessageFilter_GenerateRoutingID_Params_Data* data_ = nullptr;
};



class RenderMessageFilter_GenerateRoutingID_ResponseParamsDataView {
 public:
  RenderMessageFilter_GenerateRoutingID_ResponseParamsDataView() = default;

  RenderMessageFilter_GenerateRoutingID_ResponseParamsDataView(
      internal::RenderMessageFilter_GenerateRoutingID_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int32_t routing_id() const {
    return data_->routing_id;
  }
 private:
  internal::RenderMessageFilter_GenerateRoutingID_ResponseParams_Data* data_ = nullptr;
};



class RenderMessageFilter_GenerateFrameRoutingID_ParamsDataView {
 public:
  RenderMessageFilter_GenerateFrameRoutingID_ParamsDataView() = default;

  RenderMessageFilter_GenerateFrameRoutingID_ParamsDataView(
      internal::RenderMessageFilter_GenerateFrameRoutingID_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::RenderMessageFilter_GenerateFrameRoutingID_Params_Data* data_ = nullptr;
};



class RenderMessageFilter_GenerateFrameRoutingID_ResponseParamsDataView {
 public:
  RenderMessageFilter_GenerateFrameRoutingID_ResponseParamsDataView() = default;

  RenderMessageFilter_GenerateFrameRoutingID_ResponseParamsDataView(
      internal::RenderMessageFilter_GenerateFrameRoutingID_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  int32_t routing_id() const {
    return data_->routing_id;
  }
  inline void GetFrameTokenDataView(
      ::blink::mojom::LocalFrameTokenDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadFrameToken(UserType* output) {
    
    auto* pointer = data_->frame_token.Get();
    return mojo::internal::Deserialize<::blink::mojom::LocalFrameTokenDataView>(
        pointer, output, message_);
  }
  inline void GetDevtoolsFrameTokenDataView(
      ::mojo_base::mojom::UnguessableTokenDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadDevtoolsFrameToken(UserType* output) {
    
    auto* pointer = data_->devtools_frame_token.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::UnguessableTokenDataView>(
        pointer, output, message_);
  }
 private:
  internal::RenderMessageFilter_GenerateFrameRoutingID_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class RenderMessageFilter_HasGpuProcess_ParamsDataView {
 public:
  RenderMessageFilter_HasGpuProcess_ParamsDataView() = default;

  RenderMessageFilter_HasGpuProcess_ParamsDataView(
      internal::RenderMessageFilter_HasGpuProcess_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::RenderMessageFilter_HasGpuProcess_Params_Data* data_ = nullptr;
};



class RenderMessageFilter_HasGpuProcess_ResponseParamsDataView {
 public:
  RenderMessageFilter_HasGpuProcess_ResponseParamsDataView() = default;

  RenderMessageFilter_HasGpuProcess_ResponseParamsDataView(
      internal::RenderMessageFilter_HasGpuProcess_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool has_gpu_process() const {
    return data_->has_gpu_process;
  }
 private:
  internal::RenderMessageFilter_HasGpuProcess_ResponseParams_Data* data_ = nullptr;
};








inline void RenderMessageFilter_GenerateFrameRoutingID_ResponseParamsDataView::GetFrameTokenDataView(
    ::blink::mojom::LocalFrameTokenDataView* output) {
  auto pointer = data_->frame_token.Get();
  *output = ::blink::mojom::LocalFrameTokenDataView(pointer, message_);
}
inline void RenderMessageFilter_GenerateFrameRoutingID_ResponseParamsDataView::GetDevtoolsFrameTokenDataView(
    ::mojo_base::mojom::UnguessableTokenDataView* output) {
  auto pointer = data_->devtools_frame_token.Get();
  *output = ::mojo_base::mojom::UnguessableTokenDataView(pointer, message_);
}





}  // namespace mojom
}  // namespace content

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // CONTENT_COMMON_RENDER_MESSAGE_FILTER_MOJOM_PARAMS_DATA_H_