// content/common/agent_scheduling_group.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CONTENT_COMMON_AGENT_SCHEDULING_GROUP_MOJOM_PARAMS_DATA_H_
#define CONTENT_COMMON_AGENT_SCHEDULING_GROUP_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace content {
namespace mojom {
namespace internal {

class ValidationContext;
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) AgentSchedulingGroupHost_DidUnloadRenderFrame_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::blink::mojom::internal::LocalFrameToken_Data> frame_token;

 private:
  friend class mojo::internal::MessageFragment<AgentSchedulingGroupHost_DidUnloadRenderFrame_Params_Data>;

  AgentSchedulingGroupHost_DidUnloadRenderFrame_Params_Data();
  ~AgentSchedulingGroupHost_DidUnloadRenderFrame_Params_Data() = delete;
};
static_assert(sizeof(AgentSchedulingGroupHost_DidUnloadRenderFrame_Params_Data) == 16,
              "Bad sizeof(AgentSchedulingGroupHost_DidUnloadRenderFrame_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) AgentSchedulingGroup_BindAssociatedInterfaces_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::AssociatedInterface_Data remote_host;
  mojo::internal::AssociatedEndpointHandle_Data route_provider_receiver;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<AgentSchedulingGroup_BindAssociatedInterfaces_Params_Data>;

  AgentSchedulingGroup_BindAssociatedInterfaces_Params_Data();
  ~AgentSchedulingGroup_BindAssociatedInterfaces_Params_Data() = delete;
};
static_assert(sizeof(AgentSchedulingGroup_BindAssociatedInterfaces_Params_Data) == 24,
              "Bad sizeof(AgentSchedulingGroup_BindAssociatedInterfaces_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) AgentSchedulingGroup_CreateView_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::content::mojom::internal::CreateViewParams_Data> params;

 private:
  friend class mojo::internal::MessageFragment<AgentSchedulingGroup_CreateView_Params_Data>;

  AgentSchedulingGroup_CreateView_Params_Data();
  ~AgentSchedulingGroup_CreateView_Params_Data() = delete;
};
static_assert(sizeof(AgentSchedulingGroup_CreateView_Params_Data) == 16,
              "Bad sizeof(AgentSchedulingGroup_CreateView_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) AgentSchedulingGroup_CreateFrame_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::content::mojom::internal::CreateFrameParams_Data> params;

 private:
  friend class mojo::internal::MessageFragment<AgentSchedulingGroup_CreateFrame_Params_Data>;

  AgentSchedulingGroup_CreateFrame_Params_Data();
  ~AgentSchedulingGroup_CreateFrame_Params_Data() = delete;
};
static_assert(sizeof(AgentSchedulingGroup_CreateFrame_Params_Data) == 16,
              "Bad sizeof(AgentSchedulingGroup_CreateFrame_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) AgentSchedulingGroup_CreateSharedStorageWorkletService_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Handle_Data receiver;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<AgentSchedulingGroup_CreateSharedStorageWorkletService_Params_Data>;

  AgentSchedulingGroup_CreateSharedStorageWorkletService_Params_Data();
  ~AgentSchedulingGroup_CreateSharedStorageWorkletService_Params_Data() = delete;
};
static_assert(sizeof(AgentSchedulingGroup_CreateSharedStorageWorkletService_Params_Data) == 16,
              "Bad sizeof(AgentSchedulingGroup_CreateSharedStorageWorkletService_Params_Data)");

}  // namespace internal


class AgentSchedulingGroupHost_DidUnloadRenderFrame_ParamsDataView {
 public:
  AgentSchedulingGroupHost_DidUnloadRenderFrame_ParamsDataView() = default;

  AgentSchedulingGroupHost_DidUnloadRenderFrame_ParamsDataView(
      internal::AgentSchedulingGroupHost_DidUnloadRenderFrame_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetFrameTokenDataView(
      ::blink::mojom::LocalFrameTokenDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadFrameToken(UserType* output) {
    
    auto* pointer = data_->frame_token.Get();
    return mojo::internal::Deserialize<::blink::mojom::LocalFrameTokenDataView>(
        pointer, output, message_);
  }
 private:
  internal::AgentSchedulingGroupHost_DidUnloadRenderFrame_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AgentSchedulingGroup_BindAssociatedInterfaces_ParamsDataView {
 public:
  AgentSchedulingGroup_BindAssociatedInterfaces_ParamsDataView() = default;

  AgentSchedulingGroup_BindAssociatedInterfaces_ParamsDataView(
      internal::AgentSchedulingGroup_BindAssociatedInterfaces_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeRemoteHost() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<::content::mojom::AgentSchedulingGroupHostAssociatedPtrInfoDataView>(
            &data_->remote_host, &result, message_);
    DCHECK(ret);
    return result;
  }
  template <typename UserType>
  UserType TakeRouteProviderReceiver() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<::content::mojom::RouteProviderAssociatedRequestDataView>(
            &data_->route_provider_receiver, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::AgentSchedulingGroup_BindAssociatedInterfaces_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AgentSchedulingGroup_CreateView_ParamsDataView {
 public:
  AgentSchedulingGroup_CreateView_ParamsDataView() = default;

  AgentSchedulingGroup_CreateView_ParamsDataView(
      internal::AgentSchedulingGroup_CreateView_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetParamsDataView(
      ::content::mojom::CreateViewParamsDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadParams(UserType* output) {
    
    auto* pointer = data_->params.Get();
    return mojo::internal::Deserialize<::content::mojom::CreateViewParamsDataView>(
        pointer, output, message_);
  }
 private:
  internal::AgentSchedulingGroup_CreateView_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AgentSchedulingGroup_CreateFrame_ParamsDataView {
 public:
  AgentSchedulingGroup_CreateFrame_ParamsDataView() = default;

  AgentSchedulingGroup_CreateFrame_ParamsDataView(
      internal::AgentSchedulingGroup_CreateFrame_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetParamsDataView(
      ::content::mojom::CreateFrameParamsDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadParams(UserType* output) {
    
    auto* pointer = data_->params.Get();
    return mojo::internal::Deserialize<::content::mojom::CreateFrameParamsDataView>(
        pointer, output, message_);
  }
 private:
  internal::AgentSchedulingGroup_CreateFrame_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AgentSchedulingGroup_CreateSharedStorageWorkletService_ParamsDataView {
 public:
  AgentSchedulingGroup_CreateSharedStorageWorkletService_ParamsDataView() = default;

  AgentSchedulingGroup_CreateSharedStorageWorkletService_ParamsDataView(
      internal::AgentSchedulingGroup_CreateSharedStorageWorkletService_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeReceiver() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfaceRequestDataView<::shared_storage_worklet::mojom::SharedStorageWorkletServiceInterfaceBase>>(
            &data_->receiver, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::AgentSchedulingGroup_CreateSharedStorageWorkletService_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};


inline void AgentSchedulingGroupHost_DidUnloadRenderFrame_ParamsDataView::GetFrameTokenDataView(
    ::blink::mojom::LocalFrameTokenDataView* output) {
  auto pointer = data_->frame_token.Get();
  *output = ::blink::mojom::LocalFrameTokenDataView(pointer, message_);
}




inline void AgentSchedulingGroup_CreateView_ParamsDataView::GetParamsDataView(
    ::content::mojom::CreateViewParamsDataView* output) {
  auto pointer = data_->params.Get();
  *output = ::content::mojom::CreateViewParamsDataView(pointer, message_);
}


inline void AgentSchedulingGroup_CreateFrame_ParamsDataView::GetParamsDataView(
    ::content::mojom::CreateFrameParamsDataView* output) {
  auto pointer = data_->params.Get();
  *output = ::content::mojom::CreateFrameParamsDataView(pointer, message_);
}



}  // namespace mojom
}  // namespace content

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // CONTENT_COMMON_AGENT_SCHEDULING_GROUP_MOJOM_PARAMS_DATA_H_