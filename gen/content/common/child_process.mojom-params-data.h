// content/common/child_process.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CONTENT_COMMON_CHILD_PROCESS_MOJOM_PARAMS_DATA_H_
#define CONTENT_COMMON_CHILD_PROCESS_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace content {
namespace mojom {
namespace internal {

class ValidationContext;
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) ChildProcessHost_Ping_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<ChildProcessHost_Ping_Params_Data>;

  ChildProcessHost_Ping_Params_Data();
  ~ChildProcessHost_Ping_Params_Data() = delete;
};
static_assert(sizeof(ChildProcessHost_Ping_Params_Data) == 8,
              "Bad sizeof(ChildProcessHost_Ping_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) ChildProcessHost_Ping_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<ChildProcessHost_Ping_ResponseParams_Data>;

  ChildProcessHost_Ping_ResponseParams_Data();
  ~ChildProcessHost_Ping_ResponseParams_Data() = delete;
};
static_assert(sizeof(ChildProcessHost_Ping_ResponseParams_Data) == 8,
              "Bad sizeof(ChildProcessHost_Ping_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) ChildProcessHost_BindHostReceiver_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::mojo_base::mojom::internal::GenericPendingReceiver_Data> receiver;

 private:
  friend class mojo::internal::MessageFragment<ChildProcessHost_BindHostReceiver_Params_Data>;

  ChildProcessHost_BindHostReceiver_Params_Data();
  ~ChildProcessHost_BindHostReceiver_Params_Data() = delete;
};
static_assert(sizeof(ChildProcessHost_BindHostReceiver_Params_Data) == 16,
              "Bad sizeof(ChildProcessHost_BindHostReceiver_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) ChildProcess_ProcessShutdown_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<ChildProcess_ProcessShutdown_Params_Data>;

  ChildProcess_ProcessShutdown_Params_Data();
  ~ChildProcess_ProcessShutdown_Params_Data() = delete;
};
static_assert(sizeof(ChildProcess_ProcessShutdown_Params_Data) == 8,
              "Bad sizeof(ChildProcess_ProcessShutdown_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) ChildProcess_GetBackgroundTracingAgentProvider_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Handle_Data receiver;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<ChildProcess_GetBackgroundTracingAgentProvider_Params_Data>;

  ChildProcess_GetBackgroundTracingAgentProvider_Params_Data();
  ~ChildProcess_GetBackgroundTracingAgentProvider_Params_Data() = delete;
};
static_assert(sizeof(ChildProcess_GetBackgroundTracingAgentProvider_Params_Data) == 16,
              "Bad sizeof(ChildProcess_GetBackgroundTracingAgentProvider_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) ChildProcess_CrashHungProcess_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<ChildProcess_CrashHungProcess_Params_Data>;

  ChildProcess_CrashHungProcess_Params_Data();
  ~ChildProcess_CrashHungProcess_Params_Data() = delete;
};
static_assert(sizeof(ChildProcess_CrashHungProcess_Params_Data) == 8,
              "Bad sizeof(ChildProcess_CrashHungProcess_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) ChildProcess_RunServiceDeprecated_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> service_name;
  mojo::internal::Handle_Data service_pipe;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<ChildProcess_RunServiceDeprecated_Params_Data>;

  ChildProcess_RunServiceDeprecated_Params_Data();
  ~ChildProcess_RunServiceDeprecated_Params_Data() = delete;
};
static_assert(sizeof(ChildProcess_RunServiceDeprecated_Params_Data) == 24,
              "Bad sizeof(ChildProcess_RunServiceDeprecated_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) ChildProcess_BindServiceInterface_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::mojo_base::mojom::internal::GenericPendingReceiver_Data> receiver;

 private:
  friend class mojo::internal::MessageFragment<ChildProcess_BindServiceInterface_Params_Data>;

  ChildProcess_BindServiceInterface_Params_Data();
  ~ChildProcess_BindServiceInterface_Params_Data() = delete;
};
static_assert(sizeof(ChildProcess_BindServiceInterface_Params_Data) == 16,
              "Bad sizeof(ChildProcess_BindServiceInterface_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) ChildProcess_BindReceiver_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::mojo_base::mojom::internal::GenericPendingReceiver_Data> receiver;

 private:
  friend class mojo::internal::MessageFragment<ChildProcess_BindReceiver_Params_Data>;

  ChildProcess_BindReceiver_Params_Data();
  ~ChildProcess_BindReceiver_Params_Data() = delete;
};
static_assert(sizeof(ChildProcess_BindReceiver_Params_Data) == 16,
              "Bad sizeof(ChildProcess_BindReceiver_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) ChildProcess_SetPseudonymizationSalt_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint32_t salt;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<ChildProcess_SetPseudonymizationSalt_Params_Data>;

  ChildProcess_SetPseudonymizationSalt_Params_Data();
  ~ChildProcess_SetPseudonymizationSalt_Params_Data() = delete;
};
static_assert(sizeof(ChildProcess_SetPseudonymizationSalt_Params_Data) == 16,
              "Bad sizeof(ChildProcess_SetPseudonymizationSalt_Params_Data)");

}  // namespace internal


class ChildProcessHost_Ping_ParamsDataView {
 public:
  ChildProcessHost_Ping_ParamsDataView() = default;

  ChildProcessHost_Ping_ParamsDataView(
      internal::ChildProcessHost_Ping_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ChildProcessHost_Ping_Params_Data* data_ = nullptr;
};



class ChildProcessHost_Ping_ResponseParamsDataView {
 public:
  ChildProcessHost_Ping_ResponseParamsDataView() = default;

  ChildProcessHost_Ping_ResponseParamsDataView(
      internal::ChildProcessHost_Ping_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ChildProcessHost_Ping_ResponseParams_Data* data_ = nullptr;
};



class ChildProcessHost_BindHostReceiver_ParamsDataView {
 public:
  ChildProcessHost_BindHostReceiver_ParamsDataView() = default;

  ChildProcessHost_BindHostReceiver_ParamsDataView(
      internal::ChildProcessHost_BindHostReceiver_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetReceiverDataView(
      ::mojo_base::mojom::GenericPendingReceiverDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadReceiver(UserType* output) {
    
    auto* pointer = data_->receiver.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::GenericPendingReceiverDataView>(
        pointer, output, message_);
  }
 private:
  internal::ChildProcessHost_BindHostReceiver_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ChildProcess_ProcessShutdown_ParamsDataView {
 public:
  ChildProcess_ProcessShutdown_ParamsDataView() = default;

  ChildProcess_ProcessShutdown_ParamsDataView(
      internal::ChildProcess_ProcessShutdown_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ChildProcess_ProcessShutdown_Params_Data* data_ = nullptr;
};



class ChildProcess_GetBackgroundTracingAgentProvider_ParamsDataView {
 public:
  ChildProcess_GetBackgroundTracingAgentProvider_ParamsDataView() = default;

  ChildProcess_GetBackgroundTracingAgentProvider_ParamsDataView(
      internal::ChildProcess_GetBackgroundTracingAgentProvider_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeReceiver() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfaceRequestDataView<::tracing::mojom::BackgroundTracingAgentProviderInterfaceBase>>(
            &data_->receiver, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::ChildProcess_GetBackgroundTracingAgentProvider_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ChildProcess_CrashHungProcess_ParamsDataView {
 public:
  ChildProcess_CrashHungProcess_ParamsDataView() = default;

  ChildProcess_CrashHungProcess_ParamsDataView(
      internal::ChildProcess_CrashHungProcess_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ChildProcess_CrashHungProcess_Params_Data* data_ = nullptr;
};



class ChildProcess_RunServiceDeprecated_ParamsDataView {
 public:
  ChildProcess_RunServiceDeprecated_ParamsDataView() = default;

  ChildProcess_RunServiceDeprecated_ParamsDataView(
      internal::ChildProcess_RunServiceDeprecated_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetServiceNameDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadServiceName(UserType* output) {
    
    auto* pointer = data_->service_name.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  mojo::ScopedMessagePipeHandle TakeServicePipe() {
    mojo::ScopedMessagePipeHandle result;
    bool ret =
        mojo::internal::Deserialize<mojo::ScopedMessagePipeHandle>(
            &data_->service_pipe, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::ChildProcess_RunServiceDeprecated_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ChildProcess_BindServiceInterface_ParamsDataView {
 public:
  ChildProcess_BindServiceInterface_ParamsDataView() = default;

  ChildProcess_BindServiceInterface_ParamsDataView(
      internal::ChildProcess_BindServiceInterface_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetReceiverDataView(
      ::mojo_base::mojom::GenericPendingReceiverDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadReceiver(UserType* output) {
    
    auto* pointer = data_->receiver.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::GenericPendingReceiverDataView>(
        pointer, output, message_);
  }
 private:
  internal::ChildProcess_BindServiceInterface_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ChildProcess_BindReceiver_ParamsDataView {
 public:
  ChildProcess_BindReceiver_ParamsDataView() = default;

  ChildProcess_BindReceiver_ParamsDataView(
      internal::ChildProcess_BindReceiver_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetReceiverDataView(
      ::mojo_base::mojom::GenericPendingReceiverDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadReceiver(UserType* output) {
    
    auto* pointer = data_->receiver.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::GenericPendingReceiverDataView>(
        pointer, output, message_);
  }
 private:
  internal::ChildProcess_BindReceiver_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ChildProcess_SetPseudonymizationSalt_ParamsDataView {
 public:
  ChildProcess_SetPseudonymizationSalt_ParamsDataView() = default;

  ChildProcess_SetPseudonymizationSalt_ParamsDataView(
      internal::ChildProcess_SetPseudonymizationSalt_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  uint32_t salt() const {
    return data_->salt;
  }
 private:
  internal::ChildProcess_SetPseudonymizationSalt_Params_Data* data_ = nullptr;
};






inline void ChildProcessHost_BindHostReceiver_ParamsDataView::GetReceiverDataView(
    ::mojo_base::mojom::GenericPendingReceiverDataView* output) {
  auto pointer = data_->receiver.Get();
  *output = ::mojo_base::mojom::GenericPendingReceiverDataView(pointer, message_);
}








inline void ChildProcess_RunServiceDeprecated_ParamsDataView::GetServiceNameDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->service_name.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void ChildProcess_BindServiceInterface_ParamsDataView::GetReceiverDataView(
    ::mojo_base::mojom::GenericPendingReceiverDataView* output) {
  auto pointer = data_->receiver.Get();
  *output = ::mojo_base::mojom::GenericPendingReceiverDataView(pointer, message_);
}


inline void ChildProcess_BindReceiver_ParamsDataView::GetReceiverDataView(
    ::mojo_base::mojom::GenericPendingReceiverDataView* output) {
  auto pointer = data_->receiver.Get();
  *output = ::mojo_base::mojom::GenericPendingReceiverDataView(pointer, message_);
}



}  // namespace mojom
}  // namespace content

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // CONTENT_COMMON_CHILD_PROCESS_MOJOM_PARAMS_DATA_H_