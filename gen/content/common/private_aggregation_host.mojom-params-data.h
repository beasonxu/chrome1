// content/common/private_aggregation_host.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CONTENT_COMMON_PRIVATE_AGGREGATION_HOST_MOJOM_PARAMS_DATA_H_
#define CONTENT_COMMON_PRIVATE_AGGREGATION_HOST_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace content {
namespace mojom {
namespace internal {

class ValidationContext;
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) PrivateAggregationHost_SendHistogramReport_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<::content::mojom::internal::AggregatableReportHistogramContribution_Data>>> contributions;
  int32_t aggregation_mode;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<PrivateAggregationHost_SendHistogramReport_Params_Data>;

  PrivateAggregationHost_SendHistogramReport_Params_Data();
  ~PrivateAggregationHost_SendHistogramReport_Params_Data() = delete;
};
static_assert(sizeof(PrivateAggregationHost_SendHistogramReport_Params_Data) == 24,
              "Bad sizeof(PrivateAggregationHost_SendHistogramReport_Params_Data)");

}  // namespace internal


class PrivateAggregationHost_SendHistogramReport_ParamsDataView {
 public:
  PrivateAggregationHost_SendHistogramReport_ParamsDataView() = default;

  PrivateAggregationHost_SendHistogramReport_ParamsDataView(
      internal::PrivateAggregationHost_SendHistogramReport_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetContributionsDataView(
      mojo::ArrayDataView<::content::mojom::AggregatableReportHistogramContributionDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadContributions(UserType* output) {
    
    auto* pointer = data_->contributions.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::content::mojom::AggregatableReportHistogramContributionDataView>>(
        pointer, output, message_);
  }
  template <typename UserType>
  [[nodiscard]] bool ReadAggregationMode(UserType* output) const {
    auto data_value = data_->aggregation_mode;
    return mojo::internal::Deserialize<::content::mojom::AggregationServiceMode>(
        data_value, output);
  }
  ::content::mojom::AggregationServiceMode aggregation_mode() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::content::mojom::AggregationServiceMode>(data_->aggregation_mode));
  }
 private:
  internal::PrivateAggregationHost_SendHistogramReport_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};


inline void PrivateAggregationHost_SendHistogramReport_ParamsDataView::GetContributionsDataView(
    mojo::ArrayDataView<::content::mojom::AggregatableReportHistogramContributionDataView>* output) {
  auto pointer = data_->contributions.Get();
  *output = mojo::ArrayDataView<::content::mojom::AggregatableReportHistogramContributionDataView>(pointer, message_);
}

}  // namespace mojom
}  // namespace content

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // CONTENT_COMMON_PRIVATE_AGGREGATION_HOST_MOJOM_PARAMS_DATA_H_