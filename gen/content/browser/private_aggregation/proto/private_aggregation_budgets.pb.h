// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: private_aggregation_budgets.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_private_5faggregation_5fbudgets_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_private_5faggregation_5fbudgets_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_private_5faggregation_5fbudgets_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_private_5faggregation_5fbudgets_2eproto {
  static const uint32_t offsets[];
};
namespace content {
namespace proto {
class PrivateAggregationBudgetPerHour;
struct PrivateAggregationBudgetPerHourDefaultTypeInternal;
extern PrivateAggregationBudgetPerHourDefaultTypeInternal _PrivateAggregationBudgetPerHour_default_instance_;
class PrivateAggregationBudgets;
struct PrivateAggregationBudgetsDefaultTypeInternal;
extern PrivateAggregationBudgetsDefaultTypeInternal _PrivateAggregationBudgets_default_instance_;
}  // namespace proto
}  // namespace content
PROTOBUF_NAMESPACE_OPEN
template<> ::content::proto::PrivateAggregationBudgetPerHour* Arena::CreateMaybeMessage<::content::proto::PrivateAggregationBudgetPerHour>(Arena*);
template<> ::content::proto::PrivateAggregationBudgets* Arena::CreateMaybeMessage<::content::proto::PrivateAggregationBudgets>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace content {
namespace proto {

// ===================================================================

class PrivateAggregationBudgetPerHour final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:content.proto.PrivateAggregationBudgetPerHour) */ {
 public:
  inline PrivateAggregationBudgetPerHour() : PrivateAggregationBudgetPerHour(nullptr) {}
  ~PrivateAggregationBudgetPerHour() override;
  explicit PROTOBUF_CONSTEXPR PrivateAggregationBudgetPerHour(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PrivateAggregationBudgetPerHour(const PrivateAggregationBudgetPerHour& from);
  PrivateAggregationBudgetPerHour(PrivateAggregationBudgetPerHour&& from) noexcept
    : PrivateAggregationBudgetPerHour() {
    *this = ::std::move(from);
  }

  inline PrivateAggregationBudgetPerHour& operator=(const PrivateAggregationBudgetPerHour& from) {
    CopyFrom(from);
    return *this;
  }
  inline PrivateAggregationBudgetPerHour& operator=(PrivateAggregationBudgetPerHour&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const PrivateAggregationBudgetPerHour& default_instance() {
    return *internal_default_instance();
  }
  static inline const PrivateAggregationBudgetPerHour* internal_default_instance() {
    return reinterpret_cast<const PrivateAggregationBudgetPerHour*>(
               &_PrivateAggregationBudgetPerHour_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PrivateAggregationBudgetPerHour& a, PrivateAggregationBudgetPerHour& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(PrivateAggregationBudgetPerHour* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PrivateAggregationBudgetPerHour* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PrivateAggregationBudgetPerHour* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PrivateAggregationBudgetPerHour>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const PrivateAggregationBudgetPerHour& from);
  void MergeFrom(const PrivateAggregationBudgetPerHour& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PrivateAggregationBudgetPerHour* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "content.proto.PrivateAggregationBudgetPerHour";
  }
  protected:
  explicit PrivateAggregationBudgetPerHour(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHourStartTimestampFieldNumber = 1,
    kBudgetUsedFieldNumber = 2,
  };
  // int64 hour_start_timestamp = 1;
  void clear_hour_start_timestamp();
  int64_t hour_start_timestamp() const;
  void set_hour_start_timestamp(int64_t value);
  private:
  int64_t _internal_hour_start_timestamp() const;
  void _internal_set_hour_start_timestamp(int64_t value);
  public:

  // int32 budget_used = 2;
  void clear_budget_used();
  int32_t budget_used() const;
  void set_budget_used(int32_t value);
  private:
  int32_t _internal_budget_used() const;
  void _internal_set_budget_used(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:content.proto.PrivateAggregationBudgetPerHour)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t hour_start_timestamp_;
  int32_t budget_used_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_private_5faggregation_5fbudgets_2eproto;
};
// -------------------------------------------------------------------

class PrivateAggregationBudgets final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:content.proto.PrivateAggregationBudgets) */ {
 public:
  inline PrivateAggregationBudgets() : PrivateAggregationBudgets(nullptr) {}
  ~PrivateAggregationBudgets() override;
  explicit PROTOBUF_CONSTEXPR PrivateAggregationBudgets(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PrivateAggregationBudgets(const PrivateAggregationBudgets& from);
  PrivateAggregationBudgets(PrivateAggregationBudgets&& from) noexcept
    : PrivateAggregationBudgets() {
    *this = ::std::move(from);
  }

  inline PrivateAggregationBudgets& operator=(const PrivateAggregationBudgets& from) {
    CopyFrom(from);
    return *this;
  }
  inline PrivateAggregationBudgets& operator=(PrivateAggregationBudgets&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const PrivateAggregationBudgets& default_instance() {
    return *internal_default_instance();
  }
  static inline const PrivateAggregationBudgets* internal_default_instance() {
    return reinterpret_cast<const PrivateAggregationBudgets*>(
               &_PrivateAggregationBudgets_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PrivateAggregationBudgets& a, PrivateAggregationBudgets& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(PrivateAggregationBudgets* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PrivateAggregationBudgets* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PrivateAggregationBudgets* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PrivateAggregationBudgets>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const PrivateAggregationBudgets& from);
  void MergeFrom(const PrivateAggregationBudgets& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PrivateAggregationBudgets* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "content.proto.PrivateAggregationBudgets";
  }
  protected:
  explicit PrivateAggregationBudgets(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFledgeBudgetsFieldNumber = 1,
    kSharedStorageBudgetsFieldNumber = 2,
  };
  // repeated .content.proto.PrivateAggregationBudgetPerHour fledge_budgets = 1;
  int fledge_budgets_size() const;
  private:
  int _internal_fledge_budgets_size() const;
  public:
  void clear_fledge_budgets();
  ::content::proto::PrivateAggregationBudgetPerHour* mutable_fledge_budgets(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::content::proto::PrivateAggregationBudgetPerHour >*
      mutable_fledge_budgets();
  private:
  const ::content::proto::PrivateAggregationBudgetPerHour& _internal_fledge_budgets(int index) const;
  ::content::proto::PrivateAggregationBudgetPerHour* _internal_add_fledge_budgets();
  public:
  const ::content::proto::PrivateAggregationBudgetPerHour& fledge_budgets(int index) const;
  ::content::proto::PrivateAggregationBudgetPerHour* add_fledge_budgets();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::content::proto::PrivateAggregationBudgetPerHour >&
      fledge_budgets() const;

  // repeated .content.proto.PrivateAggregationBudgetPerHour shared_storage_budgets = 2;
  int shared_storage_budgets_size() const;
  private:
  int _internal_shared_storage_budgets_size() const;
  public:
  void clear_shared_storage_budgets();
  ::content::proto::PrivateAggregationBudgetPerHour* mutable_shared_storage_budgets(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::content::proto::PrivateAggregationBudgetPerHour >*
      mutable_shared_storage_budgets();
  private:
  const ::content::proto::PrivateAggregationBudgetPerHour& _internal_shared_storage_budgets(int index) const;
  ::content::proto::PrivateAggregationBudgetPerHour* _internal_add_shared_storage_budgets();
  public:
  const ::content::proto::PrivateAggregationBudgetPerHour& shared_storage_budgets(int index) const;
  ::content::proto::PrivateAggregationBudgetPerHour* add_shared_storage_budgets();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::content::proto::PrivateAggregationBudgetPerHour >&
      shared_storage_budgets() const;

  // @@protoc_insertion_point(class_scope:content.proto.PrivateAggregationBudgets)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::content::proto::PrivateAggregationBudgetPerHour > fledge_budgets_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::content::proto::PrivateAggregationBudgetPerHour > shared_storage_budgets_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_private_5faggregation_5fbudgets_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PrivateAggregationBudgetPerHour

// int64 hour_start_timestamp = 1;
inline void PrivateAggregationBudgetPerHour::clear_hour_start_timestamp() {
  hour_start_timestamp_ = int64_t{0};
}
inline int64_t PrivateAggregationBudgetPerHour::_internal_hour_start_timestamp() const {
  return hour_start_timestamp_;
}
inline int64_t PrivateAggregationBudgetPerHour::hour_start_timestamp() const {
  // @@protoc_insertion_point(field_get:content.proto.PrivateAggregationBudgetPerHour.hour_start_timestamp)
  return _internal_hour_start_timestamp();
}
inline void PrivateAggregationBudgetPerHour::_internal_set_hour_start_timestamp(int64_t value) {
  
  hour_start_timestamp_ = value;
}
inline void PrivateAggregationBudgetPerHour::set_hour_start_timestamp(int64_t value) {
  _internal_set_hour_start_timestamp(value);
  // @@protoc_insertion_point(field_set:content.proto.PrivateAggregationBudgetPerHour.hour_start_timestamp)
}

// int32 budget_used = 2;
inline void PrivateAggregationBudgetPerHour::clear_budget_used() {
  budget_used_ = 0;
}
inline int32_t PrivateAggregationBudgetPerHour::_internal_budget_used() const {
  return budget_used_;
}
inline int32_t PrivateAggregationBudgetPerHour::budget_used() const {
  // @@protoc_insertion_point(field_get:content.proto.PrivateAggregationBudgetPerHour.budget_used)
  return _internal_budget_used();
}
inline void PrivateAggregationBudgetPerHour::_internal_set_budget_used(int32_t value) {
  
  budget_used_ = value;
}
inline void PrivateAggregationBudgetPerHour::set_budget_used(int32_t value) {
  _internal_set_budget_used(value);
  // @@protoc_insertion_point(field_set:content.proto.PrivateAggregationBudgetPerHour.budget_used)
}

// -------------------------------------------------------------------

// PrivateAggregationBudgets

// repeated .content.proto.PrivateAggregationBudgetPerHour fledge_budgets = 1;
inline int PrivateAggregationBudgets::_internal_fledge_budgets_size() const {
  return fledge_budgets_.size();
}
inline int PrivateAggregationBudgets::fledge_budgets_size() const {
  return _internal_fledge_budgets_size();
}
inline void PrivateAggregationBudgets::clear_fledge_budgets() {
  fledge_budgets_.Clear();
}
inline ::content::proto::PrivateAggregationBudgetPerHour* PrivateAggregationBudgets::mutable_fledge_budgets(int index) {
  // @@protoc_insertion_point(field_mutable:content.proto.PrivateAggregationBudgets.fledge_budgets)
  return fledge_budgets_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::content::proto::PrivateAggregationBudgetPerHour >*
PrivateAggregationBudgets::mutable_fledge_budgets() {
  // @@protoc_insertion_point(field_mutable_list:content.proto.PrivateAggregationBudgets.fledge_budgets)
  return &fledge_budgets_;
}
inline const ::content::proto::PrivateAggregationBudgetPerHour& PrivateAggregationBudgets::_internal_fledge_budgets(int index) const {
  return fledge_budgets_.Get(index);
}
inline const ::content::proto::PrivateAggregationBudgetPerHour& PrivateAggregationBudgets::fledge_budgets(int index) const {
  // @@protoc_insertion_point(field_get:content.proto.PrivateAggregationBudgets.fledge_budgets)
  return _internal_fledge_budgets(index);
}
inline ::content::proto::PrivateAggregationBudgetPerHour* PrivateAggregationBudgets::_internal_add_fledge_budgets() {
  return fledge_budgets_.Add();
}
inline ::content::proto::PrivateAggregationBudgetPerHour* PrivateAggregationBudgets::add_fledge_budgets() {
  ::content::proto::PrivateAggregationBudgetPerHour* _add = _internal_add_fledge_budgets();
  // @@protoc_insertion_point(field_add:content.proto.PrivateAggregationBudgets.fledge_budgets)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::content::proto::PrivateAggregationBudgetPerHour >&
PrivateAggregationBudgets::fledge_budgets() const {
  // @@protoc_insertion_point(field_list:content.proto.PrivateAggregationBudgets.fledge_budgets)
  return fledge_budgets_;
}

// repeated .content.proto.PrivateAggregationBudgetPerHour shared_storage_budgets = 2;
inline int PrivateAggregationBudgets::_internal_shared_storage_budgets_size() const {
  return shared_storage_budgets_.size();
}
inline int PrivateAggregationBudgets::shared_storage_budgets_size() const {
  return _internal_shared_storage_budgets_size();
}
inline void PrivateAggregationBudgets::clear_shared_storage_budgets() {
  shared_storage_budgets_.Clear();
}
inline ::content::proto::PrivateAggregationBudgetPerHour* PrivateAggregationBudgets::mutable_shared_storage_budgets(int index) {
  // @@protoc_insertion_point(field_mutable:content.proto.PrivateAggregationBudgets.shared_storage_budgets)
  return shared_storage_budgets_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::content::proto::PrivateAggregationBudgetPerHour >*
PrivateAggregationBudgets::mutable_shared_storage_budgets() {
  // @@protoc_insertion_point(field_mutable_list:content.proto.PrivateAggregationBudgets.shared_storage_budgets)
  return &shared_storage_budgets_;
}
inline const ::content::proto::PrivateAggregationBudgetPerHour& PrivateAggregationBudgets::_internal_shared_storage_budgets(int index) const {
  return shared_storage_budgets_.Get(index);
}
inline const ::content::proto::PrivateAggregationBudgetPerHour& PrivateAggregationBudgets::shared_storage_budgets(int index) const {
  // @@protoc_insertion_point(field_get:content.proto.PrivateAggregationBudgets.shared_storage_budgets)
  return _internal_shared_storage_budgets(index);
}
inline ::content::proto::PrivateAggregationBudgetPerHour* PrivateAggregationBudgets::_internal_add_shared_storage_budgets() {
  return shared_storage_budgets_.Add();
}
inline ::content::proto::PrivateAggregationBudgetPerHour* PrivateAggregationBudgets::add_shared_storage_budgets() {
  ::content::proto::PrivateAggregationBudgetPerHour* _add = _internal_add_shared_storage_budgets();
  // @@protoc_insertion_point(field_add:content.proto.PrivateAggregationBudgets.shared_storage_budgets)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::content::proto::PrivateAggregationBudgetPerHour >&
PrivateAggregationBudgets::shared_storage_budgets() const {
  // @@protoc_insertion_point(field_list:content.proto.PrivateAggregationBudgets.shared_storage_budgets)
  return shared_storage_budgets_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace content

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_private_5faggregation_5fbudgets_2eproto
