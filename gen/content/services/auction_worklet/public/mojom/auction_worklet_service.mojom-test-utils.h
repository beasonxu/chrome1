// content/services/auction_worklet/public/mojom/auction_worklet_service.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CONTENT_SERVICES_AUCTION_WORKLET_PUBLIC_MOJOM_AUCTION_WORKLET_SERVICE_MOJOM_TEST_UTILS_H_
#define CONTENT_SERVICES_AUCTION_WORKLET_PUBLIC_MOJOM_AUCTION_WORKLET_SERVICE_MOJOM_TEST_UTILS_H_

#include "content/services/auction_worklet/public/mojom/auction_worklet_service.mojom.h"
#include "content/common/content_export.h"


namespace auction_worklet {
namespace mojom {


class CONTENT_EXPORT AuctionWorkletServiceInterceptorForTesting : public AuctionWorkletService {
  virtual AuctionWorkletService* GetForwardingInterface() = 0;
  void LoadBidderWorklet(::mojo::PendingReceiver<::auction_worklet::mojom::BidderWorklet> bidder_worklet, bool pause_for_debugger_on_start, ::mojo::PendingRemote<::network::mojom::URLLoaderFactory> url_loader_factory, const ::GURL& script_source_url, const absl::optional<::GURL>& wasm_helper_url, const absl::optional<::GURL>& trusted_bidding_signals_url, const ::url::Origin& top_window_origin, bool has_experiment_group_id, uint16_t experiment_group_id) override;
  void LoadSellerWorklet(::mojo::PendingReceiver<::auction_worklet::mojom::SellerWorklet> seller_worklet, bool pause_for_debugger_on_start, ::mojo::PendingRemote<::network::mojom::URLLoaderFactory> url_loader_factory, const ::GURL& script_source_url, const absl::optional<::GURL>& trusted_scoring_signals_url, const ::url::Origin& top_window_origin, bool has_experiment_group_id, uint16_t experiment_group_id) override;
};
class CONTENT_EXPORT AuctionWorkletServiceAsyncWaiter {
 public:
  explicit AuctionWorkletServiceAsyncWaiter(AuctionWorkletService* proxy);

  AuctionWorkletServiceAsyncWaiter(const AuctionWorkletServiceAsyncWaiter&) = delete;
  AuctionWorkletServiceAsyncWaiter& operator=(const AuctionWorkletServiceAsyncWaiter&) = delete;

  ~AuctionWorkletServiceAsyncWaiter();

 private:
  AuctionWorkletService* const proxy_;
};




}  // namespace mojom
}  // namespace auction_worklet

#endif  // CONTENT_SERVICES_AUCTION_WORKLET_PUBLIC_MOJOM_AUCTION_WORKLET_SERVICE_MOJOM_TEST_UTILS_H_