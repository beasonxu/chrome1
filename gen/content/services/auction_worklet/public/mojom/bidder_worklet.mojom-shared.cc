// content/services/auction_worklet/public/mojom/bidder_worklet.mojom-shared.cc is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#include "content/services/auction_worklet/public/mojom/bidder_worklet.mojom-shared.h"

// Used to support stream output operator for enums.
// TODO(dcheng): Consider omitting this somehow if not needed.
#include <ostream>
#include <utility>

#include "base/strings/stringprintf.h"
#include "mojo/public/cpp/bindings/lib/validate_params.h"
#include "mojo/public/cpp/bindings/lib/validation_errors.h"
#include "mojo/public/cpp/bindings/lib/validation_util.h"
#include "third_party/perfetto/include/perfetto/tracing/traced_value.h"

#include "content/services/auction_worklet/public/mojom/bidder_worklet.mojom-params-data.h"
namespace auction_worklet {
namespace mojom {

namespace internal {


// static
bool PreviousWin_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 24, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const PreviousWin_Data* object =
      static_cast<const PreviousWin_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->time, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->time, validation_context))
    return false;

  if (!mojo::internal::ValidatePointerNonNullable(
          object->ad_json, 2, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams ad_json_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->ad_json, validation_context,
                                         &ad_json_validate_params)) {
    return false;
  }

  return true;
}

PreviousWin_Data::PreviousWin_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool BidderWorkletNonSharedParams_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 64, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const BidderWorkletNonSharedParams_Data* object =
      static_cast<const BidderWorkletNonSharedParams_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->name, 1, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams name_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->name, validation_context,
                                         &name_validate_params)) {
    return false;
  }


  if (!::blink::mojom::internal::InterestGroup_ExecutionMode_Data
        ::Validate(object->execution_mode, validation_context))
    return false;

  if (!mojo::internal::ValidateStruct(object->daily_update_url, validation_context))
    return false;

  const mojo::internal::ContainerValidateParams trusted_bidding_signals_keys_validate_params(
      0, false, new mojo::internal::ContainerValidateParams(0, false, nullptr));
  if (!mojo::internal::ValidateContainer(object->trusted_bidding_signals_keys, validation_context,
                                         &trusted_bidding_signals_keys_validate_params)) {
    return false;
  }

  const mojo::internal::ContainerValidateParams user_bidding_signals_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->user_bidding_signals, validation_context,
                                         &user_bidding_signals_validate_params)) {
    return false;
  }

  const mojo::internal::ContainerValidateParams ads_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->ads, validation_context,
                                         &ads_validate_params)) {
    return false;
  }

  const mojo::internal::ContainerValidateParams ad_components_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->ad_components, validation_context,
                                         &ad_components_validate_params)) {
    return false;
  }

  return true;
}

BidderWorkletNonSharedParams_Data::BidderWorkletNonSharedParams_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool BiddingBrowserSignals_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 24, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const BiddingBrowserSignals_Data* object =
      static_cast<const BiddingBrowserSignals_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->prev_wins, 3, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams prev_wins_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->prev_wins, validation_context,
                                         &prev_wins_validate_params)) {
    return false;
  }

  return true;
}

BiddingBrowserSignals_Data::BiddingBrowserSignals_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool BidderWorkletBid_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 48, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const BidderWorkletBid_Data* object =
      static_cast<const BidderWorkletBid_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->ad, 1, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams ad_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->ad, validation_context,
                                         &ad_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->render_url, 3, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->render_url, validation_context))
    return false;

  const mojo::internal::ContainerValidateParams ad_components_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->ad_components, validation_context,
                                         &ad_components_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->bid_duration, 5, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->bid_duration, validation_context))
    return false;

  return true;
}

BidderWorkletBid_Data::BidderWorkletBid_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool BidderWorklet_GenerateBid_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 88, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const BidderWorklet_GenerateBid_Params_Data* object =
      static_cast<const BidderWorklet_GenerateBid_Params_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->bidder_worklet_non_shared_params, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->bidder_worklet_non_shared_params, validation_context))
    return false;

  if (!mojo::internal::ValidatePointerNonNullable(
          object->interest_group_join_origin, 2, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->interest_group_join_origin, validation_context))
    return false;

  const mojo::internal::ContainerValidateParams auction_signals_json_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->auction_signals_json, validation_context,
                                         &auction_signals_json_validate_params)) {
    return false;
  }

  const mojo::internal::ContainerValidateParams per_buyer_signals_json_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->per_buyer_signals_json, validation_context,
                                         &per_buyer_signals_json_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidateStruct(object->per_buyer_timeout, validation_context))
    return false;

  if (!mojo::internal::ValidatePointerNonNullable(
          object->browser_signal_seller_origin, 6, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->browser_signal_seller_origin, validation_context))
    return false;

  if (!mojo::internal::ValidateStruct(object->browser_signal_top_level_seller_origin, validation_context))
    return false;

  if (!mojo::internal::ValidatePointerNonNullable(
          object->bidding_browser_signals, 8, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->bidding_browser_signals, validation_context))
    return false;

  if (!mojo::internal::ValidatePointerNonNullable(
          object->auction_start_time, 9, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->auction_start_time, validation_context))
    return false;

  return true;
}

BidderWorklet_GenerateBid_Params_Data::BidderWorklet_GenerateBid_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool BidderWorklet_GenerateBid_ResponseParams_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 64, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const BidderWorklet_GenerateBid_ResponseParams_Data* object =
      static_cast<const BidderWorklet_GenerateBid_ResponseParams_Data*>(data);

  if (!mojo::internal::ValidateStruct(object->bid, validation_context))
    return false;

  if (!mojo::internal::ValidateStruct(object->debug_loss_report_url, validation_context))
    return false;

  if (!mojo::internal::ValidateStruct(object->debug_win_report_url, validation_context))
    return false;

  if (!mojo::internal::ValidatePointerNonNullable(
          object->pa_requests, 8, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams pa_requests_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->pa_requests, validation_context,
                                         &pa_requests_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->errors, 9, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams errors_validate_params(
      0, false, new mojo::internal::ContainerValidateParams(0, false, nullptr));
  if (!mojo::internal::ValidateContainer(object->errors, validation_context,
                                         &errors_validate_params)) {
    return false;
  }

  return true;
}

BidderWorklet_GenerateBid_ResponseParams_Data::BidderWorklet_GenerateBid_ResponseParams_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool BidderWorklet_SendPendingSignalsRequests_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const BidderWorklet_SendPendingSignalsRequests_Params_Data* object =
      static_cast<const BidderWorklet_SendPendingSignalsRequests_Params_Data*>(data);

  return true;
}

BidderWorklet_SendPendingSignalsRequests_Params_Data::BidderWorklet_SendPendingSignalsRequests_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool BidderWorklet_ReportWin_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 96, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const BidderWorklet_ReportWin_Params_Data* object =
      static_cast<const BidderWorklet_ReportWin_Params_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->interest_group_name, 1, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams interest_group_name_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->interest_group_name, validation_context,
                                         &interest_group_name_validate_params)) {
    return false;
  }

  const mojo::internal::ContainerValidateParams auction_signals_json_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->auction_signals_json, validation_context,
                                         &auction_signals_json_validate_params)) {
    return false;
  }

  const mojo::internal::ContainerValidateParams per_buyer_signals_json_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->per_buyer_signals_json, validation_context,
                                         &per_buyer_signals_json_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->seller_signals_json, 4, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams seller_signals_json_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->seller_signals_json, validation_context,
                                         &seller_signals_json_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->browser_signal_render_url, 5, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->browser_signal_render_url, validation_context))
    return false;

  if (!mojo::internal::ValidatePointerNonNullable(
          object->browser_signal_seller_origin, 9, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateStruct(object->browser_signal_seller_origin, validation_context))
    return false;

  if (!mojo::internal::ValidateStruct(object->browser_signal_top_level_seller_origin, validation_context))
    return false;

  return true;
}

BidderWorklet_ReportWin_Params_Data::BidderWorklet_ReportWin_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool BidderWorklet_ReportWin_ResponseParams_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 40, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const BidderWorklet_ReportWin_ResponseParams_Data* object =
      static_cast<const BidderWorklet_ReportWin_ResponseParams_Data*>(data);

  if (!mojo::internal::ValidateStruct(object->report_url, validation_context))
    return false;

  if (!mojo::internal::ValidatePointerNonNullable(
          object->ad_beacon_map, 2, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams ad_beacon_map_validate_params(
      new mojo::internal::ContainerValidateParams(0, false, new mojo::internal::ContainerValidateParams(0, false, nullptr)), new mojo::internal::ContainerValidateParams(0, false, nullptr));
  if (!mojo::internal::ValidateContainer(object->ad_beacon_map, validation_context,
                                         &ad_beacon_map_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->pa_requests, 3, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams pa_requests_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->pa_requests, validation_context,
                                         &pa_requests_validate_params)) {
    return false;
  }

  if (!mojo::internal::ValidatePointerNonNullable(
          object->errors, 4, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams errors_validate_params(
      0, false, new mojo::internal::ContainerValidateParams(0, false, nullptr));
  if (!mojo::internal::ValidateContainer(object->errors, validation_context,
                                         &errors_validate_params)) {
    return false;
  }

  return true;
}

BidderWorklet_ReportWin_ResponseParams_Data::BidderWorklet_ReportWin_ResponseParams_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool BidderWorklet_ConnectDevToolsAgent_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const BidderWorklet_ConnectDevToolsAgent_Params_Data* object =
      static_cast<const BidderWorklet_ConnectDevToolsAgent_Params_Data*>(data);

  if (!mojo::internal::ValidateHandleOrInterfaceNonNullable(
          object->agent, 1, validation_context)) {
    return false;
  }
  if (!mojo::internal::ValidateHandleOrInterface(object->agent,
                                                 validation_context)) {
    return false;
  }

  return true;
}

BidderWorklet_ConnectDevToolsAgent_Params_Data::BidderWorklet_ConnectDevToolsAgent_Params_Data()
    : header_({sizeof(*this), 0}) {}

}  // namespace internal
}  // namespace mojom
}  // namespace auction_worklet