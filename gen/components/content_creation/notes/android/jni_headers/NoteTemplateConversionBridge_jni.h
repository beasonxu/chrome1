// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/content_creation/notes/bridges/NoteTemplateConversionBridge

#ifndef org_chromium_components_content_creation_notes_bridges_NoteTemplateConversionBridge_JNI
#define org_chromium_components_content_creation_notes_bridges_NoteTemplateConversionBridge_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge[];
const char
    kClassPath_org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge[]
    = "org/chromium/components/content_creation/notes/bridges/NoteTemplateConversionBridge";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_clazz(nullptr);
#ifndef org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_clazz_defined
#define org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_clazz_defined
inline jclass
    org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge,
      &g_org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace content_creation {


static std::atomic<jmethodID>
    g_org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_createTemplateList(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_NoteTemplateConversionBridge_createTemplateList(JNIEnv* env) {
  jclass clazz =
      org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createTemplateList",
          "()Ljava/util/List;",
&g_org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_createTemplateList);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_createBackground(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_NoteTemplateConversionBridge_createBackground(JNIEnv* env, JniIntWrapper color) {
  jclass clazz =
      org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createBackground",
          "(I)Lorg/chromium/components/content_creation/notes/models/Background;",
&g_org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_createBackground);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, as_jint(color));
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_createLinearGradientBackground(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_NoteTemplateConversionBridge_createLinearGradientBackground(JNIEnv* env, const
    base::android::JavaRef<jintArray>& colors,
    JniIntWrapper direction) {
  jclass clazz =
      org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createLinearGradientBackground",
          "([II)Lorg/chromium/components/content_creation/notes/models/Background;",
&g_org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_createLinearGradientBackground);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, colors.obj(), as_jint(direction));
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_createImageBackground(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_NoteTemplateConversionBridge_createImageBackground(JNIEnv* env, const
    base::android::JavaRef<jstring>& imageUrl) {
  jclass clazz =
      org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createImageBackground",
          "(Ljava/lang/String;)Lorg/chromium/components/content_creation/notes/models/Background;",
&g_org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_createImageBackground);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, imageUrl.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_createTextStyle(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_NoteTemplateConversionBridge_createTextStyle(JNIEnv* env, const
    base::android::JavaRef<jstring>& fontName,
    JniIntWrapper fontColor,
    JniIntWrapper weight,
    jboolean allCaps,
    JniIntWrapper alignment,
    JniIntWrapper minTextSizeSP,
    JniIntWrapper maxTextSizeSP,
    JniIntWrapper highlightColor,
    JniIntWrapper highlightStyle) {
  jclass clazz =
      org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createTextStyle",
"(Ljava/lang/String;IIZIIIII)Lorg/chromium/components/content_creation/notes/models/TextStyle;",
&g_org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_createTextStyle);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, fontName.obj(), as_jint(fontColor), as_jint(weight), allCaps,
              as_jint(alignment), as_jint(minTextSizeSP), as_jint(maxTextSizeSP),
              as_jint(highlightColor), as_jint(highlightStyle));
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_createFooterStyle(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_NoteTemplateConversionBridge_createFooterStyle(JNIEnv* env, JniIntWrapper textColor,
    JniIntWrapper logoColor) {
  jclass clazz =
      org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createFooterStyle",
          "(II)Lorg/chromium/components/content_creation/notes/models/FooterStyle;",
&g_org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_createFooterStyle);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, as_jint(textColor), as_jint(logoColor));
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_createTemplateAndMaybeAddToList(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_NoteTemplateConversionBridge_createTemplateAndMaybeAddToList(JNIEnv* env, const
    base::android::JavaRef<jobject>& list,
    JniIntWrapper id,
    const base::android::JavaRef<jstring>& localizedName,
    const base::android::JavaRef<jobject>& mainBackground,
    const base::android::JavaRef<jobject>& contentBackground,
    const base::android::JavaRef<jobject>& textStyle,
    const base::android::JavaRef<jobject>& footerStyle) {
  jclass clazz =
      org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createTemplateAndMaybeAddToList",
"(Ljava/util/List;ILjava/lang/String;Lorg/chromium/components/content_creation/notes/models/Background;Lorg/chromium/components/content_creation/notes/models/Background;Lorg/chromium/components/content_creation/notes/models/TextStyle;Lorg/chromium/components/content_creation/notes/models/FooterStyle;)Lorg/chromium/components/content_creation/notes/models/NoteTemplate;",
&g_org_chromium_components_content_1creation_notes_bridges_NoteTemplateConversionBridge_createTemplateAndMaybeAddToList);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, list.obj(), as_jint(id), localizedName.obj(),
              mainBackground.obj(), contentBackground.obj(), textStyle.obj(), footerStyle.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

}  // namespace content_creation

#endif  // org_chromium_components_content_creation_notes_bridges_NoteTemplateConversionBridge_JNI
