// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/feed/core/proto/v2/wire/capability.proto

#include "components/feed/core/proto/v2/wire/capability.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace feedwire {
}  // namespace feedwire
namespace feedwire {
bool Capability_IsValid(int value) {
  switch (value) {
    case 0:
    case 5:
    case 9:
    case 10:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 23:
    case 24:
    case 27:
    case 28:
    case 30:
    case 35:
    case 37:
    case 38:
    case 43:
    case 44:
    case 46:
    case 47:
    case 48:
    case 60:
    case 61:
    case 64:
    case 67:
    case 70:
    case 73:
    case 77:
    case 79:
    case 81:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> Capability_strings[31] = {};

static const char Capability_names[] =
  "AMP_GROUP_DATASTORE"
  "AMP_STORY_PLAYER"
  "CARD_MENU"
  "CONTENT_LIFETIME"
  "DISMISS_COMMAND"
  "DOWNLOAD_LINK"
  "HEART"
  "INFINITE_FEED"
  "INFO_CARD_ACKNOWLEDGEMENT_TRACKING"
  "INLINE_VIDEO_AUTOPLAY"
  "INVALIDATE_CACHE_COMMAND"
  "LONG_PRESS_CARD_MENU"
  "LOTTIE_ANIMATIONS"
  "MATERIAL_NEXT_BASELINE"
  "MATERIAL_NEXT_GOOGLE_SANS"
  "ON_DEVICE_USER_PROFILE"
  "OPEN_IN_INCOGNITO"
  "OPEN_IN_NEW_TAB_IN_GROUP"
  "OPEN_IN_TAB"
  "OPEN_VIDEO_COMMAND"
  "PERSIST_GAME_CONTENT"
  "PREFETCH_METADATA"
  "READ_LATER"
  "REQUEST_SCHEDULE"
  "SHARE"
  "SILK_AMP_OPEN_COMMAND"
  "SPORTS_IN_GAME_UPDATE"
  "THANK_CREATOR"
  "UI_THEME_V2"
  "UNDO_FOR_DISMISS_COMMAND"
  "UNKNOWN_CAPABILITY";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry Capability_entries[] = {
  { {Capability_names + 0, 19}, 48 },
  { {Capability_names + 19, 16}, 47 },
  { {Capability_names + 35, 9}, 19 },
  { {Capability_names + 44, 16}, 64 },
  { {Capability_names + 60, 15}, 9 },
  { {Capability_names + 75, 13}, 28 },
  { {Capability_names + 88, 5}, 23 },
  { {Capability_names + 93, 13}, 5 },
  { {Capability_names + 106, 34}, 77 },
  { {Capability_names + 140, 21}, 18 },
  { {Capability_names + 161, 24}, 73 },
  { {Capability_names + 185, 20}, 38 },
  { {Capability_names + 205, 17}, 37 },
  { {Capability_names + 222, 22}, 60 },
  { {Capability_names + 244, 25}, 61 },
  { {Capability_names + 269, 22}, 70 },
  { {Capability_names + 291, 17}, 67 },
  { {Capability_names + 308, 24}, 81 },
  { {Capability_names + 332, 11}, 27 },
  { {Capability_names + 343, 18}, 16 },
  { {Capability_names + 361, 20}, 46 },
  { {Capability_names + 381, 17}, 43 },
  { {Capability_names + 398, 10}, 30 },
  { {Capability_names + 408, 16}, 20 },
  { {Capability_names + 424, 5}, 24 },
  { {Capability_names + 429, 21}, 44 },
  { {Capability_names + 450, 21}, 35 },
  { {Capability_names + 471, 13}, 79 },
  { {Capability_names + 484, 11}, 17 },
  { {Capability_names + 495, 24}, 10 },
  { {Capability_names + 519, 18}, 0 },
};

static const int Capability_entries_by_number[] = {
  30, // 0 -> UNKNOWN_CAPABILITY
  7, // 5 -> INFINITE_FEED
  4, // 9 -> DISMISS_COMMAND
  29, // 10 -> UNDO_FOR_DISMISS_COMMAND
  19, // 16 -> OPEN_VIDEO_COMMAND
  28, // 17 -> UI_THEME_V2
  9, // 18 -> INLINE_VIDEO_AUTOPLAY
  2, // 19 -> CARD_MENU
  23, // 20 -> REQUEST_SCHEDULE
  6, // 23 -> HEART
  24, // 24 -> SHARE
  18, // 27 -> OPEN_IN_TAB
  5, // 28 -> DOWNLOAD_LINK
  22, // 30 -> READ_LATER
  26, // 35 -> SPORTS_IN_GAME_UPDATE
  12, // 37 -> LOTTIE_ANIMATIONS
  11, // 38 -> LONG_PRESS_CARD_MENU
  21, // 43 -> PREFETCH_METADATA
  25, // 44 -> SILK_AMP_OPEN_COMMAND
  20, // 46 -> PERSIST_GAME_CONTENT
  1, // 47 -> AMP_STORY_PLAYER
  0, // 48 -> AMP_GROUP_DATASTORE
  13, // 60 -> MATERIAL_NEXT_BASELINE
  14, // 61 -> MATERIAL_NEXT_GOOGLE_SANS
  3, // 64 -> CONTENT_LIFETIME
  16, // 67 -> OPEN_IN_INCOGNITO
  15, // 70 -> ON_DEVICE_USER_PROFILE
  10, // 73 -> INVALIDATE_CACHE_COMMAND
  8, // 77 -> INFO_CARD_ACKNOWLEDGEMENT_TRACKING
  27, // 79 -> THANK_CREATOR
  17, // 81 -> OPEN_IN_NEW_TAB_IN_GROUP
};

const std::string& Capability_Name(
    Capability value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          Capability_entries,
          Capability_entries_by_number,
          31, Capability_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      Capability_entries,
      Capability_entries_by_number,
      31, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     Capability_strings[idx].get();
}
bool Capability_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Capability* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      Capability_entries, 31, name, &int_value);
  if (success) {
    *value = static_cast<Capability>(int_value);
  }
  return success;
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace feedwire
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
