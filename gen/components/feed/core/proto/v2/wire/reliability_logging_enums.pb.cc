// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/feed/core/proto/v2/wire/reliability_logging_enums.proto

#include "components/feed/core/proto/v2/wire/reliability_logging_enums.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace feedwire {
}  // namespace feedwire
namespace feedwire {
bool DiscoverLaunchResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 13:
    case 15:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 29:
    case 30:
    case 31:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 46:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> DiscoverLaunchResult_strings[32] = {};

static const char DiscoverLaunchResult_names[] =
  "ABORTED_DUE_TO_INVALID_STATE"
  "ACCOUNT_PARTICLE_DISC_TAPPED"
  "CARDS_FULLY_RENDERED"
  "CARDS_RENDERED_BUT_IMAGE_LOADING_CANCELLED"
  "CARDS_RENDERED_BUT_IMAGE_LOADING_FAILED"
  "CARDS_UNSPECIFIED"
  "CARD_TAPPED"
  "CLEAR_ALL_IN_PROGRESS"
  "CONFIGURATION_CHANGED"
  "DATA_IN_STORE_IS_FOR_ANOTHER_USER"
  "FAILED_TO_RENDER"
  "FEED_HIDDEN"
  "FRAGMENT_PAUSED"
  "FRAGMENT_STOPPED"
  "INELIGIBLE_DISCOVER_DISABLED"
  "INELIGIBLE_DISCOVER_DISABLED_BY_ENTERPRISE_POLICY"
  "INELIGIBLE_EULA_NOT_ACCEPTED"
  "NAVIGATED_AWAY_IN_APP"
  "NAVIGATED_BACK"
  "NAVIGATED_TO_ANOTHER_TAB"
  "NOT_A_WEB_FEED_SUBSCRIBER"
  "NO_CARDS_FAILED_TO_GET_AUTH_TOKEN"
  "NO_CARDS_REQUEST_ERROR_NO_INTERNET"
  "NO_CARDS_REQUEST_ERROR_OTHER"
  "NO_CARDS_RESPONSE_ERROR_NON_200"
  "NO_CARDS_RESPONSE_ERROR_ZERO_CARDS"
  "NO_CARDS_UNKNOWN_REASON"
  "OVERFLOW_MANAGE_INTERESTS_TAPPED"
  "SEARCH_BOX_TAPPED"
  "SWITCHED_FEED_TABS"
  "UNKNOWN_HIDE_REASON"
  "VOICE_SEARCH_TAPPED";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry DiscoverLaunchResult_entries[] = {
  { {DiscoverLaunchResult_names + 0, 28}, 6 },
  { {DiscoverLaunchResult_names + 28, 28}, 13 },
  { {DiscoverLaunchResult_names + 56, 20}, 1 },
  { {DiscoverLaunchResult_names + 76, 42}, 2 },
  { {DiscoverLaunchResult_names + 118, 39}, 3 },
  { {DiscoverLaunchResult_names + 157, 17}, 0 },
  { {DiscoverLaunchResult_names + 174, 11}, 46 },
  { {DiscoverLaunchResult_names + 185, 21}, 39 },
  { {DiscoverLaunchResult_names + 206, 21}, 30 },
  { {DiscoverLaunchResult_names + 227, 33}, 40 },
  { {DiscoverLaunchResult_names + 260, 16}, 5 },
  { {DiscoverLaunchResult_names + 276, 11}, 36 },
  { {DiscoverLaunchResult_names + 287, 15}, 43 },
  { {DiscoverLaunchResult_names + 302, 16}, 11 },
  { {DiscoverLaunchResult_names + 318, 28}, 15 },
  { {DiscoverLaunchResult_names + 346, 49}, 38 },
  { {DiscoverLaunchResult_names + 395, 28}, 37 },
  { {DiscoverLaunchResult_names + 423, 21}, 35 },
  { {DiscoverLaunchResult_names + 444, 14}, 9 },
  { {DiscoverLaunchResult_names + 458, 24}, 10 },
  { {DiscoverLaunchResult_names + 482, 25}, 41 },
  { {DiscoverLaunchResult_names + 507, 33}, 23 },
  { {DiscoverLaunchResult_names + 540, 34}, 24 },
  { {DiscoverLaunchResult_names + 574, 28}, 25 },
  { {DiscoverLaunchResult_names + 602, 31}, 26 },
  { {DiscoverLaunchResult_names + 633, 34}, 27 },
  { {DiscoverLaunchResult_names + 667, 23}, 29 },
  { {DiscoverLaunchResult_names + 690, 32}, 31 },
  { {DiscoverLaunchResult_names + 722, 17}, 7 },
  { {DiscoverLaunchResult_names + 739, 18}, 42 },
  { {DiscoverLaunchResult_names + 757, 19}, 44 },
  { {DiscoverLaunchResult_names + 776, 19}, 8 },
};

static const int DiscoverLaunchResult_entries_by_number[] = {
  5, // 0 -> CARDS_UNSPECIFIED
  2, // 1 -> CARDS_FULLY_RENDERED
  3, // 2 -> CARDS_RENDERED_BUT_IMAGE_LOADING_CANCELLED
  4, // 3 -> CARDS_RENDERED_BUT_IMAGE_LOADING_FAILED
  10, // 5 -> FAILED_TO_RENDER
  0, // 6 -> ABORTED_DUE_TO_INVALID_STATE
  28, // 7 -> SEARCH_BOX_TAPPED
  31, // 8 -> VOICE_SEARCH_TAPPED
  18, // 9 -> NAVIGATED_BACK
  19, // 10 -> NAVIGATED_TO_ANOTHER_TAB
  13, // 11 -> FRAGMENT_STOPPED
  1, // 13 -> ACCOUNT_PARTICLE_DISC_TAPPED
  14, // 15 -> INELIGIBLE_DISCOVER_DISABLED
  21, // 23 -> NO_CARDS_FAILED_TO_GET_AUTH_TOKEN
  22, // 24 -> NO_CARDS_REQUEST_ERROR_NO_INTERNET
  23, // 25 -> NO_CARDS_REQUEST_ERROR_OTHER
  24, // 26 -> NO_CARDS_RESPONSE_ERROR_NON_200
  25, // 27 -> NO_CARDS_RESPONSE_ERROR_ZERO_CARDS
  26, // 29 -> NO_CARDS_UNKNOWN_REASON
  8, // 30 -> CONFIGURATION_CHANGED
  27, // 31 -> OVERFLOW_MANAGE_INTERESTS_TAPPED
  17, // 35 -> NAVIGATED_AWAY_IN_APP
  11, // 36 -> FEED_HIDDEN
  16, // 37 -> INELIGIBLE_EULA_NOT_ACCEPTED
  15, // 38 -> INELIGIBLE_DISCOVER_DISABLED_BY_ENTERPRISE_POLICY
  7, // 39 -> CLEAR_ALL_IN_PROGRESS
  9, // 40 -> DATA_IN_STORE_IS_FOR_ANOTHER_USER
  20, // 41 -> NOT_A_WEB_FEED_SUBSCRIBER
  29, // 42 -> SWITCHED_FEED_TABS
  12, // 43 -> FRAGMENT_PAUSED
  30, // 44 -> UNKNOWN_HIDE_REASON
  6, // 46 -> CARD_TAPPED
};

const std::string& DiscoverLaunchResult_Name(
    DiscoverLaunchResult value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          DiscoverLaunchResult_entries,
          DiscoverLaunchResult_entries_by_number,
          32, DiscoverLaunchResult_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      DiscoverLaunchResult_entries,
      DiscoverLaunchResult_entries_by_number,
      32, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     DiscoverLaunchResult_strings[idx].get();
}
bool DiscoverLaunchResult_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, DiscoverLaunchResult* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      DiscoverLaunchResult_entries, 32, name, &int_value);
  if (success) {
    *value = static_cast<DiscoverLaunchResult>(int_value);
  }
  return success;
}
bool DiscoverCardReadCacheResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 7:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> DiscoverCardReadCacheResult_strings[5] = {};

static const char DiscoverCardReadCacheResult_names[] =
  "CACHE_READ_OK"
  "CACHE_UNSPECIFIED"
  "EMPTY_SESSION"
  "FAILED"
  "STALE";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry DiscoverCardReadCacheResult_entries[] = {
  { {DiscoverCardReadCacheResult_names + 0, 13}, 1 },
  { {DiscoverCardReadCacheResult_names + 13, 17}, 0 },
  { {DiscoverCardReadCacheResult_names + 30, 13}, 2 },
  { {DiscoverCardReadCacheResult_names + 43, 6}, 7 },
  { {DiscoverCardReadCacheResult_names + 49, 5}, 3 },
};

static const int DiscoverCardReadCacheResult_entries_by_number[] = {
  1, // 0 -> CACHE_UNSPECIFIED
  0, // 1 -> CACHE_READ_OK
  2, // 2 -> EMPTY_SESSION
  4, // 3 -> STALE
  3, // 7 -> FAILED
};

const std::string& DiscoverCardReadCacheResult_Name(
    DiscoverCardReadCacheResult value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          DiscoverCardReadCacheResult_entries,
          DiscoverCardReadCacheResult_entries_by_number,
          5, DiscoverCardReadCacheResult_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      DiscoverCardReadCacheResult_entries,
      DiscoverCardReadCacheResult_entries_by_number,
      5, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     DiscoverCardReadCacheResult_strings[idx].get();
}
bool DiscoverCardReadCacheResult_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, DiscoverCardReadCacheResult* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      DiscoverCardReadCacheResult_entries, 5, name, &int_value);
  if (success) {
    *value = static_cast<DiscoverCardReadCacheResult>(int_value);
  }
  return success;
}
bool DiscoverAboveTheFoldRenderResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> DiscoverAboveTheFoldRenderResult_strings[4] = {};

static const char DiscoverAboveTheFoldRenderResult_names[] =
  "ATF_UNSPECIFIED"
  "FULL_FEED_ERROR"
  "INTERNAL_ERROR"
  "SUCCESS";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry DiscoverAboveTheFoldRenderResult_entries[] = {
  { {DiscoverAboveTheFoldRenderResult_names + 0, 15}, 0 },
  { {DiscoverAboveTheFoldRenderResult_names + 15, 15}, 3 },
  { {DiscoverAboveTheFoldRenderResult_names + 30, 14}, 4 },
  { {DiscoverAboveTheFoldRenderResult_names + 44, 7}, 1 },
};

static const int DiscoverAboveTheFoldRenderResult_entries_by_number[] = {
  0, // 0 -> ATF_UNSPECIFIED
  3, // 1 -> SUCCESS
  1, // 3 -> FULL_FEED_ERROR
  2, // 4 -> INTERNAL_ERROR
};

const std::string& DiscoverAboveTheFoldRenderResult_Name(
    DiscoverAboveTheFoldRenderResult value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          DiscoverAboveTheFoldRenderResult_entries,
          DiscoverAboveTheFoldRenderResult_entries_by_number,
          4, DiscoverAboveTheFoldRenderResult_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      DiscoverAboveTheFoldRenderResult_entries,
      DiscoverAboveTheFoldRenderResult_entries_by_number,
      4, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     DiscoverAboveTheFoldRenderResult_strings[idx].get();
}
bool DiscoverAboveTheFoldRenderResult_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, DiscoverAboveTheFoldRenderResult* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      DiscoverAboveTheFoldRenderResult_entries, 4, name, &int_value);
  if (success) {
    *value = static_cast<DiscoverAboveTheFoldRenderResult>(int_value);
  }
  return success;
}
bool DiscoverImagesInViewportLoadResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> DiscoverImagesInViewportLoadResult_strings[5] = {};

static const char DiscoverImagesInViewportLoadResult_names[] =
  "ALL_IMAGES_FAILED_TO_RENDER"
  "IMAGES_FULLY_RENDERED"
  "IMAGES_UNSPECIFIED"
  "IMAGE_LOADING_CANCELLED"
  "SOME_IMAGES_FAILED_TO_RENDER";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry DiscoverImagesInViewportLoadResult_entries[] = {
  { {DiscoverImagesInViewportLoadResult_names + 0, 27}, 3 },
  { {DiscoverImagesInViewportLoadResult_names + 27, 21}, 1 },
  { {DiscoverImagesInViewportLoadResult_names + 48, 18}, 0 },
  { {DiscoverImagesInViewportLoadResult_names + 66, 23}, 4 },
  { {DiscoverImagesInViewportLoadResult_names + 89, 28}, 2 },
};

static const int DiscoverImagesInViewportLoadResult_entries_by_number[] = {
  2, // 0 -> IMAGES_UNSPECIFIED
  1, // 1 -> IMAGES_FULLY_RENDERED
  4, // 2 -> SOME_IMAGES_FAILED_TO_RENDER
  0, // 3 -> ALL_IMAGES_FAILED_TO_RENDER
  3, // 4 -> IMAGE_LOADING_CANCELLED
};

const std::string& DiscoverImagesInViewportLoadResult_Name(
    DiscoverImagesInViewportLoadResult value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          DiscoverImagesInViewportLoadResult_entries,
          DiscoverImagesInViewportLoadResult_entries_by_number,
          5, DiscoverImagesInViewportLoadResult_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      DiscoverImagesInViewportLoadResult_entries,
      DiscoverImagesInViewportLoadResult_entries_by_number,
      5, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     DiscoverImagesInViewportLoadResult_strings[idx].get();
}
bool DiscoverImagesInViewportLoadResult_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, DiscoverImagesInViewportLoadResult* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      DiscoverImagesInViewportLoadResult_entries, 5, name, &int_value);
  if (success) {
    *value = static_cast<DiscoverImagesInViewportLoadResult>(int_value);
  }
  return success;
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace feedwire
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
