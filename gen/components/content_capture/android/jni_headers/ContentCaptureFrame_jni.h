// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/content_capture/ContentCaptureFrame

#ifndef org_chromium_components_content_capture_ContentCaptureFrame_JNI
#define org_chromium_components_content_capture_ContentCaptureFrame_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_content_1capture_ContentCaptureFrame[];
const char kClassPath_org_chromium_components_content_1capture_ContentCaptureFrame[] =
    "org/chromium/components/content_capture/ContentCaptureFrame";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_content_1capture_ContentCaptureFrame_clazz(nullptr);
#ifndef org_chromium_components_content_1capture_ContentCaptureFrame_clazz_defined
#define org_chromium_components_content_1capture_ContentCaptureFrame_clazz_defined
inline jclass org_chromium_components_content_1capture_ContentCaptureFrame_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_content_1capture_ContentCaptureFrame,
      &g_org_chromium_components_content_1capture_ContentCaptureFrame_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.

static std::atomic<jmethodID>
    g_org_chromium_components_content_1capture_ContentCaptureFrame_createContentCaptureFrame(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_ContentCaptureFrame_createContentCaptureFrame(JNIEnv* env, jlong id,
    const base::android::JavaRef<jstring>& value,
    JniIntWrapper x,
    JniIntWrapper y,
    JniIntWrapper width,
    JniIntWrapper height,
    const base::android::JavaRef<jstring>& title,
    const base::android::JavaRef<jstring>& favicon) {
  jclass clazz = org_chromium_components_content_1capture_ContentCaptureFrame_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_content_1capture_ContentCaptureFrame_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createContentCaptureFrame",
"(JLjava/lang/String;IIIILjava/lang/String;Ljava/lang/String;)Lorg/chromium/components/content_capture/ContentCaptureFrame;",
&g_org_chromium_components_content_1capture_ContentCaptureFrame_createContentCaptureFrame);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, id, value.obj(), as_jint(x), as_jint(y), as_jint(width),
              as_jint(height), title.obj(), favicon.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

#endif  // org_chromium_components_content_capture_ContentCaptureFrame_JNI
