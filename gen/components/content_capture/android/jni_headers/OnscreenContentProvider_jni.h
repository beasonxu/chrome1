// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/content_capture/OnscreenContentProvider

#ifndef org_chromium_components_content_capture_OnscreenContentProvider_JNI
#define org_chromium_components_content_capture_OnscreenContentProvider_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_content_1capture_OnscreenContentProvider[];
const char kClassPath_org_chromium_components_content_1capture_OnscreenContentProvider[] =
    "org/chromium/components/content_capture/OnscreenContentProvider";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_content_1capture_OnscreenContentProvider_clazz(nullptr);
#ifndef org_chromium_components_content_1capture_OnscreenContentProvider_clazz_defined
#define org_chromium_components_content_1capture_OnscreenContentProvider_clazz_defined
inline jclass org_chromium_components_content_1capture_OnscreenContentProvider_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_content_1capture_OnscreenContentProvider,
      &g_org_chromium_components_content_1capture_OnscreenContentProvider_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace content_capture {

static jlong JNI_OnscreenContentProvider_Init(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& caller,
    const base::android::JavaParamRef<jobject>& webContents);

JNI_GENERATOR_EXPORT jlong Java_J_N_M87a3iHr(
    JNIEnv* env,
    jclass jcaller,
    jobject caller,
    jobject webContents) {
  return JNI_OnscreenContentProvider_Init(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jobject>(env, webContents));
}

JNI_GENERATOR_EXPORT void Java_J_N_Mljy_1ZmC(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeOnscreenContentProviderAndroid,
    jobject webContents) {
  OnscreenContentProviderAndroid* native =
      reinterpret_cast<OnscreenContentProviderAndroid*>(nativeOnscreenContentProviderAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnWebContentsChanged");
  return native->OnWebContentsChanged(env, base::android::JavaParamRef<jobject>(env, webContents));
}

JNI_GENERATOR_EXPORT void Java_J_N_Mcvkj_00024M_1(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeOnscreenContentProviderAndroid) {
  OnscreenContentProviderAndroid* native =
      reinterpret_cast<OnscreenContentProviderAndroid*>(nativeOnscreenContentProviderAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "Destroy");
  return native->Destroy(env);
}


static std::atomic<jmethodID>
    g_org_chromium_components_content_1capture_OnscreenContentProvider_didCaptureContent(nullptr);
static void Java_OnscreenContentProvider_didCaptureContent(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobjectArray>& session,
    const base::android::JavaRef<jobject>& data) {
  jclass clazz = org_chromium_components_content_1capture_OnscreenContentProvider_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_content_1capture_OnscreenContentProvider_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "didCaptureContent",
          "([Ljava/lang/Object;Lorg/chromium/components/content_capture/ContentCaptureFrame;)V",
          &g_org_chromium_components_content_1capture_OnscreenContentProvider_didCaptureContent);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, session.obj(), data.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_content_1capture_OnscreenContentProvider_didUpdateContent(nullptr);
static void Java_OnscreenContentProvider_didUpdateContent(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobjectArray>& session,
    const base::android::JavaRef<jobject>& data) {
  jclass clazz = org_chromium_components_content_1capture_OnscreenContentProvider_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_content_1capture_OnscreenContentProvider_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "didUpdateContent",
          "([Ljava/lang/Object;Lorg/chromium/components/content_capture/ContentCaptureFrame;)V",
          &g_org_chromium_components_content_1capture_OnscreenContentProvider_didUpdateContent);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, session.obj(), data.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_content_1capture_OnscreenContentProvider_didRemoveContent(nullptr);
static void Java_OnscreenContentProvider_didRemoveContent(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobjectArray>& session,
    const base::android::JavaRef<jlongArray>& data) {
  jclass clazz = org_chromium_components_content_1capture_OnscreenContentProvider_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_content_1capture_OnscreenContentProvider_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "didRemoveContent",
          "([Ljava/lang/Object;[J)V",
          &g_org_chromium_components_content_1capture_OnscreenContentProvider_didRemoveContent);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, session.obj(), data.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_content_1capture_OnscreenContentProvider_didRemoveSession(nullptr);
static void Java_OnscreenContentProvider_didRemoveSession(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobjectArray>& session) {
  jclass clazz = org_chromium_components_content_1capture_OnscreenContentProvider_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_content_1capture_OnscreenContentProvider_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "didRemoveSession",
          "([Ljava/lang/Object;)V",
          &g_org_chromium_components_content_1capture_OnscreenContentProvider_didRemoveSession);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, session.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_content_1capture_OnscreenContentProvider_didUpdateTitle(nullptr);
static void Java_OnscreenContentProvider_didUpdateTitle(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>& mainFrame) {
  jclass clazz = org_chromium_components_content_1capture_OnscreenContentProvider_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_content_1capture_OnscreenContentProvider_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "didUpdateTitle",
          "(Lorg/chromium/components/content_capture/ContentCaptureFrame;)V",
          &g_org_chromium_components_content_1capture_OnscreenContentProvider_didUpdateTitle);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, mainFrame.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_content_1capture_OnscreenContentProvider_didUpdateFavicon(nullptr);
static void Java_OnscreenContentProvider_didUpdateFavicon(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>& mainFrame) {
  jclass clazz = org_chromium_components_content_1capture_OnscreenContentProvider_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_content_1capture_OnscreenContentProvider_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "didUpdateFavicon",
          "(Lorg/chromium/components/content_capture/ContentCaptureFrame;)V",
          &g_org_chromium_components_content_1capture_OnscreenContentProvider_didUpdateFavicon);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, mainFrame.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_content_1capture_OnscreenContentProvider_getOffsetY(nullptr);
static jint Java_OnscreenContentProvider_getOffsetY(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>& webContents) {
  jclass clazz = org_chromium_components_content_1capture_OnscreenContentProvider_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_content_1capture_OnscreenContentProvider_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getOffsetY",
          "(Lorg/chromium/content_public/browser/WebContents;)I",
          &g_org_chromium_components_content_1capture_OnscreenContentProvider_getOffsetY);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id, webContents.obj());
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_content_1capture_OnscreenContentProvider_shouldCapture(nullptr);
static jboolean Java_OnscreenContentProvider_shouldCapture(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& url) {
  jclass clazz = org_chromium_components_content_1capture_OnscreenContentProvider_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_content_1capture_OnscreenContentProvider_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "shouldCapture",
          "(Ljava/lang/String;)Z",
          &g_org_chromium_components_content_1capture_OnscreenContentProvider_shouldCapture);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id, url.obj());
  return ret;
}

}  // namespace content_capture

#endif  // org_chromium_components_content_capture_OnscreenContentProvider_JNI
