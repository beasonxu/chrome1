// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/messages/MessageWrapper

#ifndef org_chromium_components_messages_MessageWrapper_JNI
#define org_chromium_components_messages_MessageWrapper_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_messages_MessageWrapper[];
const char kClassPath_org_chromium_components_messages_MessageWrapper[] =
    "org/chromium/components/messages/MessageWrapper";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_messages_MessageWrapper_clazz(nullptr);
#ifndef org_chromium_components_messages_MessageWrapper_clazz_defined
#define org_chromium_components_messages_MessageWrapper_clazz_defined
inline jclass org_chromium_components_messages_MessageWrapper_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_messages_MessageWrapper,
      &g_org_chromium_components_messages_MessageWrapper_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace messages {

JNI_GENERATOR_EXPORT void Java_J_N_MVTCdx_00024k(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeMessageWrapper) {
  MessageWrapper* native = reinterpret_cast<MessageWrapper*>(nativeMessageWrapper);
  CHECK_NATIVE_PTR(env, jcaller, native, "HandleActionClick");
  return native->HandleActionClick(env);
}

JNI_GENERATOR_EXPORT void Java_J_N_MoS27uC7(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeMessageWrapper) {
  MessageWrapper* native = reinterpret_cast<MessageWrapper*>(nativeMessageWrapper);
  CHECK_NATIVE_PTR(env, jcaller, native, "HandleSecondaryActionClick");
  return native->HandleSecondaryActionClick(env);
}

JNI_GENERATOR_EXPORT void Java_J_N_MSwKRLAp(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeMessageWrapper,
    jint itemId) {
  MessageWrapper* native = reinterpret_cast<MessageWrapper*>(nativeMessageWrapper);
  CHECK_NATIVE_PTR(env, jcaller, native, "HandleSecondaryMenuItemSelected");
  return native->HandleSecondaryMenuItemSelected(env, itemId);
}

JNI_GENERATOR_EXPORT void Java_J_N_M6PkOWjr(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeMessageWrapper,
    jint dismissReason) {
  MessageWrapper* native = reinterpret_cast<MessageWrapper*>(nativeMessageWrapper);
  CHECK_NATIVE_PTR(env, jcaller, native, "HandleDismissCallback");
  return native->HandleDismissCallback(env, dismissReason);
}


static std::atomic<jmethodID> g_org_chromium_components_messages_MessageWrapper_create(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_MessageWrapper_create(JNIEnv* env, jlong
    nativeMessageWrapper,
    JniIntWrapper messageIdentifier) {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_messages_MessageWrapper_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "create",
          "(JI)Lorg/chromium/components/messages/MessageWrapper;",
          &g_org_chromium_components_messages_MessageWrapper_create);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, nativeMessageWrapper, as_jint(messageIdentifier));
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID> g_org_chromium_components_messages_MessageWrapper_getTitle(nullptr);
static base::android::ScopedJavaLocalRef<jstring> Java_MessageWrapper_getTitle(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_messages_MessageWrapper_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getTitle",
          "()Ljava/lang/String;",
          &g_org_chromium_components_messages_MessageWrapper_getTitle);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID> g_org_chromium_components_messages_MessageWrapper_setTitle(nullptr);
static void Java_MessageWrapper_setTitle(JNIEnv* env, const base::android::JavaRef<jobject>& obj,
    const base::android::JavaRef<jstring>& title) {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_messages_MessageWrapper_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setTitle",
          "(Ljava/lang/String;)V",
          &g_org_chromium_components_messages_MessageWrapper_setTitle);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, title.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_messages_MessageWrapper_getDescription(nullptr);
static base::android::ScopedJavaLocalRef<jstring> Java_MessageWrapper_getDescription(JNIEnv* env,
    const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_messages_MessageWrapper_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getDescription",
          "()Ljava/lang/String;",
          &g_org_chromium_components_messages_MessageWrapper_getDescription);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_messages_MessageWrapper_setDescription(nullptr);
static void Java_MessageWrapper_setDescription(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj, const base::android::JavaRef<jobject>& description) {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_messages_MessageWrapper_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setDescription",
          "(Ljava/lang/CharSequence;)V",
          &g_org_chromium_components_messages_MessageWrapper_setDescription);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, description.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_messages_MessageWrapper_getDescriptionMaxLines(nullptr);
static jint Java_MessageWrapper_getDescriptionMaxLines(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_messages_MessageWrapper_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getDescriptionMaxLines",
          "()I",
          &g_org_chromium_components_messages_MessageWrapper_getDescriptionMaxLines);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_messages_MessageWrapper_setDescriptionMaxLines(nullptr);
static void Java_MessageWrapper_setDescriptionMaxLines(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper maxLines) {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_messages_MessageWrapper_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setDescriptionMaxLines",
          "(I)V",
          &g_org_chromium_components_messages_MessageWrapper_setDescriptionMaxLines);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(maxLines));
}

static std::atomic<jmethodID>
    g_org_chromium_components_messages_MessageWrapper_getPrimaryButtonText(nullptr);
static base::android::ScopedJavaLocalRef<jstring> Java_MessageWrapper_getPrimaryButtonText(JNIEnv*
    env, const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_messages_MessageWrapper_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getPrimaryButtonText",
          "()Ljava/lang/String;",
          &g_org_chromium_components_messages_MessageWrapper_getPrimaryButtonText);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_messages_MessageWrapper_setPrimaryButtonText(nullptr);
static void Java_MessageWrapper_setPrimaryButtonText(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& primaryButtonText)
    {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_messages_MessageWrapper_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setPrimaryButtonText",
          "(Ljava/lang/String;)V",
          &g_org_chromium_components_messages_MessageWrapper_setPrimaryButtonText);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, primaryButtonText.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_messages_MessageWrapper_getSecondaryButtonMenuText(nullptr);
static base::android::ScopedJavaLocalRef<jstring>
    Java_MessageWrapper_getSecondaryButtonMenuText(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_messages_MessageWrapper_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getSecondaryButtonMenuText",
          "()Ljava/lang/String;",
          &g_org_chromium_components_messages_MessageWrapper_getSecondaryButtonMenuText);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_messages_MessageWrapper_setSecondaryButtonMenuText(nullptr);
static void Java_MessageWrapper_setSecondaryButtonMenuText(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>&
    secondaryButtonMenuText) {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_messages_MessageWrapper_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setSecondaryButtonMenuText",
          "(Ljava/lang/String;)V",
          &g_org_chromium_components_messages_MessageWrapper_setSecondaryButtonMenuText);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, secondaryButtonMenuText.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_messages_MessageWrapper_initializeSecondaryMenu(nullptr);
static void Java_MessageWrapper_initializeSecondaryMenu(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>& windowAndroid,
    JniIntWrapper maxSize) {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_messages_MessageWrapper_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "initializeSecondaryMenu",
          "(Lorg/chromium/ui/base/WindowAndroid;I)V",
          &g_org_chromium_components_messages_MessageWrapper_initializeSecondaryMenu);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, windowAndroid.obj(), as_jint(maxSize));
}

static std::atomic<jmethodID>
    g_org_chromium_components_messages_MessageWrapper_addSecondaryMenuItem(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_MessageWrapper_addSecondaryMenuItem(JNIEnv*
    env, const base::android::JavaRef<jobject>& obj, JniIntWrapper itemId,
    JniIntWrapper resourceId,
    const base::android::JavaRef<jstring>& itemText) {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_messages_MessageWrapper_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "addSecondaryMenuItem",
          "(IILjava/lang/String;)Lorg/chromium/ui/modelutil/PropertyModel;",
          &g_org_chromium_components_messages_MessageWrapper_addSecondaryMenuItem);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id, as_jint(itemId), as_jint(resourceId), itemText.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_messages_MessageWrapper_clearSecondaryMenuItems(nullptr);
static void Java_MessageWrapper_clearSecondaryMenuItems(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_messages_MessageWrapper_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "clearSecondaryMenuItems",
          "()V",
          &g_org_chromium_components_messages_MessageWrapper_clearSecondaryMenuItems);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_messages_MessageWrapper_addSecondaryMenuItemDivider(nullptr);
static void Java_MessageWrapper_addSecondaryMenuItemDivider(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_messages_MessageWrapper_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "addSecondaryMenuItemDivider",
          "()V",
          &g_org_chromium_components_messages_MessageWrapper_addSecondaryMenuItemDivider);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_messages_MessageWrapper_getIconResourceId(nullptr);
static jint Java_MessageWrapper_getIconResourceId(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_messages_MessageWrapper_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getIconResourceId",
          "()I",
          &g_org_chromium_components_messages_MessageWrapper_getIconResourceId);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_messages_MessageWrapper_setIconResourceId(nullptr);
static void Java_MessageWrapper_setIconResourceId(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper resourceId) {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_messages_MessageWrapper_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setIconResourceId",
          "(I)V",
          &g_org_chromium_components_messages_MessageWrapper_setIconResourceId);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(resourceId));
}

static std::atomic<jmethodID>
    g_org_chromium_components_messages_MessageWrapper_isValidIcon(nullptr);
static jboolean Java_MessageWrapper_isValidIcon(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_messages_MessageWrapper_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "isValidIcon",
          "()Z",
          &g_org_chromium_components_messages_MessageWrapper_isValidIcon);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID> g_org_chromium_components_messages_MessageWrapper_setIcon(nullptr);
static void Java_MessageWrapper_setIcon(JNIEnv* env, const base::android::JavaRef<jobject>& obj,
    const base::android::JavaRef<jobject>& iconBitmap) {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_messages_MessageWrapper_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setIcon",
          "(Landroid/graphics/Bitmap;)V",
          &g_org_chromium_components_messages_MessageWrapper_setIcon);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, iconBitmap.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_messages_MessageWrapper_setLargeIcon(nullptr);
static void Java_MessageWrapper_setLargeIcon(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj, jboolean enabled) {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_messages_MessageWrapper_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setLargeIcon",
          "(Z)V",
          &g_org_chromium_components_messages_MessageWrapper_setLargeIcon);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, enabled);
}

static std::atomic<jmethodID>
    g_org_chromium_components_messages_MessageWrapper_setIconRoundedCornerRadius(nullptr);
static void Java_MessageWrapper_setIconRoundedCornerRadius(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper radius) {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_messages_MessageWrapper_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setIconRoundedCornerRadius",
          "(I)V",
          &g_org_chromium_components_messages_MessageWrapper_setIconRoundedCornerRadius);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(radius));
}

static std::atomic<jmethodID>
    g_org_chromium_components_messages_MessageWrapper_disableIconTint(nullptr);
static void Java_MessageWrapper_disableIconTint(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_messages_MessageWrapper_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "disableIconTint",
          "()V",
          &g_org_chromium_components_messages_MessageWrapper_disableIconTint);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_messages_MessageWrapper_getSecondaryIconResourceId(nullptr);
static jint Java_MessageWrapper_getSecondaryIconResourceId(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_messages_MessageWrapper_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getSecondaryIconResourceId",
          "()I",
          &g_org_chromium_components_messages_MessageWrapper_getSecondaryIconResourceId);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_messages_MessageWrapper_setSecondaryIconResourceId(nullptr);
static void Java_MessageWrapper_setSecondaryIconResourceId(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper resourceId) {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_messages_MessageWrapper_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setSecondaryIconResourceId",
          "(I)V",
          &g_org_chromium_components_messages_MessageWrapper_setSecondaryIconResourceId);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(resourceId));
}

static std::atomic<jmethodID>
    g_org_chromium_components_messages_MessageWrapper_setDuration(nullptr);
static void Java_MessageWrapper_setDuration(JNIEnv* env, const base::android::JavaRef<jobject>& obj,
    jlong customDuration) {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_messages_MessageWrapper_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setDuration",
          "(J)V",
          &g_org_chromium_components_messages_MessageWrapper_setDuration);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, customDuration);
}

static std::atomic<jmethodID>
    g_org_chromium_components_messages_MessageWrapper_clearNativePtr(nullptr);
static void Java_MessageWrapper_clearNativePtr(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_messages_MessageWrapper_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "clearNativePtr",
          "()V",
          &g_org_chromium_components_messages_MessageWrapper_clearNativePtr);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_messages_MessageWrapper_getIconBitmap(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_MessageWrapper_getIconBitmap(JNIEnv* env,
    const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_messages_MessageWrapper_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_messages_MessageWrapper_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getIconBitmap",
          "()Landroid/graphics/Bitmap;",
          &g_org_chromium_components_messages_MessageWrapper_getIconBitmap);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

}  // namespace messages

#endif  // org_chromium_components_messages_MessageWrapper_JNI
