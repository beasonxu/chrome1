// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/segmentation_platform/internal/proto/model_prediction.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_components_2fsegmentation_5fplatform_2finternal_2fproto_2fmodel_5fprediction_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_components_2fsegmentation_5fplatform_2finternal_2fproto_2fmodel_5fprediction_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "components/segmentation_platform/public/proto/model_metadata.pb.h"
#include "components/segmentation_platform/public/proto/segmentation_platform.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_components_2fsegmentation_5fplatform_2finternal_2fproto_2fmodel_5fprediction_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_components_2fsegmentation_5fplatform_2finternal_2fproto_2fmodel_5fprediction_2eproto {
  static const uint32_t offsets[];
};
namespace segmentation_platform {
namespace proto {
class PredictionResult;
struct PredictionResultDefaultTypeInternal;
extern PredictionResultDefaultTypeInternal _PredictionResult_default_instance_;
class SegmentInfo;
struct SegmentInfoDefaultTypeInternal;
extern SegmentInfoDefaultTypeInternal _SegmentInfo_default_instance_;
}  // namespace proto
}  // namespace segmentation_platform
PROTOBUF_NAMESPACE_OPEN
template<> ::segmentation_platform::proto::PredictionResult* Arena::CreateMaybeMessage<::segmentation_platform::proto::PredictionResult>(Arena*);
template<> ::segmentation_platform::proto::SegmentInfo* Arena::CreateMaybeMessage<::segmentation_platform::proto::SegmentInfo>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace segmentation_platform {
namespace proto {

// ===================================================================

class PredictionResult final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:segmentation_platform.proto.PredictionResult) */ {
 public:
  inline PredictionResult() : PredictionResult(nullptr) {}
  ~PredictionResult() override;
  explicit PROTOBUF_CONSTEXPR PredictionResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PredictionResult(const PredictionResult& from);
  PredictionResult(PredictionResult&& from) noexcept
    : PredictionResult() {
    *this = ::std::move(from);
  }

  inline PredictionResult& operator=(const PredictionResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline PredictionResult& operator=(PredictionResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const PredictionResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const PredictionResult* internal_default_instance() {
    return reinterpret_cast<const PredictionResult*>(
               &_PredictionResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PredictionResult& a, PredictionResult& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(PredictionResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PredictionResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PredictionResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PredictionResult>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const PredictionResult& from);
  void MergeFrom(const PredictionResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PredictionResult* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "segmentation_platform.proto.PredictionResult";
  }
  protected:
  explicit PredictionResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimestampUsFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // optional int64 timestamp_us = 2;
  bool has_timestamp_us() const;
  private:
  bool _internal_has_timestamp_us() const;
  public:
  void clear_timestamp_us();
  int64_t timestamp_us() const;
  void set_timestamp_us(int64_t value);
  private:
  int64_t _internal_timestamp_us() const;
  void _internal_set_timestamp_us(int64_t value);
  public:

  // optional float result = 1;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  float result() const;
  void set_result(float value);
  private:
  float _internal_result() const;
  void _internal_set_result(float value);
  public:

  // @@protoc_insertion_point(class_scope:segmentation_platform.proto.PredictionResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int64_t timestamp_us_;
  float result_;
  friend struct ::TableStruct_components_2fsegmentation_5fplatform_2finternal_2fproto_2fmodel_5fprediction_2eproto;
};
// -------------------------------------------------------------------

class SegmentInfo final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:segmentation_platform.proto.SegmentInfo) */ {
 public:
  inline SegmentInfo() : SegmentInfo(nullptr) {}
  ~SegmentInfo() override;
  explicit PROTOBUF_CONSTEXPR SegmentInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SegmentInfo(const SegmentInfo& from);
  SegmentInfo(SegmentInfo&& from) noexcept
    : SegmentInfo() {
    *this = ::std::move(from);
  }

  inline SegmentInfo& operator=(const SegmentInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline SegmentInfo& operator=(SegmentInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const SegmentInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const SegmentInfo* internal_default_instance() {
    return reinterpret_cast<const SegmentInfo*>(
               &_SegmentInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SegmentInfo& a, SegmentInfo& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(SegmentInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SegmentInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SegmentInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SegmentInfo>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const SegmentInfo& from);
  void MergeFrom(const SegmentInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SegmentInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "segmentation_platform.proto.SegmentInfo";
  }
  protected:
  explicit SegmentInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModelMetadataFieldNumber = 2,
    kPredictionResultFieldNumber = 3,
    kModelVersionFieldNumber = 4,
    kModelUpdateTimeSFieldNumber = 5,
    kSegmentIdFieldNumber = 1,
  };
  // optional .segmentation_platform.proto.SegmentationModelMetadata model_metadata = 2;
  bool has_model_metadata() const;
  private:
  bool _internal_has_model_metadata() const;
  public:
  void clear_model_metadata();
  const ::segmentation_platform::proto::SegmentationModelMetadata& model_metadata() const;
  PROTOBUF_NODISCARD ::segmentation_platform::proto::SegmentationModelMetadata* release_model_metadata();
  ::segmentation_platform::proto::SegmentationModelMetadata* mutable_model_metadata();
  void set_allocated_model_metadata(::segmentation_platform::proto::SegmentationModelMetadata* model_metadata);
  private:
  const ::segmentation_platform::proto::SegmentationModelMetadata& _internal_model_metadata() const;
  ::segmentation_platform::proto::SegmentationModelMetadata* _internal_mutable_model_metadata();
  public:
  void unsafe_arena_set_allocated_model_metadata(
      ::segmentation_platform::proto::SegmentationModelMetadata* model_metadata);
  ::segmentation_platform::proto::SegmentationModelMetadata* unsafe_arena_release_model_metadata();

  // optional .segmentation_platform.proto.PredictionResult prediction_result = 3;
  bool has_prediction_result() const;
  private:
  bool _internal_has_prediction_result() const;
  public:
  void clear_prediction_result();
  const ::segmentation_platform::proto::PredictionResult& prediction_result() const;
  PROTOBUF_NODISCARD ::segmentation_platform::proto::PredictionResult* release_prediction_result();
  ::segmentation_platform::proto::PredictionResult* mutable_prediction_result();
  void set_allocated_prediction_result(::segmentation_platform::proto::PredictionResult* prediction_result);
  private:
  const ::segmentation_platform::proto::PredictionResult& _internal_prediction_result() const;
  ::segmentation_platform::proto::PredictionResult* _internal_mutable_prediction_result();
  public:
  void unsafe_arena_set_allocated_prediction_result(
      ::segmentation_platform::proto::PredictionResult* prediction_result);
  ::segmentation_platform::proto::PredictionResult* unsafe_arena_release_prediction_result();

  // optional int64 model_version = 4;
  bool has_model_version() const;
  private:
  bool _internal_has_model_version() const;
  public:
  void clear_model_version();
  int64_t model_version() const;
  void set_model_version(int64_t value);
  private:
  int64_t _internal_model_version() const;
  void _internal_set_model_version(int64_t value);
  public:

  // optional int64 model_update_time_s = 5;
  bool has_model_update_time_s() const;
  private:
  bool _internal_has_model_update_time_s() const;
  public:
  void clear_model_update_time_s();
  int64_t model_update_time_s() const;
  void set_model_update_time_s(int64_t value);
  private:
  int64_t _internal_model_update_time_s() const;
  void _internal_set_model_update_time_s(int64_t value);
  public:

  // optional .segmentation_platform.proto.SegmentId segment_id = 1;
  bool has_segment_id() const;
  private:
  bool _internal_has_segment_id() const;
  public:
  void clear_segment_id();
  ::segmentation_platform::proto::SegmentId segment_id() const;
  void set_segment_id(::segmentation_platform::proto::SegmentId value);
  private:
  ::segmentation_platform::proto::SegmentId _internal_segment_id() const;
  void _internal_set_segment_id(::segmentation_platform::proto::SegmentId value);
  public:

  // @@protoc_insertion_point(class_scope:segmentation_platform.proto.SegmentInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::segmentation_platform::proto::SegmentationModelMetadata* model_metadata_;
  ::segmentation_platform::proto::PredictionResult* prediction_result_;
  int64_t model_version_;
  int64_t model_update_time_s_;
  int segment_id_;
  friend struct ::TableStruct_components_2fsegmentation_5fplatform_2finternal_2fproto_2fmodel_5fprediction_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PredictionResult

// optional float result = 1;
inline bool PredictionResult::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PredictionResult::has_result() const {
  return _internal_has_result();
}
inline void PredictionResult::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float PredictionResult::_internal_result() const {
  return result_;
}
inline float PredictionResult::result() const {
  // @@protoc_insertion_point(field_get:segmentation_platform.proto.PredictionResult.result)
  return _internal_result();
}
inline void PredictionResult::_internal_set_result(float value) {
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
}
inline void PredictionResult::set_result(float value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:segmentation_platform.proto.PredictionResult.result)
}

// optional int64 timestamp_us = 2;
inline bool PredictionResult::_internal_has_timestamp_us() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PredictionResult::has_timestamp_us() const {
  return _internal_has_timestamp_us();
}
inline void PredictionResult::clear_timestamp_us() {
  timestamp_us_ = int64_t{0};
  _has_bits_[0] &= ~0x00000001u;
}
inline int64_t PredictionResult::_internal_timestamp_us() const {
  return timestamp_us_;
}
inline int64_t PredictionResult::timestamp_us() const {
  // @@protoc_insertion_point(field_get:segmentation_platform.proto.PredictionResult.timestamp_us)
  return _internal_timestamp_us();
}
inline void PredictionResult::_internal_set_timestamp_us(int64_t value) {
  _has_bits_[0] |= 0x00000001u;
  timestamp_us_ = value;
}
inline void PredictionResult::set_timestamp_us(int64_t value) {
  _internal_set_timestamp_us(value);
  // @@protoc_insertion_point(field_set:segmentation_platform.proto.PredictionResult.timestamp_us)
}

// -------------------------------------------------------------------

// SegmentInfo

// optional .segmentation_platform.proto.SegmentId segment_id = 1;
inline bool SegmentInfo::_internal_has_segment_id() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool SegmentInfo::has_segment_id() const {
  return _internal_has_segment_id();
}
inline void SegmentInfo::clear_segment_id() {
  segment_id_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::segmentation_platform::proto::SegmentId SegmentInfo::_internal_segment_id() const {
  return static_cast< ::segmentation_platform::proto::SegmentId >(segment_id_);
}
inline ::segmentation_platform::proto::SegmentId SegmentInfo::segment_id() const {
  // @@protoc_insertion_point(field_get:segmentation_platform.proto.SegmentInfo.segment_id)
  return _internal_segment_id();
}
inline void SegmentInfo::_internal_set_segment_id(::segmentation_platform::proto::SegmentId value) {
  assert(::segmentation_platform::proto::SegmentId_IsValid(value));
  _has_bits_[0] |= 0x00000010u;
  segment_id_ = value;
}
inline void SegmentInfo::set_segment_id(::segmentation_platform::proto::SegmentId value) {
  _internal_set_segment_id(value);
  // @@protoc_insertion_point(field_set:segmentation_platform.proto.SegmentInfo.segment_id)
}

// optional .segmentation_platform.proto.SegmentationModelMetadata model_metadata = 2;
inline bool SegmentInfo::_internal_has_model_metadata() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || model_metadata_ != nullptr);
  return value;
}
inline bool SegmentInfo::has_model_metadata() const {
  return _internal_has_model_metadata();
}
inline const ::segmentation_platform::proto::SegmentationModelMetadata& SegmentInfo::_internal_model_metadata() const {
  const ::segmentation_platform::proto::SegmentationModelMetadata* p = model_metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::segmentation_platform::proto::SegmentationModelMetadata&>(
      ::segmentation_platform::proto::_SegmentationModelMetadata_default_instance_);
}
inline const ::segmentation_platform::proto::SegmentationModelMetadata& SegmentInfo::model_metadata() const {
  // @@protoc_insertion_point(field_get:segmentation_platform.proto.SegmentInfo.model_metadata)
  return _internal_model_metadata();
}
inline void SegmentInfo::unsafe_arena_set_allocated_model_metadata(
    ::segmentation_platform::proto::SegmentationModelMetadata* model_metadata) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(model_metadata_);
  }
  model_metadata_ = model_metadata;
  if (model_metadata) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:segmentation_platform.proto.SegmentInfo.model_metadata)
}
inline ::segmentation_platform::proto::SegmentationModelMetadata* SegmentInfo::release_model_metadata() {
  _has_bits_[0] &= ~0x00000001u;
  ::segmentation_platform::proto::SegmentationModelMetadata* temp = model_metadata_;
  model_metadata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::segmentation_platform::proto::SegmentationModelMetadata* SegmentInfo::unsafe_arena_release_model_metadata() {
  // @@protoc_insertion_point(field_release:segmentation_platform.proto.SegmentInfo.model_metadata)
  _has_bits_[0] &= ~0x00000001u;
  ::segmentation_platform::proto::SegmentationModelMetadata* temp = model_metadata_;
  model_metadata_ = nullptr;
  return temp;
}
inline ::segmentation_platform::proto::SegmentationModelMetadata* SegmentInfo::_internal_mutable_model_metadata() {
  _has_bits_[0] |= 0x00000001u;
  if (model_metadata_ == nullptr) {
    auto* p = CreateMaybeMessage<::segmentation_platform::proto::SegmentationModelMetadata>(GetArenaForAllocation());
    model_metadata_ = p;
  }
  return model_metadata_;
}
inline ::segmentation_platform::proto::SegmentationModelMetadata* SegmentInfo::mutable_model_metadata() {
  ::segmentation_platform::proto::SegmentationModelMetadata* _msg = _internal_mutable_model_metadata();
  // @@protoc_insertion_point(field_mutable:segmentation_platform.proto.SegmentInfo.model_metadata)
  return _msg;
}
inline void SegmentInfo::set_allocated_model_metadata(::segmentation_platform::proto::SegmentationModelMetadata* model_metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(model_metadata_);
  }
  if (model_metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(model_metadata));
    if (message_arena != submessage_arena) {
      model_metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, model_metadata, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  model_metadata_ = model_metadata;
  // @@protoc_insertion_point(field_set_allocated:segmentation_platform.proto.SegmentInfo.model_metadata)
}

// optional .segmentation_platform.proto.PredictionResult prediction_result = 3;
inline bool SegmentInfo::_internal_has_prediction_result() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || prediction_result_ != nullptr);
  return value;
}
inline bool SegmentInfo::has_prediction_result() const {
  return _internal_has_prediction_result();
}
inline void SegmentInfo::clear_prediction_result() {
  if (prediction_result_ != nullptr) prediction_result_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::segmentation_platform::proto::PredictionResult& SegmentInfo::_internal_prediction_result() const {
  const ::segmentation_platform::proto::PredictionResult* p = prediction_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::segmentation_platform::proto::PredictionResult&>(
      ::segmentation_platform::proto::_PredictionResult_default_instance_);
}
inline const ::segmentation_platform::proto::PredictionResult& SegmentInfo::prediction_result() const {
  // @@protoc_insertion_point(field_get:segmentation_platform.proto.SegmentInfo.prediction_result)
  return _internal_prediction_result();
}
inline void SegmentInfo::unsafe_arena_set_allocated_prediction_result(
    ::segmentation_platform::proto::PredictionResult* prediction_result) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(prediction_result_);
  }
  prediction_result_ = prediction_result;
  if (prediction_result) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:segmentation_platform.proto.SegmentInfo.prediction_result)
}
inline ::segmentation_platform::proto::PredictionResult* SegmentInfo::release_prediction_result() {
  _has_bits_[0] &= ~0x00000002u;
  ::segmentation_platform::proto::PredictionResult* temp = prediction_result_;
  prediction_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::segmentation_platform::proto::PredictionResult* SegmentInfo::unsafe_arena_release_prediction_result() {
  // @@protoc_insertion_point(field_release:segmentation_platform.proto.SegmentInfo.prediction_result)
  _has_bits_[0] &= ~0x00000002u;
  ::segmentation_platform::proto::PredictionResult* temp = prediction_result_;
  prediction_result_ = nullptr;
  return temp;
}
inline ::segmentation_platform::proto::PredictionResult* SegmentInfo::_internal_mutable_prediction_result() {
  _has_bits_[0] |= 0x00000002u;
  if (prediction_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::segmentation_platform::proto::PredictionResult>(GetArenaForAllocation());
    prediction_result_ = p;
  }
  return prediction_result_;
}
inline ::segmentation_platform::proto::PredictionResult* SegmentInfo::mutable_prediction_result() {
  ::segmentation_platform::proto::PredictionResult* _msg = _internal_mutable_prediction_result();
  // @@protoc_insertion_point(field_mutable:segmentation_platform.proto.SegmentInfo.prediction_result)
  return _msg;
}
inline void SegmentInfo::set_allocated_prediction_result(::segmentation_platform::proto::PredictionResult* prediction_result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete prediction_result_;
  }
  if (prediction_result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(prediction_result);
    if (message_arena != submessage_arena) {
      prediction_result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, prediction_result, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  prediction_result_ = prediction_result;
  // @@protoc_insertion_point(field_set_allocated:segmentation_platform.proto.SegmentInfo.prediction_result)
}

// optional int64 model_version = 4;
inline bool SegmentInfo::_internal_has_model_version() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool SegmentInfo::has_model_version() const {
  return _internal_has_model_version();
}
inline void SegmentInfo::clear_model_version() {
  model_version_ = int64_t{0};
  _has_bits_[0] &= ~0x00000004u;
}
inline int64_t SegmentInfo::_internal_model_version() const {
  return model_version_;
}
inline int64_t SegmentInfo::model_version() const {
  // @@protoc_insertion_point(field_get:segmentation_platform.proto.SegmentInfo.model_version)
  return _internal_model_version();
}
inline void SegmentInfo::_internal_set_model_version(int64_t value) {
  _has_bits_[0] |= 0x00000004u;
  model_version_ = value;
}
inline void SegmentInfo::set_model_version(int64_t value) {
  _internal_set_model_version(value);
  // @@protoc_insertion_point(field_set:segmentation_platform.proto.SegmentInfo.model_version)
}

// optional int64 model_update_time_s = 5;
inline bool SegmentInfo::_internal_has_model_update_time_s() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool SegmentInfo::has_model_update_time_s() const {
  return _internal_has_model_update_time_s();
}
inline void SegmentInfo::clear_model_update_time_s() {
  model_update_time_s_ = int64_t{0};
  _has_bits_[0] &= ~0x00000008u;
}
inline int64_t SegmentInfo::_internal_model_update_time_s() const {
  return model_update_time_s_;
}
inline int64_t SegmentInfo::model_update_time_s() const {
  // @@protoc_insertion_point(field_get:segmentation_platform.proto.SegmentInfo.model_update_time_s)
  return _internal_model_update_time_s();
}
inline void SegmentInfo::_internal_set_model_update_time_s(int64_t value) {
  _has_bits_[0] |= 0x00000008u;
  model_update_time_s_ = value;
}
inline void SegmentInfo::set_model_update_time_s(int64_t value) {
  _internal_set_model_update_time_s(value);
  // @@protoc_insertion_point(field_set:segmentation_platform.proto.SegmentInfo.model_update_time_s)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace segmentation_platform

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_components_2fsegmentation_5fplatform_2finternal_2fproto_2fmodel_5fprediction_2eproto
