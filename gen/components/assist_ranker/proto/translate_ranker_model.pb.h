// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: translate_ranker_model.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_translate_5franker_5fmodel_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_translate_5franker_5fmodel_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry_lite.h>
#include <google/protobuf/map_field_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_translate_5franker_5fmodel_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_translate_5franker_5fmodel_2eproto {
  static const uint32_t offsets[];
};
namespace assist_ranker {
class TranslateRankerModel;
struct TranslateRankerModelDefaultTypeInternal;
extern TranslateRankerModelDefaultTypeInternal _TranslateRankerModel_default_instance_;
class TranslateRankerModel_TranslateLogisticRegressionModel;
struct TranslateRankerModel_TranslateLogisticRegressionModelDefaultTypeInternal;
extern TranslateRankerModel_TranslateLogisticRegressionModelDefaultTypeInternal _TranslateRankerModel_TranslateLogisticRegressionModel_default_instance_;
class TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry_DoNotUse;
struct TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry_DoNotUseDefaultTypeInternal;
extern TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry_DoNotUseDefaultTypeInternal _TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry_DoNotUse_default_instance_;
class TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry_DoNotUse;
struct TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry_DoNotUseDefaultTypeInternal;
extern TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry_DoNotUseDefaultTypeInternal _TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry_DoNotUse_default_instance_;
class TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry_DoNotUse;
struct TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry_DoNotUseDefaultTypeInternal;
extern TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry_DoNotUseDefaultTypeInternal _TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry_DoNotUse_default_instance_;
class TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry_DoNotUse;
struct TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry_DoNotUseDefaultTypeInternal;
extern TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry_DoNotUseDefaultTypeInternal _TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry_DoNotUse_default_instance_;
}  // namespace assist_ranker
PROTOBUF_NAMESPACE_OPEN
template<> ::assist_ranker::TranslateRankerModel* Arena::CreateMaybeMessage<::assist_ranker::TranslateRankerModel>(Arena*);
template<> ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel* Arena::CreateMaybeMessage<::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel>(Arena*);
template<> ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry_DoNotUse* Arena::CreateMaybeMessage<::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry_DoNotUse>(Arena*);
template<> ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry_DoNotUse* Arena::CreateMaybeMessage<::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry_DoNotUse>(Arena*);
template<> ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry_DoNotUse* Arena::CreateMaybeMessage<::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry_DoNotUse>(Arena*);
template<> ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry_DoNotUse* Arena::CreateMaybeMessage<::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace assist_ranker {

// ===================================================================

class TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry_DoNotUse, 
    std::string, float,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry_DoNotUse, 
    std::string, float,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT> SuperType;
  TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry_DoNotUse& other);
  static const TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry_DoNotUse*>(&_TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  friend struct ::TableStruct_translate_5franker_5fmodel_2eproto;
};

// -------------------------------------------------------------------

class TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry_DoNotUse, 
    std::string, float,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry_DoNotUse, 
    std::string, float,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT> SuperType;
  TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry_DoNotUse& other);
  static const TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry_DoNotUse*>(&_TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  friend struct ::TableStruct_translate_5franker_5fmodel_2eproto;
};

// -------------------------------------------------------------------

class TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry_DoNotUse, 
    std::string, float,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry_DoNotUse, 
    std::string, float,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT> SuperType;
  TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry_DoNotUse& other);
  static const TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry_DoNotUse*>(&_TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  friend struct ::TableStruct_translate_5franker_5fmodel_2eproto;
};

// -------------------------------------------------------------------

class TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry_DoNotUse, 
    std::string, float,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry_DoNotUse, 
    std::string, float,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT> SuperType;
  TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry_DoNotUse& other);
  static const TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry_DoNotUse*>(&_TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  friend struct ::TableStruct_translate_5franker_5fmodel_2eproto;
};

// -------------------------------------------------------------------

class TranslateRankerModel_TranslateLogisticRegressionModel final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel) */ {
 public:
  inline TranslateRankerModel_TranslateLogisticRegressionModel() : TranslateRankerModel_TranslateLogisticRegressionModel(nullptr) {}
  ~TranslateRankerModel_TranslateLogisticRegressionModel() override;
  explicit PROTOBUF_CONSTEXPR TranslateRankerModel_TranslateLogisticRegressionModel(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TranslateRankerModel_TranslateLogisticRegressionModel(const TranslateRankerModel_TranslateLogisticRegressionModel& from);
  TranslateRankerModel_TranslateLogisticRegressionModel(TranslateRankerModel_TranslateLogisticRegressionModel&& from) noexcept
    : TranslateRankerModel_TranslateLogisticRegressionModel() {
    *this = ::std::move(from);
  }

  inline TranslateRankerModel_TranslateLogisticRegressionModel& operator=(const TranslateRankerModel_TranslateLogisticRegressionModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline TranslateRankerModel_TranslateLogisticRegressionModel& operator=(TranslateRankerModel_TranslateLogisticRegressionModel&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const TranslateRankerModel_TranslateLogisticRegressionModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const TranslateRankerModel_TranslateLogisticRegressionModel* internal_default_instance() {
    return reinterpret_cast<const TranslateRankerModel_TranslateLogisticRegressionModel*>(
               &_TranslateRankerModel_TranslateLogisticRegressionModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(TranslateRankerModel_TranslateLogisticRegressionModel& a, TranslateRankerModel_TranslateLogisticRegressionModel& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(TranslateRankerModel_TranslateLogisticRegressionModel* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TranslateRankerModel_TranslateLogisticRegressionModel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TranslateRankerModel_TranslateLogisticRegressionModel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TranslateRankerModel_TranslateLogisticRegressionModel>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const TranslateRankerModel_TranslateLogisticRegressionModel& from);
  void MergeFrom(const TranslateRankerModel_TranslateLogisticRegressionModel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TranslateRankerModel_TranslateLogisticRegressionModel* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel";
  }
  protected:
  explicit TranslateRankerModel_TranslateLogisticRegressionModel(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kSourceLanguageWeightFieldNumber = 5,
    kTargetLanguageWeightFieldNumber = 6,
    kCountryWeightFieldNumber = 7,
    kLocaleWeightFieldNumber = 8,
    kBiasFieldNumber = 1,
    kAcceptRatioWeightFieldNumber = 2,
    kDeclineRatioWeightFieldNumber = 3,
    kIgnoreRatioWeightFieldNumber = 4,
    kAcceptCountWeightFieldNumber = 9,
    kDeclineCountWeightFieldNumber = 10,
    kIgnoreCountWeightFieldNumber = 11,
    kThresholdFieldNumber = 12,
  };
  // map<string, float> source_language_weight = 5;
  int source_language_weight_size() const;
  private:
  int _internal_source_language_weight_size() const;
  public:
  void clear_source_language_weight();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >&
      _internal_source_language_weight() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >*
      _internal_mutable_source_language_weight();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >&
      source_language_weight() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >*
      mutable_source_language_weight();

  // map<string, float> target_language_weight = 6;
  int target_language_weight_size() const;
  private:
  int _internal_target_language_weight_size() const;
  public:
  void clear_target_language_weight();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >&
      _internal_target_language_weight() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >*
      _internal_mutable_target_language_weight();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >&
      target_language_weight() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >*
      mutable_target_language_weight();

  // map<string, float> country_weight = 7;
  int country_weight_size() const;
  private:
  int _internal_country_weight_size() const;
  public:
  void clear_country_weight();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >&
      _internal_country_weight() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >*
      _internal_mutable_country_weight();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >&
      country_weight() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >*
      mutable_country_weight();

  // map<string, float> locale_weight = 8;
  int locale_weight_size() const;
  private:
  int _internal_locale_weight_size() const;
  public:
  void clear_locale_weight();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >&
      _internal_locale_weight() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >*
      _internal_mutable_locale_weight();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >&
      locale_weight() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >*
      mutable_locale_weight();

  // optional float bias = 1;
  bool has_bias() const;
  private:
  bool _internal_has_bias() const;
  public:
  void clear_bias();
  float bias() const;
  void set_bias(float value);
  private:
  float _internal_bias() const;
  void _internal_set_bias(float value);
  public:

  // optional float accept_ratio_weight = 2;
  bool has_accept_ratio_weight() const;
  private:
  bool _internal_has_accept_ratio_weight() const;
  public:
  void clear_accept_ratio_weight();
  float accept_ratio_weight() const;
  void set_accept_ratio_weight(float value);
  private:
  float _internal_accept_ratio_weight() const;
  void _internal_set_accept_ratio_weight(float value);
  public:

  // optional float decline_ratio_weight = 3;
  bool has_decline_ratio_weight() const;
  private:
  bool _internal_has_decline_ratio_weight() const;
  public:
  void clear_decline_ratio_weight();
  float decline_ratio_weight() const;
  void set_decline_ratio_weight(float value);
  private:
  float _internal_decline_ratio_weight() const;
  void _internal_set_decline_ratio_weight(float value);
  public:

  // optional float ignore_ratio_weight = 4;
  bool has_ignore_ratio_weight() const;
  private:
  bool _internal_has_ignore_ratio_weight() const;
  public:
  void clear_ignore_ratio_weight();
  float ignore_ratio_weight() const;
  void set_ignore_ratio_weight(float value);
  private:
  float _internal_ignore_ratio_weight() const;
  void _internal_set_ignore_ratio_weight(float value);
  public:

  // optional float accept_count_weight = 9;
  bool has_accept_count_weight() const;
  private:
  bool _internal_has_accept_count_weight() const;
  public:
  void clear_accept_count_weight();
  float accept_count_weight() const;
  void set_accept_count_weight(float value);
  private:
  float _internal_accept_count_weight() const;
  void _internal_set_accept_count_weight(float value);
  public:

  // optional float decline_count_weight = 10;
  bool has_decline_count_weight() const;
  private:
  bool _internal_has_decline_count_weight() const;
  public:
  void clear_decline_count_weight();
  float decline_count_weight() const;
  void set_decline_count_weight(float value);
  private:
  float _internal_decline_count_weight() const;
  void _internal_set_decline_count_weight(float value);
  public:

  // optional float ignore_count_weight = 11;
  bool has_ignore_count_weight() const;
  private:
  bool _internal_has_ignore_count_weight() const;
  public:
  void clear_ignore_count_weight();
  float ignore_count_weight() const;
  void set_ignore_count_weight(float value);
  private:
  float _internal_ignore_count_weight() const;
  void _internal_set_ignore_count_weight(float value);
  public:

  // optional float threshold = 12;
  bool has_threshold() const;
  private:
  bool _internal_has_threshold() const;
  public:
  void clear_threshold();
  float threshold() const;
  void set_threshold(float value);
  private:
  float _internal_threshold() const;
  void _internal_set_threshold(float value);
  public:

  // @@protoc_insertion_point(class_scope:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapFieldLite<
      TranslateRankerModel_TranslateLogisticRegressionModel_SourceLanguageWeightEntry_DoNotUse,
      std::string, float,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT> source_language_weight_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapFieldLite<
      TranslateRankerModel_TranslateLogisticRegressionModel_TargetLanguageWeightEntry_DoNotUse,
      std::string, float,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT> target_language_weight_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapFieldLite<
      TranslateRankerModel_TranslateLogisticRegressionModel_CountryWeightEntry_DoNotUse,
      std::string, float,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT> country_weight_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapFieldLite<
      TranslateRankerModel_TranslateLogisticRegressionModel_LocaleWeightEntry_DoNotUse,
      std::string, float,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT> locale_weight_;
  float bias_;
  float accept_ratio_weight_;
  float decline_ratio_weight_;
  float ignore_ratio_weight_;
  float accept_count_weight_;
  float decline_count_weight_;
  float ignore_count_weight_;
  float threshold_;
  friend struct ::TableStruct_translate_5franker_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class TranslateRankerModel final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:assist_ranker.TranslateRankerModel) */ {
 public:
  inline TranslateRankerModel() : TranslateRankerModel(nullptr) {}
  ~TranslateRankerModel() override;
  explicit PROTOBUF_CONSTEXPR TranslateRankerModel(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TranslateRankerModel(const TranslateRankerModel& from);
  TranslateRankerModel(TranslateRankerModel&& from) noexcept
    : TranslateRankerModel() {
    *this = ::std::move(from);
  }

  inline TranslateRankerModel& operator=(const TranslateRankerModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline TranslateRankerModel& operator=(TranslateRankerModel&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const TranslateRankerModel& default_instance() {
    return *internal_default_instance();
  }
  enum ModelRevisionCase {
    kTranslateLogisticRegressionModel = 2,
    MODEL_REVISION_NOT_SET = 0,
  };

  static inline const TranslateRankerModel* internal_default_instance() {
    return reinterpret_cast<const TranslateRankerModel*>(
               &_TranslateRankerModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(TranslateRankerModel& a, TranslateRankerModel& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(TranslateRankerModel* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TranslateRankerModel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TranslateRankerModel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TranslateRankerModel>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const TranslateRankerModel& from);
  void MergeFrom(const TranslateRankerModel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TranslateRankerModel* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "assist_ranker.TranslateRankerModel";
  }
  protected:
  explicit TranslateRankerModel(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef TranslateRankerModel_TranslateLogisticRegressionModel TranslateLogisticRegressionModel;

  // accessors -------------------------------------------------------

  enum : int {
    kVersionFieldNumber = 1,
    kTranslateLogisticRegressionModelFieldNumber = 2,
  };
  // optional uint32 version = 1;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  uint32_t version() const;
  void set_version(uint32_t value);
  private:
  uint32_t _internal_version() const;
  void _internal_set_version(uint32_t value);
  public:

  // .assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel translate_logistic_regression_model = 2;
  bool has_translate_logistic_regression_model() const;
  private:
  bool _internal_has_translate_logistic_regression_model() const;
  public:
  void clear_translate_logistic_regression_model();
  const ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel& translate_logistic_regression_model() const;
  PROTOBUF_NODISCARD ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel* release_translate_logistic_regression_model();
  ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel* mutable_translate_logistic_regression_model();
  void set_allocated_translate_logistic_regression_model(::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel* translate_logistic_regression_model);
  private:
  const ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel& _internal_translate_logistic_regression_model() const;
  ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel* _internal_mutable_translate_logistic_regression_model();
  public:
  void unsafe_arena_set_allocated_translate_logistic_regression_model(
      ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel* translate_logistic_regression_model);
  ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel* unsafe_arena_release_translate_logistic_regression_model();

  void clear_model_revision();
  ModelRevisionCase model_revision_case() const;
  // @@protoc_insertion_point(class_scope:assist_ranker.TranslateRankerModel)
 private:
  class _Internal;
  void set_has_translate_logistic_regression_model();

  inline bool has_model_revision() const;
  inline void clear_has_model_revision();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint32_t version_;
  union ModelRevisionUnion {
    constexpr ModelRevisionUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel* translate_logistic_regression_model_;
  } model_revision_;
  uint32_t _oneof_case_[1];

  friend struct ::TableStruct_translate_5franker_5fmodel_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TranslateRankerModel_TranslateLogisticRegressionModel

// optional float threshold = 12;
inline bool TranslateRankerModel_TranslateLogisticRegressionModel::_internal_has_threshold() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool TranslateRankerModel_TranslateLogisticRegressionModel::has_threshold() const {
  return _internal_has_threshold();
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::clear_threshold() {
  threshold_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline float TranslateRankerModel_TranslateLogisticRegressionModel::_internal_threshold() const {
  return threshold_;
}
inline float TranslateRankerModel_TranslateLogisticRegressionModel::threshold() const {
  // @@protoc_insertion_point(field_get:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.threshold)
  return _internal_threshold();
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::_internal_set_threshold(float value) {
  _has_bits_[0] |= 0x00000080u;
  threshold_ = value;
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::set_threshold(float value) {
  _internal_set_threshold(value);
  // @@protoc_insertion_point(field_set:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.threshold)
}

// optional float bias = 1;
inline bool TranslateRankerModel_TranslateLogisticRegressionModel::_internal_has_bias() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TranslateRankerModel_TranslateLogisticRegressionModel::has_bias() const {
  return _internal_has_bias();
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::clear_bias() {
  bias_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float TranslateRankerModel_TranslateLogisticRegressionModel::_internal_bias() const {
  return bias_;
}
inline float TranslateRankerModel_TranslateLogisticRegressionModel::bias() const {
  // @@protoc_insertion_point(field_get:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.bias)
  return _internal_bias();
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::_internal_set_bias(float value) {
  _has_bits_[0] |= 0x00000001u;
  bias_ = value;
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::set_bias(float value) {
  _internal_set_bias(value);
  // @@protoc_insertion_point(field_set:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.bias)
}

// optional float accept_ratio_weight = 2;
inline bool TranslateRankerModel_TranslateLogisticRegressionModel::_internal_has_accept_ratio_weight() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TranslateRankerModel_TranslateLogisticRegressionModel::has_accept_ratio_weight() const {
  return _internal_has_accept_ratio_weight();
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::clear_accept_ratio_weight() {
  accept_ratio_weight_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float TranslateRankerModel_TranslateLogisticRegressionModel::_internal_accept_ratio_weight() const {
  return accept_ratio_weight_;
}
inline float TranslateRankerModel_TranslateLogisticRegressionModel::accept_ratio_weight() const {
  // @@protoc_insertion_point(field_get:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.accept_ratio_weight)
  return _internal_accept_ratio_weight();
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::_internal_set_accept_ratio_weight(float value) {
  _has_bits_[0] |= 0x00000002u;
  accept_ratio_weight_ = value;
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::set_accept_ratio_weight(float value) {
  _internal_set_accept_ratio_weight(value);
  // @@protoc_insertion_point(field_set:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.accept_ratio_weight)
}

// optional float decline_ratio_weight = 3;
inline bool TranslateRankerModel_TranslateLogisticRegressionModel::_internal_has_decline_ratio_weight() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool TranslateRankerModel_TranslateLogisticRegressionModel::has_decline_ratio_weight() const {
  return _internal_has_decline_ratio_weight();
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::clear_decline_ratio_weight() {
  decline_ratio_weight_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float TranslateRankerModel_TranslateLogisticRegressionModel::_internal_decline_ratio_weight() const {
  return decline_ratio_weight_;
}
inline float TranslateRankerModel_TranslateLogisticRegressionModel::decline_ratio_weight() const {
  // @@protoc_insertion_point(field_get:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.decline_ratio_weight)
  return _internal_decline_ratio_weight();
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::_internal_set_decline_ratio_weight(float value) {
  _has_bits_[0] |= 0x00000004u;
  decline_ratio_weight_ = value;
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::set_decline_ratio_weight(float value) {
  _internal_set_decline_ratio_weight(value);
  // @@protoc_insertion_point(field_set:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.decline_ratio_weight)
}

// optional float ignore_ratio_weight = 4;
inline bool TranslateRankerModel_TranslateLogisticRegressionModel::_internal_has_ignore_ratio_weight() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool TranslateRankerModel_TranslateLogisticRegressionModel::has_ignore_ratio_weight() const {
  return _internal_has_ignore_ratio_weight();
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::clear_ignore_ratio_weight() {
  ignore_ratio_weight_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float TranslateRankerModel_TranslateLogisticRegressionModel::_internal_ignore_ratio_weight() const {
  return ignore_ratio_weight_;
}
inline float TranslateRankerModel_TranslateLogisticRegressionModel::ignore_ratio_weight() const {
  // @@protoc_insertion_point(field_get:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.ignore_ratio_weight)
  return _internal_ignore_ratio_weight();
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::_internal_set_ignore_ratio_weight(float value) {
  _has_bits_[0] |= 0x00000008u;
  ignore_ratio_weight_ = value;
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::set_ignore_ratio_weight(float value) {
  _internal_set_ignore_ratio_weight(value);
  // @@protoc_insertion_point(field_set:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.ignore_ratio_weight)
}

// optional float accept_count_weight = 9;
inline bool TranslateRankerModel_TranslateLogisticRegressionModel::_internal_has_accept_count_weight() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool TranslateRankerModel_TranslateLogisticRegressionModel::has_accept_count_weight() const {
  return _internal_has_accept_count_weight();
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::clear_accept_count_weight() {
  accept_count_weight_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float TranslateRankerModel_TranslateLogisticRegressionModel::_internal_accept_count_weight() const {
  return accept_count_weight_;
}
inline float TranslateRankerModel_TranslateLogisticRegressionModel::accept_count_weight() const {
  // @@protoc_insertion_point(field_get:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.accept_count_weight)
  return _internal_accept_count_weight();
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::_internal_set_accept_count_weight(float value) {
  _has_bits_[0] |= 0x00000010u;
  accept_count_weight_ = value;
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::set_accept_count_weight(float value) {
  _internal_set_accept_count_weight(value);
  // @@protoc_insertion_point(field_set:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.accept_count_weight)
}

// optional float decline_count_weight = 10;
inline bool TranslateRankerModel_TranslateLogisticRegressionModel::_internal_has_decline_count_weight() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool TranslateRankerModel_TranslateLogisticRegressionModel::has_decline_count_weight() const {
  return _internal_has_decline_count_weight();
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::clear_decline_count_weight() {
  decline_count_weight_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline float TranslateRankerModel_TranslateLogisticRegressionModel::_internal_decline_count_weight() const {
  return decline_count_weight_;
}
inline float TranslateRankerModel_TranslateLogisticRegressionModel::decline_count_weight() const {
  // @@protoc_insertion_point(field_get:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.decline_count_weight)
  return _internal_decline_count_weight();
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::_internal_set_decline_count_weight(float value) {
  _has_bits_[0] |= 0x00000020u;
  decline_count_weight_ = value;
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::set_decline_count_weight(float value) {
  _internal_set_decline_count_weight(value);
  // @@protoc_insertion_point(field_set:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.decline_count_weight)
}

// optional float ignore_count_weight = 11;
inline bool TranslateRankerModel_TranslateLogisticRegressionModel::_internal_has_ignore_count_weight() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool TranslateRankerModel_TranslateLogisticRegressionModel::has_ignore_count_weight() const {
  return _internal_has_ignore_count_weight();
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::clear_ignore_count_weight() {
  ignore_count_weight_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline float TranslateRankerModel_TranslateLogisticRegressionModel::_internal_ignore_count_weight() const {
  return ignore_count_weight_;
}
inline float TranslateRankerModel_TranslateLogisticRegressionModel::ignore_count_weight() const {
  // @@protoc_insertion_point(field_get:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.ignore_count_weight)
  return _internal_ignore_count_weight();
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::_internal_set_ignore_count_weight(float value) {
  _has_bits_[0] |= 0x00000040u;
  ignore_count_weight_ = value;
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::set_ignore_count_weight(float value) {
  _internal_set_ignore_count_weight(value);
  // @@protoc_insertion_point(field_set:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.ignore_count_weight)
}

// map<string, float> source_language_weight = 5;
inline int TranslateRankerModel_TranslateLogisticRegressionModel::_internal_source_language_weight_size() const {
  return source_language_weight_.size();
}
inline int TranslateRankerModel_TranslateLogisticRegressionModel::source_language_weight_size() const {
  return _internal_source_language_weight_size();
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::clear_source_language_weight() {
  source_language_weight_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >&
TranslateRankerModel_TranslateLogisticRegressionModel::_internal_source_language_weight() const {
  return source_language_weight_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >&
TranslateRankerModel_TranslateLogisticRegressionModel::source_language_weight() const {
  // @@protoc_insertion_point(field_map:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.source_language_weight)
  return _internal_source_language_weight();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >*
TranslateRankerModel_TranslateLogisticRegressionModel::_internal_mutable_source_language_weight() {
  return source_language_weight_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >*
TranslateRankerModel_TranslateLogisticRegressionModel::mutable_source_language_weight() {
  // @@protoc_insertion_point(field_mutable_map:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.source_language_weight)
  return _internal_mutable_source_language_weight();
}

// map<string, float> target_language_weight = 6;
inline int TranslateRankerModel_TranslateLogisticRegressionModel::_internal_target_language_weight_size() const {
  return target_language_weight_.size();
}
inline int TranslateRankerModel_TranslateLogisticRegressionModel::target_language_weight_size() const {
  return _internal_target_language_weight_size();
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::clear_target_language_weight() {
  target_language_weight_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >&
TranslateRankerModel_TranslateLogisticRegressionModel::_internal_target_language_weight() const {
  return target_language_weight_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >&
TranslateRankerModel_TranslateLogisticRegressionModel::target_language_weight() const {
  // @@protoc_insertion_point(field_map:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.target_language_weight)
  return _internal_target_language_weight();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >*
TranslateRankerModel_TranslateLogisticRegressionModel::_internal_mutable_target_language_weight() {
  return target_language_weight_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >*
TranslateRankerModel_TranslateLogisticRegressionModel::mutable_target_language_weight() {
  // @@protoc_insertion_point(field_mutable_map:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.target_language_weight)
  return _internal_mutable_target_language_weight();
}

// map<string, float> country_weight = 7;
inline int TranslateRankerModel_TranslateLogisticRegressionModel::_internal_country_weight_size() const {
  return country_weight_.size();
}
inline int TranslateRankerModel_TranslateLogisticRegressionModel::country_weight_size() const {
  return _internal_country_weight_size();
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::clear_country_weight() {
  country_weight_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >&
TranslateRankerModel_TranslateLogisticRegressionModel::_internal_country_weight() const {
  return country_weight_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >&
TranslateRankerModel_TranslateLogisticRegressionModel::country_weight() const {
  // @@protoc_insertion_point(field_map:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.country_weight)
  return _internal_country_weight();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >*
TranslateRankerModel_TranslateLogisticRegressionModel::_internal_mutable_country_weight() {
  return country_weight_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >*
TranslateRankerModel_TranslateLogisticRegressionModel::mutable_country_weight() {
  // @@protoc_insertion_point(field_mutable_map:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.country_weight)
  return _internal_mutable_country_weight();
}

// map<string, float> locale_weight = 8;
inline int TranslateRankerModel_TranslateLogisticRegressionModel::_internal_locale_weight_size() const {
  return locale_weight_.size();
}
inline int TranslateRankerModel_TranslateLogisticRegressionModel::locale_weight_size() const {
  return _internal_locale_weight_size();
}
inline void TranslateRankerModel_TranslateLogisticRegressionModel::clear_locale_weight() {
  locale_weight_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >&
TranslateRankerModel_TranslateLogisticRegressionModel::_internal_locale_weight() const {
  return locale_weight_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >&
TranslateRankerModel_TranslateLogisticRegressionModel::locale_weight() const {
  // @@protoc_insertion_point(field_map:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.locale_weight)
  return _internal_locale_weight();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >*
TranslateRankerModel_TranslateLogisticRegressionModel::_internal_mutable_locale_weight() {
  return locale_weight_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >*
TranslateRankerModel_TranslateLogisticRegressionModel::mutable_locale_weight() {
  // @@protoc_insertion_point(field_mutable_map:assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel.locale_weight)
  return _internal_mutable_locale_weight();
}

// -------------------------------------------------------------------

// TranslateRankerModel

// optional uint32 version = 1;
inline bool TranslateRankerModel::_internal_has_version() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TranslateRankerModel::has_version() const {
  return _internal_has_version();
}
inline void TranslateRankerModel::clear_version() {
  version_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline uint32_t TranslateRankerModel::_internal_version() const {
  return version_;
}
inline uint32_t TranslateRankerModel::version() const {
  // @@protoc_insertion_point(field_get:assist_ranker.TranslateRankerModel.version)
  return _internal_version();
}
inline void TranslateRankerModel::_internal_set_version(uint32_t value) {
  _has_bits_[0] |= 0x00000001u;
  version_ = value;
}
inline void TranslateRankerModel::set_version(uint32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:assist_ranker.TranslateRankerModel.version)
}

// .assist_ranker.TranslateRankerModel.TranslateLogisticRegressionModel translate_logistic_regression_model = 2;
inline bool TranslateRankerModel::_internal_has_translate_logistic_regression_model() const {
  return model_revision_case() == kTranslateLogisticRegressionModel;
}
inline bool TranslateRankerModel::has_translate_logistic_regression_model() const {
  return _internal_has_translate_logistic_regression_model();
}
inline void TranslateRankerModel::set_has_translate_logistic_regression_model() {
  _oneof_case_[0] = kTranslateLogisticRegressionModel;
}
inline void TranslateRankerModel::clear_translate_logistic_regression_model() {
  if (_internal_has_translate_logistic_regression_model()) {
    if (GetArenaForAllocation() == nullptr) {
      delete model_revision_.translate_logistic_regression_model_;
    }
    clear_has_model_revision();
  }
}
inline ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel* TranslateRankerModel::release_translate_logistic_regression_model() {
  // @@protoc_insertion_point(field_release:assist_ranker.TranslateRankerModel.translate_logistic_regression_model)
  if (_internal_has_translate_logistic_regression_model()) {
    clear_has_model_revision();
    ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel* temp = model_revision_.translate_logistic_regression_model_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    model_revision_.translate_logistic_regression_model_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel& TranslateRankerModel::_internal_translate_logistic_regression_model() const {
  return _internal_has_translate_logistic_regression_model()
      ? *model_revision_.translate_logistic_regression_model_
      : reinterpret_cast< ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel&>(::assist_ranker::_TranslateRankerModel_TranslateLogisticRegressionModel_default_instance_);
}
inline const ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel& TranslateRankerModel::translate_logistic_regression_model() const {
  // @@protoc_insertion_point(field_get:assist_ranker.TranslateRankerModel.translate_logistic_regression_model)
  return _internal_translate_logistic_regression_model();
}
inline ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel* TranslateRankerModel::unsafe_arena_release_translate_logistic_regression_model() {
  // @@protoc_insertion_point(field_unsafe_arena_release:assist_ranker.TranslateRankerModel.translate_logistic_regression_model)
  if (_internal_has_translate_logistic_regression_model()) {
    clear_has_model_revision();
    ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel* temp = model_revision_.translate_logistic_regression_model_;
    model_revision_.translate_logistic_regression_model_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TranslateRankerModel::unsafe_arena_set_allocated_translate_logistic_regression_model(::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel* translate_logistic_regression_model) {
  clear_model_revision();
  if (translate_logistic_regression_model) {
    set_has_translate_logistic_regression_model();
    model_revision_.translate_logistic_regression_model_ = translate_logistic_regression_model;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:assist_ranker.TranslateRankerModel.translate_logistic_regression_model)
}
inline ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel* TranslateRankerModel::_internal_mutable_translate_logistic_regression_model() {
  if (!_internal_has_translate_logistic_regression_model()) {
    clear_model_revision();
    set_has_translate_logistic_regression_model();
    model_revision_.translate_logistic_regression_model_ = CreateMaybeMessage< ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel >(GetArenaForAllocation());
  }
  return model_revision_.translate_logistic_regression_model_;
}
inline ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel* TranslateRankerModel::mutable_translate_logistic_regression_model() {
  ::assist_ranker::TranslateRankerModel_TranslateLogisticRegressionModel* _msg = _internal_mutable_translate_logistic_regression_model();
  // @@protoc_insertion_point(field_mutable:assist_ranker.TranslateRankerModel.translate_logistic_regression_model)
  return _msg;
}

inline bool TranslateRankerModel::has_model_revision() const {
  return model_revision_case() != MODEL_REVISION_NOT_SET;
}
inline void TranslateRankerModel::clear_has_model_revision() {
  _oneof_case_[0] = MODEL_REVISION_NOT_SET;
}
inline TranslateRankerModel::ModelRevisionCase TranslateRankerModel::model_revision_case() const {
  return TranslateRankerModel::ModelRevisionCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace assist_ranker

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_translate_5franker_5fmodel_2eproto
