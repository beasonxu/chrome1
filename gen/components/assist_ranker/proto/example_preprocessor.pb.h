// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: example_preprocessor.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_example_5fpreprocessor_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_example_5fpreprocessor_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry_lite.h>
#include <google/protobuf/map_field_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_example_5fpreprocessor_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_example_5fpreprocessor_2eproto {
  static const uint32_t offsets[];
};
namespace assist_ranker {
class ExamplePreprocessorConfig;
struct ExamplePreprocessorConfigDefaultTypeInternal;
extern ExamplePreprocessorConfigDefaultTypeInternal _ExamplePreprocessorConfig_default_instance_;
class ExamplePreprocessorConfig_Boundaries;
struct ExamplePreprocessorConfig_BoundariesDefaultTypeInternal;
extern ExamplePreprocessorConfig_BoundariesDefaultTypeInternal _ExamplePreprocessorConfig_Boundaries_default_instance_;
class ExamplePreprocessorConfig_BucketizersEntry_DoNotUse;
struct ExamplePreprocessorConfig_BucketizersEntry_DoNotUseDefaultTypeInternal;
extern ExamplePreprocessorConfig_BucketizersEntry_DoNotUseDefaultTypeInternal _ExamplePreprocessorConfig_BucketizersEntry_DoNotUse_default_instance_;
class ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse;
struct ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUseDefaultTypeInternal;
extern ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUseDefaultTypeInternal _ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse_default_instance_;
class ExamplePreprocessorConfig_NormalizersEntry_DoNotUse;
struct ExamplePreprocessorConfig_NormalizersEntry_DoNotUseDefaultTypeInternal;
extern ExamplePreprocessorConfig_NormalizersEntry_DoNotUseDefaultTypeInternal _ExamplePreprocessorConfig_NormalizersEntry_DoNotUse_default_instance_;
}  // namespace assist_ranker
PROTOBUF_NAMESPACE_OPEN
template<> ::assist_ranker::ExamplePreprocessorConfig* Arena::CreateMaybeMessage<::assist_ranker::ExamplePreprocessorConfig>(Arena*);
template<> ::assist_ranker::ExamplePreprocessorConfig_Boundaries* Arena::CreateMaybeMessage<::assist_ranker::ExamplePreprocessorConfig_Boundaries>(Arena*);
template<> ::assist_ranker::ExamplePreprocessorConfig_BucketizersEntry_DoNotUse* Arena::CreateMaybeMessage<::assist_ranker::ExamplePreprocessorConfig_BucketizersEntry_DoNotUse>(Arena*);
template<> ::assist_ranker::ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse* Arena::CreateMaybeMessage<::assist_ranker::ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse>(Arena*);
template<> ::assist_ranker::ExamplePreprocessorConfig_NormalizersEntry_DoNotUse* Arena::CreateMaybeMessage<::assist_ranker::ExamplePreprocessorConfig_NormalizersEntry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace assist_ranker {

// ===================================================================

class ExamplePreprocessorConfig_Boundaries final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:assist_ranker.ExamplePreprocessorConfig.Boundaries) */ {
 public:
  inline ExamplePreprocessorConfig_Boundaries() : ExamplePreprocessorConfig_Boundaries(nullptr) {}
  ~ExamplePreprocessorConfig_Boundaries() override;
  explicit PROTOBUF_CONSTEXPR ExamplePreprocessorConfig_Boundaries(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ExamplePreprocessorConfig_Boundaries(const ExamplePreprocessorConfig_Boundaries& from);
  ExamplePreprocessorConfig_Boundaries(ExamplePreprocessorConfig_Boundaries&& from) noexcept
    : ExamplePreprocessorConfig_Boundaries() {
    *this = ::std::move(from);
  }

  inline ExamplePreprocessorConfig_Boundaries& operator=(const ExamplePreprocessorConfig_Boundaries& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExamplePreprocessorConfig_Boundaries& operator=(ExamplePreprocessorConfig_Boundaries&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const ExamplePreprocessorConfig_Boundaries& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExamplePreprocessorConfig_Boundaries* internal_default_instance() {
    return reinterpret_cast<const ExamplePreprocessorConfig_Boundaries*>(
               &_ExamplePreprocessorConfig_Boundaries_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ExamplePreprocessorConfig_Boundaries& a, ExamplePreprocessorConfig_Boundaries& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(ExamplePreprocessorConfig_Boundaries* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExamplePreprocessorConfig_Boundaries* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExamplePreprocessorConfig_Boundaries* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ExamplePreprocessorConfig_Boundaries>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const ExamplePreprocessorConfig_Boundaries& from);
  void MergeFrom(const ExamplePreprocessorConfig_Boundaries& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExamplePreprocessorConfig_Boundaries* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "assist_ranker.ExamplePreprocessorConfig.Boundaries";
  }
  protected:
  explicit ExamplePreprocessorConfig_Boundaries(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBoundariesFieldNumber = 1,
  };
  // repeated float boundaries = 1;
  int boundaries_size() const;
  private:
  int _internal_boundaries_size() const;
  public:
  void clear_boundaries();
  private:
  float _internal_boundaries(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_boundaries() const;
  void _internal_add_boundaries(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_boundaries();
  public:
  float boundaries(int index) const;
  void set_boundaries(int index, float value);
  void add_boundaries(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      boundaries() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_boundaries();

  // @@protoc_insertion_point(class_scope:assist_ranker.ExamplePreprocessorConfig.Boundaries)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > boundaries_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_example_5fpreprocessor_2eproto;
};
// -------------------------------------------------------------------

class ExamplePreprocessorConfig_BucketizersEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<ExamplePreprocessorConfig_BucketizersEntry_DoNotUse, 
    std::string, ::assist_ranker::ExamplePreprocessorConfig_Boundaries,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<ExamplePreprocessorConfig_BucketizersEntry_DoNotUse, 
    std::string, ::assist_ranker::ExamplePreprocessorConfig_Boundaries,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  ExamplePreprocessorConfig_BucketizersEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR ExamplePreprocessorConfig_BucketizersEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit ExamplePreprocessorConfig_BucketizersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const ExamplePreprocessorConfig_BucketizersEntry_DoNotUse& other);
  static const ExamplePreprocessorConfig_BucketizersEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ExamplePreprocessorConfig_BucketizersEntry_DoNotUse*>(&_ExamplePreprocessorConfig_BucketizersEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  friend struct ::TableStruct_example_5fpreprocessor_2eproto;
};

// -------------------------------------------------------------------

class ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse, 
    std::string, int32_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse, 
    std::string, int32_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32> SuperType;
  ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse& other);
  static const ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse*>(&_ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  friend struct ::TableStruct_example_5fpreprocessor_2eproto;
};

// -------------------------------------------------------------------

class ExamplePreprocessorConfig_NormalizersEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<ExamplePreprocessorConfig_NormalizersEntry_DoNotUse, 
    std::string, float,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<ExamplePreprocessorConfig_NormalizersEntry_DoNotUse, 
    std::string, float,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT> SuperType;
  ExamplePreprocessorConfig_NormalizersEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR ExamplePreprocessorConfig_NormalizersEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit ExamplePreprocessorConfig_NormalizersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const ExamplePreprocessorConfig_NormalizersEntry_DoNotUse& other);
  static const ExamplePreprocessorConfig_NormalizersEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ExamplePreprocessorConfig_NormalizersEntry_DoNotUse*>(&_ExamplePreprocessorConfig_NormalizersEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  friend struct ::TableStruct_example_5fpreprocessor_2eproto;
};

// -------------------------------------------------------------------

class ExamplePreprocessorConfig final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:assist_ranker.ExamplePreprocessorConfig) */ {
 public:
  inline ExamplePreprocessorConfig() : ExamplePreprocessorConfig(nullptr) {}
  ~ExamplePreprocessorConfig() override;
  explicit PROTOBUF_CONSTEXPR ExamplePreprocessorConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ExamplePreprocessorConfig(const ExamplePreprocessorConfig& from);
  ExamplePreprocessorConfig(ExamplePreprocessorConfig&& from) noexcept
    : ExamplePreprocessorConfig() {
    *this = ::std::move(from);
  }

  inline ExamplePreprocessorConfig& operator=(const ExamplePreprocessorConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExamplePreprocessorConfig& operator=(ExamplePreprocessorConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const ExamplePreprocessorConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExamplePreprocessorConfig* internal_default_instance() {
    return reinterpret_cast<const ExamplePreprocessorConfig*>(
               &_ExamplePreprocessorConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ExamplePreprocessorConfig& a, ExamplePreprocessorConfig& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(ExamplePreprocessorConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExamplePreprocessorConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExamplePreprocessorConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ExamplePreprocessorConfig>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const ExamplePreprocessorConfig& from);
  void MergeFrom(const ExamplePreprocessorConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExamplePreprocessorConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "assist_ranker.ExamplePreprocessorConfig";
  }
  protected:
  explicit ExamplePreprocessorConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef ExamplePreprocessorConfig_Boundaries Boundaries;

  // accessors -------------------------------------------------------

  enum : int {
    kMissingFeaturesFieldNumber = 1,
    kBucketizersFieldNumber = 2,
    kFeatureIndicesFieldNumber = 3,
    kNormalizersFieldNumber = 4,
    kConvertToStringFeaturesFieldNumber = 5,
  };
  // repeated string missing_features = 1;
  int missing_features_size() const;
  private:
  int _internal_missing_features_size() const;
  public:
  void clear_missing_features();
  const std::string& missing_features(int index) const;
  std::string* mutable_missing_features(int index);
  void set_missing_features(int index, const std::string& value);
  void set_missing_features(int index, std::string&& value);
  void set_missing_features(int index, const char* value);
  void set_missing_features(int index, const char* value, size_t size);
  std::string* add_missing_features();
  void add_missing_features(const std::string& value);
  void add_missing_features(std::string&& value);
  void add_missing_features(const char* value);
  void add_missing_features(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& missing_features() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_missing_features();
  private:
  const std::string& _internal_missing_features(int index) const;
  std::string* _internal_add_missing_features();
  public:

  // map<string, .assist_ranker.ExamplePreprocessorConfig.Boundaries> bucketizers = 2;
  int bucketizers_size() const;
  private:
  int _internal_bucketizers_size() const;
  public:
  void clear_bucketizers();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::assist_ranker::ExamplePreprocessorConfig_Boundaries >&
      _internal_bucketizers() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::assist_ranker::ExamplePreprocessorConfig_Boundaries >*
      _internal_mutable_bucketizers();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::assist_ranker::ExamplePreprocessorConfig_Boundaries >&
      bucketizers() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::assist_ranker::ExamplePreprocessorConfig_Boundaries >*
      mutable_bucketizers();

  // map<string, int32> feature_indices = 3;
  int feature_indices_size() const;
  private:
  int _internal_feature_indices_size() const;
  public:
  void clear_feature_indices();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >&
      _internal_feature_indices() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >*
      _internal_mutable_feature_indices();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >&
      feature_indices() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >*
      mutable_feature_indices();

  // map<string, float> normalizers = 4;
  int normalizers_size() const;
  private:
  int _internal_normalizers_size() const;
  public:
  void clear_normalizers();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >&
      _internal_normalizers() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >*
      _internal_mutable_normalizers();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >&
      normalizers() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >*
      mutable_normalizers();

  // repeated string convert_to_string_features = 5;
  int convert_to_string_features_size() const;
  private:
  int _internal_convert_to_string_features_size() const;
  public:
  void clear_convert_to_string_features();
  const std::string& convert_to_string_features(int index) const;
  std::string* mutable_convert_to_string_features(int index);
  void set_convert_to_string_features(int index, const std::string& value);
  void set_convert_to_string_features(int index, std::string&& value);
  void set_convert_to_string_features(int index, const char* value);
  void set_convert_to_string_features(int index, const char* value, size_t size);
  std::string* add_convert_to_string_features();
  void add_convert_to_string_features(const std::string& value);
  void add_convert_to_string_features(std::string&& value);
  void add_convert_to_string_features(const char* value);
  void add_convert_to_string_features(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& convert_to_string_features() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_convert_to_string_features();
  private:
  const std::string& _internal_convert_to_string_features(int index) const;
  std::string* _internal_add_convert_to_string_features();
  public:

  // @@protoc_insertion_point(class_scope:assist_ranker.ExamplePreprocessorConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> missing_features_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapFieldLite<
      ExamplePreprocessorConfig_BucketizersEntry_DoNotUse,
      std::string, ::assist_ranker::ExamplePreprocessorConfig_Boundaries,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> bucketizers_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapFieldLite<
      ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse,
      std::string, int32_t,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32> feature_indices_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapFieldLite<
      ExamplePreprocessorConfig_NormalizersEntry_DoNotUse,
      std::string, float,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT> normalizers_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> convert_to_string_features_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_example_5fpreprocessor_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ExamplePreprocessorConfig_Boundaries

// repeated float boundaries = 1;
inline int ExamplePreprocessorConfig_Boundaries::_internal_boundaries_size() const {
  return boundaries_.size();
}
inline int ExamplePreprocessorConfig_Boundaries::boundaries_size() const {
  return _internal_boundaries_size();
}
inline void ExamplePreprocessorConfig_Boundaries::clear_boundaries() {
  boundaries_.Clear();
}
inline float ExamplePreprocessorConfig_Boundaries::_internal_boundaries(int index) const {
  return boundaries_.Get(index);
}
inline float ExamplePreprocessorConfig_Boundaries::boundaries(int index) const {
  // @@protoc_insertion_point(field_get:assist_ranker.ExamplePreprocessorConfig.Boundaries.boundaries)
  return _internal_boundaries(index);
}
inline void ExamplePreprocessorConfig_Boundaries::set_boundaries(int index, float value) {
  boundaries_.Set(index, value);
  // @@protoc_insertion_point(field_set:assist_ranker.ExamplePreprocessorConfig.Boundaries.boundaries)
}
inline void ExamplePreprocessorConfig_Boundaries::_internal_add_boundaries(float value) {
  boundaries_.Add(value);
}
inline void ExamplePreprocessorConfig_Boundaries::add_boundaries(float value) {
  _internal_add_boundaries(value);
  // @@protoc_insertion_point(field_add:assist_ranker.ExamplePreprocessorConfig.Boundaries.boundaries)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ExamplePreprocessorConfig_Boundaries::_internal_boundaries() const {
  return boundaries_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ExamplePreprocessorConfig_Boundaries::boundaries() const {
  // @@protoc_insertion_point(field_list:assist_ranker.ExamplePreprocessorConfig.Boundaries.boundaries)
  return _internal_boundaries();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ExamplePreprocessorConfig_Boundaries::_internal_mutable_boundaries() {
  return &boundaries_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ExamplePreprocessorConfig_Boundaries::mutable_boundaries() {
  // @@protoc_insertion_point(field_mutable_list:assist_ranker.ExamplePreprocessorConfig.Boundaries.boundaries)
  return _internal_mutable_boundaries();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ExamplePreprocessorConfig

// repeated string missing_features = 1;
inline int ExamplePreprocessorConfig::_internal_missing_features_size() const {
  return missing_features_.size();
}
inline int ExamplePreprocessorConfig::missing_features_size() const {
  return _internal_missing_features_size();
}
inline void ExamplePreprocessorConfig::clear_missing_features() {
  missing_features_.Clear();
}
inline std::string* ExamplePreprocessorConfig::add_missing_features() {
  std::string* _s = _internal_add_missing_features();
  // @@protoc_insertion_point(field_add_mutable:assist_ranker.ExamplePreprocessorConfig.missing_features)
  return _s;
}
inline const std::string& ExamplePreprocessorConfig::_internal_missing_features(int index) const {
  return missing_features_.Get(index);
}
inline const std::string& ExamplePreprocessorConfig::missing_features(int index) const {
  // @@protoc_insertion_point(field_get:assist_ranker.ExamplePreprocessorConfig.missing_features)
  return _internal_missing_features(index);
}
inline std::string* ExamplePreprocessorConfig::mutable_missing_features(int index) {
  // @@protoc_insertion_point(field_mutable:assist_ranker.ExamplePreprocessorConfig.missing_features)
  return missing_features_.Mutable(index);
}
inline void ExamplePreprocessorConfig::set_missing_features(int index, const std::string& value) {
  missing_features_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:assist_ranker.ExamplePreprocessorConfig.missing_features)
}
inline void ExamplePreprocessorConfig::set_missing_features(int index, std::string&& value) {
  missing_features_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:assist_ranker.ExamplePreprocessorConfig.missing_features)
}
inline void ExamplePreprocessorConfig::set_missing_features(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  missing_features_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:assist_ranker.ExamplePreprocessorConfig.missing_features)
}
inline void ExamplePreprocessorConfig::set_missing_features(int index, const char* value, size_t size) {
  missing_features_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:assist_ranker.ExamplePreprocessorConfig.missing_features)
}
inline std::string* ExamplePreprocessorConfig::_internal_add_missing_features() {
  return missing_features_.Add();
}
inline void ExamplePreprocessorConfig::add_missing_features(const std::string& value) {
  missing_features_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:assist_ranker.ExamplePreprocessorConfig.missing_features)
}
inline void ExamplePreprocessorConfig::add_missing_features(std::string&& value) {
  missing_features_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:assist_ranker.ExamplePreprocessorConfig.missing_features)
}
inline void ExamplePreprocessorConfig::add_missing_features(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  missing_features_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:assist_ranker.ExamplePreprocessorConfig.missing_features)
}
inline void ExamplePreprocessorConfig::add_missing_features(const char* value, size_t size) {
  missing_features_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:assist_ranker.ExamplePreprocessorConfig.missing_features)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
ExamplePreprocessorConfig::missing_features() const {
  // @@protoc_insertion_point(field_list:assist_ranker.ExamplePreprocessorConfig.missing_features)
  return missing_features_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
ExamplePreprocessorConfig::mutable_missing_features() {
  // @@protoc_insertion_point(field_mutable_list:assist_ranker.ExamplePreprocessorConfig.missing_features)
  return &missing_features_;
}

// map<string, .assist_ranker.ExamplePreprocessorConfig.Boundaries> bucketizers = 2;
inline int ExamplePreprocessorConfig::_internal_bucketizers_size() const {
  return bucketizers_.size();
}
inline int ExamplePreprocessorConfig::bucketizers_size() const {
  return _internal_bucketizers_size();
}
inline void ExamplePreprocessorConfig::clear_bucketizers() {
  bucketizers_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::assist_ranker::ExamplePreprocessorConfig_Boundaries >&
ExamplePreprocessorConfig::_internal_bucketizers() const {
  return bucketizers_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::assist_ranker::ExamplePreprocessorConfig_Boundaries >&
ExamplePreprocessorConfig::bucketizers() const {
  // @@protoc_insertion_point(field_map:assist_ranker.ExamplePreprocessorConfig.bucketizers)
  return _internal_bucketizers();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::assist_ranker::ExamplePreprocessorConfig_Boundaries >*
ExamplePreprocessorConfig::_internal_mutable_bucketizers() {
  return bucketizers_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::assist_ranker::ExamplePreprocessorConfig_Boundaries >*
ExamplePreprocessorConfig::mutable_bucketizers() {
  // @@protoc_insertion_point(field_mutable_map:assist_ranker.ExamplePreprocessorConfig.bucketizers)
  return _internal_mutable_bucketizers();
}

// map<string, int32> feature_indices = 3;
inline int ExamplePreprocessorConfig::_internal_feature_indices_size() const {
  return feature_indices_.size();
}
inline int ExamplePreprocessorConfig::feature_indices_size() const {
  return _internal_feature_indices_size();
}
inline void ExamplePreprocessorConfig::clear_feature_indices() {
  feature_indices_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >&
ExamplePreprocessorConfig::_internal_feature_indices() const {
  return feature_indices_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >&
ExamplePreprocessorConfig::feature_indices() const {
  // @@protoc_insertion_point(field_map:assist_ranker.ExamplePreprocessorConfig.feature_indices)
  return _internal_feature_indices();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >*
ExamplePreprocessorConfig::_internal_mutable_feature_indices() {
  return feature_indices_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >*
ExamplePreprocessorConfig::mutable_feature_indices() {
  // @@protoc_insertion_point(field_mutable_map:assist_ranker.ExamplePreprocessorConfig.feature_indices)
  return _internal_mutable_feature_indices();
}

// map<string, float> normalizers = 4;
inline int ExamplePreprocessorConfig::_internal_normalizers_size() const {
  return normalizers_.size();
}
inline int ExamplePreprocessorConfig::normalizers_size() const {
  return _internal_normalizers_size();
}
inline void ExamplePreprocessorConfig::clear_normalizers() {
  normalizers_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >&
ExamplePreprocessorConfig::_internal_normalizers() const {
  return normalizers_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >&
ExamplePreprocessorConfig::normalizers() const {
  // @@protoc_insertion_point(field_map:assist_ranker.ExamplePreprocessorConfig.normalizers)
  return _internal_normalizers();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >*
ExamplePreprocessorConfig::_internal_mutable_normalizers() {
  return normalizers_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, float >*
ExamplePreprocessorConfig::mutable_normalizers() {
  // @@protoc_insertion_point(field_mutable_map:assist_ranker.ExamplePreprocessorConfig.normalizers)
  return _internal_mutable_normalizers();
}

// repeated string convert_to_string_features = 5;
inline int ExamplePreprocessorConfig::_internal_convert_to_string_features_size() const {
  return convert_to_string_features_.size();
}
inline int ExamplePreprocessorConfig::convert_to_string_features_size() const {
  return _internal_convert_to_string_features_size();
}
inline void ExamplePreprocessorConfig::clear_convert_to_string_features() {
  convert_to_string_features_.Clear();
}
inline std::string* ExamplePreprocessorConfig::add_convert_to_string_features() {
  std::string* _s = _internal_add_convert_to_string_features();
  // @@protoc_insertion_point(field_add_mutable:assist_ranker.ExamplePreprocessorConfig.convert_to_string_features)
  return _s;
}
inline const std::string& ExamplePreprocessorConfig::_internal_convert_to_string_features(int index) const {
  return convert_to_string_features_.Get(index);
}
inline const std::string& ExamplePreprocessorConfig::convert_to_string_features(int index) const {
  // @@protoc_insertion_point(field_get:assist_ranker.ExamplePreprocessorConfig.convert_to_string_features)
  return _internal_convert_to_string_features(index);
}
inline std::string* ExamplePreprocessorConfig::mutable_convert_to_string_features(int index) {
  // @@protoc_insertion_point(field_mutable:assist_ranker.ExamplePreprocessorConfig.convert_to_string_features)
  return convert_to_string_features_.Mutable(index);
}
inline void ExamplePreprocessorConfig::set_convert_to_string_features(int index, const std::string& value) {
  convert_to_string_features_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:assist_ranker.ExamplePreprocessorConfig.convert_to_string_features)
}
inline void ExamplePreprocessorConfig::set_convert_to_string_features(int index, std::string&& value) {
  convert_to_string_features_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:assist_ranker.ExamplePreprocessorConfig.convert_to_string_features)
}
inline void ExamplePreprocessorConfig::set_convert_to_string_features(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  convert_to_string_features_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:assist_ranker.ExamplePreprocessorConfig.convert_to_string_features)
}
inline void ExamplePreprocessorConfig::set_convert_to_string_features(int index, const char* value, size_t size) {
  convert_to_string_features_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:assist_ranker.ExamplePreprocessorConfig.convert_to_string_features)
}
inline std::string* ExamplePreprocessorConfig::_internal_add_convert_to_string_features() {
  return convert_to_string_features_.Add();
}
inline void ExamplePreprocessorConfig::add_convert_to_string_features(const std::string& value) {
  convert_to_string_features_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:assist_ranker.ExamplePreprocessorConfig.convert_to_string_features)
}
inline void ExamplePreprocessorConfig::add_convert_to_string_features(std::string&& value) {
  convert_to_string_features_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:assist_ranker.ExamplePreprocessorConfig.convert_to_string_features)
}
inline void ExamplePreprocessorConfig::add_convert_to_string_features(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  convert_to_string_features_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:assist_ranker.ExamplePreprocessorConfig.convert_to_string_features)
}
inline void ExamplePreprocessorConfig::add_convert_to_string_features(const char* value, size_t size) {
  convert_to_string_features_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:assist_ranker.ExamplePreprocessorConfig.convert_to_string_features)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
ExamplePreprocessorConfig::convert_to_string_features() const {
  // @@protoc_insertion_point(field_list:assist_ranker.ExamplePreprocessorConfig.convert_to_string_features)
  return convert_to_string_features_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
ExamplePreprocessorConfig::mutable_convert_to_string_features() {
  // @@protoc_insertion_point(field_mutable_list:assist_ranker.ExamplePreprocessorConfig.convert_to_string_features)
  return &convert_to_string_features_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace assist_ranker

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_example_5fpreprocessor_2eproto
