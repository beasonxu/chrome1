// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: example_preprocessor.proto

#include "example_preprocessor.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace assist_ranker {
PROTOBUF_CONSTEXPR ExamplePreprocessorConfig_Boundaries::ExamplePreprocessorConfig_Boundaries(
    ::_pbi::ConstantInitialized)
  : boundaries_(){}
struct ExamplePreprocessorConfig_BoundariesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExamplePreprocessorConfig_BoundariesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExamplePreprocessorConfig_BoundariesDefaultTypeInternal() {}
  union {
    ExamplePreprocessorConfig_Boundaries _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT_WITH_PTR PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExamplePreprocessorConfig_BoundariesDefaultTypeInternal _ExamplePreprocessorConfig_Boundaries_default_instance_;
PROTOBUF_CONSTEXPR ExamplePreprocessorConfig_BucketizersEntry_DoNotUse::ExamplePreprocessorConfig_BucketizersEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct ExamplePreprocessorConfig_BucketizersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExamplePreprocessorConfig_BucketizersEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExamplePreprocessorConfig_BucketizersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ExamplePreprocessorConfig_BucketizersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT_WITH_PTR PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExamplePreprocessorConfig_BucketizersEntry_DoNotUseDefaultTypeInternal _ExamplePreprocessorConfig_BucketizersEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse::ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT_WITH_PTR PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUseDefaultTypeInternal _ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR ExamplePreprocessorConfig_NormalizersEntry_DoNotUse::ExamplePreprocessorConfig_NormalizersEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct ExamplePreprocessorConfig_NormalizersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExamplePreprocessorConfig_NormalizersEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExamplePreprocessorConfig_NormalizersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ExamplePreprocessorConfig_NormalizersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT_WITH_PTR PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExamplePreprocessorConfig_NormalizersEntry_DoNotUseDefaultTypeInternal _ExamplePreprocessorConfig_NormalizersEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR ExamplePreprocessorConfig::ExamplePreprocessorConfig(
    ::_pbi::ConstantInitialized)
  : missing_features_()
  , bucketizers_()
  , feature_indices_()
  , normalizers_()
  , convert_to_string_features_(){}
struct ExamplePreprocessorConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExamplePreprocessorConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExamplePreprocessorConfigDefaultTypeInternal() {}
  union {
    ExamplePreprocessorConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT_WITH_PTR PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExamplePreprocessorConfigDefaultTypeInternal _ExamplePreprocessorConfig_default_instance_;
}  // namespace assist_ranker
namespace assist_ranker {

// ===================================================================

class ExamplePreprocessorConfig_Boundaries::_Internal {
 public:
};

ExamplePreprocessorConfig_Boundaries::ExamplePreprocessorConfig_Boundaries(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(arena, is_message_owned),
  boundaries_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:assist_ranker.ExamplePreprocessorConfig.Boundaries)
}
ExamplePreprocessorConfig_Boundaries::ExamplePreprocessorConfig_Boundaries(const ExamplePreprocessorConfig_Boundaries& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      boundaries_(from.boundaries_) {
  _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:assist_ranker.ExamplePreprocessorConfig.Boundaries)
}

inline void ExamplePreprocessorConfig_Boundaries::SharedCtor() {
}

ExamplePreprocessorConfig_Boundaries::~ExamplePreprocessorConfig_Boundaries() {
  // @@protoc_insertion_point(destructor:assist_ranker.ExamplePreprocessorConfig.Boundaries)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<std::string>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ExamplePreprocessorConfig_Boundaries::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ExamplePreprocessorConfig_Boundaries::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ExamplePreprocessorConfig_Boundaries::Clear() {
// @@protoc_insertion_point(message_clear_start:assist_ranker.ExamplePreprocessorConfig.Boundaries)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  boundaries_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* ExamplePreprocessorConfig_Boundaries::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated float boundaries = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_boundaries(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
            ptr += sizeof(float);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<13>(ptr));
        } else if (static_cast<uint8_t>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_boundaries(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<std::string>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ExamplePreprocessorConfig_Boundaries::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:assist_ranker.ExamplePreprocessorConfig.Boundaries)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float boundaries = 1;
  for (int i = 0, n = this->_internal_boundaries_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_boundaries(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:assist_ranker.ExamplePreprocessorConfig.Boundaries)
  return target;
}

size_t ExamplePreprocessorConfig_Boundaries::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:assist_ranker.ExamplePreprocessorConfig.Boundaries)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float boundaries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_boundaries_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_boundaries_size());
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size();
  }
  int cached_size = ::_pbi::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExamplePreprocessorConfig_Boundaries::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const ExamplePreprocessorConfig_Boundaries*>(
      &from));
}

void ExamplePreprocessorConfig_Boundaries::MergeFrom(const ExamplePreprocessorConfig_Boundaries& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:assist_ranker.ExamplePreprocessorConfig.Boundaries)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  boundaries_.MergeFrom(from.boundaries_);
  _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void ExamplePreprocessorConfig_Boundaries::CopyFrom(const ExamplePreprocessorConfig_Boundaries& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:assist_ranker.ExamplePreprocessorConfig.Boundaries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExamplePreprocessorConfig_Boundaries::IsInitialized() const {
  return true;
}

void ExamplePreprocessorConfig_Boundaries::InternalSwap(ExamplePreprocessorConfig_Boundaries* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  boundaries_.InternalSwap(&other->boundaries_);
}

std::string ExamplePreprocessorConfig_Boundaries::GetTypeName() const {
  return "assist_ranker.ExamplePreprocessorConfig.Boundaries";
}


// ===================================================================

ExamplePreprocessorConfig_BucketizersEntry_DoNotUse::ExamplePreprocessorConfig_BucketizersEntry_DoNotUse() {}
ExamplePreprocessorConfig_BucketizersEntry_DoNotUse::ExamplePreprocessorConfig_BucketizersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ExamplePreprocessorConfig_BucketizersEntry_DoNotUse::MergeFrom(const ExamplePreprocessorConfig_BucketizersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}

// ===================================================================

ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse::ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse() {}
ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse::ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse::MergeFrom(const ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}

// ===================================================================

ExamplePreprocessorConfig_NormalizersEntry_DoNotUse::ExamplePreprocessorConfig_NormalizersEntry_DoNotUse() {}
ExamplePreprocessorConfig_NormalizersEntry_DoNotUse::ExamplePreprocessorConfig_NormalizersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ExamplePreprocessorConfig_NormalizersEntry_DoNotUse::MergeFrom(const ExamplePreprocessorConfig_NormalizersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}

// ===================================================================

class ExamplePreprocessorConfig::_Internal {
 public:
};

ExamplePreprocessorConfig::ExamplePreprocessorConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(arena, is_message_owned),
  missing_features_(arena),
  bucketizers_(arena),
  feature_indices_(arena),
  normalizers_(arena),
  convert_to_string_features_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:assist_ranker.ExamplePreprocessorConfig)
}
ExamplePreprocessorConfig::ExamplePreprocessorConfig(const ExamplePreprocessorConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      missing_features_(from.missing_features_),
      convert_to_string_features_(from.convert_to_string_features_) {
  _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
  bucketizers_.MergeFrom(from.bucketizers_);
  feature_indices_.MergeFrom(from.feature_indices_);
  normalizers_.MergeFrom(from.normalizers_);
  // @@protoc_insertion_point(copy_constructor:assist_ranker.ExamplePreprocessorConfig)
}

inline void ExamplePreprocessorConfig::SharedCtor() {
}

ExamplePreprocessorConfig::~ExamplePreprocessorConfig() {
  // @@protoc_insertion_point(destructor:assist_ranker.ExamplePreprocessorConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<std::string>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ExamplePreprocessorConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  bucketizers_.Destruct();
  feature_indices_.Destruct();
  normalizers_.Destruct();
}

void ExamplePreprocessorConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ExamplePreprocessorConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:assist_ranker.ExamplePreprocessorConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  missing_features_.Clear();
  bucketizers_.Clear();
  feature_indices_.Clear();
  normalizers_.Clear();
  convert_to_string_features_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* ExamplePreprocessorConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string missing_features = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_missing_features();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, .assist_ranker.ExamplePreprocessorConfig.Boundaries> bucketizers = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&bucketizers_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, int32> feature_indices = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&feature_indices_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, float> normalizers = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&normalizers_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string convert_to_string_features = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_convert_to_string_features();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<std::string>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ExamplePreprocessorConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:assist_ranker.ExamplePreprocessorConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string missing_features = 1;
  for (int i = 0, n = this->_internal_missing_features_size(); i < n; i++) {
    const auto& s = this->_internal_missing_features(i);
    target = stream->WriteString(1, s, target);
  }

  // map<string, .assist_ranker.ExamplePreprocessorConfig.Boundaries> bucketizers = 2;
  if (!this->_internal_bucketizers().empty()) {
    using MapType = ::_pb::Map<std::string, ::assist_ranker::ExamplePreprocessorConfig_Boundaries>;
    using WireHelper = ExamplePreprocessorConfig_BucketizersEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_bucketizers();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, int32> feature_indices = 3;
  if (!this->_internal_feature_indices().empty()) {
    using MapType = ::_pb::Map<std::string, int32_t>;
    using WireHelper = ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_feature_indices();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, float> normalizers = 4;
  if (!this->_internal_normalizers().empty()) {
    using MapType = ::_pb::Map<std::string, float>;
    using WireHelper = ExamplePreprocessorConfig_NormalizersEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_normalizers();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // repeated string convert_to_string_features = 5;
  for (int i = 0, n = this->_internal_convert_to_string_features_size(); i < n; i++) {
    const auto& s = this->_internal_convert_to_string_features(i);
    target = stream->WriteString(5, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:assist_ranker.ExamplePreprocessorConfig)
  return target;
}

size_t ExamplePreprocessorConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:assist_ranker.ExamplePreprocessorConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string missing_features = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(missing_features_.size());
  for (int i = 0, n = missing_features_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      missing_features_.Get(i));
  }

  // map<string, .assist_ranker.ExamplePreprocessorConfig.Boundaries> bucketizers = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_bucketizers_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::assist_ranker::ExamplePreprocessorConfig_Boundaries >::const_iterator
      it = this->_internal_bucketizers().begin();
      it != this->_internal_bucketizers().end(); ++it) {
    total_size += ExamplePreprocessorConfig_BucketizersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, int32> feature_indices = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_feature_indices_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >::const_iterator
      it = this->_internal_feature_indices().begin();
      it != this->_internal_feature_indices().end(); ++it) {
    total_size += ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, float> normalizers = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_normalizers_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, float >::const_iterator
      it = this->_internal_normalizers().begin();
      it != this->_internal_normalizers().end(); ++it) {
    total_size += ExamplePreprocessorConfig_NormalizersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated string convert_to_string_features = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(convert_to_string_features_.size());
  for (int i = 0, n = convert_to_string_features_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      convert_to_string_features_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size();
  }
  int cached_size = ::_pbi::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExamplePreprocessorConfig::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const ExamplePreprocessorConfig*>(
      &from));
}

void ExamplePreprocessorConfig::MergeFrom(const ExamplePreprocessorConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:assist_ranker.ExamplePreprocessorConfig)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  missing_features_.MergeFrom(from.missing_features_);
  bucketizers_.MergeFrom(from.bucketizers_);
  feature_indices_.MergeFrom(from.feature_indices_);
  normalizers_.MergeFrom(from.normalizers_);
  convert_to_string_features_.MergeFrom(from.convert_to_string_features_);
  _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void ExamplePreprocessorConfig::CopyFrom(const ExamplePreprocessorConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:assist_ranker.ExamplePreprocessorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExamplePreprocessorConfig::IsInitialized() const {
  return true;
}

void ExamplePreprocessorConfig::InternalSwap(ExamplePreprocessorConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  missing_features_.InternalSwap(&other->missing_features_);
  bucketizers_.InternalSwap(&other->bucketizers_);
  feature_indices_.InternalSwap(&other->feature_indices_);
  normalizers_.InternalSwap(&other->normalizers_);
  convert_to_string_features_.InternalSwap(&other->convert_to_string_features_);
}

std::string ExamplePreprocessorConfig::GetTypeName() const {
  return "assist_ranker.ExamplePreprocessorConfig";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace assist_ranker
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::assist_ranker::ExamplePreprocessorConfig_Boundaries*
Arena::CreateMaybeMessage< ::assist_ranker::ExamplePreprocessorConfig_Boundaries >(Arena* arena) {
  return Arena::CreateMessageInternal< ::assist_ranker::ExamplePreprocessorConfig_Boundaries >(arena);
}
template<> PROTOBUF_NOINLINE ::assist_ranker::ExamplePreprocessorConfig_BucketizersEntry_DoNotUse*
Arena::CreateMaybeMessage< ::assist_ranker::ExamplePreprocessorConfig_BucketizersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::assist_ranker::ExamplePreprocessorConfig_BucketizersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::assist_ranker::ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse*
Arena::CreateMaybeMessage< ::assist_ranker::ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::assist_ranker::ExamplePreprocessorConfig_FeatureIndicesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::assist_ranker::ExamplePreprocessorConfig_NormalizersEntry_DoNotUse*
Arena::CreateMaybeMessage< ::assist_ranker::ExamplePreprocessorConfig_NormalizersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::assist_ranker::ExamplePreprocessorConfig_NormalizersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::assist_ranker::ExamplePreprocessorConfig*
Arena::CreateMaybeMessage< ::assist_ranker::ExamplePreprocessorConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::assist_ranker::ExamplePreprocessorConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
