// components/continuous_search/common/public/mojom/continuous_search.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_CONTINUOUS_SEARCH_COMMON_PUBLIC_MOJOM_CONTINUOUS_SEARCH_MOJOM_TEST_UTILS_H_
#define COMPONENTS_CONTINUOUS_SEARCH_COMMON_PUBLIC_MOJOM_CONTINUOUS_SEARCH_MOJOM_TEST_UTILS_H_

#include "components/continuous_search/common/public/mojom/continuous_search.mojom.h"


namespace continuous_search {
namespace mojom {


class  SearchResultExtractorInterceptorForTesting : public SearchResultExtractor {
  virtual SearchResultExtractor* GetForwardingInterface() = 0;
  void ExtractCurrentSearchResults(const std::vector<ResultType>& result_types, ExtractCurrentSearchResultsCallback callback) override;
};
class  SearchResultExtractorAsyncWaiter {
 public:
  explicit SearchResultExtractorAsyncWaiter(SearchResultExtractor* proxy);

  SearchResultExtractorAsyncWaiter(const SearchResultExtractorAsyncWaiter&) = delete;
  SearchResultExtractorAsyncWaiter& operator=(const SearchResultExtractorAsyncWaiter&) = delete;

  ~SearchResultExtractorAsyncWaiter();
  void ExtractCurrentSearchResults(
      const std::vector<ResultType>& result_types, SearchResultExtractor::Status* out_status, CategoryResultsPtr* out_results);

 private:
  SearchResultExtractor* const proxy_;
};




}  // namespace mojom
}  // namespace continuous_search

#endif  // COMPONENTS_CONTINUOUS_SEARCH_COMMON_PUBLIC_MOJOM_CONTINUOUS_SEARCH_MOJOM_TEST_UTILS_H_