// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/thinwebview/internal/ThinWebViewImpl

#ifndef org_chromium_components_thinwebview_internal_ThinWebViewImpl_JNI
#define org_chromium_components_thinwebview_internal_ThinWebViewImpl_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace thin_webview {
namespace android {

static jlong JNI_ThinWebViewImpl_Init(JNIEnv* env, const base::android::JavaParamRef<jobject>&
    caller,
    const base::android::JavaParamRef<jobject>& compositorView,
    const base::android::JavaParamRef<jobject>& windowAndroid);

JNI_GENERATOR_EXPORT jlong Java_J_N_M_00024XqDO_00024W(
    JNIEnv* env,
    jclass jcaller,
    jobject caller,
    jobject compositorView,
    jobject windowAndroid) {
  return JNI_ThinWebViewImpl_Init(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jobject>(env, compositorView),
      base::android::JavaParamRef<jobject>(env, windowAndroid));
}

JNI_GENERATOR_EXPORT void Java_J_N_Mi0zHYZ4(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeThinWebView,
    jobject caller) {
  ThinWebView* native = reinterpret_cast<ThinWebView*>(nativeThinWebView);
  CHECK_NATIVE_PTR(env, jcaller, native, "Destroy");
  return native->Destroy(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT void Java_J_N_M9Q7LfVV(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeThinWebView,
    jobject caller,
    jobject webContents,
    jobject delegate) {
  ThinWebView* native = reinterpret_cast<ThinWebView*>(nativeThinWebView);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetWebContents");
  return native->SetWebContents(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jobject>(env, webContents),
      base::android::JavaParamRef<jobject>(env, delegate));
}

JNI_GENERATOR_EXPORT void Java_J_N_MgG98_000245a(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeThinWebView,
    jobject caller,
    jint width,
    jint height) {
  ThinWebView* native = reinterpret_cast<ThinWebView*>(nativeThinWebView);
  CHECK_NATIVE_PTR(env, jcaller, native, "SizeChanged");
  return native->SizeChanged(env, base::android::JavaParamRef<jobject>(env, caller), width, height);
}


}  // namespace android
}  // namespace thin_webview

#endif  // org_chromium_components_thinwebview_internal_ThinWebViewImpl_JNI
