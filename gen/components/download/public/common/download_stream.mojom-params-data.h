// components/download/public/common/download_stream.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_DOWNLOAD_PUBLIC_COMMON_DOWNLOAD_STREAM_MOJOM_PARAMS_DATA_H_
#define COMPONENTS_DOWNLOAD_PUBLIC_COMMON_DOWNLOAD_STREAM_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace download {
namespace mojom {
namespace internal {

class ValidationContext;
class COMPONENT_EXPORT(MOJOM_SHARED_COMPONENTS_DOWNLOAD_EXPORT) DownloadStreamClient_OnStreamCompleted_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<DownloadStreamClient_OnStreamCompleted_Params_Data>;

  DownloadStreamClient_OnStreamCompleted_Params_Data();
  ~DownloadStreamClient_OnStreamCompleted_Params_Data() = delete;
};
static_assert(sizeof(DownloadStreamClient_OnStreamCompleted_Params_Data) == 16,
              "Bad sizeof(DownloadStreamClient_OnStreamCompleted_Params_Data)");

}  // namespace internal


class DownloadStreamClient_OnStreamCompleted_ParamsDataView {
 public:
  DownloadStreamClient_OnStreamCompleted_ParamsDataView() = default;

  DownloadStreamClient_OnStreamCompleted_ParamsDataView(
      internal::DownloadStreamClient_OnStreamCompleted_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::download::mojom::NetworkRequestStatus>(
        data_value, output);
  }
  NetworkRequestStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::download::mojom::NetworkRequestStatus>(data_->status));
  }
 private:
  internal::DownloadStreamClient_OnStreamCompleted_Params_Data* data_ = nullptr;
};



}  // namespace mojom
}  // namespace download

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // COMPONENTS_DOWNLOAD_PUBLIC_COMMON_DOWNLOAD_STREAM_MOJOM_PARAMS_DATA_H_