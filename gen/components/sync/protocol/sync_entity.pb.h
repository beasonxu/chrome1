// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/sync_entity.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_components_2fsync_2fprotocol_2fsync_5fentity_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_components_2fsync_2fprotocol_2fsync_5fentity_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "components/sync/protocol/entity_specifics.pb.h"
#include "components/sync/protocol/unique_position.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_components_2fsync_2fprotocol_2fsync_5fentity_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_components_2fsync_2fprotocol_2fsync_5fentity_2eproto {
  static const uint32_t offsets[];
};
namespace sync_pb {
class SyncEntity;
struct SyncEntityDefaultTypeInternal;
extern SyncEntityDefaultTypeInternal _SyncEntity_default_instance_;
}  // namespace sync_pb
PROTOBUF_NAMESPACE_OPEN
template<> ::sync_pb::SyncEntity* Arena::CreateMaybeMessage<::sync_pb::SyncEntity>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace sync_pb {

// ===================================================================

class SyncEntity final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:sync_pb.SyncEntity) */ {
 public:
  inline SyncEntity() : SyncEntity(nullptr) {}
  ~SyncEntity() override;
  explicit PROTOBUF_CONSTEXPR SyncEntity(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SyncEntity(const SyncEntity& from);
  SyncEntity(SyncEntity&& from) noexcept
    : SyncEntity() {
    *this = ::std::move(from);
  }

  inline SyncEntity& operator=(const SyncEntity& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncEntity& operator=(SyncEntity&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const SyncEntity& default_instance() {
    return *internal_default_instance();
  }
  static inline const SyncEntity* internal_default_instance() {
    return reinterpret_cast<const SyncEntity*>(
               &_SyncEntity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SyncEntity& a, SyncEntity& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(SyncEntity* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SyncEntity* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SyncEntity* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SyncEntity>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const SyncEntity& from);
  void MergeFrom(const SyncEntity& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SyncEntity* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sync_pb.SyncEntity";
  }
  protected:
  explicit SyncEntity(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdStringFieldNumber = 1,
    kParentIdStringFieldNumber = 2,
    kNameFieldNumber = 7,
    kNonUniqueNameFieldNumber = 8,
    kServerDefinedUniqueTagFieldNumber = 10,
    kInsertAfterItemIdFieldNumber = 16,
    kOriginatorCacheGuidFieldNumber = 19,
    kOriginatorClientItemIdFieldNumber = 20,
    kClientDefinedUniqueTagFieldNumber = 23,
    kSpecificsFieldNumber = 21,
    kUniquePositionFieldNumber = 25,
    kVersionFieldNumber = 4,
    kMtimeFieldNumber = 5,
    kCtimeFieldNumber = 6,
    kPositionInParentFieldNumber = 15,
    kDeletedFieldNumber = 18,
    kFolderFieldNumber = 22,
  };
  // optional string id_string = 1;
  bool has_id_string() const;
  private:
  bool _internal_has_id_string() const;
  public:
  void clear_id_string();
  const std::string& id_string() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_id_string(ArgT0&& arg0, ArgT... args);
  std::string* mutable_id_string();
  PROTOBUF_NODISCARD std::string* release_id_string();
  void set_allocated_id_string(std::string* id_string);
  private:
  const std::string& _internal_id_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id_string(const std::string& value);
  std::string* _internal_mutable_id_string();
  public:

  // optional string parent_id_string = 2;
  bool has_parent_id_string() const;
  private:
  bool _internal_has_parent_id_string() const;
  public:
  void clear_parent_id_string();
  const std::string& parent_id_string() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_parent_id_string(ArgT0&& arg0, ArgT... args);
  std::string* mutable_parent_id_string();
  PROTOBUF_NODISCARD std::string* release_parent_id_string();
  void set_allocated_parent_id_string(std::string* parent_id_string);
  private:
  const std::string& _internal_parent_id_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_parent_id_string(const std::string& value);
  std::string* _internal_mutable_parent_id_string();
  public:

  // optional string name = 7;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional string non_unique_name = 8;
  bool has_non_unique_name() const;
  private:
  bool _internal_has_non_unique_name() const;
  public:
  void clear_non_unique_name();
  const std::string& non_unique_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_non_unique_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_non_unique_name();
  PROTOBUF_NODISCARD std::string* release_non_unique_name();
  void set_allocated_non_unique_name(std::string* non_unique_name);
  private:
  const std::string& _internal_non_unique_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_non_unique_name(const std::string& value);
  std::string* _internal_mutable_non_unique_name();
  public:

  // optional string server_defined_unique_tag = 10;
  bool has_server_defined_unique_tag() const;
  private:
  bool _internal_has_server_defined_unique_tag() const;
  public:
  void clear_server_defined_unique_tag();
  const std::string& server_defined_unique_tag() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_server_defined_unique_tag(ArgT0&& arg0, ArgT... args);
  std::string* mutable_server_defined_unique_tag();
  PROTOBUF_NODISCARD std::string* release_server_defined_unique_tag();
  void set_allocated_server_defined_unique_tag(std::string* server_defined_unique_tag);
  private:
  const std::string& _internal_server_defined_unique_tag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_server_defined_unique_tag(const std::string& value);
  std::string* _internal_mutable_server_defined_unique_tag();
  public:

  // optional string insert_after_item_id = 16 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_insert_after_item_id() const;
  private:
  bool _internal_has_insert_after_item_id() const;
  public:
  PROTOBUF_DEPRECATED void clear_insert_after_item_id();
  PROTOBUF_DEPRECATED const std::string& insert_after_item_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  PROTOBUF_DEPRECATED void set_insert_after_item_id(ArgT0&& arg0, ArgT... args);
  PROTOBUF_DEPRECATED std::string* mutable_insert_after_item_id();
  PROTOBUF_NODISCARD PROTOBUF_DEPRECATED std::string* release_insert_after_item_id();
  PROTOBUF_DEPRECATED void set_allocated_insert_after_item_id(std::string* insert_after_item_id);
  private:
  const std::string& _internal_insert_after_item_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_insert_after_item_id(const std::string& value);
  std::string* _internal_mutable_insert_after_item_id();
  public:

  // optional string originator_cache_guid = 19;
  bool has_originator_cache_guid() const;
  private:
  bool _internal_has_originator_cache_guid() const;
  public:
  void clear_originator_cache_guid();
  const std::string& originator_cache_guid() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_originator_cache_guid(ArgT0&& arg0, ArgT... args);
  std::string* mutable_originator_cache_guid();
  PROTOBUF_NODISCARD std::string* release_originator_cache_guid();
  void set_allocated_originator_cache_guid(std::string* originator_cache_guid);
  private:
  const std::string& _internal_originator_cache_guid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_originator_cache_guid(const std::string& value);
  std::string* _internal_mutable_originator_cache_guid();
  public:

  // optional string originator_client_item_id = 20;
  bool has_originator_client_item_id() const;
  private:
  bool _internal_has_originator_client_item_id() const;
  public:
  void clear_originator_client_item_id();
  const std::string& originator_client_item_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_originator_client_item_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_originator_client_item_id();
  PROTOBUF_NODISCARD std::string* release_originator_client_item_id();
  void set_allocated_originator_client_item_id(std::string* originator_client_item_id);
  private:
  const std::string& _internal_originator_client_item_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_originator_client_item_id(const std::string& value);
  std::string* _internal_mutable_originator_client_item_id();
  public:

  // optional string client_defined_unique_tag = 23;
  bool has_client_defined_unique_tag() const;
  private:
  bool _internal_has_client_defined_unique_tag() const;
  public:
  void clear_client_defined_unique_tag();
  const std::string& client_defined_unique_tag() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_client_defined_unique_tag(ArgT0&& arg0, ArgT... args);
  std::string* mutable_client_defined_unique_tag();
  PROTOBUF_NODISCARD std::string* release_client_defined_unique_tag();
  void set_allocated_client_defined_unique_tag(std::string* client_defined_unique_tag);
  private:
  const std::string& _internal_client_defined_unique_tag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_client_defined_unique_tag(const std::string& value);
  std::string* _internal_mutable_client_defined_unique_tag();
  public:

  // optional .sync_pb.EntitySpecifics specifics = 21;
  bool has_specifics() const;
  private:
  bool _internal_has_specifics() const;
  public:
  void clear_specifics();
  const ::sync_pb::EntitySpecifics& specifics() const;
  PROTOBUF_NODISCARD ::sync_pb::EntitySpecifics* release_specifics();
  ::sync_pb::EntitySpecifics* mutable_specifics();
  void set_allocated_specifics(::sync_pb::EntitySpecifics* specifics);
  private:
  const ::sync_pb::EntitySpecifics& _internal_specifics() const;
  ::sync_pb::EntitySpecifics* _internal_mutable_specifics();
  public:
  void unsafe_arena_set_allocated_specifics(
      ::sync_pb::EntitySpecifics* specifics);
  ::sync_pb::EntitySpecifics* unsafe_arena_release_specifics();

  // optional .sync_pb.UniquePosition unique_position = 25;
  bool has_unique_position() const;
  private:
  bool _internal_has_unique_position() const;
  public:
  void clear_unique_position();
  const ::sync_pb::UniquePosition& unique_position() const;
  PROTOBUF_NODISCARD ::sync_pb::UniquePosition* release_unique_position();
  ::sync_pb::UniquePosition* mutable_unique_position();
  void set_allocated_unique_position(::sync_pb::UniquePosition* unique_position);
  private:
  const ::sync_pb::UniquePosition& _internal_unique_position() const;
  ::sync_pb::UniquePosition* _internal_mutable_unique_position();
  public:
  void unsafe_arena_set_allocated_unique_position(
      ::sync_pb::UniquePosition* unique_position);
  ::sync_pb::UniquePosition* unsafe_arena_release_unique_position();

  // optional int64 version = 4;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  int64_t version() const;
  void set_version(int64_t value);
  private:
  int64_t _internal_version() const;
  void _internal_set_version(int64_t value);
  public:

  // optional int64 mtime = 5;
  bool has_mtime() const;
  private:
  bool _internal_has_mtime() const;
  public:
  void clear_mtime();
  int64_t mtime() const;
  void set_mtime(int64_t value);
  private:
  int64_t _internal_mtime() const;
  void _internal_set_mtime(int64_t value);
  public:

  // optional int64 ctime = 6;
  bool has_ctime() const;
  private:
  bool _internal_has_ctime() const;
  public:
  void clear_ctime();
  int64_t ctime() const;
  void set_ctime(int64_t value);
  private:
  int64_t _internal_ctime() const;
  void _internal_set_ctime(int64_t value);
  public:

  // optional int64 position_in_parent = 15 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_position_in_parent() const;
  private:
  bool _internal_has_position_in_parent() const;
  public:
  PROTOBUF_DEPRECATED void clear_position_in_parent();
  PROTOBUF_DEPRECATED int64_t position_in_parent() const;
  PROTOBUF_DEPRECATED void set_position_in_parent(int64_t value);
  private:
  int64_t _internal_position_in_parent() const;
  void _internal_set_position_in_parent(int64_t value);
  public:

  // optional bool deleted = 18 [default = false];
  bool has_deleted() const;
  private:
  bool _internal_has_deleted() const;
  public:
  void clear_deleted();
  bool deleted() const;
  void set_deleted(bool value);
  private:
  bool _internal_deleted() const;
  void _internal_set_deleted(bool value);
  public:

  // optional bool folder = 22 [default = false];
  bool has_folder() const;
  private:
  bool _internal_has_folder() const;
  public:
  void clear_folder();
  bool folder() const;
  void set_folder(bool value);
  private:
  bool _internal_folder() const;
  void _internal_set_folder(bool value);
  public:

  // @@protoc_insertion_point(class_scope:sync_pb.SyncEntity)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_string_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr parent_id_string_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr non_unique_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr server_defined_unique_tag_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr insert_after_item_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr originator_cache_guid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr originator_client_item_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr client_defined_unique_tag_;
  ::sync_pb::EntitySpecifics* specifics_;
  ::sync_pb::UniquePosition* unique_position_;
  int64_t version_;
  int64_t mtime_;
  int64_t ctime_;
  int64_t position_in_parent_;
  bool deleted_;
  bool folder_;
  friend struct ::TableStruct_components_2fsync_2fprotocol_2fsync_5fentity_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SyncEntity

// optional string id_string = 1;
inline bool SyncEntity::_internal_has_id_string() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SyncEntity::has_id_string() const {
  return _internal_has_id_string();
}
inline void SyncEntity::clear_id_string() {
  id_string_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SyncEntity::id_string() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncEntity.id_string)
  return _internal_id_string();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void SyncEntity::set_id_string(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 id_string_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:sync_pb.SyncEntity.id_string)
}
inline std::string* SyncEntity::mutable_id_string() {
  std::string* _s = _internal_mutable_id_string();
  // @@protoc_insertion_point(field_mutable:sync_pb.SyncEntity.id_string)
  return _s;
}
inline const std::string& SyncEntity::_internal_id_string() const {
  return id_string_.Get();
}
inline void SyncEntity::_internal_set_id_string(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  id_string_.Set(value, GetArenaForAllocation());
}
inline std::string* SyncEntity::_internal_mutable_id_string() {
  _has_bits_[0] |= 0x00000001u;
  return id_string_.Mutable(GetArenaForAllocation());
}
inline std::string* SyncEntity::release_id_string() {
  // @@protoc_insertion_point(field_release:sync_pb.SyncEntity.id_string)
  if (!_internal_has_id_string()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = id_string_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (id_string_.IsDefault()) {
    id_string_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void SyncEntity::set_allocated_id_string(std::string* id_string) {
  if (id_string != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  id_string_.SetAllocated(id_string, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (id_string_.IsDefault()) {
    id_string_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SyncEntity.id_string)
}

// optional string parent_id_string = 2;
inline bool SyncEntity::_internal_has_parent_id_string() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SyncEntity::has_parent_id_string() const {
  return _internal_has_parent_id_string();
}
inline void SyncEntity::clear_parent_id_string() {
  parent_id_string_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SyncEntity::parent_id_string() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncEntity.parent_id_string)
  return _internal_parent_id_string();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void SyncEntity::set_parent_id_string(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 parent_id_string_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:sync_pb.SyncEntity.parent_id_string)
}
inline std::string* SyncEntity::mutable_parent_id_string() {
  std::string* _s = _internal_mutable_parent_id_string();
  // @@protoc_insertion_point(field_mutable:sync_pb.SyncEntity.parent_id_string)
  return _s;
}
inline const std::string& SyncEntity::_internal_parent_id_string() const {
  return parent_id_string_.Get();
}
inline void SyncEntity::_internal_set_parent_id_string(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  parent_id_string_.Set(value, GetArenaForAllocation());
}
inline std::string* SyncEntity::_internal_mutable_parent_id_string() {
  _has_bits_[0] |= 0x00000002u;
  return parent_id_string_.Mutable(GetArenaForAllocation());
}
inline std::string* SyncEntity::release_parent_id_string() {
  // @@protoc_insertion_point(field_release:sync_pb.SyncEntity.parent_id_string)
  if (!_internal_has_parent_id_string()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  auto* p = parent_id_string_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (parent_id_string_.IsDefault()) {
    parent_id_string_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void SyncEntity::set_allocated_parent_id_string(std::string* parent_id_string) {
  if (parent_id_string != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  parent_id_string_.SetAllocated(parent_id_string, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (parent_id_string_.IsDefault()) {
    parent_id_string_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SyncEntity.parent_id_string)
}

// optional int64 version = 4;
inline bool SyncEntity::_internal_has_version() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool SyncEntity::has_version() const {
  return _internal_has_version();
}
inline void SyncEntity::clear_version() {
  version_ = int64_t{0};
  _has_bits_[0] &= ~0x00000800u;
}
inline int64_t SyncEntity::_internal_version() const {
  return version_;
}
inline int64_t SyncEntity::version() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncEntity.version)
  return _internal_version();
}
inline void SyncEntity::_internal_set_version(int64_t value) {
  _has_bits_[0] |= 0x00000800u;
  version_ = value;
}
inline void SyncEntity::set_version(int64_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:sync_pb.SyncEntity.version)
}

// optional int64 mtime = 5;
inline bool SyncEntity::_internal_has_mtime() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool SyncEntity::has_mtime() const {
  return _internal_has_mtime();
}
inline void SyncEntity::clear_mtime() {
  mtime_ = int64_t{0};
  _has_bits_[0] &= ~0x00001000u;
}
inline int64_t SyncEntity::_internal_mtime() const {
  return mtime_;
}
inline int64_t SyncEntity::mtime() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncEntity.mtime)
  return _internal_mtime();
}
inline void SyncEntity::_internal_set_mtime(int64_t value) {
  _has_bits_[0] |= 0x00001000u;
  mtime_ = value;
}
inline void SyncEntity::set_mtime(int64_t value) {
  _internal_set_mtime(value);
  // @@protoc_insertion_point(field_set:sync_pb.SyncEntity.mtime)
}

// optional int64 ctime = 6;
inline bool SyncEntity::_internal_has_ctime() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool SyncEntity::has_ctime() const {
  return _internal_has_ctime();
}
inline void SyncEntity::clear_ctime() {
  ctime_ = int64_t{0};
  _has_bits_[0] &= ~0x00002000u;
}
inline int64_t SyncEntity::_internal_ctime() const {
  return ctime_;
}
inline int64_t SyncEntity::ctime() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncEntity.ctime)
  return _internal_ctime();
}
inline void SyncEntity::_internal_set_ctime(int64_t value) {
  _has_bits_[0] |= 0x00002000u;
  ctime_ = value;
}
inline void SyncEntity::set_ctime(int64_t value) {
  _internal_set_ctime(value);
  // @@protoc_insertion_point(field_set:sync_pb.SyncEntity.ctime)
}

// optional string name = 7;
inline bool SyncEntity::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool SyncEntity::has_name() const {
  return _internal_has_name();
}
inline void SyncEntity::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& SyncEntity::name() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncEntity.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void SyncEntity::set_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000004u;
 name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:sync_pb.SyncEntity.name)
}
inline std::string* SyncEntity::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:sync_pb.SyncEntity.name)
  return _s;
}
inline const std::string& SyncEntity::_internal_name() const {
  return name_.Get();
}
inline void SyncEntity::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  name_.Set(value, GetArenaForAllocation());
}
inline std::string* SyncEntity::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000004u;
  return name_.Mutable(GetArenaForAllocation());
}
inline std::string* SyncEntity::release_name() {
  // @@protoc_insertion_point(field_release:sync_pb.SyncEntity.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  auto* p = name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault()) {
    name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void SyncEntity::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault()) {
    name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SyncEntity.name)
}

// optional string non_unique_name = 8;
inline bool SyncEntity::_internal_has_non_unique_name() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool SyncEntity::has_non_unique_name() const {
  return _internal_has_non_unique_name();
}
inline void SyncEntity::clear_non_unique_name() {
  non_unique_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& SyncEntity::non_unique_name() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncEntity.non_unique_name)
  return _internal_non_unique_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void SyncEntity::set_non_unique_name(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000008u;
 non_unique_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:sync_pb.SyncEntity.non_unique_name)
}
inline std::string* SyncEntity::mutable_non_unique_name() {
  std::string* _s = _internal_mutable_non_unique_name();
  // @@protoc_insertion_point(field_mutable:sync_pb.SyncEntity.non_unique_name)
  return _s;
}
inline const std::string& SyncEntity::_internal_non_unique_name() const {
  return non_unique_name_.Get();
}
inline void SyncEntity::_internal_set_non_unique_name(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  non_unique_name_.Set(value, GetArenaForAllocation());
}
inline std::string* SyncEntity::_internal_mutable_non_unique_name() {
  _has_bits_[0] |= 0x00000008u;
  return non_unique_name_.Mutable(GetArenaForAllocation());
}
inline std::string* SyncEntity::release_non_unique_name() {
  // @@protoc_insertion_point(field_release:sync_pb.SyncEntity.non_unique_name)
  if (!_internal_has_non_unique_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  auto* p = non_unique_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (non_unique_name_.IsDefault()) {
    non_unique_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void SyncEntity::set_allocated_non_unique_name(std::string* non_unique_name) {
  if (non_unique_name != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  non_unique_name_.SetAllocated(non_unique_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (non_unique_name_.IsDefault()) {
    non_unique_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SyncEntity.non_unique_name)
}

// optional string server_defined_unique_tag = 10;
inline bool SyncEntity::_internal_has_server_defined_unique_tag() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool SyncEntity::has_server_defined_unique_tag() const {
  return _internal_has_server_defined_unique_tag();
}
inline void SyncEntity::clear_server_defined_unique_tag() {
  server_defined_unique_tag_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& SyncEntity::server_defined_unique_tag() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncEntity.server_defined_unique_tag)
  return _internal_server_defined_unique_tag();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void SyncEntity::set_server_defined_unique_tag(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000010u;
 server_defined_unique_tag_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:sync_pb.SyncEntity.server_defined_unique_tag)
}
inline std::string* SyncEntity::mutable_server_defined_unique_tag() {
  std::string* _s = _internal_mutable_server_defined_unique_tag();
  // @@protoc_insertion_point(field_mutable:sync_pb.SyncEntity.server_defined_unique_tag)
  return _s;
}
inline const std::string& SyncEntity::_internal_server_defined_unique_tag() const {
  return server_defined_unique_tag_.Get();
}
inline void SyncEntity::_internal_set_server_defined_unique_tag(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  server_defined_unique_tag_.Set(value, GetArenaForAllocation());
}
inline std::string* SyncEntity::_internal_mutable_server_defined_unique_tag() {
  _has_bits_[0] |= 0x00000010u;
  return server_defined_unique_tag_.Mutable(GetArenaForAllocation());
}
inline std::string* SyncEntity::release_server_defined_unique_tag() {
  // @@protoc_insertion_point(field_release:sync_pb.SyncEntity.server_defined_unique_tag)
  if (!_internal_has_server_defined_unique_tag()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  auto* p = server_defined_unique_tag_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (server_defined_unique_tag_.IsDefault()) {
    server_defined_unique_tag_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void SyncEntity::set_allocated_server_defined_unique_tag(std::string* server_defined_unique_tag) {
  if (server_defined_unique_tag != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  server_defined_unique_tag_.SetAllocated(server_defined_unique_tag, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (server_defined_unique_tag_.IsDefault()) {
    server_defined_unique_tag_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SyncEntity.server_defined_unique_tag)
}

// optional int64 position_in_parent = 15 [deprecated = true];
inline bool SyncEntity::_internal_has_position_in_parent() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool SyncEntity::has_position_in_parent() const {
  return _internal_has_position_in_parent();
}
inline void SyncEntity::clear_position_in_parent() {
  position_in_parent_ = int64_t{0};
  _has_bits_[0] &= ~0x00004000u;
}
inline int64_t SyncEntity::_internal_position_in_parent() const {
  return position_in_parent_;
}
inline int64_t SyncEntity::position_in_parent() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncEntity.position_in_parent)
  return _internal_position_in_parent();
}
inline void SyncEntity::_internal_set_position_in_parent(int64_t value) {
  _has_bits_[0] |= 0x00004000u;
  position_in_parent_ = value;
}
inline void SyncEntity::set_position_in_parent(int64_t value) {
  _internal_set_position_in_parent(value);
  // @@protoc_insertion_point(field_set:sync_pb.SyncEntity.position_in_parent)
}

// optional string insert_after_item_id = 16 [deprecated = true];
inline bool SyncEntity::_internal_has_insert_after_item_id() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool SyncEntity::has_insert_after_item_id() const {
  return _internal_has_insert_after_item_id();
}
inline void SyncEntity::clear_insert_after_item_id() {
  insert_after_item_id_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& SyncEntity::insert_after_item_id() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncEntity.insert_after_item_id)
  return _internal_insert_after_item_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void SyncEntity::set_insert_after_item_id(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000020u;
 insert_after_item_id_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:sync_pb.SyncEntity.insert_after_item_id)
}
inline std::string* SyncEntity::mutable_insert_after_item_id() {
  std::string* _s = _internal_mutable_insert_after_item_id();
  // @@protoc_insertion_point(field_mutable:sync_pb.SyncEntity.insert_after_item_id)
  return _s;
}
inline const std::string& SyncEntity::_internal_insert_after_item_id() const {
  return insert_after_item_id_.Get();
}
inline void SyncEntity::_internal_set_insert_after_item_id(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  insert_after_item_id_.Set(value, GetArenaForAllocation());
}
inline std::string* SyncEntity::_internal_mutable_insert_after_item_id() {
  _has_bits_[0] |= 0x00000020u;
  return insert_after_item_id_.Mutable(GetArenaForAllocation());
}
inline std::string* SyncEntity::release_insert_after_item_id() {
  // @@protoc_insertion_point(field_release:sync_pb.SyncEntity.insert_after_item_id)
  if (!_internal_has_insert_after_item_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  auto* p = insert_after_item_id_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (insert_after_item_id_.IsDefault()) {
    insert_after_item_id_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void SyncEntity::set_allocated_insert_after_item_id(std::string* insert_after_item_id) {
  if (insert_after_item_id != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  insert_after_item_id_.SetAllocated(insert_after_item_id, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (insert_after_item_id_.IsDefault()) {
    insert_after_item_id_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SyncEntity.insert_after_item_id)
}

// optional bool deleted = 18 [default = false];
inline bool SyncEntity::_internal_has_deleted() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool SyncEntity::has_deleted() const {
  return _internal_has_deleted();
}
inline void SyncEntity::clear_deleted() {
  deleted_ = false;
  _has_bits_[0] &= ~0x00008000u;
}
inline bool SyncEntity::_internal_deleted() const {
  return deleted_;
}
inline bool SyncEntity::deleted() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncEntity.deleted)
  return _internal_deleted();
}
inline void SyncEntity::_internal_set_deleted(bool value) {
  _has_bits_[0] |= 0x00008000u;
  deleted_ = value;
}
inline void SyncEntity::set_deleted(bool value) {
  _internal_set_deleted(value);
  // @@protoc_insertion_point(field_set:sync_pb.SyncEntity.deleted)
}

// optional string originator_cache_guid = 19;
inline bool SyncEntity::_internal_has_originator_cache_guid() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool SyncEntity::has_originator_cache_guid() const {
  return _internal_has_originator_cache_guid();
}
inline void SyncEntity::clear_originator_cache_guid() {
  originator_cache_guid_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000040u;
}
inline const std::string& SyncEntity::originator_cache_guid() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncEntity.originator_cache_guid)
  return _internal_originator_cache_guid();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void SyncEntity::set_originator_cache_guid(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000040u;
 originator_cache_guid_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:sync_pb.SyncEntity.originator_cache_guid)
}
inline std::string* SyncEntity::mutable_originator_cache_guid() {
  std::string* _s = _internal_mutable_originator_cache_guid();
  // @@protoc_insertion_point(field_mutable:sync_pb.SyncEntity.originator_cache_guid)
  return _s;
}
inline const std::string& SyncEntity::_internal_originator_cache_guid() const {
  return originator_cache_guid_.Get();
}
inline void SyncEntity::_internal_set_originator_cache_guid(const std::string& value) {
  _has_bits_[0] |= 0x00000040u;
  originator_cache_guid_.Set(value, GetArenaForAllocation());
}
inline std::string* SyncEntity::_internal_mutable_originator_cache_guid() {
  _has_bits_[0] |= 0x00000040u;
  return originator_cache_guid_.Mutable(GetArenaForAllocation());
}
inline std::string* SyncEntity::release_originator_cache_guid() {
  // @@protoc_insertion_point(field_release:sync_pb.SyncEntity.originator_cache_guid)
  if (!_internal_has_originator_cache_guid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000040u;
  auto* p = originator_cache_guid_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (originator_cache_guid_.IsDefault()) {
    originator_cache_guid_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void SyncEntity::set_allocated_originator_cache_guid(std::string* originator_cache_guid) {
  if (originator_cache_guid != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  originator_cache_guid_.SetAllocated(originator_cache_guid, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (originator_cache_guid_.IsDefault()) {
    originator_cache_guid_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SyncEntity.originator_cache_guid)
}

// optional string originator_client_item_id = 20;
inline bool SyncEntity::_internal_has_originator_client_item_id() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool SyncEntity::has_originator_client_item_id() const {
  return _internal_has_originator_client_item_id();
}
inline void SyncEntity::clear_originator_client_item_id() {
  originator_client_item_id_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000080u;
}
inline const std::string& SyncEntity::originator_client_item_id() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncEntity.originator_client_item_id)
  return _internal_originator_client_item_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void SyncEntity::set_originator_client_item_id(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000080u;
 originator_client_item_id_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:sync_pb.SyncEntity.originator_client_item_id)
}
inline std::string* SyncEntity::mutable_originator_client_item_id() {
  std::string* _s = _internal_mutable_originator_client_item_id();
  // @@protoc_insertion_point(field_mutable:sync_pb.SyncEntity.originator_client_item_id)
  return _s;
}
inline const std::string& SyncEntity::_internal_originator_client_item_id() const {
  return originator_client_item_id_.Get();
}
inline void SyncEntity::_internal_set_originator_client_item_id(const std::string& value) {
  _has_bits_[0] |= 0x00000080u;
  originator_client_item_id_.Set(value, GetArenaForAllocation());
}
inline std::string* SyncEntity::_internal_mutable_originator_client_item_id() {
  _has_bits_[0] |= 0x00000080u;
  return originator_client_item_id_.Mutable(GetArenaForAllocation());
}
inline std::string* SyncEntity::release_originator_client_item_id() {
  // @@protoc_insertion_point(field_release:sync_pb.SyncEntity.originator_client_item_id)
  if (!_internal_has_originator_client_item_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000080u;
  auto* p = originator_client_item_id_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (originator_client_item_id_.IsDefault()) {
    originator_client_item_id_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void SyncEntity::set_allocated_originator_client_item_id(std::string* originator_client_item_id) {
  if (originator_client_item_id != nullptr) {
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  originator_client_item_id_.SetAllocated(originator_client_item_id, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (originator_client_item_id_.IsDefault()) {
    originator_client_item_id_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SyncEntity.originator_client_item_id)
}

// optional .sync_pb.EntitySpecifics specifics = 21;
inline bool SyncEntity::_internal_has_specifics() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || specifics_ != nullptr);
  return value;
}
inline bool SyncEntity::has_specifics() const {
  return _internal_has_specifics();
}
inline const ::sync_pb::EntitySpecifics& SyncEntity::_internal_specifics() const {
  const ::sync_pb::EntitySpecifics* p = specifics_;
  return p != nullptr ? *p : reinterpret_cast<const ::sync_pb::EntitySpecifics&>(
      ::sync_pb::_EntitySpecifics_default_instance_);
}
inline const ::sync_pb::EntitySpecifics& SyncEntity::specifics() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncEntity.specifics)
  return _internal_specifics();
}
inline void SyncEntity::unsafe_arena_set_allocated_specifics(
    ::sync_pb::EntitySpecifics* specifics) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(specifics_);
  }
  specifics_ = specifics;
  if (specifics) {
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sync_pb.SyncEntity.specifics)
}
inline ::sync_pb::EntitySpecifics* SyncEntity::release_specifics() {
  _has_bits_[0] &= ~0x00000200u;
  ::sync_pb::EntitySpecifics* temp = specifics_;
  specifics_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::sync_pb::EntitySpecifics* SyncEntity::unsafe_arena_release_specifics() {
  // @@protoc_insertion_point(field_release:sync_pb.SyncEntity.specifics)
  _has_bits_[0] &= ~0x00000200u;
  ::sync_pb::EntitySpecifics* temp = specifics_;
  specifics_ = nullptr;
  return temp;
}
inline ::sync_pb::EntitySpecifics* SyncEntity::_internal_mutable_specifics() {
  _has_bits_[0] |= 0x00000200u;
  if (specifics_ == nullptr) {
    auto* p = CreateMaybeMessage<::sync_pb::EntitySpecifics>(GetArenaForAllocation());
    specifics_ = p;
  }
  return specifics_;
}
inline ::sync_pb::EntitySpecifics* SyncEntity::mutable_specifics() {
  ::sync_pb::EntitySpecifics* _msg = _internal_mutable_specifics();
  // @@protoc_insertion_point(field_mutable:sync_pb.SyncEntity.specifics)
  return _msg;
}
inline void SyncEntity::set_allocated_specifics(::sync_pb::EntitySpecifics* specifics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(specifics_);
  }
  if (specifics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(specifics));
    if (message_arena != submessage_arena) {
      specifics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, specifics, submessage_arena);
    }
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  specifics_ = specifics;
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SyncEntity.specifics)
}

// optional bool folder = 22 [default = false];
inline bool SyncEntity::_internal_has_folder() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool SyncEntity::has_folder() const {
  return _internal_has_folder();
}
inline void SyncEntity::clear_folder() {
  folder_ = false;
  _has_bits_[0] &= ~0x00010000u;
}
inline bool SyncEntity::_internal_folder() const {
  return folder_;
}
inline bool SyncEntity::folder() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncEntity.folder)
  return _internal_folder();
}
inline void SyncEntity::_internal_set_folder(bool value) {
  _has_bits_[0] |= 0x00010000u;
  folder_ = value;
}
inline void SyncEntity::set_folder(bool value) {
  _internal_set_folder(value);
  // @@protoc_insertion_point(field_set:sync_pb.SyncEntity.folder)
}

// optional string client_defined_unique_tag = 23;
inline bool SyncEntity::_internal_has_client_defined_unique_tag() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool SyncEntity::has_client_defined_unique_tag() const {
  return _internal_has_client_defined_unique_tag();
}
inline void SyncEntity::clear_client_defined_unique_tag() {
  client_defined_unique_tag_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000100u;
}
inline const std::string& SyncEntity::client_defined_unique_tag() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncEntity.client_defined_unique_tag)
  return _internal_client_defined_unique_tag();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void SyncEntity::set_client_defined_unique_tag(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000100u;
 client_defined_unique_tag_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:sync_pb.SyncEntity.client_defined_unique_tag)
}
inline std::string* SyncEntity::mutable_client_defined_unique_tag() {
  std::string* _s = _internal_mutable_client_defined_unique_tag();
  // @@protoc_insertion_point(field_mutable:sync_pb.SyncEntity.client_defined_unique_tag)
  return _s;
}
inline const std::string& SyncEntity::_internal_client_defined_unique_tag() const {
  return client_defined_unique_tag_.Get();
}
inline void SyncEntity::_internal_set_client_defined_unique_tag(const std::string& value) {
  _has_bits_[0] |= 0x00000100u;
  client_defined_unique_tag_.Set(value, GetArenaForAllocation());
}
inline std::string* SyncEntity::_internal_mutable_client_defined_unique_tag() {
  _has_bits_[0] |= 0x00000100u;
  return client_defined_unique_tag_.Mutable(GetArenaForAllocation());
}
inline std::string* SyncEntity::release_client_defined_unique_tag() {
  // @@protoc_insertion_point(field_release:sync_pb.SyncEntity.client_defined_unique_tag)
  if (!_internal_has_client_defined_unique_tag()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000100u;
  auto* p = client_defined_unique_tag_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (client_defined_unique_tag_.IsDefault()) {
    client_defined_unique_tag_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void SyncEntity::set_allocated_client_defined_unique_tag(std::string* client_defined_unique_tag) {
  if (client_defined_unique_tag != nullptr) {
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  client_defined_unique_tag_.SetAllocated(client_defined_unique_tag, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (client_defined_unique_tag_.IsDefault()) {
    client_defined_unique_tag_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SyncEntity.client_defined_unique_tag)
}

// optional .sync_pb.UniquePosition unique_position = 25;
inline bool SyncEntity::_internal_has_unique_position() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  PROTOBUF_ASSUME(!value || unique_position_ != nullptr);
  return value;
}
inline bool SyncEntity::has_unique_position() const {
  return _internal_has_unique_position();
}
inline const ::sync_pb::UniquePosition& SyncEntity::_internal_unique_position() const {
  const ::sync_pb::UniquePosition* p = unique_position_;
  return p != nullptr ? *p : reinterpret_cast<const ::sync_pb::UniquePosition&>(
      ::sync_pb::_UniquePosition_default_instance_);
}
inline const ::sync_pb::UniquePosition& SyncEntity::unique_position() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncEntity.unique_position)
  return _internal_unique_position();
}
inline void SyncEntity::unsafe_arena_set_allocated_unique_position(
    ::sync_pb::UniquePosition* unique_position) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(unique_position_);
  }
  unique_position_ = unique_position;
  if (unique_position) {
    _has_bits_[0] |= 0x00000400u;
  } else {
    _has_bits_[0] &= ~0x00000400u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sync_pb.SyncEntity.unique_position)
}
inline ::sync_pb::UniquePosition* SyncEntity::release_unique_position() {
  _has_bits_[0] &= ~0x00000400u;
  ::sync_pb::UniquePosition* temp = unique_position_;
  unique_position_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::sync_pb::UniquePosition* SyncEntity::unsafe_arena_release_unique_position() {
  // @@protoc_insertion_point(field_release:sync_pb.SyncEntity.unique_position)
  _has_bits_[0] &= ~0x00000400u;
  ::sync_pb::UniquePosition* temp = unique_position_;
  unique_position_ = nullptr;
  return temp;
}
inline ::sync_pb::UniquePosition* SyncEntity::_internal_mutable_unique_position() {
  _has_bits_[0] |= 0x00000400u;
  if (unique_position_ == nullptr) {
    auto* p = CreateMaybeMessage<::sync_pb::UniquePosition>(GetArenaForAllocation());
    unique_position_ = p;
  }
  return unique_position_;
}
inline ::sync_pb::UniquePosition* SyncEntity::mutable_unique_position() {
  ::sync_pb::UniquePosition* _msg = _internal_mutable_unique_position();
  // @@protoc_insertion_point(field_mutable:sync_pb.SyncEntity.unique_position)
  return _msg;
}
inline void SyncEntity::set_allocated_unique_position(::sync_pb::UniquePosition* unique_position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(unique_position_);
  }
  if (unique_position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(unique_position));
    if (message_arena != submessage_arena) {
      unique_position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, unique_position, submessage_arena);
    }
    _has_bits_[0] |= 0x00000400u;
  } else {
    _has_bits_[0] &= ~0x00000400u;
  }
  unique_position_ = unique_position;
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SyncEntity.unique_position)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace sync_pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_components_2fsync_2fprotocol_2fsync_5fentity_2eproto
