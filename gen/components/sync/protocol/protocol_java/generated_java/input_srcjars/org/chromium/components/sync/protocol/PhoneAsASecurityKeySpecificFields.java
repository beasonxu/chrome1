// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/device_info_specifics.proto

package org.chromium.components.sync.protocol;

/**
 * Protobuf type {@code sync_pb.PhoneAsASecurityKeySpecificFields}
 */
public  final class PhoneAsASecurityKeySpecificFields extends
    com.google.protobuf.GeneratedMessageLite<
        PhoneAsASecurityKeySpecificFields, PhoneAsASecurityKeySpecificFields.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.PhoneAsASecurityKeySpecificFields)
    PhoneAsASecurityKeySpecificFieldsOrBuilder {
  private PhoneAsASecurityKeySpecificFields() {
    contactId_ = com.google.protobuf.ByteString.EMPTY;
    secret_ = com.google.protobuf.ByteString.EMPTY;
    peerPublicKeyX962_ = com.google.protobuf.ByteString.EMPTY;
  }
  private int bitField0_;
  public static final int TUNNEL_SERVER_DOMAIN_FIELD_NUMBER = 1;
  private int tunnelServerDomain_;
  /**
   * <pre>
   * The encoded tunnel server in the same format as in the BLE advert. See
   * device::cablev2::tunnelserver::DecodeDomain. (Actually a uint16 but
   * proto doesn't have that as a type.)
   * </pre>
   *
   * <code>optional uint32 tunnel_server_domain = 1;</code>
   * @return Whether the tunnelServerDomain field is set.
   */
  @java.lang.Override
  public boolean hasTunnelServerDomain() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The encoded tunnel server in the same format as in the BLE advert. See
   * device::cablev2::tunnelserver::DecodeDomain. (Actually a uint16 but
   * proto doesn't have that as a type.)
   * </pre>
   *
   * <code>optional uint32 tunnel_server_domain = 1;</code>
   * @return The tunnelServerDomain.
   */
  @java.lang.Override
  public int getTunnelServerDomain() {
    return tunnelServerDomain_;
  }
  /**
   * <pre>
   * The encoded tunnel server in the same format as in the BLE advert. See
   * device::cablev2::tunnelserver::DecodeDomain. (Actually a uint16 but
   * proto doesn't have that as a type.)
   * </pre>
   *
   * <code>optional uint32 tunnel_server_domain = 1;</code>
   * @param value The tunnelServerDomain to set.
   */
  private void setTunnelServerDomain(int value) {
    bitField0_ |= 0x00000001;
    tunnelServerDomain_ = value;
  }
  /**
   * <pre>
   * The encoded tunnel server in the same format as in the BLE advert. See
   * device::cablev2::tunnelserver::DecodeDomain. (Actually a uint16 but
   * proto doesn't have that as a type.)
   * </pre>
   *
   * <code>optional uint32 tunnel_server_domain = 1;</code>
   */
  private void clearTunnelServerDomain() {
    bitField0_ = (bitField0_ & ~0x00000001);
    tunnelServerDomain_ = 0;
  }

  public static final int CONTACT_ID_FIELD_NUMBER = 2;
  private com.google.protobuf.ByteString contactId_;
  /**
   * <pre>
   * An FCM token that can be presented to the tunnel server to contact this
   * device.
   * </pre>
   *
   * <code>optional bytes contact_id = 2;</code>
   * @return Whether the contactId field is set.
   */
  @java.lang.Override
  public boolean hasContactId() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * An FCM token that can be presented to the tunnel server to contact this
   * device.
   * </pre>
   *
   * <code>optional bytes contact_id = 2;</code>
   * @return The contactId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getContactId() {
    return contactId_;
  }
  /**
   * <pre>
   * An FCM token that can be presented to the tunnel server to contact this
   * device.
   * </pre>
   *
   * <code>optional bytes contact_id = 2;</code>
   * @param value The contactId to set.
   */
  private void setContactId(com.google.protobuf.ByteString value) {
    value.getClass();
  bitField0_ |= 0x00000002;
    contactId_ = value;
  }
  /**
   * <pre>
   * An FCM token that can be presented to the tunnel server to contact this
   * device.
   * </pre>
   *
   * <code>optional bytes contact_id = 2;</code>
   */
  private void clearContactId() {
    bitField0_ = (bitField0_ & ~0x00000002);
    contactId_ = getDefaultInstance().getContactId();
  }

  public static final int SECRET_FIELD_NUMBER = 3;
  private com.google.protobuf.ByteString secret_;
  /**
   * <pre>
   * A shared secret key, used to enable communication across devices via
   * unauthenticated channels. Knowledge of this secret acts as proof that the
   * remote end is authorized to talk to the device publishing this secret.
   * </pre>
   *
   * <code>optional bytes secret = 3;</code>
   * @return Whether the secret field is set.
   */
  @java.lang.Override
  public boolean hasSecret() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * A shared secret key, used to enable communication across devices via
   * unauthenticated channels. Knowledge of this secret acts as proof that the
   * remote end is authorized to talk to the device publishing this secret.
   * </pre>
   *
   * <code>optional bytes secret = 3;</code>
   * @return The secret.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getSecret() {
    return secret_;
  }
  /**
   * <pre>
   * A shared secret key, used to enable communication across devices via
   * unauthenticated channels. Knowledge of this secret acts as proof that the
   * remote end is authorized to talk to the device publishing this secret.
   * </pre>
   *
   * <code>optional bytes secret = 3;</code>
   * @param value The secret to set.
   */
  private void setSecret(com.google.protobuf.ByteString value) {
    value.getClass();
  bitField0_ |= 0x00000004;
    secret_ = value;
  }
  /**
   * <pre>
   * A shared secret key, used to enable communication across devices via
   * unauthenticated channels. Knowledge of this secret acts as proof that the
   * remote end is authorized to talk to the device publishing this secret.
   * </pre>
   *
   * <code>optional bytes secret = 3;</code>
   */
  private void clearSecret() {
    bitField0_ = (bitField0_ & ~0x00000004);
    secret_ = getDefaultInstance().getSecret();
  }

  public static final int ID_FIELD_NUMBER = 4;
  private int id_;
  /**
   * <pre>
   * An id that identifies |secret|. This, and |secret|, will be rotated and
   * the ID allows this device to know which |secret| the counterparty is
   * using.
   * </pre>
   *
   * <code>optional fixed32 id = 4;</code>
   * @return Whether the id field is set.
   */
  @java.lang.Override
  public boolean hasId() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * An id that identifies |secret|. This, and |secret|, will be rotated and
   * the ID allows this device to know which |secret| the counterparty is
   * using.
   * </pre>
   *
   * <code>optional fixed32 id = 4;</code>
   * @return The id.
   */
  @java.lang.Override
  public int getId() {
    return id_;
  }
  /**
   * <pre>
   * An id that identifies |secret|. This, and |secret|, will be rotated and
   * the ID allows this device to know which |secret| the counterparty is
   * using.
   * </pre>
   *
   * <code>optional fixed32 id = 4;</code>
   * @param value The id to set.
   */
  private void setId(int value) {
    bitField0_ |= 0x00000008;
    id_ = value;
  }
  /**
   * <pre>
   * An id that identifies |secret|. This, and |secret|, will be rotated and
   * the ID allows this device to know which |secret| the counterparty is
   * using.
   * </pre>
   *
   * <code>optional fixed32 id = 4;</code>
   */
  private void clearId() {
    bitField0_ = (bitField0_ & ~0x00000008);
    id_ = 0;
  }

  public static final int PEER_PUBLIC_KEY_X962_FIELD_NUMBER = 5;
  private com.google.protobuf.ByteString peerPublicKeyX962_;
  /**
   * <pre>
   * A P-256, X9.62-encoded public key for this device. Specific to the Chrome
   * instance.
   * </pre>
   *
   * <code>optional bytes peer_public_key_x962 = 5;</code>
   * @return Whether the peerPublicKeyX962 field is set.
   */
  @java.lang.Override
  public boolean hasPeerPublicKeyX962() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * A P-256, X9.62-encoded public key for this device. Specific to the Chrome
   * instance.
   * </pre>
   *
   * <code>optional bytes peer_public_key_x962 = 5;</code>
   * @return The peerPublicKeyX962.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getPeerPublicKeyX962() {
    return peerPublicKeyX962_;
  }
  /**
   * <pre>
   * A P-256, X9.62-encoded public key for this device. Specific to the Chrome
   * instance.
   * </pre>
   *
   * <code>optional bytes peer_public_key_x962 = 5;</code>
   * @param value The peerPublicKeyX962 to set.
   */
  private void setPeerPublicKeyX962(com.google.protobuf.ByteString value) {
    value.getClass();
  bitField0_ |= 0x00000010;
    peerPublicKeyX962_ = value;
  }
  /**
   * <pre>
   * A P-256, X9.62-encoded public key for this device. Specific to the Chrome
   * instance.
   * </pre>
   *
   * <code>optional bytes peer_public_key_x962 = 5;</code>
   */
  private void clearPeerPublicKeyX962() {
    bitField0_ = (bitField0_ & ~0x00000010);
    peerPublicKeyX962_ = getDefaultInstance().getPeerPublicKeyX962();
  }

  public static org.chromium.components.sync.protocol.PhoneAsASecurityKeySpecificFields parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.PhoneAsASecurityKeySpecificFields parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.PhoneAsASecurityKeySpecificFields parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.PhoneAsASecurityKeySpecificFields parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.PhoneAsASecurityKeySpecificFields parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.PhoneAsASecurityKeySpecificFields parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.PhoneAsASecurityKeySpecificFields parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.PhoneAsASecurityKeySpecificFields parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.PhoneAsASecurityKeySpecificFields parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.PhoneAsASecurityKeySpecificFields parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.PhoneAsASecurityKeySpecificFields parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.PhoneAsASecurityKeySpecificFields parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.PhoneAsASecurityKeySpecificFields prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code sync_pb.PhoneAsASecurityKeySpecificFields}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.PhoneAsASecurityKeySpecificFields, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.PhoneAsASecurityKeySpecificFields)
      org.chromium.components.sync.protocol.PhoneAsASecurityKeySpecificFieldsOrBuilder {
    // Construct using org.chromium.components.sync.protocol.PhoneAsASecurityKeySpecificFields.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The encoded tunnel server in the same format as in the BLE advert. See
     * device::cablev2::tunnelserver::DecodeDomain. (Actually a uint16 but
     * proto doesn't have that as a type.)
     * </pre>
     *
     * <code>optional uint32 tunnel_server_domain = 1;</code>
     * @return Whether the tunnelServerDomain field is set.
     */
    @java.lang.Override
    public boolean hasTunnelServerDomain() {
      return instance.hasTunnelServerDomain();
    }
    /**
     * <pre>
     * The encoded tunnel server in the same format as in the BLE advert. See
     * device::cablev2::tunnelserver::DecodeDomain. (Actually a uint16 but
     * proto doesn't have that as a type.)
     * </pre>
     *
     * <code>optional uint32 tunnel_server_domain = 1;</code>
     * @return The tunnelServerDomain.
     */
    @java.lang.Override
    public int getTunnelServerDomain() {
      return instance.getTunnelServerDomain();
    }
    /**
     * <pre>
     * The encoded tunnel server in the same format as in the BLE advert. See
     * device::cablev2::tunnelserver::DecodeDomain. (Actually a uint16 but
     * proto doesn't have that as a type.)
     * </pre>
     *
     * <code>optional uint32 tunnel_server_domain = 1;</code>
     * @param value The tunnelServerDomain to set.
     * @return This builder for chaining.
     */
    public Builder setTunnelServerDomain(int value) {
      copyOnWrite();
      instance.setTunnelServerDomain(value);
      return this;
    }
    /**
     * <pre>
     * The encoded tunnel server in the same format as in the BLE advert. See
     * device::cablev2::tunnelserver::DecodeDomain. (Actually a uint16 but
     * proto doesn't have that as a type.)
     * </pre>
     *
     * <code>optional uint32 tunnel_server_domain = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTunnelServerDomain() {
      copyOnWrite();
      instance.clearTunnelServerDomain();
      return this;
    }

    /**
     * <pre>
     * An FCM token that can be presented to the tunnel server to contact this
     * device.
     * </pre>
     *
     * <code>optional bytes contact_id = 2;</code>
     * @return Whether the contactId field is set.
     */
    @java.lang.Override
    public boolean hasContactId() {
      return instance.hasContactId();
    }
    /**
     * <pre>
     * An FCM token that can be presented to the tunnel server to contact this
     * device.
     * </pre>
     *
     * <code>optional bytes contact_id = 2;</code>
     * @return The contactId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getContactId() {
      return instance.getContactId();
    }
    /**
     * <pre>
     * An FCM token that can be presented to the tunnel server to contact this
     * device.
     * </pre>
     *
     * <code>optional bytes contact_id = 2;</code>
     * @param value The contactId to set.
     * @return This builder for chaining.
     */
    public Builder setContactId(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setContactId(value);
      return this;
    }
    /**
     * <pre>
     * An FCM token that can be presented to the tunnel server to contact this
     * device.
     * </pre>
     *
     * <code>optional bytes contact_id = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearContactId() {
      copyOnWrite();
      instance.clearContactId();
      return this;
    }

    /**
     * <pre>
     * A shared secret key, used to enable communication across devices via
     * unauthenticated channels. Knowledge of this secret acts as proof that the
     * remote end is authorized to talk to the device publishing this secret.
     * </pre>
     *
     * <code>optional bytes secret = 3;</code>
     * @return Whether the secret field is set.
     */
    @java.lang.Override
    public boolean hasSecret() {
      return instance.hasSecret();
    }
    /**
     * <pre>
     * A shared secret key, used to enable communication across devices via
     * unauthenticated channels. Knowledge of this secret acts as proof that the
     * remote end is authorized to talk to the device publishing this secret.
     * </pre>
     *
     * <code>optional bytes secret = 3;</code>
     * @return The secret.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSecret() {
      return instance.getSecret();
    }
    /**
     * <pre>
     * A shared secret key, used to enable communication across devices via
     * unauthenticated channels. Knowledge of this secret acts as proof that the
     * remote end is authorized to talk to the device publishing this secret.
     * </pre>
     *
     * <code>optional bytes secret = 3;</code>
     * @param value The secret to set.
     * @return This builder for chaining.
     */
    public Builder setSecret(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setSecret(value);
      return this;
    }
    /**
     * <pre>
     * A shared secret key, used to enable communication across devices via
     * unauthenticated channels. Knowledge of this secret acts as proof that the
     * remote end is authorized to talk to the device publishing this secret.
     * </pre>
     *
     * <code>optional bytes secret = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearSecret() {
      copyOnWrite();
      instance.clearSecret();
      return this;
    }

    /**
     * <pre>
     * An id that identifies |secret|. This, and |secret|, will be rotated and
     * the ID allows this device to know which |secret| the counterparty is
     * using.
     * </pre>
     *
     * <code>optional fixed32 id = 4;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return instance.hasId();
    }
    /**
     * <pre>
     * An id that identifies |secret|. This, and |secret|, will be rotated and
     * the ID allows this device to know which |secret| the counterparty is
     * using.
     * </pre>
     *
     * <code>optional fixed32 id = 4;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return instance.getId();
    }
    /**
     * <pre>
     * An id that identifies |secret|. This, and |secret|, will be rotated and
     * the ID allows this device to know which |secret| the counterparty is
     * using.
     * </pre>
     *
     * <code>optional fixed32 id = 4;</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(int value) {
      copyOnWrite();
      instance.setId(value);
      return this;
    }
    /**
     * <pre>
     * An id that identifies |secret|. This, and |secret|, will be rotated and
     * the ID allows this device to know which |secret| the counterparty is
     * using.
     * </pre>
     *
     * <code>optional fixed32 id = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      copyOnWrite();
      instance.clearId();
      return this;
    }

    /**
     * <pre>
     * A P-256, X9.62-encoded public key for this device. Specific to the Chrome
     * instance.
     * </pre>
     *
     * <code>optional bytes peer_public_key_x962 = 5;</code>
     * @return Whether the peerPublicKeyX962 field is set.
     */
    @java.lang.Override
    public boolean hasPeerPublicKeyX962() {
      return instance.hasPeerPublicKeyX962();
    }
    /**
     * <pre>
     * A P-256, X9.62-encoded public key for this device. Specific to the Chrome
     * instance.
     * </pre>
     *
     * <code>optional bytes peer_public_key_x962 = 5;</code>
     * @return The peerPublicKeyX962.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPeerPublicKeyX962() {
      return instance.getPeerPublicKeyX962();
    }
    /**
     * <pre>
     * A P-256, X9.62-encoded public key for this device. Specific to the Chrome
     * instance.
     * </pre>
     *
     * <code>optional bytes peer_public_key_x962 = 5;</code>
     * @param value The peerPublicKeyX962 to set.
     * @return This builder for chaining.
     */
    public Builder setPeerPublicKeyX962(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setPeerPublicKeyX962(value);
      return this;
    }
    /**
     * <pre>
     * A P-256, X9.62-encoded public key for this device. Specific to the Chrome
     * instance.
     * </pre>
     *
     * <code>optional bytes peer_public_key_x962 = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearPeerPublicKeyX962() {
      copyOnWrite();
      instance.clearPeerPublicKeyX962();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.PhoneAsASecurityKeySpecificFields)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.PhoneAsASecurityKeySpecificFields();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "tunnelServerDomain_",
            "contactId_",
            "secret_",
            "id_",
            "peerPublicKeyX962_",
          };
          java.lang.String info =
              "\u0001\u0005\u0000\u0001\u0001\u0005\u0005\u0000\u0000\u0000\u0001\u100b\u0000\u0002" +
              "\u100a\u0001\u0003\u100a\u0002\u0004\u1006\u0003\u0005\u100a\u0004";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.components.sync.protocol.PhoneAsASecurityKeySpecificFields> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.components.sync.protocol.PhoneAsASecurityKeySpecificFields.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.PhoneAsASecurityKeySpecificFields>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.PhoneAsASecurityKeySpecificFields)
  private static final org.chromium.components.sync.protocol.PhoneAsASecurityKeySpecificFields DEFAULT_INSTANCE;
  static {
    PhoneAsASecurityKeySpecificFields defaultInstance = new PhoneAsASecurityKeySpecificFields();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      PhoneAsASecurityKeySpecificFields.class, defaultInstance);
  }

  public static org.chromium.components.sync.protocol.PhoneAsASecurityKeySpecificFields getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<PhoneAsASecurityKeySpecificFields> PARSER;

  public static com.google.protobuf.Parser<PhoneAsASecurityKeySpecificFields> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

