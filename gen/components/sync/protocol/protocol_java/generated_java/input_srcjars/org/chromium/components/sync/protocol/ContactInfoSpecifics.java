// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/contact_info_specifics.proto

package org.chromium.components.sync.protocol;

/**
 * Protobuf type {@code sync_pb.ContactInfoSpecifics}
 */
public  final class ContactInfoSpecifics extends
    com.google.protobuf.GeneratedMessageLite<
        ContactInfoSpecifics, ContactInfoSpecifics.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.ContactInfoSpecifics)
    ContactInfoSpecificsOrBuilder {
  private ContactInfoSpecifics() {
    guid_ = "";
    source_ = "";
    profileLabel_ = "";
  }
  /**
   * <pre>
   * Represents the validation status of a stored value.
   * </pre>
   *
   * Protobuf enum {@code sync_pb.ContactInfoSpecifics.VerificationStatus}
   */
  public enum VerificationStatus
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * No verification status assigned.
     * </pre>
     *
     * <code>VERIFICATION_STATUS_UNSPECIFIED = 0;</code>
     */
    VERIFICATION_STATUS_UNSPECIFIED(0),
    /**
     * <pre>
     * The value token was parsed from a parent token.
     * For example, the first name was derived by splitting a full name into
     * its components.
     * </pre>
     *
     * <code>PARSED = 1;</code>
     */
    PARSED(1),
    /**
     * <pre>
     * Value was built from its subcomponents.
     * For example, the full name was built from the first, middle and last
     * name.
     * </pre>
     *
     * <code>FORMATTED = 2;</code>
     */
    FORMATTED(2),
    /**
     * <pre>
     * The value was observed in a form transmission.
     * For example, the user filled a form that contained at NAME_FULL field.
     * The value of NAME_FULL will be stored as OBSERVED.
     * </pre>
     *
     * <code>OBSERVED = 3;</code>
     */
    OBSERVED(3),
    /**
     * <pre>
     * The user used the settings UI to verify and store this token.
     * This is currently only applicable to the full name, since users cannot
     * edit individual components of their name.
     * </pre>
     *
     * <code>USER_VERIFIED = 4;</code>
     */
    USER_VERIFIED(4),
    /**
     * <pre>
     * The token was parsed remotely.
     * </pre>
     *
     * <code>SERVER_PARSED = 5;</code>
     */
    SERVER_PARSED(5),
    ;

    /**
     * <pre>
     * No verification status assigned.
     * </pre>
     *
     * <code>VERIFICATION_STATUS_UNSPECIFIED = 0;</code>
     */
    public static final int VERIFICATION_STATUS_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * The value token was parsed from a parent token.
     * For example, the first name was derived by splitting a full name into
     * its components.
     * </pre>
     *
     * <code>PARSED = 1;</code>
     */
    public static final int PARSED_VALUE = 1;
    /**
     * <pre>
     * Value was built from its subcomponents.
     * For example, the full name was built from the first, middle and last
     * name.
     * </pre>
     *
     * <code>FORMATTED = 2;</code>
     */
    public static final int FORMATTED_VALUE = 2;
    /**
     * <pre>
     * The value was observed in a form transmission.
     * For example, the user filled a form that contained at NAME_FULL field.
     * The value of NAME_FULL will be stored as OBSERVED.
     * </pre>
     *
     * <code>OBSERVED = 3;</code>
     */
    public static final int OBSERVED_VALUE = 3;
    /**
     * <pre>
     * The user used the settings UI to verify and store this token.
     * This is currently only applicable to the full name, since users cannot
     * edit individual components of their name.
     * </pre>
     *
     * <code>USER_VERIFIED = 4;</code>
     */
    public static final int USER_VERIFIED_VALUE = 4;
    /**
     * <pre>
     * The token was parsed remotely.
     * </pre>
     *
     * <code>SERVER_PARSED = 5;</code>
     */
    public static final int SERVER_PARSED_VALUE = 5;


    @java.lang.Override
    public final int getNumber() {
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static VerificationStatus valueOf(int value) {
      return forNumber(value);
    }

    public static VerificationStatus forNumber(int value) {
      switch (value) {
        case 0: return VERIFICATION_STATUS_UNSPECIFIED;
        case 1: return PARSED;
        case 2: return FORMATTED;
        case 3: return OBSERVED;
        case 4: return USER_VERIFIED;
        case 5: return SERVER_PARSED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<VerificationStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        VerificationStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<VerificationStatus>() {
            @java.lang.Override
            public VerificationStatus findValueByNumber(int number) {
              return VerificationStatus.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return VerificationStatusVerifier.INSTANCE;
    }

    private static final class VerificationStatusVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new VerificationStatusVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return VerificationStatus.forNumber(number) != null;
            }
          };

    private final int value;

    private VerificationStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sync_pb.ContactInfoSpecifics.VerificationStatus)
  }

  public interface TokenMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sync_pb.ContactInfoSpecifics.TokenMetadata)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.VerificationStatus status = 1;</code>
     * @return Whether the status field is set.
     */
    boolean hasStatus();
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.VerificationStatus status = 1;</code>
     * @return The status.
     */
    org.chromium.components.sync.protocol.ContactInfoSpecifics.VerificationStatus getStatus();
  }
  /**
   * <pre>
   * Metadata that is attached to every token type.
   * </pre>
   *
   * Protobuf type {@code sync_pb.ContactInfoSpecifics.TokenMetadata}
   */
  public  static final class TokenMetadata extends
      com.google.protobuf.GeneratedMessageLite<
          TokenMetadata, TokenMetadata.Builder> implements
      // @@protoc_insertion_point(message_implements:sync_pb.ContactInfoSpecifics.TokenMetadata)
      TokenMetadataOrBuilder {
    private TokenMetadata() {
    }
    private int bitField0_;
    public static final int STATUS_FIELD_NUMBER = 1;
    private int status_;
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.VerificationStatus status = 1;</code>
     * @return Whether the status field is set.
     */
    @java.lang.Override
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.VerificationStatus status = 1;</code>
     * @return The status.
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.VerificationStatus getStatus() {
      org.chromium.components.sync.protocol.ContactInfoSpecifics.VerificationStatus result = org.chromium.components.sync.protocol.ContactInfoSpecifics.VerificationStatus.forNumber(status_);
      return result == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.VerificationStatus.VERIFICATION_STATUS_UNSPECIFIED : result;
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.VerificationStatus status = 1;</code>
     * @param value The status to set.
     */
    private void setStatus(org.chromium.components.sync.protocol.ContactInfoSpecifics.VerificationStatus value) {
      status_ = value.getNumber();
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.VerificationStatus status = 1;</code>
     */
    private void clearStatus() {
      bitField0_ = (bitField0_ & ~0x00000001);
      status_ = 0;
    }

    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Metadata that is attached to every token type.
     * </pre>
     *
     * Protobuf type {@code sync_pb.ContactInfoSpecifics.TokenMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata, Builder> implements
        // @@protoc_insertion_point(builder_implements:sync_pb.ContactInfoSpecifics.TokenMetadata)
        org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadataOrBuilder {
      // Construct using org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .sync_pb.ContactInfoSpecifics.VerificationStatus status = 1;</code>
       * @return Whether the status field is set.
       */
      @java.lang.Override
      public boolean hasStatus() {
        return instance.hasStatus();
      }
      /**
       * <code>optional .sync_pb.ContactInfoSpecifics.VerificationStatus status = 1;</code>
       * @return The status.
       */
      @java.lang.Override
      public org.chromium.components.sync.protocol.ContactInfoSpecifics.VerificationStatus getStatus() {
        return instance.getStatus();
      }
      /**
       * <code>optional .sync_pb.ContactInfoSpecifics.VerificationStatus status = 1;</code>
       * @param value The enum numeric value on the wire for status to set.
       * @return This builder for chaining.
       */
      public Builder setStatus(org.chromium.components.sync.protocol.ContactInfoSpecifics.VerificationStatus value) {
        copyOnWrite();
        instance.setStatus(value);
        return this;
      }
      /**
       * <code>optional .sync_pb.ContactInfoSpecifics.VerificationStatus status = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatus() {
        copyOnWrite();
        instance.clearStatus();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sync_pb.ContactInfoSpecifics.TokenMetadata)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "status_",
              org.chromium.components.sync.protocol.ContactInfoSpecifics.VerificationStatus.internalGetVerifier(),
            };
            java.lang.String info =
                "\u0001\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u100c\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:sync_pb.ContactInfoSpecifics.TokenMetadata)
    private static final org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata DEFAULT_INSTANCE;
    static {
      TokenMetadata defaultInstance = new TokenMetadata();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TokenMetadata.class, defaultInstance);
    }

    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TokenMetadata> PARSER;

    public static com.google.protobuf.Parser<TokenMetadata> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StringTokenOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sync_pb.ContactInfoSpecifics.StringToken)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string value = 1;</code>
     * @return Whether the value field is set.
     */
    boolean hasValue();
    /**
     * <code>optional string value = 1;</code>
     * @return The value.
     */
    java.lang.String getValue();
    /**
     * <code>optional string value = 1;</code>
     * @return The bytes for value.
     */
    com.google.protobuf.ByteString
        getValueBytes();

    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.TokenMetadata metadata = 2;</code>
     * @return Whether the metadata field is set.
     */
    boolean hasMetadata();
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.TokenMetadata metadata = 2;</code>
     * @return The metadata.
     */
    org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata getMetadata();
  }
  /**
   * <pre>
   * A token with a string interpretation of the value.
   * </pre>
   *
   * Protobuf type {@code sync_pb.ContactInfoSpecifics.StringToken}
   */
  public  static final class StringToken extends
      com.google.protobuf.GeneratedMessageLite<
          StringToken, StringToken.Builder> implements
      // @@protoc_insertion_point(message_implements:sync_pb.ContactInfoSpecifics.StringToken)
      StringTokenOrBuilder {
    private StringToken() {
      value_ = "";
    }
    private int bitField0_;
    public static final int VALUE_FIELD_NUMBER = 1;
    private java.lang.String value_;
    /**
     * <code>optional string value = 1;</code>
     * @return Whether the value field is set.
     */
    @java.lang.Override
    public boolean hasValue() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string value = 1;</code>
     * @return The value.
     */
    @java.lang.Override
    public java.lang.String getValue() {
      return value_;
    }
    /**
     * <code>optional string value = 1;</code>
     * @return The bytes for value.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getValueBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(value_);
    }
    /**
     * <code>optional string value = 1;</code>
     * @param value The value to set.
     */
    private void setValue(
        java.lang.String value) {
      value.getClass();
  bitField0_ |= 0x00000001;
      value_ = value;
    }
    /**
     * <code>optional string value = 1;</code>
     */
    private void clearValue() {
      bitField0_ = (bitField0_ & ~0x00000001);
      value_ = getDefaultInstance().getValue();
    }
    /**
     * <code>optional string value = 1;</code>
     * @param value The bytes for value to set.
     */
    private void setValueBytes(
        com.google.protobuf.ByteString value) {
      value_ = value.toStringUtf8();
      bitField0_ |= 0x00000001;
    }

    public static final int METADATA_FIELD_NUMBER = 2;
    private org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata metadata_;
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.TokenMetadata metadata = 2;</code>
     */
    @java.lang.Override
    public boolean hasMetadata() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.TokenMetadata metadata = 2;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata getMetadata() {
      return metadata_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata.getDefaultInstance() : metadata_;
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.TokenMetadata metadata = 2;</code>
     */
    private void setMetadata(org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata value) {
      value.getClass();
  metadata_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.TokenMetadata metadata = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeMetadata(org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata value) {
      value.getClass();
  if (metadata_ != null &&
          metadata_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata.getDefaultInstance()) {
        metadata_ =
          org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata.newBuilder(metadata_).mergeFrom(value).buildPartial();
      } else {
        metadata_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.TokenMetadata metadata = 2;</code>
     */
    private void clearMetadata() {  metadata_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * A token with a string interpretation of the value.
     * </pre>
     *
     * Protobuf type {@code sync_pb.ContactInfoSpecifics.StringToken}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken, Builder> implements
        // @@protoc_insertion_point(builder_implements:sync_pb.ContactInfoSpecifics.StringToken)
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringTokenOrBuilder {
      // Construct using org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string value = 1;</code>
       * @return Whether the value field is set.
       */
      @java.lang.Override
      public boolean hasValue() {
        return instance.hasValue();
      }
      /**
       * <code>optional string value = 1;</code>
       * @return The value.
       */
      @java.lang.Override
      public java.lang.String getValue() {
        return instance.getValue();
      }
      /**
       * <code>optional string value = 1;</code>
       * @return The bytes for value.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getValueBytes() {
        return instance.getValueBytes();
      }
      /**
       * <code>optional string value = 1;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(
          java.lang.String value) {
        copyOnWrite();
        instance.setValue(value);
        return this;
      }
      /**
       * <code>optional string value = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        copyOnWrite();
        instance.clearValue();
        return this;
      }
      /**
       * <code>optional string value = 1;</code>
       * @param value The bytes for value to set.
       * @return This builder for chaining.
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setValueBytes(value);
        return this;
      }

      /**
       * <code>optional .sync_pb.ContactInfoSpecifics.TokenMetadata metadata = 2;</code>
       */
      @java.lang.Override
      public boolean hasMetadata() {
        return instance.hasMetadata();
      }
      /**
       * <code>optional .sync_pb.ContactInfoSpecifics.TokenMetadata metadata = 2;</code>
       */
      @java.lang.Override
      public org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata getMetadata() {
        return instance.getMetadata();
      }
      /**
       * <code>optional .sync_pb.ContactInfoSpecifics.TokenMetadata metadata = 2;</code>
       */
      public Builder setMetadata(org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata value) {
        copyOnWrite();
        instance.setMetadata(value);
        return this;
        }
      /**
       * <code>optional .sync_pb.ContactInfoSpecifics.TokenMetadata metadata = 2;</code>
       */
      public Builder setMetadata(
          org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata.Builder builderForValue) {
        copyOnWrite();
        instance.setMetadata(builderForValue.build());
        return this;
      }
      /**
       * <code>optional .sync_pb.ContactInfoSpecifics.TokenMetadata metadata = 2;</code>
       */
      public Builder mergeMetadata(org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata value) {
        copyOnWrite();
        instance.mergeMetadata(value);
        return this;
      }
      /**
       * <code>optional .sync_pb.ContactInfoSpecifics.TokenMetadata metadata = 2;</code>
       */
      public Builder clearMetadata() {  copyOnWrite();
        instance.clearMetadata();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sync_pb.ContactInfoSpecifics.StringToken)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "value_",
              "metadata_",
            };
            java.lang.String info =
                "\u0001\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u1008\u0000\u0002" +
                "\u1009\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:sync_pb.ContactInfoSpecifics.StringToken)
    private static final org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken DEFAULT_INSTANCE;
    static {
      StringToken defaultInstance = new StringToken();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        StringToken.class, defaultInstance);
    }

    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StringToken> PARSER;

    public static com.google.protobuf.Parser<StringToken> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IntegerTokenOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sync_pb.ContactInfoSpecifics.IntegerToken)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional int64 value = 1;</code>
     * @return Whether the value field is set.
     */
    boolean hasValue();
    /**
     * <code>optional int64 value = 1;</code>
     * @return The value.
     */
    long getValue();

    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.TokenMetadata metadata = 2;</code>
     * @return Whether the metadata field is set.
     */
    boolean hasMetadata();
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.TokenMetadata metadata = 2;</code>
     * @return The metadata.
     */
    org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata getMetadata();
  }
  /**
   * <pre>
   * A token with an integer interpretation of the value.
   * </pre>
   *
   * Protobuf type {@code sync_pb.ContactInfoSpecifics.IntegerToken}
   */
  public  static final class IntegerToken extends
      com.google.protobuf.GeneratedMessageLite<
          IntegerToken, IntegerToken.Builder> implements
      // @@protoc_insertion_point(message_implements:sync_pb.ContactInfoSpecifics.IntegerToken)
      IntegerTokenOrBuilder {
    private IntegerToken() {
    }
    private int bitField0_;
    public static final int VALUE_FIELD_NUMBER = 1;
    private long value_;
    /**
     * <code>optional int64 value = 1;</code>
     * @return Whether the value field is set.
     */
    @java.lang.Override
    public boolean hasValue() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int64 value = 1;</code>
     * @return The value.
     */
    @java.lang.Override
    public long getValue() {
      return value_;
    }
    /**
     * <code>optional int64 value = 1;</code>
     * @param value The value to set.
     */
    private void setValue(long value) {
      bitField0_ |= 0x00000001;
      value_ = value;
    }
    /**
     * <code>optional int64 value = 1;</code>
     */
    private void clearValue() {
      bitField0_ = (bitField0_ & ~0x00000001);
      value_ = 0L;
    }

    public static final int METADATA_FIELD_NUMBER = 2;
    private org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata metadata_;
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.TokenMetadata metadata = 2;</code>
     */
    @java.lang.Override
    public boolean hasMetadata() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.TokenMetadata metadata = 2;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata getMetadata() {
      return metadata_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata.getDefaultInstance() : metadata_;
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.TokenMetadata metadata = 2;</code>
     */
    private void setMetadata(org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata value) {
      value.getClass();
  metadata_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.TokenMetadata metadata = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeMetadata(org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata value) {
      value.getClass();
  if (metadata_ != null &&
          metadata_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata.getDefaultInstance()) {
        metadata_ =
          org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata.newBuilder(metadata_).mergeFrom(value).buildPartial();
      } else {
        metadata_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.TokenMetadata metadata = 2;</code>
     */
    private void clearMetadata() {  metadata_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * A token with an integer interpretation of the value.
     * </pre>
     *
     * Protobuf type {@code sync_pb.ContactInfoSpecifics.IntegerToken}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken, Builder> implements
        // @@protoc_insertion_point(builder_implements:sync_pb.ContactInfoSpecifics.IntegerToken)
        org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerTokenOrBuilder {
      // Construct using org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional int64 value = 1;</code>
       * @return Whether the value field is set.
       */
      @java.lang.Override
      public boolean hasValue() {
        return instance.hasValue();
      }
      /**
       * <code>optional int64 value = 1;</code>
       * @return The value.
       */
      @java.lang.Override
      public long getValue() {
        return instance.getValue();
      }
      /**
       * <code>optional int64 value = 1;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(long value) {
        copyOnWrite();
        instance.setValue(value);
        return this;
      }
      /**
       * <code>optional int64 value = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        copyOnWrite();
        instance.clearValue();
        return this;
      }

      /**
       * <code>optional .sync_pb.ContactInfoSpecifics.TokenMetadata metadata = 2;</code>
       */
      @java.lang.Override
      public boolean hasMetadata() {
        return instance.hasMetadata();
      }
      /**
       * <code>optional .sync_pb.ContactInfoSpecifics.TokenMetadata metadata = 2;</code>
       */
      @java.lang.Override
      public org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata getMetadata() {
        return instance.getMetadata();
      }
      /**
       * <code>optional .sync_pb.ContactInfoSpecifics.TokenMetadata metadata = 2;</code>
       */
      public Builder setMetadata(org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata value) {
        copyOnWrite();
        instance.setMetadata(value);
        return this;
        }
      /**
       * <code>optional .sync_pb.ContactInfoSpecifics.TokenMetadata metadata = 2;</code>
       */
      public Builder setMetadata(
          org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata.Builder builderForValue) {
        copyOnWrite();
        instance.setMetadata(builderForValue.build());
        return this;
      }
      /**
       * <code>optional .sync_pb.ContactInfoSpecifics.TokenMetadata metadata = 2;</code>
       */
      public Builder mergeMetadata(org.chromium.components.sync.protocol.ContactInfoSpecifics.TokenMetadata value) {
        copyOnWrite();
        instance.mergeMetadata(value);
        return this;
      }
      /**
       * <code>optional .sync_pb.ContactInfoSpecifics.TokenMetadata metadata = 2;</code>
       */
      public Builder clearMetadata() {  copyOnWrite();
        instance.clearMetadata();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sync_pb.ContactInfoSpecifics.IntegerToken)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "value_",
              "metadata_",
            };
            java.lang.String info =
                "\u0001\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u1002\u0000\u0002" +
                "\u1009\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:sync_pb.ContactInfoSpecifics.IntegerToken)
    private static final org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken DEFAULT_INSTANCE;
    static {
      IntegerToken defaultInstance = new IntegerToken();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        IntegerToken.class, defaultInstance);
    }

    public static org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<IntegerToken> PARSER;

    public static com.google.protobuf.Parser<IntegerToken> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  private int bitField0_;
  private int bitField1_;
  public static final int GUID_FIELD_NUMBER = 1;
  private java.lang.String guid_;
  /**
   * <pre>
   * A globally unique, immutable UUID represented in lowercase.
   * </pre>
   *
   * <code>optional string guid = 1;</code>
   * @return Whether the guid field is set.
   */
  @java.lang.Override
  public boolean hasGuid() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * A globally unique, immutable UUID represented in lowercase.
   * </pre>
   *
   * <code>optional string guid = 1;</code>
   * @return The guid.
   */
  @java.lang.Override
  public java.lang.String getGuid() {
    return guid_;
  }
  /**
   * <pre>
   * A globally unique, immutable UUID represented in lowercase.
   * </pre>
   *
   * <code>optional string guid = 1;</code>
   * @return The bytes for guid.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getGuidBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(guid_);
  }
  /**
   * <pre>
   * A globally unique, immutable UUID represented in lowercase.
   * </pre>
   *
   * <code>optional string guid = 1;</code>
   * @param value The guid to set.
   */
  private void setGuid(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000001;
    guid_ = value;
  }
  /**
   * <pre>
   * A globally unique, immutable UUID represented in lowercase.
   * </pre>
   *
   * <code>optional string guid = 1;</code>
   */
  private void clearGuid() {
    bitField0_ = (bitField0_ & ~0x00000001);
    guid_ = getDefaultInstance().getGuid();
  }
  /**
   * <pre>
   * A globally unique, immutable UUID represented in lowercase.
   * </pre>
   *
   * <code>optional string guid = 1;</code>
   * @param value The bytes for guid to set.
   */
  private void setGuidBytes(
      com.google.protobuf.ByteString value) {
    guid_ = value.toStringUtf8();
    bitField0_ |= 0x00000001;
  }

  public static final int SOURCE_FIELD_NUMBER = 2;
  private java.lang.String source_;
  /**
   * <pre>
   * Represents where the profile originated from, which can be either from the
   * settings or a website.
   * This field exists only for compatibility purposes with Autofill.
   * </pre>
   *
   * <code>optional string source = 2;</code>
   * @return Whether the source field is set.
   */
  @java.lang.Override
  public boolean hasSource() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Represents where the profile originated from, which can be either from the
   * settings or a website.
   * This field exists only for compatibility purposes with Autofill.
   * </pre>
   *
   * <code>optional string source = 2;</code>
   * @return The source.
   */
  @java.lang.Override
  public java.lang.String getSource() {
    return source_;
  }
  /**
   * <pre>
   * Represents where the profile originated from, which can be either from the
   * settings or a website.
   * This field exists only for compatibility purposes with Autofill.
   * </pre>
   *
   * <code>optional string source = 2;</code>
   * @return The bytes for source.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSourceBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(source_);
  }
  /**
   * <pre>
   * Represents where the profile originated from, which can be either from the
   * settings or a website.
   * This field exists only for compatibility purposes with Autofill.
   * </pre>
   *
   * <code>optional string source = 2;</code>
   * @param value The source to set.
   */
  private void setSource(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000002;
    source_ = value;
  }
  /**
   * <pre>
   * Represents where the profile originated from, which can be either from the
   * settings or a website.
   * This field exists only for compatibility purposes with Autofill.
   * </pre>
   *
   * <code>optional string source = 2;</code>
   */
  private void clearSource() {
    bitField0_ = (bitField0_ & ~0x00000002);
    source_ = getDefaultInstance().getSource();
  }
  /**
   * <pre>
   * Represents where the profile originated from, which can be either from the
   * settings or a website.
   * This field exists only for compatibility purposes with Autofill.
   * </pre>
   *
   * <code>optional string source = 2;</code>
   * @param value The bytes for source to set.
   */
  private void setSourceBytes(
      com.google.protobuf.ByteString value) {
    source_ = value.toStringUtf8();
    bitField0_ |= 0x00000002;
  }

  public static final int USE_COUNT_FIELD_NUMBER = 3;
  private long useCount_;
  /**
   * <pre>
   * The number of time this profile has been used.
   * </pre>
   *
   * <code>optional int64 use_count = 3;</code>
   * @return Whether the useCount field is set.
   */
  @java.lang.Override
  public boolean hasUseCount() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * The number of time this profile has been used.
   * </pre>
   *
   * <code>optional int64 use_count = 3;</code>
   * @return The useCount.
   */
  @java.lang.Override
  public long getUseCount() {
    return useCount_;
  }
  /**
   * <pre>
   * The number of time this profile has been used.
   * </pre>
   *
   * <code>optional int64 use_count = 3;</code>
   * @param value The useCount to set.
   */
  private void setUseCount(long value) {
    bitField0_ |= 0x00000004;
    useCount_ = value;
  }
  /**
   * <pre>
   * The number of time this profile has been used.
   * </pre>
   *
   * <code>optional int64 use_count = 3;</code>
   */
  private void clearUseCount() {
    bitField0_ = (bitField0_ & ~0x00000004);
    useCount_ = 0L;
  }

  public static final int USE_DATE_WINDOWS_EPOCH_MICROS_FIELD_NUMBER = 4;
  private long useDateWindowsEpochMicros_;
  /**
   * <pre>
   * The last time this profile was used.
   * </pre>
   *
   * <code>optional int64 use_date_windows_epoch_micros = 4;</code>
   * @return Whether the useDateWindowsEpochMicros field is set.
   */
  @java.lang.Override
  public boolean hasUseDateWindowsEpochMicros() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * The last time this profile was used.
   * </pre>
   *
   * <code>optional int64 use_date_windows_epoch_micros = 4;</code>
   * @return The useDateWindowsEpochMicros.
   */
  @java.lang.Override
  public long getUseDateWindowsEpochMicros() {
    return useDateWindowsEpochMicros_;
  }
  /**
   * <pre>
   * The last time this profile was used.
   * </pre>
   *
   * <code>optional int64 use_date_windows_epoch_micros = 4;</code>
   * @param value The useDateWindowsEpochMicros to set.
   */
  private void setUseDateWindowsEpochMicros(long value) {
    bitField0_ |= 0x00000008;
    useDateWindowsEpochMicros_ = value;
  }
  /**
   * <pre>
   * The last time this profile was used.
   * </pre>
   *
   * <code>optional int64 use_date_windows_epoch_micros = 4;</code>
   */
  private void clearUseDateWindowsEpochMicros() {
    bitField0_ = (bitField0_ & ~0x00000008);
    useDateWindowsEpochMicros_ = 0L;
  }

  public static final int PROFILE_LABEL_FIELD_NUMBER = 5;
  private java.lang.String profileLabel_;
  /**
   * <pre>
   * A user chosen profile label that is used to identify the profile.
   * The value of the label can be freely chosen by the user.
   * </pre>
   *
   * <code>optional string profile_label = 5;</code>
   * @return Whether the profileLabel field is set.
   */
  @java.lang.Override
  public boolean hasProfileLabel() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * A user chosen profile label that is used to identify the profile.
   * The value of the label can be freely chosen by the user.
   * </pre>
   *
   * <code>optional string profile_label = 5;</code>
   * @return The profileLabel.
   */
  @java.lang.Override
  public java.lang.String getProfileLabel() {
    return profileLabel_;
  }
  /**
   * <pre>
   * A user chosen profile label that is used to identify the profile.
   * The value of the label can be freely chosen by the user.
   * </pre>
   *
   * <code>optional string profile_label = 5;</code>
   * @return The bytes for profileLabel.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getProfileLabelBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(profileLabel_);
  }
  /**
   * <pre>
   * A user chosen profile label that is used to identify the profile.
   * The value of the label can be freely chosen by the user.
   * </pre>
   *
   * <code>optional string profile_label = 5;</code>
   * @param value The profileLabel to set.
   */
  private void setProfileLabel(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000010;
    profileLabel_ = value;
  }
  /**
   * <pre>
   * A user chosen profile label that is used to identify the profile.
   * The value of the label can be freely chosen by the user.
   * </pre>
   *
   * <code>optional string profile_label = 5;</code>
   */
  private void clearProfileLabel() {
    bitField0_ = (bitField0_ & ~0x00000010);
    profileLabel_ = getDefaultInstance().getProfileLabel();
  }
  /**
   * <pre>
   * A user chosen profile label that is used to identify the profile.
   * The value of the label can be freely chosen by the user.
   * </pre>
   *
   * <code>optional string profile_label = 5;</code>
   * @param value The bytes for profileLabel to set.
   */
  private void setProfileLabelBytes(
      com.google.protobuf.ByteString value) {
    profileLabel_ = value.toStringUtf8();
    bitField0_ |= 0x00000010;
  }

  public static final int NAME_HONORIFIC_FIELD_NUMBER = 6;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken nameHonorific_;
  /**
   * <pre>
   * Contact info name fields.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_honorific = 6;</code>
   */
  @java.lang.Override
  public boolean hasNameHonorific() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * Contact info name fields.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_honorific = 6;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameHonorific() {
    return nameHonorific_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : nameHonorific_;
  }
  /**
   * <pre>
   * Contact info name fields.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_honorific = 6;</code>
   */
  private void setNameHonorific(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  nameHonorific_ = value;
    bitField0_ |= 0x00000020;
    }
  /**
   * <pre>
   * Contact info name fields.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_honorific = 6;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeNameHonorific(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (nameHonorific_ != null &&
        nameHonorific_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      nameHonorific_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(nameHonorific_).mergeFrom(value).buildPartial();
    } else {
      nameHonorific_ = value;
    }
    bitField0_ |= 0x00000020;
  }
  /**
   * <pre>
   * Contact info name fields.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_honorific = 6;</code>
   */
  private void clearNameHonorific() {  nameHonorific_ = null;
    bitField0_ = (bitField0_ & ~0x00000020);
  }

  public static final int NAME_FIRST_FIELD_NUMBER = 7;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken nameFirst_;
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_first = 7;</code>
   */
  @java.lang.Override
  public boolean hasNameFirst() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_first = 7;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameFirst() {
    return nameFirst_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : nameFirst_;
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_first = 7;</code>
   */
  private void setNameFirst(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  nameFirst_ = value;
    bitField0_ |= 0x00000040;
    }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_first = 7;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeNameFirst(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (nameFirst_ != null &&
        nameFirst_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      nameFirst_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(nameFirst_).mergeFrom(value).buildPartial();
    } else {
      nameFirst_ = value;
    }
    bitField0_ |= 0x00000040;
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_first = 7;</code>
   */
  private void clearNameFirst() {  nameFirst_ = null;
    bitField0_ = (bitField0_ & ~0x00000040);
  }

  public static final int NAME_MIDDLE_FIELD_NUMBER = 8;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken nameMiddle_;
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_middle = 8;</code>
   */
  @java.lang.Override
  public boolean hasNameMiddle() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_middle = 8;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameMiddle() {
    return nameMiddle_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : nameMiddle_;
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_middle = 8;</code>
   */
  private void setNameMiddle(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  nameMiddle_ = value;
    bitField0_ |= 0x00000080;
    }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_middle = 8;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeNameMiddle(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (nameMiddle_ != null &&
        nameMiddle_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      nameMiddle_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(nameMiddle_).mergeFrom(value).buildPartial();
    } else {
      nameMiddle_ = value;
    }
    bitField0_ |= 0x00000080;
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_middle = 8;</code>
   */
  private void clearNameMiddle() {  nameMiddle_ = null;
    bitField0_ = (bitField0_ & ~0x00000080);
  }

  public static final int NAME_LAST_FIELD_NUMBER = 9;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken nameLast_;
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last = 9;</code>
   */
  @java.lang.Override
  public boolean hasNameLast() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last = 9;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameLast() {
    return nameLast_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : nameLast_;
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last = 9;</code>
   */
  private void setNameLast(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  nameLast_ = value;
    bitField0_ |= 0x00000100;
    }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last = 9;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeNameLast(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (nameLast_ != null &&
        nameLast_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      nameLast_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(nameLast_).mergeFrom(value).buildPartial();
    } else {
      nameLast_ = value;
    }
    bitField0_ |= 0x00000100;
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last = 9;</code>
   */
  private void clearNameLast() {  nameLast_ = null;
    bitField0_ = (bitField0_ & ~0x00000100);
  }

  public static final int NAME_LAST_FIRST_FIELD_NUMBER = 10;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken nameLastFirst_;
  /**
   * <pre>
   * Sometimes the last name is composed of two names as it is common for
   * Hispanic/Latinx names. In the unstructured representation of the last name,
   * there may be even a conjunction between the first and the second last
   * name. For example, the more-complete version of Pablo Picasso's surname is
   * "Ruiz y Picasso" containing a first last name, a conjunction (the y) and a
   * second last name.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_first = 10;</code>
   */
  @java.lang.Override
  public boolean hasNameLastFirst() {
    return ((bitField0_ & 0x00000200) != 0);
  }
  /**
   * <pre>
   * Sometimes the last name is composed of two names as it is common for
   * Hispanic/Latinx names. In the unstructured representation of the last name,
   * there may be even a conjunction between the first and the second last
   * name. For example, the more-complete version of Pablo Picasso's surname is
   * "Ruiz y Picasso" containing a first last name, a conjunction (the y) and a
   * second last name.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_first = 10;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameLastFirst() {
    return nameLastFirst_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : nameLastFirst_;
  }
  /**
   * <pre>
   * Sometimes the last name is composed of two names as it is common for
   * Hispanic/Latinx names. In the unstructured representation of the last name,
   * there may be even a conjunction between the first and the second last
   * name. For example, the more-complete version of Pablo Picasso's surname is
   * "Ruiz y Picasso" containing a first last name, a conjunction (the y) and a
   * second last name.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_first = 10;</code>
   */
  private void setNameLastFirst(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  nameLastFirst_ = value;
    bitField0_ |= 0x00000200;
    }
  /**
   * <pre>
   * Sometimes the last name is composed of two names as it is common for
   * Hispanic/Latinx names. In the unstructured representation of the last name,
   * there may be even a conjunction between the first and the second last
   * name. For example, the more-complete version of Pablo Picasso's surname is
   * "Ruiz y Picasso" containing a first last name, a conjunction (the y) and a
   * second last name.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_first = 10;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeNameLastFirst(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (nameLastFirst_ != null &&
        nameLastFirst_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      nameLastFirst_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(nameLastFirst_).mergeFrom(value).buildPartial();
    } else {
      nameLastFirst_ = value;
    }
    bitField0_ |= 0x00000200;
  }
  /**
   * <pre>
   * Sometimes the last name is composed of two names as it is common for
   * Hispanic/Latinx names. In the unstructured representation of the last name,
   * there may be even a conjunction between the first and the second last
   * name. For example, the more-complete version of Pablo Picasso's surname is
   * "Ruiz y Picasso" containing a first last name, a conjunction (the y) and a
   * second last name.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_first = 10;</code>
   */
  private void clearNameLastFirst() {  nameLastFirst_ = null;
    bitField0_ = (bitField0_ & ~0x00000200);
  }

  public static final int NAME_LAST_CONJUNCTION_FIELD_NUMBER = 11;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken nameLastConjunction_;
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_conjunction = 11;</code>
   */
  @java.lang.Override
  public boolean hasNameLastConjunction() {
    return ((bitField0_ & 0x00000400) != 0);
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_conjunction = 11;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameLastConjunction() {
    return nameLastConjunction_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : nameLastConjunction_;
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_conjunction = 11;</code>
   */
  private void setNameLastConjunction(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  nameLastConjunction_ = value;
    bitField0_ |= 0x00000400;
    }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_conjunction = 11;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeNameLastConjunction(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (nameLastConjunction_ != null &&
        nameLastConjunction_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      nameLastConjunction_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(nameLastConjunction_).mergeFrom(value).buildPartial();
    } else {
      nameLastConjunction_ = value;
    }
    bitField0_ |= 0x00000400;
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_conjunction = 11;</code>
   */
  private void clearNameLastConjunction() {  nameLastConjunction_ = null;
    bitField0_ = (bitField0_ & ~0x00000400);
  }

  public static final int NAME_LAST_SECOND_FIELD_NUMBER = 12;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken nameLastSecond_;
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_second = 12;</code>
   */
  @java.lang.Override
  public boolean hasNameLastSecond() {
    return ((bitField0_ & 0x00000800) != 0);
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_second = 12;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameLastSecond() {
    return nameLastSecond_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : nameLastSecond_;
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_second = 12;</code>
   */
  private void setNameLastSecond(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  nameLastSecond_ = value;
    bitField0_ |= 0x00000800;
    }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_second = 12;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeNameLastSecond(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (nameLastSecond_ != null &&
        nameLastSecond_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      nameLastSecond_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(nameLastSecond_).mergeFrom(value).buildPartial();
    } else {
      nameLastSecond_ = value;
    }
    bitField0_ |= 0x00000800;
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_second = 12;</code>
   */
  private void clearNameLastSecond() {  nameLastSecond_ = null;
    bitField0_ = (bitField0_ & ~0x00000800);
  }

  public static final int NAME_FULL_FIELD_NUMBER = 13;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken nameFull_;
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_full = 13;</code>
   */
  @java.lang.Override
  public boolean hasNameFull() {
    return ((bitField0_ & 0x00001000) != 0);
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_full = 13;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameFull() {
    return nameFull_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : nameFull_;
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_full = 13;</code>
   */
  private void setNameFull(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  nameFull_ = value;
    bitField0_ |= 0x00001000;
    }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_full = 13;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeNameFull(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (nameFull_ != null &&
        nameFull_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      nameFull_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(nameFull_).mergeFrom(value).buildPartial();
    } else {
      nameFull_ = value;
    }
    bitField0_ |= 0x00001000;
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_full = 13;</code>
   */
  private void clearNameFull() {  nameFull_ = null;
    bitField0_ = (bitField0_ & ~0x00001000);
  }

  public static final int NAME_FULL_WITH_HONORIFIC_FIELD_NUMBER = 14;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken nameFullWithHonorific_;
  /**
   * <pre>
   * This value contains the combination of the full name and the honorific
   * prefix.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_full_with_honorific = 14;</code>
   */
  @java.lang.Override
  public boolean hasNameFullWithHonorific() {
    return ((bitField0_ & 0x00002000) != 0);
  }
  /**
   * <pre>
   * This value contains the combination of the full name and the honorific
   * prefix.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_full_with_honorific = 14;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameFullWithHonorific() {
    return nameFullWithHonorific_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : nameFullWithHonorific_;
  }
  /**
   * <pre>
   * This value contains the combination of the full name and the honorific
   * prefix.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_full_with_honorific = 14;</code>
   */
  private void setNameFullWithHonorific(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  nameFullWithHonorific_ = value;
    bitField0_ |= 0x00002000;
    }
  /**
   * <pre>
   * This value contains the combination of the full name and the honorific
   * prefix.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_full_with_honorific = 14;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeNameFullWithHonorific(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (nameFullWithHonorific_ != null &&
        nameFullWithHonorific_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      nameFullWithHonorific_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(nameFullWithHonorific_).mergeFrom(value).buildPartial();
    } else {
      nameFullWithHonorific_ = value;
    }
    bitField0_ |= 0x00002000;
  }
  /**
   * <pre>
   * This value contains the combination of the full name and the honorific
   * prefix.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_full_with_honorific = 14;</code>
   */
  private void clearNameFullWithHonorific() {  nameFullWithHonorific_ = null;
    bitField0_ = (bitField0_ & ~0x00002000);
  }

  public static final int EMAIL_ADDRESS_FIELD_NUMBER = 15;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken emailAddress_;
  /**
   * <pre>
   * Contact info additional fields.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken email_address = 15;</code>
   */
  @java.lang.Override
  public boolean hasEmailAddress() {
    return ((bitField0_ & 0x00004000) != 0);
  }
  /**
   * <pre>
   * Contact info additional fields.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken email_address = 15;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getEmailAddress() {
    return emailAddress_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : emailAddress_;
  }
  /**
   * <pre>
   * Contact info additional fields.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken email_address = 15;</code>
   */
  private void setEmailAddress(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  emailAddress_ = value;
    bitField0_ |= 0x00004000;
    }
  /**
   * <pre>
   * Contact info additional fields.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken email_address = 15;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeEmailAddress(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (emailAddress_ != null &&
        emailAddress_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      emailAddress_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(emailAddress_).mergeFrom(value).buildPartial();
    } else {
      emailAddress_ = value;
    }
    bitField0_ |= 0x00004000;
  }
  /**
   * <pre>
   * Contact info additional fields.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken email_address = 15;</code>
   */
  private void clearEmailAddress() {  emailAddress_ = null;
    bitField0_ = (bitField0_ & ~0x00004000);
  }

  public static final int COMPANY_NAME_FIELD_NUMBER = 16;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken companyName_;
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken company_name = 16;</code>
   */
  @java.lang.Override
  public boolean hasCompanyName() {
    return ((bitField0_ & 0x00008000) != 0);
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken company_name = 16;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getCompanyName() {
    return companyName_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : companyName_;
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken company_name = 16;</code>
   */
  private void setCompanyName(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  companyName_ = value;
    bitField0_ |= 0x00008000;
    }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken company_name = 16;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeCompanyName(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (companyName_ != null &&
        companyName_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      companyName_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(companyName_).mergeFrom(value).buildPartial();
    } else {
      companyName_ = value;
    }
    bitField0_ |= 0x00008000;
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken company_name = 16;</code>
   */
  private void clearCompanyName() {  companyName_ = null;
    bitField0_ = (bitField0_ & ~0x00008000);
  }

  public static final int ADDRESS_CITY_FIELD_NUMBER = 17;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken addressCity_;
  /**
   * <pre>
   * Address fields: These are user-provided values with no particular
   * guarantees about their format.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_city = 17;</code>
   */
  @java.lang.Override
  public boolean hasAddressCity() {
    return ((bitField0_ & 0x00010000) != 0);
  }
  /**
   * <pre>
   * Address fields: These are user-provided values with no particular
   * guarantees about their format.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_city = 17;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressCity() {
    return addressCity_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : addressCity_;
  }
  /**
   * <pre>
   * Address fields: These are user-provided values with no particular
   * guarantees about their format.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_city = 17;</code>
   */
  private void setAddressCity(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  addressCity_ = value;
    bitField0_ |= 0x00010000;
    }
  /**
   * <pre>
   * Address fields: These are user-provided values with no particular
   * guarantees about their format.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_city = 17;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeAddressCity(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (addressCity_ != null &&
        addressCity_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      addressCity_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(addressCity_).mergeFrom(value).buildPartial();
    } else {
      addressCity_ = value;
    }
    bitField0_ |= 0x00010000;
  }
  /**
   * <pre>
   * Address fields: These are user-provided values with no particular
   * guarantees about their format.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_city = 17;</code>
   */
  private void clearAddressCity() {  addressCity_ = null;
    bitField0_ = (bitField0_ & ~0x00010000);
  }

  public static final int ADDRESS_STATE_FIELD_NUMBER = 18;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken addressState_;
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_state = 18;</code>
   */
  @java.lang.Override
  public boolean hasAddressState() {
    return ((bitField0_ & 0x00020000) != 0);
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_state = 18;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressState() {
    return addressState_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : addressState_;
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_state = 18;</code>
   */
  private void setAddressState(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  addressState_ = value;
    bitField0_ |= 0x00020000;
    }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_state = 18;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeAddressState(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (addressState_ != null &&
        addressState_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      addressState_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(addressState_).mergeFrom(value).buildPartial();
    } else {
      addressState_ = value;
    }
    bitField0_ |= 0x00020000;
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_state = 18;</code>
   */
  private void clearAddressState() {  addressState_ = null;
    bitField0_ = (bitField0_ & ~0x00020000);
  }

  public static final int ADDRESS_ZIP_FIELD_NUMBER = 19;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken addressZip_;
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_zip = 19;</code>
   */
  @java.lang.Override
  public boolean hasAddressZip() {
    return ((bitField0_ & 0x00040000) != 0);
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_zip = 19;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressZip() {
    return addressZip_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : addressZip_;
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_zip = 19;</code>
   */
  private void setAddressZip(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  addressZip_ = value;
    bitField0_ |= 0x00040000;
    }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_zip = 19;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeAddressZip(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (addressZip_ != null &&
        addressZip_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      addressZip_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(addressZip_).mergeFrom(value).buildPartial();
    } else {
      addressZip_ = value;
    }
    bitField0_ |= 0x00040000;
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_zip = 19;</code>
   */
  private void clearAddressZip() {  addressZip_ = null;
    bitField0_ = (bitField0_ & ~0x00040000);
  }

  public static final int ADDRESS_COUNTRY_FIELD_NUMBER = 20;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken addressCountry_;
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_country = 20;</code>
   */
  @java.lang.Override
  public boolean hasAddressCountry() {
    return ((bitField0_ & 0x00080000) != 0);
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_country = 20;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressCountry() {
    return addressCountry_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : addressCountry_;
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_country = 20;</code>
   */
  private void setAddressCountry(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  addressCountry_ = value;
    bitField0_ |= 0x00080000;
    }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_country = 20;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeAddressCountry(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (addressCountry_ != null &&
        addressCountry_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      addressCountry_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(addressCountry_).mergeFrom(value).buildPartial();
    } else {
      addressCountry_ = value;
    }
    bitField0_ |= 0x00080000;
  }
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_country = 20;</code>
   */
  private void clearAddressCountry() {  addressCountry_ = null;
    bitField0_ = (bitField0_ & ~0x00080000);
  }

  public static final int ADDRESS_STREET_ADDRESS_FIELD_NUMBER = 21;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken addressStreetAddress_;
  /**
   * <pre>
   * Additional address fields for i18n.
   * Includes all of the lines of a street address, including newlines, e.g.
   *   123 Main Street,
   *   Apt. #42
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_street_address = 21;</code>
   */
  @java.lang.Override
  public boolean hasAddressStreetAddress() {
    return ((bitField0_ & 0x00100000) != 0);
  }
  /**
   * <pre>
   * Additional address fields for i18n.
   * Includes all of the lines of a street address, including newlines, e.g.
   *   123 Main Street,
   *   Apt. #42
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_street_address = 21;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressStreetAddress() {
    return addressStreetAddress_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : addressStreetAddress_;
  }
  /**
   * <pre>
   * Additional address fields for i18n.
   * Includes all of the lines of a street address, including newlines, e.g.
   *   123 Main Street,
   *   Apt. #42
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_street_address = 21;</code>
   */
  private void setAddressStreetAddress(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  addressStreetAddress_ = value;
    bitField0_ |= 0x00100000;
    }
  /**
   * <pre>
   * Additional address fields for i18n.
   * Includes all of the lines of a street address, including newlines, e.g.
   *   123 Main Street,
   *   Apt. #42
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_street_address = 21;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeAddressStreetAddress(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (addressStreetAddress_ != null &&
        addressStreetAddress_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      addressStreetAddress_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(addressStreetAddress_).mergeFrom(value).buildPartial();
    } else {
      addressStreetAddress_ = value;
    }
    bitField0_ |= 0x00100000;
  }
  /**
   * <pre>
   * Additional address fields for i18n.
   * Includes all of the lines of a street address, including newlines, e.g.
   *   123 Main Street,
   *   Apt. #42
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_street_address = 21;</code>
   */
  private void clearAddressStreetAddress() {  addressStreetAddress_ = null;
    bitField0_ = (bitField0_ & ~0x00100000);
  }

  public static final int ADDRESS_SORTING_CODE_FIELD_NUMBER = 22;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken addressSortingCode_;
  /**
   * <pre>
   * A sorting code is similar to a postal code. However, whereas a postal code
   * normally refers to a single geographical location, a sorting code often
   * does not. Instead, a sorting code is assigned to an organization, which
   * might be geographically distributed. The most prominent example of a
   * sorting code system is CEDEX in France.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_sorting_code = 22;</code>
   */
  @java.lang.Override
  public boolean hasAddressSortingCode() {
    return ((bitField0_ & 0x00200000) != 0);
  }
  /**
   * <pre>
   * A sorting code is similar to a postal code. However, whereas a postal code
   * normally refers to a single geographical location, a sorting code often
   * does not. Instead, a sorting code is assigned to an organization, which
   * might be geographically distributed. The most prominent example of a
   * sorting code system is CEDEX in France.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_sorting_code = 22;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressSortingCode() {
    return addressSortingCode_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : addressSortingCode_;
  }
  /**
   * <pre>
   * A sorting code is similar to a postal code. However, whereas a postal code
   * normally refers to a single geographical location, a sorting code often
   * does not. Instead, a sorting code is assigned to an organization, which
   * might be geographically distributed. The most prominent example of a
   * sorting code system is CEDEX in France.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_sorting_code = 22;</code>
   */
  private void setAddressSortingCode(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  addressSortingCode_ = value;
    bitField0_ |= 0x00200000;
    }
  /**
   * <pre>
   * A sorting code is similar to a postal code. However, whereas a postal code
   * normally refers to a single geographical location, a sorting code often
   * does not. Instead, a sorting code is assigned to an organization, which
   * might be geographically distributed. The most prominent example of a
   * sorting code system is CEDEX in France.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_sorting_code = 22;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeAddressSortingCode(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (addressSortingCode_ != null &&
        addressSortingCode_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      addressSortingCode_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(addressSortingCode_).mergeFrom(value).buildPartial();
    } else {
      addressSortingCode_ = value;
    }
    bitField0_ |= 0x00200000;
  }
  /**
   * <pre>
   * A sorting code is similar to a postal code. However, whereas a postal code
   * normally refers to a single geographical location, a sorting code often
   * does not. Instead, a sorting code is assigned to an organization, which
   * might be geographically distributed. The most prominent example of a
   * sorting code system is CEDEX in France.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_sorting_code = 22;</code>
   */
  private void clearAddressSortingCode() {  addressSortingCode_ = null;
    bitField0_ = (bitField0_ & ~0x00200000);
  }

  public static final int ADDRESS_DEPENDENT_LOCALITY_FIELD_NUMBER = 23;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken addressDependentLocality_;
  /**
   * <pre>
   * A dependent locality is a subunit of a locality, where a "locality" is
   * roughly equivalent to a city. Examples of dependent localities include
   * inner-city districts and suburbs.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_dependent_locality = 23;</code>
   */
  @java.lang.Override
  public boolean hasAddressDependentLocality() {
    return ((bitField0_ & 0x00400000) != 0);
  }
  /**
   * <pre>
   * A dependent locality is a subunit of a locality, where a "locality" is
   * roughly equivalent to a city. Examples of dependent localities include
   * inner-city districts and suburbs.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_dependent_locality = 23;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressDependentLocality() {
    return addressDependentLocality_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : addressDependentLocality_;
  }
  /**
   * <pre>
   * A dependent locality is a subunit of a locality, where a "locality" is
   * roughly equivalent to a city. Examples of dependent localities include
   * inner-city districts and suburbs.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_dependent_locality = 23;</code>
   */
  private void setAddressDependentLocality(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  addressDependentLocality_ = value;
    bitField0_ |= 0x00400000;
    }
  /**
   * <pre>
   * A dependent locality is a subunit of a locality, where a "locality" is
   * roughly equivalent to a city. Examples of dependent localities include
   * inner-city districts and suburbs.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_dependent_locality = 23;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeAddressDependentLocality(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (addressDependentLocality_ != null &&
        addressDependentLocality_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      addressDependentLocality_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(addressDependentLocality_).mergeFrom(value).buildPartial();
    } else {
      addressDependentLocality_ = value;
    }
    bitField0_ |= 0x00400000;
  }
  /**
   * <pre>
   * A dependent locality is a subunit of a locality, where a "locality" is
   * roughly equivalent to a city. Examples of dependent localities include
   * inner-city districts and suburbs.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_dependent_locality = 23;</code>
   */
  private void clearAddressDependentLocality() {  addressDependentLocality_ = null;
    bitField0_ = (bitField0_ & ~0x00400000);
  }

  public static final int ADDRESS_LANGUAGE_CODE_FIELD_NUMBER = 24;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken addressLanguageCode_;
  /**
   * <pre>
   * A BCP 47 language code.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_language_code = 24;</code>
   */
  @java.lang.Override
  public boolean hasAddressLanguageCode() {
    return ((bitField0_ & 0x00800000) != 0);
  }
  /**
   * <pre>
   * A BCP 47 language code.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_language_code = 24;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressLanguageCode() {
    return addressLanguageCode_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : addressLanguageCode_;
  }
  /**
   * <pre>
   * A BCP 47 language code.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_language_code = 24;</code>
   */
  private void setAddressLanguageCode(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  addressLanguageCode_ = value;
    bitField0_ |= 0x00800000;
    }
  /**
   * <pre>
   * A BCP 47 language code.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_language_code = 24;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeAddressLanguageCode(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (addressLanguageCode_ != null &&
        addressLanguageCode_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      addressLanguageCode_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(addressLanguageCode_).mergeFrom(value).buildPartial();
    } else {
      addressLanguageCode_ = value;
    }
    bitField0_ |= 0x00800000;
  }
  /**
   * <pre>
   * A BCP 47 language code.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_language_code = 24;</code>
   */
  private void clearAddressLanguageCode() {  addressLanguageCode_ = null;
    bitField0_ = (bitField0_ & ~0x00800000);
  }

  public static final int ADDRESS_THOROUGHFARE_NAME_FIELD_NUMBER = 25;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken addressThoroughfareName_;
  /**
   * <pre>
   * The street name of the address, without a house number.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_name = 25;</code>
   */
  @java.lang.Override
  public boolean hasAddressThoroughfareName() {
    return ((bitField0_ & 0x01000000) != 0);
  }
  /**
   * <pre>
   * The street name of the address, without a house number.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_name = 25;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressThoroughfareName() {
    return addressThoroughfareName_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : addressThoroughfareName_;
  }
  /**
   * <pre>
   * The street name of the address, without a house number.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_name = 25;</code>
   */
  private void setAddressThoroughfareName(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  addressThoroughfareName_ = value;
    bitField0_ |= 0x01000000;
    }
  /**
   * <pre>
   * The street name of the address, without a house number.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_name = 25;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeAddressThoroughfareName(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (addressThoroughfareName_ != null &&
        addressThoroughfareName_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      addressThoroughfareName_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(addressThoroughfareName_).mergeFrom(value).buildPartial();
    } else {
      addressThoroughfareName_ = value;
    }
    bitField0_ |= 0x01000000;
  }
  /**
   * <pre>
   * The street name of the address, without a house number.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_name = 25;</code>
   */
  private void clearAddressThoroughfareName() {  addressThoroughfareName_ = null;
    bitField0_ = (bitField0_ & ~0x01000000);
  }

  public static final int ADDRESS_THOROUGHFARE_NUMBER_FIELD_NUMBER = 26;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken addressThoroughfareNumber_;
  /**
   * <pre>
   * The house number, which may be alphanumeric.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_number = 26;</code>
   */
  @java.lang.Override
  public boolean hasAddressThoroughfareNumber() {
    return ((bitField0_ & 0x02000000) != 0);
  }
  /**
   * <pre>
   * The house number, which may be alphanumeric.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_number = 26;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressThoroughfareNumber() {
    return addressThoroughfareNumber_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : addressThoroughfareNumber_;
  }
  /**
   * <pre>
   * The house number, which may be alphanumeric.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_number = 26;</code>
   */
  private void setAddressThoroughfareNumber(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  addressThoroughfareNumber_ = value;
    bitField0_ |= 0x02000000;
    }
  /**
   * <pre>
   * The house number, which may be alphanumeric.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_number = 26;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeAddressThoroughfareNumber(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (addressThoroughfareNumber_ != null &&
        addressThoroughfareNumber_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      addressThoroughfareNumber_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(addressThoroughfareNumber_).mergeFrom(value).buildPartial();
    } else {
      addressThoroughfareNumber_ = value;
    }
    bitField0_ |= 0x02000000;
  }
  /**
   * <pre>
   * The house number, which may be alphanumeric.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_number = 26;</code>
   */
  private void clearAddressThoroughfareNumber() {  addressThoroughfareNumber_ = null;
    bitField0_ = (bitField0_ & ~0x02000000);
  }

  public static final int ADDRESS_DEPENDENT_THOROUGHFARE_NAME_FIELD_NUMBER = 27;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken addressDependentThoroughfareName_;
  /**
   * <pre>
   * Describes a crossing street as it is used in some countries to describe a
   * location.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_dependent_thoroughfare_name = 27;</code>
   */
  @java.lang.Override
  public boolean hasAddressDependentThoroughfareName() {
    return ((bitField0_ & 0x04000000) != 0);
  }
  /**
   * <pre>
   * Describes a crossing street as it is used in some countries to describe a
   * location.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_dependent_thoroughfare_name = 27;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressDependentThoroughfareName() {
    return addressDependentThoroughfareName_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : addressDependentThoroughfareName_;
  }
  /**
   * <pre>
   * Describes a crossing street as it is used in some countries to describe a
   * location.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_dependent_thoroughfare_name = 27;</code>
   */
  private void setAddressDependentThoroughfareName(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  addressDependentThoroughfareName_ = value;
    bitField0_ |= 0x04000000;
    }
  /**
   * <pre>
   * Describes a crossing street as it is used in some countries to describe a
   * location.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_dependent_thoroughfare_name = 27;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeAddressDependentThoroughfareName(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (addressDependentThoroughfareName_ != null &&
        addressDependentThoroughfareName_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      addressDependentThoroughfareName_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(addressDependentThoroughfareName_).mergeFrom(value).buildPartial();
    } else {
      addressDependentThoroughfareName_ = value;
    }
    bitField0_ |= 0x04000000;
  }
  /**
   * <pre>
   * Describes a crossing street as it is used in some countries to describe a
   * location.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_dependent_thoroughfare_name = 27;</code>
   */
  private void clearAddressDependentThoroughfareName() {  addressDependentThoroughfareName_ = null;
    bitField0_ = (bitField0_ & ~0x04000000);
  }

  public static final int ADDRESS_THOROUGHFARE_AND_DEPENDENT_THOROUGHFARE_NAME_FIELD_NUMBER = 28;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken addressThoroughfareAndDependentThoroughfareName_;
  /**
   * <pre>
   * Contains both the thoroughfare and the dependent thoroughfare name.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_and_dependent_thoroughfare_name = 28;</code>
   */
  @java.lang.Override
  public boolean hasAddressThoroughfareAndDependentThoroughfareName() {
    return ((bitField0_ & 0x08000000) != 0);
  }
  /**
   * <pre>
   * Contains both the thoroughfare and the dependent thoroughfare name.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_and_dependent_thoroughfare_name = 28;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressThoroughfareAndDependentThoroughfareName() {
    return addressThoroughfareAndDependentThoroughfareName_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : addressThoroughfareAndDependentThoroughfareName_;
  }
  /**
   * <pre>
   * Contains both the thoroughfare and the dependent thoroughfare name.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_and_dependent_thoroughfare_name = 28;</code>
   */
  private void setAddressThoroughfareAndDependentThoroughfareName(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  addressThoroughfareAndDependentThoroughfareName_ = value;
    bitField0_ |= 0x08000000;
    }
  /**
   * <pre>
   * Contains both the thoroughfare and the dependent thoroughfare name.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_and_dependent_thoroughfare_name = 28;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeAddressThoroughfareAndDependentThoroughfareName(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (addressThoroughfareAndDependentThoroughfareName_ != null &&
        addressThoroughfareAndDependentThoroughfareName_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      addressThoroughfareAndDependentThoroughfareName_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(addressThoroughfareAndDependentThoroughfareName_).mergeFrom(value).buildPartial();
    } else {
      addressThoroughfareAndDependentThoroughfareName_ = value;
    }
    bitField0_ |= 0x08000000;
  }
  /**
   * <pre>
   * Contains both the thoroughfare and the dependent thoroughfare name.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_and_dependent_thoroughfare_name = 28;</code>
   */
  private void clearAddressThoroughfareAndDependentThoroughfareName() {  addressThoroughfareAndDependentThoroughfareName_ = null;
    bitField0_ = (bitField0_ & ~0x08000000);
  }

  public static final int ADDRESS_PREMISE_NAME_FIELD_NUMBER = 29;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken addressPremiseName_;
  /**
   * <pre>
   * A premise name corresponds to the name of a place or a building below the
   * granularity of a street.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_premise_name = 29;</code>
   */
  @java.lang.Override
  public boolean hasAddressPremiseName() {
    return ((bitField0_ & 0x10000000) != 0);
  }
  /**
   * <pre>
   * A premise name corresponds to the name of a place or a building below the
   * granularity of a street.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_premise_name = 29;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressPremiseName() {
    return addressPremiseName_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : addressPremiseName_;
  }
  /**
   * <pre>
   * A premise name corresponds to the name of a place or a building below the
   * granularity of a street.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_premise_name = 29;</code>
   */
  private void setAddressPremiseName(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  addressPremiseName_ = value;
    bitField0_ |= 0x10000000;
    }
  /**
   * <pre>
   * A premise name corresponds to the name of a place or a building below the
   * granularity of a street.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_premise_name = 29;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeAddressPremiseName(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (addressPremiseName_ != null &&
        addressPremiseName_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      addressPremiseName_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(addressPremiseName_).mergeFrom(value).buildPartial();
    } else {
      addressPremiseName_ = value;
    }
    bitField0_ |= 0x10000000;
  }
  /**
   * <pre>
   * A premise name corresponds to the name of a place or a building below the
   * granularity of a street.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_premise_name = 29;</code>
   */
  private void clearAddressPremiseName() {  addressPremiseName_ = null;
    bitField0_ = (bitField0_ & ~0x10000000);
  }

  public static final int ADDRESS_SUBPREMISE_NAME_FIELD_NUMBER = 30;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken addressSubpremiseName_;
  /**
   * <pre>
   * Contains the floor, staircase or apartment number within a building.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_subpremise_name = 30;</code>
   */
  @java.lang.Override
  public boolean hasAddressSubpremiseName() {
    return ((bitField0_ & 0x20000000) != 0);
  }
  /**
   * <pre>
   * Contains the floor, staircase or apartment number within a building.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_subpremise_name = 30;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressSubpremiseName() {
    return addressSubpremiseName_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : addressSubpremiseName_;
  }
  /**
   * <pre>
   * Contains the floor, staircase or apartment number within a building.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_subpremise_name = 30;</code>
   */
  private void setAddressSubpremiseName(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  addressSubpremiseName_ = value;
    bitField0_ |= 0x20000000;
    }
  /**
   * <pre>
   * Contains the floor, staircase or apartment number within a building.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_subpremise_name = 30;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeAddressSubpremiseName(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (addressSubpremiseName_ != null &&
        addressSubpremiseName_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      addressSubpremiseName_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(addressSubpremiseName_).mergeFrom(value).buildPartial();
    } else {
      addressSubpremiseName_ = value;
    }
    bitField0_ |= 0x20000000;
  }
  /**
   * <pre>
   * Contains the floor, staircase or apartment number within a building.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_subpremise_name = 30;</code>
   */
  private void clearAddressSubpremiseName() {  addressSubpremiseName_ = null;
    bitField0_ = (bitField0_ & ~0x20000000);
  }

  public static final int ADDRESS_APT_NUM_FIELD_NUMBER = 31;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken addressAptNum_;
  /**
   * <pre>
   * The apartment number within a building.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_apt_num = 31;</code>
   */
  @java.lang.Override
  public boolean hasAddressAptNum() {
    return ((bitField0_ & 0x40000000) != 0);
  }
  /**
   * <pre>
   * The apartment number within a building.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_apt_num = 31;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressAptNum() {
    return addressAptNum_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : addressAptNum_;
  }
  /**
   * <pre>
   * The apartment number within a building.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_apt_num = 31;</code>
   */
  private void setAddressAptNum(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  addressAptNum_ = value;
    bitField0_ |= 0x40000000;
    }
  /**
   * <pre>
   * The apartment number within a building.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_apt_num = 31;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeAddressAptNum(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (addressAptNum_ != null &&
        addressAptNum_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      addressAptNum_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(addressAptNum_).mergeFrom(value).buildPartial();
    } else {
      addressAptNum_ = value;
    }
    bitField0_ |= 0x40000000;
  }
  /**
   * <pre>
   * The apartment number within a building.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_apt_num = 31;</code>
   */
  private void clearAddressAptNum() {  addressAptNum_ = null;
    bitField0_ = (bitField0_ & ~0x40000000);
  }

  public static final int ADDRESS_FLOOR_FIELD_NUMBER = 32;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken addressFloor_;
  /**
   * <pre>
   * The floor number within a building.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_floor = 32;</code>
   */
  @java.lang.Override
  public boolean hasAddressFloor() {
    return ((bitField0_ & 0x80000000) != 0);
  }
  /**
   * <pre>
   * The floor number within a building.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_floor = 32;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressFloor() {
    return addressFloor_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : addressFloor_;
  }
  /**
   * <pre>
   * The floor number within a building.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_floor = 32;</code>
   */
  private void setAddressFloor(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  addressFloor_ = value;
    bitField0_ |= 0x80000000;
    }
  /**
   * <pre>
   * The floor number within a building.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_floor = 32;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeAddressFloor(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (addressFloor_ != null &&
        addressFloor_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      addressFloor_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(addressFloor_).mergeFrom(value).buildPartial();
    } else {
      addressFloor_ = value;
    }
    bitField0_ |= 0x80000000;
  }
  /**
   * <pre>
   * The floor number within a building.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_floor = 32;</code>
   */
  private void clearAddressFloor() {  addressFloor_ = null;
    bitField0_ = (bitField0_ & ~0x80000000);
  }

  public static final int PHONE_HOME_WHOLE_NUMBER_FIELD_NUMBER = 33;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken phoneHomeWholeNumber_;
  /**
   * <pre>
   * Phone.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken phone_home_whole_number = 33;</code>
   */
  @java.lang.Override
  public boolean hasPhoneHomeWholeNumber() {
    return ((bitField1_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Phone.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken phone_home_whole_number = 33;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getPhoneHomeWholeNumber() {
    return phoneHomeWholeNumber_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance() : phoneHomeWholeNumber_;
  }
  /**
   * <pre>
   * Phone.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken phone_home_whole_number = 33;</code>
   */
  private void setPhoneHomeWholeNumber(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  phoneHomeWholeNumber_ = value;
    bitField1_ |= 0x00000001;
    }
  /**
   * <pre>
   * Phone.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken phone_home_whole_number = 33;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergePhoneHomeWholeNumber(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
    value.getClass();
  if (phoneHomeWholeNumber_ != null &&
        phoneHomeWholeNumber_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.getDefaultInstance()) {
      phoneHomeWholeNumber_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.newBuilder(phoneHomeWholeNumber_).mergeFrom(value).buildPartial();
    } else {
      phoneHomeWholeNumber_ = value;
    }
    bitField1_ |= 0x00000001;
  }
  /**
   * <pre>
   * Phone.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken phone_home_whole_number = 33;</code>
   */
  private void clearPhoneHomeWholeNumber() {  phoneHomeWholeNumber_ = null;
    bitField1_ = (bitField1_ & ~0x00000001);
  }

  public static final int BIRTHDATE_DAY_FIELD_NUMBER = 34;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken birthdateDay_;
  /**
   * <pre>
   * Birthdate fields.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_day = 34;</code>
   */
  @java.lang.Override
  public boolean hasBirthdateDay() {
    return ((bitField1_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Birthdate fields.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_day = 34;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken getBirthdateDay() {
    return birthdateDay_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken.getDefaultInstance() : birthdateDay_;
  }
  /**
   * <pre>
   * Birthdate fields.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_day = 34;</code>
   */
  private void setBirthdateDay(org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken value) {
    value.getClass();
  birthdateDay_ = value;
    bitField1_ |= 0x00000002;
    }
  /**
   * <pre>
   * Birthdate fields.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_day = 34;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeBirthdateDay(org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken value) {
    value.getClass();
  if (birthdateDay_ != null &&
        birthdateDay_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken.getDefaultInstance()) {
      birthdateDay_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken.newBuilder(birthdateDay_).mergeFrom(value).buildPartial();
    } else {
      birthdateDay_ = value;
    }
    bitField1_ |= 0x00000002;
  }
  /**
   * <pre>
   * Birthdate fields.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_day = 34;</code>
   */
  private void clearBirthdateDay() {  birthdateDay_ = null;
    bitField1_ = (bitField1_ & ~0x00000002);
  }

  public static final int BIRTHDATE_MONTH_FIELD_NUMBER = 35;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken birthdateMonth_;
  /**
   * <pre>
   * Between 1 and 12.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_month = 35;</code>
   */
  @java.lang.Override
  public boolean hasBirthdateMonth() {
    return ((bitField1_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Between 1 and 12.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_month = 35;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken getBirthdateMonth() {
    return birthdateMonth_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken.getDefaultInstance() : birthdateMonth_;
  }
  /**
   * <pre>
   * Between 1 and 12.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_month = 35;</code>
   */
  private void setBirthdateMonth(org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken value) {
    value.getClass();
  birthdateMonth_ = value;
    bitField1_ |= 0x00000004;
    }
  /**
   * <pre>
   * Between 1 and 12.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_month = 35;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeBirthdateMonth(org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken value) {
    value.getClass();
  if (birthdateMonth_ != null &&
        birthdateMonth_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken.getDefaultInstance()) {
      birthdateMonth_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken.newBuilder(birthdateMonth_).mergeFrom(value).buildPartial();
    } else {
      birthdateMonth_ = value;
    }
    bitField1_ |= 0x00000004;
  }
  /**
   * <pre>
   * Between 1 and 12.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_month = 35;</code>
   */
  private void clearBirthdateMonth() {  birthdateMonth_ = null;
    bitField1_ = (bitField1_ & ~0x00000004);
  }

  public static final int BIRTHDATE_YEAR_FIELD_NUMBER = 36;
  private org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken birthdateYear_;
  /**
   * <pre>
   * 4 digits.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_year = 36;</code>
   */
  @java.lang.Override
  public boolean hasBirthdateYear() {
    return ((bitField1_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * 4 digits.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_year = 36;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken getBirthdateYear() {
    return birthdateYear_ == null ? org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken.getDefaultInstance() : birthdateYear_;
  }
  /**
   * <pre>
   * 4 digits.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_year = 36;</code>
   */
  private void setBirthdateYear(org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken value) {
    value.getClass();
  birthdateYear_ = value;
    bitField1_ |= 0x00000008;
    }
  /**
   * <pre>
   * 4 digits.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_year = 36;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeBirthdateYear(org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken value) {
    value.getClass();
  if (birthdateYear_ != null &&
        birthdateYear_ != org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken.getDefaultInstance()) {
      birthdateYear_ =
        org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken.newBuilder(birthdateYear_).mergeFrom(value).buildPartial();
    } else {
      birthdateYear_ = value;
    }
    bitField1_ |= 0x00000008;
  }
  /**
   * <pre>
   * 4 digits.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_year = 36;</code>
   */
  private void clearBirthdateYear() {  birthdateYear_ = null;
    bitField1_ = (bitField1_ & ~0x00000008);
  }

  public static org.chromium.components.sync.protocol.ContactInfoSpecifics parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.ContactInfoSpecifics parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ContactInfoSpecifics parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.ContactInfoSpecifics parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ContactInfoSpecifics parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.ContactInfoSpecifics parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ContactInfoSpecifics parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ContactInfoSpecifics parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ContactInfoSpecifics parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ContactInfoSpecifics parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ContactInfoSpecifics parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ContactInfoSpecifics parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.ContactInfoSpecifics prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code sync_pb.ContactInfoSpecifics}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.ContactInfoSpecifics, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.ContactInfoSpecifics)
      org.chromium.components.sync.protocol.ContactInfoSpecificsOrBuilder {
    // Construct using org.chromium.components.sync.protocol.ContactInfoSpecifics.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * A globally unique, immutable UUID represented in lowercase.
     * </pre>
     *
     * <code>optional string guid = 1;</code>
     * @return Whether the guid field is set.
     */
    @java.lang.Override
    public boolean hasGuid() {
      return instance.hasGuid();
    }
    /**
     * <pre>
     * A globally unique, immutable UUID represented in lowercase.
     * </pre>
     *
     * <code>optional string guid = 1;</code>
     * @return The guid.
     */
    @java.lang.Override
    public java.lang.String getGuid() {
      return instance.getGuid();
    }
    /**
     * <pre>
     * A globally unique, immutable UUID represented in lowercase.
     * </pre>
     *
     * <code>optional string guid = 1;</code>
     * @return The bytes for guid.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getGuidBytes() {
      return instance.getGuidBytes();
    }
    /**
     * <pre>
     * A globally unique, immutable UUID represented in lowercase.
     * </pre>
     *
     * <code>optional string guid = 1;</code>
     * @param value The guid to set.
     * @return This builder for chaining.
     */
    public Builder setGuid(
        java.lang.String value) {
      copyOnWrite();
      instance.setGuid(value);
      return this;
    }
    /**
     * <pre>
     * A globally unique, immutable UUID represented in lowercase.
     * </pre>
     *
     * <code>optional string guid = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearGuid() {
      copyOnWrite();
      instance.clearGuid();
      return this;
    }
    /**
     * <pre>
     * A globally unique, immutable UUID represented in lowercase.
     * </pre>
     *
     * <code>optional string guid = 1;</code>
     * @param value The bytes for guid to set.
     * @return This builder for chaining.
     */
    public Builder setGuidBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setGuidBytes(value);
      return this;
    }

    /**
     * <pre>
     * Represents where the profile originated from, which can be either from the
     * settings or a website.
     * This field exists only for compatibility purposes with Autofill.
     * </pre>
     *
     * <code>optional string source = 2;</code>
     * @return Whether the source field is set.
     */
    @java.lang.Override
    public boolean hasSource() {
      return instance.hasSource();
    }
    /**
     * <pre>
     * Represents where the profile originated from, which can be either from the
     * settings or a website.
     * This field exists only for compatibility purposes with Autofill.
     * </pre>
     *
     * <code>optional string source = 2;</code>
     * @return The source.
     */
    @java.lang.Override
    public java.lang.String getSource() {
      return instance.getSource();
    }
    /**
     * <pre>
     * Represents where the profile originated from, which can be either from the
     * settings or a website.
     * This field exists only for compatibility purposes with Autofill.
     * </pre>
     *
     * <code>optional string source = 2;</code>
     * @return The bytes for source.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSourceBytes() {
      return instance.getSourceBytes();
    }
    /**
     * <pre>
     * Represents where the profile originated from, which can be either from the
     * settings or a website.
     * This field exists only for compatibility purposes with Autofill.
     * </pre>
     *
     * <code>optional string source = 2;</code>
     * @param value The source to set.
     * @return This builder for chaining.
     */
    public Builder setSource(
        java.lang.String value) {
      copyOnWrite();
      instance.setSource(value);
      return this;
    }
    /**
     * <pre>
     * Represents where the profile originated from, which can be either from the
     * settings or a website.
     * This field exists only for compatibility purposes with Autofill.
     * </pre>
     *
     * <code>optional string source = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearSource() {
      copyOnWrite();
      instance.clearSource();
      return this;
    }
    /**
     * <pre>
     * Represents where the profile originated from, which can be either from the
     * settings or a website.
     * This field exists only for compatibility purposes with Autofill.
     * </pre>
     *
     * <code>optional string source = 2;</code>
     * @param value The bytes for source to set.
     * @return This builder for chaining.
     */
    public Builder setSourceBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setSourceBytes(value);
      return this;
    }

    /**
     * <pre>
     * The number of time this profile has been used.
     * </pre>
     *
     * <code>optional int64 use_count = 3;</code>
     * @return Whether the useCount field is set.
     */
    @java.lang.Override
    public boolean hasUseCount() {
      return instance.hasUseCount();
    }
    /**
     * <pre>
     * The number of time this profile has been used.
     * </pre>
     *
     * <code>optional int64 use_count = 3;</code>
     * @return The useCount.
     */
    @java.lang.Override
    public long getUseCount() {
      return instance.getUseCount();
    }
    /**
     * <pre>
     * The number of time this profile has been used.
     * </pre>
     *
     * <code>optional int64 use_count = 3;</code>
     * @param value The useCount to set.
     * @return This builder for chaining.
     */
    public Builder setUseCount(long value) {
      copyOnWrite();
      instance.setUseCount(value);
      return this;
    }
    /**
     * <pre>
     * The number of time this profile has been used.
     * </pre>
     *
     * <code>optional int64 use_count = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearUseCount() {
      copyOnWrite();
      instance.clearUseCount();
      return this;
    }

    /**
     * <pre>
     * The last time this profile was used.
     * </pre>
     *
     * <code>optional int64 use_date_windows_epoch_micros = 4;</code>
     * @return Whether the useDateWindowsEpochMicros field is set.
     */
    @java.lang.Override
    public boolean hasUseDateWindowsEpochMicros() {
      return instance.hasUseDateWindowsEpochMicros();
    }
    /**
     * <pre>
     * The last time this profile was used.
     * </pre>
     *
     * <code>optional int64 use_date_windows_epoch_micros = 4;</code>
     * @return The useDateWindowsEpochMicros.
     */
    @java.lang.Override
    public long getUseDateWindowsEpochMicros() {
      return instance.getUseDateWindowsEpochMicros();
    }
    /**
     * <pre>
     * The last time this profile was used.
     * </pre>
     *
     * <code>optional int64 use_date_windows_epoch_micros = 4;</code>
     * @param value The useDateWindowsEpochMicros to set.
     * @return This builder for chaining.
     */
    public Builder setUseDateWindowsEpochMicros(long value) {
      copyOnWrite();
      instance.setUseDateWindowsEpochMicros(value);
      return this;
    }
    /**
     * <pre>
     * The last time this profile was used.
     * </pre>
     *
     * <code>optional int64 use_date_windows_epoch_micros = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearUseDateWindowsEpochMicros() {
      copyOnWrite();
      instance.clearUseDateWindowsEpochMicros();
      return this;
    }

    /**
     * <pre>
     * A user chosen profile label that is used to identify the profile.
     * The value of the label can be freely chosen by the user.
     * </pre>
     *
     * <code>optional string profile_label = 5;</code>
     * @return Whether the profileLabel field is set.
     */
    @java.lang.Override
    public boolean hasProfileLabel() {
      return instance.hasProfileLabel();
    }
    /**
     * <pre>
     * A user chosen profile label that is used to identify the profile.
     * The value of the label can be freely chosen by the user.
     * </pre>
     *
     * <code>optional string profile_label = 5;</code>
     * @return The profileLabel.
     */
    @java.lang.Override
    public java.lang.String getProfileLabel() {
      return instance.getProfileLabel();
    }
    /**
     * <pre>
     * A user chosen profile label that is used to identify the profile.
     * The value of the label can be freely chosen by the user.
     * </pre>
     *
     * <code>optional string profile_label = 5;</code>
     * @return The bytes for profileLabel.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getProfileLabelBytes() {
      return instance.getProfileLabelBytes();
    }
    /**
     * <pre>
     * A user chosen profile label that is used to identify the profile.
     * The value of the label can be freely chosen by the user.
     * </pre>
     *
     * <code>optional string profile_label = 5;</code>
     * @param value The profileLabel to set.
     * @return This builder for chaining.
     */
    public Builder setProfileLabel(
        java.lang.String value) {
      copyOnWrite();
      instance.setProfileLabel(value);
      return this;
    }
    /**
     * <pre>
     * A user chosen profile label that is used to identify the profile.
     * The value of the label can be freely chosen by the user.
     * </pre>
     *
     * <code>optional string profile_label = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearProfileLabel() {
      copyOnWrite();
      instance.clearProfileLabel();
      return this;
    }
    /**
     * <pre>
     * A user chosen profile label that is used to identify the profile.
     * The value of the label can be freely chosen by the user.
     * </pre>
     *
     * <code>optional string profile_label = 5;</code>
     * @param value The bytes for profileLabel to set.
     * @return This builder for chaining.
     */
    public Builder setProfileLabelBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setProfileLabelBytes(value);
      return this;
    }

    /**
     * <pre>
     * Contact info name fields.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_honorific = 6;</code>
     */
    @java.lang.Override
    public boolean hasNameHonorific() {
      return instance.hasNameHonorific();
    }
    /**
     * <pre>
     * Contact info name fields.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_honorific = 6;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameHonorific() {
      return instance.getNameHonorific();
    }
    /**
     * <pre>
     * Contact info name fields.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_honorific = 6;</code>
     */
    public Builder setNameHonorific(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setNameHonorific(value);
      return this;
      }
    /**
     * <pre>
     * Contact info name fields.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_honorific = 6;</code>
     */
    public Builder setNameHonorific(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setNameHonorific(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Contact info name fields.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_honorific = 6;</code>
     */
    public Builder mergeNameHonorific(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeNameHonorific(value);
      return this;
    }
    /**
     * <pre>
     * Contact info name fields.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_honorific = 6;</code>
     */
    public Builder clearNameHonorific() {  copyOnWrite();
      instance.clearNameHonorific();
      return this;
    }

    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_first = 7;</code>
     */
    @java.lang.Override
    public boolean hasNameFirst() {
      return instance.hasNameFirst();
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_first = 7;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameFirst() {
      return instance.getNameFirst();
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_first = 7;</code>
     */
    public Builder setNameFirst(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setNameFirst(value);
      return this;
      }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_first = 7;</code>
     */
    public Builder setNameFirst(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setNameFirst(builderForValue.build());
      return this;
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_first = 7;</code>
     */
    public Builder mergeNameFirst(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeNameFirst(value);
      return this;
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_first = 7;</code>
     */
    public Builder clearNameFirst() {  copyOnWrite();
      instance.clearNameFirst();
      return this;
    }

    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_middle = 8;</code>
     */
    @java.lang.Override
    public boolean hasNameMiddle() {
      return instance.hasNameMiddle();
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_middle = 8;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameMiddle() {
      return instance.getNameMiddle();
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_middle = 8;</code>
     */
    public Builder setNameMiddle(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setNameMiddle(value);
      return this;
      }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_middle = 8;</code>
     */
    public Builder setNameMiddle(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setNameMiddle(builderForValue.build());
      return this;
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_middle = 8;</code>
     */
    public Builder mergeNameMiddle(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeNameMiddle(value);
      return this;
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_middle = 8;</code>
     */
    public Builder clearNameMiddle() {  copyOnWrite();
      instance.clearNameMiddle();
      return this;
    }

    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last = 9;</code>
     */
    @java.lang.Override
    public boolean hasNameLast() {
      return instance.hasNameLast();
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last = 9;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameLast() {
      return instance.getNameLast();
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last = 9;</code>
     */
    public Builder setNameLast(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setNameLast(value);
      return this;
      }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last = 9;</code>
     */
    public Builder setNameLast(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setNameLast(builderForValue.build());
      return this;
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last = 9;</code>
     */
    public Builder mergeNameLast(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeNameLast(value);
      return this;
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last = 9;</code>
     */
    public Builder clearNameLast() {  copyOnWrite();
      instance.clearNameLast();
      return this;
    }

    /**
     * <pre>
     * Sometimes the last name is composed of two names as it is common for
     * Hispanic/Latinx names. In the unstructured representation of the last name,
     * there may be even a conjunction between the first and the second last
     * name. For example, the more-complete version of Pablo Picasso's surname is
     * "Ruiz y Picasso" containing a first last name, a conjunction (the y) and a
     * second last name.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_first = 10;</code>
     */
    @java.lang.Override
    public boolean hasNameLastFirst() {
      return instance.hasNameLastFirst();
    }
    /**
     * <pre>
     * Sometimes the last name is composed of two names as it is common for
     * Hispanic/Latinx names. In the unstructured representation of the last name,
     * there may be even a conjunction between the first and the second last
     * name. For example, the more-complete version of Pablo Picasso's surname is
     * "Ruiz y Picasso" containing a first last name, a conjunction (the y) and a
     * second last name.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_first = 10;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameLastFirst() {
      return instance.getNameLastFirst();
    }
    /**
     * <pre>
     * Sometimes the last name is composed of two names as it is common for
     * Hispanic/Latinx names. In the unstructured representation of the last name,
     * there may be even a conjunction between the first and the second last
     * name. For example, the more-complete version of Pablo Picasso's surname is
     * "Ruiz y Picasso" containing a first last name, a conjunction (the y) and a
     * second last name.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_first = 10;</code>
     */
    public Builder setNameLastFirst(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setNameLastFirst(value);
      return this;
      }
    /**
     * <pre>
     * Sometimes the last name is composed of two names as it is common for
     * Hispanic/Latinx names. In the unstructured representation of the last name,
     * there may be even a conjunction between the first and the second last
     * name. For example, the more-complete version of Pablo Picasso's surname is
     * "Ruiz y Picasso" containing a first last name, a conjunction (the y) and a
     * second last name.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_first = 10;</code>
     */
    public Builder setNameLastFirst(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setNameLastFirst(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Sometimes the last name is composed of two names as it is common for
     * Hispanic/Latinx names. In the unstructured representation of the last name,
     * there may be even a conjunction between the first and the second last
     * name. For example, the more-complete version of Pablo Picasso's surname is
     * "Ruiz y Picasso" containing a first last name, a conjunction (the y) and a
     * second last name.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_first = 10;</code>
     */
    public Builder mergeNameLastFirst(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeNameLastFirst(value);
      return this;
    }
    /**
     * <pre>
     * Sometimes the last name is composed of two names as it is common for
     * Hispanic/Latinx names. In the unstructured representation of the last name,
     * there may be even a conjunction between the first and the second last
     * name. For example, the more-complete version of Pablo Picasso's surname is
     * "Ruiz y Picasso" containing a first last name, a conjunction (the y) and a
     * second last name.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_first = 10;</code>
     */
    public Builder clearNameLastFirst() {  copyOnWrite();
      instance.clearNameLastFirst();
      return this;
    }

    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_conjunction = 11;</code>
     */
    @java.lang.Override
    public boolean hasNameLastConjunction() {
      return instance.hasNameLastConjunction();
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_conjunction = 11;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameLastConjunction() {
      return instance.getNameLastConjunction();
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_conjunction = 11;</code>
     */
    public Builder setNameLastConjunction(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setNameLastConjunction(value);
      return this;
      }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_conjunction = 11;</code>
     */
    public Builder setNameLastConjunction(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setNameLastConjunction(builderForValue.build());
      return this;
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_conjunction = 11;</code>
     */
    public Builder mergeNameLastConjunction(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeNameLastConjunction(value);
      return this;
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_conjunction = 11;</code>
     */
    public Builder clearNameLastConjunction() {  copyOnWrite();
      instance.clearNameLastConjunction();
      return this;
    }

    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_second = 12;</code>
     */
    @java.lang.Override
    public boolean hasNameLastSecond() {
      return instance.hasNameLastSecond();
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_second = 12;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameLastSecond() {
      return instance.getNameLastSecond();
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_second = 12;</code>
     */
    public Builder setNameLastSecond(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setNameLastSecond(value);
      return this;
      }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_second = 12;</code>
     */
    public Builder setNameLastSecond(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setNameLastSecond(builderForValue.build());
      return this;
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_second = 12;</code>
     */
    public Builder mergeNameLastSecond(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeNameLastSecond(value);
      return this;
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_second = 12;</code>
     */
    public Builder clearNameLastSecond() {  copyOnWrite();
      instance.clearNameLastSecond();
      return this;
    }

    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_full = 13;</code>
     */
    @java.lang.Override
    public boolean hasNameFull() {
      return instance.hasNameFull();
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_full = 13;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameFull() {
      return instance.getNameFull();
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_full = 13;</code>
     */
    public Builder setNameFull(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setNameFull(value);
      return this;
      }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_full = 13;</code>
     */
    public Builder setNameFull(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setNameFull(builderForValue.build());
      return this;
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_full = 13;</code>
     */
    public Builder mergeNameFull(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeNameFull(value);
      return this;
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_full = 13;</code>
     */
    public Builder clearNameFull() {  copyOnWrite();
      instance.clearNameFull();
      return this;
    }

    /**
     * <pre>
     * This value contains the combination of the full name and the honorific
     * prefix.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_full_with_honorific = 14;</code>
     */
    @java.lang.Override
    public boolean hasNameFullWithHonorific() {
      return instance.hasNameFullWithHonorific();
    }
    /**
     * <pre>
     * This value contains the combination of the full name and the honorific
     * prefix.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_full_with_honorific = 14;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameFullWithHonorific() {
      return instance.getNameFullWithHonorific();
    }
    /**
     * <pre>
     * This value contains the combination of the full name and the honorific
     * prefix.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_full_with_honorific = 14;</code>
     */
    public Builder setNameFullWithHonorific(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setNameFullWithHonorific(value);
      return this;
      }
    /**
     * <pre>
     * This value contains the combination of the full name and the honorific
     * prefix.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_full_with_honorific = 14;</code>
     */
    public Builder setNameFullWithHonorific(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setNameFullWithHonorific(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * This value contains the combination of the full name and the honorific
     * prefix.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_full_with_honorific = 14;</code>
     */
    public Builder mergeNameFullWithHonorific(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeNameFullWithHonorific(value);
      return this;
    }
    /**
     * <pre>
     * This value contains the combination of the full name and the honorific
     * prefix.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_full_with_honorific = 14;</code>
     */
    public Builder clearNameFullWithHonorific() {  copyOnWrite();
      instance.clearNameFullWithHonorific();
      return this;
    }

    /**
     * <pre>
     * Contact info additional fields.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken email_address = 15;</code>
     */
    @java.lang.Override
    public boolean hasEmailAddress() {
      return instance.hasEmailAddress();
    }
    /**
     * <pre>
     * Contact info additional fields.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken email_address = 15;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getEmailAddress() {
      return instance.getEmailAddress();
    }
    /**
     * <pre>
     * Contact info additional fields.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken email_address = 15;</code>
     */
    public Builder setEmailAddress(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setEmailAddress(value);
      return this;
      }
    /**
     * <pre>
     * Contact info additional fields.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken email_address = 15;</code>
     */
    public Builder setEmailAddress(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setEmailAddress(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Contact info additional fields.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken email_address = 15;</code>
     */
    public Builder mergeEmailAddress(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeEmailAddress(value);
      return this;
    }
    /**
     * <pre>
     * Contact info additional fields.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken email_address = 15;</code>
     */
    public Builder clearEmailAddress() {  copyOnWrite();
      instance.clearEmailAddress();
      return this;
    }

    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken company_name = 16;</code>
     */
    @java.lang.Override
    public boolean hasCompanyName() {
      return instance.hasCompanyName();
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken company_name = 16;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getCompanyName() {
      return instance.getCompanyName();
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken company_name = 16;</code>
     */
    public Builder setCompanyName(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setCompanyName(value);
      return this;
      }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken company_name = 16;</code>
     */
    public Builder setCompanyName(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setCompanyName(builderForValue.build());
      return this;
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken company_name = 16;</code>
     */
    public Builder mergeCompanyName(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeCompanyName(value);
      return this;
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken company_name = 16;</code>
     */
    public Builder clearCompanyName() {  copyOnWrite();
      instance.clearCompanyName();
      return this;
    }

    /**
     * <pre>
     * Address fields: These are user-provided values with no particular
     * guarantees about their format.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_city = 17;</code>
     */
    @java.lang.Override
    public boolean hasAddressCity() {
      return instance.hasAddressCity();
    }
    /**
     * <pre>
     * Address fields: These are user-provided values with no particular
     * guarantees about their format.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_city = 17;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressCity() {
      return instance.getAddressCity();
    }
    /**
     * <pre>
     * Address fields: These are user-provided values with no particular
     * guarantees about their format.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_city = 17;</code>
     */
    public Builder setAddressCity(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setAddressCity(value);
      return this;
      }
    /**
     * <pre>
     * Address fields: These are user-provided values with no particular
     * guarantees about their format.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_city = 17;</code>
     */
    public Builder setAddressCity(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setAddressCity(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Address fields: These are user-provided values with no particular
     * guarantees about their format.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_city = 17;</code>
     */
    public Builder mergeAddressCity(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeAddressCity(value);
      return this;
    }
    /**
     * <pre>
     * Address fields: These are user-provided values with no particular
     * guarantees about their format.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_city = 17;</code>
     */
    public Builder clearAddressCity() {  copyOnWrite();
      instance.clearAddressCity();
      return this;
    }

    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_state = 18;</code>
     */
    @java.lang.Override
    public boolean hasAddressState() {
      return instance.hasAddressState();
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_state = 18;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressState() {
      return instance.getAddressState();
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_state = 18;</code>
     */
    public Builder setAddressState(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setAddressState(value);
      return this;
      }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_state = 18;</code>
     */
    public Builder setAddressState(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setAddressState(builderForValue.build());
      return this;
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_state = 18;</code>
     */
    public Builder mergeAddressState(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeAddressState(value);
      return this;
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_state = 18;</code>
     */
    public Builder clearAddressState() {  copyOnWrite();
      instance.clearAddressState();
      return this;
    }

    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_zip = 19;</code>
     */
    @java.lang.Override
    public boolean hasAddressZip() {
      return instance.hasAddressZip();
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_zip = 19;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressZip() {
      return instance.getAddressZip();
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_zip = 19;</code>
     */
    public Builder setAddressZip(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setAddressZip(value);
      return this;
      }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_zip = 19;</code>
     */
    public Builder setAddressZip(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setAddressZip(builderForValue.build());
      return this;
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_zip = 19;</code>
     */
    public Builder mergeAddressZip(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeAddressZip(value);
      return this;
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_zip = 19;</code>
     */
    public Builder clearAddressZip() {  copyOnWrite();
      instance.clearAddressZip();
      return this;
    }

    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_country = 20;</code>
     */
    @java.lang.Override
    public boolean hasAddressCountry() {
      return instance.hasAddressCountry();
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_country = 20;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressCountry() {
      return instance.getAddressCountry();
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_country = 20;</code>
     */
    public Builder setAddressCountry(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setAddressCountry(value);
      return this;
      }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_country = 20;</code>
     */
    public Builder setAddressCountry(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setAddressCountry(builderForValue.build());
      return this;
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_country = 20;</code>
     */
    public Builder mergeAddressCountry(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeAddressCountry(value);
      return this;
    }
    /**
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_country = 20;</code>
     */
    public Builder clearAddressCountry() {  copyOnWrite();
      instance.clearAddressCountry();
      return this;
    }

    /**
     * <pre>
     * Additional address fields for i18n.
     * Includes all of the lines of a street address, including newlines, e.g.
     *   123 Main Street,
     *   Apt. #42
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_street_address = 21;</code>
     */
    @java.lang.Override
    public boolean hasAddressStreetAddress() {
      return instance.hasAddressStreetAddress();
    }
    /**
     * <pre>
     * Additional address fields for i18n.
     * Includes all of the lines of a street address, including newlines, e.g.
     *   123 Main Street,
     *   Apt. #42
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_street_address = 21;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressStreetAddress() {
      return instance.getAddressStreetAddress();
    }
    /**
     * <pre>
     * Additional address fields for i18n.
     * Includes all of the lines of a street address, including newlines, e.g.
     *   123 Main Street,
     *   Apt. #42
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_street_address = 21;</code>
     */
    public Builder setAddressStreetAddress(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setAddressStreetAddress(value);
      return this;
      }
    /**
     * <pre>
     * Additional address fields for i18n.
     * Includes all of the lines of a street address, including newlines, e.g.
     *   123 Main Street,
     *   Apt. #42
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_street_address = 21;</code>
     */
    public Builder setAddressStreetAddress(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setAddressStreetAddress(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Additional address fields for i18n.
     * Includes all of the lines of a street address, including newlines, e.g.
     *   123 Main Street,
     *   Apt. #42
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_street_address = 21;</code>
     */
    public Builder mergeAddressStreetAddress(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeAddressStreetAddress(value);
      return this;
    }
    /**
     * <pre>
     * Additional address fields for i18n.
     * Includes all of the lines of a street address, including newlines, e.g.
     *   123 Main Street,
     *   Apt. #42
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_street_address = 21;</code>
     */
    public Builder clearAddressStreetAddress() {  copyOnWrite();
      instance.clearAddressStreetAddress();
      return this;
    }

    /**
     * <pre>
     * A sorting code is similar to a postal code. However, whereas a postal code
     * normally refers to a single geographical location, a sorting code often
     * does not. Instead, a sorting code is assigned to an organization, which
     * might be geographically distributed. The most prominent example of a
     * sorting code system is CEDEX in France.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_sorting_code = 22;</code>
     */
    @java.lang.Override
    public boolean hasAddressSortingCode() {
      return instance.hasAddressSortingCode();
    }
    /**
     * <pre>
     * A sorting code is similar to a postal code. However, whereas a postal code
     * normally refers to a single geographical location, a sorting code often
     * does not. Instead, a sorting code is assigned to an organization, which
     * might be geographically distributed. The most prominent example of a
     * sorting code system is CEDEX in France.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_sorting_code = 22;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressSortingCode() {
      return instance.getAddressSortingCode();
    }
    /**
     * <pre>
     * A sorting code is similar to a postal code. However, whereas a postal code
     * normally refers to a single geographical location, a sorting code often
     * does not. Instead, a sorting code is assigned to an organization, which
     * might be geographically distributed. The most prominent example of a
     * sorting code system is CEDEX in France.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_sorting_code = 22;</code>
     */
    public Builder setAddressSortingCode(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setAddressSortingCode(value);
      return this;
      }
    /**
     * <pre>
     * A sorting code is similar to a postal code. However, whereas a postal code
     * normally refers to a single geographical location, a sorting code often
     * does not. Instead, a sorting code is assigned to an organization, which
     * might be geographically distributed. The most prominent example of a
     * sorting code system is CEDEX in France.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_sorting_code = 22;</code>
     */
    public Builder setAddressSortingCode(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setAddressSortingCode(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * A sorting code is similar to a postal code. However, whereas a postal code
     * normally refers to a single geographical location, a sorting code often
     * does not. Instead, a sorting code is assigned to an organization, which
     * might be geographically distributed. The most prominent example of a
     * sorting code system is CEDEX in France.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_sorting_code = 22;</code>
     */
    public Builder mergeAddressSortingCode(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeAddressSortingCode(value);
      return this;
    }
    /**
     * <pre>
     * A sorting code is similar to a postal code. However, whereas a postal code
     * normally refers to a single geographical location, a sorting code often
     * does not. Instead, a sorting code is assigned to an organization, which
     * might be geographically distributed. The most prominent example of a
     * sorting code system is CEDEX in France.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_sorting_code = 22;</code>
     */
    public Builder clearAddressSortingCode() {  copyOnWrite();
      instance.clearAddressSortingCode();
      return this;
    }

    /**
     * <pre>
     * A dependent locality is a subunit of a locality, where a "locality" is
     * roughly equivalent to a city. Examples of dependent localities include
     * inner-city districts and suburbs.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_dependent_locality = 23;</code>
     */
    @java.lang.Override
    public boolean hasAddressDependentLocality() {
      return instance.hasAddressDependentLocality();
    }
    /**
     * <pre>
     * A dependent locality is a subunit of a locality, where a "locality" is
     * roughly equivalent to a city. Examples of dependent localities include
     * inner-city districts and suburbs.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_dependent_locality = 23;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressDependentLocality() {
      return instance.getAddressDependentLocality();
    }
    /**
     * <pre>
     * A dependent locality is a subunit of a locality, where a "locality" is
     * roughly equivalent to a city. Examples of dependent localities include
     * inner-city districts and suburbs.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_dependent_locality = 23;</code>
     */
    public Builder setAddressDependentLocality(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setAddressDependentLocality(value);
      return this;
      }
    /**
     * <pre>
     * A dependent locality is a subunit of a locality, where a "locality" is
     * roughly equivalent to a city. Examples of dependent localities include
     * inner-city districts and suburbs.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_dependent_locality = 23;</code>
     */
    public Builder setAddressDependentLocality(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setAddressDependentLocality(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * A dependent locality is a subunit of a locality, where a "locality" is
     * roughly equivalent to a city. Examples of dependent localities include
     * inner-city districts and suburbs.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_dependent_locality = 23;</code>
     */
    public Builder mergeAddressDependentLocality(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeAddressDependentLocality(value);
      return this;
    }
    /**
     * <pre>
     * A dependent locality is a subunit of a locality, where a "locality" is
     * roughly equivalent to a city. Examples of dependent localities include
     * inner-city districts and suburbs.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_dependent_locality = 23;</code>
     */
    public Builder clearAddressDependentLocality() {  copyOnWrite();
      instance.clearAddressDependentLocality();
      return this;
    }

    /**
     * <pre>
     * A BCP 47 language code.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_language_code = 24;</code>
     */
    @java.lang.Override
    public boolean hasAddressLanguageCode() {
      return instance.hasAddressLanguageCode();
    }
    /**
     * <pre>
     * A BCP 47 language code.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_language_code = 24;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressLanguageCode() {
      return instance.getAddressLanguageCode();
    }
    /**
     * <pre>
     * A BCP 47 language code.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_language_code = 24;</code>
     */
    public Builder setAddressLanguageCode(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setAddressLanguageCode(value);
      return this;
      }
    /**
     * <pre>
     * A BCP 47 language code.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_language_code = 24;</code>
     */
    public Builder setAddressLanguageCode(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setAddressLanguageCode(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * A BCP 47 language code.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_language_code = 24;</code>
     */
    public Builder mergeAddressLanguageCode(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeAddressLanguageCode(value);
      return this;
    }
    /**
     * <pre>
     * A BCP 47 language code.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_language_code = 24;</code>
     */
    public Builder clearAddressLanguageCode() {  copyOnWrite();
      instance.clearAddressLanguageCode();
      return this;
    }

    /**
     * <pre>
     * The street name of the address, without a house number.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_name = 25;</code>
     */
    @java.lang.Override
    public boolean hasAddressThoroughfareName() {
      return instance.hasAddressThoroughfareName();
    }
    /**
     * <pre>
     * The street name of the address, without a house number.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_name = 25;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressThoroughfareName() {
      return instance.getAddressThoroughfareName();
    }
    /**
     * <pre>
     * The street name of the address, without a house number.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_name = 25;</code>
     */
    public Builder setAddressThoroughfareName(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setAddressThoroughfareName(value);
      return this;
      }
    /**
     * <pre>
     * The street name of the address, without a house number.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_name = 25;</code>
     */
    public Builder setAddressThoroughfareName(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setAddressThoroughfareName(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The street name of the address, without a house number.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_name = 25;</code>
     */
    public Builder mergeAddressThoroughfareName(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeAddressThoroughfareName(value);
      return this;
    }
    /**
     * <pre>
     * The street name of the address, without a house number.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_name = 25;</code>
     */
    public Builder clearAddressThoroughfareName() {  copyOnWrite();
      instance.clearAddressThoroughfareName();
      return this;
    }

    /**
     * <pre>
     * The house number, which may be alphanumeric.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_number = 26;</code>
     */
    @java.lang.Override
    public boolean hasAddressThoroughfareNumber() {
      return instance.hasAddressThoroughfareNumber();
    }
    /**
     * <pre>
     * The house number, which may be alphanumeric.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_number = 26;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressThoroughfareNumber() {
      return instance.getAddressThoroughfareNumber();
    }
    /**
     * <pre>
     * The house number, which may be alphanumeric.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_number = 26;</code>
     */
    public Builder setAddressThoroughfareNumber(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setAddressThoroughfareNumber(value);
      return this;
      }
    /**
     * <pre>
     * The house number, which may be alphanumeric.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_number = 26;</code>
     */
    public Builder setAddressThoroughfareNumber(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setAddressThoroughfareNumber(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The house number, which may be alphanumeric.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_number = 26;</code>
     */
    public Builder mergeAddressThoroughfareNumber(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeAddressThoroughfareNumber(value);
      return this;
    }
    /**
     * <pre>
     * The house number, which may be alphanumeric.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_number = 26;</code>
     */
    public Builder clearAddressThoroughfareNumber() {  copyOnWrite();
      instance.clearAddressThoroughfareNumber();
      return this;
    }

    /**
     * <pre>
     * Describes a crossing street as it is used in some countries to describe a
     * location.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_dependent_thoroughfare_name = 27;</code>
     */
    @java.lang.Override
    public boolean hasAddressDependentThoroughfareName() {
      return instance.hasAddressDependentThoroughfareName();
    }
    /**
     * <pre>
     * Describes a crossing street as it is used in some countries to describe a
     * location.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_dependent_thoroughfare_name = 27;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressDependentThoroughfareName() {
      return instance.getAddressDependentThoroughfareName();
    }
    /**
     * <pre>
     * Describes a crossing street as it is used in some countries to describe a
     * location.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_dependent_thoroughfare_name = 27;</code>
     */
    public Builder setAddressDependentThoroughfareName(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setAddressDependentThoroughfareName(value);
      return this;
      }
    /**
     * <pre>
     * Describes a crossing street as it is used in some countries to describe a
     * location.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_dependent_thoroughfare_name = 27;</code>
     */
    public Builder setAddressDependentThoroughfareName(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setAddressDependentThoroughfareName(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Describes a crossing street as it is used in some countries to describe a
     * location.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_dependent_thoroughfare_name = 27;</code>
     */
    public Builder mergeAddressDependentThoroughfareName(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeAddressDependentThoroughfareName(value);
      return this;
    }
    /**
     * <pre>
     * Describes a crossing street as it is used in some countries to describe a
     * location.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_dependent_thoroughfare_name = 27;</code>
     */
    public Builder clearAddressDependentThoroughfareName() {  copyOnWrite();
      instance.clearAddressDependentThoroughfareName();
      return this;
    }

    /**
     * <pre>
     * Contains both the thoroughfare and the dependent thoroughfare name.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_and_dependent_thoroughfare_name = 28;</code>
     */
    @java.lang.Override
    public boolean hasAddressThoroughfareAndDependentThoroughfareName() {
      return instance.hasAddressThoroughfareAndDependentThoroughfareName();
    }
    /**
     * <pre>
     * Contains both the thoroughfare and the dependent thoroughfare name.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_and_dependent_thoroughfare_name = 28;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressThoroughfareAndDependentThoroughfareName() {
      return instance.getAddressThoroughfareAndDependentThoroughfareName();
    }
    /**
     * <pre>
     * Contains both the thoroughfare and the dependent thoroughfare name.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_and_dependent_thoroughfare_name = 28;</code>
     */
    public Builder setAddressThoroughfareAndDependentThoroughfareName(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setAddressThoroughfareAndDependentThoroughfareName(value);
      return this;
      }
    /**
     * <pre>
     * Contains both the thoroughfare and the dependent thoroughfare name.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_and_dependent_thoroughfare_name = 28;</code>
     */
    public Builder setAddressThoroughfareAndDependentThoroughfareName(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setAddressThoroughfareAndDependentThoroughfareName(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Contains both the thoroughfare and the dependent thoroughfare name.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_and_dependent_thoroughfare_name = 28;</code>
     */
    public Builder mergeAddressThoroughfareAndDependentThoroughfareName(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeAddressThoroughfareAndDependentThoroughfareName(value);
      return this;
    }
    /**
     * <pre>
     * Contains both the thoroughfare and the dependent thoroughfare name.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_and_dependent_thoroughfare_name = 28;</code>
     */
    public Builder clearAddressThoroughfareAndDependentThoroughfareName() {  copyOnWrite();
      instance.clearAddressThoroughfareAndDependentThoroughfareName();
      return this;
    }

    /**
     * <pre>
     * A premise name corresponds to the name of a place or a building below the
     * granularity of a street.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_premise_name = 29;</code>
     */
    @java.lang.Override
    public boolean hasAddressPremiseName() {
      return instance.hasAddressPremiseName();
    }
    /**
     * <pre>
     * A premise name corresponds to the name of a place or a building below the
     * granularity of a street.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_premise_name = 29;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressPremiseName() {
      return instance.getAddressPremiseName();
    }
    /**
     * <pre>
     * A premise name corresponds to the name of a place or a building below the
     * granularity of a street.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_premise_name = 29;</code>
     */
    public Builder setAddressPremiseName(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setAddressPremiseName(value);
      return this;
      }
    /**
     * <pre>
     * A premise name corresponds to the name of a place or a building below the
     * granularity of a street.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_premise_name = 29;</code>
     */
    public Builder setAddressPremiseName(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setAddressPremiseName(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * A premise name corresponds to the name of a place or a building below the
     * granularity of a street.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_premise_name = 29;</code>
     */
    public Builder mergeAddressPremiseName(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeAddressPremiseName(value);
      return this;
    }
    /**
     * <pre>
     * A premise name corresponds to the name of a place or a building below the
     * granularity of a street.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_premise_name = 29;</code>
     */
    public Builder clearAddressPremiseName() {  copyOnWrite();
      instance.clearAddressPremiseName();
      return this;
    }

    /**
     * <pre>
     * Contains the floor, staircase or apartment number within a building.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_subpremise_name = 30;</code>
     */
    @java.lang.Override
    public boolean hasAddressSubpremiseName() {
      return instance.hasAddressSubpremiseName();
    }
    /**
     * <pre>
     * Contains the floor, staircase or apartment number within a building.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_subpremise_name = 30;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressSubpremiseName() {
      return instance.getAddressSubpremiseName();
    }
    /**
     * <pre>
     * Contains the floor, staircase or apartment number within a building.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_subpremise_name = 30;</code>
     */
    public Builder setAddressSubpremiseName(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setAddressSubpremiseName(value);
      return this;
      }
    /**
     * <pre>
     * Contains the floor, staircase or apartment number within a building.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_subpremise_name = 30;</code>
     */
    public Builder setAddressSubpremiseName(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setAddressSubpremiseName(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Contains the floor, staircase or apartment number within a building.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_subpremise_name = 30;</code>
     */
    public Builder mergeAddressSubpremiseName(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeAddressSubpremiseName(value);
      return this;
    }
    /**
     * <pre>
     * Contains the floor, staircase or apartment number within a building.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_subpremise_name = 30;</code>
     */
    public Builder clearAddressSubpremiseName() {  copyOnWrite();
      instance.clearAddressSubpremiseName();
      return this;
    }

    /**
     * <pre>
     * The apartment number within a building.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_apt_num = 31;</code>
     */
    @java.lang.Override
    public boolean hasAddressAptNum() {
      return instance.hasAddressAptNum();
    }
    /**
     * <pre>
     * The apartment number within a building.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_apt_num = 31;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressAptNum() {
      return instance.getAddressAptNum();
    }
    /**
     * <pre>
     * The apartment number within a building.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_apt_num = 31;</code>
     */
    public Builder setAddressAptNum(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setAddressAptNum(value);
      return this;
      }
    /**
     * <pre>
     * The apartment number within a building.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_apt_num = 31;</code>
     */
    public Builder setAddressAptNum(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setAddressAptNum(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The apartment number within a building.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_apt_num = 31;</code>
     */
    public Builder mergeAddressAptNum(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeAddressAptNum(value);
      return this;
    }
    /**
     * <pre>
     * The apartment number within a building.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_apt_num = 31;</code>
     */
    public Builder clearAddressAptNum() {  copyOnWrite();
      instance.clearAddressAptNum();
      return this;
    }

    /**
     * <pre>
     * The floor number within a building.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_floor = 32;</code>
     */
    @java.lang.Override
    public boolean hasAddressFloor() {
      return instance.hasAddressFloor();
    }
    /**
     * <pre>
     * The floor number within a building.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_floor = 32;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressFloor() {
      return instance.getAddressFloor();
    }
    /**
     * <pre>
     * The floor number within a building.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_floor = 32;</code>
     */
    public Builder setAddressFloor(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setAddressFloor(value);
      return this;
      }
    /**
     * <pre>
     * The floor number within a building.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_floor = 32;</code>
     */
    public Builder setAddressFloor(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setAddressFloor(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The floor number within a building.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_floor = 32;</code>
     */
    public Builder mergeAddressFloor(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergeAddressFloor(value);
      return this;
    }
    /**
     * <pre>
     * The floor number within a building.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_floor = 32;</code>
     */
    public Builder clearAddressFloor() {  copyOnWrite();
      instance.clearAddressFloor();
      return this;
    }

    /**
     * <pre>
     * Phone.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken phone_home_whole_number = 33;</code>
     */
    @java.lang.Override
    public boolean hasPhoneHomeWholeNumber() {
      return instance.hasPhoneHomeWholeNumber();
    }
    /**
     * <pre>
     * Phone.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken phone_home_whole_number = 33;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getPhoneHomeWholeNumber() {
      return instance.getPhoneHomeWholeNumber();
    }
    /**
     * <pre>
     * Phone.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken phone_home_whole_number = 33;</code>
     */
    public Builder setPhoneHomeWholeNumber(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.setPhoneHomeWholeNumber(value);
      return this;
      }
    /**
     * <pre>
     * Phone.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken phone_home_whole_number = 33;</code>
     */
    public Builder setPhoneHomeWholeNumber(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken.Builder builderForValue) {
      copyOnWrite();
      instance.setPhoneHomeWholeNumber(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Phone.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken phone_home_whole_number = 33;</code>
     */
    public Builder mergePhoneHomeWholeNumber(org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken value) {
      copyOnWrite();
      instance.mergePhoneHomeWholeNumber(value);
      return this;
    }
    /**
     * <pre>
     * Phone.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.StringToken phone_home_whole_number = 33;</code>
     */
    public Builder clearPhoneHomeWholeNumber() {  copyOnWrite();
      instance.clearPhoneHomeWholeNumber();
      return this;
    }

    /**
     * <pre>
     * Birthdate fields.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_day = 34;</code>
     */
    @java.lang.Override
    public boolean hasBirthdateDay() {
      return instance.hasBirthdateDay();
    }
    /**
     * <pre>
     * Birthdate fields.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_day = 34;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken getBirthdateDay() {
      return instance.getBirthdateDay();
    }
    /**
     * <pre>
     * Birthdate fields.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_day = 34;</code>
     */
    public Builder setBirthdateDay(org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken value) {
      copyOnWrite();
      instance.setBirthdateDay(value);
      return this;
      }
    /**
     * <pre>
     * Birthdate fields.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_day = 34;</code>
     */
    public Builder setBirthdateDay(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken.Builder builderForValue) {
      copyOnWrite();
      instance.setBirthdateDay(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Birthdate fields.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_day = 34;</code>
     */
    public Builder mergeBirthdateDay(org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken value) {
      copyOnWrite();
      instance.mergeBirthdateDay(value);
      return this;
    }
    /**
     * <pre>
     * Birthdate fields.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_day = 34;</code>
     */
    public Builder clearBirthdateDay() {  copyOnWrite();
      instance.clearBirthdateDay();
      return this;
    }

    /**
     * <pre>
     * Between 1 and 12.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_month = 35;</code>
     */
    @java.lang.Override
    public boolean hasBirthdateMonth() {
      return instance.hasBirthdateMonth();
    }
    /**
     * <pre>
     * Between 1 and 12.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_month = 35;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken getBirthdateMonth() {
      return instance.getBirthdateMonth();
    }
    /**
     * <pre>
     * Between 1 and 12.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_month = 35;</code>
     */
    public Builder setBirthdateMonth(org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken value) {
      copyOnWrite();
      instance.setBirthdateMonth(value);
      return this;
      }
    /**
     * <pre>
     * Between 1 and 12.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_month = 35;</code>
     */
    public Builder setBirthdateMonth(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken.Builder builderForValue) {
      copyOnWrite();
      instance.setBirthdateMonth(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Between 1 and 12.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_month = 35;</code>
     */
    public Builder mergeBirthdateMonth(org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken value) {
      copyOnWrite();
      instance.mergeBirthdateMonth(value);
      return this;
    }
    /**
     * <pre>
     * Between 1 and 12.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_month = 35;</code>
     */
    public Builder clearBirthdateMonth() {  copyOnWrite();
      instance.clearBirthdateMonth();
      return this;
    }

    /**
     * <pre>
     * 4 digits.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_year = 36;</code>
     */
    @java.lang.Override
    public boolean hasBirthdateYear() {
      return instance.hasBirthdateYear();
    }
    /**
     * <pre>
     * 4 digits.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_year = 36;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken getBirthdateYear() {
      return instance.getBirthdateYear();
    }
    /**
     * <pre>
     * 4 digits.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_year = 36;</code>
     */
    public Builder setBirthdateYear(org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken value) {
      copyOnWrite();
      instance.setBirthdateYear(value);
      return this;
      }
    /**
     * <pre>
     * 4 digits.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_year = 36;</code>
     */
    public Builder setBirthdateYear(
        org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken.Builder builderForValue) {
      copyOnWrite();
      instance.setBirthdateYear(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * 4 digits.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_year = 36;</code>
     */
    public Builder mergeBirthdateYear(org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken value) {
      copyOnWrite();
      instance.mergeBirthdateYear(value);
      return this;
    }
    /**
     * <pre>
     * 4 digits.
     * </pre>
     *
     * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_year = 36;</code>
     */
    public Builder clearBirthdateYear() {  copyOnWrite();
      instance.clearBirthdateYear();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.ContactInfoSpecifics)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.ContactInfoSpecifics();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "bitField1_",
            "guid_",
            "source_",
            "useCount_",
            "useDateWindowsEpochMicros_",
            "profileLabel_",
            "nameHonorific_",
            "nameFirst_",
            "nameMiddle_",
            "nameLast_",
            "nameLastFirst_",
            "nameLastConjunction_",
            "nameLastSecond_",
            "nameFull_",
            "nameFullWithHonorific_",
            "emailAddress_",
            "companyName_",
            "addressCity_",
            "addressState_",
            "addressZip_",
            "addressCountry_",
            "addressStreetAddress_",
            "addressSortingCode_",
            "addressDependentLocality_",
            "addressLanguageCode_",
            "addressThoroughfareName_",
            "addressThoroughfareNumber_",
            "addressDependentThoroughfareName_",
            "addressThoroughfareAndDependentThoroughfareName_",
            "addressPremiseName_",
            "addressSubpremiseName_",
            "addressAptNum_",
            "addressFloor_",
            "phoneHomeWholeNumber_",
            "birthdateDay_",
            "birthdateMonth_",
            "birthdateYear_",
          };
          java.lang.String info =
              "\u0001$\u0000\u0002\u0001$$\u0000\u0000\u0000\u0001\u1008\u0000\u0002\u1008\u0001" +
              "\u0003\u1002\u0002\u0004\u1002\u0003\u0005\u1008\u0004\u0006\u1009\u0005\u0007\u1009" +
              "\u0006\b\u1009\u0007\t\u1009\b\n\u1009\t\u000b\u1009\n\f\u1009\u000b\r\u1009\f\u000e" +
              "\u1009\r\u000f\u1009\u000e\u0010\u1009\u000f\u0011\u1009\u0010\u0012\u1009\u0011" +
              "\u0013\u1009\u0012\u0014\u1009\u0013\u0015\u1009\u0014\u0016\u1009\u0015\u0017\u1009" +
              "\u0016\u0018\u1009\u0017\u0019\u1009\u0018\u001a\u1009\u0019\u001b\u1009\u001a\u001c" +
              "\u1009\u001b\u001d\u1009\u001c\u001e\u1009\u001d\u001f\u1009\u001e \u1009\u001f!" +
              "\u1009 \"\u1009!#\u1009\"$\u1009#";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.components.sync.protocol.ContactInfoSpecifics> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.components.sync.protocol.ContactInfoSpecifics.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.ContactInfoSpecifics>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.ContactInfoSpecifics)
  private static final org.chromium.components.sync.protocol.ContactInfoSpecifics DEFAULT_INSTANCE;
  static {
    ContactInfoSpecifics defaultInstance = new ContactInfoSpecifics();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      ContactInfoSpecifics.class, defaultInstance);
  }

  public static org.chromium.components.sync.protocol.ContactInfoSpecifics getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ContactInfoSpecifics> PARSER;

  public static com.google.protobuf.Parser<ContactInfoSpecifics> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

