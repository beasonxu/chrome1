// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/location/LocationSettings

#ifndef org_chromium_components_location_LocationSettings_JNI
#define org_chromium_components_location_LocationSettings_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_location_LocationSettings[];
const char kClassPath_org_chromium_components_location_LocationSettings[] =
    "org/chromium/components/location/LocationSettings";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_location_LocationSettings_clazz(nullptr);
#ifndef org_chromium_components_location_LocationSettings_clazz_defined
#define org_chromium_components_location_LocationSettings_clazz_defined
inline jclass org_chromium_components_location_LocationSettings_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_location_LocationSettings,
      &g_org_chromium_components_location_LocationSettings_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
static void JNI_LocationSettings_OnLocationSettingsDialogOutcome(JNIEnv* env, jlong callback,
    jint result);

JNI_GENERATOR_EXPORT void Java_J_N_MeFOXp9F(
    JNIEnv* env,
    jclass jcaller,
    jlong callback,
    jint result) {
  return JNI_LocationSettings_OnLocationSettingsDialogOutcome(env, callback, result);
}


static std::atomic<jmethodID>
    g_org_chromium_components_location_LocationSettings_hasAndroidLocationPermission(nullptr);
static jboolean Java_LocationSettings_hasAndroidLocationPermission(JNIEnv* env) {
  jclass clazz = org_chromium_components_location_LocationSettings_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_location_LocationSettings_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "hasAndroidLocationPermission",
          "()Z",
          &g_org_chromium_components_location_LocationSettings_hasAndroidLocationPermission);

  jboolean ret =
      env->CallStaticBooleanMethod(clazz,
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_location_LocationSettings_canPromptForAndroidLocationPermission(nullptr);
static jboolean Java_LocationSettings_canPromptForAndroidLocationPermission(JNIEnv* env, const
    base::android::JavaRef<jobject>& windowAndroid) {
  jclass clazz = org_chromium_components_location_LocationSettings_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_location_LocationSettings_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "canPromptForAndroidLocationPermission",
          "(Lorg/chromium/ui/base/WindowAndroid;)Z",
&g_org_chromium_components_location_LocationSettings_canPromptForAndroidLocationPermission);

  jboolean ret =
      env->CallStaticBooleanMethod(clazz,
          call_context.base.method_id, windowAndroid.obj());
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_location_LocationSettings_isSystemLocationSettingEnabled(nullptr);
static jboolean Java_LocationSettings_isSystemLocationSettingEnabled(JNIEnv* env) {
  jclass clazz = org_chromium_components_location_LocationSettings_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_location_LocationSettings_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "isSystemLocationSettingEnabled",
          "()Z",
          &g_org_chromium_components_location_LocationSettings_isSystemLocationSettingEnabled);

  jboolean ret =
      env->CallStaticBooleanMethod(clazz,
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_location_LocationSettings_canPromptToEnableSystemLocationSetting(nullptr);
static jboolean Java_LocationSettings_canPromptToEnableSystemLocationSetting(JNIEnv* env) {
  jclass clazz = org_chromium_components_location_LocationSettings_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_location_LocationSettings_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "canPromptToEnableSystemLocationSetting",
          "()Z",
&g_org_chromium_components_location_LocationSettings_canPromptToEnableSystemLocationSetting);

  jboolean ret =
      env->CallStaticBooleanMethod(clazz,
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_location_LocationSettings_promptToEnableSystemLocationSetting(nullptr);
static void Java_LocationSettings_promptToEnableSystemLocationSetting(JNIEnv* env, JniIntWrapper
    promptContext,
    const base::android::JavaRef<jobject>& window,
    jlong nativeCallback) {
  jclass clazz = org_chromium_components_location_LocationSettings_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_location_LocationSettings_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "promptToEnableSystemLocationSetting",
          "(ILorg/chromium/ui/base/WindowAndroid;J)V",
          &g_org_chromium_components_location_LocationSettings_promptToEnableSystemLocationSetting);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, as_jint(promptContext), window.obj(), nativeCallback);
}

#endif  // org_chromium_components_location_LocationSettings_JNI
