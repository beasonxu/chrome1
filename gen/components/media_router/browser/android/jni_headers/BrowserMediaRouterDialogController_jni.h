// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/media_router/BrowserMediaRouterDialogController

#ifndef org_chromium_components_media_router_BrowserMediaRouterDialogController_JNI
#define org_chromium_components_media_router_BrowserMediaRouterDialogController_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_media_1router_BrowserMediaRouterDialogController[];
const char kClassPath_org_chromium_components_media_1router_BrowserMediaRouterDialogController[] =
    "org/chromium/components/media_router/BrowserMediaRouterDialogController";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_media_1router_BrowserMediaRouterDialogController_clazz(nullptr);
#ifndef org_chromium_components_media_1router_BrowserMediaRouterDialogController_clazz_defined
#define org_chromium_components_media_1router_BrowserMediaRouterDialogController_clazz_defined
inline jclass org_chromium_components_media_1router_BrowserMediaRouterDialogController_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_media_1router_BrowserMediaRouterDialogController,
      &g_org_chromium_components_media_1router_BrowserMediaRouterDialogController_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace media_router {

JNI_GENERATOR_EXPORT void Java_J_N_MsJMWxq0(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeMediaRouterDialogControllerAndroid,
    jobject caller) {
  MediaRouterDialogControllerAndroid* native =
      reinterpret_cast<MediaRouterDialogControllerAndroid*>(nativeMediaRouterDialogControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnDialogCancelled");
  return native->OnDialogCancelled(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT void Java_J_N_MUhSLnzh(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeMediaRouterDialogControllerAndroid,
    jobject caller,
    jstring sourceUrn,
    jstring sinkId) {
  MediaRouterDialogControllerAndroid* native =
      reinterpret_cast<MediaRouterDialogControllerAndroid*>(nativeMediaRouterDialogControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnSinkSelected");
  return native->OnSinkSelected(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, sourceUrn),
      base::android::JavaParamRef<jstring>(env, sinkId));
}

JNI_GENERATOR_EXPORT void Java_J_N_MSLqZyD4(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeMediaRouterDialogControllerAndroid,
    jobject caller,
    jstring routeId) {
  MediaRouterDialogControllerAndroid* native =
      reinterpret_cast<MediaRouterDialogControllerAndroid*>(nativeMediaRouterDialogControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnRouteClosed");
  return native->OnRouteClosed(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, routeId));
}

JNI_GENERATOR_EXPORT void Java_J_N_MY1J7b0i(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeMediaRouterDialogControllerAndroid,
    jobject caller) {
  MediaRouterDialogControllerAndroid* native =
      reinterpret_cast<MediaRouterDialogControllerAndroid*>(nativeMediaRouterDialogControllerAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnMediaSourceNotSupported");
  return native->OnMediaSourceNotSupported(env, base::android::JavaParamRef<jobject>(env, caller));
}


static std::atomic<jmethodID>
    g_org_chromium_components_media_1router_BrowserMediaRouterDialogController_create(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_BrowserMediaRouterDialogController_create(JNIEnv* env, jlong nativeDialogController,
    const base::android::JavaRef<jobject>& webContents) {
  jclass clazz =
      org_chromium_components_media_1router_BrowserMediaRouterDialogController_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_media_1router_BrowserMediaRouterDialogController_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "create",
"(JLorg/chromium/content_public/browser/WebContents;)Lorg/chromium/components/media_router/BrowserMediaRouterDialogController;",
          &g_org_chromium_components_media_1router_BrowserMediaRouterDialogController_create);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, nativeDialogController, webContents.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_media_1router_BrowserMediaRouterDialogController_openRouteChooserDialog(nullptr);
static void Java_BrowserMediaRouterDialogController_openRouteChooserDialog(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobjectArray>& sourceUrns) {
  jclass clazz =
      org_chromium_components_media_1router_BrowserMediaRouterDialogController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_media_1router_BrowserMediaRouterDialogController_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "openRouteChooserDialog",
          "([Ljava/lang/String;)V",
&g_org_chromium_components_media_1router_BrowserMediaRouterDialogController_openRouteChooserDialog);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, sourceUrns.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_media_1router_BrowserMediaRouterDialogController_openRouteControllerDialog(nullptr);
static void Java_BrowserMediaRouterDialogController_openRouteControllerDialog(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& sourceUrn,
    const base::android::JavaRef<jstring>& mediaRouteId) {
  jclass clazz =
      org_chromium_components_media_1router_BrowserMediaRouterDialogController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_media_1router_BrowserMediaRouterDialogController_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "openRouteControllerDialog",
          "(Ljava/lang/String;Ljava/lang/String;)V",
&g_org_chromium_components_media_1router_BrowserMediaRouterDialogController_openRouteControllerDialog);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, sourceUrn.obj(), mediaRouteId.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_media_1router_BrowserMediaRouterDialogController_closeDialog(nullptr);
static void Java_BrowserMediaRouterDialogController_closeDialog(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_media_1router_BrowserMediaRouterDialogController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_media_1router_BrowserMediaRouterDialogController_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "closeDialog",
          "()V",
          &g_org_chromium_components_media_1router_BrowserMediaRouterDialogController_closeDialog);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_media_1router_BrowserMediaRouterDialogController_isShowingDialog(nullptr);
static jboolean Java_BrowserMediaRouterDialogController_isShowingDialog(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_media_1router_BrowserMediaRouterDialogController_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_media_1router_BrowserMediaRouterDialogController_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "isShowingDialog",
          "()Z",
&g_org_chromium_components_media_1router_BrowserMediaRouterDialogController_isShowingDialog);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

}  // namespace media_router

#endif  // org_chromium_components_media_router_BrowserMediaRouterDialogController_JNI
