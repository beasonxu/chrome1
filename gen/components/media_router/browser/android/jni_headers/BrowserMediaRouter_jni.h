// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/media_router/BrowserMediaRouter

#ifndef org_chromium_components_media_router_BrowserMediaRouter_JNI
#define org_chromium_components_media_router_BrowserMediaRouter_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_media_1router_BrowserMediaRouter[];
const char kClassPath_org_chromium_components_media_1router_BrowserMediaRouter[] =
    "org/chromium/components/media_router/BrowserMediaRouter";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_media_1router_BrowserMediaRouter_clazz(nullptr);
#ifndef org_chromium_components_media_1router_BrowserMediaRouter_clazz_defined
#define org_chromium_components_media_1router_BrowserMediaRouter_clazz_defined
inline jclass org_chromium_components_media_1router_BrowserMediaRouter_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_media_1router_BrowserMediaRouter,
      &g_org_chromium_components_media_1router_BrowserMediaRouter_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace media_router {

JNI_GENERATOR_EXPORT void Java_J_N_M2xU9exV(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeMediaRouterAndroidBridge,
    jobject caller,
    jstring sourceUrn,
    jint count) {
  MediaRouterAndroidBridge* native =
      reinterpret_cast<MediaRouterAndroidBridge*>(nativeMediaRouterAndroidBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnSinksReceived");
  return native->OnSinksReceived(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, sourceUrn), count);
}

JNI_GENERATOR_EXPORT void Java_J_N_MKeidYbK(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeMediaRouterAndroidBridge,
    jobject caller,
    jstring mediaRouteId,
    jstring mediaSinkId,
    jint createRouteRequestId,
    jboolean wasLaunched) {
  MediaRouterAndroidBridge* native =
      reinterpret_cast<MediaRouterAndroidBridge*>(nativeMediaRouterAndroidBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnRouteCreated");
  return native->OnRouteCreated(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, mediaRouteId),
      base::android::JavaParamRef<jstring>(env, mediaSinkId), createRouteRequestId, wasLaunched);
}

JNI_GENERATOR_EXPORT void Java_J_N_MpDGY7p4(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeMediaRouterAndroidBridge,
    jobject caller,
    jstring errorText,
    jint requestId) {
  MediaRouterAndroidBridge* native =
      reinterpret_cast<MediaRouterAndroidBridge*>(nativeMediaRouterAndroidBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnCreateRouteRequestError");
  return native->OnCreateRouteRequestError(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, errorText), requestId);
}

JNI_GENERATOR_EXPORT void Java_J_N_M9VY0XZb(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeMediaRouterAndroidBridge,
    jobject caller,
    jstring errorText,
    jint requestId) {
  MediaRouterAndroidBridge* native =
      reinterpret_cast<MediaRouterAndroidBridge*>(nativeMediaRouterAndroidBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnJoinRouteRequestError");
  return native->OnJoinRouteRequestError(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, errorText), requestId);
}

JNI_GENERATOR_EXPORT void Java_J_N_MsmvhUN_1(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeMediaRouterAndroidBridge,
    jobject caller,
    jstring mediaRouteId) {
  MediaRouterAndroidBridge* native =
      reinterpret_cast<MediaRouterAndroidBridge*>(nativeMediaRouterAndroidBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnRouteTerminated");
  return native->OnRouteTerminated(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, mediaRouteId));
}

JNI_GENERATOR_EXPORT void Java_J_N_MRz6aWnp(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeMediaRouterAndroidBridge,
    jobject caller,
    jstring mediaRouteId,
    jstring message) {
  MediaRouterAndroidBridge* native =
      reinterpret_cast<MediaRouterAndroidBridge*>(nativeMediaRouterAndroidBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnRouteClosed");
  return native->OnRouteClosed(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, mediaRouteId),
      base::android::JavaParamRef<jstring>(env, message));
}

JNI_GENERATOR_EXPORT void Java_J_N_MM5f2cm0(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeMediaRouterAndroidBridge,
    jobject caller,
    jstring mediaRouteId,
    jstring message) {
  MediaRouterAndroidBridge* native =
      reinterpret_cast<MediaRouterAndroidBridge*>(nativeMediaRouterAndroidBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnMessage");
  return native->OnMessage(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, mediaRouteId),
      base::android::JavaParamRef<jstring>(env, message));
}


static std::atomic<jmethodID>
    g_org_chromium_components_media_1router_BrowserMediaRouter_create(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_BrowserMediaRouter_create(JNIEnv* env, jlong
    nativeMediaRouterAndroidBridge) {
  jclass clazz = org_chromium_components_media_1router_BrowserMediaRouter_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_media_1router_BrowserMediaRouter_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "create",
          "(J)Lorg/chromium/components/media_router/BrowserMediaRouter;",
          &g_org_chromium_components_media_1router_BrowserMediaRouter_create);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, nativeMediaRouterAndroidBridge);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_media_1router_BrowserMediaRouter_startObservingMediaSinks(nullptr);
static jboolean Java_BrowserMediaRouter_startObservingMediaSinks(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& sourceId) {
  jclass clazz = org_chromium_components_media_1router_BrowserMediaRouter_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_media_1router_BrowserMediaRouter_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "startObservingMediaSinks",
          "(Ljava/lang/String;)Z",
          &g_org_chromium_components_media_1router_BrowserMediaRouter_startObservingMediaSinks);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id, sourceId.obj());
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_media_1router_BrowserMediaRouter_stopObservingMediaSinks(nullptr);
static void Java_BrowserMediaRouter_stopObservingMediaSinks(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& sourceId) {
  jclass clazz = org_chromium_components_media_1router_BrowserMediaRouter_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_media_1router_BrowserMediaRouter_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "stopObservingMediaSinks",
          "(Ljava/lang/String;)V",
          &g_org_chromium_components_media_1router_BrowserMediaRouter_stopObservingMediaSinks);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, sourceId.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_media_1router_BrowserMediaRouter_getSinkUrn(nullptr);
static base::android::ScopedJavaLocalRef<jstring> Java_BrowserMediaRouter_getSinkUrn(JNIEnv* env,
    const base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& sourceUrn,
    JniIntWrapper index) {
  jclass clazz = org_chromium_components_media_1router_BrowserMediaRouter_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_media_1router_BrowserMediaRouter_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getSinkUrn",
          "(Ljava/lang/String;I)Ljava/lang/String;",
          &g_org_chromium_components_media_1router_BrowserMediaRouter_getSinkUrn);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id, sourceUrn.obj(), as_jint(index)));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_media_1router_BrowserMediaRouter_getSinkName(nullptr);
static base::android::ScopedJavaLocalRef<jstring> Java_BrowserMediaRouter_getSinkName(JNIEnv* env,
    const base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& sourceUrn,
    JniIntWrapper index) {
  jclass clazz = org_chromium_components_media_1router_BrowserMediaRouter_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_media_1router_BrowserMediaRouter_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getSinkName",
          "(Ljava/lang/String;I)Ljava/lang/String;",
          &g_org_chromium_components_media_1router_BrowserMediaRouter_getSinkName);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id, sourceUrn.obj(), as_jint(index)));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_media_1router_BrowserMediaRouter_createRoute(nullptr);
static void Java_BrowserMediaRouter_createRoute(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj, const base::android::JavaRef<jstring>& sourceId,
    const base::android::JavaRef<jstring>& sinkId,
    const base::android::JavaRef<jstring>& presentationId,
    const base::android::JavaRef<jstring>& origin,
    const base::android::JavaRef<jobject>& webContents,
    JniIntWrapper requestId) {
  jclass clazz = org_chromium_components_media_1router_BrowserMediaRouter_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_media_1router_BrowserMediaRouter_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "createRoute",
"(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/chromium/content_public/browser/WebContents;I)V",
          &g_org_chromium_components_media_1router_BrowserMediaRouter_createRoute);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, sourceId.obj(), sinkId.obj(), presentationId.obj(),
              origin.obj(), webContents.obj(), as_jint(requestId));
}

static std::atomic<jmethodID>
    g_org_chromium_components_media_1router_BrowserMediaRouter_joinRoute(nullptr);
static void Java_BrowserMediaRouter_joinRoute(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj, const base::android::JavaRef<jstring>& sourceId,
    const base::android::JavaRef<jstring>& presentationId,
    const base::android::JavaRef<jstring>& origin,
    const base::android::JavaRef<jobject>& webContents,
    JniIntWrapper requestId) {
  jclass clazz = org_chromium_components_media_1router_BrowserMediaRouter_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_media_1router_BrowserMediaRouter_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "joinRoute",
"(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/chromium/content_public/browser/WebContents;I)V",
          &g_org_chromium_components_media_1router_BrowserMediaRouter_joinRoute);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, sourceId.obj(), presentationId.obj(), origin.obj(),
              webContents.obj(), as_jint(requestId));
}

static std::atomic<jmethodID>
    g_org_chromium_components_media_1router_BrowserMediaRouter_closeRoute(nullptr);
static void Java_BrowserMediaRouter_closeRoute(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj, const base::android::JavaRef<jstring>& routeId) {
  jclass clazz = org_chromium_components_media_1router_BrowserMediaRouter_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_media_1router_BrowserMediaRouter_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "closeRoute",
          "(Ljava/lang/String;)V",
          &g_org_chromium_components_media_1router_BrowserMediaRouter_closeRoute);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, routeId.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_media_1router_BrowserMediaRouter_detachRoute(nullptr);
static void Java_BrowserMediaRouter_detachRoute(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj, const base::android::JavaRef<jstring>& routeId) {
  jclass clazz = org_chromium_components_media_1router_BrowserMediaRouter_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_media_1router_BrowserMediaRouter_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "detachRoute",
          "(Ljava/lang/String;)V",
          &g_org_chromium_components_media_1router_BrowserMediaRouter_detachRoute);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, routeId.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_media_1router_BrowserMediaRouter_sendStringMessage(nullptr);
static void Java_BrowserMediaRouter_sendStringMessage(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& routeId,
    const base::android::JavaRef<jstring>& message) {
  jclass clazz = org_chromium_components_media_1router_BrowserMediaRouter_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_media_1router_BrowserMediaRouter_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "sendStringMessage",
          "(Ljava/lang/String;Ljava/lang/String;)V",
          &g_org_chromium_components_media_1router_BrowserMediaRouter_sendStringMessage);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, routeId.obj(), message.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_media_1router_BrowserMediaRouter_getFlingingControllerBridge(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_BrowserMediaRouter_getFlingingControllerBridge(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& routeId) {
  jclass clazz = org_chromium_components_media_1router_BrowserMediaRouter_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_media_1router_BrowserMediaRouter_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getFlingingControllerBridge",
          "(Ljava/lang/String;)Lorg/chromium/components/media_router/FlingingControllerBridge;",
          &g_org_chromium_components_media_1router_BrowserMediaRouter_getFlingingControllerBridge);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id, routeId.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_media_1router_BrowserMediaRouter_teardown(nullptr);
static void Java_BrowserMediaRouter_teardown(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz = org_chromium_components_media_1router_BrowserMediaRouter_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_media_1router_BrowserMediaRouter_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "teardown",
          "()V",
          &g_org_chromium_components_media_1router_BrowserMediaRouter_teardown);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

}  // namespace media_router

#endif  // org_chromium_components_media_router_BrowserMediaRouter_JNI
