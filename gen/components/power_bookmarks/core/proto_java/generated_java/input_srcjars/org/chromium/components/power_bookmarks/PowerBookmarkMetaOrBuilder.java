// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/power_bookmarks/core/proto/power_bookmark_meta.proto

package org.chromium.components.power_bookmarks;

public interface PowerBookmarkMetaOrBuilder extends
    // @@protoc_insertion_point(interface_extends:power_bookmarks.PowerBookmarkMeta)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * This is the main image that will be shown in the UI.
   * </pre>
   *
   * <code>optional .power_bookmarks.PowerBookmarkMeta.Image lead_image = 1;</code>
   * @return Whether the leadImage field is set.
   */
  boolean hasLeadImage();
  /**
   * <pre>
   * This is the main image that will be shown in the UI.
   * </pre>
   *
   * <code>optional .power_bookmarks.PowerBookmarkMeta.Image lead_image = 1;</code>
   * @return The leadImage.
   */
  org.chromium.components.power_bookmarks.PowerBookmarkMeta.Image getLeadImage();

  /**
   * <pre>
   * Fallback images are made available for future edits or if the lead is
   * unavailable.
   * </pre>
   *
   * <code>repeated .power_bookmarks.PowerBookmarkMeta.Image fallback_images = 2;</code>
   */
  java.util.List<org.chromium.components.power_bookmarks.PowerBookmarkMeta.Image> 
      getFallbackImagesList();
  /**
   * <pre>
   * Fallback images are made available for future edits or if the lead is
   * unavailable.
   * </pre>
   *
   * <code>repeated .power_bookmarks.PowerBookmarkMeta.Image fallback_images = 2;</code>
   */
  org.chromium.components.power_bookmarks.PowerBookmarkMeta.Image getFallbackImages(int index);
  /**
   * <pre>
   * Fallback images are made available for future edits or if the lead is
   * unavailable.
   * </pre>
   *
   * <code>repeated .power_bookmarks.PowerBookmarkMeta.Image fallback_images = 2;</code>
   */
  int getFallbackImagesCount();

  /**
   * <code>repeated .power_bookmarks.PowerBookmarkMeta.Tag tags = 3;</code>
   */
  java.util.List<org.chromium.components.power_bookmarks.PowerBookmarkMeta.Tag> 
      getTagsList();
  /**
   * <code>repeated .power_bookmarks.PowerBookmarkMeta.Tag tags = 3;</code>
   */
  org.chromium.components.power_bookmarks.PowerBookmarkMeta.Tag getTags(int index);
  /**
   * <code>repeated .power_bookmarks.PowerBookmarkMeta.Tag tags = 3;</code>
   */
  int getTagsCount();

  /**
   * <pre>
   * This enum can aid in determining what type of UI to show the bookmark in or
   * which backend to update with.
   * </pre>
   *
   * <code>optional .power_bookmarks.PowerBookmarkType type = 4;</code>
   * @return Whether the type field is set.
   */
  boolean hasType();
  /**
   * <pre>
   * This enum can aid in determining what type of UI to show the bookmark in or
   * which backend to update with.
   * </pre>
   *
   * <code>optional .power_bookmarks.PowerBookmarkType type = 4;</code>
   * @return The type.
   */
  org.chromium.components.power_bookmarks.PowerBookmarkType getType();

  /**
   * <code>.power_bookmarks.ShoppingSpecifics shopping_specifics = 5;</code>
   * @return Whether the shoppingSpecifics field is set.
   */
  boolean hasShoppingSpecifics();
  /**
   * <code>.power_bookmarks.ShoppingSpecifics shopping_specifics = 5;</code>
   * @return The shoppingSpecifics.
   */
  org.chromium.components.power_bookmarks.ShoppingSpecifics getShoppingSpecifics();

  public org.chromium.components.power_bookmarks.PowerBookmarkMeta.TypeSpecificsCase getTypeSpecificsCase();
}
