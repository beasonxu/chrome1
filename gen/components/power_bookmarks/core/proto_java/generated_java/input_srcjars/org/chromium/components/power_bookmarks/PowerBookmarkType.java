// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/power_bookmarks/core/proto/power_bookmark_meta.proto

package org.chromium.components.power_bookmarks;

/**
 * Protobuf enum {@code power_bookmarks.PowerBookmarkType}
 */
public enum PowerBookmarkType
    implements com.google.protobuf.Internal.EnumLite {
  /**
   * <code>UNSPECIFIED = 0;</code>
   */
  UNSPECIFIED(0),
  /**
   * <code>SHOPPING = 1;</code>
   */
  SHOPPING(1),
  ;

  /**
   * <code>UNSPECIFIED = 0;</code>
   */
  public static final int UNSPECIFIED_VALUE = 0;
  /**
   * <code>SHOPPING = 1;</code>
   */
  public static final int SHOPPING_VALUE = 1;


  @java.lang.Override
  public final int getNumber() {
    return value;
  }

  /**
   * @param value The number of the enum to look for.
   * @return The enum associated with the given number.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static PowerBookmarkType valueOf(int value) {
    return forNumber(value);
  }

  public static PowerBookmarkType forNumber(int value) {
    switch (value) {
      case 0: return UNSPECIFIED;
      case 1: return SHOPPING;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<PowerBookmarkType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      PowerBookmarkType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<PowerBookmarkType>() {
          @java.lang.Override
          public PowerBookmarkType findValueByNumber(int number) {
            return PowerBookmarkType.forNumber(number);
          }
        };

  public static com.google.protobuf.Internal.EnumVerifier 
      internalGetVerifier() {
    return PowerBookmarkTypeVerifier.INSTANCE;
  }

  private static final class PowerBookmarkTypeVerifier implements 
       com.google.protobuf.Internal.EnumVerifier { 
          static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new PowerBookmarkTypeVerifier();
          @java.lang.Override
          public boolean isInRange(int number) {
            return PowerBookmarkType.forNumber(number) != null;
          }
        };

  private final int value;

  private PowerBookmarkType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:power_bookmarks.PowerBookmarkType)
}

