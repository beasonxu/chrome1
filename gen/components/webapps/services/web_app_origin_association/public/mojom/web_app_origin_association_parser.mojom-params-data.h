// components/webapps/services/web_app_origin_association/public/mojom/web_app_origin_association_parser.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_WEBAPPS_SERVICES_WEB_APP_ORIGIN_ASSOCIATION_PUBLIC_MOJOM_WEB_APP_ORIGIN_ASSOCIATION_PARSER_MOJOM_PARAMS_DATA_H_
#define COMPONENTS_WEBAPPS_SERVICES_WEB_APP_ORIGIN_ASSOCIATION_PUBLIC_MOJOM_WEB_APP_ORIGIN_ASSOCIATION_PARSER_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace webapps {
namespace mojom {
namespace internal {

class ValidationContext;
class  WebAppOriginAssociationParser_ParseWebAppOriginAssociation_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> raw_json;

 private:
  friend class mojo::internal::MessageFragment<WebAppOriginAssociationParser_ParseWebAppOriginAssociation_Params_Data>;

  WebAppOriginAssociationParser_ParseWebAppOriginAssociation_Params_Data();
  ~WebAppOriginAssociationParser_ParseWebAppOriginAssociation_Params_Data() = delete;
};
static_assert(sizeof(WebAppOriginAssociationParser_ParseWebAppOriginAssociation_Params_Data) == 16,
              "Bad sizeof(WebAppOriginAssociationParser_ParseWebAppOriginAssociation_Params_Data)");
class  WebAppOriginAssociationParser_ParseWebAppOriginAssociation_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::WebAppOriginAssociation_Data> association;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<internal::WebAppOriginAssociationError_Data>>> errors;

 private:
  friend class mojo::internal::MessageFragment<WebAppOriginAssociationParser_ParseWebAppOriginAssociation_ResponseParams_Data>;

  WebAppOriginAssociationParser_ParseWebAppOriginAssociation_ResponseParams_Data();
  ~WebAppOriginAssociationParser_ParseWebAppOriginAssociation_ResponseParams_Data() = delete;
};
static_assert(sizeof(WebAppOriginAssociationParser_ParseWebAppOriginAssociation_ResponseParams_Data) == 24,
              "Bad sizeof(WebAppOriginAssociationParser_ParseWebAppOriginAssociation_ResponseParams_Data)");

}  // namespace internal


class WebAppOriginAssociationParser_ParseWebAppOriginAssociation_ParamsDataView {
 public:
  WebAppOriginAssociationParser_ParseWebAppOriginAssociation_ParamsDataView() = default;

  WebAppOriginAssociationParser_ParseWebAppOriginAssociation_ParamsDataView(
      internal::WebAppOriginAssociationParser_ParseWebAppOriginAssociation_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetRawJsonDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadRawJson(UserType* output) {
    
    auto* pointer = data_->raw_json.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::WebAppOriginAssociationParser_ParseWebAppOriginAssociation_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class WebAppOriginAssociationParser_ParseWebAppOriginAssociation_ResponseParamsDataView {
 public:
  WebAppOriginAssociationParser_ParseWebAppOriginAssociation_ResponseParamsDataView() = default;

  WebAppOriginAssociationParser_ParseWebAppOriginAssociation_ResponseParamsDataView(
      internal::WebAppOriginAssociationParser_ParseWebAppOriginAssociation_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetAssociationDataView(
      WebAppOriginAssociationDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAssociation(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::webapps::mojom::WebAppOriginAssociationDataView, UserType>(),
    "Attempting to read the optional `association` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadAssociation` instead "
    "of `ReadAssociation if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->association.Get();
    return mojo::internal::Deserialize<::webapps::mojom::WebAppOriginAssociationDataView>(
        pointer, output, message_);
  }
  inline void GetErrorsDataView(
      mojo::ArrayDataView<WebAppOriginAssociationErrorDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadErrors(UserType* output) {
    
    auto* pointer = data_->errors.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::webapps::mojom::WebAppOriginAssociationErrorDataView>>(
        pointer, output, message_);
  }
 private:
  internal::WebAppOriginAssociationParser_ParseWebAppOriginAssociation_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};


inline void WebAppOriginAssociationParser_ParseWebAppOriginAssociation_ParamsDataView::GetRawJsonDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->raw_json.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void WebAppOriginAssociationParser_ParseWebAppOriginAssociation_ResponseParamsDataView::GetAssociationDataView(
    WebAppOriginAssociationDataView* output) {
  auto pointer = data_->association.Get();
  *output = WebAppOriginAssociationDataView(pointer, message_);
}
inline void WebAppOriginAssociationParser_ParseWebAppOriginAssociation_ResponseParamsDataView::GetErrorsDataView(
    mojo::ArrayDataView<WebAppOriginAssociationErrorDataView>* output) {
  auto pointer = data_->errors.Get();
  *output = mojo::ArrayDataView<WebAppOriginAssociationErrorDataView>(pointer, message_);
}

}  // namespace mojom
}  // namespace webapps

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // COMPONENTS_WEBAPPS_SERVICES_WEB_APP_ORIGIN_ASSOCIATION_PUBLIC_MOJOM_WEB_APP_ORIGIN_ASSOCIATION_PARSER_MOJOM_PARAMS_DATA_H_