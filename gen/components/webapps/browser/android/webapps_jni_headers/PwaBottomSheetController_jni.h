// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/webapps/bottomsheet/PwaBottomSheetController

#ifndef org_chromium_components_webapps_bottomsheet_PwaBottomSheetController_JNI
#define org_chromium_components_webapps_bottomsheet_PwaBottomSheetController_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_webapps_bottomsheet_PwaBottomSheetController[];
const char kClassPath_org_chromium_components_webapps_bottomsheet_PwaBottomSheetController[] =
    "org/chromium/components/webapps/bottomsheet/PwaBottomSheetController";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_webapps_bottomsheet_PwaBottomSheetController_clazz(nullptr);
#ifndef org_chromium_components_webapps_bottomsheet_PwaBottomSheetController_clazz_defined
#define org_chromium_components_webapps_bottomsheet_PwaBottomSheetController_clazz_defined
inline jclass org_chromium_components_webapps_bottomsheet_PwaBottomSheetController_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_webapps_bottomsheet_PwaBottomSheetController,
      &g_org_chromium_components_webapps_bottomsheet_PwaBottomSheetController_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace webapps {

static jboolean JNI_PwaBottomSheetController_RequestOrExpandBottomSheetInstaller(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& webContents,
    jint trigger);

JNI_GENERATOR_EXPORT jboolean Java_J_N_Mwi0P9Xp(
    JNIEnv* env,
    jclass jcaller,
    jobject webContents,
    jint trigger) {
  return JNI_PwaBottomSheetController_RequestOrExpandBottomSheetInstaller(env,
      base::android::JavaParamRef<jobject>(env, webContents), trigger);
}

JNI_GENERATOR_EXPORT void Java_J_N_MUs2wv_00024Q(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePwaBottomSheetController) {
  PwaBottomSheetController* native =
      reinterpret_cast<PwaBottomSheetController*>(nativePwaBottomSheetController);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnSheetClosedWithSwipe");
  return native->OnSheetClosedWithSwipe(env);
}

JNI_GENERATOR_EXPORT void Java_J_N_M55fWa5U(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePwaBottomSheetController) {
  PwaBottomSheetController* native =
      reinterpret_cast<PwaBottomSheetController*>(nativePwaBottomSheetController);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnSheetExpanded");
  return native->OnSheetExpanded(env);
}

JNI_GENERATOR_EXPORT void Java_J_N_MzfzCOQC(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePwaBottomSheetController,
    jint installSource) {
  PwaBottomSheetController* native =
      reinterpret_cast<PwaBottomSheetController*>(nativePwaBottomSheetController);
  CHECK_NATIVE_PTR(env, jcaller, native, "UpdateInstallSource");
  return native->UpdateInstallSource(env, installSource);
}

JNI_GENERATOR_EXPORT void Java_J_N_MXiwiwPi(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePwaBottomSheetController,
    jobject webContents) {
  PwaBottomSheetController* native =
      reinterpret_cast<PwaBottomSheetController*>(nativePwaBottomSheetController);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnAddToHomescreen");
  return native->OnAddToHomescreen(env, base::android::JavaParamRef<jobject>(env, webContents));
}

JNI_GENERATOR_EXPORT void Java_J_N_MGZHTWtH(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePwaBottomSheetController) {
  PwaBottomSheetController* native =
      reinterpret_cast<PwaBottomSheetController*>(nativePwaBottomSheetController);
  CHECK_NATIVE_PTR(env, jcaller, native, "Destroy");
  return native->Destroy(env);
}


static std::atomic<jmethodID>
    g_org_chromium_components_webapps_bottomsheet_PwaBottomSheetController_addWebAppScreenshot(nullptr);
static void Java_PwaBottomSheetController_addWebAppScreenshot(JNIEnv* env, const
    base::android::JavaRef<jobject>& screenshot,
    const base::android::JavaRef<jobject>& webContents) {
  jclass clazz = org_chromium_components_webapps_bottomsheet_PwaBottomSheetController_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_webapps_bottomsheet_PwaBottomSheetController_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "addWebAppScreenshot",
          "(Landroid/graphics/Bitmap;Lorg/chromium/content_public/browser/WebContents;)V",
&g_org_chromium_components_webapps_bottomsheet_PwaBottomSheetController_addWebAppScreenshot);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, screenshot.obj(), webContents.obj());
}

}  // namespace webapps

#endif  // org_chromium_components_webapps_bottomsheet_PwaBottomSheetController_JNI
