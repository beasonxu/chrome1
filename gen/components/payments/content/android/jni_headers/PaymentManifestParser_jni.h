// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/payments/PaymentManifestParser

#ifndef org_chromium_components_payments_PaymentManifestParser_JNI
#define org_chromium_components_payments_PaymentManifestParser_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_payments_PaymentManifestParser[];
const char kClassPath_org_chromium_components_payments_PaymentManifestParser[] =
    "org/chromium/components/payments/PaymentManifestParser";

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_payments_PaymentManifestParser_00024ManifestParseCallback[];
const char
    kClassPath_org_chromium_components_payments_PaymentManifestParser_00024ManifestParseCallback[] =
    "org/chromium/components/payments/PaymentManifestParser$ManifestParseCallback";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_payments_PaymentManifestParser_clazz(nullptr);
#ifndef org_chromium_components_payments_PaymentManifestParser_clazz_defined
#define org_chromium_components_payments_PaymentManifestParser_clazz_defined
inline jclass org_chromium_components_payments_PaymentManifestParser_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_payments_PaymentManifestParser,
      &g_org_chromium_components_payments_PaymentManifestParser_clazz);
}
#endif
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_payments_PaymentManifestParser_00024ManifestParseCallback_clazz(nullptr);
#ifndef org_chromium_components_payments_PaymentManifestParser_00024ManifestParseCallback_clazz_defined
#define org_chromium_components_payments_PaymentManifestParser_00024ManifestParseCallback_clazz_defined
inline jclass
    org_chromium_components_payments_PaymentManifestParser_00024ManifestParseCallback_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_payments_PaymentManifestParser_00024ManifestParseCallback,
      &g_org_chromium_components_payments_PaymentManifestParser_00024ManifestParseCallback_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace payments {

static jlong JNI_PaymentManifestParser_CreatePaymentManifestParserAndroid(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& webContents);

JNI_GENERATOR_EXPORT jlong Java_J_N_MfK4x_00024Iq(
    JNIEnv* env,
    jclass jcaller,
    jobject webContents) {
  return JNI_PaymentManifestParser_CreatePaymentManifestParserAndroid(env,
      base::android::JavaParamRef<jobject>(env, webContents));
}

JNI_GENERATOR_EXPORT void Java_J_N_MFuu4tOD(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePaymentManifestParserAndroid) {
  PaymentManifestParserAndroid* native =
      reinterpret_cast<PaymentManifestParserAndroid*>(nativePaymentManifestParserAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "DestroyPaymentManifestParserAndroid");
  return native->DestroyPaymentManifestParserAndroid(env);
}

JNI_GENERATOR_EXPORT void Java_J_N_M_000244TUaJ7(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePaymentManifestParserAndroid,
    jobject manifestUrl,
    jstring content,
    jobject callback) {
  PaymentManifestParserAndroid* native =
      reinterpret_cast<PaymentManifestParserAndroid*>(nativePaymentManifestParserAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "ParsePaymentMethodManifest");
  return native->ParsePaymentMethodManifest(env, base::android::JavaParamRef<jobject>(env,
      manifestUrl), base::android::JavaParamRef<jstring>(env, content),
      base::android::JavaParamRef<jobject>(env, callback));
}

JNI_GENERATOR_EXPORT void Java_J_N_MhPu7GL6(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePaymentManifestParserAndroid,
    jstring content,
    jobject callback) {
  PaymentManifestParserAndroid* native =
      reinterpret_cast<PaymentManifestParserAndroid*>(nativePaymentManifestParserAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "ParseWebAppManifest");
  return native->ParseWebAppManifest(env, base::android::JavaParamRef<jstring>(env, content),
      base::android::JavaParamRef<jobject>(env, callback));
}


static std::atomic<jmethodID>
    g_org_chromium_components_payments_PaymentManifestParser_00024ManifestParseCallback_onPaymentMethodManifestParseSuccess(nullptr);
static void Java_ManifestParseCallback_onPaymentMethodManifestParseSuccess(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobjectArray>&
    webAppManifestUris,
    const base::android::JavaRef<jobjectArray>& supportedOrigins) {
  jclass clazz =
      org_chromium_components_payments_PaymentManifestParser_00024ManifestParseCallback_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_payments_PaymentManifestParser_00024ManifestParseCallback_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onPaymentMethodManifestParseSuccess",
          "([Lorg/chromium/url/GURL;[Lorg/chromium/url/GURL;)V",
&g_org_chromium_components_payments_PaymentManifestParser_00024ManifestParseCallback_onPaymentMethodManifestParseSuccess);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, webAppManifestUris.obj(), supportedOrigins.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_payments_PaymentManifestParser_00024ManifestParseCallback_onWebAppManifestParseSuccess(nullptr);
static void Java_ManifestParseCallback_onWebAppManifestParseSuccess(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobjectArray>& manifest) {
  jclass clazz =
      org_chromium_components_payments_PaymentManifestParser_00024ManifestParseCallback_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_payments_PaymentManifestParser_00024ManifestParseCallback_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onWebAppManifestParseSuccess",
          "([Lorg/chromium/components/payments/WebAppManifestSection;)V",
&g_org_chromium_components_payments_PaymentManifestParser_00024ManifestParseCallback_onWebAppManifestParseSuccess);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, manifest.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_payments_PaymentManifestParser_00024ManifestParseCallback_onManifestParseFailure(nullptr);
static void Java_ManifestParseCallback_onManifestParseFailure(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_payments_PaymentManifestParser_00024ManifestParseCallback_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_payments_PaymentManifestParser_00024ManifestParseCallback_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onManifestParseFailure",
          "()V",
&g_org_chromium_components_payments_PaymentManifestParser_00024ManifestParseCallback_onManifestParseFailure);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_payments_PaymentManifestParser_createUrlArray(nullptr);
static base::android::ScopedJavaLocalRef<jobjectArray>
    Java_PaymentManifestParser_createUrlArray(JNIEnv* env, JniIntWrapper numberOfWebAppManifests) {
  jclass clazz = org_chromium_components_payments_PaymentManifestParser_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_payments_PaymentManifestParser_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createUrlArray",
          "(I)[Lorg/chromium/url/GURL;",
          &g_org_chromium_components_payments_PaymentManifestParser_createUrlArray);

  jobjectArray ret =
      static_cast<jobjectArray>(env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, as_jint(numberOfWebAppManifests)));
  return base::android::ScopedJavaLocalRef<jobjectArray>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_payments_PaymentManifestParser_addUrl(nullptr);
static jboolean Java_PaymentManifestParser_addUrl(JNIEnv* env, const
    base::android::JavaRef<jobjectArray>& uris,
    JniIntWrapper uriIndex,
    const base::android::JavaRef<jstring>& uriToAdd) {
  jclass clazz = org_chromium_components_payments_PaymentManifestParser_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_payments_PaymentManifestParser_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "addUrl",
          "([Lorg/chromium/url/GURL;ILjava/lang/String;)Z",
          &g_org_chromium_components_payments_PaymentManifestParser_addUrl);

  jboolean ret =
      env->CallStaticBooleanMethod(clazz,
          call_context.base.method_id, uris.obj(), as_jint(uriIndex), uriToAdd.obj());
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_payments_PaymentManifestParser_createManifest(nullptr);
static base::android::ScopedJavaLocalRef<jobjectArray>
    Java_PaymentManifestParser_createManifest(JNIEnv* env, JniIntWrapper numberOfsections) {
  jclass clazz = org_chromium_components_payments_PaymentManifestParser_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_payments_PaymentManifestParser_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createManifest",
          "(I)[Lorg/chromium/components/payments/WebAppManifestSection;",
          &g_org_chromium_components_payments_PaymentManifestParser_createManifest);

  jobjectArray ret =
      static_cast<jobjectArray>(env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, as_jint(numberOfsections)));
  return base::android::ScopedJavaLocalRef<jobjectArray>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_payments_PaymentManifestParser_addSectionToManifest(nullptr);
static void Java_PaymentManifestParser_addSectionToManifest(JNIEnv* env, const
    base::android::JavaRef<jobjectArray>& manifest,
    JniIntWrapper sectionIndex,
    const base::android::JavaRef<jstring>& id,
    jlong minVersion,
    JniIntWrapper numberOfFingerprints) {
  jclass clazz = org_chromium_components_payments_PaymentManifestParser_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_payments_PaymentManifestParser_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "addSectionToManifest",
          "([Lorg/chromium/components/payments/WebAppManifestSection;ILjava/lang/String;JI)V",
          &g_org_chromium_components_payments_PaymentManifestParser_addSectionToManifest);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, manifest.obj(), as_jint(sectionIndex), id.obj(), minVersion,
              as_jint(numberOfFingerprints));
}

static std::atomic<jmethodID>
    g_org_chromium_components_payments_PaymentManifestParser_addFingerprintToSection(nullptr);
static void Java_PaymentManifestParser_addFingerprintToSection(JNIEnv* env, const
    base::android::JavaRef<jobjectArray>& manifest,
    JniIntWrapper sectionIndex,
    JniIntWrapper fingerprintIndex,
    const base::android::JavaRef<jbyteArray>& fingerprint) {
  jclass clazz = org_chromium_components_payments_PaymentManifestParser_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_payments_PaymentManifestParser_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "addFingerprintToSection",
          "([Lorg/chromium/components/payments/WebAppManifestSection;II[B)V",
          &g_org_chromium_components_payments_PaymentManifestParser_addFingerprintToSection);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, manifest.obj(), as_jint(sectionIndex),
              as_jint(fingerprintIndex), fingerprint.obj());
}

}  // namespace payments

#endif  // org_chromium_components_payments_PaymentManifestParser_JNI
