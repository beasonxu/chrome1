// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/payments/CurrencyFormatter

#ifndef org_chromium_components_payments_CurrencyFormatter_JNI
#define org_chromium_components_payments_CurrencyFormatter_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace payments {

static jlong JNI_CurrencyFormatter_InitCurrencyFormatterAndroid(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& caller,
    const base::android::JavaParamRef<jstring>& currencyCode,
    const base::android::JavaParamRef<jstring>& localeName);

JNI_GENERATOR_EXPORT jlong Java_J_N_MRlatcKK(
    JNIEnv* env,
    jclass jcaller,
    jobject caller,
    jstring currencyCode,
    jstring localeName) {
  return JNI_CurrencyFormatter_InitCurrencyFormatterAndroid(env,
      base::android::JavaParamRef<jobject>(env, caller), base::android::JavaParamRef<jstring>(env,
      currencyCode), base::android::JavaParamRef<jstring>(env, localeName));
}

JNI_GENERATOR_EXPORT void Java_J_N_MkBG391d(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeCurrencyFormatterAndroid,
    jobject caller) {
  CurrencyFormatterAndroid* native =
      reinterpret_cast<CurrencyFormatterAndroid*>(nativeCurrencyFormatterAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "Destroy");
  return native->Destroy(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT jstring Java_J_N_MgDia2D2(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeCurrencyFormatterAndroid,
    jobject caller,
    jstring amountValue) {
  CurrencyFormatterAndroid* native =
      reinterpret_cast<CurrencyFormatterAndroid*>(nativeCurrencyFormatterAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "Format", NULL);
  return native->Format(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, amountValue)).Release();
}

JNI_GENERATOR_EXPORT void Java_J_N_M6ORVMPQ(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeCurrencyFormatterAndroid,
    jint maxFractionalDigits) {
  CurrencyFormatterAndroid* native =
      reinterpret_cast<CurrencyFormatterAndroid*>(nativeCurrencyFormatterAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetMaxFractionalDigits");
  return native->SetMaxFractionalDigits(env, maxFractionalDigits);
}

JNI_GENERATOR_EXPORT jstring Java_J_N_MnbePYrk(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeCurrencyFormatterAndroid,
    jobject caller) {
  CurrencyFormatterAndroid* native =
      reinterpret_cast<CurrencyFormatterAndroid*>(nativeCurrencyFormatterAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetFormattedCurrencyCode", NULL);
  return native->GetFormattedCurrencyCode(env, base::android::JavaParamRef<jobject>(env,
      caller)).Release();
}


}  // namespace payments

#endif  // org_chromium_components_payments_CurrencyFormatter_JNI
