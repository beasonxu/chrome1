// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/autofill_assistant/browser/action_value.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

public interface KeyEventOrBuilder extends
    // @@protoc_insertion_point(interface_extends:autofill_assistant.KeyEvent)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * Unique DOM defined string value for each physical key (e.g., 'KeyA').
   * </pre>
   *
   * <code>optional string code = 2;</code>
   * @return Whether the code field is set.
   */
  boolean hasCode();
  /**
   * <pre>
   * Unique DOM defined string value for each physical key (e.g., 'KeyA').
   * </pre>
   *
   * <code>optional string code = 2;</code>
   * @return The code.
   */
  java.lang.String getCode();
  /**
   * <pre>
   * Unique DOM defined string value for each physical key (e.g., 'KeyA').
   * </pre>
   *
   * <code>optional string code = 2;</code>
   * @return The bytes for code.
   */
  com.google.protobuf.ByteString
      getCodeBytes();

  /**
   * <pre>
   * Text as generated by processing a virtual key code with a keyboard layout.
   * </pre>
   *
   * <code>optional string text = 3;</code>
   * @return Whether the text field is set.
   */
  boolean hasText();
  /**
   * <pre>
   * Text as generated by processing a virtual key code with a keyboard layout.
   * </pre>
   *
   * <code>optional string text = 3;</code>
   * @return The text.
   */
  java.lang.String getText();
  /**
   * <pre>
   * Text as generated by processing a virtual key code with a keyboard layout.
   * </pre>
   *
   * <code>optional string text = 3;</code>
   * @return The bytes for text.
   */
  com.google.protobuf.ByteString
      getTextBytes();

  /**
   * <pre>
   * Unique DOM defined string value describing the meaning of the key in the
   * context of active modifiers, keyboard layout, etc (e.g., 'AltGr').
   * </pre>
   *
   * <code>optional string key = 4;</code>
   * @return Whether the key field is set.
   */
  boolean hasKey();
  /**
   * <pre>
   * Unique DOM defined string value describing the meaning of the key in the
   * context of active modifiers, keyboard layout, etc (e.g., 'AltGr').
   * </pre>
   *
   * <code>optional string key = 4;</code>
   * @return The key.
   */
  java.lang.String getKey();
  /**
   * <pre>
   * Unique DOM defined string value describing the meaning of the key in the
   * context of active modifiers, keyboard layout, etc (e.g., 'AltGr').
   * </pre>
   *
   * <code>optional string key = 4;</code>
   * @return The bytes for key.
   */
  com.google.protobuf.ByteString
      getKeyBytes();

  /**
   * <pre>
   * Editing commands to send with the key event (e.g., 'selectAll').
   * The list of commands can be found here:
   * https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/editing/commands/editor_command_names.h
   * </pre>
   *
   * <code>repeated string command = 5;</code>
   * @return A list containing the command.
   */
  java.util.List<java.lang.String>
      getCommandList();
  /**
   * <pre>
   * Editing commands to send with the key event (e.g., 'selectAll').
   * The list of commands can be found here:
   * https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/editing/commands/editor_command_names.h
   * </pre>
   *
   * <code>repeated string command = 5;</code>
   * @return The count of command.
   */
  int getCommandCount();
  /**
   * <pre>
   * Editing commands to send with the key event (e.g., 'selectAll').
   * The list of commands can be found here:
   * https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/editing/commands/editor_command_names.h
   * </pre>
   *
   * <code>repeated string command = 5;</code>
   * @param index The index of the element to return.
   * @return The command at the given index.
   */
  java.lang.String getCommand(int index);
  /**
   * <pre>
   * Editing commands to send with the key event (e.g., 'selectAll').
   * The list of commands can be found here:
   * https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/editing/commands/editor_command_names.h
   * </pre>
   *
   * <code>repeated string command = 5;</code>
   * @param index The index of the element to return.
   * @return The command at the given index.
   */
  com.google.protobuf.ByteString
      getCommandBytes(int index);

  /**
   * <pre>
   * Legacy keyCode for the KeyEvent:
   * https://w3c.github.io/uievents/#dom-keyboardevent-keycode
   * This is populated on a best-effort basis, with some characters mapped
   * assuming content expects US English layout input, as specified by:
   * https://w3c.github.io/uievents/#determine-keydown-keyup-keyCode
   * VKEY_UNKNOWN otherwise.
   * </pre>
   *
   * <code>optional int32 key_code = 6;</code>
   * @return Whether the keyCode field is set.
   */
  boolean hasKeyCode();
  /**
   * <pre>
   * Legacy keyCode for the KeyEvent:
   * https://w3c.github.io/uievents/#dom-keyboardevent-keycode
   * This is populated on a best-effort basis, with some characters mapped
   * assuming content expects US English layout input, as specified by:
   * https://w3c.github.io/uievents/#determine-keydown-keyup-keyCode
   * VKEY_UNKNOWN otherwise.
   * </pre>
   *
   * <code>optional int32 key_code = 6;</code>
   * @return The keyCode.
   */
  int getKeyCode();
}
