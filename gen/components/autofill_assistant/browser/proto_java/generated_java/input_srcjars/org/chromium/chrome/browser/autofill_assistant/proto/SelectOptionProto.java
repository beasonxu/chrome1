// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/autofill_assistant/browser/service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * <pre>
 * Contain all arguments to perform a select option action. This action also
 * fires a "change" event on the element. If the option is not found, an
 * |OPTION_VALUE_NOT_FOUND| error is returned. If the action is used on an
 * element that is not an HTML &lt;select&gt; element, an |INVALID_TARGET| error is
 * returned.
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.SelectOptionProto}
 */
public  final class SelectOptionProto extends
    com.google.protobuf.GeneratedMessageLite<
        SelectOptionProto, SelectOptionProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.SelectOptionProto)
    SelectOptionProtoOrBuilder {
  private SelectOptionProto() {
  }
  /**
   * <pre>
   * Defines which attribute to use for comparing the option to the expected
   * value.
   * </pre>
   *
   * Protobuf enum {@code autofill_assistant.SelectOptionProto.OptionComparisonAttribute}
   */
  public enum OptionComparisonAttribute
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>NOT_SET = 0;</code>
     */
    NOT_SET(0),
    /**
     * <pre>
     * Compare the option's value.
     * </pre>
     *
     * <code>VALUE = 1;</code>
     */
    VALUE(1),
    /**
     * <pre>
     * Compare the option's label.
     * </pre>
     *
     * <code>LABEL = 2;</code>
     */
    LABEL(2),
    ;

    /**
     * <code>NOT_SET = 0;</code>
     */
    public static final int NOT_SET_VALUE = 0;
    /**
     * <pre>
     * Compare the option's value.
     * </pre>
     *
     * <code>VALUE = 1;</code>
     */
    public static final int VALUE_VALUE = 1;
    /**
     * <pre>
     * Compare the option's label.
     * </pre>
     *
     * <code>LABEL = 2;</code>
     */
    public static final int LABEL_VALUE = 2;


    @java.lang.Override
    public final int getNumber() {
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OptionComparisonAttribute valueOf(int value) {
      return forNumber(value);
    }

    public static OptionComparisonAttribute forNumber(int value) {
      switch (value) {
        case 0: return NOT_SET;
        case 1: return VALUE;
        case 2: return LABEL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OptionComparisonAttribute>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OptionComparisonAttribute> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OptionComparisonAttribute>() {
            @java.lang.Override
            public OptionComparisonAttribute findValueByNumber(int number) {
              return OptionComparisonAttribute.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return OptionComparisonAttributeVerifier.INSTANCE;
    }

    private static final class OptionComparisonAttributeVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new OptionComparisonAttributeVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return OptionComparisonAttribute.forNumber(number) != null;
            }
          };

    private final int value;

    private OptionComparisonAttribute(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:autofill_assistant.SelectOptionProto.OptionComparisonAttribute)
  }

  private int bitField0_;
  private int valueCase_ = 0;
  private java.lang.Object value_;
  public enum ValueCase {
    TEXT_FILTER_VALUE(7),
    AUTOFILL_REGEXP_VALUE(8),
    VALUE_NOT_SET(0);
    private final int value;
    private ValueCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ValueCase valueOf(int value) {
      return forNumber(value);
    }

    public static ValueCase forNumber(int value) {
      switch (value) {
        case 7: return TEXT_FILTER_VALUE;
        case 8: return AUTOFILL_REGEXP_VALUE;
        case 0: return VALUE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  @java.lang.Override
  public ValueCase
  getValueCase() {
    return ValueCase.forNumber(
        valueCase_);
  }

  private void clearValue() {
    valueCase_ = 0;
    value_ = null;
  }

  public static final int ELEMENT_FIELD_NUMBER = 2;
  private org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto element_;
  /**
   * <pre>
   * The drop down element on which to select an option.
   * </pre>
   *
   * <code>optional .autofill_assistant.SelectorProto element = 2;</code>
   */
  @java.lang.Override
  public boolean hasElement() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The drop down element on which to select an option.
   * </pre>
   *
   * <code>optional .autofill_assistant.SelectorProto element = 2;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto getElement() {
    return element_ == null ? org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.getDefaultInstance() : element_;
  }
  /**
   * <pre>
   * The drop down element on which to select an option.
   * </pre>
   *
   * <code>optional .autofill_assistant.SelectorProto element = 2;</code>
   */
  private void setElement(org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto value) {
    value.getClass();
  element_ = value;
    bitField0_ |= 0x00000001;
    }
  /**
   * <pre>
   * The drop down element on which to select an option.
   * </pre>
   *
   * <code>optional .autofill_assistant.SelectorProto element = 2;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeElement(org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto value) {
    value.getClass();
  if (element_ != null &&
        element_ != org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.getDefaultInstance()) {
      element_ =
        org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.newBuilder(element_).mergeFrom(value).buildPartial();
    } else {
      element_ = value;
    }
    bitField0_ |= 0x00000001;
  }
  /**
   * <pre>
   * The drop down element on which to select an option.
   * </pre>
   *
   * <code>optional .autofill_assistant.SelectorProto element = 2;</code>
   */
  private void clearElement() {  element_ = null;
    bitField0_ = (bitField0_ & ~0x00000001);
  }

  public static final int TEXT_FILTER_VALUE_FIELD_NUMBER = 7;
  /**
   * <pre>
   * Value of the option to use.
   * </pre>
   *
   * <code>.autofill_assistant.TextFilter text_filter_value = 7;</code>
   */
  @java.lang.Override
  public boolean hasTextFilterValue() {
    return valueCase_ == 7;
  }
  /**
   * <pre>
   * Value of the option to use.
   * </pre>
   *
   * <code>.autofill_assistant.TextFilter text_filter_value = 7;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.TextFilter getTextFilterValue() {
    if (valueCase_ == 7) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.TextFilter) value_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.TextFilter.getDefaultInstance();
  }
  /**
   * <pre>
   * Value of the option to use.
   * </pre>
   *
   * <code>.autofill_assistant.TextFilter text_filter_value = 7;</code>
   */
  private void setTextFilterValue(org.chromium.chrome.browser.autofill_assistant.proto.TextFilter value) {
    value.getClass();
  value_ = value;
    valueCase_ = 7;
  }
  /**
   * <pre>
   * Value of the option to use.
   * </pre>
   *
   * <code>.autofill_assistant.TextFilter text_filter_value = 7;</code>
   */
  private void mergeTextFilterValue(org.chromium.chrome.browser.autofill_assistant.proto.TextFilter value) {
    value.getClass();
  if (valueCase_ == 7 &&
        value_ != org.chromium.chrome.browser.autofill_assistant.proto.TextFilter.getDefaultInstance()) {
      value_ = org.chromium.chrome.browser.autofill_assistant.proto.TextFilter.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.TextFilter) value_)
          .mergeFrom(value).buildPartial();
    } else {
      value_ = value;
    }
    valueCase_ = 7;
  }
  /**
   * <pre>
   * Value of the option to use.
   * </pre>
   *
   * <code>.autofill_assistant.TextFilter text_filter_value = 7;</code>
   */
  private void clearTextFilterValue() {
    if (valueCase_ == 7) {
      valueCase_ = 0;
      value_ = null;
    }
  }

  public static final int AUTOFILL_REGEXP_VALUE_FIELD_NUMBER = 8;
  /**
   * <pre>
   * A value from an Autofill source. Note that this must be preceded by a
   * |CollectUserDataAction|.
   * </pre>
   *
   * <code>.autofill_assistant.AutofillValueRegexp autofill_regexp_value = 8;</code>
   */
  @java.lang.Override
  public boolean hasAutofillRegexpValue() {
    return valueCase_ == 8;
  }
  /**
   * <pre>
   * A value from an Autofill source. Note that this must be preceded by a
   * |CollectUserDataAction|.
   * </pre>
   *
   * <code>.autofill_assistant.AutofillValueRegexp autofill_regexp_value = 8;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.AutofillValueRegexp getAutofillRegexpValue() {
    if (valueCase_ == 8) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.AutofillValueRegexp) value_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.AutofillValueRegexp.getDefaultInstance();
  }
  /**
   * <pre>
   * A value from an Autofill source. Note that this must be preceded by a
   * |CollectUserDataAction|.
   * </pre>
   *
   * <code>.autofill_assistant.AutofillValueRegexp autofill_regexp_value = 8;</code>
   */
  private void setAutofillRegexpValue(org.chromium.chrome.browser.autofill_assistant.proto.AutofillValueRegexp value) {
    value.getClass();
  value_ = value;
    valueCase_ = 8;
  }
  /**
   * <pre>
   * A value from an Autofill source. Note that this must be preceded by a
   * |CollectUserDataAction|.
   * </pre>
   *
   * <code>.autofill_assistant.AutofillValueRegexp autofill_regexp_value = 8;</code>
   */
  private void mergeAutofillRegexpValue(org.chromium.chrome.browser.autofill_assistant.proto.AutofillValueRegexp value) {
    value.getClass();
  if (valueCase_ == 8 &&
        value_ != org.chromium.chrome.browser.autofill_assistant.proto.AutofillValueRegexp.getDefaultInstance()) {
      value_ = org.chromium.chrome.browser.autofill_assistant.proto.AutofillValueRegexp.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.AutofillValueRegexp) value_)
          .mergeFrom(value).buildPartial();
    } else {
      value_ = value;
    }
    valueCase_ = 8;
  }
  /**
   * <pre>
   * A value from an Autofill source. Note that this must be preceded by a
   * |CollectUserDataAction|.
   * </pre>
   *
   * <code>.autofill_assistant.AutofillValueRegexp autofill_regexp_value = 8;</code>
   */
  private void clearAutofillRegexpValue() {
    if (valueCase_ == 8) {
      valueCase_ = 0;
      value_ = null;
    }
  }

  public static final int OPTION_COMPARISON_ATTRIBUTE_FIELD_NUMBER = 6;
  private int optionComparisonAttribute_;
  /**
   * <code>optional .autofill_assistant.SelectOptionProto.OptionComparisonAttribute option_comparison_attribute = 6;</code>
   * @return Whether the optionComparisonAttribute field is set.
   */
  @java.lang.Override
  public boolean hasOptionComparisonAttribute() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <code>optional .autofill_assistant.SelectOptionProto.OptionComparisonAttribute option_comparison_attribute = 6;</code>
   * @return The optionComparisonAttribute.
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto.OptionComparisonAttribute getOptionComparisonAttribute() {
    org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto.OptionComparisonAttribute result = org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto.OptionComparisonAttribute.forNumber(optionComparisonAttribute_);
    return result == null ? org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto.OptionComparisonAttribute.NOT_SET : result;
  }
  /**
   * <code>optional .autofill_assistant.SelectOptionProto.OptionComparisonAttribute option_comparison_attribute = 6;</code>
   * @param value The optionComparisonAttribute to set.
   */
  private void setOptionComparisonAttribute(org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto.OptionComparisonAttribute value) {
    optionComparisonAttribute_ = value.getNumber();
    bitField0_ |= 0x00000008;
  }
  /**
   * <code>optional .autofill_assistant.SelectOptionProto.OptionComparisonAttribute option_comparison_attribute = 6;</code>
   */
  private void clearOptionComparisonAttribute() {
    bitField0_ = (bitField0_ & ~0x00000008);
    optionComparisonAttribute_ = 0;
  }

  public static final int STRICT_FIELD_NUMBER = 9;
  private boolean strict_;
  /**
   * <pre>
   * If |strict|, only one match is allowed. Multiple matches will return a
   * |TOO_MANY_OPTION_VALUES_FOUND| error. If not |strict| and multiple matches
   * are found, the first one is selected.
   * </pre>
   *
   * <code>optional bool strict = 9;</code>
   * @return Whether the strict field is set.
   */
  @java.lang.Override
  public boolean hasStrict() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * If |strict|, only one match is allowed. Multiple matches will return a
   * |TOO_MANY_OPTION_VALUES_FOUND| error. If not |strict| and multiple matches
   * are found, the first one is selected.
   * </pre>
   *
   * <code>optional bool strict = 9;</code>
   * @return The strict.
   */
  @java.lang.Override
  public boolean getStrict() {
    return strict_;
  }
  /**
   * <pre>
   * If |strict|, only one match is allowed. Multiple matches will return a
   * |TOO_MANY_OPTION_VALUES_FOUND| error. If not |strict| and multiple matches
   * are found, the first one is selected.
   * </pre>
   *
   * <code>optional bool strict = 9;</code>
   * @param value The strict to set.
   */
  private void setStrict(boolean value) {
    bitField0_ |= 0x00000010;
    strict_ = value;
  }
  /**
   * <pre>
   * If |strict|, only one match is allowed. Multiple matches will return a
   * |TOO_MANY_OPTION_VALUES_FOUND| error. If not |strict| and multiple matches
   * are found, the first one is selected.
   * </pre>
   *
   * <code>optional bool strict = 9;</code>
   */
  private void clearStrict() {
    bitField0_ = (bitField0_ & ~0x00000010);
    strict_ = false;
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Contain all arguments to perform a select option action. This action also
   * fires a "change" event on the element. If the option is not found, an
   * |OPTION_VALUE_NOT_FOUND| error is returned. If the action is used on an
   * element that is not an HTML &lt;select&gt; element, an |INVALID_TARGET| error is
   * returned.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.SelectOptionProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.SelectOptionProto)
      org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    @java.lang.Override
    public ValueCase
        getValueCase() {
      return instance.getValueCase();
    }

    public Builder clearValue() {
      copyOnWrite();
      instance.clearValue();
      return this;
    }


    /**
     * <pre>
     * The drop down element on which to select an option.
     * </pre>
     *
     * <code>optional .autofill_assistant.SelectorProto element = 2;</code>
     */
    @java.lang.Override
    public boolean hasElement() {
      return instance.hasElement();
    }
    /**
     * <pre>
     * The drop down element on which to select an option.
     * </pre>
     *
     * <code>optional .autofill_assistant.SelectorProto element = 2;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto getElement() {
      return instance.getElement();
    }
    /**
     * <pre>
     * The drop down element on which to select an option.
     * </pre>
     *
     * <code>optional .autofill_assistant.SelectorProto element = 2;</code>
     */
    public Builder setElement(org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto value) {
      copyOnWrite();
      instance.setElement(value);
      return this;
      }
    /**
     * <pre>
     * The drop down element on which to select an option.
     * </pre>
     *
     * <code>optional .autofill_assistant.SelectorProto element = 2;</code>
     */
    public Builder setElement(
        org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.Builder builderForValue) {
      copyOnWrite();
      instance.setElement(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The drop down element on which to select an option.
     * </pre>
     *
     * <code>optional .autofill_assistant.SelectorProto element = 2;</code>
     */
    public Builder mergeElement(org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto value) {
      copyOnWrite();
      instance.mergeElement(value);
      return this;
    }
    /**
     * <pre>
     * The drop down element on which to select an option.
     * </pre>
     *
     * <code>optional .autofill_assistant.SelectorProto element = 2;</code>
     */
    public Builder clearElement() {  copyOnWrite();
      instance.clearElement();
      return this;
    }

    /**
     * <pre>
     * Value of the option to use.
     * </pre>
     *
     * <code>.autofill_assistant.TextFilter text_filter_value = 7;</code>
     */
    @java.lang.Override
    public boolean hasTextFilterValue() {
      return instance.hasTextFilterValue();
    }
    /**
     * <pre>
     * Value of the option to use.
     * </pre>
     *
     * <code>.autofill_assistant.TextFilter text_filter_value = 7;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.TextFilter getTextFilterValue() {
      return instance.getTextFilterValue();
    }
    /**
     * <pre>
     * Value of the option to use.
     * </pre>
     *
     * <code>.autofill_assistant.TextFilter text_filter_value = 7;</code>
     */
    public Builder setTextFilterValue(org.chromium.chrome.browser.autofill_assistant.proto.TextFilter value) {
      copyOnWrite();
      instance.setTextFilterValue(value);
      return this;
    }
    /**
     * <pre>
     * Value of the option to use.
     * </pre>
     *
     * <code>.autofill_assistant.TextFilter text_filter_value = 7;</code>
     */
    public Builder setTextFilterValue(
        org.chromium.chrome.browser.autofill_assistant.proto.TextFilter.Builder builderForValue) {
      copyOnWrite();
      instance.setTextFilterValue(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Value of the option to use.
     * </pre>
     *
     * <code>.autofill_assistant.TextFilter text_filter_value = 7;</code>
     */
    public Builder mergeTextFilterValue(org.chromium.chrome.browser.autofill_assistant.proto.TextFilter value) {
      copyOnWrite();
      instance.mergeTextFilterValue(value);
      return this;
    }
    /**
     * <pre>
     * Value of the option to use.
     * </pre>
     *
     * <code>.autofill_assistant.TextFilter text_filter_value = 7;</code>
     */
    public Builder clearTextFilterValue() {
      copyOnWrite();
      instance.clearTextFilterValue();
      return this;
    }

    /**
     * <pre>
     * A value from an Autofill source. Note that this must be preceded by a
     * |CollectUserDataAction|.
     * </pre>
     *
     * <code>.autofill_assistant.AutofillValueRegexp autofill_regexp_value = 8;</code>
     */
    @java.lang.Override
    public boolean hasAutofillRegexpValue() {
      return instance.hasAutofillRegexpValue();
    }
    /**
     * <pre>
     * A value from an Autofill source. Note that this must be preceded by a
     * |CollectUserDataAction|.
     * </pre>
     *
     * <code>.autofill_assistant.AutofillValueRegexp autofill_regexp_value = 8;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.AutofillValueRegexp getAutofillRegexpValue() {
      return instance.getAutofillRegexpValue();
    }
    /**
     * <pre>
     * A value from an Autofill source. Note that this must be preceded by a
     * |CollectUserDataAction|.
     * </pre>
     *
     * <code>.autofill_assistant.AutofillValueRegexp autofill_regexp_value = 8;</code>
     */
    public Builder setAutofillRegexpValue(org.chromium.chrome.browser.autofill_assistant.proto.AutofillValueRegexp value) {
      copyOnWrite();
      instance.setAutofillRegexpValue(value);
      return this;
    }
    /**
     * <pre>
     * A value from an Autofill source. Note that this must be preceded by a
     * |CollectUserDataAction|.
     * </pre>
     *
     * <code>.autofill_assistant.AutofillValueRegexp autofill_regexp_value = 8;</code>
     */
    public Builder setAutofillRegexpValue(
        org.chromium.chrome.browser.autofill_assistant.proto.AutofillValueRegexp.Builder builderForValue) {
      copyOnWrite();
      instance.setAutofillRegexpValue(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * A value from an Autofill source. Note that this must be preceded by a
     * |CollectUserDataAction|.
     * </pre>
     *
     * <code>.autofill_assistant.AutofillValueRegexp autofill_regexp_value = 8;</code>
     */
    public Builder mergeAutofillRegexpValue(org.chromium.chrome.browser.autofill_assistant.proto.AutofillValueRegexp value) {
      copyOnWrite();
      instance.mergeAutofillRegexpValue(value);
      return this;
    }
    /**
     * <pre>
     * A value from an Autofill source. Note that this must be preceded by a
     * |CollectUserDataAction|.
     * </pre>
     *
     * <code>.autofill_assistant.AutofillValueRegexp autofill_regexp_value = 8;</code>
     */
    public Builder clearAutofillRegexpValue() {
      copyOnWrite();
      instance.clearAutofillRegexpValue();
      return this;
    }

    /**
     * <code>optional .autofill_assistant.SelectOptionProto.OptionComparisonAttribute option_comparison_attribute = 6;</code>
     * @return Whether the optionComparisonAttribute field is set.
     */
    @java.lang.Override
    public boolean hasOptionComparisonAttribute() {
      return instance.hasOptionComparisonAttribute();
    }
    /**
     * <code>optional .autofill_assistant.SelectOptionProto.OptionComparisonAttribute option_comparison_attribute = 6;</code>
     * @return The optionComparisonAttribute.
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto.OptionComparisonAttribute getOptionComparisonAttribute() {
      return instance.getOptionComparisonAttribute();
    }
    /**
     * <code>optional .autofill_assistant.SelectOptionProto.OptionComparisonAttribute option_comparison_attribute = 6;</code>
     * @param value The enum numeric value on the wire for optionComparisonAttribute to set.
     * @return This builder for chaining.
     */
    public Builder setOptionComparisonAttribute(org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto.OptionComparisonAttribute value) {
      copyOnWrite();
      instance.setOptionComparisonAttribute(value);
      return this;
    }
    /**
     * <code>optional .autofill_assistant.SelectOptionProto.OptionComparisonAttribute option_comparison_attribute = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionComparisonAttribute() {
      copyOnWrite();
      instance.clearOptionComparisonAttribute();
      return this;
    }

    /**
     * <pre>
     * If |strict|, only one match is allowed. Multiple matches will return a
     * |TOO_MANY_OPTION_VALUES_FOUND| error. If not |strict| and multiple matches
     * are found, the first one is selected.
     * </pre>
     *
     * <code>optional bool strict = 9;</code>
     * @return Whether the strict field is set.
     */
    @java.lang.Override
    public boolean hasStrict() {
      return instance.hasStrict();
    }
    /**
     * <pre>
     * If |strict|, only one match is allowed. Multiple matches will return a
     * |TOO_MANY_OPTION_VALUES_FOUND| error. If not |strict| and multiple matches
     * are found, the first one is selected.
     * </pre>
     *
     * <code>optional bool strict = 9;</code>
     * @return The strict.
     */
    @java.lang.Override
    public boolean getStrict() {
      return instance.getStrict();
    }
    /**
     * <pre>
     * If |strict|, only one match is allowed. Multiple matches will return a
     * |TOO_MANY_OPTION_VALUES_FOUND| error. If not |strict| and multiple matches
     * are found, the first one is selected.
     * </pre>
     *
     * <code>optional bool strict = 9;</code>
     * @param value The strict to set.
     * @return This builder for chaining.
     */
    public Builder setStrict(boolean value) {
      copyOnWrite();
      instance.setStrict(value);
      return this;
    }
    /**
     * <pre>
     * If |strict|, only one match is allowed. Multiple matches will return a
     * |TOO_MANY_OPTION_VALUES_FOUND| error. If not |strict| and multiple matches
     * are found, the first one is selected.
     * </pre>
     *
     * <code>optional bool strict = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearStrict() {
      copyOnWrite();
      instance.clearStrict();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.SelectOptionProto)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "value_",
            "valueCase_",
            "bitField0_",
            "element_",
            "optionComparisonAttribute_",
            org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto.OptionComparisonAttribute.internalGetVerifier(),
            org.chromium.chrome.browser.autofill_assistant.proto.TextFilter.class,
            org.chromium.chrome.browser.autofill_assistant.proto.AutofillValueRegexp.class,
            "strict_",
          };
          java.lang.String info =
              "\u0001\u0005\u0001\u0001\u0002\t\u0005\u0000\u0000\u0000\u0002\u1009\u0000\u0006" +
              "\u100c\u0003\u0007\u103c\u0000\b\u103c\u0000\t\u1007\u0004";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.SelectOptionProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto DEFAULT_INSTANCE;
  static {
    SelectOptionProto defaultInstance = new SelectOptionProto();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      SelectOptionProto.class, defaultInstance);
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.SelectOptionProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<SelectOptionProto> PARSER;

  public static com.google.protobuf.Parser<SelectOptionProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

