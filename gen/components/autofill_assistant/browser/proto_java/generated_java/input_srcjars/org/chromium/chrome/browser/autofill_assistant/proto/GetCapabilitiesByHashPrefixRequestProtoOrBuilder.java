// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/autofill_assistant/browser/service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

public interface GetCapabilitiesByHashPrefixRequestProtoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:autofill_assistant.GetCapabilitiesByHashPrefixRequestProto)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * Required. Number of bits in each hash prefix. Value must be in the range
   * [15, 64].
   * </pre>
   *
   * <code>optional uint32 hash_prefix_length = 1;</code>
   * @return Whether the hashPrefixLength field is set.
   */
  boolean hasHashPrefixLength();
  /**
   * <pre>
   * Required. Number of bits in each hash prefix. Value must be in the range
   * [15, 64].
   * </pre>
   *
   * <code>optional uint32 hash_prefix_length = 1;</code>
   * @return The hashPrefixLength.
   */
  int getHashPrefixLength();

  /**
   * <pre>
   * Required. Hash prefixes for requested urls. The prefix will be taken as the
   * first `hash_prefix_length` number of bits of this uint64. Other bits will
   * be ignored. CityHash64 should be used to calculate the hashes. Encoding of
   * the domain url prior to hashing should be UTF-8, it should include the
   * http(s) header and exclude the last '/' character.
   * Examples:
   * - https://www.exampledomain.com
   * - https://example.domain.com
   * - https://domain.com
   * </pre>
   *
   * <code>repeated uint64 hash_prefix = 2 [packed = true];</code>
   * @return A list containing the hashPrefix.
   */
  java.util.List<java.lang.Long> getHashPrefixList();
  /**
   * <pre>
   * Required. Hash prefixes for requested urls. The prefix will be taken as the
   * first `hash_prefix_length` number of bits of this uint64. Other bits will
   * be ignored. CityHash64 should be used to calculate the hashes. Encoding of
   * the domain url prior to hashing should be UTF-8, it should include the
   * http(s) header and exclude the last '/' character.
   * Examples:
   * - https://www.exampledomain.com
   * - https://example.domain.com
   * - https://domain.com
   * </pre>
   *
   * <code>repeated uint64 hash_prefix = 2 [packed = true];</code>
   * @return The count of hashPrefix.
   */
  int getHashPrefixCount();
  /**
   * <pre>
   * Required. Hash prefixes for requested urls. The prefix will be taken as the
   * first `hash_prefix_length` number of bits of this uint64. Other bits will
   * be ignored. CityHash64 should be used to calculate the hashes. Encoding of
   * the domain url prior to hashing should be UTF-8, it should include the
   * http(s) header and exclude the last '/' character.
   * Examples:
   * - https://www.exampledomain.com
   * - https://example.domain.com
   * - https://domain.com
   * </pre>
   *
   * <code>repeated uint64 hash_prefix = 2 [packed = true];</code>
   * @param index The index of the element to return.
   * @return The hashPrefix at the given index.
   */
  long getHashPrefix(int index);

  /**
   * <pre>
   * The client context of the device for which you want to know script
   * capabilities.
   * NOTE: Currently, this will only contain the Chrome version number, locale
   * and country for privacy reasons.
   * </pre>
   *
   * <code>optional .autofill_assistant.ClientContextProto client_context = 3;</code>
   * @return Whether the clientContext field is set.
   */
  boolean hasClientContext();
  /**
   * <pre>
   * The client context of the device for which you want to know script
   * capabilities.
   * NOTE: Currently, this will only contain the Chrome version number, locale
   * and country for privacy reasons.
   * </pre>
   *
   * <code>optional .autofill_assistant.ClientContextProto client_context = 3;</code>
   * @return The clientContext.
   */
  org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto getClientContext();

  /**
   * <pre>
   * There is only a subset of parameters allowed to be sent from the client.
   * INTENT parameter is required.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ScriptParameterProto script_parameters = 4;</code>
   */
  java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.ScriptParameterProto> 
      getScriptParametersList();
  /**
   * <pre>
   * There is only a subset of parameters allowed to be sent from the client.
   * INTENT parameter is required.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ScriptParameterProto script_parameters = 4;</code>
   */
  org.chromium.chrome.browser.autofill_assistant.proto.ScriptParameterProto getScriptParameters(int index);
  /**
   * <pre>
   * There is only a subset of parameters allowed to be sent from the client.
   * INTENT parameter is required.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ScriptParameterProto script_parameters = 4;</code>
   */
  int getScriptParametersCount();
}
