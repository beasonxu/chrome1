// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/autofill_assistant/browser/service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * <pre>
 * Contain a localized text message from the server.
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.TellProto}
 */
public  final class TellProto extends
    com.google.protobuf.GeneratedMessageLite<
        TellProto, TellProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.TellProto)
    TellProtoOrBuilder {
  private TellProto() {
    message_ = "";
    needsUi_ = true;
  }
  public interface TextToSpeechOrBuilder extends
      // @@protoc_insertion_point(interface_extends:autofill_assistant.TellProto.TextToSpeech)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Optional field to override the text to synthesize and play using
     * TTS ('message' is used as the default text to play).
     * </pre>
     *
     * <code>optional string tts_message = 1;</code>
     * @return Whether the ttsMessage field is set.
     */
    boolean hasTtsMessage();
    /**
     * <pre>
     * Optional field to override the text to synthesize and play using
     * TTS ('message' is used as the default text to play).
     * </pre>
     *
     * <code>optional string tts_message = 1;</code>
     * @return The ttsMessage.
     */
    java.lang.String getTtsMessage();
    /**
     * <pre>
     * Optional field to override the text to synthesize and play using
     * TTS ('message' is used as the default text to play).
     * </pre>
     *
     * <code>optional string tts_message = 1;</code>
     * @return The bytes for ttsMessage.
     */
    com.google.protobuf.ByteString
        getTtsMessageBytes();

    /**
     * <pre>
     * Whether the current TTS message should be played immediately or not. If
     * this is false, the message will instead only play when the user taps the
     * TTS icon.
     * </pre>
     *
     * <code>optional bool play_now = 2;</code>
     * @return Whether the playNow field is set.
     */
    boolean hasPlayNow();
    /**
     * <pre>
     * Whether the current TTS message should be played immediately or not. If
     * this is false, the message will instead only play when the user taps the
     * TTS icon.
     * </pre>
     *
     * <code>optional bool play_now = 2;</code>
     * @return The playNow.
     */
    boolean getPlayNow();
  }
  /**
   * Protobuf type {@code autofill_assistant.TellProto.TextToSpeech}
   */
  public  static final class TextToSpeech extends
      com.google.protobuf.GeneratedMessageLite<
          TextToSpeech, TextToSpeech.Builder> implements
      // @@protoc_insertion_point(message_implements:autofill_assistant.TellProto.TextToSpeech)
      TextToSpeechOrBuilder {
    private TextToSpeech() {
      ttsMessage_ = "";
    }
    private int bitField0_;
    public static final int TTS_MESSAGE_FIELD_NUMBER = 1;
    private java.lang.String ttsMessage_;
    /**
     * <pre>
     * Optional field to override the text to synthesize and play using
     * TTS ('message' is used as the default text to play).
     * </pre>
     *
     * <code>optional string tts_message = 1;</code>
     * @return Whether the ttsMessage field is set.
     */
    @java.lang.Override
    public boolean hasTtsMessage() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Optional field to override the text to synthesize and play using
     * TTS ('message' is used as the default text to play).
     * </pre>
     *
     * <code>optional string tts_message = 1;</code>
     * @return The ttsMessage.
     */
    @java.lang.Override
    public java.lang.String getTtsMessage() {
      return ttsMessage_;
    }
    /**
     * <pre>
     * Optional field to override the text to synthesize and play using
     * TTS ('message' is used as the default text to play).
     * </pre>
     *
     * <code>optional string tts_message = 1;</code>
     * @return The bytes for ttsMessage.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTtsMessageBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(ttsMessage_);
    }
    /**
     * <pre>
     * Optional field to override the text to synthesize and play using
     * TTS ('message' is used as the default text to play).
     * </pre>
     *
     * <code>optional string tts_message = 1;</code>
     * @param value The ttsMessage to set.
     */
    private void setTtsMessage(
        java.lang.String value) {
      value.getClass();
  bitField0_ |= 0x00000001;
      ttsMessage_ = value;
    }
    /**
     * <pre>
     * Optional field to override the text to synthesize and play using
     * TTS ('message' is used as the default text to play).
     * </pre>
     *
     * <code>optional string tts_message = 1;</code>
     */
    private void clearTtsMessage() {
      bitField0_ = (bitField0_ & ~0x00000001);
      ttsMessage_ = getDefaultInstance().getTtsMessage();
    }
    /**
     * <pre>
     * Optional field to override the text to synthesize and play using
     * TTS ('message' is used as the default text to play).
     * </pre>
     *
     * <code>optional string tts_message = 1;</code>
     * @param value The bytes for ttsMessage to set.
     */
    private void setTtsMessageBytes(
        com.google.protobuf.ByteString value) {
      ttsMessage_ = value.toStringUtf8();
      bitField0_ |= 0x00000001;
    }

    public static final int PLAY_NOW_FIELD_NUMBER = 2;
    private boolean playNow_;
    /**
     * <pre>
     * Whether the current TTS message should be played immediately or not. If
     * this is false, the message will instead only play when the user taps the
     * TTS icon.
     * </pre>
     *
     * <code>optional bool play_now = 2;</code>
     * @return Whether the playNow field is set.
     */
    @java.lang.Override
    public boolean hasPlayNow() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Whether the current TTS message should be played immediately or not. If
     * this is false, the message will instead only play when the user taps the
     * TTS icon.
     * </pre>
     *
     * <code>optional bool play_now = 2;</code>
     * @return The playNow.
     */
    @java.lang.Override
    public boolean getPlayNow() {
      return playNow_;
    }
    /**
     * <pre>
     * Whether the current TTS message should be played immediately or not. If
     * this is false, the message will instead only play when the user taps the
     * TTS icon.
     * </pre>
     *
     * <code>optional bool play_now = 2;</code>
     * @param value The playNow to set.
     */
    private void setPlayNow(boolean value) {
      bitField0_ |= 0x00000002;
      playNow_ = value;
    }
    /**
     * <pre>
     * Whether the current TTS message should be played immediately or not. If
     * this is false, the message will instead only play when the user taps the
     * TTS icon.
     * </pre>
     *
     * <code>optional bool play_now = 2;</code>
     */
    private void clearPlayNow() {
      bitField0_ = (bitField0_ & ~0x00000002);
      playNow_ = false;
    }

    public static org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code autofill_assistant.TellProto.TextToSpeech}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech, Builder> implements
        // @@protoc_insertion_point(builder_implements:autofill_assistant.TellProto.TextToSpeech)
        org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeechOrBuilder {
      // Construct using org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Optional field to override the text to synthesize and play using
       * TTS ('message' is used as the default text to play).
       * </pre>
       *
       * <code>optional string tts_message = 1;</code>
       * @return Whether the ttsMessage field is set.
       */
      @java.lang.Override
      public boolean hasTtsMessage() {
        return instance.hasTtsMessage();
      }
      /**
       * <pre>
       * Optional field to override the text to synthesize and play using
       * TTS ('message' is used as the default text to play).
       * </pre>
       *
       * <code>optional string tts_message = 1;</code>
       * @return The ttsMessage.
       */
      @java.lang.Override
      public java.lang.String getTtsMessage() {
        return instance.getTtsMessage();
      }
      /**
       * <pre>
       * Optional field to override the text to synthesize and play using
       * TTS ('message' is used as the default text to play).
       * </pre>
       *
       * <code>optional string tts_message = 1;</code>
       * @return The bytes for ttsMessage.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTtsMessageBytes() {
        return instance.getTtsMessageBytes();
      }
      /**
       * <pre>
       * Optional field to override the text to synthesize and play using
       * TTS ('message' is used as the default text to play).
       * </pre>
       *
       * <code>optional string tts_message = 1;</code>
       * @param value The ttsMessage to set.
       * @return This builder for chaining.
       */
      public Builder setTtsMessage(
          java.lang.String value) {
        copyOnWrite();
        instance.setTtsMessage(value);
        return this;
      }
      /**
       * <pre>
       * Optional field to override the text to synthesize and play using
       * TTS ('message' is used as the default text to play).
       * </pre>
       *
       * <code>optional string tts_message = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTtsMessage() {
        copyOnWrite();
        instance.clearTtsMessage();
        return this;
      }
      /**
       * <pre>
       * Optional field to override the text to synthesize and play using
       * TTS ('message' is used as the default text to play).
       * </pre>
       *
       * <code>optional string tts_message = 1;</code>
       * @param value The bytes for ttsMessage to set.
       * @return This builder for chaining.
       */
      public Builder setTtsMessageBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTtsMessageBytes(value);
        return this;
      }

      /**
       * <pre>
       * Whether the current TTS message should be played immediately or not. If
       * this is false, the message will instead only play when the user taps the
       * TTS icon.
       * </pre>
       *
       * <code>optional bool play_now = 2;</code>
       * @return Whether the playNow field is set.
       */
      @java.lang.Override
      public boolean hasPlayNow() {
        return instance.hasPlayNow();
      }
      /**
       * <pre>
       * Whether the current TTS message should be played immediately or not. If
       * this is false, the message will instead only play when the user taps the
       * TTS icon.
       * </pre>
       *
       * <code>optional bool play_now = 2;</code>
       * @return The playNow.
       */
      @java.lang.Override
      public boolean getPlayNow() {
        return instance.getPlayNow();
      }
      /**
       * <pre>
       * Whether the current TTS message should be played immediately or not. If
       * this is false, the message will instead only play when the user taps the
       * TTS icon.
       * </pre>
       *
       * <code>optional bool play_now = 2;</code>
       * @param value The playNow to set.
       * @return This builder for chaining.
       */
      public Builder setPlayNow(boolean value) {
        copyOnWrite();
        instance.setPlayNow(value);
        return this;
      }
      /**
       * <pre>
       * Whether the current TTS message should be played immediately or not. If
       * this is false, the message will instead only play when the user taps the
       * TTS icon.
       * </pre>
       *
       * <code>optional bool play_now = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlayNow() {
        copyOnWrite();
        instance.clearPlayNow();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:autofill_assistant.TellProto.TextToSpeech)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "ttsMessage_",
              "playNow_",
            };
            java.lang.String info =
                "\u0001\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u1008\u0000\u0002" +
                "\u1007\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:autofill_assistant.TellProto.TextToSpeech)
    private static final org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech DEFAULT_INSTANCE;
    static {
      TextToSpeech defaultInstance = new TextToSpeech();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TextToSpeech.class, defaultInstance);
    }

    public static org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TextToSpeech> PARSER;

    public static com.google.protobuf.Parser<TextToSpeech> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  private int bitField0_;
  public static final int MESSAGE_FIELD_NUMBER = 1;
  private java.lang.String message_;
  /**
   * <pre>
   * The message to show in the status bar. The behavior is now the following
   *  * If the field is set, the status bar is updated (explicitly setting an
   *    empty string clears the status bar).
   *  * If the field is not set, the status bar is not updated.
   * </pre>
   *
   * <code>optional string message = 1;</code>
   * @return Whether the message field is set.
   */
  @java.lang.Override
  public boolean hasMessage() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The message to show in the status bar. The behavior is now the following
   *  * If the field is set, the status bar is updated (explicitly setting an
   *    empty string clears the status bar).
   *  * If the field is not set, the status bar is not updated.
   * </pre>
   *
   * <code>optional string message = 1;</code>
   * @return The message.
   */
  @java.lang.Override
  public java.lang.String getMessage() {
    return message_;
  }
  /**
   * <pre>
   * The message to show in the status bar. The behavior is now the following
   *  * If the field is set, the status bar is updated (explicitly setting an
   *    empty string clears the status bar).
   *  * If the field is not set, the status bar is not updated.
   * </pre>
   *
   * <code>optional string message = 1;</code>
   * @return The bytes for message.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getMessageBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(message_);
  }
  /**
   * <pre>
   * The message to show in the status bar. The behavior is now the following
   *  * If the field is set, the status bar is updated (explicitly setting an
   *    empty string clears the status bar).
   *  * If the field is not set, the status bar is not updated.
   * </pre>
   *
   * <code>optional string message = 1;</code>
   * @param value The message to set.
   */
  private void setMessage(
      java.lang.String value) {
    value.getClass();
  bitField0_ |= 0x00000001;
    message_ = value;
  }
  /**
   * <pre>
   * The message to show in the status bar. The behavior is now the following
   *  * If the field is set, the status bar is updated (explicitly setting an
   *    empty string clears the status bar).
   *  * If the field is not set, the status bar is not updated.
   * </pre>
   *
   * <code>optional string message = 1;</code>
   */
  private void clearMessage() {
    bitField0_ = (bitField0_ & ~0x00000001);
    message_ = getDefaultInstance().getMessage();
  }
  /**
   * <pre>
   * The message to show in the status bar. The behavior is now the following
   *  * If the field is set, the status bar is updated (explicitly setting an
   *    empty string clears the status bar).
   *  * If the field is not set, the status bar is not updated.
   * </pre>
   *
   * <code>optional string message = 1;</code>
   * @param value The bytes for message to set.
   */
  private void setMessageBytes(
      com.google.protobuf.ByteString value) {
    message_ = value.toStringUtf8();
    bitField0_ |= 0x00000001;
  }

  public static final int NEEDS_UI_FIELD_NUMBER = 2;
  private boolean needsUi_;
  /**
   * <pre>
   * Show the UI if it's not shown yet, such as when a script has been started
   * by a direct action.
   * </pre>
   *
   * <code>optional bool needs_ui = 2 [default = true];</code>
   * @return Whether the needsUi field is set.
   */
  @java.lang.Override
  public boolean hasNeedsUi() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Show the UI if it's not shown yet, such as when a script has been started
   * by a direct action.
   * </pre>
   *
   * <code>optional bool needs_ui = 2 [default = true];</code>
   * @return The needsUi.
   */
  @java.lang.Override
  public boolean getNeedsUi() {
    return needsUi_;
  }
  /**
   * <pre>
   * Show the UI if it's not shown yet, such as when a script has been started
   * by a direct action.
   * </pre>
   *
   * <code>optional bool needs_ui = 2 [default = true];</code>
   * @param value The needsUi to set.
   */
  private void setNeedsUi(boolean value) {
    bitField0_ |= 0x00000002;
    needsUi_ = value;
  }
  /**
   * <pre>
   * Show the UI if it's not shown yet, such as when a script has been started
   * by a direct action.
   * </pre>
   *
   * <code>optional bool needs_ui = 2 [default = true];</code>
   */
  private void clearNeedsUi() {
    bitField0_ = (bitField0_ & ~0x00000002);
    needsUi_ = true;
  }

  public static final int TEXT_TO_SPEECH_FIELD_NUMBER = 3;
  private org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech textToSpeech_;
  /**
   * <pre>
   * Config for TextToSpeech (TTS) functionality.
   * </pre>
   *
   * <code>optional .autofill_assistant.TellProto.TextToSpeech text_to_speech = 3;</code>
   */
  @java.lang.Override
  public boolean hasTextToSpeech() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Config for TextToSpeech (TTS) functionality.
   * </pre>
   *
   * <code>optional .autofill_assistant.TellProto.TextToSpeech text_to_speech = 3;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech getTextToSpeech() {
    return textToSpeech_ == null ? org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech.getDefaultInstance() : textToSpeech_;
  }
  /**
   * <pre>
   * Config for TextToSpeech (TTS) functionality.
   * </pre>
   *
   * <code>optional .autofill_assistant.TellProto.TextToSpeech text_to_speech = 3;</code>
   */
  private void setTextToSpeech(org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech value) {
    value.getClass();
  textToSpeech_ = value;
    bitField0_ |= 0x00000004;
    }
  /**
   * <pre>
   * Config for TextToSpeech (TTS) functionality.
   * </pre>
   *
   * <code>optional .autofill_assistant.TellProto.TextToSpeech text_to_speech = 3;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeTextToSpeech(org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech value) {
    value.getClass();
  if (textToSpeech_ != null &&
        textToSpeech_ != org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech.getDefaultInstance()) {
      textToSpeech_ =
        org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech.newBuilder(textToSpeech_).mergeFrom(value).buildPartial();
    } else {
      textToSpeech_ = value;
    }
    bitField0_ |= 0x00000004;
  }
  /**
   * <pre>
   * Config for TextToSpeech (TTS) functionality.
   * </pre>
   *
   * <code>optional .autofill_assistant.TellProto.TextToSpeech text_to_speech = 3;</code>
   */
  private void clearTextToSpeech() {  textToSpeech_ = null;
    bitField0_ = (bitField0_ & ~0x00000004);
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.TellProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TellProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TellProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TellProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TellProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TellProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TellProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TellProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TellProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TellProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TellProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TellProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.TellProto prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Contain a localized text message from the server.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.TellProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.TellProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.TellProto)
      org.chromium.chrome.browser.autofill_assistant.proto.TellProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.TellProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The message to show in the status bar. The behavior is now the following
     *  * If the field is set, the status bar is updated (explicitly setting an
     *    empty string clears the status bar).
     *  * If the field is not set, the status bar is not updated.
     * </pre>
     *
     * <code>optional string message = 1;</code>
     * @return Whether the message field is set.
     */
    @java.lang.Override
    public boolean hasMessage() {
      return instance.hasMessage();
    }
    /**
     * <pre>
     * The message to show in the status bar. The behavior is now the following
     *  * If the field is set, the status bar is updated (explicitly setting an
     *    empty string clears the status bar).
     *  * If the field is not set, the status bar is not updated.
     * </pre>
     *
     * <code>optional string message = 1;</code>
     * @return The message.
     */
    @java.lang.Override
    public java.lang.String getMessage() {
      return instance.getMessage();
    }
    /**
     * <pre>
     * The message to show in the status bar. The behavior is now the following
     *  * If the field is set, the status bar is updated (explicitly setting an
     *    empty string clears the status bar).
     *  * If the field is not set, the status bar is not updated.
     * </pre>
     *
     * <code>optional string message = 1;</code>
     * @return The bytes for message.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMessageBytes() {
      return instance.getMessageBytes();
    }
    /**
     * <pre>
     * The message to show in the status bar. The behavior is now the following
     *  * If the field is set, the status bar is updated (explicitly setting an
     *    empty string clears the status bar).
     *  * If the field is not set, the status bar is not updated.
     * </pre>
     *
     * <code>optional string message = 1;</code>
     * @param value The message to set.
     * @return This builder for chaining.
     */
    public Builder setMessage(
        java.lang.String value) {
      copyOnWrite();
      instance.setMessage(value);
      return this;
    }
    /**
     * <pre>
     * The message to show in the status bar. The behavior is now the following
     *  * If the field is set, the status bar is updated (explicitly setting an
     *    empty string clears the status bar).
     *  * If the field is not set, the status bar is not updated.
     * </pre>
     *
     * <code>optional string message = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearMessage() {
      copyOnWrite();
      instance.clearMessage();
      return this;
    }
    /**
     * <pre>
     * The message to show in the status bar. The behavior is now the following
     *  * If the field is set, the status bar is updated (explicitly setting an
     *    empty string clears the status bar).
     *  * If the field is not set, the status bar is not updated.
     * </pre>
     *
     * <code>optional string message = 1;</code>
     * @param value The bytes for message to set.
     * @return This builder for chaining.
     */
    public Builder setMessageBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setMessageBytes(value);
      return this;
    }

    /**
     * <pre>
     * Show the UI if it's not shown yet, such as when a script has been started
     * by a direct action.
     * </pre>
     *
     * <code>optional bool needs_ui = 2 [default = true];</code>
     * @return Whether the needsUi field is set.
     */
    @java.lang.Override
    public boolean hasNeedsUi() {
      return instance.hasNeedsUi();
    }
    /**
     * <pre>
     * Show the UI if it's not shown yet, such as when a script has been started
     * by a direct action.
     * </pre>
     *
     * <code>optional bool needs_ui = 2 [default = true];</code>
     * @return The needsUi.
     */
    @java.lang.Override
    public boolean getNeedsUi() {
      return instance.getNeedsUi();
    }
    /**
     * <pre>
     * Show the UI if it's not shown yet, such as when a script has been started
     * by a direct action.
     * </pre>
     *
     * <code>optional bool needs_ui = 2 [default = true];</code>
     * @param value The needsUi to set.
     * @return This builder for chaining.
     */
    public Builder setNeedsUi(boolean value) {
      copyOnWrite();
      instance.setNeedsUi(value);
      return this;
    }
    /**
     * <pre>
     * Show the UI if it's not shown yet, such as when a script has been started
     * by a direct action.
     * </pre>
     *
     * <code>optional bool needs_ui = 2 [default = true];</code>
     * @return This builder for chaining.
     */
    public Builder clearNeedsUi() {
      copyOnWrite();
      instance.clearNeedsUi();
      return this;
    }

    /**
     * <pre>
     * Config for TextToSpeech (TTS) functionality.
     * </pre>
     *
     * <code>optional .autofill_assistant.TellProto.TextToSpeech text_to_speech = 3;</code>
     */
    @java.lang.Override
    public boolean hasTextToSpeech() {
      return instance.hasTextToSpeech();
    }
    /**
     * <pre>
     * Config for TextToSpeech (TTS) functionality.
     * </pre>
     *
     * <code>optional .autofill_assistant.TellProto.TextToSpeech text_to_speech = 3;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech getTextToSpeech() {
      return instance.getTextToSpeech();
    }
    /**
     * <pre>
     * Config for TextToSpeech (TTS) functionality.
     * </pre>
     *
     * <code>optional .autofill_assistant.TellProto.TextToSpeech text_to_speech = 3;</code>
     */
    public Builder setTextToSpeech(org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech value) {
      copyOnWrite();
      instance.setTextToSpeech(value);
      return this;
      }
    /**
     * <pre>
     * Config for TextToSpeech (TTS) functionality.
     * </pre>
     *
     * <code>optional .autofill_assistant.TellProto.TextToSpeech text_to_speech = 3;</code>
     */
    public Builder setTextToSpeech(
        org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech.Builder builderForValue) {
      copyOnWrite();
      instance.setTextToSpeech(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Config for TextToSpeech (TTS) functionality.
     * </pre>
     *
     * <code>optional .autofill_assistant.TellProto.TextToSpeech text_to_speech = 3;</code>
     */
    public Builder mergeTextToSpeech(org.chromium.chrome.browser.autofill_assistant.proto.TellProto.TextToSpeech value) {
      copyOnWrite();
      instance.mergeTextToSpeech(value);
      return this;
    }
    /**
     * <pre>
     * Config for TextToSpeech (TTS) functionality.
     * </pre>
     *
     * <code>optional .autofill_assistant.TellProto.TextToSpeech text_to_speech = 3;</code>
     */
    public Builder clearTextToSpeech() {  copyOnWrite();
      instance.clearTextToSpeech();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.TellProto)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.TellProto();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "message_",
            "needsUi_",
            "textToSpeech_",
          };
          java.lang.String info =
              "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u1008\u0000\u0002" +
              "\u1007\u0001\u0003\u1009\u0002";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.TellProto> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.chrome.browser.autofill_assistant.proto.TellProto.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.TellProto>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.TellProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.TellProto DEFAULT_INSTANCE;
  static {
    TellProto defaultInstance = new TellProto();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      TellProto.class, defaultInstance);
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.TellProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<TellProto> PARSER;

  public static com.google.protobuf.Parser<TellProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

