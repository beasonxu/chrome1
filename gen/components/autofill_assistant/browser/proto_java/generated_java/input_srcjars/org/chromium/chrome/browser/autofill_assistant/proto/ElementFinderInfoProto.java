// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/autofill_assistant/browser/service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * Protobuf type {@code autofill_assistant.ElementFinderInfoProto}
 */
public  final class ElementFinderInfoProto extends
    com.google.protobuf.GeneratedMessageLite<
        ElementFinderInfoProto, ElementFinderInfoProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.ElementFinderInfoProto)
    ElementFinderInfoProtoOrBuilder {
  private ElementFinderInfoProto() {
  }
  /**
   * Protobuf enum {@code autofill_assistant.ElementFinderInfoProto.SemanticInferenceStatus}
   */
  public enum SemanticInferenceStatus
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * Unknown error. Should not occur.
     * </pre>
     *
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     * <pre>
     * The model was run successfully.
     * </pre>
     *
     * <code>SUCCESS = 1;</code>
     */
    SUCCESS(1),
    /**
     * <pre>
     * An unexpected error happened when the model was run. E.g. the frame
     * was not available where it was expected to be.
     * </pre>
     *
     * <code>UNEXPECTED_ERROR = 2;</code>
     */
    UNEXPECTED_ERROR(2),
    /**
     * <pre>
     * The model was successfully loaded but could not initialize the executor.
     * </pre>
     *
     * <code>INITIALIZATION_ERROR = 3;</code>
     */
    INITIALIZATION_ERROR(3),
    /**
     * <pre>
     * The model could not be loaded. This is unexpected and should not occur.
     * </pre>
     *
     * <code>MODEL_LOAD_ERROR = 4;</code>
     */
    MODEL_LOAD_ERROR(4),
    /**
     * <pre>
     * The model loading timed out.
     * </pre>
     *
     * <code>MODEL_LOAD_TIMEOUT = 5;</code>
     */
    MODEL_LOAD_TIMEOUT(5),
    ;

    /**
     * <pre>
     * Unknown error. Should not occur.
     * </pre>
     *
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <pre>
     * The model was run successfully.
     * </pre>
     *
     * <code>SUCCESS = 1;</code>
     */
    public static final int SUCCESS_VALUE = 1;
    /**
     * <pre>
     * An unexpected error happened when the model was run. E.g. the frame
     * was not available where it was expected to be.
     * </pre>
     *
     * <code>UNEXPECTED_ERROR = 2;</code>
     */
    public static final int UNEXPECTED_ERROR_VALUE = 2;
    /**
     * <pre>
     * The model was successfully loaded but could not initialize the executor.
     * </pre>
     *
     * <code>INITIALIZATION_ERROR = 3;</code>
     */
    public static final int INITIALIZATION_ERROR_VALUE = 3;
    /**
     * <pre>
     * The model could not be loaded. This is unexpected and should not occur.
     * </pre>
     *
     * <code>MODEL_LOAD_ERROR = 4;</code>
     */
    public static final int MODEL_LOAD_ERROR_VALUE = 4;
    /**
     * <pre>
     * The model loading timed out.
     * </pre>
     *
     * <code>MODEL_LOAD_TIMEOUT = 5;</code>
     */
    public static final int MODEL_LOAD_TIMEOUT_VALUE = 5;


    @java.lang.Override
    public final int getNumber() {
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SemanticInferenceStatus valueOf(int value) {
      return forNumber(value);
    }

    public static SemanticInferenceStatus forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return SUCCESS;
        case 2: return UNEXPECTED_ERROR;
        case 3: return INITIALIZATION_ERROR;
        case 4: return MODEL_LOAD_ERROR;
        case 5: return MODEL_LOAD_TIMEOUT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SemanticInferenceStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SemanticInferenceStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SemanticInferenceStatus>() {
            @java.lang.Override
            public SemanticInferenceStatus findValueByNumber(int number) {
              return SemanticInferenceStatus.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return SemanticInferenceStatusVerifier.INSTANCE;
    }

    private static final class SemanticInferenceStatusVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new SemanticInferenceStatusVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return SemanticInferenceStatus.forNumber(number) != null;
            }
          };

    private final int value;

    private SemanticInferenceStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:autofill_assistant.ElementFinderInfoProto.SemanticInferenceStatus)
  }

  public interface PredictedElementOrBuilder extends
      // @@protoc_insertion_point(interface_extends:autofill_assistant.ElementFinderInfoProto.PredictedElement)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The predicted objective and predicted role of this element.
     * </pre>
     *
     * <code>optional .autofill_assistant.SelectorProto.SemanticFilter semantic_filter = 4;</code>
     * @return Whether the semanticFilter field is set.
     */
    boolean hasSemanticFilter();
    /**
     * <pre>
     * The predicted objective and predicted role of this element.
     * </pre>
     *
     * <code>optional .autofill_assistant.SelectorProto.SemanticFilter semantic_filter = 4;</code>
     * @return The semanticFilter.
     */
    org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.SemanticFilter getSemanticFilter();

    /**
     * <pre>
     * The element's backend node id.
     * </pre>
     *
     * <code>optional int32 backend_node_id = 3;</code>
     * @return Whether the backendNodeId field is set.
     */
    boolean hasBackendNodeId();
    /**
     * <pre>
     * The element's backend node id.
     * </pre>
     *
     * <code>optional int32 backend_node_id = 3;</code>
     * @return The backendNodeId.
     */
    int getBackendNodeId();
  }
  /**
   * Protobuf type {@code autofill_assistant.ElementFinderInfoProto.PredictedElement}
   */
  public  static final class PredictedElement extends
      com.google.protobuf.GeneratedMessageLite<
          PredictedElement, PredictedElement.Builder> implements
      // @@protoc_insertion_point(message_implements:autofill_assistant.ElementFinderInfoProto.PredictedElement)
      PredictedElementOrBuilder {
    private PredictedElement() {
    }
    private int bitField0_;
    public static final int SEMANTIC_FILTER_FIELD_NUMBER = 4;
    private org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.SemanticFilter semanticFilter_;
    /**
     * <pre>
     * The predicted objective and predicted role of this element.
     * </pre>
     *
     * <code>optional .autofill_assistant.SelectorProto.SemanticFilter semantic_filter = 4;</code>
     */
    @java.lang.Override
    public boolean hasSemanticFilter() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The predicted objective and predicted role of this element.
     * </pre>
     *
     * <code>optional .autofill_assistant.SelectorProto.SemanticFilter semantic_filter = 4;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.SemanticFilter getSemanticFilter() {
      return semanticFilter_ == null ? org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.SemanticFilter.getDefaultInstance() : semanticFilter_;
    }
    /**
     * <pre>
     * The predicted objective and predicted role of this element.
     * </pre>
     *
     * <code>optional .autofill_assistant.SelectorProto.SemanticFilter semantic_filter = 4;</code>
     */
    private void setSemanticFilter(org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.SemanticFilter value) {
      value.getClass();
  semanticFilter_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <pre>
     * The predicted objective and predicted role of this element.
     * </pre>
     *
     * <code>optional .autofill_assistant.SelectorProto.SemanticFilter semantic_filter = 4;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeSemanticFilter(org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.SemanticFilter value) {
      value.getClass();
  if (semanticFilter_ != null &&
          semanticFilter_ != org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.SemanticFilter.getDefaultInstance()) {
        semanticFilter_ =
          org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.SemanticFilter.newBuilder(semanticFilter_).mergeFrom(value).buildPartial();
      } else {
        semanticFilter_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * The predicted objective and predicted role of this element.
     * </pre>
     *
     * <code>optional .autofill_assistant.SelectorProto.SemanticFilter semantic_filter = 4;</code>
     */
    private void clearSemanticFilter() {  semanticFilter_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int BACKEND_NODE_ID_FIELD_NUMBER = 3;
    private int backendNodeId_;
    /**
     * <pre>
     * The element's backend node id.
     * </pre>
     *
     * <code>optional int32 backend_node_id = 3;</code>
     * @return Whether the backendNodeId field is set.
     */
    @java.lang.Override
    public boolean hasBackendNodeId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The element's backend node id.
     * </pre>
     *
     * <code>optional int32 backend_node_id = 3;</code>
     * @return The backendNodeId.
     */
    @java.lang.Override
    public int getBackendNodeId() {
      return backendNodeId_;
    }
    /**
     * <pre>
     * The element's backend node id.
     * </pre>
     *
     * <code>optional int32 backend_node_id = 3;</code>
     * @param value The backendNodeId to set.
     */
    private void setBackendNodeId(int value) {
      bitField0_ |= 0x00000002;
      backendNodeId_ = value;
    }
    /**
     * <pre>
     * The element's backend node id.
     * </pre>
     *
     * <code>optional int32 backend_node_id = 3;</code>
     */
    private void clearBackendNodeId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      backendNodeId_ = 0;
    }

    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code autofill_assistant.ElementFinderInfoProto.PredictedElement}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement, Builder> implements
        // @@protoc_insertion_point(builder_implements:autofill_assistant.ElementFinderInfoProto.PredictedElement)
        org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElementOrBuilder {
      // Construct using org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The predicted objective and predicted role of this element.
       * </pre>
       *
       * <code>optional .autofill_assistant.SelectorProto.SemanticFilter semantic_filter = 4;</code>
       */
      @java.lang.Override
      public boolean hasSemanticFilter() {
        return instance.hasSemanticFilter();
      }
      /**
       * <pre>
       * The predicted objective and predicted role of this element.
       * </pre>
       *
       * <code>optional .autofill_assistant.SelectorProto.SemanticFilter semantic_filter = 4;</code>
       */
      @java.lang.Override
      public org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.SemanticFilter getSemanticFilter() {
        return instance.getSemanticFilter();
      }
      /**
       * <pre>
       * The predicted objective and predicted role of this element.
       * </pre>
       *
       * <code>optional .autofill_assistant.SelectorProto.SemanticFilter semantic_filter = 4;</code>
       */
      public Builder setSemanticFilter(org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.SemanticFilter value) {
        copyOnWrite();
        instance.setSemanticFilter(value);
        return this;
        }
      /**
       * <pre>
       * The predicted objective and predicted role of this element.
       * </pre>
       *
       * <code>optional .autofill_assistant.SelectorProto.SemanticFilter semantic_filter = 4;</code>
       */
      public Builder setSemanticFilter(
          org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.SemanticFilter.Builder builderForValue) {
        copyOnWrite();
        instance.setSemanticFilter(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The predicted objective and predicted role of this element.
       * </pre>
       *
       * <code>optional .autofill_assistant.SelectorProto.SemanticFilter semantic_filter = 4;</code>
       */
      public Builder mergeSemanticFilter(org.chromium.chrome.browser.autofill_assistant.proto.SelectorProto.SemanticFilter value) {
        copyOnWrite();
        instance.mergeSemanticFilter(value);
        return this;
      }
      /**
       * <pre>
       * The predicted objective and predicted role of this element.
       * </pre>
       *
       * <code>optional .autofill_assistant.SelectorProto.SemanticFilter semantic_filter = 4;</code>
       */
      public Builder clearSemanticFilter() {  copyOnWrite();
        instance.clearSemanticFilter();
        return this;
      }

      /**
       * <pre>
       * The element's backend node id.
       * </pre>
       *
       * <code>optional int32 backend_node_id = 3;</code>
       * @return Whether the backendNodeId field is set.
       */
      @java.lang.Override
      public boolean hasBackendNodeId() {
        return instance.hasBackendNodeId();
      }
      /**
       * <pre>
       * The element's backend node id.
       * </pre>
       *
       * <code>optional int32 backend_node_id = 3;</code>
       * @return The backendNodeId.
       */
      @java.lang.Override
      public int getBackendNodeId() {
        return instance.getBackendNodeId();
      }
      /**
       * <pre>
       * The element's backend node id.
       * </pre>
       *
       * <code>optional int32 backend_node_id = 3;</code>
       * @param value The backendNodeId to set.
       * @return This builder for chaining.
       */
      public Builder setBackendNodeId(int value) {
        copyOnWrite();
        instance.setBackendNodeId(value);
        return this;
      }
      /**
       * <pre>
       * The element's backend node id.
       * </pre>
       *
       * <code>optional int32 backend_node_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBackendNodeId() {
        copyOnWrite();
        instance.clearBackendNodeId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:autofill_assistant.ElementFinderInfoProto.PredictedElement)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "backendNodeId_",
              "semanticFilter_",
            };
            java.lang.String info =
                "\u0001\u0002\u0000\u0001\u0003\u0004\u0002\u0000\u0000\u0000\u0003\u1004\u0001\u0004" +
                "\u1009\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:autofill_assistant.ElementFinderInfoProto.PredictedElement)
    private static final org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement DEFAULT_INSTANCE;
    static {
      PredictedElement defaultInstance = new PredictedElement();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        PredictedElement.class, defaultInstance);
    }

    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PredictedElement> PARSER;

    public static com.google.protobuf.Parser<PredictedElement> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SemanticInferenceResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:autofill_assistant.ElementFinderInfoProto.SemanticInferenceResult)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * If this is empty, the model inference did not find any results.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementFinderInfoProto.PredictedElement predicted_elements = 1;</code>
     */
    java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement> 
        getPredictedElementsList();
    /**
     * <pre>
     * If this is empty, the model inference did not find any results.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementFinderInfoProto.PredictedElement predicted_elements = 1;</code>
     */
    org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement getPredictedElements(int index);
    /**
     * <pre>
     * If this is empty, the model inference did not find any results.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementFinderInfoProto.PredictedElement predicted_elements = 1;</code>
     */
    int getPredictedElementsCount();

    /**
     * <pre>
     * Status per frame. The order is not predictable, the results are
     * collected async and arrive in random order.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementFinderInfoProto.SemanticInferenceStatus status_per_frame = 2;</code>
     * @return A list containing the statusPerFrame.
     */
    java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceStatus> getStatusPerFrameList();
    /**
     * <pre>
     * Status per frame. The order is not predictable, the results are
     * collected async and arrive in random order.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementFinderInfoProto.SemanticInferenceStatus status_per_frame = 2;</code>
     * @return The count of statusPerFrame.
     */
    int getStatusPerFrameCount();
    /**
     * <pre>
     * Status per frame. The order is not predictable, the results are
     * collected async and arrive in random order.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementFinderInfoProto.SemanticInferenceStatus status_per_frame = 2;</code>
     * @param index The index of the element to return.
     * @return The statusPerFrame at the given index.
     */
    org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceStatus getStatusPerFrame(int index);
  }
  /**
   * Protobuf type {@code autofill_assistant.ElementFinderInfoProto.SemanticInferenceResult}
   */
  public  static final class SemanticInferenceResult extends
      com.google.protobuf.GeneratedMessageLite<
          SemanticInferenceResult, SemanticInferenceResult.Builder> implements
      // @@protoc_insertion_point(message_implements:autofill_assistant.ElementFinderInfoProto.SemanticInferenceResult)
      SemanticInferenceResultOrBuilder {
    private SemanticInferenceResult() {
      predictedElements_ = emptyProtobufList();
      statusPerFrame_ = emptyIntList();
    }
    public static final int PREDICTED_ELEMENTS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement> predictedElements_;
    /**
     * <pre>
     * If this is empty, the model inference did not find any results.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementFinderInfoProto.PredictedElement predicted_elements = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement> getPredictedElementsList() {
      return predictedElements_;
    }
    /**
     * <pre>
     * If this is empty, the model inference did not find any results.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementFinderInfoProto.PredictedElement predicted_elements = 1;</code>
     */
    public java.util.List<? extends org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElementOrBuilder> 
        getPredictedElementsOrBuilderList() {
      return predictedElements_;
    }
    /**
     * <pre>
     * If this is empty, the model inference did not find any results.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementFinderInfoProto.PredictedElement predicted_elements = 1;</code>
     */
    @java.lang.Override
    public int getPredictedElementsCount() {
      return predictedElements_.size();
    }
    /**
     * <pre>
     * If this is empty, the model inference did not find any results.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementFinderInfoProto.PredictedElement predicted_elements = 1;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement getPredictedElements(int index) {
      return predictedElements_.get(index);
    }
    /**
     * <pre>
     * If this is empty, the model inference did not find any results.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementFinderInfoProto.PredictedElement predicted_elements = 1;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElementOrBuilder getPredictedElementsOrBuilder(
        int index) {
      return predictedElements_.get(index);
    }
    private void ensurePredictedElementsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement> tmp = predictedElements_;
      if (!tmp.isModifiable()) {
        predictedElements_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * If this is empty, the model inference did not find any results.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementFinderInfoProto.PredictedElement predicted_elements = 1;</code>
     */
    private void setPredictedElements(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement value) {
      value.getClass();
  ensurePredictedElementsIsMutable();
      predictedElements_.set(index, value);
    }
    /**
     * <pre>
     * If this is empty, the model inference did not find any results.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementFinderInfoProto.PredictedElement predicted_elements = 1;</code>
     */
    private void addPredictedElements(org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement value) {
      value.getClass();
  ensurePredictedElementsIsMutable();
      predictedElements_.add(value);
    }
    /**
     * <pre>
     * If this is empty, the model inference did not find any results.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementFinderInfoProto.PredictedElement predicted_elements = 1;</code>
     */
    private void addPredictedElements(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement value) {
      value.getClass();
  ensurePredictedElementsIsMutable();
      predictedElements_.add(index, value);
    }
    /**
     * <pre>
     * If this is empty, the model inference did not find any results.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementFinderInfoProto.PredictedElement predicted_elements = 1;</code>
     */
    private void addAllPredictedElements(
        java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement> values) {
      ensurePredictedElementsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, predictedElements_);
    }
    /**
     * <pre>
     * If this is empty, the model inference did not find any results.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementFinderInfoProto.PredictedElement predicted_elements = 1;</code>
     */
    private void clearPredictedElements() {
      predictedElements_ = emptyProtobufList();
    }
    /**
     * <pre>
     * If this is empty, the model inference did not find any results.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementFinderInfoProto.PredictedElement predicted_elements = 1;</code>
     */
    private void removePredictedElements(int index) {
      ensurePredictedElementsIsMutable();
      predictedElements_.remove(index);
    }

    public static final int STATUS_PER_FRAME_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList statusPerFrame_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceStatus> statusPerFrame_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceStatus>() {
              @java.lang.Override
              public org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceStatus convert(java.lang.Integer from) {
                org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceStatus result = org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceStatus.forNumber(from);
                return result == null ? org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceStatus.UNKNOWN : result;
              }
            };
    /**
     * <pre>
     * Status per frame. The order is not predictable, the results are
     * collected async and arrive in random order.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementFinderInfoProto.SemanticInferenceStatus status_per_frame = 2;</code>
     * @return A list containing the statusPerFrame.
     */
    @java.lang.Override
    public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceStatus> getStatusPerFrameList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceStatus>(statusPerFrame_, statusPerFrame_converter_);
    }
    /**
     * <pre>
     * Status per frame. The order is not predictable, the results are
     * collected async and arrive in random order.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementFinderInfoProto.SemanticInferenceStatus status_per_frame = 2;</code>
     * @return The count of statusPerFrame.
     */
    @java.lang.Override
    public int getStatusPerFrameCount() {
      return statusPerFrame_.size();
    }
    /**
     * <pre>
     * Status per frame. The order is not predictable, the results are
     * collected async and arrive in random order.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementFinderInfoProto.SemanticInferenceStatus status_per_frame = 2;</code>
     * @param index The index of the element to return.
     * @return The statusPerFrame at the given index.
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceStatus getStatusPerFrame(int index) {
      return statusPerFrame_converter_.convert(statusPerFrame_.getInt(index));
    }
    private void ensureStatusPerFrameIsMutable() {
      com.google.protobuf.Internal.IntList tmp = statusPerFrame_;
      if (!tmp.isModifiable()) {
        statusPerFrame_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
      }
    }
    /**
     * <pre>
     * Status per frame. The order is not predictable, the results are
     * collected async and arrive in random order.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementFinderInfoProto.SemanticInferenceStatus status_per_frame = 2;</code>
     * @param index The index to set the value at.
     * @param value The statusPerFrame to set.
     */
    private void setStatusPerFrame(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceStatus value) {
      value.getClass();
  ensureStatusPerFrameIsMutable();
      statusPerFrame_.setInt(index, value.getNumber());
    }
    /**
     * <pre>
     * Status per frame. The order is not predictable, the results are
     * collected async and arrive in random order.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementFinderInfoProto.SemanticInferenceStatus status_per_frame = 2;</code>
     * @param value The statusPerFrame to add.
     */
    private void addStatusPerFrame(org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceStatus value) {
      value.getClass();
  ensureStatusPerFrameIsMutable();
      statusPerFrame_.addInt(value.getNumber());
    }
    /**
     * <pre>
     * Status per frame. The order is not predictable, the results are
     * collected async and arrive in random order.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementFinderInfoProto.SemanticInferenceStatus status_per_frame = 2;</code>
     * @param values The statusPerFrame to add.
     */
    private void addAllStatusPerFrame(
        java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceStatus> values) {
      ensureStatusPerFrameIsMutable();
      for (org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceStatus value : values) {
        statusPerFrame_.addInt(value.getNumber());
      }
    }
    /**
     * <pre>
     * Status per frame. The order is not predictable, the results are
     * collected async and arrive in random order.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementFinderInfoProto.SemanticInferenceStatus status_per_frame = 2;</code>
     */
    private void clearStatusPerFrame() {
      statusPerFrame_ = emptyIntList();
    }

    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code autofill_assistant.ElementFinderInfoProto.SemanticInferenceResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult, Builder> implements
        // @@protoc_insertion_point(builder_implements:autofill_assistant.ElementFinderInfoProto.SemanticInferenceResult)
        org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResultOrBuilder {
      // Construct using org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * If this is empty, the model inference did not find any results.
       * </pre>
       *
       * <code>repeated .autofill_assistant.ElementFinderInfoProto.PredictedElement predicted_elements = 1;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement> getPredictedElementsList() {
        return java.util.Collections.unmodifiableList(
            instance.getPredictedElementsList());
      }
      /**
       * <pre>
       * If this is empty, the model inference did not find any results.
       * </pre>
       *
       * <code>repeated .autofill_assistant.ElementFinderInfoProto.PredictedElement predicted_elements = 1;</code>
       */
      @java.lang.Override
      public int getPredictedElementsCount() {
        return instance.getPredictedElementsCount();
      }/**
       * <pre>
       * If this is empty, the model inference did not find any results.
       * </pre>
       *
       * <code>repeated .autofill_assistant.ElementFinderInfoProto.PredictedElement predicted_elements = 1;</code>
       */
      @java.lang.Override
      public org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement getPredictedElements(int index) {
        return instance.getPredictedElements(index);
      }
      /**
       * <pre>
       * If this is empty, the model inference did not find any results.
       * </pre>
       *
       * <code>repeated .autofill_assistant.ElementFinderInfoProto.PredictedElement predicted_elements = 1;</code>
       */
      public Builder setPredictedElements(
          int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement value) {
        copyOnWrite();
        instance.setPredictedElements(index, value);
        return this;
      }
      /**
       * <pre>
       * If this is empty, the model inference did not find any results.
       * </pre>
       *
       * <code>repeated .autofill_assistant.ElementFinderInfoProto.PredictedElement predicted_elements = 1;</code>
       */
      public Builder setPredictedElements(
          int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement.Builder builderForValue) {
        copyOnWrite();
        instance.setPredictedElements(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * If this is empty, the model inference did not find any results.
       * </pre>
       *
       * <code>repeated .autofill_assistant.ElementFinderInfoProto.PredictedElement predicted_elements = 1;</code>
       */
      public Builder addPredictedElements(org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement value) {
        copyOnWrite();
        instance.addPredictedElements(value);
        return this;
      }
      /**
       * <pre>
       * If this is empty, the model inference did not find any results.
       * </pre>
       *
       * <code>repeated .autofill_assistant.ElementFinderInfoProto.PredictedElement predicted_elements = 1;</code>
       */
      public Builder addPredictedElements(
          int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement value) {
        copyOnWrite();
        instance.addPredictedElements(index, value);
        return this;
      }
      /**
       * <pre>
       * If this is empty, the model inference did not find any results.
       * </pre>
       *
       * <code>repeated .autofill_assistant.ElementFinderInfoProto.PredictedElement predicted_elements = 1;</code>
       */
      public Builder addPredictedElements(
          org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement.Builder builderForValue) {
        copyOnWrite();
        instance.addPredictedElements(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * If this is empty, the model inference did not find any results.
       * </pre>
       *
       * <code>repeated .autofill_assistant.ElementFinderInfoProto.PredictedElement predicted_elements = 1;</code>
       */
      public Builder addPredictedElements(
          int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement.Builder builderForValue) {
        copyOnWrite();
        instance.addPredictedElements(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * If this is empty, the model inference did not find any results.
       * </pre>
       *
       * <code>repeated .autofill_assistant.ElementFinderInfoProto.PredictedElement predicted_elements = 1;</code>
       */
      public Builder addAllPredictedElements(
          java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement> values) {
        copyOnWrite();
        instance.addAllPredictedElements(values);
        return this;
      }
      /**
       * <pre>
       * If this is empty, the model inference did not find any results.
       * </pre>
       *
       * <code>repeated .autofill_assistant.ElementFinderInfoProto.PredictedElement predicted_elements = 1;</code>
       */
      public Builder clearPredictedElements() {
        copyOnWrite();
        instance.clearPredictedElements();
        return this;
      }
      /**
       * <pre>
       * If this is empty, the model inference did not find any results.
       * </pre>
       *
       * <code>repeated .autofill_assistant.ElementFinderInfoProto.PredictedElement predicted_elements = 1;</code>
       */
      public Builder removePredictedElements(int index) {
        copyOnWrite();
        instance.removePredictedElements(index);
        return this;
      }

      /**
       * <pre>
       * Status per frame. The order is not predictable, the results are
       * collected async and arrive in random order.
       * </pre>
       *
       * <code>repeated .autofill_assistant.ElementFinderInfoProto.SemanticInferenceStatus status_per_frame = 2;</code>
       * @return A list containing the statusPerFrame.
       */
      @java.lang.Override
      public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceStatus> getStatusPerFrameList() {
        return instance.getStatusPerFrameList();
      }
      /**
       * <pre>
       * Status per frame. The order is not predictable, the results are
       * collected async and arrive in random order.
       * </pre>
       *
       * <code>repeated .autofill_assistant.ElementFinderInfoProto.SemanticInferenceStatus status_per_frame = 2;</code>
       * @return The count of statusPerFrame.
       */
      @java.lang.Override
      public int getStatusPerFrameCount() {
        return instance.getStatusPerFrameCount();
      }
      /**
       * <pre>
       * Status per frame. The order is not predictable, the results are
       * collected async and arrive in random order.
       * </pre>
       *
       * <code>repeated .autofill_assistant.ElementFinderInfoProto.SemanticInferenceStatus status_per_frame = 2;</code>
       * @param index The index of the element to return.
       * @return The statusPerFrame at the given index.
       */
      @java.lang.Override
      public org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceStatus getStatusPerFrame(int index) {
        return instance.getStatusPerFrame(index);
      }
      /**
       * <pre>
       * Status per frame. The order is not predictable, the results are
       * collected async and arrive in random order.
       * </pre>
       *
       * <code>repeated .autofill_assistant.ElementFinderInfoProto.SemanticInferenceStatus status_per_frame = 2;</code>
       * @param index The index to set the value at.
       * @param value The statusPerFrame to set.
       * @return This builder for chaining.
       */
      public Builder setStatusPerFrame(
          int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceStatus value) {
        copyOnWrite();
        instance.setStatusPerFrame(index, value);
        return this;
      }
      /**
       * <pre>
       * Status per frame. The order is not predictable, the results are
       * collected async and arrive in random order.
       * </pre>
       *
       * <code>repeated .autofill_assistant.ElementFinderInfoProto.SemanticInferenceStatus status_per_frame = 2;</code>
       * @param value The statusPerFrame to add.
       * @return This builder for chaining.
       */
      public Builder addStatusPerFrame(org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceStatus value) {
        copyOnWrite();
        instance.addStatusPerFrame(value);
        return this;
      }
      /**
       * <pre>
       * Status per frame. The order is not predictable, the results are
       * collected async and arrive in random order.
       * </pre>
       *
       * <code>repeated .autofill_assistant.ElementFinderInfoProto.SemanticInferenceStatus status_per_frame = 2;</code>
       * @param values The statusPerFrame to add.
       * @return This builder for chaining.
       */
      public Builder addAllStatusPerFrame(
          java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceStatus> values) {
        copyOnWrite();
        instance.addAllStatusPerFrame(values);  return this;
      }
      /**
       * <pre>
       * Status per frame. The order is not predictable, the results are
       * collected async and arrive in random order.
       * </pre>
       *
       * <code>repeated .autofill_assistant.ElementFinderInfoProto.SemanticInferenceStatus status_per_frame = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatusPerFrame() {
        copyOnWrite();
        instance.clearStatusPerFrame();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:autofill_assistant.ElementFinderInfoProto.SemanticInferenceResult)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "predictedElements_",
              org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.PredictedElement.class,
              "statusPerFrame_",
              org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceStatus.internalGetVerifier(),
            };
            java.lang.String info =
                "\u0001\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0002\u0000\u0001\u001b\u0002\u001e" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:autofill_assistant.ElementFinderInfoProto.SemanticInferenceResult)
    private static final org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult DEFAULT_INSTANCE;
    static {
      SemanticInferenceResult defaultInstance = new SemanticInferenceResult();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SemanticInferenceResult.class, defaultInstance);
    }

    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SemanticInferenceResult> PARSER;

    public static com.google.protobuf.Parser<SemanticInferenceResult> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  private int bitField0_;
  public static final int TRACKING_ID_FIELD_NUMBER = 1;
  private long trackingId_;
  /**
   * <pre>
   * Tracking ID of the |Selector|.
   * </pre>
   *
   * <code>optional int64 tracking_id = 1;</code>
   * @return Whether the trackingId field is set.
   */
  @java.lang.Override
  public boolean hasTrackingId() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Tracking ID of the |Selector|.
   * </pre>
   *
   * <code>optional int64 tracking_id = 1;</code>
   * @return The trackingId.
   */
  @java.lang.Override
  public long getTrackingId() {
    return trackingId_;
  }
  /**
   * <pre>
   * Tracking ID of the |Selector|.
   * </pre>
   *
   * <code>optional int64 tracking_id = 1;</code>
   * @param value The trackingId to set.
   */
  private void setTrackingId(long value) {
    bitField0_ |= 0x00000001;
    trackingId_ = value;
  }
  /**
   * <pre>
   * Tracking ID of the |Selector|.
   * </pre>
   *
   * <code>optional int64 tracking_id = 1;</code>
   */
  private void clearTrackingId() {
    bitField0_ = (bitField0_ & ~0x00000001);
    trackingId_ = 0L;
  }

  public static final int FAILED_FILTER_INDEX_RANGE_START_FIELD_NUMBER = 2;
  private int failedFilterIndexRangeStart_;
  /**
   * <pre>
   * If the Selector fails to be resolved, this index holds the starting index
   * of filters currently being applied.
   * </pre>
   *
   * <code>optional int32 failed_filter_index_range_start = 2;</code>
   * @return Whether the failedFilterIndexRangeStart field is set.
   */
  @java.lang.Override
  public boolean hasFailedFilterIndexRangeStart() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * If the Selector fails to be resolved, this index holds the starting index
   * of filters currently being applied.
   * </pre>
   *
   * <code>optional int32 failed_filter_index_range_start = 2;</code>
   * @return The failedFilterIndexRangeStart.
   */
  @java.lang.Override
  public int getFailedFilterIndexRangeStart() {
    return failedFilterIndexRangeStart_;
  }
  /**
   * <pre>
   * If the Selector fails to be resolved, this index holds the starting index
   * of filters currently being applied.
   * </pre>
   *
   * <code>optional int32 failed_filter_index_range_start = 2;</code>
   * @param value The failedFilterIndexRangeStart to set.
   */
  private void setFailedFilterIndexRangeStart(int value) {
    bitField0_ |= 0x00000002;
    failedFilterIndexRangeStart_ = value;
  }
  /**
   * <pre>
   * If the Selector fails to be resolved, this index holds the starting index
   * of filters currently being applied.
   * </pre>
   *
   * <code>optional int32 failed_filter_index_range_start = 2;</code>
   */
  private void clearFailedFilterIndexRangeStart() {
    bitField0_ = (bitField0_ & ~0x00000002);
    failedFilterIndexRangeStart_ = 0;
  }

  public static final int FAILED_FILTER_INDEX_RANGE_END_FIELD_NUMBER = 3;
  private int failedFilterIndexRangeEnd_;
  /**
   * <pre>
   * If a filter failed, this index holds the filter that was supposed to be
   * applied next.
   * </pre>
   *
   * <code>optional int32 failed_filter_index_range_end = 3;</code>
   * @return Whether the failedFilterIndexRangeEnd field is set.
   */
  @java.lang.Override
  public boolean hasFailedFilterIndexRangeEnd() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * If a filter failed, this index holds the filter that was supposed to be
   * applied next.
   * </pre>
   *
   * <code>optional int32 failed_filter_index_range_end = 3;</code>
   * @return The failedFilterIndexRangeEnd.
   */
  @java.lang.Override
  public int getFailedFilterIndexRangeEnd() {
    return failedFilterIndexRangeEnd_;
  }
  /**
   * <pre>
   * If a filter failed, this index holds the filter that was supposed to be
   * applied next.
   * </pre>
   *
   * <code>optional int32 failed_filter_index_range_end = 3;</code>
   * @param value The failedFilterIndexRangeEnd to set.
   */
  private void setFailedFilterIndexRangeEnd(int value) {
    bitField0_ |= 0x00000004;
    failedFilterIndexRangeEnd_ = value;
  }
  /**
   * <pre>
   * If a filter failed, this index holds the filter that was supposed to be
   * applied next.
   * </pre>
   *
   * <code>optional int32 failed_filter_index_range_end = 3;</code>
   */
  private void clearFailedFilterIndexRangeEnd() {
    bitField0_ = (bitField0_ & ~0x00000004);
    failedFilterIndexRangeEnd_ = 0;
  }

  public static final int STATUS_FIELD_NUMBER = 4;
  private int status_;
  /**
   * <pre>
   * The original status of |ElementFinder|.
   * </pre>
   *
   * <code>optional .autofill_assistant.ProcessedActionStatusProto status = 4;</code>
   * @return Whether the status field is set.
   */
  @java.lang.Override
  public boolean hasStatus() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * The original status of |ElementFinder|.
   * </pre>
   *
   * <code>optional .autofill_assistant.ProcessedActionStatusProto status = 4;</code>
   * @return The status.
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.ProcessedActionStatusProto getStatus() {
    org.chromium.chrome.browser.autofill_assistant.proto.ProcessedActionStatusProto result = org.chromium.chrome.browser.autofill_assistant.proto.ProcessedActionStatusProto.forNumber(status_);
    return result == null ? org.chromium.chrome.browser.autofill_assistant.proto.ProcessedActionStatusProto.UNKNOWN_ACTION_STATUS : result;
  }
  /**
   * <pre>
   * The original status of |ElementFinder|.
   * </pre>
   *
   * <code>optional .autofill_assistant.ProcessedActionStatusProto status = 4;</code>
   * @param value The status to set.
   */
  private void setStatus(org.chromium.chrome.browser.autofill_assistant.proto.ProcessedActionStatusProto value) {
    status_ = value.getNumber();
    bitField0_ |= 0x00000008;
  }
  /**
   * <pre>
   * The original status of |ElementFinder|.
   * </pre>
   *
   * <code>optional .autofill_assistant.ProcessedActionStatusProto status = 4;</code>
   */
  private void clearStatus() {
    bitField0_ = (bitField0_ & ~0x00000008);
    status_ = 0;
  }

  public static final int GET_DOCUMENT_FAILED_FIELD_NUMBER = 5;
  private boolean getDocumentFailed_;
  /**
   * <pre>
   * If set, the document could not be resolved.
   * </pre>
   *
   * <code>optional bool get_document_failed = 5;</code>
   * @return Whether the getDocumentFailed field is set.
   */
  @java.lang.Override
  public boolean hasGetDocumentFailed() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * If set, the document could not be resolved.
   * </pre>
   *
   * <code>optional bool get_document_failed = 5;</code>
   * @return The getDocumentFailed.
   */
  @java.lang.Override
  public boolean getGetDocumentFailed() {
    return getDocumentFailed_;
  }
  /**
   * <pre>
   * If set, the document could not be resolved.
   * </pre>
   *
   * <code>optional bool get_document_failed = 5;</code>
   * @param value The getDocumentFailed to set.
   */
  private void setGetDocumentFailed(boolean value) {
    bitField0_ |= 0x00000010;
    getDocumentFailed_ = value;
  }
  /**
   * <pre>
   * If set, the document could not be resolved.
   * </pre>
   *
   * <code>optional bool get_document_failed = 5;</code>
   */
  private void clearGetDocumentFailed() {
    bitField0_ = (bitField0_ & ~0x00000010);
    getDocumentFailed_ = false;
  }

  public static final int SEMANTIC_INFERENCE_RESULT_FIELD_NUMBER = 6;
  private org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult semanticInferenceResult_;
  /**
   * <code>optional .autofill_assistant.ElementFinderInfoProto.SemanticInferenceResult semantic_inference_result = 6;</code>
   */
  @java.lang.Override
  public boolean hasSemanticInferenceResult() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <code>optional .autofill_assistant.ElementFinderInfoProto.SemanticInferenceResult semantic_inference_result = 6;</code>
   */
  @java.lang.Override
  public org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult getSemanticInferenceResult() {
    return semanticInferenceResult_ == null ? org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult.getDefaultInstance() : semanticInferenceResult_;
  }
  /**
   * <code>optional .autofill_assistant.ElementFinderInfoProto.SemanticInferenceResult semantic_inference_result = 6;</code>
   */
  private void setSemanticInferenceResult(org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult value) {
    value.getClass();
  semanticInferenceResult_ = value;
    bitField0_ |= 0x00000020;
    }
  /**
   * <code>optional .autofill_assistant.ElementFinderInfoProto.SemanticInferenceResult semantic_inference_result = 6;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeSemanticInferenceResult(org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult value) {
    value.getClass();
  if (semanticInferenceResult_ != null &&
        semanticInferenceResult_ != org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult.getDefaultInstance()) {
      semanticInferenceResult_ =
        org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult.newBuilder(semanticInferenceResult_).mergeFrom(value).buildPartial();
    } else {
      semanticInferenceResult_ = value;
    }
    bitField0_ |= 0x00000020;
  }
  /**
   * <code>optional .autofill_assistant.ElementFinderInfoProto.SemanticInferenceResult semantic_inference_result = 6;</code>
   */
  private void clearSemanticInferenceResult() {  semanticInferenceResult_ = null;
    bitField0_ = (bitField0_ & ~0x00000020);
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code autofill_assistant.ElementFinderInfoProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.ElementFinderInfoProto)
      org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Tracking ID of the |Selector|.
     * </pre>
     *
     * <code>optional int64 tracking_id = 1;</code>
     * @return Whether the trackingId field is set.
     */
    @java.lang.Override
    public boolean hasTrackingId() {
      return instance.hasTrackingId();
    }
    /**
     * <pre>
     * Tracking ID of the |Selector|.
     * </pre>
     *
     * <code>optional int64 tracking_id = 1;</code>
     * @return The trackingId.
     */
    @java.lang.Override
    public long getTrackingId() {
      return instance.getTrackingId();
    }
    /**
     * <pre>
     * Tracking ID of the |Selector|.
     * </pre>
     *
     * <code>optional int64 tracking_id = 1;</code>
     * @param value The trackingId to set.
     * @return This builder for chaining.
     */
    public Builder setTrackingId(long value) {
      copyOnWrite();
      instance.setTrackingId(value);
      return this;
    }
    /**
     * <pre>
     * Tracking ID of the |Selector|.
     * </pre>
     *
     * <code>optional int64 tracking_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTrackingId() {
      copyOnWrite();
      instance.clearTrackingId();
      return this;
    }

    /**
     * <pre>
     * If the Selector fails to be resolved, this index holds the starting index
     * of filters currently being applied.
     * </pre>
     *
     * <code>optional int32 failed_filter_index_range_start = 2;</code>
     * @return Whether the failedFilterIndexRangeStart field is set.
     */
    @java.lang.Override
    public boolean hasFailedFilterIndexRangeStart() {
      return instance.hasFailedFilterIndexRangeStart();
    }
    /**
     * <pre>
     * If the Selector fails to be resolved, this index holds the starting index
     * of filters currently being applied.
     * </pre>
     *
     * <code>optional int32 failed_filter_index_range_start = 2;</code>
     * @return The failedFilterIndexRangeStart.
     */
    @java.lang.Override
    public int getFailedFilterIndexRangeStart() {
      return instance.getFailedFilterIndexRangeStart();
    }
    /**
     * <pre>
     * If the Selector fails to be resolved, this index holds the starting index
     * of filters currently being applied.
     * </pre>
     *
     * <code>optional int32 failed_filter_index_range_start = 2;</code>
     * @param value The failedFilterIndexRangeStart to set.
     * @return This builder for chaining.
     */
    public Builder setFailedFilterIndexRangeStart(int value) {
      copyOnWrite();
      instance.setFailedFilterIndexRangeStart(value);
      return this;
    }
    /**
     * <pre>
     * If the Selector fails to be resolved, this index holds the starting index
     * of filters currently being applied.
     * </pre>
     *
     * <code>optional int32 failed_filter_index_range_start = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearFailedFilterIndexRangeStart() {
      copyOnWrite();
      instance.clearFailedFilterIndexRangeStart();
      return this;
    }

    /**
     * <pre>
     * If a filter failed, this index holds the filter that was supposed to be
     * applied next.
     * </pre>
     *
     * <code>optional int32 failed_filter_index_range_end = 3;</code>
     * @return Whether the failedFilterIndexRangeEnd field is set.
     */
    @java.lang.Override
    public boolean hasFailedFilterIndexRangeEnd() {
      return instance.hasFailedFilterIndexRangeEnd();
    }
    /**
     * <pre>
     * If a filter failed, this index holds the filter that was supposed to be
     * applied next.
     * </pre>
     *
     * <code>optional int32 failed_filter_index_range_end = 3;</code>
     * @return The failedFilterIndexRangeEnd.
     */
    @java.lang.Override
    public int getFailedFilterIndexRangeEnd() {
      return instance.getFailedFilterIndexRangeEnd();
    }
    /**
     * <pre>
     * If a filter failed, this index holds the filter that was supposed to be
     * applied next.
     * </pre>
     *
     * <code>optional int32 failed_filter_index_range_end = 3;</code>
     * @param value The failedFilterIndexRangeEnd to set.
     * @return This builder for chaining.
     */
    public Builder setFailedFilterIndexRangeEnd(int value) {
      copyOnWrite();
      instance.setFailedFilterIndexRangeEnd(value);
      return this;
    }
    /**
     * <pre>
     * If a filter failed, this index holds the filter that was supposed to be
     * applied next.
     * </pre>
     *
     * <code>optional int32 failed_filter_index_range_end = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearFailedFilterIndexRangeEnd() {
      copyOnWrite();
      instance.clearFailedFilterIndexRangeEnd();
      return this;
    }

    /**
     * <pre>
     * The original status of |ElementFinder|.
     * </pre>
     *
     * <code>optional .autofill_assistant.ProcessedActionStatusProto status = 4;</code>
     * @return Whether the status field is set.
     */
    @java.lang.Override
    public boolean hasStatus() {
      return instance.hasStatus();
    }
    /**
     * <pre>
     * The original status of |ElementFinder|.
     * </pre>
     *
     * <code>optional .autofill_assistant.ProcessedActionStatusProto status = 4;</code>
     * @return The status.
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.ProcessedActionStatusProto getStatus() {
      return instance.getStatus();
    }
    /**
     * <pre>
     * The original status of |ElementFinder|.
     * </pre>
     *
     * <code>optional .autofill_assistant.ProcessedActionStatusProto status = 4;</code>
     * @param value The enum numeric value on the wire for status to set.
     * @return This builder for chaining.
     */
    public Builder setStatus(org.chromium.chrome.browser.autofill_assistant.proto.ProcessedActionStatusProto value) {
      copyOnWrite();
      instance.setStatus(value);
      return this;
    }
    /**
     * <pre>
     * The original status of |ElementFinder|.
     * </pre>
     *
     * <code>optional .autofill_assistant.ProcessedActionStatusProto status = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearStatus() {
      copyOnWrite();
      instance.clearStatus();
      return this;
    }

    /**
     * <pre>
     * If set, the document could not be resolved.
     * </pre>
     *
     * <code>optional bool get_document_failed = 5;</code>
     * @return Whether the getDocumentFailed field is set.
     */
    @java.lang.Override
    public boolean hasGetDocumentFailed() {
      return instance.hasGetDocumentFailed();
    }
    /**
     * <pre>
     * If set, the document could not be resolved.
     * </pre>
     *
     * <code>optional bool get_document_failed = 5;</code>
     * @return The getDocumentFailed.
     */
    @java.lang.Override
    public boolean getGetDocumentFailed() {
      return instance.getGetDocumentFailed();
    }
    /**
     * <pre>
     * If set, the document could not be resolved.
     * </pre>
     *
     * <code>optional bool get_document_failed = 5;</code>
     * @param value The getDocumentFailed to set.
     * @return This builder for chaining.
     */
    public Builder setGetDocumentFailed(boolean value) {
      copyOnWrite();
      instance.setGetDocumentFailed(value);
      return this;
    }
    /**
     * <pre>
     * If set, the document could not be resolved.
     * </pre>
     *
     * <code>optional bool get_document_failed = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearGetDocumentFailed() {
      copyOnWrite();
      instance.clearGetDocumentFailed();
      return this;
    }

    /**
     * <code>optional .autofill_assistant.ElementFinderInfoProto.SemanticInferenceResult semantic_inference_result = 6;</code>
     */
    @java.lang.Override
    public boolean hasSemanticInferenceResult() {
      return instance.hasSemanticInferenceResult();
    }
    /**
     * <code>optional .autofill_assistant.ElementFinderInfoProto.SemanticInferenceResult semantic_inference_result = 6;</code>
     */
    @java.lang.Override
    public org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult getSemanticInferenceResult() {
      return instance.getSemanticInferenceResult();
    }
    /**
     * <code>optional .autofill_assistant.ElementFinderInfoProto.SemanticInferenceResult semantic_inference_result = 6;</code>
     */
    public Builder setSemanticInferenceResult(org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult value) {
      copyOnWrite();
      instance.setSemanticInferenceResult(value);
      return this;
      }
    /**
     * <code>optional .autofill_assistant.ElementFinderInfoProto.SemanticInferenceResult semantic_inference_result = 6;</code>
     */
    public Builder setSemanticInferenceResult(
        org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult.Builder builderForValue) {
      copyOnWrite();
      instance.setSemanticInferenceResult(builderForValue.build());
      return this;
    }
    /**
     * <code>optional .autofill_assistant.ElementFinderInfoProto.SemanticInferenceResult semantic_inference_result = 6;</code>
     */
    public Builder mergeSemanticInferenceResult(org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.SemanticInferenceResult value) {
      copyOnWrite();
      instance.mergeSemanticInferenceResult(value);
      return this;
    }
    /**
     * <code>optional .autofill_assistant.ElementFinderInfoProto.SemanticInferenceResult semantic_inference_result = 6;</code>
     */
    public Builder clearSemanticInferenceResult() {  copyOnWrite();
      instance.clearSemanticInferenceResult();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.ElementFinderInfoProto)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "trackingId_",
            "failedFilterIndexRangeStart_",
            "failedFilterIndexRangeEnd_",
            "status_",
            org.chromium.chrome.browser.autofill_assistant.proto.ProcessedActionStatusProto.internalGetVerifier(),
            "getDocumentFailed_",
            "semanticInferenceResult_",
          };
          java.lang.String info =
              "\u0001\u0006\u0000\u0001\u0001\u0006\u0006\u0000\u0000\u0000\u0001\u1002\u0000\u0002" +
              "\u1004\u0001\u0003\u1004\u0002\u0004\u100c\u0003\u0005\u1007\u0004\u0006\u1009\u0005" +
              "";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.ElementFinderInfoProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto DEFAULT_INSTANCE;
  static {
    ElementFinderInfoProto defaultInstance = new ElementFinderInfoProto();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      ElementFinderInfoProto.class, defaultInstance);
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementFinderInfoProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ElementFinderInfoProto> PARSER;

  public static com.google.protobuf.Parser<ElementFinderInfoProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

