// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/autofill_assistant/browser/public/external_action.proto

package org.chromium.chrome.browser.autofill_assistant.external.proto;

public interface ResultOrBuilder extends
    // @@protoc_insertion_point(interface_extends:autofill_assistant.external.Result)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * Integrator-specific information. This will be forwarded to the backend
   * without modification.
   * </pre>
   *
   * <code>optional .autofill_assistant.external.ResultInfo result_info = 1;</code>
   * @return Whether the resultInfo field is set.
   */
  boolean hasResultInfo();
  /**
   * <pre>
   * Integrator-specific information. This will be forwarded to the backend
   * without modification.
   * </pre>
   *
   * <code>optional .autofill_assistant.external.ResultInfo result_info = 1;</code>
   * @return The resultInfo.
   */
  org.chromium.chrome.browser.autofill_assistant.external.proto.ResultInfo getResultInfo();

  /**
   * <pre>
   * Whether the action was successful.
   * </pre>
   *
   * <code>optional bool success = 2;</code>
   * @return Whether the success field is set.
   */
  boolean hasSuccess();
  /**
   * <pre>
   * Whether the action was successful.
   * </pre>
   *
   * <code>optional bool success = 2;</code>
   * @return The success.
   */
  boolean getSuccess();

  /**
   * <pre>
   * Profiles selected by the user, where the key is the client address
   * identifier - sometimes referred to as profile name. The key is a
   * compile-time constant; e.g. "SHIPPING" with the mapped value being the
   * shipping address selected by the user. It needs to be in sync with Autofill
   * Assistant's server version.
   * </pre>
   *
   * <code>map&lt;string, .autofill_assistant.external.ProfileProto&gt; selected_profiles = 3;</code>
   */
  int getSelectedProfilesCount();
  /**
   * <pre>
   * Profiles selected by the user, where the key is the client address
   * identifier - sometimes referred to as profile name. The key is a
   * compile-time constant; e.g. "SHIPPING" with the mapped value being the
   * shipping address selected by the user. It needs to be in sync with Autofill
   * Assistant's server version.
   * </pre>
   *
   * <code>map&lt;string, .autofill_assistant.external.ProfileProto&gt; selected_profiles = 3;</code>
   */
  boolean containsSelectedProfiles(
      java.lang.String key);
  /**
   * Use {@link #getSelectedProfilesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, org.chromium.chrome.browser.autofill_assistant.external.proto.ProfileProto>
  getSelectedProfiles();
  /**
   * <pre>
   * Profiles selected by the user, where the key is the client address
   * identifier - sometimes referred to as profile name. The key is a
   * compile-time constant; e.g. "SHIPPING" with the mapped value being the
   * shipping address selected by the user. It needs to be in sync with Autofill
   * Assistant's server version.
   * </pre>
   *
   * <code>map&lt;string, .autofill_assistant.external.ProfileProto&gt; selected_profiles = 3;</code>
   */
  java.util.Map<java.lang.String, org.chromium.chrome.browser.autofill_assistant.external.proto.ProfileProto>
  getSelectedProfilesMap();
  /**
   * <pre>
   * Profiles selected by the user, where the key is the client address
   * identifier - sometimes referred to as profile name. The key is a
   * compile-time constant; e.g. "SHIPPING" with the mapped value being the
   * shipping address selected by the user. It needs to be in sync with Autofill
   * Assistant's server version.
   * </pre>
   *
   * <code>map&lt;string, .autofill_assistant.external.ProfileProto&gt; selected_profiles = 3;</code>
   */

  org.chromium.chrome.browser.autofill_assistant.external.proto.ProfileProto getSelectedProfilesOrDefault(
      java.lang.String key,
      org.chromium.chrome.browser.autofill_assistant.external.proto.ProfileProto defaultValue);
  /**
   * <pre>
   * Profiles selected by the user, where the key is the client address
   * identifier - sometimes referred to as profile name. The key is a
   * compile-time constant; e.g. "SHIPPING" with the mapped value being the
   * shipping address selected by the user. It needs to be in sync with Autofill
   * Assistant's server version.
   * </pre>
   *
   * <code>map&lt;string, .autofill_assistant.external.ProfileProto&gt; selected_profiles = 3;</code>
   */

  org.chromium.chrome.browser.autofill_assistant.external.proto.ProfileProto getSelectedProfilesOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Credit card selected by the user.
   * </pre>
   *
   * <code>optional .autofill_assistant.external.CreditCardProto selected_credit_card = 4;</code>
   * @return Whether the selectedCreditCard field is set.
   */
  boolean hasSelectedCreditCard();
  /**
   * <pre>
   * Credit card selected by the user.
   * </pre>
   *
   * <code>optional .autofill_assistant.external.CreditCardProto selected_credit_card = 4;</code>
   * @return The selectedCreditCard.
   */
  org.chromium.chrome.browser.autofill_assistant.external.proto.CreditCardProto getSelectedCreditCard();
}
