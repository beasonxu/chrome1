// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/autofill_assistant/AutofillAssistantClient

#ifndef org_chromium_components_autofill_assistant_AutofillAssistantClient_JNI
#define org_chromium_components_autofill_assistant_AutofillAssistantClient_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_autofill_1assistant_AutofillAssistantClient[];
const char kClassPath_org_chromium_components_autofill_1assistant_AutofillAssistantClient[] =
    "org/chromium/components/autofill_assistant/AutofillAssistantClient";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz(nullptr);
#ifndef org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz_defined
#define org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz_defined
inline jclass org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz(JNIEnv* env)
    {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_autofill_1assistant_AutofillAssistantClient,
      "autofill_assistant",
      &g_org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace autofill_assistant {

static base::android::ScopedJavaLocalRef<jobject>
    JNI_AutofillAssistantClient_FromWebContents(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& webContents);

JNI_GENERATOR_EXPORT jobject Java_J_N_Mc0FWKQK(
    JNIEnv* env,
    jclass jcaller,
    jobject webContents) {
  return JNI_AutofillAssistantClient_FromWebContents(env, base::android::JavaParamRef<jobject>(env,
      webContents)).Release();
}

static base::android::ScopedJavaLocalRef<jobject>
    JNI_AutofillAssistantClient_CreateForWebContents(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& webContents,
    const base::android::JavaParamRef<jobject>& dependencies);

JNI_GENERATOR_EXPORT jobject Java_J_N_M11a5zdq(
    JNIEnv* env,
    jclass jcaller,
    jobject webContents,
    jobject dependencies) {
  return JNI_AutofillAssistantClient_CreateForWebContents(env,
      base::android::JavaParamRef<jobject>(env, webContents),
      base::android::JavaParamRef<jobject>(env, dependencies)).Release();
}

static void JNI_AutofillAssistantClient_OnOnboardingUiChange(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& webContents,
    jboolean shown);

JNI_GENERATOR_EXPORT void Java_J_N_MvxR10YD(
    JNIEnv* env,
    jclass jcaller,
    jobject webContents,
    jboolean shown) {
  return JNI_AutofillAssistantClient_OnOnboardingUiChange(env,
      base::android::JavaParamRef<jobject>(env, webContents), shown);
}

JNI_GENERATOR_EXPORT void Java_J_N_MsOm66l2(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeClientAndroid,
    jobject caller,
    jboolean success,
    jstring accessToken) {
  ClientAndroid* native = reinterpret_cast<ClientAndroid*>(nativeClientAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnAccessToken");
  return native->OnAccessToken(env, base::android::JavaParamRef<jobject>(env, caller), success,
      base::android::JavaParamRef<jstring>(env, accessToken));
}

JNI_GENERATOR_EXPORT void Java_J_N_MjfW_00024UUJ(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeClientAndroid,
    jobject caller,
    jbyteArray clientToken) {
  ClientAndroid* native = reinterpret_cast<ClientAndroid*>(nativeClientAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnPaymentsClientToken");
  return native->OnPaymentsClientToken(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jbyteArray>(env, clientToken));
}

JNI_GENERATOR_EXPORT jstring Java_J_N_MiMuMW7q(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeClientAndroid,
    jobject caller) {
  ClientAndroid* native = reinterpret_cast<ClientAndroid*>(nativeClientAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetPrimaryAccountName", NULL);
  return native->GetPrimaryAccountName(env, base::android::JavaParamRef<jobject>(env,
      caller)).Release();
}

JNI_GENERATOR_EXPORT void Java_J_N_MpOB02M7(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeClientAndroid,
    jobject caller) {
  ClientAndroid* native = reinterpret_cast<ClientAndroid*>(nativeClientAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnJavaDestroyUI");
  return native->OnJavaDestroyUI(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT void Java_J_N_MxVlpA6q(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeClientAndroid,
    jobject caller,
    jstring experimentIds,
    jobjectArray argumentNames,
    jobjectArray argumentValues,
    jobject callback) {
  ClientAndroid* native = reinterpret_cast<ClientAndroid*>(nativeClientAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "FetchWebsiteActions");
  return native->FetchWebsiteActions(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, experimentIds),
      base::android::JavaParamRef<jobjectArray>(env, argumentNames),
      base::android::JavaParamRef<jobjectArray>(env, argumentValues),
      base::android::JavaParamRef<jobject>(env, callback));
}

JNI_GENERATOR_EXPORT jboolean Java_J_N_MJJF8bQc(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeClientAndroid,
    jobject caller) {
  ClientAndroid* native = reinterpret_cast<ClientAndroid*>(nativeClientAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "HasRunFirstCheck", false);
  return native->HasRunFirstCheck(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT jobjectArray Java_J_N_MfNFjVah(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeClientAndroid,
    jobject caller) {
  ClientAndroid* native = reinterpret_cast<ClientAndroid*>(nativeClientAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetDirectActions", NULL);
  return native->GetDirectActions(env, base::android::JavaParamRef<jobject>(env, caller)).Release();
}

JNI_GENERATOR_EXPORT jboolean Java_J_N_MwdLZ_00024CW(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeClientAndroid,
    jobject caller,
    jstring actionId,
    jstring experimentId,
    jobjectArray argumentNames,
    jobjectArray argumentValues,
    jobject overlayCoordinator) {
  ClientAndroid* native = reinterpret_cast<ClientAndroid*>(nativeClientAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "PerformDirectAction", false);
  return native->PerformDirectAction(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, actionId), base::android::JavaParamRef<jstring>(env,
      experimentId), base::android::JavaParamRef<jobjectArray>(env, argumentNames),
      base::android::JavaParamRef<jobjectArray>(env, argumentValues),
      base::android::JavaParamRef<jobject>(env, overlayCoordinator));
}

JNI_GENERATOR_EXPORT void Java_J_N_MwdxQ4HO(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeClientAndroid,
    jobject caller) {
  ClientAndroid* native = reinterpret_cast<ClientAndroid*>(nativeClientAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "ShowFatalError");
  return native->ShowFatalError(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT jboolean Java_J_N_MTds_1H_00024_1(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeClientAndroid,
    jobject caller) {
  ClientAndroid* native = reinterpret_cast<ClientAndroid*>(nativeClientAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "IsSupervisedUser", false);
  return native->IsSupervisedUser(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT void Java_J_N_MgSDA5rV(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeClientAndroid,
    jobject caller,
    jboolean enabled) {
  ClientAndroid* native = reinterpret_cast<ClientAndroid*>(nativeClientAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnSpokenFeedbackAccessibilityServiceChanged");
  return native->OnSpokenFeedbackAccessibilityServiceChanged(env,
      base::android::JavaParamRef<jobject>(env, caller), enabled);
}

JNI_GENERATOR_EXPORT jobject Java_J_N_Mr95Yx4M(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeClientAndroid,
    jobject caller) {
  ClientAndroid* native = reinterpret_cast<ClientAndroid*>(nativeClientAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetDependencies", NULL);
  return native->GetDependencies(env, base::android::JavaParamRef<jobject>(env, caller)).Release();
}


static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantClient_Constructor(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_AutofillAssistantClient_Constructor(JNIEnv*
    env, jlong nativeClientAndroid,
    const base::android::JavaRef<jobject>& accessTokenUtil) {
  jclass clazz = org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "<init>",
          "(JLorg/chromium/components/autofill_assistant/AssistantAccessTokenUtil;)V",
          &g_org_chromium_components_autofill_1assistant_AutofillAssistantClient_Constructor);

  jobject ret =
      env->NewObject(clazz,
          call_context.base.method_id, nativeClientAndroid, accessTokenUtil.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantClient_chooseAccountAsyncIfNecessary(nullptr);
static void Java_AutofillAssistantClient_chooseAccountAsyncIfNecessary(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& userName) {
  jclass clazz = org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "chooseAccountAsyncIfNecessary",
          "(Ljava/lang/String;)V",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantClient_chooseAccountAsyncIfNecessary);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, userName.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantClient_fetchAccessToken(nullptr);
static void Java_AutofillAssistantClient_fetchAccessToken(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "fetchAccessToken",
          "()V",
          &g_org_chromium_components_autofill_1assistant_AutofillAssistantClient_fetchAccessToken);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantClient_invalidateAccessToken(nullptr);
static void Java_AutofillAssistantClient_invalidateAccessToken(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& accessToken) {
  jclass clazz = org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "invalidateAccessToken",
          "(Ljava/lang/String;)V",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantClient_invalidateAccessToken);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, accessToken.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantClient_getEmailAddressForAccessTokenAccount(nullptr);
static base::android::ScopedJavaLocalRef<jstring>
    Java_AutofillAssistantClient_getEmailAddressForAccessTokenAccount(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getEmailAddressForAccessTokenAccount",
          "()Ljava/lang/String;",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantClient_getEmailAddressForAccessTokenAccount);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantClient_fetchPaymentsClientToken(nullptr);
static void Java_AutofillAssistantClient_fetchPaymentsClientToken(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "fetchPaymentsClientToken",
          "()V",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantClient_fetchPaymentsClientToken);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantClient_getSdkInt(nullptr);
static jint Java_AutofillAssistantClient_getSdkInt(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getSdkInt",
          "()I",
          &g_org_chromium_components_autofill_1assistant_AutofillAssistantClient_getSdkInt);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantClient_getDeviceManufacturer(nullptr);
static base::android::ScopedJavaLocalRef<jstring>
    Java_AutofillAssistantClient_getDeviceManufacturer(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getDeviceManufacturer",
          "()Ljava/lang/String;",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantClient_getDeviceManufacturer);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantClient_getDeviceModel(nullptr);
static base::android::ScopedJavaLocalRef<jstring>
    Java_AutofillAssistantClient_getDeviceModel(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz = org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getDeviceModel",
          "()Ljava/lang/String;",
          &g_org_chromium_components_autofill_1assistant_AutofillAssistantClient_getDeviceModel);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantClient_isSpokenFeedbackAccessibilityServiceEnabled(nullptr);
static jboolean Java_AutofillAssistantClient_isSpokenFeedbackAccessibilityServiceEnabled(JNIEnv*
    env, const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "isSpokenFeedbackAccessibilityServiceEnabled",
          "()Z",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantClient_isSpokenFeedbackAccessibilityServiceEnabled);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantClient_onFetchWebsiteActions(nullptr);
static void Java_AutofillAssistantClient_onFetchWebsiteActions(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>& callback,
    jboolean success) {
  jclass clazz = org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onFetchWebsiteActions",
          "(Lorg/chromium/base/Callback;Z)V",
&g_org_chromium_components_autofill_1assistant_AutofillAssistantClient_onFetchWebsiteActions);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, callback.obj(), success);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AutofillAssistantClient_clearNativePtr(nullptr);
static void Java_AutofillAssistantClient_clearNativePtr(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AutofillAssistantClient_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "clearNativePtr",
          "()V",
          &g_org_chromium_components_autofill_1assistant_AutofillAssistantClient_clearNativePtr);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

}  // namespace autofill_assistant

#endif  // org_chromium_components_autofill_assistant_AutofillAssistantClient_JNI
