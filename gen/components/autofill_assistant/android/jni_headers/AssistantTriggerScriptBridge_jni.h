// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/autofill_assistant/trigger_scripts/AssistantTriggerScriptBridge

#ifndef org_chromium_components_autofill_assistant_trigger_scripts_AssistantTriggerScriptBridge_JNI
#define org_chromium_components_autofill_assistant_trigger_scripts_AssistantTriggerScriptBridge_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge[];
const char
    kClassPath_org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge[]
    = "org/chromium/components/autofill_assistant/trigger_scripts/AssistantTriggerScriptBridge";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_clazz(nullptr);
#ifndef org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_clazz_defined
#define org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_clazz_defined
inline jclass
    org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge,
      "autofill_assistant",
      &g_org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace autofill_assistant {

JNI_GENERATOR_EXPORT void Java_J_N_MW_1B2DK7(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeTriggerScriptBridgeAndroid,
    jobject caller,
    jint action) {
  TriggerScriptBridgeAndroid* native =
      reinterpret_cast<TriggerScriptBridgeAndroid*>(nativeTriggerScriptBridgeAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnTriggerScriptAction");
  return native->OnTriggerScriptAction(env, base::android::JavaParamRef<jobject>(env, caller),
      action);
}

JNI_GENERATOR_EXPORT void Java_J_N_MNaYdw_00024D(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeTriggerScriptBridgeAndroid,
    jobject caller) {
  TriggerScriptBridgeAndroid* native =
      reinterpret_cast<TriggerScriptBridgeAndroid*>(nativeTriggerScriptBridgeAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnBottomSheetClosedWithSwipe");
  return native->OnBottomSheetClosedWithSwipe(env, base::android::JavaParamRef<jobject>(env,
      caller));
}

JNI_GENERATOR_EXPORT jboolean Java_J_N_Mb4eOWbp(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeTriggerScriptBridgeAndroid,
    jobject caller) {
  TriggerScriptBridgeAndroid* native =
      reinterpret_cast<TriggerScriptBridgeAndroid*>(nativeTriggerScriptBridgeAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnBackButtonPressed", false);
  return native->OnBackButtonPressed(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT void Java_J_N_MCTxE2k9(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeTriggerScriptBridgeAndroid,
    jobject caller,
    jboolean visible) {
  TriggerScriptBridgeAndroid* native =
      reinterpret_cast<TriggerScriptBridgeAndroid*>(nativeTriggerScriptBridgeAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnKeyboardVisibilityChanged");
  return native->OnKeyboardVisibilityChanged(env, base::android::JavaParamRef<jobject>(env, caller),
      visible);
}


static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_Constructor(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_AssistantTriggerScriptBridge_Constructor(JNIEnv* env, const
    base::android::JavaRef<jobject>& webContents,
    const base::android::JavaRef<jobject>& dependencies) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "<init>",
"(Lorg/chromium/content_public/browser/WebContents;Lorg/chromium/components/autofill_assistant/AssistantDependencies;)V",
&g_org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_Constructor);

  jobject ret =
      env->NewObject(clazz,
          call_context.base.method_id, webContents.obj(), dependencies.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_createHeaderAndGetModel(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_AssistantTriggerScriptBridge_createHeaderAndGetModel(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "createHeaderAndGetModel",
          "()Lorg/chromium/components/autofill_assistant/header/AssistantHeaderModel;",
&g_org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_createHeaderAndGetModel);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_getContext(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_AssistantTriggerScriptBridge_getContext(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getContext",
          "()Landroid/content/Context;",
&g_org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_getContext);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_showTriggerScript(nullptr);
static jboolean Java_AssistantTriggerScriptBridge_showTriggerScript(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobjectArray>&
    cancelPopupMenuItems,
    const base::android::JavaRef<jintArray>& cancelPopupMenuActions,
    const base::android::JavaRef<jobject>& leftAlignedChips,
    const base::android::JavaRef<jintArray>& leftAlignedChipsActions,
    const base::android::JavaRef<jobject>& rightAlignedChips,
    const base::android::JavaRef<jintArray>& rightAlignedChipsActions,
    jboolean resizeVisualViewport,
    jboolean scrollToHide) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_clazz(env),
          false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "showTriggerScript",
          "([Ljava/lang/String;[ILjava/util/List;[ILjava/util/List;[IZZ)Z",
&g_org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_showTriggerScript);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id, cancelPopupMenuItems.obj(), cancelPopupMenuActions.obj(),
              leftAlignedChips.obj(), leftAlignedChipsActions.obj(), rightAlignedChips.obj(),
              rightAlignedChipsActions.obj(), resizeVisualViewport, scrollToHide);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_hideTriggerScript(nullptr);
static void Java_AssistantTriggerScriptBridge_hideTriggerScript(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "hideTriggerScript",
          "()V",
&g_org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_hideTriggerScript);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_setNativePtr(nullptr);
static void Java_AssistantTriggerScriptBridge_setNativePtr(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, jlong nativePtr) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setNativePtr",
          "(J)V",
&g_org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_setNativePtr);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, nativePtr);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_clearNativePtr(nullptr);
static void Java_AssistantTriggerScriptBridge_clearNativePtr(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "clearNativePtr",
          "()V",
&g_org_chromium_components_autofill_1assistant_trigger_1scripts_AssistantTriggerScriptBridge_clearNativePtr);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

}  // namespace autofill_assistant

#endif  // org_chromium_components_autofill_assistant_trigger_scripts_AssistantTriggerScriptBridge_JNI
