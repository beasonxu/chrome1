// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/autofill_assistant/AssistantStaticDependencies

#ifndef org_chromium_components_autofill_assistant_AssistantStaticDependencies_JNI
#define org_chromium_components_autofill_assistant_AssistantStaticDependencies_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_autofill_1assistant_AssistantStaticDependencies[];
const char kClassPath_org_chromium_components_autofill_1assistant_AssistantStaticDependencies[] =
    "org/chromium/components/autofill_assistant/AssistantStaticDependencies";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_autofill_1assistant_AssistantStaticDependencies_clazz(nullptr);
#ifndef org_chromium_components_autofill_1assistant_AssistantStaticDependencies_clazz_defined
#define org_chromium_components_autofill_1assistant_AssistantStaticDependencies_clazz_defined
inline jclass org_chromium_components_autofill_1assistant_AssistantStaticDependencies_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_autofill_1assistant_AssistantStaticDependencies,
      &g_org_chromium_components_autofill_1assistant_AssistantStaticDependencies_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace autofill_assistant {


static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AssistantStaticDependencies_createNative(nullptr);
static jlong Java_AssistantStaticDependencies_createNative(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_autofill_1assistant_AssistantStaticDependencies_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AssistantStaticDependencies_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "createNative",
          "()J",
          &g_org_chromium_components_autofill_1assistant_AssistantStaticDependencies_createNative);

  jlong ret =
      env->CallLongMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AssistantStaticDependencies_isAccessibilityEnabled(nullptr);
static jboolean Java_AssistantStaticDependencies_isAccessibilityEnabled(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_autofill_1assistant_AssistantStaticDependencies_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AssistantStaticDependencies_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "isAccessibilityEnabled",
          "()Z",
&g_org_chromium_components_autofill_1assistant_AssistantStaticDependencies_isAccessibilityEnabled);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AssistantStaticDependencies_createInfoPageUtil(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_AssistantStaticDependencies_createInfoPageUtil(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_autofill_1assistant_AssistantStaticDependencies_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AssistantStaticDependencies_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "createInfoPageUtil",
          "()Lorg/chromium/components/autofill_assistant/AssistantInfoPageUtil;",
&g_org_chromium_components_autofill_1assistant_AssistantStaticDependencies_createInfoPageUtil);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AssistantStaticDependencies_createAccessTokenUtil(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_AssistantStaticDependencies_createAccessTokenUtil(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_autofill_1assistant_AssistantStaticDependencies_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AssistantStaticDependencies_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "createAccessTokenUtil",
          "()Lorg/chromium/components/autofill_assistant/AssistantAccessTokenUtil;",
&g_org_chromium_components_autofill_1assistant_AssistantStaticDependencies_createAccessTokenUtil);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AssistantStaticDependencies_createImageFetcher(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_AssistantStaticDependencies_createImageFetcher(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_autofill_1assistant_AssistantStaticDependencies_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AssistantStaticDependencies_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "createImageFetcher",
          "()Lorg/chromium/components/image_fetcher/ImageFetcher;",
&g_org_chromium_components_autofill_1assistant_AssistantStaticDependencies_createImageFetcher);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_1assistant_AssistantStaticDependencies_createIconBridge(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_AssistantStaticDependencies_createIconBridge(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_autofill_1assistant_AssistantStaticDependencies_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_1assistant_AssistantStaticDependencies_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "createIconBridge",
          "()Lorg/chromium/components/favicon/LargeIconBridge;",
&g_org_chromium_components_autofill_1assistant_AssistantStaticDependencies_createIconBridge);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

}  // namespace autofill_assistant

#endif  // org_chromium_components_autofill_assistant_AssistantStaticDependencies_JNI
