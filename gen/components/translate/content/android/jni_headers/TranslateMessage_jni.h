// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/translate/TranslateMessage

#ifndef org_chromium_components_translate_TranslateMessage_JNI
#define org_chromium_components_translate_TranslateMessage_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_translate_TranslateMessage[];
const char kClassPath_org_chromium_components_translate_TranslateMessage[] =
    "org/chromium/components/translate/TranslateMessage";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_translate_TranslateMessage_clazz(nullptr);
#ifndef org_chromium_components_translate_TranslateMessage_clazz_defined
#define org_chromium_components_translate_TranslateMessage_clazz_defined
inline jclass org_chromium_components_translate_TranslateMessage_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_translate_TranslateMessage,
      &g_org_chromium_components_translate_TranslateMessage_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace translate {

JNI_GENERATOR_EXPORT void Java_J_N_M_1ai6ZnE(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeTranslateMessage) {
  TranslateMessage* native = reinterpret_cast<TranslateMessage*>(nativeTranslateMessage);
  CHECK_NATIVE_PTR(env, jcaller, native, "HandlePrimaryAction");
  return native->HandlePrimaryAction(env);
}

JNI_GENERATOR_EXPORT void Java_J_N_MARFJEb_1(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeTranslateMessage,
    jint dismissReason) {
  TranslateMessage* native = reinterpret_cast<TranslateMessage*>(nativeTranslateMessage);
  CHECK_NATIVE_PTR(env, jcaller, native, "HandleDismiss");
  return native->HandleDismiss(env, dismissReason);
}

JNI_GENERATOR_EXPORT jobjectArray Java_J_N_MZGYXqwU(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeTranslateMessage) {
  TranslateMessage* native = reinterpret_cast<TranslateMessage*>(nativeTranslateMessage);
  CHECK_NATIVE_PTR(env, jcaller, native, "BuildOverflowMenu", NULL);
  return native->BuildOverflowMenu(env).Release();
}

JNI_GENERATOR_EXPORT jobjectArray Java_J_N_MENF59pO(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeTranslateMessage,
    jint overflowMenuItemId,
    jstring languageCode,
    jboolean hadCheckmark) {
  TranslateMessage* native = reinterpret_cast<TranslateMessage*>(nativeTranslateMessage);
  CHECK_NATIVE_PTR(env, jcaller, native, "HandleSecondaryMenuItemClicked", NULL);
  return native->HandleSecondaryMenuItemClicked(env, overflowMenuItemId,
      base::android::JavaParamRef<jstring>(env, languageCode), hadCheckmark).Release();
}


static std::atomic<jmethodID>
    g_org_chromium_components_translate_TranslateMessage_showTranslateError(nullptr);
static void Java_TranslateMessage_showTranslateError(JNIEnv* env, const
    base::android::JavaRef<jobject>& webContents) {
  jclass clazz = org_chromium_components_translate_TranslateMessage_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_translate_TranslateMessage_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "showTranslateError",
          "(Lorg/chromium/content_public/browser/WebContents;)V",
          &g_org_chromium_components_translate_TranslateMessage_showTranslateError);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, webContents.obj());
}

static std::atomic<jmethodID> g_org_chromium_components_translate_TranslateMessage_create(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_TranslateMessage_create(JNIEnv* env, const
    base::android::JavaRef<jobject>& webContents,
    jlong nativeTranslateMessage,
    JniIntWrapper dismissalDurationSeconds) {
  jclass clazz = org_chromium_components_translate_TranslateMessage_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_translate_TranslateMessage_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "create",
"(Lorg/chromium/content_public/browser/WebContents;JI)Lorg/chromium/components/translate/TranslateMessage;",
          &g_org_chromium_components_translate_TranslateMessage_create);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, webContents.obj(), nativeTranslateMessage,
              as_jint(dismissalDurationSeconds));
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_translate_TranslateMessage_clearNativePointer(nullptr);
static void Java_TranslateMessage_clearNativePointer(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_translate_TranslateMessage_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_translate_TranslateMessage_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "clearNativePointer",
          "()V",
          &g_org_chromium_components_translate_TranslateMessage_clearNativePointer);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_translate_TranslateMessage_showMessage(nullptr);
static void Java_TranslateMessage_showMessage(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj, const base::android::JavaRef<jstring>& title,
    const base::android::JavaRef<jstring>& description,
    const base::android::JavaRef<jstring>& primaryButtonText) {
  jclass clazz = org_chromium_components_translate_TranslateMessage_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_translate_TranslateMessage_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "showMessage",
          "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
          &g_org_chromium_components_translate_TranslateMessage_showMessage);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, title.obj(), description.obj(), primaryButtonText.obj());
}

static std::atomic<jmethodID> g_org_chromium_components_translate_TranslateMessage_dismiss(nullptr);
static void Java_TranslateMessage_dismiss(JNIEnv* env, const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_translate_TranslateMessage_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_translate_TranslateMessage_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "dismiss",
          "()V",
          &g_org_chromium_components_translate_TranslateMessage_dismiss);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_translate_TranslateMessage_constructMenuItemArray(nullptr);
static base::android::ScopedJavaLocalRef<jobjectArray>
    Java_TranslateMessage_constructMenuItemArray(JNIEnv* env, const
    base::android::JavaRef<jobjectArray>& titles,
    const base::android::JavaRef<jobjectArray>& subtitles,
    const base::android::JavaRef<jbooleanArray>& hasCheckmarks,
    const base::android::JavaRef<jintArray>& overflowMenuItemIds,
    const base::android::JavaRef<jobjectArray>& languageCodes) {
  jclass clazz = org_chromium_components_translate_TranslateMessage_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_translate_TranslateMessage_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "constructMenuItemArray",
"([Ljava/lang/String;[Ljava/lang/String;[Z[I[Ljava/lang/String;)[Lorg/chromium/components/translate/TranslateMessage$MenuItem;",
          &g_org_chromium_components_translate_TranslateMessage_constructMenuItemArray);

  jobjectArray ret =
      static_cast<jobjectArray>(env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, titles.obj(), subtitles.obj(), hasCheckmarks.obj(),
              overflowMenuItemIds.obj(), languageCodes.obj()));
  return base::android::ScopedJavaLocalRef<jobjectArray>(env, ret);
}

}  // namespace translate

#endif  // org_chromium_components_translate_TranslateMessage_JNI
