// components/mirroring/mojom/resource_provider.mojom-shared.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_MIRRORING_MOJOM_RESOURCE_PROVIDER_MOJOM_SHARED_H_
#define COMPONENTS_MIRRORING_MOJOM_RESOURCE_PROVIDER_MOJOM_SHARED_H_

#include <stdint.h>

#include <functional>
#include <iosfwd>
#include <type_traits>
#include <utility>
#include "mojo/public/cpp/bindings/array_data_view.h"
#include "mojo/public/cpp/bindings/enum_traits.h"
#include "mojo/public/cpp/bindings/interface_data_view.h"
#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/serialization.h"
#include "mojo/public/cpp/bindings/map_data_view.h"
#include "mojo/public/cpp/bindings/string_data_view.h"

#include "third_party/perfetto/include/perfetto/tracing/traced_value_forward.h"

#include "components/mirroring/mojom/resource_provider.mojom-shared-internal.h"
#include "media/capture/mojom/video_capture.mojom-shared.h"
#include "services/network/public/mojom/network_context.mojom-shared.h"
#include "media/mojo/mojom/remoting.mojom-shared.h"
#include "media/mojo/mojom/audio_data_pipe.mojom-shared.h"
#include "media/mojo/mojom/audio_input_stream.mojom-shared.h"
#include "media/mojo/mojom/audio_parameters.mojom-shared.h"
#include "sandbox/policy/mojom/context.mojom-shared.h"
#include "services/viz/public/mojom/gpu.mojom-shared.h"
#include "mojo/public/cpp/bindings/lib/interface_serialization.h"






namespace mirroring {
namespace mojom {


}  // namespace mojom
}  // namespace mirroring

namespace mojo {
namespace internal {

}  // namespace internal
}  // namespace mojo


namespace mirroring {
namespace mojom {
// Interface base classes. They are used for type safety check.
class AudioStreamCreatorClientInterfaceBase {};

using AudioStreamCreatorClientPtrDataView =
    mojo::InterfacePtrDataView<AudioStreamCreatorClientInterfaceBase>;
using AudioStreamCreatorClientRequestDataView =
    mojo::InterfaceRequestDataView<AudioStreamCreatorClientInterfaceBase>;
using AudioStreamCreatorClientAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<AudioStreamCreatorClientInterfaceBase>;
using AudioStreamCreatorClientAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<AudioStreamCreatorClientInterfaceBase>;
class ResourceProviderInterfaceBase {};

using ResourceProviderPtrDataView =
    mojo::InterfacePtrDataView<ResourceProviderInterfaceBase>;
using ResourceProviderRequestDataView =
    mojo::InterfaceRequestDataView<ResourceProviderInterfaceBase>;
using ResourceProviderAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<ResourceProviderInterfaceBase>;
using ResourceProviderAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<ResourceProviderInterfaceBase>;


}  // namespace mojom
}  // namespace mirroring

namespace std {

}  // namespace std

namespace mojo {

}  // namespace mojo


namespace mirroring {
namespace mojom {


}  // namespace mojom
}  // namespace mirroring

// Declare TraceFormatTraits for enums, which should be defined in ::perfetto
// namespace.

#endif  // COMPONENTS_MIRRORING_MOJOM_RESOURCE_PROVIDER_MOJOM_SHARED_H_