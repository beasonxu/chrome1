// components/services/heap_profiling/public/mojom/heap_profiling_client.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_SERVICES_HEAP_PROFILING_PUBLIC_MOJOM_HEAP_PROFILING_CLIENT_MOJOM_PARAMS_DATA_H_
#define COMPONENTS_SERVICES_HEAP_PROFILING_PUBLIC_MOJOM_HEAP_PROFILING_CLIENT_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace heap_profiling {
namespace mojom {
namespace internal {

class ValidationContext;
class  ProfilingClient_StartProfiling_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::ProfilingParams_Data> params;

 private:
  friend class mojo::internal::MessageFragment<ProfilingClient_StartProfiling_Params_Data>;

  ProfilingClient_StartProfiling_Params_Data();
  ~ProfilingClient_StartProfiling_Params_Data() = delete;
};
static_assert(sizeof(ProfilingClient_StartProfiling_Params_Data) == 16,
              "Bad sizeof(ProfilingClient_StartProfiling_Params_Data)");
class  ProfilingClient_StartProfiling_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<ProfilingClient_StartProfiling_ResponseParams_Data>;

  ProfilingClient_StartProfiling_ResponseParams_Data();
  ~ProfilingClient_StartProfiling_ResponseParams_Data() = delete;
};
static_assert(sizeof(ProfilingClient_StartProfiling_ResponseParams_Data) == 8,
              "Bad sizeof(ProfilingClient_StartProfiling_ResponseParams_Data)");
class  ProfilingClient_RetrieveHeapProfile_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<ProfilingClient_RetrieveHeapProfile_Params_Data>;

  ProfilingClient_RetrieveHeapProfile_Params_Data();
  ~ProfilingClient_RetrieveHeapProfile_Params_Data() = delete;
};
static_assert(sizeof(ProfilingClient_RetrieveHeapProfile_Params_Data) == 8,
              "Bad sizeof(ProfilingClient_RetrieveHeapProfile_Params_Data)");
class  ProfilingClient_RetrieveHeapProfile_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::HeapProfile_Data> profile;

 private:
  friend class mojo::internal::MessageFragment<ProfilingClient_RetrieveHeapProfile_ResponseParams_Data>;

  ProfilingClient_RetrieveHeapProfile_ResponseParams_Data();
  ~ProfilingClient_RetrieveHeapProfile_ResponseParams_Data() = delete;
};
static_assert(sizeof(ProfilingClient_RetrieveHeapProfile_ResponseParams_Data) == 16,
              "Bad sizeof(ProfilingClient_RetrieveHeapProfile_ResponseParams_Data)");
class  ProfilingClient_AddHeapProfileToTrace_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<ProfilingClient_AddHeapProfileToTrace_Params_Data>;

  ProfilingClient_AddHeapProfileToTrace_Params_Data();
  ~ProfilingClient_AddHeapProfileToTrace_Params_Data() = delete;
};
static_assert(sizeof(ProfilingClient_AddHeapProfileToTrace_Params_Data) == 8,
              "Bad sizeof(ProfilingClient_AddHeapProfileToTrace_Params_Data)");
class  ProfilingClient_AddHeapProfileToTrace_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t success : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<ProfilingClient_AddHeapProfileToTrace_ResponseParams_Data>;

  ProfilingClient_AddHeapProfileToTrace_ResponseParams_Data();
  ~ProfilingClient_AddHeapProfileToTrace_ResponseParams_Data() = delete;
};
static_assert(sizeof(ProfilingClient_AddHeapProfileToTrace_ResponseParams_Data) == 16,
              "Bad sizeof(ProfilingClient_AddHeapProfileToTrace_ResponseParams_Data)");

}  // namespace internal


class ProfilingClient_StartProfiling_ParamsDataView {
 public:
  ProfilingClient_StartProfiling_ParamsDataView() = default;

  ProfilingClient_StartProfiling_ParamsDataView(
      internal::ProfilingClient_StartProfiling_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetParamsDataView(
      ProfilingParamsDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadParams(UserType* output) {
    
    auto* pointer = data_->params.Get();
    return mojo::internal::Deserialize<::heap_profiling::mojom::ProfilingParamsDataView>(
        pointer, output, message_);
  }
 private:
  internal::ProfilingClient_StartProfiling_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ProfilingClient_StartProfiling_ResponseParamsDataView {
 public:
  ProfilingClient_StartProfiling_ResponseParamsDataView() = default;

  ProfilingClient_StartProfiling_ResponseParamsDataView(
      internal::ProfilingClient_StartProfiling_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ProfilingClient_StartProfiling_ResponseParams_Data* data_ = nullptr;
};



class ProfilingClient_RetrieveHeapProfile_ParamsDataView {
 public:
  ProfilingClient_RetrieveHeapProfile_ParamsDataView() = default;

  ProfilingClient_RetrieveHeapProfile_ParamsDataView(
      internal::ProfilingClient_RetrieveHeapProfile_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ProfilingClient_RetrieveHeapProfile_Params_Data* data_ = nullptr;
};



class ProfilingClient_RetrieveHeapProfile_ResponseParamsDataView {
 public:
  ProfilingClient_RetrieveHeapProfile_ResponseParamsDataView() = default;

  ProfilingClient_RetrieveHeapProfile_ResponseParamsDataView(
      internal::ProfilingClient_RetrieveHeapProfile_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetProfileDataView(
      HeapProfileDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadProfile(UserType* output) {
    
    auto* pointer = data_->profile.Get();
    return mojo::internal::Deserialize<::heap_profiling::mojom::HeapProfileDataView>(
        pointer, output, message_);
  }
 private:
  internal::ProfilingClient_RetrieveHeapProfile_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ProfilingClient_AddHeapProfileToTrace_ParamsDataView {
 public:
  ProfilingClient_AddHeapProfileToTrace_ParamsDataView() = default;

  ProfilingClient_AddHeapProfileToTrace_ParamsDataView(
      internal::ProfilingClient_AddHeapProfileToTrace_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ProfilingClient_AddHeapProfileToTrace_Params_Data* data_ = nullptr;
};



class ProfilingClient_AddHeapProfileToTrace_ResponseParamsDataView {
 public:
  ProfilingClient_AddHeapProfileToTrace_ResponseParamsDataView() = default;

  ProfilingClient_AddHeapProfileToTrace_ResponseParamsDataView(
      internal::ProfilingClient_AddHeapProfileToTrace_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool success() const {
    return data_->success;
  }
 private:
  internal::ProfilingClient_AddHeapProfileToTrace_ResponseParams_Data* data_ = nullptr;
};


inline void ProfilingClient_StartProfiling_ParamsDataView::GetParamsDataView(
    ProfilingParamsDataView* output) {
  auto pointer = data_->params.Get();
  *output = ProfilingParamsDataView(pointer, message_);
}






inline void ProfilingClient_RetrieveHeapProfile_ResponseParamsDataView::GetProfileDataView(
    HeapProfileDataView* output) {
  auto pointer = data_->profile.Get();
  *output = HeapProfileDataView(pointer, message_);
}





}  // namespace mojom
}  // namespace heap_profiling

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // COMPONENTS_SERVICES_HEAP_PROFILING_PUBLIC_MOJOM_HEAP_PROFILING_CLIENT_MOJOM_PARAMS_DATA_H_