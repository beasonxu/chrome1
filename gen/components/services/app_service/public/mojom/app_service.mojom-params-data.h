// components/services/app_service/public/mojom/app_service.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_SERVICES_APP_SERVICE_PUBLIC_MOJOM_APP_SERVICE_MOJOM_PARAMS_DATA_H_
#define COMPONENTS_SERVICES_APP_SERVICE_PUBLIC_MOJOM_APP_SERVICE_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace apps {
namespace mojom {
namespace internal {

class ValidationContext;
class  AppService_RegisterPublisher_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Interface_Data publisher;
  int32_t app_type;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<AppService_RegisterPublisher_Params_Data>;

  AppService_RegisterPublisher_Params_Data();
  ~AppService_RegisterPublisher_Params_Data() = delete;
};
static_assert(sizeof(AppService_RegisterPublisher_Params_Data) == 24,
              "Bad sizeof(AppService_RegisterPublisher_Params_Data)");
class  AppService_RegisterSubscriber_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Interface_Data subscriber;
  mojo::internal::Pointer<internal::ConnectOptions_Data> opts;

 private:
  friend class mojo::internal::MessageFragment<AppService_RegisterSubscriber_Params_Data>;

  AppService_RegisterSubscriber_Params_Data();
  ~AppService_RegisterSubscriber_Params_Data() = delete;
};
static_assert(sizeof(AppService_RegisterSubscriber_Params_Data) == 24,
              "Bad sizeof(AppService_RegisterSubscriber_Params_Data)");
class  AppService_Launch_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t app_type;
  int32_t event_flags;
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;
  int32_t launch_source;
  uint8_t pad3_[4];
  mojo::internal::Pointer<::apps::mojom::internal::WindowInfo_Data> window_info;

 private:
  friend class mojo::internal::MessageFragment<AppService_Launch_Params_Data>;

  AppService_Launch_Params_Data();
  ~AppService_Launch_Params_Data() = delete;
};
static_assert(sizeof(AppService_Launch_Params_Data) == 40,
              "Bad sizeof(AppService_Launch_Params_Data)");
class  AppService_LaunchAppWithFiles_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t app_type;
  int32_t event_flags;
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;
  int32_t launch_source;
  uint8_t pad3_[4];
  mojo::internal::Pointer<::apps::mojom::internal::FilePaths_Data> file_paths;

 private:
  friend class mojo::internal::MessageFragment<AppService_LaunchAppWithFiles_Params_Data>;

  AppService_LaunchAppWithFiles_Params_Data();
  ~AppService_LaunchAppWithFiles_Params_Data() = delete;
};
static_assert(sizeof(AppService_LaunchAppWithFiles_Params_Data) == 40,
              "Bad sizeof(AppService_LaunchAppWithFiles_Params_Data)");
class  AppService_LaunchAppWithIntent_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t app_type;
  int32_t event_flags;
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;
  mojo::internal::Pointer<::apps::mojom::internal::Intent_Data> intent;
  int32_t launch_source;
  uint8_t pad4_[4];
  mojo::internal::Pointer<::apps::mojom::internal::WindowInfo_Data> window_info;

 private:
  friend class mojo::internal::MessageFragment<AppService_LaunchAppWithIntent_Params_Data>;

  AppService_LaunchAppWithIntent_Params_Data();
  ~AppService_LaunchAppWithIntent_Params_Data() = delete;
};
static_assert(sizeof(AppService_LaunchAppWithIntent_Params_Data) == 48,
              "Bad sizeof(AppService_LaunchAppWithIntent_Params_Data)");
class  AppService_LaunchAppWithIntent_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t success : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<AppService_LaunchAppWithIntent_ResponseParams_Data>;

  AppService_LaunchAppWithIntent_ResponseParams_Data();
  ~AppService_LaunchAppWithIntent_ResponseParams_Data() = delete;
};
static_assert(sizeof(AppService_LaunchAppWithIntent_ResponseParams_Data) == 16,
              "Bad sizeof(AppService_LaunchAppWithIntent_ResponseParams_Data)");
class  AppService_SetPermission_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t app_type;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;
  mojo::internal::Pointer<::apps::mojom::internal::Permission_Data> permission;

 private:
  friend class mojo::internal::MessageFragment<AppService_SetPermission_Params_Data>;

  AppService_SetPermission_Params_Data();
  ~AppService_SetPermission_Params_Data() = delete;
};
static_assert(sizeof(AppService_SetPermission_Params_Data) == 32,
              "Bad sizeof(AppService_SetPermission_Params_Data)");
class  AppService_Uninstall_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t app_type;
  int32_t uninstall_source;
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;
  uint8_t clear_site_data : 1;
  uint8_t report_abuse : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<AppService_Uninstall_Params_Data>;

  AppService_Uninstall_Params_Data();
  ~AppService_Uninstall_Params_Data() = delete;
};
static_assert(sizeof(AppService_Uninstall_Params_Data) == 32,
              "Bad sizeof(AppService_Uninstall_Params_Data)");
class  AppService_PauseApp_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t app_type;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;

 private:
  friend class mojo::internal::MessageFragment<AppService_PauseApp_Params_Data>;

  AppService_PauseApp_Params_Data();
  ~AppService_PauseApp_Params_Data() = delete;
};
static_assert(sizeof(AppService_PauseApp_Params_Data) == 24,
              "Bad sizeof(AppService_PauseApp_Params_Data)");
class  AppService_UnpauseApp_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t app_type;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;

 private:
  friend class mojo::internal::MessageFragment<AppService_UnpauseApp_Params_Data>;

  AppService_UnpauseApp_Params_Data();
  ~AppService_UnpauseApp_Params_Data() = delete;
};
static_assert(sizeof(AppService_UnpauseApp_Params_Data) == 24,
              "Bad sizeof(AppService_UnpauseApp_Params_Data)");
class  AppService_StopApp_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t app_type;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;

 private:
  friend class mojo::internal::MessageFragment<AppService_StopApp_Params_Data>;

  AppService_StopApp_Params_Data();
  ~AppService_StopApp_Params_Data() = delete;
};
static_assert(sizeof(AppService_StopApp_Params_Data) == 24,
              "Bad sizeof(AppService_StopApp_Params_Data)");
class  AppService_GetMenuModel_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t app_type;
  int32_t menu_type;
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;
  int64_t display_id;

 private:
  friend class mojo::internal::MessageFragment<AppService_GetMenuModel_Params_Data>;

  AppService_GetMenuModel_Params_Data();
  ~AppService_GetMenuModel_Params_Data() = delete;
};
static_assert(sizeof(AppService_GetMenuModel_Params_Data) == 32,
              "Bad sizeof(AppService_GetMenuModel_Params_Data)");
class  AppService_GetMenuModel_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::apps::mojom::internal::MenuItems_Data> menu_items;

 private:
  friend class mojo::internal::MessageFragment<AppService_GetMenuModel_ResponseParams_Data>;

  AppService_GetMenuModel_ResponseParams_Data();
  ~AppService_GetMenuModel_ResponseParams_Data() = delete;
};
static_assert(sizeof(AppService_GetMenuModel_ResponseParams_Data) == 16,
              "Bad sizeof(AppService_GetMenuModel_ResponseParams_Data)");
class  AppService_ExecuteContextMenuCommand_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t app_type;
  int32_t command_id;
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;
  mojo::internal::Pointer<mojo::internal::String_Data> shortcut_id;
  int64_t display_id;

 private:
  friend class mojo::internal::MessageFragment<AppService_ExecuteContextMenuCommand_Params_Data>;

  AppService_ExecuteContextMenuCommand_Params_Data();
  ~AppService_ExecuteContextMenuCommand_Params_Data() = delete;
};
static_assert(sizeof(AppService_ExecuteContextMenuCommand_Params_Data) == 40,
              "Bad sizeof(AppService_ExecuteContextMenuCommand_Params_Data)");
class  AppService_OpenNativeSettings_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t app_type;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;

 private:
  friend class mojo::internal::MessageFragment<AppService_OpenNativeSettings_Params_Data>;

  AppService_OpenNativeSettings_Params_Data();
  ~AppService_OpenNativeSettings_Params_Data() = delete;
};
static_assert(sizeof(AppService_OpenNativeSettings_Params_Data) == 24,
              "Bad sizeof(AppService_OpenNativeSettings_Params_Data)");
class  AppService_AddPreferredApp_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t app_type;
  uint8_t from_publisher : 1;
  uint8_t pad1_[3];
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;
  mojo::internal::Pointer<::apps::mojom::internal::IntentFilter_Data> intent_filter;
  mojo::internal::Pointer<::apps::mojom::internal::Intent_Data> intent;

 private:
  friend class mojo::internal::MessageFragment<AppService_AddPreferredApp_Params_Data>;

  AppService_AddPreferredApp_Params_Data();
  ~AppService_AddPreferredApp_Params_Data() = delete;
};
static_assert(sizeof(AppService_AddPreferredApp_Params_Data) == 40,
              "Bad sizeof(AppService_AddPreferredApp_Params_Data)");
class  AppService_RemovePreferredApp_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t app_type;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;

 private:
  friend class mojo::internal::MessageFragment<AppService_RemovePreferredApp_Params_Data>;

  AppService_RemovePreferredApp_Params_Data();
  ~AppService_RemovePreferredApp_Params_Data() = delete;
};
static_assert(sizeof(AppService_RemovePreferredApp_Params_Data) == 24,
              "Bad sizeof(AppService_RemovePreferredApp_Params_Data)");
class  AppService_SetSupportedLinksPreference_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t app_type;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<::apps::mojom::internal::IntentFilter_Data>>> all_link_filters;

 private:
  friend class mojo::internal::MessageFragment<AppService_SetSupportedLinksPreference_Params_Data>;

  AppService_SetSupportedLinksPreference_Params_Data();
  ~AppService_SetSupportedLinksPreference_Params_Data() = delete;
};
static_assert(sizeof(AppService_SetSupportedLinksPreference_Params_Data) == 32,
              "Bad sizeof(AppService_SetSupportedLinksPreference_Params_Data)");
class  AppService_RemoveSupportedLinksPreference_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t app_type;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;

 private:
  friend class mojo::internal::MessageFragment<AppService_RemoveSupportedLinksPreference_Params_Data>;

  AppService_RemoveSupportedLinksPreference_Params_Data();
  ~AppService_RemoveSupportedLinksPreference_Params_Data() = delete;
};
static_assert(sizeof(AppService_RemoveSupportedLinksPreference_Params_Data) == 24,
              "Bad sizeof(AppService_RemoveSupportedLinksPreference_Params_Data)");
class  AppService_SetResizeLocked_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t app_type;
  int32_t locked;
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;

 private:
  friend class mojo::internal::MessageFragment<AppService_SetResizeLocked_Params_Data>;

  AppService_SetResizeLocked_Params_Data();
  ~AppService_SetResizeLocked_Params_Data() = delete;
};
static_assert(sizeof(AppService_SetResizeLocked_Params_Data) == 24,
              "Bad sizeof(AppService_SetResizeLocked_Params_Data)");
class  AppService_SetWindowMode_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t app_type;
  int32_t window_mode;
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;

 private:
  friend class mojo::internal::MessageFragment<AppService_SetWindowMode_Params_Data>;

  AppService_SetWindowMode_Params_Data();
  ~AppService_SetWindowMode_Params_Data() = delete;
};
static_assert(sizeof(AppService_SetWindowMode_Params_Data) == 24,
              "Bad sizeof(AppService_SetWindowMode_Params_Data)");
class  AppService_SetRunOnOsLoginMode_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t app_type;
  int32_t run_on_os_login_mode;
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;

 private:
  friend class mojo::internal::MessageFragment<AppService_SetRunOnOsLoginMode_Params_Data>;

  AppService_SetRunOnOsLoginMode_Params_Data();
  ~AppService_SetRunOnOsLoginMode_Params_Data() = delete;
};
static_assert(sizeof(AppService_SetRunOnOsLoginMode_Params_Data) == 24,
              "Bad sizeof(AppService_SetRunOnOsLoginMode_Params_Data)");
class  Publisher_Connect_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Interface_Data subscriber;
  mojo::internal::Pointer<internal::ConnectOptions_Data> opts;

 private:
  friend class mojo::internal::MessageFragment<Publisher_Connect_Params_Data>;

  Publisher_Connect_Params_Data();
  ~Publisher_Connect_Params_Data() = delete;
};
static_assert(sizeof(Publisher_Connect_Params_Data) == 24,
              "Bad sizeof(Publisher_Connect_Params_Data)");
class  Publisher_Launch_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;
  int32_t event_flags;
  int32_t launch_source;
  mojo::internal::Pointer<::apps::mojom::internal::WindowInfo_Data> window_info;

 private:
  friend class mojo::internal::MessageFragment<Publisher_Launch_Params_Data>;

  Publisher_Launch_Params_Data();
  ~Publisher_Launch_Params_Data() = delete;
};
static_assert(sizeof(Publisher_Launch_Params_Data) == 32,
              "Bad sizeof(Publisher_Launch_Params_Data)");
class  Publisher_LaunchAppWithFiles_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;
  int32_t event_flags;
  int32_t launch_source;
  mojo::internal::Pointer<::apps::mojom::internal::FilePaths_Data> file_paths;

 private:
  friend class mojo::internal::MessageFragment<Publisher_LaunchAppWithFiles_Params_Data>;

  Publisher_LaunchAppWithFiles_Params_Data();
  ~Publisher_LaunchAppWithFiles_Params_Data() = delete;
};
static_assert(sizeof(Publisher_LaunchAppWithFiles_Params_Data) == 32,
              "Bad sizeof(Publisher_LaunchAppWithFiles_Params_Data)");
class  Publisher_LaunchAppWithIntent_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;
  int32_t event_flags;
  int32_t launch_source;
  mojo::internal::Pointer<::apps::mojom::internal::Intent_Data> intent;
  mojo::internal::Pointer<::apps::mojom::internal::WindowInfo_Data> window_info;

 private:
  friend class mojo::internal::MessageFragment<Publisher_LaunchAppWithIntent_Params_Data>;

  Publisher_LaunchAppWithIntent_Params_Data();
  ~Publisher_LaunchAppWithIntent_Params_Data() = delete;
};
static_assert(sizeof(Publisher_LaunchAppWithIntent_Params_Data) == 40,
              "Bad sizeof(Publisher_LaunchAppWithIntent_Params_Data)");
class  Publisher_LaunchAppWithIntent_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t success : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<Publisher_LaunchAppWithIntent_ResponseParams_Data>;

  Publisher_LaunchAppWithIntent_ResponseParams_Data();
  ~Publisher_LaunchAppWithIntent_ResponseParams_Data() = delete;
};
static_assert(sizeof(Publisher_LaunchAppWithIntent_ResponseParams_Data) == 16,
              "Bad sizeof(Publisher_LaunchAppWithIntent_ResponseParams_Data)");
class  Publisher_SetPermission_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;
  mojo::internal::Pointer<::apps::mojom::internal::Permission_Data> permission;

 private:
  friend class mojo::internal::MessageFragment<Publisher_SetPermission_Params_Data>;

  Publisher_SetPermission_Params_Data();
  ~Publisher_SetPermission_Params_Data() = delete;
};
static_assert(sizeof(Publisher_SetPermission_Params_Data) == 24,
              "Bad sizeof(Publisher_SetPermission_Params_Data)");
class  Publisher_Uninstall_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;
  int32_t uninstall_source;
  uint8_t clear_site_data : 1;
  uint8_t report_abuse : 1;
  uint8_t padfinal_[3];

 private:
  friend class mojo::internal::MessageFragment<Publisher_Uninstall_Params_Data>;

  Publisher_Uninstall_Params_Data();
  ~Publisher_Uninstall_Params_Data() = delete;
};
static_assert(sizeof(Publisher_Uninstall_Params_Data) == 24,
              "Bad sizeof(Publisher_Uninstall_Params_Data)");
class  Publisher_PauseApp_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;

 private:
  friend class mojo::internal::MessageFragment<Publisher_PauseApp_Params_Data>;

  Publisher_PauseApp_Params_Data();
  ~Publisher_PauseApp_Params_Data() = delete;
};
static_assert(sizeof(Publisher_PauseApp_Params_Data) == 16,
              "Bad sizeof(Publisher_PauseApp_Params_Data)");
class  Publisher_UnpauseApp_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;

 private:
  friend class mojo::internal::MessageFragment<Publisher_UnpauseApp_Params_Data>;

  Publisher_UnpauseApp_Params_Data();
  ~Publisher_UnpauseApp_Params_Data() = delete;
};
static_assert(sizeof(Publisher_UnpauseApp_Params_Data) == 16,
              "Bad sizeof(Publisher_UnpauseApp_Params_Data)");
class  Publisher_StopApp_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;

 private:
  friend class mojo::internal::MessageFragment<Publisher_StopApp_Params_Data>;

  Publisher_StopApp_Params_Data();
  ~Publisher_StopApp_Params_Data() = delete;
};
static_assert(sizeof(Publisher_StopApp_Params_Data) == 16,
              "Bad sizeof(Publisher_StopApp_Params_Data)");
class  Publisher_GetMenuModel_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;
  int32_t menu_type;
  uint8_t pad1_[4];
  int64_t display_id;

 private:
  friend class mojo::internal::MessageFragment<Publisher_GetMenuModel_Params_Data>;

  Publisher_GetMenuModel_Params_Data();
  ~Publisher_GetMenuModel_Params_Data() = delete;
};
static_assert(sizeof(Publisher_GetMenuModel_Params_Data) == 32,
              "Bad sizeof(Publisher_GetMenuModel_Params_Data)");
class  Publisher_GetMenuModel_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::apps::mojom::internal::MenuItems_Data> menu_items;

 private:
  friend class mojo::internal::MessageFragment<Publisher_GetMenuModel_ResponseParams_Data>;

  Publisher_GetMenuModel_ResponseParams_Data();
  ~Publisher_GetMenuModel_ResponseParams_Data() = delete;
};
static_assert(sizeof(Publisher_GetMenuModel_ResponseParams_Data) == 16,
              "Bad sizeof(Publisher_GetMenuModel_ResponseParams_Data)");
class  Publisher_ExecuteContextMenuCommand_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;
  int32_t command_id;
  uint8_t pad1_[4];
  mojo::internal::Pointer<mojo::internal::String_Data> shortcut_id;
  int64_t display_id;

 private:
  friend class mojo::internal::MessageFragment<Publisher_ExecuteContextMenuCommand_Params_Data>;

  Publisher_ExecuteContextMenuCommand_Params_Data();
  ~Publisher_ExecuteContextMenuCommand_Params_Data() = delete;
};
static_assert(sizeof(Publisher_ExecuteContextMenuCommand_Params_Data) == 40,
              "Bad sizeof(Publisher_ExecuteContextMenuCommand_Params_Data)");
class  Publisher_OpenNativeSettings_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;

 private:
  friend class mojo::internal::MessageFragment<Publisher_OpenNativeSettings_Params_Data>;

  Publisher_OpenNativeSettings_Params_Data();
  ~Publisher_OpenNativeSettings_Params_Data() = delete;
};
static_assert(sizeof(Publisher_OpenNativeSettings_Params_Data) == 16,
              "Bad sizeof(Publisher_OpenNativeSettings_Params_Data)");
class  Publisher_OnPreferredAppSet_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;
  mojo::internal::Pointer<::apps::mojom::internal::IntentFilter_Data> intent_filter;
  mojo::internal::Pointer<::apps::mojom::internal::Intent_Data> intent;
  mojo::internal::Pointer<::apps::mojom::internal::ReplacedAppPreferences_Data> replaced_app_preferences;

 private:
  friend class mojo::internal::MessageFragment<Publisher_OnPreferredAppSet_Params_Data>;

  Publisher_OnPreferredAppSet_Params_Data();
  ~Publisher_OnPreferredAppSet_Params_Data() = delete;
};
static_assert(sizeof(Publisher_OnPreferredAppSet_Params_Data) == 40,
              "Bad sizeof(Publisher_OnPreferredAppSet_Params_Data)");
class  Publisher_OnSupportedLinksPreferenceChanged_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;
  uint8_t open_in_app : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<Publisher_OnSupportedLinksPreferenceChanged_Params_Data>;

  Publisher_OnSupportedLinksPreferenceChanged_Params_Data();
  ~Publisher_OnSupportedLinksPreferenceChanged_Params_Data() = delete;
};
static_assert(sizeof(Publisher_OnSupportedLinksPreferenceChanged_Params_Data) == 24,
              "Bad sizeof(Publisher_OnSupportedLinksPreferenceChanged_Params_Data)");
class  Publisher_SetResizeLocked_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;
  int32_t locked;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<Publisher_SetResizeLocked_Params_Data>;

  Publisher_SetResizeLocked_Params_Data();
  ~Publisher_SetResizeLocked_Params_Data() = delete;
};
static_assert(sizeof(Publisher_SetResizeLocked_Params_Data) == 24,
              "Bad sizeof(Publisher_SetResizeLocked_Params_Data)");
class  Publisher_SetWindowMode_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;
  int32_t window_mode;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<Publisher_SetWindowMode_Params_Data>;

  Publisher_SetWindowMode_Params_Data();
  ~Publisher_SetWindowMode_Params_Data() = delete;
};
static_assert(sizeof(Publisher_SetWindowMode_Params_Data) == 24,
              "Bad sizeof(Publisher_SetWindowMode_Params_Data)");
class  Publisher_SetRunOnOsLoginMode_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> app_id;
  int32_t run_on_os_login_mode;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<Publisher_SetRunOnOsLoginMode_Params_Data>;

  Publisher_SetRunOnOsLoginMode_Params_Data();
  ~Publisher_SetRunOnOsLoginMode_Params_Data() = delete;
};
static_assert(sizeof(Publisher_SetRunOnOsLoginMode_Params_Data) == 24,
              "Bad sizeof(Publisher_SetRunOnOsLoginMode_Params_Data)");
class  Subscriber_OnApps_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<::apps::mojom::internal::App_Data>>> deltas;
  int32_t app_type;
  uint8_t should_notify_initialized : 1;
  uint8_t padfinal_[3];

 private:
  friend class mojo::internal::MessageFragment<Subscriber_OnApps_Params_Data>;

  Subscriber_OnApps_Params_Data();
  ~Subscriber_OnApps_Params_Data() = delete;
};
static_assert(sizeof(Subscriber_OnApps_Params_Data) == 24,
              "Bad sizeof(Subscriber_OnApps_Params_Data)");
class  Subscriber_OnCapabilityAccesses_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<::apps::mojom::internal::CapabilityAccess_Data>>> deltas;

 private:
  friend class mojo::internal::MessageFragment<Subscriber_OnCapabilityAccesses_Params_Data>;

  Subscriber_OnCapabilityAccesses_Params_Data();
  ~Subscriber_OnCapabilityAccesses_Params_Data() = delete;
};
static_assert(sizeof(Subscriber_OnCapabilityAccesses_Params_Data) == 16,
              "Bad sizeof(Subscriber_OnCapabilityAccesses_Params_Data)");
class  Subscriber_Clone_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Handle_Data receiver;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<Subscriber_Clone_Params_Data>;

  Subscriber_Clone_Params_Data();
  ~Subscriber_Clone_Params_Data() = delete;
};
static_assert(sizeof(Subscriber_Clone_Params_Data) == 16,
              "Bad sizeof(Subscriber_Clone_Params_Data)");
class  Subscriber_OnPreferredAppsChanged_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::apps::mojom::internal::PreferredAppChanges_Data> changes;

 private:
  friend class mojo::internal::MessageFragment<Subscriber_OnPreferredAppsChanged_Params_Data>;

  Subscriber_OnPreferredAppsChanged_Params_Data();
  ~Subscriber_OnPreferredAppsChanged_Params_Data() = delete;
};
static_assert(sizeof(Subscriber_OnPreferredAppsChanged_Params_Data) == 16,
              "Bad sizeof(Subscriber_OnPreferredAppsChanged_Params_Data)");
class  Subscriber_InitializePreferredApps_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<::apps::mojom::internal::PreferredApp_Data>>> preferred_apps;

 private:
  friend class mojo::internal::MessageFragment<Subscriber_InitializePreferredApps_Params_Data>;

  Subscriber_InitializePreferredApps_Params_Data();
  ~Subscriber_InitializePreferredApps_Params_Data() = delete;
};
static_assert(sizeof(Subscriber_InitializePreferredApps_Params_Data) == 16,
              "Bad sizeof(Subscriber_InitializePreferredApps_Params_Data)");

}  // namespace internal


class AppService_RegisterPublisher_ParamsDataView {
 public:
  AppService_RegisterPublisher_ParamsDataView() = default;

  AppService_RegisterPublisher_ParamsDataView(
      internal::AppService_RegisterPublisher_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakePublisher() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfacePtrDataView<::apps::mojom::PublisherInterfaceBase>>(
            &data_->publisher, &result, message_);
    DCHECK(ret);
    return result;
  }
  template <typename UserType>
  [[nodiscard]] bool ReadAppType(UserType* output) const {
    auto data_value = data_->app_type;
    return mojo::internal::Deserialize<::apps::mojom::AppType>(
        data_value, output);
  }
  ::apps::mojom::AppType app_type() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::AppType>(data_->app_type));
  }
 private:
  internal::AppService_RegisterPublisher_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AppService_RegisterSubscriber_ParamsDataView {
 public:
  AppService_RegisterSubscriber_ParamsDataView() = default;

  AppService_RegisterSubscriber_ParamsDataView(
      internal::AppService_RegisterSubscriber_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeSubscriber() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfacePtrDataView<::apps::mojom::SubscriberInterfaceBase>>(
            &data_->subscriber, &result, message_);
    DCHECK(ret);
    return result;
  }
  inline void GetOptsDataView(
      ConnectOptionsDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadOpts(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::apps::mojom::ConnectOptionsDataView, UserType>(),
    "Attempting to read the optional `opts` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadOpts` instead "
    "of `ReadOpts if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->opts.Get();
    return mojo::internal::Deserialize<::apps::mojom::ConnectOptionsDataView>(
        pointer, output, message_);
  }
 private:
  internal::AppService_RegisterSubscriber_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AppService_Launch_ParamsDataView {
 public:
  AppService_Launch_ParamsDataView() = default;

  AppService_Launch_ParamsDataView(
      internal::AppService_Launch_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadAppType(UserType* output) const {
    auto data_value = data_->app_type;
    return mojo::internal::Deserialize<::apps::mojom::AppType>(
        data_value, output);
  }
  ::apps::mojom::AppType app_type() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::AppType>(data_->app_type));
  }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  int32_t event_flags() const {
    return data_->event_flags;
  }
  template <typename UserType>
  [[nodiscard]] bool ReadLaunchSource(UserType* output) const {
    auto data_value = data_->launch_source;
    return mojo::internal::Deserialize<::apps::mojom::LaunchSource>(
        data_value, output);
  }
  ::apps::mojom::LaunchSource launch_source() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::LaunchSource>(data_->launch_source));
  }
  inline void GetWindowInfoDataView(
      ::apps::mojom::WindowInfoDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadWindowInfo(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::apps::mojom::WindowInfoDataView, UserType>(),
    "Attempting to read the optional `window_info` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadWindowInfo` instead "
    "of `ReadWindowInfo if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->window_info.Get();
    return mojo::internal::Deserialize<::apps::mojom::WindowInfoDataView>(
        pointer, output, message_);
  }
 private:
  internal::AppService_Launch_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AppService_LaunchAppWithFiles_ParamsDataView {
 public:
  AppService_LaunchAppWithFiles_ParamsDataView() = default;

  AppService_LaunchAppWithFiles_ParamsDataView(
      internal::AppService_LaunchAppWithFiles_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadAppType(UserType* output) const {
    auto data_value = data_->app_type;
    return mojo::internal::Deserialize<::apps::mojom::AppType>(
        data_value, output);
  }
  ::apps::mojom::AppType app_type() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::AppType>(data_->app_type));
  }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  int32_t event_flags() const {
    return data_->event_flags;
  }
  template <typename UserType>
  [[nodiscard]] bool ReadLaunchSource(UserType* output) const {
    auto data_value = data_->launch_source;
    return mojo::internal::Deserialize<::apps::mojom::LaunchSource>(
        data_value, output);
  }
  ::apps::mojom::LaunchSource launch_source() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::LaunchSource>(data_->launch_source));
  }
  inline void GetFilePathsDataView(
      ::apps::mojom::FilePathsDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadFilePaths(UserType* output) {
    
    auto* pointer = data_->file_paths.Get();
    return mojo::internal::Deserialize<::apps::mojom::FilePathsDataView>(
        pointer, output, message_);
  }
 private:
  internal::AppService_LaunchAppWithFiles_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AppService_LaunchAppWithIntent_ParamsDataView {
 public:
  AppService_LaunchAppWithIntent_ParamsDataView() = default;

  AppService_LaunchAppWithIntent_ParamsDataView(
      internal::AppService_LaunchAppWithIntent_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadAppType(UserType* output) const {
    auto data_value = data_->app_type;
    return mojo::internal::Deserialize<::apps::mojom::AppType>(
        data_value, output);
  }
  ::apps::mojom::AppType app_type() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::AppType>(data_->app_type));
  }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  int32_t event_flags() const {
    return data_->event_flags;
  }
  inline void GetIntentDataView(
      ::apps::mojom::IntentDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadIntent(UserType* output) {
    
    auto* pointer = data_->intent.Get();
    return mojo::internal::Deserialize<::apps::mojom::IntentDataView>(
        pointer, output, message_);
  }
  template <typename UserType>
  [[nodiscard]] bool ReadLaunchSource(UserType* output) const {
    auto data_value = data_->launch_source;
    return mojo::internal::Deserialize<::apps::mojom::LaunchSource>(
        data_value, output);
  }
  ::apps::mojom::LaunchSource launch_source() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::LaunchSource>(data_->launch_source));
  }
  inline void GetWindowInfoDataView(
      ::apps::mojom::WindowInfoDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadWindowInfo(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::apps::mojom::WindowInfoDataView, UserType>(),
    "Attempting to read the optional `window_info` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadWindowInfo` instead "
    "of `ReadWindowInfo if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->window_info.Get();
    return mojo::internal::Deserialize<::apps::mojom::WindowInfoDataView>(
        pointer, output, message_);
  }
 private:
  internal::AppService_LaunchAppWithIntent_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AppService_LaunchAppWithIntent_ResponseParamsDataView {
 public:
  AppService_LaunchAppWithIntent_ResponseParamsDataView() = default;

  AppService_LaunchAppWithIntent_ResponseParamsDataView(
      internal::AppService_LaunchAppWithIntent_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool success() const {
    return data_->success;
  }
 private:
  internal::AppService_LaunchAppWithIntent_ResponseParams_Data* data_ = nullptr;
};



class AppService_SetPermission_ParamsDataView {
 public:
  AppService_SetPermission_ParamsDataView() = default;

  AppService_SetPermission_ParamsDataView(
      internal::AppService_SetPermission_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadAppType(UserType* output) const {
    auto data_value = data_->app_type;
    return mojo::internal::Deserialize<::apps::mojom::AppType>(
        data_value, output);
  }
  ::apps::mojom::AppType app_type() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::AppType>(data_->app_type));
  }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  inline void GetPermissionDataView(
      ::apps::mojom::PermissionDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadPermission(UserType* output) {
    
    auto* pointer = data_->permission.Get();
    return mojo::internal::Deserialize<::apps::mojom::PermissionDataView>(
        pointer, output, message_);
  }
 private:
  internal::AppService_SetPermission_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AppService_Uninstall_ParamsDataView {
 public:
  AppService_Uninstall_ParamsDataView() = default;

  AppService_Uninstall_ParamsDataView(
      internal::AppService_Uninstall_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadAppType(UserType* output) const {
    auto data_value = data_->app_type;
    return mojo::internal::Deserialize<::apps::mojom::AppType>(
        data_value, output);
  }
  ::apps::mojom::AppType app_type() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::AppType>(data_->app_type));
  }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  template <typename UserType>
  [[nodiscard]] bool ReadUninstallSource(UserType* output) const {
    auto data_value = data_->uninstall_source;
    return mojo::internal::Deserialize<::apps::mojom::UninstallSource>(
        data_value, output);
  }
  ::apps::mojom::UninstallSource uninstall_source() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::UninstallSource>(data_->uninstall_source));
  }
  bool clear_site_data() const {
    return data_->clear_site_data;
  }
  bool report_abuse() const {
    return data_->report_abuse;
  }
 private:
  internal::AppService_Uninstall_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AppService_PauseApp_ParamsDataView {
 public:
  AppService_PauseApp_ParamsDataView() = default;

  AppService_PauseApp_ParamsDataView(
      internal::AppService_PauseApp_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadAppType(UserType* output) const {
    auto data_value = data_->app_type;
    return mojo::internal::Deserialize<::apps::mojom::AppType>(
        data_value, output);
  }
  ::apps::mojom::AppType app_type() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::AppType>(data_->app_type));
  }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::AppService_PauseApp_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AppService_UnpauseApp_ParamsDataView {
 public:
  AppService_UnpauseApp_ParamsDataView() = default;

  AppService_UnpauseApp_ParamsDataView(
      internal::AppService_UnpauseApp_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadAppType(UserType* output) const {
    auto data_value = data_->app_type;
    return mojo::internal::Deserialize<::apps::mojom::AppType>(
        data_value, output);
  }
  ::apps::mojom::AppType app_type() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::AppType>(data_->app_type));
  }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::AppService_UnpauseApp_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AppService_StopApp_ParamsDataView {
 public:
  AppService_StopApp_ParamsDataView() = default;

  AppService_StopApp_ParamsDataView(
      internal::AppService_StopApp_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadAppType(UserType* output) const {
    auto data_value = data_->app_type;
    return mojo::internal::Deserialize<::apps::mojom::AppType>(
        data_value, output);
  }
  ::apps::mojom::AppType app_type() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::AppType>(data_->app_type));
  }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::AppService_StopApp_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AppService_GetMenuModel_ParamsDataView {
 public:
  AppService_GetMenuModel_ParamsDataView() = default;

  AppService_GetMenuModel_ParamsDataView(
      internal::AppService_GetMenuModel_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadAppType(UserType* output) const {
    auto data_value = data_->app_type;
    return mojo::internal::Deserialize<::apps::mojom::AppType>(
        data_value, output);
  }
  ::apps::mojom::AppType app_type() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::AppType>(data_->app_type));
  }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  template <typename UserType>
  [[nodiscard]] bool ReadMenuType(UserType* output) const {
    auto data_value = data_->menu_type;
    return mojo::internal::Deserialize<::apps::mojom::MenuType>(
        data_value, output);
  }
  ::apps::mojom::MenuType menu_type() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::MenuType>(data_->menu_type));
  }
  int64_t display_id() const {
    return data_->display_id;
  }
 private:
  internal::AppService_GetMenuModel_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AppService_GetMenuModel_ResponseParamsDataView {
 public:
  AppService_GetMenuModel_ResponseParamsDataView() = default;

  AppService_GetMenuModel_ResponseParamsDataView(
      internal::AppService_GetMenuModel_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetMenuItemsDataView(
      ::apps::mojom::MenuItemsDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadMenuItems(UserType* output) {
    
    auto* pointer = data_->menu_items.Get();
    return mojo::internal::Deserialize<::apps::mojom::MenuItemsDataView>(
        pointer, output, message_);
  }
 private:
  internal::AppService_GetMenuModel_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AppService_ExecuteContextMenuCommand_ParamsDataView {
 public:
  AppService_ExecuteContextMenuCommand_ParamsDataView() = default;

  AppService_ExecuteContextMenuCommand_ParamsDataView(
      internal::AppService_ExecuteContextMenuCommand_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadAppType(UserType* output) const {
    auto data_value = data_->app_type;
    return mojo::internal::Deserialize<::apps::mojom::AppType>(
        data_value, output);
  }
  ::apps::mojom::AppType app_type() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::AppType>(data_->app_type));
  }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  int32_t command_id() const {
    return data_->command_id;
  }
  inline void GetShortcutIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadShortcutId(UserType* output) {
    
    auto* pointer = data_->shortcut_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  int64_t display_id() const {
    return data_->display_id;
  }
 private:
  internal::AppService_ExecuteContextMenuCommand_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AppService_OpenNativeSettings_ParamsDataView {
 public:
  AppService_OpenNativeSettings_ParamsDataView() = default;

  AppService_OpenNativeSettings_ParamsDataView(
      internal::AppService_OpenNativeSettings_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadAppType(UserType* output) const {
    auto data_value = data_->app_type;
    return mojo::internal::Deserialize<::apps::mojom::AppType>(
        data_value, output);
  }
  ::apps::mojom::AppType app_type() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::AppType>(data_->app_type));
  }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::AppService_OpenNativeSettings_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AppService_AddPreferredApp_ParamsDataView {
 public:
  AppService_AddPreferredApp_ParamsDataView() = default;

  AppService_AddPreferredApp_ParamsDataView(
      internal::AppService_AddPreferredApp_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadAppType(UserType* output) const {
    auto data_value = data_->app_type;
    return mojo::internal::Deserialize<::apps::mojom::AppType>(
        data_value, output);
  }
  ::apps::mojom::AppType app_type() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::AppType>(data_->app_type));
  }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  inline void GetIntentFilterDataView(
      ::apps::mojom::IntentFilterDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadIntentFilter(UserType* output) {
    
    auto* pointer = data_->intent_filter.Get();
    return mojo::internal::Deserialize<::apps::mojom::IntentFilterDataView>(
        pointer, output, message_);
  }
  inline void GetIntentDataView(
      ::apps::mojom::IntentDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadIntent(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::apps::mojom::IntentDataView, UserType>(),
    "Attempting to read the optional `intent` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadIntent` instead "
    "of `ReadIntent if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->intent.Get();
    return mojo::internal::Deserialize<::apps::mojom::IntentDataView>(
        pointer, output, message_);
  }
  bool from_publisher() const {
    return data_->from_publisher;
  }
 private:
  internal::AppService_AddPreferredApp_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AppService_RemovePreferredApp_ParamsDataView {
 public:
  AppService_RemovePreferredApp_ParamsDataView() = default;

  AppService_RemovePreferredApp_ParamsDataView(
      internal::AppService_RemovePreferredApp_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadAppType(UserType* output) const {
    auto data_value = data_->app_type;
    return mojo::internal::Deserialize<::apps::mojom::AppType>(
        data_value, output);
  }
  ::apps::mojom::AppType app_type() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::AppType>(data_->app_type));
  }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::AppService_RemovePreferredApp_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AppService_SetSupportedLinksPreference_ParamsDataView {
 public:
  AppService_SetSupportedLinksPreference_ParamsDataView() = default;

  AppService_SetSupportedLinksPreference_ParamsDataView(
      internal::AppService_SetSupportedLinksPreference_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadAppType(UserType* output) const {
    auto data_value = data_->app_type;
    return mojo::internal::Deserialize<::apps::mojom::AppType>(
        data_value, output);
  }
  ::apps::mojom::AppType app_type() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::AppType>(data_->app_type));
  }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  inline void GetAllLinkFiltersDataView(
      mojo::ArrayDataView<::apps::mojom::IntentFilterDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAllLinkFilters(UserType* output) {
    
    auto* pointer = data_->all_link_filters.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::apps::mojom::IntentFilterDataView>>(
        pointer, output, message_);
  }
 private:
  internal::AppService_SetSupportedLinksPreference_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AppService_RemoveSupportedLinksPreference_ParamsDataView {
 public:
  AppService_RemoveSupportedLinksPreference_ParamsDataView() = default;

  AppService_RemoveSupportedLinksPreference_ParamsDataView(
      internal::AppService_RemoveSupportedLinksPreference_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadAppType(UserType* output) const {
    auto data_value = data_->app_type;
    return mojo::internal::Deserialize<::apps::mojom::AppType>(
        data_value, output);
  }
  ::apps::mojom::AppType app_type() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::AppType>(data_->app_type));
  }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::AppService_RemoveSupportedLinksPreference_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AppService_SetResizeLocked_ParamsDataView {
 public:
  AppService_SetResizeLocked_ParamsDataView() = default;

  AppService_SetResizeLocked_ParamsDataView(
      internal::AppService_SetResizeLocked_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadAppType(UserType* output) const {
    auto data_value = data_->app_type;
    return mojo::internal::Deserialize<::apps::mojom::AppType>(
        data_value, output);
  }
  ::apps::mojom::AppType app_type() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::AppType>(data_->app_type));
  }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  template <typename UserType>
  [[nodiscard]] bool ReadLocked(UserType* output) const {
    auto data_value = data_->locked;
    return mojo::internal::Deserialize<::apps::mojom::OptionalBool>(
        data_value, output);
  }
  ::apps::mojom::OptionalBool locked() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::OptionalBool>(data_->locked));
  }
 private:
  internal::AppService_SetResizeLocked_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AppService_SetWindowMode_ParamsDataView {
 public:
  AppService_SetWindowMode_ParamsDataView() = default;

  AppService_SetWindowMode_ParamsDataView(
      internal::AppService_SetWindowMode_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadAppType(UserType* output) const {
    auto data_value = data_->app_type;
    return mojo::internal::Deserialize<::apps::mojom::AppType>(
        data_value, output);
  }
  ::apps::mojom::AppType app_type() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::AppType>(data_->app_type));
  }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  template <typename UserType>
  [[nodiscard]] bool ReadWindowMode(UserType* output) const {
    auto data_value = data_->window_mode;
    return mojo::internal::Deserialize<::apps::mojom::WindowMode>(
        data_value, output);
  }
  ::apps::mojom::WindowMode window_mode() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::WindowMode>(data_->window_mode));
  }
 private:
  internal::AppService_SetWindowMode_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class AppService_SetRunOnOsLoginMode_ParamsDataView {
 public:
  AppService_SetRunOnOsLoginMode_ParamsDataView() = default;

  AppService_SetRunOnOsLoginMode_ParamsDataView(
      internal::AppService_SetRunOnOsLoginMode_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadAppType(UserType* output) const {
    auto data_value = data_->app_type;
    return mojo::internal::Deserialize<::apps::mojom::AppType>(
        data_value, output);
  }
  ::apps::mojom::AppType app_type() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::AppType>(data_->app_type));
  }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  template <typename UserType>
  [[nodiscard]] bool ReadRunOnOsLoginMode(UserType* output) const {
    auto data_value = data_->run_on_os_login_mode;
    return mojo::internal::Deserialize<::apps::mojom::RunOnOsLoginMode>(
        data_value, output);
  }
  ::apps::mojom::RunOnOsLoginMode run_on_os_login_mode() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::RunOnOsLoginMode>(data_->run_on_os_login_mode));
  }
 private:
  internal::AppService_SetRunOnOsLoginMode_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Publisher_Connect_ParamsDataView {
 public:
  Publisher_Connect_ParamsDataView() = default;

  Publisher_Connect_ParamsDataView(
      internal::Publisher_Connect_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeSubscriber() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfacePtrDataView<::apps::mojom::SubscriberInterfaceBase>>(
            &data_->subscriber, &result, message_);
    DCHECK(ret);
    return result;
  }
  inline void GetOptsDataView(
      ConnectOptionsDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadOpts(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::apps::mojom::ConnectOptionsDataView, UserType>(),
    "Attempting to read the optional `opts` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadOpts` instead "
    "of `ReadOpts if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->opts.Get();
    return mojo::internal::Deserialize<::apps::mojom::ConnectOptionsDataView>(
        pointer, output, message_);
  }
 private:
  internal::Publisher_Connect_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Publisher_Launch_ParamsDataView {
 public:
  Publisher_Launch_ParamsDataView() = default;

  Publisher_Launch_ParamsDataView(
      internal::Publisher_Launch_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  int32_t event_flags() const {
    return data_->event_flags;
  }
  template <typename UserType>
  [[nodiscard]] bool ReadLaunchSource(UserType* output) const {
    auto data_value = data_->launch_source;
    return mojo::internal::Deserialize<::apps::mojom::LaunchSource>(
        data_value, output);
  }
  ::apps::mojom::LaunchSource launch_source() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::LaunchSource>(data_->launch_source));
  }
  inline void GetWindowInfoDataView(
      ::apps::mojom::WindowInfoDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadWindowInfo(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::apps::mojom::WindowInfoDataView, UserType>(),
    "Attempting to read the optional `window_info` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadWindowInfo` instead "
    "of `ReadWindowInfo if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->window_info.Get();
    return mojo::internal::Deserialize<::apps::mojom::WindowInfoDataView>(
        pointer, output, message_);
  }
 private:
  internal::Publisher_Launch_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Publisher_LaunchAppWithFiles_ParamsDataView {
 public:
  Publisher_LaunchAppWithFiles_ParamsDataView() = default;

  Publisher_LaunchAppWithFiles_ParamsDataView(
      internal::Publisher_LaunchAppWithFiles_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  int32_t event_flags() const {
    return data_->event_flags;
  }
  template <typename UserType>
  [[nodiscard]] bool ReadLaunchSource(UserType* output) const {
    auto data_value = data_->launch_source;
    return mojo::internal::Deserialize<::apps::mojom::LaunchSource>(
        data_value, output);
  }
  ::apps::mojom::LaunchSource launch_source() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::LaunchSource>(data_->launch_source));
  }
  inline void GetFilePathsDataView(
      ::apps::mojom::FilePathsDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadFilePaths(UserType* output) {
    
    auto* pointer = data_->file_paths.Get();
    return mojo::internal::Deserialize<::apps::mojom::FilePathsDataView>(
        pointer, output, message_);
  }
 private:
  internal::Publisher_LaunchAppWithFiles_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Publisher_LaunchAppWithIntent_ParamsDataView {
 public:
  Publisher_LaunchAppWithIntent_ParamsDataView() = default;

  Publisher_LaunchAppWithIntent_ParamsDataView(
      internal::Publisher_LaunchAppWithIntent_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  int32_t event_flags() const {
    return data_->event_flags;
  }
  inline void GetIntentDataView(
      ::apps::mojom::IntentDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadIntent(UserType* output) {
    
    auto* pointer = data_->intent.Get();
    return mojo::internal::Deserialize<::apps::mojom::IntentDataView>(
        pointer, output, message_);
  }
  template <typename UserType>
  [[nodiscard]] bool ReadLaunchSource(UserType* output) const {
    auto data_value = data_->launch_source;
    return mojo::internal::Deserialize<::apps::mojom::LaunchSource>(
        data_value, output);
  }
  ::apps::mojom::LaunchSource launch_source() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::LaunchSource>(data_->launch_source));
  }
  inline void GetWindowInfoDataView(
      ::apps::mojom::WindowInfoDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadWindowInfo(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::apps::mojom::WindowInfoDataView, UserType>(),
    "Attempting to read the optional `window_info` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadWindowInfo` instead "
    "of `ReadWindowInfo if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->window_info.Get();
    return mojo::internal::Deserialize<::apps::mojom::WindowInfoDataView>(
        pointer, output, message_);
  }
 private:
  internal::Publisher_LaunchAppWithIntent_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Publisher_LaunchAppWithIntent_ResponseParamsDataView {
 public:
  Publisher_LaunchAppWithIntent_ResponseParamsDataView() = default;

  Publisher_LaunchAppWithIntent_ResponseParamsDataView(
      internal::Publisher_LaunchAppWithIntent_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool success() const {
    return data_->success;
  }
 private:
  internal::Publisher_LaunchAppWithIntent_ResponseParams_Data* data_ = nullptr;
};



class Publisher_SetPermission_ParamsDataView {
 public:
  Publisher_SetPermission_ParamsDataView() = default;

  Publisher_SetPermission_ParamsDataView(
      internal::Publisher_SetPermission_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  inline void GetPermissionDataView(
      ::apps::mojom::PermissionDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadPermission(UserType* output) {
    
    auto* pointer = data_->permission.Get();
    return mojo::internal::Deserialize<::apps::mojom::PermissionDataView>(
        pointer, output, message_);
  }
 private:
  internal::Publisher_SetPermission_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Publisher_Uninstall_ParamsDataView {
 public:
  Publisher_Uninstall_ParamsDataView() = default;

  Publisher_Uninstall_ParamsDataView(
      internal::Publisher_Uninstall_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  template <typename UserType>
  [[nodiscard]] bool ReadUninstallSource(UserType* output) const {
    auto data_value = data_->uninstall_source;
    return mojo::internal::Deserialize<::apps::mojom::UninstallSource>(
        data_value, output);
  }
  ::apps::mojom::UninstallSource uninstall_source() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::UninstallSource>(data_->uninstall_source));
  }
  bool clear_site_data() const {
    return data_->clear_site_data;
  }
  bool report_abuse() const {
    return data_->report_abuse;
  }
 private:
  internal::Publisher_Uninstall_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Publisher_PauseApp_ParamsDataView {
 public:
  Publisher_PauseApp_ParamsDataView() = default;

  Publisher_PauseApp_ParamsDataView(
      internal::Publisher_PauseApp_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::Publisher_PauseApp_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Publisher_UnpauseApp_ParamsDataView {
 public:
  Publisher_UnpauseApp_ParamsDataView() = default;

  Publisher_UnpauseApp_ParamsDataView(
      internal::Publisher_UnpauseApp_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::Publisher_UnpauseApp_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Publisher_StopApp_ParamsDataView {
 public:
  Publisher_StopApp_ParamsDataView() = default;

  Publisher_StopApp_ParamsDataView(
      internal::Publisher_StopApp_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::Publisher_StopApp_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Publisher_GetMenuModel_ParamsDataView {
 public:
  Publisher_GetMenuModel_ParamsDataView() = default;

  Publisher_GetMenuModel_ParamsDataView(
      internal::Publisher_GetMenuModel_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  template <typename UserType>
  [[nodiscard]] bool ReadMenuType(UserType* output) const {
    auto data_value = data_->menu_type;
    return mojo::internal::Deserialize<::apps::mojom::MenuType>(
        data_value, output);
  }
  ::apps::mojom::MenuType menu_type() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::MenuType>(data_->menu_type));
  }
  int64_t display_id() const {
    return data_->display_id;
  }
 private:
  internal::Publisher_GetMenuModel_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Publisher_GetMenuModel_ResponseParamsDataView {
 public:
  Publisher_GetMenuModel_ResponseParamsDataView() = default;

  Publisher_GetMenuModel_ResponseParamsDataView(
      internal::Publisher_GetMenuModel_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetMenuItemsDataView(
      ::apps::mojom::MenuItemsDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadMenuItems(UserType* output) {
    
    auto* pointer = data_->menu_items.Get();
    return mojo::internal::Deserialize<::apps::mojom::MenuItemsDataView>(
        pointer, output, message_);
  }
 private:
  internal::Publisher_GetMenuModel_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Publisher_ExecuteContextMenuCommand_ParamsDataView {
 public:
  Publisher_ExecuteContextMenuCommand_ParamsDataView() = default;

  Publisher_ExecuteContextMenuCommand_ParamsDataView(
      internal::Publisher_ExecuteContextMenuCommand_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  int32_t command_id() const {
    return data_->command_id;
  }
  inline void GetShortcutIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadShortcutId(UserType* output) {
    
    auto* pointer = data_->shortcut_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  int64_t display_id() const {
    return data_->display_id;
  }
 private:
  internal::Publisher_ExecuteContextMenuCommand_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Publisher_OpenNativeSettings_ParamsDataView {
 public:
  Publisher_OpenNativeSettings_ParamsDataView() = default;

  Publisher_OpenNativeSettings_ParamsDataView(
      internal::Publisher_OpenNativeSettings_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::Publisher_OpenNativeSettings_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Publisher_OnPreferredAppSet_ParamsDataView {
 public:
  Publisher_OnPreferredAppSet_ParamsDataView() = default;

  Publisher_OnPreferredAppSet_ParamsDataView(
      internal::Publisher_OnPreferredAppSet_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  inline void GetIntentFilterDataView(
      ::apps::mojom::IntentFilterDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadIntentFilter(UserType* output) {
    
    auto* pointer = data_->intent_filter.Get();
    return mojo::internal::Deserialize<::apps::mojom::IntentFilterDataView>(
        pointer, output, message_);
  }
  inline void GetIntentDataView(
      ::apps::mojom::IntentDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadIntent(UserType* output) {
    
    auto* pointer = data_->intent.Get();
    return mojo::internal::Deserialize<::apps::mojom::IntentDataView>(
        pointer, output, message_);
  }
  inline void GetReplacedAppPreferencesDataView(
      ::apps::mojom::ReplacedAppPreferencesDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadReplacedAppPreferences(UserType* output) {
    
    auto* pointer = data_->replaced_app_preferences.Get();
    return mojo::internal::Deserialize<::apps::mojom::ReplacedAppPreferencesDataView>(
        pointer, output, message_);
  }
 private:
  internal::Publisher_OnPreferredAppSet_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Publisher_OnSupportedLinksPreferenceChanged_ParamsDataView {
 public:
  Publisher_OnSupportedLinksPreferenceChanged_ParamsDataView() = default;

  Publisher_OnSupportedLinksPreferenceChanged_ParamsDataView(
      internal::Publisher_OnSupportedLinksPreferenceChanged_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  bool open_in_app() const {
    return data_->open_in_app;
  }
 private:
  internal::Publisher_OnSupportedLinksPreferenceChanged_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Publisher_SetResizeLocked_ParamsDataView {
 public:
  Publisher_SetResizeLocked_ParamsDataView() = default;

  Publisher_SetResizeLocked_ParamsDataView(
      internal::Publisher_SetResizeLocked_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  template <typename UserType>
  [[nodiscard]] bool ReadLocked(UserType* output) const {
    auto data_value = data_->locked;
    return mojo::internal::Deserialize<::apps::mojom::OptionalBool>(
        data_value, output);
  }
  ::apps::mojom::OptionalBool locked() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::OptionalBool>(data_->locked));
  }
 private:
  internal::Publisher_SetResizeLocked_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Publisher_SetWindowMode_ParamsDataView {
 public:
  Publisher_SetWindowMode_ParamsDataView() = default;

  Publisher_SetWindowMode_ParamsDataView(
      internal::Publisher_SetWindowMode_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  template <typename UserType>
  [[nodiscard]] bool ReadWindowMode(UserType* output) const {
    auto data_value = data_->window_mode;
    return mojo::internal::Deserialize<::apps::mojom::WindowMode>(
        data_value, output);
  }
  ::apps::mojom::WindowMode window_mode() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::WindowMode>(data_->window_mode));
  }
 private:
  internal::Publisher_SetWindowMode_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Publisher_SetRunOnOsLoginMode_ParamsDataView {
 public:
  Publisher_SetRunOnOsLoginMode_ParamsDataView() = default;

  Publisher_SetRunOnOsLoginMode_ParamsDataView(
      internal::Publisher_SetRunOnOsLoginMode_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadAppId(UserType* output) {
    
    auto* pointer = data_->app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
  template <typename UserType>
  [[nodiscard]] bool ReadRunOnOsLoginMode(UserType* output) const {
    auto data_value = data_->run_on_os_login_mode;
    return mojo::internal::Deserialize<::apps::mojom::RunOnOsLoginMode>(
        data_value, output);
  }
  ::apps::mojom::RunOnOsLoginMode run_on_os_login_mode() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::RunOnOsLoginMode>(data_->run_on_os_login_mode));
  }
 private:
  internal::Publisher_SetRunOnOsLoginMode_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Subscriber_OnApps_ParamsDataView {
 public:
  Subscriber_OnApps_ParamsDataView() = default;

  Subscriber_OnApps_ParamsDataView(
      internal::Subscriber_OnApps_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetDeltasDataView(
      mojo::ArrayDataView<::apps::mojom::AppDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadDeltas(UserType* output) {
    
    auto* pointer = data_->deltas.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::apps::mojom::AppDataView>>(
        pointer, output, message_);
  }
  template <typename UserType>
  [[nodiscard]] bool ReadAppType(UserType* output) const {
    auto data_value = data_->app_type;
    return mojo::internal::Deserialize<::apps::mojom::AppType>(
        data_value, output);
  }
  ::apps::mojom::AppType app_type() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::apps::mojom::AppType>(data_->app_type));
  }
  bool should_notify_initialized() const {
    return data_->should_notify_initialized;
  }
 private:
  internal::Subscriber_OnApps_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Subscriber_OnCapabilityAccesses_ParamsDataView {
 public:
  Subscriber_OnCapabilityAccesses_ParamsDataView() = default;

  Subscriber_OnCapabilityAccesses_ParamsDataView(
      internal::Subscriber_OnCapabilityAccesses_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetDeltasDataView(
      mojo::ArrayDataView<::apps::mojom::CapabilityAccessDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadDeltas(UserType* output) {
    
    auto* pointer = data_->deltas.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::apps::mojom::CapabilityAccessDataView>>(
        pointer, output, message_);
  }
 private:
  internal::Subscriber_OnCapabilityAccesses_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Subscriber_Clone_ParamsDataView {
 public:
  Subscriber_Clone_ParamsDataView() = default;

  Subscriber_Clone_ParamsDataView(
      internal::Subscriber_Clone_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeReceiver() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfaceRequestDataView<::apps::mojom::SubscriberInterfaceBase>>(
            &data_->receiver, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::Subscriber_Clone_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Subscriber_OnPreferredAppsChanged_ParamsDataView {
 public:
  Subscriber_OnPreferredAppsChanged_ParamsDataView() = default;

  Subscriber_OnPreferredAppsChanged_ParamsDataView(
      internal::Subscriber_OnPreferredAppsChanged_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetChangesDataView(
      ::apps::mojom::PreferredAppChangesDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadChanges(UserType* output) {
    
    auto* pointer = data_->changes.Get();
    return mojo::internal::Deserialize<::apps::mojom::PreferredAppChangesDataView>(
        pointer, output, message_);
  }
 private:
  internal::Subscriber_OnPreferredAppsChanged_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class Subscriber_InitializePreferredApps_ParamsDataView {
 public:
  Subscriber_InitializePreferredApps_ParamsDataView() = default;

  Subscriber_InitializePreferredApps_ParamsDataView(
      internal::Subscriber_InitializePreferredApps_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetPreferredAppsDataView(
      mojo::ArrayDataView<::apps::mojom::PreferredAppDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadPreferredApps(UserType* output) {
    
    auto* pointer = data_->preferred_apps.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::apps::mojom::PreferredAppDataView>>(
        pointer, output, message_);
  }
 private:
  internal::Subscriber_InitializePreferredApps_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};




inline void AppService_RegisterSubscriber_ParamsDataView::GetOptsDataView(
    ConnectOptionsDataView* output) {
  auto pointer = data_->opts.Get();
  *output = ConnectOptionsDataView(pointer, message_);
}


inline void AppService_Launch_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}
inline void AppService_Launch_ParamsDataView::GetWindowInfoDataView(
    ::apps::mojom::WindowInfoDataView* output) {
  auto pointer = data_->window_info.Get();
  *output = ::apps::mojom::WindowInfoDataView(pointer, message_);
}


inline void AppService_LaunchAppWithFiles_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}
inline void AppService_LaunchAppWithFiles_ParamsDataView::GetFilePathsDataView(
    ::apps::mojom::FilePathsDataView* output) {
  auto pointer = data_->file_paths.Get();
  *output = ::apps::mojom::FilePathsDataView(pointer, message_);
}


inline void AppService_LaunchAppWithIntent_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}
inline void AppService_LaunchAppWithIntent_ParamsDataView::GetIntentDataView(
    ::apps::mojom::IntentDataView* output) {
  auto pointer = data_->intent.Get();
  *output = ::apps::mojom::IntentDataView(pointer, message_);
}
inline void AppService_LaunchAppWithIntent_ParamsDataView::GetWindowInfoDataView(
    ::apps::mojom::WindowInfoDataView* output) {
  auto pointer = data_->window_info.Get();
  *output = ::apps::mojom::WindowInfoDataView(pointer, message_);
}




inline void AppService_SetPermission_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}
inline void AppService_SetPermission_ParamsDataView::GetPermissionDataView(
    ::apps::mojom::PermissionDataView* output) {
  auto pointer = data_->permission.Get();
  *output = ::apps::mojom::PermissionDataView(pointer, message_);
}


inline void AppService_Uninstall_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void AppService_PauseApp_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void AppService_UnpauseApp_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void AppService_StopApp_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void AppService_GetMenuModel_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void AppService_GetMenuModel_ResponseParamsDataView::GetMenuItemsDataView(
    ::apps::mojom::MenuItemsDataView* output) {
  auto pointer = data_->menu_items.Get();
  *output = ::apps::mojom::MenuItemsDataView(pointer, message_);
}


inline void AppService_ExecuteContextMenuCommand_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}
inline void AppService_ExecuteContextMenuCommand_ParamsDataView::GetShortcutIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->shortcut_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void AppService_OpenNativeSettings_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void AppService_AddPreferredApp_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}
inline void AppService_AddPreferredApp_ParamsDataView::GetIntentFilterDataView(
    ::apps::mojom::IntentFilterDataView* output) {
  auto pointer = data_->intent_filter.Get();
  *output = ::apps::mojom::IntentFilterDataView(pointer, message_);
}
inline void AppService_AddPreferredApp_ParamsDataView::GetIntentDataView(
    ::apps::mojom::IntentDataView* output) {
  auto pointer = data_->intent.Get();
  *output = ::apps::mojom::IntentDataView(pointer, message_);
}


inline void AppService_RemovePreferredApp_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void AppService_SetSupportedLinksPreference_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}
inline void AppService_SetSupportedLinksPreference_ParamsDataView::GetAllLinkFiltersDataView(
    mojo::ArrayDataView<::apps::mojom::IntentFilterDataView>* output) {
  auto pointer = data_->all_link_filters.Get();
  *output = mojo::ArrayDataView<::apps::mojom::IntentFilterDataView>(pointer, message_);
}


inline void AppService_RemoveSupportedLinksPreference_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void AppService_SetResizeLocked_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void AppService_SetWindowMode_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void AppService_SetRunOnOsLoginMode_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void Publisher_Connect_ParamsDataView::GetOptsDataView(
    ConnectOptionsDataView* output) {
  auto pointer = data_->opts.Get();
  *output = ConnectOptionsDataView(pointer, message_);
}


inline void Publisher_Launch_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}
inline void Publisher_Launch_ParamsDataView::GetWindowInfoDataView(
    ::apps::mojom::WindowInfoDataView* output) {
  auto pointer = data_->window_info.Get();
  *output = ::apps::mojom::WindowInfoDataView(pointer, message_);
}


inline void Publisher_LaunchAppWithFiles_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}
inline void Publisher_LaunchAppWithFiles_ParamsDataView::GetFilePathsDataView(
    ::apps::mojom::FilePathsDataView* output) {
  auto pointer = data_->file_paths.Get();
  *output = ::apps::mojom::FilePathsDataView(pointer, message_);
}


inline void Publisher_LaunchAppWithIntent_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}
inline void Publisher_LaunchAppWithIntent_ParamsDataView::GetIntentDataView(
    ::apps::mojom::IntentDataView* output) {
  auto pointer = data_->intent.Get();
  *output = ::apps::mojom::IntentDataView(pointer, message_);
}
inline void Publisher_LaunchAppWithIntent_ParamsDataView::GetWindowInfoDataView(
    ::apps::mojom::WindowInfoDataView* output) {
  auto pointer = data_->window_info.Get();
  *output = ::apps::mojom::WindowInfoDataView(pointer, message_);
}




inline void Publisher_SetPermission_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}
inline void Publisher_SetPermission_ParamsDataView::GetPermissionDataView(
    ::apps::mojom::PermissionDataView* output) {
  auto pointer = data_->permission.Get();
  *output = ::apps::mojom::PermissionDataView(pointer, message_);
}


inline void Publisher_Uninstall_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void Publisher_PauseApp_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void Publisher_UnpauseApp_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void Publisher_StopApp_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void Publisher_GetMenuModel_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void Publisher_GetMenuModel_ResponseParamsDataView::GetMenuItemsDataView(
    ::apps::mojom::MenuItemsDataView* output) {
  auto pointer = data_->menu_items.Get();
  *output = ::apps::mojom::MenuItemsDataView(pointer, message_);
}


inline void Publisher_ExecuteContextMenuCommand_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}
inline void Publisher_ExecuteContextMenuCommand_ParamsDataView::GetShortcutIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->shortcut_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void Publisher_OpenNativeSettings_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void Publisher_OnPreferredAppSet_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}
inline void Publisher_OnPreferredAppSet_ParamsDataView::GetIntentFilterDataView(
    ::apps::mojom::IntentFilterDataView* output) {
  auto pointer = data_->intent_filter.Get();
  *output = ::apps::mojom::IntentFilterDataView(pointer, message_);
}
inline void Publisher_OnPreferredAppSet_ParamsDataView::GetIntentDataView(
    ::apps::mojom::IntentDataView* output) {
  auto pointer = data_->intent.Get();
  *output = ::apps::mojom::IntentDataView(pointer, message_);
}
inline void Publisher_OnPreferredAppSet_ParamsDataView::GetReplacedAppPreferencesDataView(
    ::apps::mojom::ReplacedAppPreferencesDataView* output) {
  auto pointer = data_->replaced_app_preferences.Get();
  *output = ::apps::mojom::ReplacedAppPreferencesDataView(pointer, message_);
}


inline void Publisher_OnSupportedLinksPreferenceChanged_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void Publisher_SetResizeLocked_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void Publisher_SetWindowMode_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void Publisher_SetRunOnOsLoginMode_ParamsDataView::GetAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void Subscriber_OnApps_ParamsDataView::GetDeltasDataView(
    mojo::ArrayDataView<::apps::mojom::AppDataView>* output) {
  auto pointer = data_->deltas.Get();
  *output = mojo::ArrayDataView<::apps::mojom::AppDataView>(pointer, message_);
}


inline void Subscriber_OnCapabilityAccesses_ParamsDataView::GetDeltasDataView(
    mojo::ArrayDataView<::apps::mojom::CapabilityAccessDataView>* output) {
  auto pointer = data_->deltas.Get();
  *output = mojo::ArrayDataView<::apps::mojom::CapabilityAccessDataView>(pointer, message_);
}




inline void Subscriber_OnPreferredAppsChanged_ParamsDataView::GetChangesDataView(
    ::apps::mojom::PreferredAppChangesDataView* output) {
  auto pointer = data_->changes.Get();
  *output = ::apps::mojom::PreferredAppChangesDataView(pointer, message_);
}


inline void Subscriber_InitializePreferredApps_ParamsDataView::GetPreferredAppsDataView(
    mojo::ArrayDataView<::apps::mojom::PreferredAppDataView>* output) {
  auto pointer = data_->preferred_apps.Get();
  *output = mojo::ArrayDataView<::apps::mojom::PreferredAppDataView>(pointer, message_);
}

}  // namespace mojom
}  // namespace apps

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // COMPONENTS_SERVICES_APP_SERVICE_PUBLIC_MOJOM_APP_SERVICE_MOJOM_PARAMS_DATA_H_