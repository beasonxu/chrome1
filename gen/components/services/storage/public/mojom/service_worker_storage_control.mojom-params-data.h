// components/services/storage/public/mojom/service_worker_storage_control.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_SERVICES_STORAGE_PUBLIC_MOJOM_SERVICE_WORKER_STORAGE_CONTROL_MOJOM_PARAMS_DATA_H_
#define COMPONENTS_SERVICES_STORAGE_PUBLIC_MOJOM_SERVICE_WORKER_STORAGE_CONTROL_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace storage {
namespace mojom {
namespace internal {

class ValidationContext;
class  ServiceWorkerDataPipeStateNotifier_OnComplete_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerDataPipeStateNotifier_OnComplete_Params_Data>;

  ServiceWorkerDataPipeStateNotifier_OnComplete_Params_Data();
  ~ServiceWorkerDataPipeStateNotifier_OnComplete_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerDataPipeStateNotifier_OnComplete_Params_Data) == 16,
              "Bad sizeof(ServiceWorkerDataPipeStateNotifier_OnComplete_Params_Data)");
class  ServiceWorkerResourceReader_ReadResponseHead_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerResourceReader_ReadResponseHead_Params_Data>;

  ServiceWorkerResourceReader_ReadResponseHead_Params_Data();
  ~ServiceWorkerResourceReader_ReadResponseHead_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerResourceReader_ReadResponseHead_Params_Data) == 8,
              "Bad sizeof(ServiceWorkerResourceReader_ReadResponseHead_Params_Data)");
class  ServiceWorkerResourceReader_ReadResponseHead_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t pad0_[4];
  mojo::internal::Pointer<::network::mojom::internal::URLResponseHead_Data> response_head;
  ::mojo_base::mojom::internal::BigBuffer_Data metadata;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerResourceReader_ReadResponseHead_ResponseParams_Data>;

  ServiceWorkerResourceReader_ReadResponseHead_ResponseParams_Data();
  ~ServiceWorkerResourceReader_ReadResponseHead_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerResourceReader_ReadResponseHead_ResponseParams_Data) == 40,
              "Bad sizeof(ServiceWorkerResourceReader_ReadResponseHead_ResponseParams_Data)");
class  ServiceWorkerResourceReader_ReadData_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t size;
  mojo::internal::Interface_Data notifier;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerResourceReader_ReadData_Params_Data>;

  ServiceWorkerResourceReader_ReadData_Params_Data();
  ~ServiceWorkerResourceReader_ReadData_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerResourceReader_ReadData_Params_Data) == 24,
              "Bad sizeof(ServiceWorkerResourceReader_ReadData_Params_Data)");
class  ServiceWorkerResourceReader_ReadData_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Handle_Data pipe;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerResourceReader_ReadData_ResponseParams_Data>;

  ServiceWorkerResourceReader_ReadData_ResponseParams_Data();
  ~ServiceWorkerResourceReader_ReadData_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerResourceReader_ReadData_ResponseParams_Data) == 16,
              "Bad sizeof(ServiceWorkerResourceReader_ReadData_ResponseParams_Data)");
class  ServiceWorkerResourceWriter_WriteResponseHead_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::network::mojom::internal::URLResponseHead_Data> response_head;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerResourceWriter_WriteResponseHead_Params_Data>;

  ServiceWorkerResourceWriter_WriteResponseHead_Params_Data();
  ~ServiceWorkerResourceWriter_WriteResponseHead_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerResourceWriter_WriteResponseHead_Params_Data) == 16,
              "Bad sizeof(ServiceWorkerResourceWriter_WriteResponseHead_Params_Data)");
class  ServiceWorkerResourceWriter_WriteResponseHead_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerResourceWriter_WriteResponseHead_ResponseParams_Data>;

  ServiceWorkerResourceWriter_WriteResponseHead_ResponseParams_Data();
  ~ServiceWorkerResourceWriter_WriteResponseHead_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerResourceWriter_WriteResponseHead_ResponseParams_Data) == 16,
              "Bad sizeof(ServiceWorkerResourceWriter_WriteResponseHead_ResponseParams_Data)");
class  ServiceWorkerResourceWriter_WriteData_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  ::mojo_base::mojom::internal::BigBuffer_Data data;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerResourceWriter_WriteData_Params_Data>;

  ServiceWorkerResourceWriter_WriteData_Params_Data();
  ~ServiceWorkerResourceWriter_WriteData_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerResourceWriter_WriteData_Params_Data) == 24,
              "Bad sizeof(ServiceWorkerResourceWriter_WriteData_Params_Data)");
class  ServiceWorkerResourceWriter_WriteData_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerResourceWriter_WriteData_ResponseParams_Data>;

  ServiceWorkerResourceWriter_WriteData_ResponseParams_Data();
  ~ServiceWorkerResourceWriter_WriteData_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerResourceWriter_WriteData_ResponseParams_Data) == 16,
              "Bad sizeof(ServiceWorkerResourceWriter_WriteData_ResponseParams_Data)");
class  ServiceWorkerResourceMetadataWriter_WriteMetadata_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  ::mojo_base::mojom::internal::BigBuffer_Data data;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerResourceMetadataWriter_WriteMetadata_Params_Data>;

  ServiceWorkerResourceMetadataWriter_WriteMetadata_Params_Data();
  ~ServiceWorkerResourceMetadataWriter_WriteMetadata_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerResourceMetadataWriter_WriteMetadata_Params_Data) == 24,
              "Bad sizeof(ServiceWorkerResourceMetadataWriter_WriteMetadata_Params_Data)");
class  ServiceWorkerResourceMetadataWriter_WriteMetadata_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerResourceMetadataWriter_WriteMetadata_ResponseParams_Data>;

  ServiceWorkerResourceMetadataWriter_WriteMetadata_ResponseParams_Data();
  ~ServiceWorkerResourceMetadataWriter_WriteMetadata_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerResourceMetadataWriter_WriteMetadata_ResponseParams_Data) == 16,
              "Bad sizeof(ServiceWorkerResourceMetadataWriter_WriteMetadata_ResponseParams_Data)");
class  ServiceWorkerStorageControl_Disable_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_Disable_Params_Data>;

  ServiceWorkerStorageControl_Disable_Params_Data();
  ~ServiceWorkerStorageControl_Disable_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_Disable_Params_Data) == 8,
              "Bad sizeof(ServiceWorkerStorageControl_Disable_Params_Data)");
class  ServiceWorkerStorageControl_Disable_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_Disable_ResponseParams_Data>;

  ServiceWorkerStorageControl_Disable_ResponseParams_Data();
  ~ServiceWorkerStorageControl_Disable_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_Disable_ResponseParams_Data) == 8,
              "Bad sizeof(ServiceWorkerStorageControl_Disable_ResponseParams_Data)");
class  ServiceWorkerStorageControl_Delete_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_Delete_Params_Data>;

  ServiceWorkerStorageControl_Delete_Params_Data();
  ~ServiceWorkerStorageControl_Delete_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_Delete_Params_Data) == 8,
              "Bad sizeof(ServiceWorkerStorageControl_Delete_Params_Data)");
class  ServiceWorkerStorageControl_Delete_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_Delete_ResponseParams_Data>;

  ServiceWorkerStorageControl_Delete_ResponseParams_Data();
  ~ServiceWorkerStorageControl_Delete_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_Delete_ResponseParams_Data) == 16,
              "Bad sizeof(ServiceWorkerStorageControl_Delete_ResponseParams_Data)");
class  ServiceWorkerStorageControl_Recover_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<internal::ServiceWorkerLiveVersionInfo_Data>>> versions;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_Recover_Params_Data>;

  ServiceWorkerStorageControl_Recover_Params_Data();
  ~ServiceWorkerStorageControl_Recover_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_Recover_Params_Data) == 16,
              "Bad sizeof(ServiceWorkerStorageControl_Recover_Params_Data)");
class  ServiceWorkerStorageControl_Recover_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_Recover_ResponseParams_Data>;

  ServiceWorkerStorageControl_Recover_ResponseParams_Data();
  ~ServiceWorkerStorageControl_Recover_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_Recover_ResponseParams_Data) == 8,
              "Bad sizeof(ServiceWorkerStorageControl_Recover_ResponseParams_Data)");
class  ServiceWorkerStorageControl_GetRegisteredStorageKeys_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetRegisteredStorageKeys_Params_Data>;

  ServiceWorkerStorageControl_GetRegisteredStorageKeys_Params_Data();
  ~ServiceWorkerStorageControl_GetRegisteredStorageKeys_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetRegisteredStorageKeys_Params_Data) == 8,
              "Bad sizeof(ServiceWorkerStorageControl_GetRegisteredStorageKeys_Params_Data)");
class  ServiceWorkerStorageControl_GetRegisteredStorageKeys_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<::blink::mojom::internal::StorageKey_Data>>> keys;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetRegisteredStorageKeys_ResponseParams_Data>;

  ServiceWorkerStorageControl_GetRegisteredStorageKeys_ResponseParams_Data();
  ~ServiceWorkerStorageControl_GetRegisteredStorageKeys_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetRegisteredStorageKeys_ResponseParams_Data) == 16,
              "Bad sizeof(ServiceWorkerStorageControl_GetRegisteredStorageKeys_ResponseParams_Data)");
class  ServiceWorkerStorageControl_FindRegistrationForClientUrl_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::url::mojom::internal::Url_Data> client_url;
  mojo::internal::Pointer<::blink::mojom::internal::StorageKey_Data> key;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_FindRegistrationForClientUrl_Params_Data>;

  ServiceWorkerStorageControl_FindRegistrationForClientUrl_Params_Data();
  ~ServiceWorkerStorageControl_FindRegistrationForClientUrl_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_FindRegistrationForClientUrl_Params_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_FindRegistrationForClientUrl_Params_Data)");
class  ServiceWorkerStorageControl_FindRegistrationForClientUrl_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t pad0_[4];
  mojo::internal::Pointer<internal::ServiceWorkerFindRegistrationResult_Data> result;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_FindRegistrationForClientUrl_ResponseParams_Data>;

  ServiceWorkerStorageControl_FindRegistrationForClientUrl_ResponseParams_Data();
  ~ServiceWorkerStorageControl_FindRegistrationForClientUrl_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_FindRegistrationForClientUrl_ResponseParams_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_FindRegistrationForClientUrl_ResponseParams_Data)");
class  ServiceWorkerStorageControl_FindRegistrationForScope_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::url::mojom::internal::Url_Data> scope;
  mojo::internal::Pointer<::blink::mojom::internal::StorageKey_Data> key;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_FindRegistrationForScope_Params_Data>;

  ServiceWorkerStorageControl_FindRegistrationForScope_Params_Data();
  ~ServiceWorkerStorageControl_FindRegistrationForScope_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_FindRegistrationForScope_Params_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_FindRegistrationForScope_Params_Data)");
class  ServiceWorkerStorageControl_FindRegistrationForScope_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t pad0_[4];
  mojo::internal::Pointer<internal::ServiceWorkerFindRegistrationResult_Data> result;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_FindRegistrationForScope_ResponseParams_Data>;

  ServiceWorkerStorageControl_FindRegistrationForScope_ResponseParams_Data();
  ~ServiceWorkerStorageControl_FindRegistrationForScope_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_FindRegistrationForScope_ResponseParams_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_FindRegistrationForScope_ResponseParams_Data)");
class  ServiceWorkerStorageControl_FindRegistrationForId_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t registration_id;
  mojo::internal::Pointer<::blink::mojom::internal::StorageKey_Data> key;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_FindRegistrationForId_Params_Data>;

  ServiceWorkerStorageControl_FindRegistrationForId_Params_Data();
  ~ServiceWorkerStorageControl_FindRegistrationForId_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_FindRegistrationForId_Params_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_FindRegistrationForId_Params_Data)");
class  ServiceWorkerStorageControl_FindRegistrationForId_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t pad0_[4];
  mojo::internal::Pointer<internal::ServiceWorkerFindRegistrationResult_Data> result;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_FindRegistrationForId_ResponseParams_Data>;

  ServiceWorkerStorageControl_FindRegistrationForId_ResponseParams_Data();
  ~ServiceWorkerStorageControl_FindRegistrationForId_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_FindRegistrationForId_ResponseParams_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_FindRegistrationForId_ResponseParams_Data)");
class  ServiceWorkerStorageControl_GetRegistrationsForStorageKey_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::blink::mojom::internal::StorageKey_Data> key;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetRegistrationsForStorageKey_Params_Data>;

  ServiceWorkerStorageControl_GetRegistrationsForStorageKey_Params_Data();
  ~ServiceWorkerStorageControl_GetRegistrationsForStorageKey_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetRegistrationsForStorageKey_Params_Data) == 16,
              "Bad sizeof(ServiceWorkerStorageControl_GetRegistrationsForStorageKey_Params_Data)");
class  ServiceWorkerStorageControl_GetRegistrationsForStorageKey_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<internal::ServiceWorkerFindRegistrationResult_Data>>> registrations;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetRegistrationsForStorageKey_ResponseParams_Data>;

  ServiceWorkerStorageControl_GetRegistrationsForStorageKey_ResponseParams_Data();
  ~ServiceWorkerStorageControl_GetRegistrationsForStorageKey_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetRegistrationsForStorageKey_ResponseParams_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_GetRegistrationsForStorageKey_ResponseParams_Data)");
class  ServiceWorkerStorageControl_GetUsageForStorageKey_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::blink::mojom::internal::StorageKey_Data> key;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetUsageForStorageKey_Params_Data>;

  ServiceWorkerStorageControl_GetUsageForStorageKey_Params_Data();
  ~ServiceWorkerStorageControl_GetUsageForStorageKey_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetUsageForStorageKey_Params_Data) == 16,
              "Bad sizeof(ServiceWorkerStorageControl_GetUsageForStorageKey_Params_Data)");
class  ServiceWorkerStorageControl_GetUsageForStorageKey_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t pad0_[4];
  int64_t usage;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetUsageForStorageKey_ResponseParams_Data>;

  ServiceWorkerStorageControl_GetUsageForStorageKey_ResponseParams_Data();
  ~ServiceWorkerStorageControl_GetUsageForStorageKey_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetUsageForStorageKey_ResponseParams_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_GetUsageForStorageKey_ResponseParams_Data)");
class  ServiceWorkerStorageControl_GetAllRegistrationsDeprecated_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetAllRegistrationsDeprecated_Params_Data>;

  ServiceWorkerStorageControl_GetAllRegistrationsDeprecated_Params_Data();
  ~ServiceWorkerStorageControl_GetAllRegistrationsDeprecated_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetAllRegistrationsDeprecated_Params_Data) == 8,
              "Bad sizeof(ServiceWorkerStorageControl_GetAllRegistrationsDeprecated_Params_Data)");
class  ServiceWorkerStorageControl_GetAllRegistrationsDeprecated_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<::storage::mojom::internal::ServiceWorkerRegistrationData_Data>>> registrations;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetAllRegistrationsDeprecated_ResponseParams_Data>;

  ServiceWorkerStorageControl_GetAllRegistrationsDeprecated_ResponseParams_Data();
  ~ServiceWorkerStorageControl_GetAllRegistrationsDeprecated_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetAllRegistrationsDeprecated_ResponseParams_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_GetAllRegistrationsDeprecated_ResponseParams_Data)");
class  ServiceWorkerStorageControl_StoreRegistration_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::storage::mojom::internal::ServiceWorkerRegistrationData_Data> registration;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<::storage::mojom::internal::ServiceWorkerResourceRecord_Data>>> resources;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_StoreRegistration_Params_Data>;

  ServiceWorkerStorageControl_StoreRegistration_Params_Data();
  ~ServiceWorkerStorageControl_StoreRegistration_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_StoreRegistration_Params_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_StoreRegistration_Params_Data)");
class  ServiceWorkerStorageControl_StoreRegistration_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t pad0_[4];
  uint64_t deleted_resources_size;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_StoreRegistration_ResponseParams_Data>;

  ServiceWorkerStorageControl_StoreRegistration_ResponseParams_Data();
  ~ServiceWorkerStorageControl_StoreRegistration_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_StoreRegistration_ResponseParams_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_StoreRegistration_ResponseParams_Data)");
class  ServiceWorkerStorageControl_DeleteRegistration_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t registration_id;
  mojo::internal::Pointer<::blink::mojom::internal::StorageKey_Data> key;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_DeleteRegistration_Params_Data>;

  ServiceWorkerStorageControl_DeleteRegistration_Params_Data();
  ~ServiceWorkerStorageControl_DeleteRegistration_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_DeleteRegistration_Params_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_DeleteRegistration_Params_Data)");
class  ServiceWorkerStorageControl_DeleteRegistration_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  int32_t storage_key_state;
  uint64_t deleted_resources_size;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_DeleteRegistration_ResponseParams_Data>;

  ServiceWorkerStorageControl_DeleteRegistration_ResponseParams_Data();
  ~ServiceWorkerStorageControl_DeleteRegistration_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_DeleteRegistration_ResponseParams_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_DeleteRegistration_ResponseParams_Data)");
class  ServiceWorkerStorageControl_UpdateToActiveState_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t registration_id;
  mojo::internal::Pointer<::blink::mojom::internal::StorageKey_Data> key;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_UpdateToActiveState_Params_Data>;

  ServiceWorkerStorageControl_UpdateToActiveState_Params_Data();
  ~ServiceWorkerStorageControl_UpdateToActiveState_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_UpdateToActiveState_Params_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_UpdateToActiveState_Params_Data)");
class  ServiceWorkerStorageControl_UpdateToActiveState_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_UpdateToActiveState_ResponseParams_Data>;

  ServiceWorkerStorageControl_UpdateToActiveState_ResponseParams_Data();
  ~ServiceWorkerStorageControl_UpdateToActiveState_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_UpdateToActiveState_ResponseParams_Data) == 16,
              "Bad sizeof(ServiceWorkerStorageControl_UpdateToActiveState_ResponseParams_Data)");
class  ServiceWorkerStorageControl_UpdateLastUpdateCheckTime_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t registration_id;
  mojo::internal::Pointer<::blink::mojom::internal::StorageKey_Data> key;
  mojo::internal::Pointer<::mojo_base::mojom::internal::Time_Data> last_update_check_time;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_UpdateLastUpdateCheckTime_Params_Data>;

  ServiceWorkerStorageControl_UpdateLastUpdateCheckTime_Params_Data();
  ~ServiceWorkerStorageControl_UpdateLastUpdateCheckTime_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_UpdateLastUpdateCheckTime_Params_Data) == 32,
              "Bad sizeof(ServiceWorkerStorageControl_UpdateLastUpdateCheckTime_Params_Data)");
class  ServiceWorkerStorageControl_UpdateLastUpdateCheckTime_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_UpdateLastUpdateCheckTime_ResponseParams_Data>;

  ServiceWorkerStorageControl_UpdateLastUpdateCheckTime_ResponseParams_Data();
  ~ServiceWorkerStorageControl_UpdateLastUpdateCheckTime_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_UpdateLastUpdateCheckTime_ResponseParams_Data) == 16,
              "Bad sizeof(ServiceWorkerStorageControl_UpdateLastUpdateCheckTime_ResponseParams_Data)");
class  ServiceWorkerStorageControl_UpdateNavigationPreloadEnabled_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t registration_id;
  mojo::internal::Pointer<::blink::mojom::internal::StorageKey_Data> key;
  uint8_t enable : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_UpdateNavigationPreloadEnabled_Params_Data>;

  ServiceWorkerStorageControl_UpdateNavigationPreloadEnabled_Params_Data();
  ~ServiceWorkerStorageControl_UpdateNavigationPreloadEnabled_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_UpdateNavigationPreloadEnabled_Params_Data) == 32,
              "Bad sizeof(ServiceWorkerStorageControl_UpdateNavigationPreloadEnabled_Params_Data)");
class  ServiceWorkerStorageControl_UpdateNavigationPreloadEnabled_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_UpdateNavigationPreloadEnabled_ResponseParams_Data>;

  ServiceWorkerStorageControl_UpdateNavigationPreloadEnabled_ResponseParams_Data();
  ~ServiceWorkerStorageControl_UpdateNavigationPreloadEnabled_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_UpdateNavigationPreloadEnabled_ResponseParams_Data) == 16,
              "Bad sizeof(ServiceWorkerStorageControl_UpdateNavigationPreloadEnabled_ResponseParams_Data)");
class  ServiceWorkerStorageControl_UpdateNavigationPreloadHeader_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t registration_id;
  mojo::internal::Pointer<::blink::mojom::internal::StorageKey_Data> key;
  mojo::internal::Pointer<mojo::internal::String_Data> value;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_UpdateNavigationPreloadHeader_Params_Data>;

  ServiceWorkerStorageControl_UpdateNavigationPreloadHeader_Params_Data();
  ~ServiceWorkerStorageControl_UpdateNavigationPreloadHeader_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_UpdateNavigationPreloadHeader_Params_Data) == 32,
              "Bad sizeof(ServiceWorkerStorageControl_UpdateNavigationPreloadHeader_Params_Data)");
class  ServiceWorkerStorageControl_UpdateNavigationPreloadHeader_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_UpdateNavigationPreloadHeader_ResponseParams_Data>;

  ServiceWorkerStorageControl_UpdateNavigationPreloadHeader_ResponseParams_Data();
  ~ServiceWorkerStorageControl_UpdateNavigationPreloadHeader_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_UpdateNavigationPreloadHeader_ResponseParams_Data) == 16,
              "Bad sizeof(ServiceWorkerStorageControl_UpdateNavigationPreloadHeader_ResponseParams_Data)");
class  ServiceWorkerStorageControl_GetNewRegistrationId_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetNewRegistrationId_Params_Data>;

  ServiceWorkerStorageControl_GetNewRegistrationId_Params_Data();
  ~ServiceWorkerStorageControl_GetNewRegistrationId_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetNewRegistrationId_Params_Data) == 8,
              "Bad sizeof(ServiceWorkerStorageControl_GetNewRegistrationId_Params_Data)");
class  ServiceWorkerStorageControl_GetNewRegistrationId_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t registration_id;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetNewRegistrationId_ResponseParams_Data>;

  ServiceWorkerStorageControl_GetNewRegistrationId_ResponseParams_Data();
  ~ServiceWorkerStorageControl_GetNewRegistrationId_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetNewRegistrationId_ResponseParams_Data) == 16,
              "Bad sizeof(ServiceWorkerStorageControl_GetNewRegistrationId_ResponseParams_Data)");
class  ServiceWorkerStorageControl_GetNewVersionId_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetNewVersionId_Params_Data>;

  ServiceWorkerStorageControl_GetNewVersionId_Params_Data();
  ~ServiceWorkerStorageControl_GetNewVersionId_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetNewVersionId_Params_Data) == 8,
              "Bad sizeof(ServiceWorkerStorageControl_GetNewVersionId_Params_Data)");
class  ServiceWorkerStorageControl_GetNewVersionId_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t version_id;
  mojo::internal::Interface_Data version_reference;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetNewVersionId_ResponseParams_Data>;

  ServiceWorkerStorageControl_GetNewVersionId_ResponseParams_Data();
  ~ServiceWorkerStorageControl_GetNewVersionId_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetNewVersionId_ResponseParams_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_GetNewVersionId_ResponseParams_Data)");
class  ServiceWorkerStorageControl_GetNewResourceId_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetNewResourceId_Params_Data>;

  ServiceWorkerStorageControl_GetNewResourceId_Params_Data();
  ~ServiceWorkerStorageControl_GetNewResourceId_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetNewResourceId_Params_Data) == 8,
              "Bad sizeof(ServiceWorkerStorageControl_GetNewResourceId_Params_Data)");
class  ServiceWorkerStorageControl_GetNewResourceId_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t resource_id;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetNewResourceId_ResponseParams_Data>;

  ServiceWorkerStorageControl_GetNewResourceId_ResponseParams_Data();
  ~ServiceWorkerStorageControl_GetNewResourceId_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetNewResourceId_ResponseParams_Data) == 16,
              "Bad sizeof(ServiceWorkerStorageControl_GetNewResourceId_ResponseParams_Data)");
class  ServiceWorkerStorageControl_CreateResourceReader_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t resource_id;
  mojo::internal::Handle_Data reader;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_CreateResourceReader_Params_Data>;

  ServiceWorkerStorageControl_CreateResourceReader_Params_Data();
  ~ServiceWorkerStorageControl_CreateResourceReader_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_CreateResourceReader_Params_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_CreateResourceReader_Params_Data)");
class  ServiceWorkerStorageControl_CreateResourceWriter_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t resource_id;
  mojo::internal::Handle_Data writer;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_CreateResourceWriter_Params_Data>;

  ServiceWorkerStorageControl_CreateResourceWriter_Params_Data();
  ~ServiceWorkerStorageControl_CreateResourceWriter_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_CreateResourceWriter_Params_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_CreateResourceWriter_Params_Data)");
class  ServiceWorkerStorageControl_CreateResourceMetadataWriter_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t resource_id;
  mojo::internal::Handle_Data writer;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_CreateResourceMetadataWriter_Params_Data>;

  ServiceWorkerStorageControl_CreateResourceMetadataWriter_Params_Data();
  ~ServiceWorkerStorageControl_CreateResourceMetadataWriter_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_CreateResourceMetadataWriter_Params_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_CreateResourceMetadataWriter_Params_Data)");
class  ServiceWorkerStorageControl_StoreUncommittedResourceId_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t resource_id;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_StoreUncommittedResourceId_Params_Data>;

  ServiceWorkerStorageControl_StoreUncommittedResourceId_Params_Data();
  ~ServiceWorkerStorageControl_StoreUncommittedResourceId_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_StoreUncommittedResourceId_Params_Data) == 16,
              "Bad sizeof(ServiceWorkerStorageControl_StoreUncommittedResourceId_Params_Data)");
class  ServiceWorkerStorageControl_StoreUncommittedResourceId_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_StoreUncommittedResourceId_ResponseParams_Data>;

  ServiceWorkerStorageControl_StoreUncommittedResourceId_ResponseParams_Data();
  ~ServiceWorkerStorageControl_StoreUncommittedResourceId_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_StoreUncommittedResourceId_ResponseParams_Data) == 16,
              "Bad sizeof(ServiceWorkerStorageControl_StoreUncommittedResourceId_ResponseParams_Data)");
class  ServiceWorkerStorageControl_DoomUncommittedResources_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Array_Data<int64_t>> resource_ids;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_DoomUncommittedResources_Params_Data>;

  ServiceWorkerStorageControl_DoomUncommittedResources_Params_Data();
  ~ServiceWorkerStorageControl_DoomUncommittedResources_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_DoomUncommittedResources_Params_Data) == 16,
              "Bad sizeof(ServiceWorkerStorageControl_DoomUncommittedResources_Params_Data)");
class  ServiceWorkerStorageControl_DoomUncommittedResources_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_DoomUncommittedResources_ResponseParams_Data>;

  ServiceWorkerStorageControl_DoomUncommittedResources_ResponseParams_Data();
  ~ServiceWorkerStorageControl_DoomUncommittedResources_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_DoomUncommittedResources_ResponseParams_Data) == 16,
              "Bad sizeof(ServiceWorkerStorageControl_DoomUncommittedResources_ResponseParams_Data)");
class  ServiceWorkerStorageControl_GetUserData_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t registration_id;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<mojo::internal::String_Data>>> keys;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetUserData_Params_Data>;

  ServiceWorkerStorageControl_GetUserData_Params_Data();
  ~ServiceWorkerStorageControl_GetUserData_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetUserData_Params_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_GetUserData_Params_Data)");
class  ServiceWorkerStorageControl_GetUserData_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<mojo::internal::String_Data>>> values;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetUserData_ResponseParams_Data>;

  ServiceWorkerStorageControl_GetUserData_ResponseParams_Data();
  ~ServiceWorkerStorageControl_GetUserData_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetUserData_ResponseParams_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_GetUserData_ResponseParams_Data)");
class  ServiceWorkerStorageControl_StoreUserData_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t registration_id;
  mojo::internal::Pointer<::blink::mojom::internal::StorageKey_Data> key;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<internal::ServiceWorkerUserData_Data>>> user_data;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_StoreUserData_Params_Data>;

  ServiceWorkerStorageControl_StoreUserData_Params_Data();
  ~ServiceWorkerStorageControl_StoreUserData_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_StoreUserData_Params_Data) == 32,
              "Bad sizeof(ServiceWorkerStorageControl_StoreUserData_Params_Data)");
class  ServiceWorkerStorageControl_StoreUserData_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_StoreUserData_ResponseParams_Data>;

  ServiceWorkerStorageControl_StoreUserData_ResponseParams_Data();
  ~ServiceWorkerStorageControl_StoreUserData_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_StoreUserData_ResponseParams_Data) == 16,
              "Bad sizeof(ServiceWorkerStorageControl_StoreUserData_ResponseParams_Data)");
class  ServiceWorkerStorageControl_ClearUserData_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t registration_id;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<mojo::internal::String_Data>>> keys;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_ClearUserData_Params_Data>;

  ServiceWorkerStorageControl_ClearUserData_Params_Data();
  ~ServiceWorkerStorageControl_ClearUserData_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_ClearUserData_Params_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_ClearUserData_Params_Data)");
class  ServiceWorkerStorageControl_ClearUserData_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_ClearUserData_ResponseParams_Data>;

  ServiceWorkerStorageControl_ClearUserData_ResponseParams_Data();
  ~ServiceWorkerStorageControl_ClearUserData_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_ClearUserData_ResponseParams_Data) == 16,
              "Bad sizeof(ServiceWorkerStorageControl_ClearUserData_ResponseParams_Data)");
class  ServiceWorkerStorageControl_GetUserDataByKeyPrefix_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t registration_id;
  mojo::internal::Pointer<mojo::internal::String_Data> key_prefix;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetUserDataByKeyPrefix_Params_Data>;

  ServiceWorkerStorageControl_GetUserDataByKeyPrefix_Params_Data();
  ~ServiceWorkerStorageControl_GetUserDataByKeyPrefix_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetUserDataByKeyPrefix_Params_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_GetUserDataByKeyPrefix_Params_Data)");
class  ServiceWorkerStorageControl_GetUserDataByKeyPrefix_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<mojo::internal::String_Data>>> values;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetUserDataByKeyPrefix_ResponseParams_Data>;

  ServiceWorkerStorageControl_GetUserDataByKeyPrefix_ResponseParams_Data();
  ~ServiceWorkerStorageControl_GetUserDataByKeyPrefix_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetUserDataByKeyPrefix_ResponseParams_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_GetUserDataByKeyPrefix_ResponseParams_Data)");
class  ServiceWorkerStorageControl_GetUserKeysAndDataByKeyPrefix_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t registration_id;
  mojo::internal::Pointer<mojo::internal::String_Data> key_prefix;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetUserKeysAndDataByKeyPrefix_Params_Data>;

  ServiceWorkerStorageControl_GetUserKeysAndDataByKeyPrefix_Params_Data();
  ~ServiceWorkerStorageControl_GetUserKeysAndDataByKeyPrefix_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetUserKeysAndDataByKeyPrefix_Params_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_GetUserKeysAndDataByKeyPrefix_Params_Data)");
class  ServiceWorkerStorageControl_GetUserKeysAndDataByKeyPrefix_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::Map_Data<mojo::internal::Pointer<mojo::internal::String_Data>, mojo::internal::Pointer<mojo::internal::String_Data>>> user_data;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetUserKeysAndDataByKeyPrefix_ResponseParams_Data>;

  ServiceWorkerStorageControl_GetUserKeysAndDataByKeyPrefix_ResponseParams_Data();
  ~ServiceWorkerStorageControl_GetUserKeysAndDataByKeyPrefix_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetUserKeysAndDataByKeyPrefix_ResponseParams_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_GetUserKeysAndDataByKeyPrefix_ResponseParams_Data)");
class  ServiceWorkerStorageControl_ClearUserDataByKeyPrefixes_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t registratation_id;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<mojo::internal::String_Data>>> key_prefixes;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_ClearUserDataByKeyPrefixes_Params_Data>;

  ServiceWorkerStorageControl_ClearUserDataByKeyPrefixes_Params_Data();
  ~ServiceWorkerStorageControl_ClearUserDataByKeyPrefixes_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_ClearUserDataByKeyPrefixes_Params_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_ClearUserDataByKeyPrefixes_Params_Data)");
class  ServiceWorkerStorageControl_ClearUserDataByKeyPrefixes_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_ClearUserDataByKeyPrefixes_ResponseParams_Data>;

  ServiceWorkerStorageControl_ClearUserDataByKeyPrefixes_ResponseParams_Data();
  ~ServiceWorkerStorageControl_ClearUserDataByKeyPrefixes_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_ClearUserDataByKeyPrefixes_ResponseParams_Data) == 16,
              "Bad sizeof(ServiceWorkerStorageControl_ClearUserDataByKeyPrefixes_ResponseParams_Data)");
class  ServiceWorkerStorageControl_GetUserDataForAllRegistrations_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> key;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetUserDataForAllRegistrations_Params_Data>;

  ServiceWorkerStorageControl_GetUserDataForAllRegistrations_Params_Data();
  ~ServiceWorkerStorageControl_GetUserDataForAllRegistrations_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetUserDataForAllRegistrations_Params_Data) == 16,
              "Bad sizeof(ServiceWorkerStorageControl_GetUserDataForAllRegistrations_Params_Data)");
class  ServiceWorkerStorageControl_GetUserDataForAllRegistrations_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<internal::ServiceWorkerUserData_Data>>> values;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetUserDataForAllRegistrations_ResponseParams_Data>;

  ServiceWorkerStorageControl_GetUserDataForAllRegistrations_ResponseParams_Data();
  ~ServiceWorkerStorageControl_GetUserDataForAllRegistrations_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetUserDataForAllRegistrations_ResponseParams_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_GetUserDataForAllRegistrations_ResponseParams_Data)");
class  ServiceWorkerStorageControl_GetUserDataForAllRegistrationsByKeyPrefix_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> key_prefix;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetUserDataForAllRegistrationsByKeyPrefix_Params_Data>;

  ServiceWorkerStorageControl_GetUserDataForAllRegistrationsByKeyPrefix_Params_Data();
  ~ServiceWorkerStorageControl_GetUserDataForAllRegistrationsByKeyPrefix_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetUserDataForAllRegistrationsByKeyPrefix_Params_Data) == 16,
              "Bad sizeof(ServiceWorkerStorageControl_GetUserDataForAllRegistrationsByKeyPrefix_Params_Data)");
class  ServiceWorkerStorageControl_GetUserDataForAllRegistrationsByKeyPrefix_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<internal::ServiceWorkerUserData_Data>>> values;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetUserDataForAllRegistrationsByKeyPrefix_ResponseParams_Data>;

  ServiceWorkerStorageControl_GetUserDataForAllRegistrationsByKeyPrefix_ResponseParams_Data();
  ~ServiceWorkerStorageControl_GetUserDataForAllRegistrationsByKeyPrefix_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetUserDataForAllRegistrationsByKeyPrefix_ResponseParams_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_GetUserDataForAllRegistrationsByKeyPrefix_ResponseParams_Data)");
class  ServiceWorkerStorageControl_ClearUserDataForAllRegistrationsByKeyPrefix_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> key_prefix;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_ClearUserDataForAllRegistrationsByKeyPrefix_Params_Data>;

  ServiceWorkerStorageControl_ClearUserDataForAllRegistrationsByKeyPrefix_Params_Data();
  ~ServiceWorkerStorageControl_ClearUserDataForAllRegistrationsByKeyPrefix_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_ClearUserDataForAllRegistrationsByKeyPrefix_Params_Data) == 16,
              "Bad sizeof(ServiceWorkerStorageControl_ClearUserDataForAllRegistrationsByKeyPrefix_Params_Data)");
class  ServiceWorkerStorageControl_ClearUserDataForAllRegistrationsByKeyPrefix_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_ClearUserDataForAllRegistrationsByKeyPrefix_ResponseParams_Data>;

  ServiceWorkerStorageControl_ClearUserDataForAllRegistrationsByKeyPrefix_ResponseParams_Data();
  ~ServiceWorkerStorageControl_ClearUserDataForAllRegistrationsByKeyPrefix_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_ClearUserDataForAllRegistrationsByKeyPrefix_ResponseParams_Data) == 16,
              "Bad sizeof(ServiceWorkerStorageControl_ClearUserDataForAllRegistrationsByKeyPrefix_ResponseParams_Data)");
class  ServiceWorkerStorageControl_PerformStorageCleanup_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_PerformStorageCleanup_Params_Data>;

  ServiceWorkerStorageControl_PerformStorageCleanup_Params_Data();
  ~ServiceWorkerStorageControl_PerformStorageCleanup_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_PerformStorageCleanup_Params_Data) == 8,
              "Bad sizeof(ServiceWorkerStorageControl_PerformStorageCleanup_Params_Data)");
class  ServiceWorkerStorageControl_PerformStorageCleanup_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_PerformStorageCleanup_ResponseParams_Data>;

  ServiceWorkerStorageControl_PerformStorageCleanup_ResponseParams_Data();
  ~ServiceWorkerStorageControl_PerformStorageCleanup_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_PerformStorageCleanup_ResponseParams_Data) == 8,
              "Bad sizeof(ServiceWorkerStorageControl_PerformStorageCleanup_ResponseParams_Data)");
class  ServiceWorkerStorageControl_ApplyPolicyUpdates_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<::storage::mojom::internal::StoragePolicyUpdate_Data>>> policy_updates;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_ApplyPolicyUpdates_Params_Data>;

  ServiceWorkerStorageControl_ApplyPolicyUpdates_Params_Data();
  ~ServiceWorkerStorageControl_ApplyPolicyUpdates_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_ApplyPolicyUpdates_Params_Data) == 16,
              "Bad sizeof(ServiceWorkerStorageControl_ApplyPolicyUpdates_Params_Data)");
class  ServiceWorkerStorageControl_ApplyPolicyUpdates_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_ApplyPolicyUpdates_ResponseParams_Data>;

  ServiceWorkerStorageControl_ApplyPolicyUpdates_ResponseParams_Data();
  ~ServiceWorkerStorageControl_ApplyPolicyUpdates_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_ApplyPolicyUpdates_ResponseParams_Data) == 16,
              "Bad sizeof(ServiceWorkerStorageControl_ApplyPolicyUpdates_ResponseParams_Data)");
class  ServiceWorkerStorageControl_GetPurgingResourceIdsForTest_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetPurgingResourceIdsForTest_Params_Data>;

  ServiceWorkerStorageControl_GetPurgingResourceIdsForTest_Params_Data();
  ~ServiceWorkerStorageControl_GetPurgingResourceIdsForTest_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetPurgingResourceIdsForTest_Params_Data) == 8,
              "Bad sizeof(ServiceWorkerStorageControl_GetPurgingResourceIdsForTest_Params_Data)");
class  ServiceWorkerStorageControl_GetPurgingResourceIdsForTest_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::Array_Data<int64_t>> resource_ids;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetPurgingResourceIdsForTest_ResponseParams_Data>;

  ServiceWorkerStorageControl_GetPurgingResourceIdsForTest_ResponseParams_Data();
  ~ServiceWorkerStorageControl_GetPurgingResourceIdsForTest_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetPurgingResourceIdsForTest_ResponseParams_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_GetPurgingResourceIdsForTest_ResponseParams_Data)");
class  ServiceWorkerStorageControl_GetPurgingResourceIdsForLiveVersionForTest_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t version_id;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetPurgingResourceIdsForLiveVersionForTest_Params_Data>;

  ServiceWorkerStorageControl_GetPurgingResourceIdsForLiveVersionForTest_Params_Data();
  ~ServiceWorkerStorageControl_GetPurgingResourceIdsForLiveVersionForTest_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetPurgingResourceIdsForLiveVersionForTest_Params_Data) == 16,
              "Bad sizeof(ServiceWorkerStorageControl_GetPurgingResourceIdsForLiveVersionForTest_Params_Data)");
class  ServiceWorkerStorageControl_GetPurgingResourceIdsForLiveVersionForTest_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::Array_Data<int64_t>> resource_ids;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetPurgingResourceIdsForLiveVersionForTest_ResponseParams_Data>;

  ServiceWorkerStorageControl_GetPurgingResourceIdsForLiveVersionForTest_ResponseParams_Data();
  ~ServiceWorkerStorageControl_GetPurgingResourceIdsForLiveVersionForTest_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetPurgingResourceIdsForLiveVersionForTest_ResponseParams_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_GetPurgingResourceIdsForLiveVersionForTest_ResponseParams_Data)");
class  ServiceWorkerStorageControl_GetPurgeableResourceIdsForTest_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetPurgeableResourceIdsForTest_Params_Data>;

  ServiceWorkerStorageControl_GetPurgeableResourceIdsForTest_Params_Data();
  ~ServiceWorkerStorageControl_GetPurgeableResourceIdsForTest_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetPurgeableResourceIdsForTest_Params_Data) == 8,
              "Bad sizeof(ServiceWorkerStorageControl_GetPurgeableResourceIdsForTest_Params_Data)");
class  ServiceWorkerStorageControl_GetPurgeableResourceIdsForTest_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::Array_Data<int64_t>> resource_ids;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetPurgeableResourceIdsForTest_ResponseParams_Data>;

  ServiceWorkerStorageControl_GetPurgeableResourceIdsForTest_ResponseParams_Data();
  ~ServiceWorkerStorageControl_GetPurgeableResourceIdsForTest_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetPurgeableResourceIdsForTest_ResponseParams_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_GetPurgeableResourceIdsForTest_ResponseParams_Data)");
class  ServiceWorkerStorageControl_GetUncommittedResourceIdsForTest_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetUncommittedResourceIdsForTest_Params_Data>;

  ServiceWorkerStorageControl_GetUncommittedResourceIdsForTest_Params_Data();
  ~ServiceWorkerStorageControl_GetUncommittedResourceIdsForTest_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetUncommittedResourceIdsForTest_Params_Data) == 8,
              "Bad sizeof(ServiceWorkerStorageControl_GetUncommittedResourceIdsForTest_Params_Data)");
class  ServiceWorkerStorageControl_GetUncommittedResourceIdsForTest_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t status;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::Array_Data<int64_t>> resource_ids;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_GetUncommittedResourceIdsForTest_ResponseParams_Data>;

  ServiceWorkerStorageControl_GetUncommittedResourceIdsForTest_ResponseParams_Data();
  ~ServiceWorkerStorageControl_GetUncommittedResourceIdsForTest_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_GetUncommittedResourceIdsForTest_ResponseParams_Data) == 24,
              "Bad sizeof(ServiceWorkerStorageControl_GetUncommittedResourceIdsForTest_ResponseParams_Data)");
class  ServiceWorkerStorageControl_SetPurgingCompleteCallbackForTest_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_SetPurgingCompleteCallbackForTest_Params_Data>;

  ServiceWorkerStorageControl_SetPurgingCompleteCallbackForTest_Params_Data();
  ~ServiceWorkerStorageControl_SetPurgingCompleteCallbackForTest_Params_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_SetPurgingCompleteCallbackForTest_Params_Data) == 8,
              "Bad sizeof(ServiceWorkerStorageControl_SetPurgingCompleteCallbackForTest_Params_Data)");
class  ServiceWorkerStorageControl_SetPurgingCompleteCallbackForTest_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<ServiceWorkerStorageControl_SetPurgingCompleteCallbackForTest_ResponseParams_Data>;

  ServiceWorkerStorageControl_SetPurgingCompleteCallbackForTest_ResponseParams_Data();
  ~ServiceWorkerStorageControl_SetPurgingCompleteCallbackForTest_ResponseParams_Data() = delete;
};
static_assert(sizeof(ServiceWorkerStorageControl_SetPurgingCompleteCallbackForTest_ResponseParams_Data) == 8,
              "Bad sizeof(ServiceWorkerStorageControl_SetPurgingCompleteCallbackForTest_ResponseParams_Data)");

}  // namespace internal


class ServiceWorkerDataPipeStateNotifier_OnComplete_ParamsDataView {
 public:
  ServiceWorkerDataPipeStateNotifier_OnComplete_ParamsDataView() = default;

  ServiceWorkerDataPipeStateNotifier_OnComplete_ParamsDataView(
      internal::ServiceWorkerDataPipeStateNotifier_OnComplete_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int32_t status() const {
    return data_->status;
  }
 private:
  internal::ServiceWorkerDataPipeStateNotifier_OnComplete_Params_Data* data_ = nullptr;
};



class ServiceWorkerResourceReader_ReadResponseHead_ParamsDataView {
 public:
  ServiceWorkerResourceReader_ReadResponseHead_ParamsDataView() = default;

  ServiceWorkerResourceReader_ReadResponseHead_ParamsDataView(
      internal::ServiceWorkerResourceReader_ReadResponseHead_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ServiceWorkerResourceReader_ReadResponseHead_Params_Data* data_ = nullptr;
};



class ServiceWorkerResourceReader_ReadResponseHead_ResponseParamsDataView {
 public:
  ServiceWorkerResourceReader_ReadResponseHead_ResponseParamsDataView() = default;

  ServiceWorkerResourceReader_ReadResponseHead_ResponseParamsDataView(
      internal::ServiceWorkerResourceReader_ReadResponseHead_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  int32_t status() const {
    return data_->status;
  }
  inline void GetResponseHeadDataView(
      ::network::mojom::URLResponseHeadDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadResponseHead(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::network::mojom::URLResponseHeadDataView, UserType>(),
    "Attempting to read the optional `response_head` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadResponseHead` instead "
    "of `ReadResponseHead if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->response_head.Get();
    return mojo::internal::Deserialize<::network::mojom::URLResponseHeadDataView>(
        pointer, output, message_);
  }
  inline void GetMetadataDataView(
      ::mojo_base::mojom::BigBufferDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadMetadata(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::mojo_base::mojom::BigBufferDataView, UserType>(),
    "Attempting to read the optional `metadata` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadMetadata` instead "
    "of `ReadMetadata if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = !data_->metadata.is_null() ? &data_->metadata : nullptr;
    return mojo::internal::Deserialize<::mojo_base::mojom::BigBufferDataView>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerResourceReader_ReadResponseHead_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerResourceReader_ReadData_ParamsDataView {
 public:
  ServiceWorkerResourceReader_ReadData_ParamsDataView() = default;

  ServiceWorkerResourceReader_ReadData_ParamsDataView(
      internal::ServiceWorkerResourceReader_ReadData_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  int64_t size() const {
    return data_->size;
  }
  template <typename UserType>
  UserType TakeNotifier() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfacePtrDataView<::storage::mojom::ServiceWorkerDataPipeStateNotifierInterfaceBase>>(
            &data_->notifier, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::ServiceWorkerResourceReader_ReadData_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerResourceReader_ReadData_ResponseParamsDataView {
 public:
  ServiceWorkerResourceReader_ReadData_ResponseParamsDataView() = default;

  ServiceWorkerResourceReader_ReadData_ResponseParamsDataView(
      internal::ServiceWorkerResourceReader_ReadData_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  mojo::ScopedDataPipeConsumerHandle TakePipe() {
    mojo::ScopedDataPipeConsumerHandle result;
    bool ret =
        mojo::internal::Deserialize<mojo::ScopedDataPipeConsumerHandle>(
            &data_->pipe, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::ServiceWorkerResourceReader_ReadData_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerResourceWriter_WriteResponseHead_ParamsDataView {
 public:
  ServiceWorkerResourceWriter_WriteResponseHead_ParamsDataView() = default;

  ServiceWorkerResourceWriter_WriteResponseHead_ParamsDataView(
      internal::ServiceWorkerResourceWriter_WriteResponseHead_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetResponseHeadDataView(
      ::network::mojom::URLResponseHeadDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadResponseHead(UserType* output) {
    
    auto* pointer = data_->response_head.Get();
    return mojo::internal::Deserialize<::network::mojom::URLResponseHeadDataView>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerResourceWriter_WriteResponseHead_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerResourceWriter_WriteResponseHead_ResponseParamsDataView {
 public:
  ServiceWorkerResourceWriter_WriteResponseHead_ResponseParamsDataView() = default;

  ServiceWorkerResourceWriter_WriteResponseHead_ResponseParamsDataView(
      internal::ServiceWorkerResourceWriter_WriteResponseHead_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int32_t status() const {
    return data_->status;
  }
 private:
  internal::ServiceWorkerResourceWriter_WriteResponseHead_ResponseParams_Data* data_ = nullptr;
};



class ServiceWorkerResourceWriter_WriteData_ParamsDataView {
 public:
  ServiceWorkerResourceWriter_WriteData_ParamsDataView() = default;

  ServiceWorkerResourceWriter_WriteData_ParamsDataView(
      internal::ServiceWorkerResourceWriter_WriteData_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetDataDataView(
      ::mojo_base::mojom::BigBufferDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadData(UserType* output) {
    
    auto* pointer = !data_->data.is_null() ? &data_->data : nullptr;
    return mojo::internal::Deserialize<::mojo_base::mojom::BigBufferDataView>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerResourceWriter_WriteData_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerResourceWriter_WriteData_ResponseParamsDataView {
 public:
  ServiceWorkerResourceWriter_WriteData_ResponseParamsDataView() = default;

  ServiceWorkerResourceWriter_WriteData_ResponseParamsDataView(
      internal::ServiceWorkerResourceWriter_WriteData_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int32_t status() const {
    return data_->status;
  }
 private:
  internal::ServiceWorkerResourceWriter_WriteData_ResponseParams_Data* data_ = nullptr;
};



class ServiceWorkerResourceMetadataWriter_WriteMetadata_ParamsDataView {
 public:
  ServiceWorkerResourceMetadataWriter_WriteMetadata_ParamsDataView() = default;

  ServiceWorkerResourceMetadataWriter_WriteMetadata_ParamsDataView(
      internal::ServiceWorkerResourceMetadataWriter_WriteMetadata_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetDataDataView(
      ::mojo_base::mojom::BigBufferDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadData(UserType* output) {
    
    auto* pointer = !data_->data.is_null() ? &data_->data : nullptr;
    return mojo::internal::Deserialize<::mojo_base::mojom::BigBufferDataView>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerResourceMetadataWriter_WriteMetadata_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerResourceMetadataWriter_WriteMetadata_ResponseParamsDataView {
 public:
  ServiceWorkerResourceMetadataWriter_WriteMetadata_ResponseParamsDataView() = default;

  ServiceWorkerResourceMetadataWriter_WriteMetadata_ResponseParamsDataView(
      internal::ServiceWorkerResourceMetadataWriter_WriteMetadata_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int32_t status() const {
    return data_->status;
  }
 private:
  internal::ServiceWorkerResourceMetadataWriter_WriteMetadata_ResponseParams_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_Disable_ParamsDataView {
 public:
  ServiceWorkerStorageControl_Disable_ParamsDataView() = default;

  ServiceWorkerStorageControl_Disable_ParamsDataView(
      internal::ServiceWorkerStorageControl_Disable_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ServiceWorkerStorageControl_Disable_Params_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_Disable_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_Disable_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_Disable_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_Disable_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ServiceWorkerStorageControl_Disable_ResponseParams_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_Delete_ParamsDataView {
 public:
  ServiceWorkerStorageControl_Delete_ParamsDataView() = default;

  ServiceWorkerStorageControl_Delete_ParamsDataView(
      internal::ServiceWorkerStorageControl_Delete_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ServiceWorkerStorageControl_Delete_Params_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_Delete_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_Delete_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_Delete_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_Delete_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
 private:
  internal::ServiceWorkerStorageControl_Delete_ResponseParams_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_Recover_ParamsDataView {
 public:
  ServiceWorkerStorageControl_Recover_ParamsDataView() = default;

  ServiceWorkerStorageControl_Recover_ParamsDataView(
      internal::ServiceWorkerStorageControl_Recover_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetVersionsDataView(
      mojo::ArrayDataView<ServiceWorkerLiveVersionInfoDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadVersions(UserType* output) {
    
    auto* pointer = data_->versions.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::storage::mojom::ServiceWorkerLiveVersionInfoDataView>>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_Recover_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_Recover_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_Recover_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_Recover_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_Recover_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ServiceWorkerStorageControl_Recover_ResponseParams_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_GetRegisteredStorageKeys_ParamsDataView {
 public:
  ServiceWorkerStorageControl_GetRegisteredStorageKeys_ParamsDataView() = default;

  ServiceWorkerStorageControl_GetRegisteredStorageKeys_ParamsDataView(
      internal::ServiceWorkerStorageControl_GetRegisteredStorageKeys_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ServiceWorkerStorageControl_GetRegisteredStorageKeys_Params_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_GetRegisteredStorageKeys_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_GetRegisteredStorageKeys_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_GetRegisteredStorageKeys_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_GetRegisteredStorageKeys_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetKeysDataView(
      mojo::ArrayDataView<::blink::mojom::StorageKeyDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadKeys(UserType* output) {
    
    auto* pointer = data_->keys.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::blink::mojom::StorageKeyDataView>>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_GetRegisteredStorageKeys_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_FindRegistrationForClientUrl_ParamsDataView {
 public:
  ServiceWorkerStorageControl_FindRegistrationForClientUrl_ParamsDataView() = default;

  ServiceWorkerStorageControl_FindRegistrationForClientUrl_ParamsDataView(
      internal::ServiceWorkerStorageControl_FindRegistrationForClientUrl_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetClientUrlDataView(
      ::url::mojom::UrlDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadClientUrl(UserType* output) {
    
    auto* pointer = data_->client_url.Get();
    return mojo::internal::Deserialize<::url::mojom::UrlDataView>(
        pointer, output, message_);
  }
  inline void GetKeyDataView(
      ::blink::mojom::StorageKeyDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadKey(UserType* output) {
    
    auto* pointer = data_->key.Get();
    return mojo::internal::Deserialize<::blink::mojom::StorageKeyDataView>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_FindRegistrationForClientUrl_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_FindRegistrationForClientUrl_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_FindRegistrationForClientUrl_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_FindRegistrationForClientUrl_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_FindRegistrationForClientUrl_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
  inline void GetResultDataView(
      ServiceWorkerFindRegistrationResultDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadResult(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::storage::mojom::ServiceWorkerFindRegistrationResultDataView, UserType>(),
    "Attempting to read the optional `result` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadResult` instead "
    "of `ReadResult if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->result.Get();
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerFindRegistrationResultDataView>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_FindRegistrationForClientUrl_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_FindRegistrationForScope_ParamsDataView {
 public:
  ServiceWorkerStorageControl_FindRegistrationForScope_ParamsDataView() = default;

  ServiceWorkerStorageControl_FindRegistrationForScope_ParamsDataView(
      internal::ServiceWorkerStorageControl_FindRegistrationForScope_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetScopeDataView(
      ::url::mojom::UrlDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadScope(UserType* output) {
    
    auto* pointer = data_->scope.Get();
    return mojo::internal::Deserialize<::url::mojom::UrlDataView>(
        pointer, output, message_);
  }
  inline void GetKeyDataView(
      ::blink::mojom::StorageKeyDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadKey(UserType* output) {
    
    auto* pointer = data_->key.Get();
    return mojo::internal::Deserialize<::blink::mojom::StorageKeyDataView>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_FindRegistrationForScope_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_FindRegistrationForScope_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_FindRegistrationForScope_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_FindRegistrationForScope_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_FindRegistrationForScope_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
  inline void GetResultDataView(
      ServiceWorkerFindRegistrationResultDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadResult(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::storage::mojom::ServiceWorkerFindRegistrationResultDataView, UserType>(),
    "Attempting to read the optional `result` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadResult` instead "
    "of `ReadResult if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->result.Get();
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerFindRegistrationResultDataView>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_FindRegistrationForScope_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_FindRegistrationForId_ParamsDataView {
 public:
  ServiceWorkerStorageControl_FindRegistrationForId_ParamsDataView() = default;

  ServiceWorkerStorageControl_FindRegistrationForId_ParamsDataView(
      internal::ServiceWorkerStorageControl_FindRegistrationForId_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  int64_t registration_id() const {
    return data_->registration_id;
  }
  inline void GetKeyDataView(
      ::blink::mojom::StorageKeyDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadKey(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::blink::mojom::StorageKeyDataView, UserType>(),
    "Attempting to read the optional `key` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadKey` instead "
    "of `ReadKey if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->key.Get();
    return mojo::internal::Deserialize<::blink::mojom::StorageKeyDataView>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_FindRegistrationForId_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_FindRegistrationForId_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_FindRegistrationForId_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_FindRegistrationForId_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_FindRegistrationForId_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
  inline void GetResultDataView(
      ServiceWorkerFindRegistrationResultDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadResult(UserType* output) {
    
static_assert(
    mojo::internal::IsValidUserTypeForOptionalValue<
        ::storage::mojom::ServiceWorkerFindRegistrationResultDataView, UserType>(),
    "Attempting to read the optional `result` field into a type which "
    "cannot represent a null value. Either wrap the destination object "
    "with absl::optional, ensure that any corresponding "
    "{Struct/Union/Array/String}Traits define the necessary IsNull and "
    "SetToNull methods, or use `MaybeReadResult` instead "
    "of `ReadResult if you're fine with null values being "
    "silently ignored in this case.");
    auto* pointer = data_->result.Get();
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerFindRegistrationResultDataView>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_FindRegistrationForId_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_GetRegistrationsForStorageKey_ParamsDataView {
 public:
  ServiceWorkerStorageControl_GetRegistrationsForStorageKey_ParamsDataView() = default;

  ServiceWorkerStorageControl_GetRegistrationsForStorageKey_ParamsDataView(
      internal::ServiceWorkerStorageControl_GetRegistrationsForStorageKey_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetKeyDataView(
      ::blink::mojom::StorageKeyDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadKey(UserType* output) {
    
    auto* pointer = data_->key.Get();
    return mojo::internal::Deserialize<::blink::mojom::StorageKeyDataView>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_GetRegistrationsForStorageKey_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_GetRegistrationsForStorageKey_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_GetRegistrationsForStorageKey_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_GetRegistrationsForStorageKey_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_GetRegistrationsForStorageKey_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
  inline void GetRegistrationsDataView(
      mojo::ArrayDataView<ServiceWorkerFindRegistrationResultDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadRegistrations(UserType* output) {
    
    auto* pointer = data_->registrations.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::storage::mojom::ServiceWorkerFindRegistrationResultDataView>>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_GetRegistrationsForStorageKey_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_GetUsageForStorageKey_ParamsDataView {
 public:
  ServiceWorkerStorageControl_GetUsageForStorageKey_ParamsDataView() = default;

  ServiceWorkerStorageControl_GetUsageForStorageKey_ParamsDataView(
      internal::ServiceWorkerStorageControl_GetUsageForStorageKey_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetKeyDataView(
      ::blink::mojom::StorageKeyDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadKey(UserType* output) {
    
    auto* pointer = data_->key.Get();
    return mojo::internal::Deserialize<::blink::mojom::StorageKeyDataView>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_GetUsageForStorageKey_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_GetUsageForStorageKey_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_GetUsageForStorageKey_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_GetUsageForStorageKey_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_GetUsageForStorageKey_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
  int64_t usage() const {
    return data_->usage;
  }
 private:
  internal::ServiceWorkerStorageControl_GetUsageForStorageKey_ResponseParams_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_GetAllRegistrationsDeprecated_ParamsDataView {
 public:
  ServiceWorkerStorageControl_GetAllRegistrationsDeprecated_ParamsDataView() = default;

  ServiceWorkerStorageControl_GetAllRegistrationsDeprecated_ParamsDataView(
      internal::ServiceWorkerStorageControl_GetAllRegistrationsDeprecated_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ServiceWorkerStorageControl_GetAllRegistrationsDeprecated_Params_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_GetAllRegistrationsDeprecated_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_GetAllRegistrationsDeprecated_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_GetAllRegistrationsDeprecated_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_GetAllRegistrationsDeprecated_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
  inline void GetRegistrationsDataView(
      mojo::ArrayDataView<::storage::mojom::ServiceWorkerRegistrationDataDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadRegistrations(UserType* output) {
    
    auto* pointer = data_->registrations.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::storage::mojom::ServiceWorkerRegistrationDataDataView>>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_GetAllRegistrationsDeprecated_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_StoreRegistration_ParamsDataView {
 public:
  ServiceWorkerStorageControl_StoreRegistration_ParamsDataView() = default;

  ServiceWorkerStorageControl_StoreRegistration_ParamsDataView(
      internal::ServiceWorkerStorageControl_StoreRegistration_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetRegistrationDataView(
      ::storage::mojom::ServiceWorkerRegistrationDataDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadRegistration(UserType* output) {
    
    auto* pointer = data_->registration.Get();
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerRegistrationDataDataView>(
        pointer, output, message_);
  }
  inline void GetResourcesDataView(
      mojo::ArrayDataView<::storage::mojom::ServiceWorkerResourceRecordDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadResources(UserType* output) {
    
    auto* pointer = data_->resources.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::storage::mojom::ServiceWorkerResourceRecordDataView>>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_StoreRegistration_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_StoreRegistration_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_StoreRegistration_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_StoreRegistration_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_StoreRegistration_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
  uint64_t deleted_resources_size() const {
    return data_->deleted_resources_size;
  }
 private:
  internal::ServiceWorkerStorageControl_StoreRegistration_ResponseParams_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_DeleteRegistration_ParamsDataView {
 public:
  ServiceWorkerStorageControl_DeleteRegistration_ParamsDataView() = default;

  ServiceWorkerStorageControl_DeleteRegistration_ParamsDataView(
      internal::ServiceWorkerStorageControl_DeleteRegistration_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  int64_t registration_id() const {
    return data_->registration_id;
  }
  inline void GetKeyDataView(
      ::blink::mojom::StorageKeyDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadKey(UserType* output) {
    
    auto* pointer = data_->key.Get();
    return mojo::internal::Deserialize<::blink::mojom::StorageKeyDataView>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_DeleteRegistration_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_DeleteRegistration_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_DeleteRegistration_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_DeleteRegistration_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_DeleteRegistration_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
  uint64_t deleted_resources_size() const {
    return data_->deleted_resources_size;
  }
  template <typename UserType>
  [[nodiscard]] bool ReadStorageKeyState(UserType* output) const {
    auto data_value = data_->storage_key_state;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerStorageStorageKeyState>(
        data_value, output);
  }
  ServiceWorkerStorageStorageKeyState storage_key_state() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerStorageStorageKeyState>(data_->storage_key_state));
  }
 private:
  internal::ServiceWorkerStorageControl_DeleteRegistration_ResponseParams_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_UpdateToActiveState_ParamsDataView {
 public:
  ServiceWorkerStorageControl_UpdateToActiveState_ParamsDataView() = default;

  ServiceWorkerStorageControl_UpdateToActiveState_ParamsDataView(
      internal::ServiceWorkerStorageControl_UpdateToActiveState_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  int64_t registration_id() const {
    return data_->registration_id;
  }
  inline void GetKeyDataView(
      ::blink::mojom::StorageKeyDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadKey(UserType* output) {
    
    auto* pointer = data_->key.Get();
    return mojo::internal::Deserialize<::blink::mojom::StorageKeyDataView>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_UpdateToActiveState_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_UpdateToActiveState_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_UpdateToActiveState_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_UpdateToActiveState_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_UpdateToActiveState_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
 private:
  internal::ServiceWorkerStorageControl_UpdateToActiveState_ResponseParams_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_UpdateLastUpdateCheckTime_ParamsDataView {
 public:
  ServiceWorkerStorageControl_UpdateLastUpdateCheckTime_ParamsDataView() = default;

  ServiceWorkerStorageControl_UpdateLastUpdateCheckTime_ParamsDataView(
      internal::ServiceWorkerStorageControl_UpdateLastUpdateCheckTime_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  int64_t registration_id() const {
    return data_->registration_id;
  }
  inline void GetKeyDataView(
      ::blink::mojom::StorageKeyDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadKey(UserType* output) {
    
    auto* pointer = data_->key.Get();
    return mojo::internal::Deserialize<::blink::mojom::StorageKeyDataView>(
        pointer, output, message_);
  }
  inline void GetLastUpdateCheckTimeDataView(
      ::mojo_base::mojom::TimeDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadLastUpdateCheckTime(UserType* output) {
    
    auto* pointer = data_->last_update_check_time.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::TimeDataView>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_UpdateLastUpdateCheckTime_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_UpdateLastUpdateCheckTime_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_UpdateLastUpdateCheckTime_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_UpdateLastUpdateCheckTime_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_UpdateLastUpdateCheckTime_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
 private:
  internal::ServiceWorkerStorageControl_UpdateLastUpdateCheckTime_ResponseParams_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_UpdateNavigationPreloadEnabled_ParamsDataView {
 public:
  ServiceWorkerStorageControl_UpdateNavigationPreloadEnabled_ParamsDataView() = default;

  ServiceWorkerStorageControl_UpdateNavigationPreloadEnabled_ParamsDataView(
      internal::ServiceWorkerStorageControl_UpdateNavigationPreloadEnabled_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  int64_t registration_id() const {
    return data_->registration_id;
  }
  inline void GetKeyDataView(
      ::blink::mojom::StorageKeyDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadKey(UserType* output) {
    
    auto* pointer = data_->key.Get();
    return mojo::internal::Deserialize<::blink::mojom::StorageKeyDataView>(
        pointer, output, message_);
  }
  bool enable() const {
    return data_->enable;
  }
 private:
  internal::ServiceWorkerStorageControl_UpdateNavigationPreloadEnabled_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_UpdateNavigationPreloadEnabled_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_UpdateNavigationPreloadEnabled_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_UpdateNavigationPreloadEnabled_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_UpdateNavigationPreloadEnabled_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
 private:
  internal::ServiceWorkerStorageControl_UpdateNavigationPreloadEnabled_ResponseParams_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_UpdateNavigationPreloadHeader_ParamsDataView {
 public:
  ServiceWorkerStorageControl_UpdateNavigationPreloadHeader_ParamsDataView() = default;

  ServiceWorkerStorageControl_UpdateNavigationPreloadHeader_ParamsDataView(
      internal::ServiceWorkerStorageControl_UpdateNavigationPreloadHeader_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  int64_t registration_id() const {
    return data_->registration_id;
  }
  inline void GetKeyDataView(
      ::blink::mojom::StorageKeyDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadKey(UserType* output) {
    
    auto* pointer = data_->key.Get();
    return mojo::internal::Deserialize<::blink::mojom::StorageKeyDataView>(
        pointer, output, message_);
  }
  inline void GetValueDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadValue(UserType* output) {
    
    auto* pointer = data_->value.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_UpdateNavigationPreloadHeader_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_UpdateNavigationPreloadHeader_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_UpdateNavigationPreloadHeader_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_UpdateNavigationPreloadHeader_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_UpdateNavigationPreloadHeader_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
 private:
  internal::ServiceWorkerStorageControl_UpdateNavigationPreloadHeader_ResponseParams_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_GetNewRegistrationId_ParamsDataView {
 public:
  ServiceWorkerStorageControl_GetNewRegistrationId_ParamsDataView() = default;

  ServiceWorkerStorageControl_GetNewRegistrationId_ParamsDataView(
      internal::ServiceWorkerStorageControl_GetNewRegistrationId_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ServiceWorkerStorageControl_GetNewRegistrationId_Params_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_GetNewRegistrationId_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_GetNewRegistrationId_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_GetNewRegistrationId_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_GetNewRegistrationId_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int64_t registration_id() const {
    return data_->registration_id;
  }
 private:
  internal::ServiceWorkerStorageControl_GetNewRegistrationId_ResponseParams_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_GetNewVersionId_ParamsDataView {
 public:
  ServiceWorkerStorageControl_GetNewVersionId_ParamsDataView() = default;

  ServiceWorkerStorageControl_GetNewVersionId_ParamsDataView(
      internal::ServiceWorkerStorageControl_GetNewVersionId_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ServiceWorkerStorageControl_GetNewVersionId_Params_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_GetNewVersionId_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_GetNewVersionId_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_GetNewVersionId_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_GetNewVersionId_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  int64_t version_id() const {
    return data_->version_id;
  }
  template <typename UserType>
  UserType TakeVersionReference() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfacePtrDataView<::storage::mojom::ServiceWorkerLiveVersionRefInterfaceBase>>(
            &data_->version_reference, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::ServiceWorkerStorageControl_GetNewVersionId_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_GetNewResourceId_ParamsDataView {
 public:
  ServiceWorkerStorageControl_GetNewResourceId_ParamsDataView() = default;

  ServiceWorkerStorageControl_GetNewResourceId_ParamsDataView(
      internal::ServiceWorkerStorageControl_GetNewResourceId_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ServiceWorkerStorageControl_GetNewResourceId_Params_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_GetNewResourceId_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_GetNewResourceId_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_GetNewResourceId_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_GetNewResourceId_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int64_t resource_id() const {
    return data_->resource_id;
  }
 private:
  internal::ServiceWorkerStorageControl_GetNewResourceId_ResponseParams_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_CreateResourceReader_ParamsDataView {
 public:
  ServiceWorkerStorageControl_CreateResourceReader_ParamsDataView() = default;

  ServiceWorkerStorageControl_CreateResourceReader_ParamsDataView(
      internal::ServiceWorkerStorageControl_CreateResourceReader_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  int64_t resource_id() const {
    return data_->resource_id;
  }
  template <typename UserType>
  UserType TakeReader() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfaceRequestDataView<::storage::mojom::ServiceWorkerResourceReaderInterfaceBase>>(
            &data_->reader, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::ServiceWorkerStorageControl_CreateResourceReader_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_CreateResourceWriter_ParamsDataView {
 public:
  ServiceWorkerStorageControl_CreateResourceWriter_ParamsDataView() = default;

  ServiceWorkerStorageControl_CreateResourceWriter_ParamsDataView(
      internal::ServiceWorkerStorageControl_CreateResourceWriter_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  int64_t resource_id() const {
    return data_->resource_id;
  }
  template <typename UserType>
  UserType TakeWriter() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfaceRequestDataView<::storage::mojom::ServiceWorkerResourceWriterInterfaceBase>>(
            &data_->writer, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::ServiceWorkerStorageControl_CreateResourceWriter_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_CreateResourceMetadataWriter_ParamsDataView {
 public:
  ServiceWorkerStorageControl_CreateResourceMetadataWriter_ParamsDataView() = default;

  ServiceWorkerStorageControl_CreateResourceMetadataWriter_ParamsDataView(
      internal::ServiceWorkerStorageControl_CreateResourceMetadataWriter_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  int64_t resource_id() const {
    return data_->resource_id;
  }
  template <typename UserType>
  UserType TakeWriter() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfaceRequestDataView<::storage::mojom::ServiceWorkerResourceMetadataWriterInterfaceBase>>(
            &data_->writer, &result, message_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::ServiceWorkerStorageControl_CreateResourceMetadataWriter_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_StoreUncommittedResourceId_ParamsDataView {
 public:
  ServiceWorkerStorageControl_StoreUncommittedResourceId_ParamsDataView() = default;

  ServiceWorkerStorageControl_StoreUncommittedResourceId_ParamsDataView(
      internal::ServiceWorkerStorageControl_StoreUncommittedResourceId_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int64_t resource_id() const {
    return data_->resource_id;
  }
 private:
  internal::ServiceWorkerStorageControl_StoreUncommittedResourceId_Params_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_StoreUncommittedResourceId_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_StoreUncommittedResourceId_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_StoreUncommittedResourceId_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_StoreUncommittedResourceId_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
 private:
  internal::ServiceWorkerStorageControl_StoreUncommittedResourceId_ResponseParams_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_DoomUncommittedResources_ParamsDataView {
 public:
  ServiceWorkerStorageControl_DoomUncommittedResources_ParamsDataView() = default;

  ServiceWorkerStorageControl_DoomUncommittedResources_ParamsDataView(
      internal::ServiceWorkerStorageControl_DoomUncommittedResources_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetResourceIdsDataView(
      mojo::ArrayDataView<int64_t>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadResourceIds(UserType* output) {
    
    auto* pointer = data_->resource_ids.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<int64_t>>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_DoomUncommittedResources_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_DoomUncommittedResources_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_DoomUncommittedResources_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_DoomUncommittedResources_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_DoomUncommittedResources_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
 private:
  internal::ServiceWorkerStorageControl_DoomUncommittedResources_ResponseParams_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_GetUserData_ParamsDataView {
 public:
  ServiceWorkerStorageControl_GetUserData_ParamsDataView() = default;

  ServiceWorkerStorageControl_GetUserData_ParamsDataView(
      internal::ServiceWorkerStorageControl_GetUserData_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  int64_t registration_id() const {
    return data_->registration_id;
  }
  inline void GetKeysDataView(
      mojo::ArrayDataView<mojo::StringDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadKeys(UserType* output) {
    
    auto* pointer = data_->keys.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<mojo::StringDataView>>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_GetUserData_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_GetUserData_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_GetUserData_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_GetUserData_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_GetUserData_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
  inline void GetValuesDataView(
      mojo::ArrayDataView<mojo::StringDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadValues(UserType* output) {
    
    auto* pointer = data_->values.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<mojo::StringDataView>>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_GetUserData_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_StoreUserData_ParamsDataView {
 public:
  ServiceWorkerStorageControl_StoreUserData_ParamsDataView() = default;

  ServiceWorkerStorageControl_StoreUserData_ParamsDataView(
      internal::ServiceWorkerStorageControl_StoreUserData_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  int64_t registration_id() const {
    return data_->registration_id;
  }
  inline void GetKeyDataView(
      ::blink::mojom::StorageKeyDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadKey(UserType* output) {
    
    auto* pointer = data_->key.Get();
    return mojo::internal::Deserialize<::blink::mojom::StorageKeyDataView>(
        pointer, output, message_);
  }
  inline void GetUserDataDataView(
      mojo::ArrayDataView<ServiceWorkerUserDataDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadUserData(UserType* output) {
    
    auto* pointer = data_->user_data.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::storage::mojom::ServiceWorkerUserDataDataView>>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_StoreUserData_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_StoreUserData_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_StoreUserData_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_StoreUserData_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_StoreUserData_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
 private:
  internal::ServiceWorkerStorageControl_StoreUserData_ResponseParams_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_ClearUserData_ParamsDataView {
 public:
  ServiceWorkerStorageControl_ClearUserData_ParamsDataView() = default;

  ServiceWorkerStorageControl_ClearUserData_ParamsDataView(
      internal::ServiceWorkerStorageControl_ClearUserData_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  int64_t registration_id() const {
    return data_->registration_id;
  }
  inline void GetKeysDataView(
      mojo::ArrayDataView<mojo::StringDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadKeys(UserType* output) {
    
    auto* pointer = data_->keys.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<mojo::StringDataView>>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_ClearUserData_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_ClearUserData_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_ClearUserData_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_ClearUserData_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_ClearUserData_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
 private:
  internal::ServiceWorkerStorageControl_ClearUserData_ResponseParams_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_GetUserDataByKeyPrefix_ParamsDataView {
 public:
  ServiceWorkerStorageControl_GetUserDataByKeyPrefix_ParamsDataView() = default;

  ServiceWorkerStorageControl_GetUserDataByKeyPrefix_ParamsDataView(
      internal::ServiceWorkerStorageControl_GetUserDataByKeyPrefix_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  int64_t registration_id() const {
    return data_->registration_id;
  }
  inline void GetKeyPrefixDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadKeyPrefix(UserType* output) {
    
    auto* pointer = data_->key_prefix.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_GetUserDataByKeyPrefix_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_GetUserDataByKeyPrefix_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_GetUserDataByKeyPrefix_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_GetUserDataByKeyPrefix_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_GetUserDataByKeyPrefix_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
  inline void GetValuesDataView(
      mojo::ArrayDataView<mojo::StringDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadValues(UserType* output) {
    
    auto* pointer = data_->values.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<mojo::StringDataView>>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_GetUserDataByKeyPrefix_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_GetUserKeysAndDataByKeyPrefix_ParamsDataView {
 public:
  ServiceWorkerStorageControl_GetUserKeysAndDataByKeyPrefix_ParamsDataView() = default;

  ServiceWorkerStorageControl_GetUserKeysAndDataByKeyPrefix_ParamsDataView(
      internal::ServiceWorkerStorageControl_GetUserKeysAndDataByKeyPrefix_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  int64_t registration_id() const {
    return data_->registration_id;
  }
  inline void GetKeyPrefixDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadKeyPrefix(UserType* output) {
    
    auto* pointer = data_->key_prefix.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_GetUserKeysAndDataByKeyPrefix_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_GetUserKeysAndDataByKeyPrefix_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_GetUserKeysAndDataByKeyPrefix_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_GetUserKeysAndDataByKeyPrefix_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_GetUserKeysAndDataByKeyPrefix_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
  inline void GetUserDataDataView(
      mojo::MapDataView<mojo::StringDataView, mojo::StringDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadUserData(UserType* output) {
    
    auto* pointer = data_->user_data.Get();
    return mojo::internal::Deserialize<mojo::MapDataView<mojo::StringDataView, mojo::StringDataView>>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_GetUserKeysAndDataByKeyPrefix_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_ClearUserDataByKeyPrefixes_ParamsDataView {
 public:
  ServiceWorkerStorageControl_ClearUserDataByKeyPrefixes_ParamsDataView() = default;

  ServiceWorkerStorageControl_ClearUserDataByKeyPrefixes_ParamsDataView(
      internal::ServiceWorkerStorageControl_ClearUserDataByKeyPrefixes_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  int64_t registratation_id() const {
    return data_->registratation_id;
  }
  inline void GetKeyPrefixesDataView(
      mojo::ArrayDataView<mojo::StringDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadKeyPrefixes(UserType* output) {
    
    auto* pointer = data_->key_prefixes.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<mojo::StringDataView>>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_ClearUserDataByKeyPrefixes_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_ClearUserDataByKeyPrefixes_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_ClearUserDataByKeyPrefixes_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_ClearUserDataByKeyPrefixes_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_ClearUserDataByKeyPrefixes_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
 private:
  internal::ServiceWorkerStorageControl_ClearUserDataByKeyPrefixes_ResponseParams_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_GetUserDataForAllRegistrations_ParamsDataView {
 public:
  ServiceWorkerStorageControl_GetUserDataForAllRegistrations_ParamsDataView() = default;

  ServiceWorkerStorageControl_GetUserDataForAllRegistrations_ParamsDataView(
      internal::ServiceWorkerStorageControl_GetUserDataForAllRegistrations_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetKeyDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadKey(UserType* output) {
    
    auto* pointer = data_->key.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_GetUserDataForAllRegistrations_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_GetUserDataForAllRegistrations_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_GetUserDataForAllRegistrations_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_GetUserDataForAllRegistrations_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_GetUserDataForAllRegistrations_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
  inline void GetValuesDataView(
      mojo::ArrayDataView<ServiceWorkerUserDataDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadValues(UserType* output) {
    
    auto* pointer = data_->values.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::storage::mojom::ServiceWorkerUserDataDataView>>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_GetUserDataForAllRegistrations_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_GetUserDataForAllRegistrationsByKeyPrefix_ParamsDataView {
 public:
  ServiceWorkerStorageControl_GetUserDataForAllRegistrationsByKeyPrefix_ParamsDataView() = default;

  ServiceWorkerStorageControl_GetUserDataForAllRegistrationsByKeyPrefix_ParamsDataView(
      internal::ServiceWorkerStorageControl_GetUserDataForAllRegistrationsByKeyPrefix_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetKeyPrefixDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadKeyPrefix(UserType* output) {
    
    auto* pointer = data_->key_prefix.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_GetUserDataForAllRegistrationsByKeyPrefix_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_GetUserDataForAllRegistrationsByKeyPrefix_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_GetUserDataForAllRegistrationsByKeyPrefix_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_GetUserDataForAllRegistrationsByKeyPrefix_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_GetUserDataForAllRegistrationsByKeyPrefix_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
  inline void GetValuesDataView(
      mojo::ArrayDataView<ServiceWorkerUserDataDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadValues(UserType* output) {
    
    auto* pointer = data_->values.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::storage::mojom::ServiceWorkerUserDataDataView>>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_GetUserDataForAllRegistrationsByKeyPrefix_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_ClearUserDataForAllRegistrationsByKeyPrefix_ParamsDataView {
 public:
  ServiceWorkerStorageControl_ClearUserDataForAllRegistrationsByKeyPrefix_ParamsDataView() = default;

  ServiceWorkerStorageControl_ClearUserDataForAllRegistrationsByKeyPrefix_ParamsDataView(
      internal::ServiceWorkerStorageControl_ClearUserDataForAllRegistrationsByKeyPrefix_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetKeyPrefixDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadKeyPrefix(UserType* output) {
    
    auto* pointer = data_->key_prefix.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_ClearUserDataForAllRegistrationsByKeyPrefix_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_ClearUserDataForAllRegistrationsByKeyPrefix_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_ClearUserDataForAllRegistrationsByKeyPrefix_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_ClearUserDataForAllRegistrationsByKeyPrefix_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_ClearUserDataForAllRegistrationsByKeyPrefix_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
 private:
  internal::ServiceWorkerStorageControl_ClearUserDataForAllRegistrationsByKeyPrefix_ResponseParams_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_PerformStorageCleanup_ParamsDataView {
 public:
  ServiceWorkerStorageControl_PerformStorageCleanup_ParamsDataView() = default;

  ServiceWorkerStorageControl_PerformStorageCleanup_ParamsDataView(
      internal::ServiceWorkerStorageControl_PerformStorageCleanup_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ServiceWorkerStorageControl_PerformStorageCleanup_Params_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_PerformStorageCleanup_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_PerformStorageCleanup_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_PerformStorageCleanup_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_PerformStorageCleanup_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ServiceWorkerStorageControl_PerformStorageCleanup_ResponseParams_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_ApplyPolicyUpdates_ParamsDataView {
 public:
  ServiceWorkerStorageControl_ApplyPolicyUpdates_ParamsDataView() = default;

  ServiceWorkerStorageControl_ApplyPolicyUpdates_ParamsDataView(
      internal::ServiceWorkerStorageControl_ApplyPolicyUpdates_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetPolicyUpdatesDataView(
      mojo::ArrayDataView<::storage::mojom::StoragePolicyUpdateDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadPolicyUpdates(UserType* output) {
    
    auto* pointer = data_->policy_updates.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::storage::mojom::StoragePolicyUpdateDataView>>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_ApplyPolicyUpdates_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_ApplyPolicyUpdates_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_ApplyPolicyUpdates_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_ApplyPolicyUpdates_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_ApplyPolicyUpdates_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
 private:
  internal::ServiceWorkerStorageControl_ApplyPolicyUpdates_ResponseParams_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_GetPurgingResourceIdsForTest_ParamsDataView {
 public:
  ServiceWorkerStorageControl_GetPurgingResourceIdsForTest_ParamsDataView() = default;

  ServiceWorkerStorageControl_GetPurgingResourceIdsForTest_ParamsDataView(
      internal::ServiceWorkerStorageControl_GetPurgingResourceIdsForTest_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ServiceWorkerStorageControl_GetPurgingResourceIdsForTest_Params_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_GetPurgingResourceIdsForTest_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_GetPurgingResourceIdsForTest_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_GetPurgingResourceIdsForTest_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_GetPurgingResourceIdsForTest_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
  inline void GetResourceIdsDataView(
      mojo::ArrayDataView<int64_t>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadResourceIds(UserType* output) {
    
    auto* pointer = data_->resource_ids.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<int64_t>>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_GetPurgingResourceIdsForTest_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_GetPurgingResourceIdsForLiveVersionForTest_ParamsDataView {
 public:
  ServiceWorkerStorageControl_GetPurgingResourceIdsForLiveVersionForTest_ParamsDataView() = default;

  ServiceWorkerStorageControl_GetPurgingResourceIdsForLiveVersionForTest_ParamsDataView(
      internal::ServiceWorkerStorageControl_GetPurgingResourceIdsForLiveVersionForTest_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int64_t version_id() const {
    return data_->version_id;
  }
 private:
  internal::ServiceWorkerStorageControl_GetPurgingResourceIdsForLiveVersionForTest_Params_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_GetPurgingResourceIdsForLiveVersionForTest_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_GetPurgingResourceIdsForLiveVersionForTest_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_GetPurgingResourceIdsForLiveVersionForTest_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_GetPurgingResourceIdsForLiveVersionForTest_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
  inline void GetResourceIdsDataView(
      mojo::ArrayDataView<int64_t>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadResourceIds(UserType* output) {
    
    auto* pointer = data_->resource_ids.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<int64_t>>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_GetPurgingResourceIdsForLiveVersionForTest_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_GetPurgeableResourceIdsForTest_ParamsDataView {
 public:
  ServiceWorkerStorageControl_GetPurgeableResourceIdsForTest_ParamsDataView() = default;

  ServiceWorkerStorageControl_GetPurgeableResourceIdsForTest_ParamsDataView(
      internal::ServiceWorkerStorageControl_GetPurgeableResourceIdsForTest_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ServiceWorkerStorageControl_GetPurgeableResourceIdsForTest_Params_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_GetPurgeableResourceIdsForTest_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_GetPurgeableResourceIdsForTest_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_GetPurgeableResourceIdsForTest_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_GetPurgeableResourceIdsForTest_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
  inline void GetResourceIdsDataView(
      mojo::ArrayDataView<int64_t>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadResourceIds(UserType* output) {
    
    auto* pointer = data_->resource_ids.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<int64_t>>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_GetPurgeableResourceIdsForTest_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_GetUncommittedResourceIdsForTest_ParamsDataView {
 public:
  ServiceWorkerStorageControl_GetUncommittedResourceIdsForTest_ParamsDataView() = default;

  ServiceWorkerStorageControl_GetUncommittedResourceIdsForTest_ParamsDataView(
      internal::ServiceWorkerStorageControl_GetUncommittedResourceIdsForTest_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ServiceWorkerStorageControl_GetUncommittedResourceIdsForTest_Params_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_GetUncommittedResourceIdsForTest_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_GetUncommittedResourceIdsForTest_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_GetUncommittedResourceIdsForTest_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_GetUncommittedResourceIdsForTest_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadStatus(UserType* output) const {
    auto data_value = data_->status;
    return mojo::internal::Deserialize<::storage::mojom::ServiceWorkerDatabaseStatus>(
        data_value, output);
  }
  ::storage::mojom::ServiceWorkerDatabaseStatus status() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::storage::mojom::ServiceWorkerDatabaseStatus>(data_->status));
  }
  inline void GetResourceIdsDataView(
      mojo::ArrayDataView<int64_t>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadResourceIds(UserType* output) {
    
    auto* pointer = data_->resource_ids.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<int64_t>>(
        pointer, output, message_);
  }
 private:
  internal::ServiceWorkerStorageControl_GetUncommittedResourceIdsForTest_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class ServiceWorkerStorageControl_SetPurgingCompleteCallbackForTest_ParamsDataView {
 public:
  ServiceWorkerStorageControl_SetPurgingCompleteCallbackForTest_ParamsDataView() = default;

  ServiceWorkerStorageControl_SetPurgingCompleteCallbackForTest_ParamsDataView(
      internal::ServiceWorkerStorageControl_SetPurgingCompleteCallbackForTest_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ServiceWorkerStorageControl_SetPurgingCompleteCallbackForTest_Params_Data* data_ = nullptr;
};



class ServiceWorkerStorageControl_SetPurgingCompleteCallbackForTest_ResponseParamsDataView {
 public:
  ServiceWorkerStorageControl_SetPurgingCompleteCallbackForTest_ResponseParamsDataView() = default;

  ServiceWorkerStorageControl_SetPurgingCompleteCallbackForTest_ResponseParamsDataView(
      internal::ServiceWorkerStorageControl_SetPurgingCompleteCallbackForTest_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ServiceWorkerStorageControl_SetPurgingCompleteCallbackForTest_ResponseParams_Data* data_ = nullptr;
};






inline void ServiceWorkerResourceReader_ReadResponseHead_ResponseParamsDataView::GetResponseHeadDataView(
    ::network::mojom::URLResponseHeadDataView* output) {
  auto pointer = data_->response_head.Get();
  *output = ::network::mojom::URLResponseHeadDataView(pointer, message_);
}
inline void ServiceWorkerResourceReader_ReadResponseHead_ResponseParamsDataView::GetMetadataDataView(
    ::mojo_base::mojom::BigBufferDataView* output) {
  auto pointer = &data_->metadata;
  *output = ::mojo_base::mojom::BigBufferDataView(pointer, message_);
}






inline void ServiceWorkerResourceWriter_WriteResponseHead_ParamsDataView::GetResponseHeadDataView(
    ::network::mojom::URLResponseHeadDataView* output) {
  auto pointer = data_->response_head.Get();
  *output = ::network::mojom::URLResponseHeadDataView(pointer, message_);
}




inline void ServiceWorkerResourceWriter_WriteData_ParamsDataView::GetDataDataView(
    ::mojo_base::mojom::BigBufferDataView* output) {
  auto pointer = &data_->data;
  *output = ::mojo_base::mojom::BigBufferDataView(pointer, message_);
}




inline void ServiceWorkerResourceMetadataWriter_WriteMetadata_ParamsDataView::GetDataDataView(
    ::mojo_base::mojom::BigBufferDataView* output) {
  auto pointer = &data_->data;
  *output = ::mojo_base::mojom::BigBufferDataView(pointer, message_);
}












inline void ServiceWorkerStorageControl_Recover_ParamsDataView::GetVersionsDataView(
    mojo::ArrayDataView<ServiceWorkerLiveVersionInfoDataView>* output) {
  auto pointer = data_->versions.Get();
  *output = mojo::ArrayDataView<ServiceWorkerLiveVersionInfoDataView>(pointer, message_);
}






inline void ServiceWorkerStorageControl_GetRegisteredStorageKeys_ResponseParamsDataView::GetKeysDataView(
    mojo::ArrayDataView<::blink::mojom::StorageKeyDataView>* output) {
  auto pointer = data_->keys.Get();
  *output = mojo::ArrayDataView<::blink::mojom::StorageKeyDataView>(pointer, message_);
}


inline void ServiceWorkerStorageControl_FindRegistrationForClientUrl_ParamsDataView::GetClientUrlDataView(
    ::url::mojom::UrlDataView* output) {
  auto pointer = data_->client_url.Get();
  *output = ::url::mojom::UrlDataView(pointer, message_);
}
inline void ServiceWorkerStorageControl_FindRegistrationForClientUrl_ParamsDataView::GetKeyDataView(
    ::blink::mojom::StorageKeyDataView* output) {
  auto pointer = data_->key.Get();
  *output = ::blink::mojom::StorageKeyDataView(pointer, message_);
}


inline void ServiceWorkerStorageControl_FindRegistrationForClientUrl_ResponseParamsDataView::GetResultDataView(
    ServiceWorkerFindRegistrationResultDataView* output) {
  auto pointer = data_->result.Get();
  *output = ServiceWorkerFindRegistrationResultDataView(pointer, message_);
}


inline void ServiceWorkerStorageControl_FindRegistrationForScope_ParamsDataView::GetScopeDataView(
    ::url::mojom::UrlDataView* output) {
  auto pointer = data_->scope.Get();
  *output = ::url::mojom::UrlDataView(pointer, message_);
}
inline void ServiceWorkerStorageControl_FindRegistrationForScope_ParamsDataView::GetKeyDataView(
    ::blink::mojom::StorageKeyDataView* output) {
  auto pointer = data_->key.Get();
  *output = ::blink::mojom::StorageKeyDataView(pointer, message_);
}


inline void ServiceWorkerStorageControl_FindRegistrationForScope_ResponseParamsDataView::GetResultDataView(
    ServiceWorkerFindRegistrationResultDataView* output) {
  auto pointer = data_->result.Get();
  *output = ServiceWorkerFindRegistrationResultDataView(pointer, message_);
}


inline void ServiceWorkerStorageControl_FindRegistrationForId_ParamsDataView::GetKeyDataView(
    ::blink::mojom::StorageKeyDataView* output) {
  auto pointer = data_->key.Get();
  *output = ::blink::mojom::StorageKeyDataView(pointer, message_);
}


inline void ServiceWorkerStorageControl_FindRegistrationForId_ResponseParamsDataView::GetResultDataView(
    ServiceWorkerFindRegistrationResultDataView* output) {
  auto pointer = data_->result.Get();
  *output = ServiceWorkerFindRegistrationResultDataView(pointer, message_);
}


inline void ServiceWorkerStorageControl_GetRegistrationsForStorageKey_ParamsDataView::GetKeyDataView(
    ::blink::mojom::StorageKeyDataView* output) {
  auto pointer = data_->key.Get();
  *output = ::blink::mojom::StorageKeyDataView(pointer, message_);
}


inline void ServiceWorkerStorageControl_GetRegistrationsForStorageKey_ResponseParamsDataView::GetRegistrationsDataView(
    mojo::ArrayDataView<ServiceWorkerFindRegistrationResultDataView>* output) {
  auto pointer = data_->registrations.Get();
  *output = mojo::ArrayDataView<ServiceWorkerFindRegistrationResultDataView>(pointer, message_);
}


inline void ServiceWorkerStorageControl_GetUsageForStorageKey_ParamsDataView::GetKeyDataView(
    ::blink::mojom::StorageKeyDataView* output) {
  auto pointer = data_->key.Get();
  *output = ::blink::mojom::StorageKeyDataView(pointer, message_);
}






inline void ServiceWorkerStorageControl_GetAllRegistrationsDeprecated_ResponseParamsDataView::GetRegistrationsDataView(
    mojo::ArrayDataView<::storage::mojom::ServiceWorkerRegistrationDataDataView>* output) {
  auto pointer = data_->registrations.Get();
  *output = mojo::ArrayDataView<::storage::mojom::ServiceWorkerRegistrationDataDataView>(pointer, message_);
}


inline void ServiceWorkerStorageControl_StoreRegistration_ParamsDataView::GetRegistrationDataView(
    ::storage::mojom::ServiceWorkerRegistrationDataDataView* output) {
  auto pointer = data_->registration.Get();
  *output = ::storage::mojom::ServiceWorkerRegistrationDataDataView(pointer, message_);
}
inline void ServiceWorkerStorageControl_StoreRegistration_ParamsDataView::GetResourcesDataView(
    mojo::ArrayDataView<::storage::mojom::ServiceWorkerResourceRecordDataView>* output) {
  auto pointer = data_->resources.Get();
  *output = mojo::ArrayDataView<::storage::mojom::ServiceWorkerResourceRecordDataView>(pointer, message_);
}




inline void ServiceWorkerStorageControl_DeleteRegistration_ParamsDataView::GetKeyDataView(
    ::blink::mojom::StorageKeyDataView* output) {
  auto pointer = data_->key.Get();
  *output = ::blink::mojom::StorageKeyDataView(pointer, message_);
}




inline void ServiceWorkerStorageControl_UpdateToActiveState_ParamsDataView::GetKeyDataView(
    ::blink::mojom::StorageKeyDataView* output) {
  auto pointer = data_->key.Get();
  *output = ::blink::mojom::StorageKeyDataView(pointer, message_);
}




inline void ServiceWorkerStorageControl_UpdateLastUpdateCheckTime_ParamsDataView::GetKeyDataView(
    ::blink::mojom::StorageKeyDataView* output) {
  auto pointer = data_->key.Get();
  *output = ::blink::mojom::StorageKeyDataView(pointer, message_);
}
inline void ServiceWorkerStorageControl_UpdateLastUpdateCheckTime_ParamsDataView::GetLastUpdateCheckTimeDataView(
    ::mojo_base::mojom::TimeDataView* output) {
  auto pointer = data_->last_update_check_time.Get();
  *output = ::mojo_base::mojom::TimeDataView(pointer, message_);
}




inline void ServiceWorkerStorageControl_UpdateNavigationPreloadEnabled_ParamsDataView::GetKeyDataView(
    ::blink::mojom::StorageKeyDataView* output) {
  auto pointer = data_->key.Get();
  *output = ::blink::mojom::StorageKeyDataView(pointer, message_);
}




inline void ServiceWorkerStorageControl_UpdateNavigationPreloadHeader_ParamsDataView::GetKeyDataView(
    ::blink::mojom::StorageKeyDataView* output) {
  auto pointer = data_->key.Get();
  *output = ::blink::mojom::StorageKeyDataView(pointer, message_);
}
inline void ServiceWorkerStorageControl_UpdateNavigationPreloadHeader_ParamsDataView::GetValueDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->value.Get();
  *output = mojo::StringDataView(pointer, message_);
}


























inline void ServiceWorkerStorageControl_DoomUncommittedResources_ParamsDataView::GetResourceIdsDataView(
    mojo::ArrayDataView<int64_t>* output) {
  auto pointer = data_->resource_ids.Get();
  *output = mojo::ArrayDataView<int64_t>(pointer, message_);
}




inline void ServiceWorkerStorageControl_GetUserData_ParamsDataView::GetKeysDataView(
    mojo::ArrayDataView<mojo::StringDataView>* output) {
  auto pointer = data_->keys.Get();
  *output = mojo::ArrayDataView<mojo::StringDataView>(pointer, message_);
}


inline void ServiceWorkerStorageControl_GetUserData_ResponseParamsDataView::GetValuesDataView(
    mojo::ArrayDataView<mojo::StringDataView>* output) {
  auto pointer = data_->values.Get();
  *output = mojo::ArrayDataView<mojo::StringDataView>(pointer, message_);
}


inline void ServiceWorkerStorageControl_StoreUserData_ParamsDataView::GetKeyDataView(
    ::blink::mojom::StorageKeyDataView* output) {
  auto pointer = data_->key.Get();
  *output = ::blink::mojom::StorageKeyDataView(pointer, message_);
}
inline void ServiceWorkerStorageControl_StoreUserData_ParamsDataView::GetUserDataDataView(
    mojo::ArrayDataView<ServiceWorkerUserDataDataView>* output) {
  auto pointer = data_->user_data.Get();
  *output = mojo::ArrayDataView<ServiceWorkerUserDataDataView>(pointer, message_);
}




inline void ServiceWorkerStorageControl_ClearUserData_ParamsDataView::GetKeysDataView(
    mojo::ArrayDataView<mojo::StringDataView>* output) {
  auto pointer = data_->keys.Get();
  *output = mojo::ArrayDataView<mojo::StringDataView>(pointer, message_);
}




inline void ServiceWorkerStorageControl_GetUserDataByKeyPrefix_ParamsDataView::GetKeyPrefixDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->key_prefix.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void ServiceWorkerStorageControl_GetUserDataByKeyPrefix_ResponseParamsDataView::GetValuesDataView(
    mojo::ArrayDataView<mojo::StringDataView>* output) {
  auto pointer = data_->values.Get();
  *output = mojo::ArrayDataView<mojo::StringDataView>(pointer, message_);
}


inline void ServiceWorkerStorageControl_GetUserKeysAndDataByKeyPrefix_ParamsDataView::GetKeyPrefixDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->key_prefix.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void ServiceWorkerStorageControl_GetUserKeysAndDataByKeyPrefix_ResponseParamsDataView::GetUserDataDataView(
    mojo::MapDataView<mojo::StringDataView, mojo::StringDataView>* output) {
  auto pointer = data_->user_data.Get();
  *output = mojo::MapDataView<mojo::StringDataView, mojo::StringDataView>(pointer, message_);
}


inline void ServiceWorkerStorageControl_ClearUserDataByKeyPrefixes_ParamsDataView::GetKeyPrefixesDataView(
    mojo::ArrayDataView<mojo::StringDataView>* output) {
  auto pointer = data_->key_prefixes.Get();
  *output = mojo::ArrayDataView<mojo::StringDataView>(pointer, message_);
}




inline void ServiceWorkerStorageControl_GetUserDataForAllRegistrations_ParamsDataView::GetKeyDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->key.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void ServiceWorkerStorageControl_GetUserDataForAllRegistrations_ResponseParamsDataView::GetValuesDataView(
    mojo::ArrayDataView<ServiceWorkerUserDataDataView>* output) {
  auto pointer = data_->values.Get();
  *output = mojo::ArrayDataView<ServiceWorkerUserDataDataView>(pointer, message_);
}


inline void ServiceWorkerStorageControl_GetUserDataForAllRegistrationsByKeyPrefix_ParamsDataView::GetKeyPrefixDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->key_prefix.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void ServiceWorkerStorageControl_GetUserDataForAllRegistrationsByKeyPrefix_ResponseParamsDataView::GetValuesDataView(
    mojo::ArrayDataView<ServiceWorkerUserDataDataView>* output) {
  auto pointer = data_->values.Get();
  *output = mojo::ArrayDataView<ServiceWorkerUserDataDataView>(pointer, message_);
}


inline void ServiceWorkerStorageControl_ClearUserDataForAllRegistrationsByKeyPrefix_ParamsDataView::GetKeyPrefixDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->key_prefix.Get();
  *output = mojo::StringDataView(pointer, message_);
}








inline void ServiceWorkerStorageControl_ApplyPolicyUpdates_ParamsDataView::GetPolicyUpdatesDataView(
    mojo::ArrayDataView<::storage::mojom::StoragePolicyUpdateDataView>* output) {
  auto pointer = data_->policy_updates.Get();
  *output = mojo::ArrayDataView<::storage::mojom::StoragePolicyUpdateDataView>(pointer, message_);
}






inline void ServiceWorkerStorageControl_GetPurgingResourceIdsForTest_ResponseParamsDataView::GetResourceIdsDataView(
    mojo::ArrayDataView<int64_t>* output) {
  auto pointer = data_->resource_ids.Get();
  *output = mojo::ArrayDataView<int64_t>(pointer, message_);
}




inline void ServiceWorkerStorageControl_GetPurgingResourceIdsForLiveVersionForTest_ResponseParamsDataView::GetResourceIdsDataView(
    mojo::ArrayDataView<int64_t>* output) {
  auto pointer = data_->resource_ids.Get();
  *output = mojo::ArrayDataView<int64_t>(pointer, message_);
}




inline void ServiceWorkerStorageControl_GetPurgeableResourceIdsForTest_ResponseParamsDataView::GetResourceIdsDataView(
    mojo::ArrayDataView<int64_t>* output) {
  auto pointer = data_->resource_ids.Get();
  *output = mojo::ArrayDataView<int64_t>(pointer, message_);
}




inline void ServiceWorkerStorageControl_GetUncommittedResourceIdsForTest_ResponseParamsDataView::GetResourceIdsDataView(
    mojo::ArrayDataView<int64_t>* output) {
  auto pointer = data_->resource_ids.Get();
  *output = mojo::ArrayDataView<int64_t>(pointer, message_);
}





}  // namespace mojom
}  // namespace storage

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // COMPONENTS_SERVICES_STORAGE_PUBLIC_MOJOM_SERVICE_WORKER_STORAGE_CONTROL_MOJOM_PARAMS_DATA_H_