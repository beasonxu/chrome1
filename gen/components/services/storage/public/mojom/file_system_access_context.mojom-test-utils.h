// components/services/storage/public/mojom/file_system_access_context.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_SERVICES_STORAGE_PUBLIC_MOJOM_FILE_SYSTEM_ACCESS_CONTEXT_MOJOM_TEST_UTILS_H_
#define COMPONENTS_SERVICES_STORAGE_PUBLIC_MOJOM_FILE_SYSTEM_ACCESS_CONTEXT_MOJOM_TEST_UTILS_H_

#include "components/services/storage/public/mojom/file_system_access_context.mojom.h"


namespace storage {
namespace mojom {


class  FileSystemAccessContextInterceptorForTesting : public FileSystemAccessContext {
  virtual FileSystemAccessContext* GetForwardingInterface() = 0;
  void SerializeHandle(::mojo::PendingRemote<::blink::mojom::FileSystemAccessTransferToken> token, SerializeHandleCallback callback) override;
  void DeserializeHandle(const ::blink::StorageKey& storage_key, const std::vector<uint8_t>& bits, ::mojo::PendingReceiver<::blink::mojom::FileSystemAccessTransferToken> token) override;
};
class  FileSystemAccessContextAsyncWaiter {
 public:
  explicit FileSystemAccessContextAsyncWaiter(FileSystemAccessContext* proxy);

  FileSystemAccessContextAsyncWaiter(const FileSystemAccessContextAsyncWaiter&) = delete;
  FileSystemAccessContextAsyncWaiter& operator=(const FileSystemAccessContextAsyncWaiter&) = delete;

  ~FileSystemAccessContextAsyncWaiter();
  void SerializeHandle(
      ::mojo::PendingRemote<::blink::mojom::FileSystemAccessTransferToken> token, std::vector<uint8_t>* out_bits);

 private:
  FileSystemAccessContext* const proxy_;
};




}  // namespace mojom
}  // namespace storage

#endif  // COMPONENTS_SERVICES_STORAGE_PUBLIC_MOJOM_FILE_SYSTEM_ACCESS_CONTEXT_MOJOM_TEST_UTILS_H_