// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/offline_items_collection/bridges/OfflineItemBridge

#ifndef org_chromium_components_offline_items_collection_bridges_OfflineItemBridge_JNI
#define org_chromium_components_offline_items_collection_bridges_OfflineItemBridge_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_offline_1items_1collection_bridges_OfflineItemBridge[];
const char kClassPath_org_chromium_components_offline_1items_1collection_bridges_OfflineItemBridge[]
    = "org/chromium/components/offline_items_collection/bridges/OfflineItemBridge";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_offline_1items_1collection_bridges_OfflineItemBridge_clazz(nullptr);
#ifndef org_chromium_components_offline_1items_1collection_bridges_OfflineItemBridge_clazz_defined
#define org_chromium_components_offline_1items_1collection_bridges_OfflineItemBridge_clazz_defined
inline jclass
    org_chromium_components_offline_1items_1collection_bridges_OfflineItemBridge_clazz(JNIEnv* env)
    {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_offline_1items_1collection_bridges_OfflineItemBridge,
      &g_org_chromium_components_offline_1items_1collection_bridges_OfflineItemBridge_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace offline_items_collection {
namespace android {


static std::atomic<jmethodID>
    g_org_chromium_components_offline_1items_1collection_bridges_OfflineItemBridge_createArrayList(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_OfflineItemBridge_createArrayList(JNIEnv*
    env) {
  jclass clazz =
      org_chromium_components_offline_1items_1collection_bridges_OfflineItemBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_offline_1items_1collection_bridges_OfflineItemBridge_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createArrayList",
          "()Ljava/util/ArrayList;",
&g_org_chromium_components_offline_1items_1collection_bridges_OfflineItemBridge_createArrayList);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_offline_1items_1collection_bridges_OfflineItemBridge_createOfflineItemAndMaybeAddToList(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_OfflineItemBridge_createOfflineItemAndMaybeAddToList(JNIEnv* env, const
    base::android::JavaRef<jobject>& list,
    const base::android::JavaRef<jstring>& nameSpace,
    const base::android::JavaRef<jstring>& id,
    const base::android::JavaRef<jstring>& title,
    const base::android::JavaRef<jstring>& description,
    JniIntWrapper filter,
    jboolean isTransient,
    jboolean isSuggested,
    jboolean isAccelerated,
    jboolean promoteOrigin,
    jlong totalSizeBytes,
    jboolean externallyRemoved,
    jlong creationTimeMs,
    jlong completionTimeMs,
    jlong lastAccessedTimeMs,
    jboolean isOpenable,
    const base::android::JavaRef<jstring>& filePath,
    const base::android::JavaRef<jstring>& mimeType,
    const base::android::JavaRef<jobject>& url,
    const base::android::JavaRef<jobject>& originalUrl,
    jboolean isOffTheRecord,
    const base::android::JavaRef<jstring>& otrProfileId,
    JniIntWrapper state,
    JniIntWrapper failState,
    JniIntWrapper pendingState,
    jboolean isResumable,
    jboolean allowMetered,
    jlong receivedBytes,
    jlong progressValue,
    jlong progressMax,
    JniIntWrapper progressUnit,
    jlong timeRemainingMs,
    jboolean isDangerous,
    jboolean canRename,
    jboolean ignoreVisuals,
    jdouble contentQualityScore,
    const base::android::JavaRef<jobject>& schedule) {
  jclass clazz =
      org_chromium_components_offline_1items_1collection_bridges_OfflineItemBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_offline_1items_1collection_bridges_OfflineItemBridge_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createOfflineItemAndMaybeAddToList",
"(Ljava/util/ArrayList;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZZZZJZJJJZLjava/lang/String;Ljava/lang/String;Lorg/chromium/url/GURL;Lorg/chromium/url/GURL;ZLjava/lang/String;IIIZZJJJIJZZZDLorg/chromium/components/offline_items_collection/OfflineItemSchedule;)Lorg/chromium/components/offline_items_collection/OfflineItem;",
&g_org_chromium_components_offline_1items_1collection_bridges_OfflineItemBridge_createOfflineItemAndMaybeAddToList);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, list.obj(), nameSpace.obj(), id.obj(), title.obj(),
              description.obj(), as_jint(filter), isTransient, isSuggested, isAccelerated,
              promoteOrigin, totalSizeBytes, externallyRemoved, creationTimeMs, completionTimeMs,
              lastAccessedTimeMs, isOpenable, filePath.obj(), mimeType.obj(), url.obj(),
              originalUrl.obj(), isOffTheRecord, otrProfileId.obj(), as_jint(state),
              as_jint(failState), as_jint(pendingState), isResumable, allowMetered, receivedBytes,
              progressValue, progressMax, as_jint(progressUnit), timeRemainingMs, isDangerous,
              canRename, ignoreVisuals, contentQualityScore, schedule.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_offline_1items_1collection_bridges_OfflineItemBridge_createUpdateDelta(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_OfflineItemBridge_createUpdateDelta(JNIEnv*
    env, jboolean stateChanged,
    jboolean visualsChanged) {
  jclass clazz =
      org_chromium_components_offline_1items_1collection_bridges_OfflineItemBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_offline_1items_1collection_bridges_OfflineItemBridge_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createUpdateDelta",
          "(ZZ)Lorg/chromium/components/offline_items_collection/UpdateDelta;",
&g_org_chromium_components_offline_1items_1collection_bridges_OfflineItemBridge_createUpdateDelta);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, stateChanged, visualsChanged);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_offline_1items_1collection_bridges_OfflineItemBridge_createOfflineItemSchedule(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_OfflineItemBridge_createOfflineItemSchedule(JNIEnv* env, jboolean onlyOnWifi,
    jlong startTimeMs) {
  jclass clazz =
      org_chromium_components_offline_1items_1collection_bridges_OfflineItemBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_offline_1items_1collection_bridges_OfflineItemBridge_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createOfflineItemSchedule",
          "(ZJ)Lorg/chromium/components/offline_items_collection/OfflineItemSchedule;",
&g_org_chromium_components_offline_1items_1collection_bridges_OfflineItemBridge_createOfflineItemSchedule);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, onlyOnWifi, startTimeMs);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

}  // namespace android
}  // namespace offline_items_collection

#endif  // org_chromium_components_offline_items_collection_bridges_OfflineItemBridge_JNI
