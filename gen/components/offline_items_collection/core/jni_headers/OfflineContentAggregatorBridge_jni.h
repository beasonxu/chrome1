// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/offline_items_collection/OfflineContentAggregatorBridge

#ifndef org_chromium_components_offline_items_collection_OfflineContentAggregatorBridge_JNI
#define org_chromium_components_offline_items_collection_OfflineContentAggregatorBridge_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge[];
const char
    kClassPath_org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge[] =
    "org/chromium/components/offline_items_collection/OfflineContentAggregatorBridge";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_clazz(nullptr);
#ifndef org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_clazz_defined
#define org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_clazz_defined
inline jclass
    org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge,
      &g_org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace offline_items_collection {
namespace android {

JNI_GENERATOR_EXPORT void Java_J_N_MXureVYk(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeOfflineContentAggregatorBridge,
    jobject caller,
    jint location,
    jboolean openInIncognito,
    jstring nameSpace,
    jstring id) {
  OfflineContentAggregatorBridge* native =
      reinterpret_cast<OfflineContentAggregatorBridge*>(nativeOfflineContentAggregatorBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "OpenItem");
  return native->OpenItem(env, base::android::JavaParamRef<jobject>(env, caller), location,
      openInIncognito, base::android::JavaParamRef<jstring>(env, nameSpace),
      base::android::JavaParamRef<jstring>(env, id));
}

JNI_GENERATOR_EXPORT void Java_J_N_MGbhWq61(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeOfflineContentAggregatorBridge,
    jobject caller,
    jstring nameSpace,
    jstring id) {
  OfflineContentAggregatorBridge* native =
      reinterpret_cast<OfflineContentAggregatorBridge*>(nativeOfflineContentAggregatorBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "RemoveItem");
  return native->RemoveItem(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, nameSpace),
      base::android::JavaParamRef<jstring>(env, id));
}

JNI_GENERATOR_EXPORT void Java_J_N_Mwk11G0z(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeOfflineContentAggregatorBridge,
    jobject caller,
    jstring nameSpace,
    jstring id) {
  OfflineContentAggregatorBridge* native =
      reinterpret_cast<OfflineContentAggregatorBridge*>(nativeOfflineContentAggregatorBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "CancelDownload");
  return native->CancelDownload(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, nameSpace),
      base::android::JavaParamRef<jstring>(env, id));
}

JNI_GENERATOR_EXPORT void Java_J_N_MBvrmOCy(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeOfflineContentAggregatorBridge,
    jobject caller,
    jstring nameSpace,
    jstring id) {
  OfflineContentAggregatorBridge* native =
      reinterpret_cast<OfflineContentAggregatorBridge*>(nativeOfflineContentAggregatorBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "PauseDownload");
  return native->PauseDownload(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, nameSpace),
      base::android::JavaParamRef<jstring>(env, id));
}

JNI_GENERATOR_EXPORT void Java_J_N_MSy1v2e_00024(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeOfflineContentAggregatorBridge,
    jobject caller,
    jstring nameSpace,
    jstring id,
    jboolean hasUserGesture) {
  OfflineContentAggregatorBridge* native =
      reinterpret_cast<OfflineContentAggregatorBridge*>(nativeOfflineContentAggregatorBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "ResumeDownload");
  return native->ResumeDownload(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, nameSpace),
      base::android::JavaParamRef<jstring>(env, id), hasUserGesture);
}

JNI_GENERATOR_EXPORT void Java_J_N_MJYXvOtL(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeOfflineContentAggregatorBridge,
    jobject caller,
    jstring nameSpace,
    jstring id,
    jobject callback) {
  OfflineContentAggregatorBridge* native =
      reinterpret_cast<OfflineContentAggregatorBridge*>(nativeOfflineContentAggregatorBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetItemById");
  return native->GetItemById(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, nameSpace),
      base::android::JavaParamRef<jstring>(env, id), base::android::JavaParamRef<jobject>(env,
      callback));
}

JNI_GENERATOR_EXPORT void Java_J_N_MWgZa2II(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeOfflineContentAggregatorBridge,
    jobject caller,
    jobject callback) {
  OfflineContentAggregatorBridge* native =
      reinterpret_cast<OfflineContentAggregatorBridge*>(nativeOfflineContentAggregatorBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetAllItems");
  return native->GetAllItems(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jobject>(env, callback));
}

JNI_GENERATOR_EXPORT void Java_J_N_MwOuZAaJ(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeOfflineContentAggregatorBridge,
    jobject caller,
    jstring nameSpace,
    jstring id,
    jobject callback) {
  OfflineContentAggregatorBridge* native =
      reinterpret_cast<OfflineContentAggregatorBridge*>(nativeOfflineContentAggregatorBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetVisualsForItem");
  return native->GetVisualsForItem(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, nameSpace),
      base::android::JavaParamRef<jstring>(env, id), base::android::JavaParamRef<jobject>(env,
      callback));
}

JNI_GENERATOR_EXPORT void Java_J_N_M8AqLjBj(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeOfflineContentAggregatorBridge,
    jobject caller,
    jstring nameSpace,
    jstring id,
    jobject callback) {
  OfflineContentAggregatorBridge* native =
      reinterpret_cast<OfflineContentAggregatorBridge*>(nativeOfflineContentAggregatorBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetShareInfoForItem");
  return native->GetShareInfoForItem(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, nameSpace),
      base::android::JavaParamRef<jstring>(env, id), base::android::JavaParamRef<jobject>(env,
      callback));
}

JNI_GENERATOR_EXPORT void Java_J_N_MnGmsa_00024g(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeOfflineContentAggregatorBridge,
    jobject caller,
    jstring nameSpace,
    jstring id,
    jstring name,
    jobject callback) {
  OfflineContentAggregatorBridge* native =
      reinterpret_cast<OfflineContentAggregatorBridge*>(nativeOfflineContentAggregatorBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "RenameItem");
  return native->RenameItem(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, nameSpace),
      base::android::JavaParamRef<jstring>(env, id), base::android::JavaParamRef<jstring>(env,
      name), base::android::JavaParamRef<jobject>(env, callback));
}


static std::atomic<jmethodID>
    g_org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_onItemsAdded(nullptr);
static void Java_OfflineContentAggregatorBridge_onItemsAdded(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>& items) {
  jclass clazz =
      org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onItemsAdded",
          "(Ljava/util/ArrayList;)V",
&g_org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_onItemsAdded);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, items.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_onItemRemoved(nullptr);
static void Java_OfflineContentAggregatorBridge_onItemRemoved(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& nameSpace,
    const base::android::JavaRef<jstring>& id) {
  jclass clazz =
      org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onItemRemoved",
          "(Ljava/lang/String;Ljava/lang/String;)V",
&g_org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_onItemRemoved);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, nameSpace.obj(), id.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_onItemUpdated(nullptr);
static void Java_OfflineContentAggregatorBridge_onItemUpdated(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>& item,
    const base::android::JavaRef<jobject>& updateDelta) {
  jclass clazz =
      org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onItemUpdated",
"(Lorg/chromium/components/offline_items_collection/OfflineItem;Lorg/chromium/components/offline_items_collection/UpdateDelta;)V",
&g_org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_onItemUpdated);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, item.obj(), updateDelta.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_onVisualsAvailable(nullptr);
static void Java_OfflineContentAggregatorBridge_onVisualsAvailable(JNIEnv* env, const
    base::android::JavaRef<jobject>& callback,
    const base::android::JavaRef<jstring>& nameSpace,
    const base::android::JavaRef<jstring>& id,
    const base::android::JavaRef<jobject>& visuals) {
  jclass clazz =
      org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "onVisualsAvailable",
"(Lorg/chromium/components/offline_items_collection/VisualsCallback;Ljava/lang/String;Ljava/lang/String;Lorg/chromium/components/offline_items_collection/OfflineItemVisuals;)V",
&g_org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_onVisualsAvailable);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, callback.obj(), nameSpace.obj(), id.obj(), visuals.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_onShareInfoAvailable(nullptr);
static void Java_OfflineContentAggregatorBridge_onShareInfoAvailable(JNIEnv* env, const
    base::android::JavaRef<jobject>& callback,
    const base::android::JavaRef<jstring>& nameSpace,
    const base::android::JavaRef<jstring>& id,
    const base::android::JavaRef<jobject>& shareInfo) {
  jclass clazz =
      org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "onShareInfoAvailable",
"(Lorg/chromium/components/offline_items_collection/ShareCallback;Ljava/lang/String;Ljava/lang/String;Lorg/chromium/components/offline_items_collection/OfflineItemShareInfo;)V",
&g_org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_onShareInfoAvailable);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, callback.obj(), nameSpace.obj(), id.obj(), shareInfo.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_onNativeDestroyed(nullptr);
static void Java_OfflineContentAggregatorBridge_onNativeDestroyed(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onNativeDestroyed",
          "()V",
&g_org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_onNativeDestroyed);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_create(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_OfflineContentAggregatorBridge_create(JNIEnv*
    env, jlong nativeOfflineContentAggregatorBridge) {
  jclass clazz =
      org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "create",
          "(J)Lorg/chromium/components/offline_items_collection/OfflineContentAggregatorBridge;",
&g_org_chromium_components_offline_1items_1collection_OfflineContentAggregatorBridge_create);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, nativeOfflineContentAggregatorBridge);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

}  // namespace android
}  // namespace offline_items_collection

#endif  // org_chromium_components_offline_items_collection_OfflineContentAggregatorBridge_JNI
