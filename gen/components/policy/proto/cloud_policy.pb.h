// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cloud_policy.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_cloud_5fpolicy_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_cloud_5fpolicy_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "policy_common_definitions.pb.h"
// @@protoc_insertion_point(includes)
#include "components/policy/proto/policy_proto_export.h"
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_cloud_5fpolicy_2eproto POLICY_PROTO_EXPORT
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct POLICY_PROTO_EXPORT TableStruct_cloud_5fpolicy_2eproto {
static const uint32_t offsets[];
};
namespace enterprise_management {
class CloudPolicySettings;
struct CloudPolicySettingsDefaultTypeInternal;
POLICY_PROTO_EXPORT extern CloudPolicySettingsDefaultTypeInternal _CloudPolicySettings_default_instance_;
}  // namespace enterprise_management
PROTOBUF_NAMESPACE_OPEN
template<> POLICY_PROTO_EXPORT ::enterprise_management::CloudPolicySettings* Arena::CreateMaybeMessage<::enterprise_management::CloudPolicySettings>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace enterprise_management {

// ===================================================================

class POLICY_PROTO_EXPORT CloudPolicySettings final :
public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:enterprise_management.CloudPolicySettings) */ {
public:
inline CloudPolicySettings() : CloudPolicySettings(nullptr) {}
~CloudPolicySettings() override;
explicit PROTOBUF_CONSTEXPR CloudPolicySettings(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

CloudPolicySettings(const CloudPolicySettings& from);
CloudPolicySettings(CloudPolicySettings&& from) noexcept
: CloudPolicySettings() {
*this = ::std::move(from);
}

inline CloudPolicySettings& operator=(const CloudPolicySettings& from) {
CopyFrom(from);
return *this;
}
inline CloudPolicySettings& operator=(CloudPolicySettings&& from) noexcept {
if (this == &from) return *this;
if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
&& GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
) {
InternalSwap(&from);
} else {
CopyFrom(from);
}
return *this;
}

inline const std::string& unknown_fields() const {
return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
}
inline std::string* mutable_unknown_fields() {
return _internal_metadata_.mutable_unknown_fields<std::string>();
}

static const CloudPolicySettings& default_instance() {
return *internal_default_instance();
}
static inline const CloudPolicySettings* internal_default_instance() {
return reinterpret_cast<const CloudPolicySettings*>(
&_CloudPolicySettings_default_instance_);
}
static constexpr int kIndexInFileMessages =
0;

friend void swap(CloudPolicySettings& a, CloudPolicySettings& b) {
a.Swap(&b);
}
PROTOBUF_NOINLINE void Swap(CloudPolicySettings* other) {
if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
if (GetOwningArena() != nullptr &&
GetOwningArena() == other->GetOwningArena()) {
#else  // PROTOBUF_FORCE_COPY_IN_SWAP
if (GetOwningArena() == other->GetOwningArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
InternalSwap(other);
} else {
::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
}
}
void UnsafeArenaSwap(CloudPolicySettings* other) {
if (other == this) return;
GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
InternalSwap(other);
}

// implements Message ----------------------------------------------

CloudPolicySettings* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
return CreateMaybeMessage<CloudPolicySettings>(arena);
}
void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
void CopyFrom(const CloudPolicySettings& from);
void MergeFrom(const CloudPolicySettings& from);
PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
bool IsInitialized() const final;

size_t ByteSizeLong() const final;
const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
uint8_t* _InternalSerialize(
uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
int GetCachedSize() const final { return _cached_size_.Get(); }

private:
void SharedCtor();
void SharedDtor();
void SetCachedSize(int size) const;
void InternalSwap(CloudPolicySettings* other);

private:
friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
return "enterprise_management.CloudPolicySettings";
}
protected:
explicit CloudPolicySettings(::PROTOBUF_NAMESPACE_ID::Arena* arena,
bool is_message_owned = false);
public:

std::string GetTypeName() const final;

// nested types ----------------------------------------------------

// accessors -------------------------------------------------------

enum : int {
kHomepageLocationFieldNumber = 3,
kAlternateErrorPagesEnabledFieldNumber = 7,
kSearchSuggestEnabledFieldNumber = 8,
kJavascriptEnabledFieldNumber = 11,
kIncognitoEnabledFieldNumber = 12,
kSavingBrowserHistoryDisabledFieldNumber = 13,
kPrintingEnabledFieldNumber = 14,
kSafeBrowsingEnabledFieldNumber = 16,
kMetricsReportingEnabledFieldNumber = 17,
kPasswordManagerEnabledFieldNumber = 18,
kAutoFillEnabledFieldNumber = 20,
kSyncDisabledFieldNumber = 22,
kProxyModeFieldNumber = 23,
kProxyServerModeFieldNumber = 24,
kProxyServerFieldNumber = 25,
kProxyPacUrlFieldNumber = 26,
kProxyBypassListFieldNumber = 27,
kAuthSchemesFieldNumber = 28,
kDisableAuthNegotiateCnameLookupFieldNumber = 29,
kBlockThirdPartyCookiesFieldNumber = 41,
kDefaultSearchProviderEnabledFieldNumber = 42,
kDefaultSearchProviderNameFieldNumber = 43,
kDefaultSearchProviderKeywordFieldNumber = 44,
kDefaultSearchProviderSearchURLFieldNumber = 45,
kDefaultSearchProviderSuggestURLFieldNumber = 46,
kDefaultSearchProviderIconURLFieldNumber = 48,
kDefaultSearchProviderEncodingsFieldNumber = 49,
kDefaultCookiesSettingFieldNumber = 50,
kDefaultJavaScriptSettingFieldNumber = 52,
kDefaultPopupsSettingFieldNumber = 54,
kDefaultGeolocationSettingFieldNumber = 56,
kCookiesBlockedForUrlsFieldNumber = 69,
kCookiesSessionOnlyForUrlsFieldNumber = 70,
kJavaScriptAllowedForUrlsFieldNumber = 73,
kJavaScriptBlockedForUrlsFieldNumber = 74,
kPopupsAllowedForUrlsFieldNumber = 77,
kPopupsBlockedForUrlsFieldNumber = 78,
kCookiesAllowedForUrlsFieldNumber = 79,
kTranslateEnabledFieldNumber = 82,
kEditBookmarksEnabledFieldNumber = 85,
kIncognitoModeAvailabilityFieldNumber = 95,
kProxySettingsFieldNumber = 118,
kDisableSafeBrowsingProceedAnywayFieldNumber = 152,
kDefaultSearchProviderAlternateURLsFieldNumber = 163,
kForceSafeSearchFieldNumber = 164,
kBuiltInDnsClientEnabledFieldNumber = 167,
kSigninAllowedFieldNumber = 192,
kVariationsRestrictParameterFieldNumber = 198,
kManagedBookmarksFieldNumber = 229,
kDefaultSearchProviderImageURLFieldNumber = 231,
kDefaultSearchProviderSearchURLPostParamsFieldNumber = 232,
kDefaultSearchProviderSuggestURLPostParamsFieldNumber = 233,
kDefaultSearchProviderImageURLPostParamsFieldNumber = 235,
kDefaultSearchProviderNewTabURLFieldNumber = 239,
kNetworkPredictionOptionsFieldNumber = 275,
kSSLVersionMinFieldNumber = 281,
kContextualSearchEnabledFieldNumber = 283,
kForceGoogleSafeSearchFieldNumber = 284,
kForceYouTubeSafetyModeFieldNumber = 285,
kSSLErrorOverrideAllowedFieldNumber = 302,
kAuthAndroidNegotiateAccountTypeFieldNumber = 307,
kDefaultWebBluetoothGuardSettingFieldNumber = 322,
kAllowedDomainsForAppsFieldNumber = 333,
kEnableMediaRouterFieldNumber = 335,
kCertificateTransparencyEnforcementDisabledForUrlsFieldNumber = 337,
kNTPContentSuggestionsEnabledFieldNumber = 340,
kWebRtcUdpPortRangeFieldNumber = 341,
kComponentUpdatesEnabledFieldNumber = 344,
kForceBrowserSigninFieldNumber = 348,
kForceYouTubeRestrictFieldNumber = 350,
kCloudPolicyOverridesPlatformPolicyFieldNumber = 383,
kAutofillCreditCardEnabledFieldNumber = 394,
kNtlmV2EnabledFieldNumber = 395,
kPromptForDownloadLocationFieldNumber = 397,
kRestrictAccountsToPatternsFieldNumber = 412,
kSafeBrowsingExtendedReportingEnabledFieldNumber = 431,
kDefaultWebUsbGuardSettingFieldNumber = 436,
kCertificateTransparencyEnforcementDisabledForCasFieldNumber = 437,
kCertificateTransparencyEnforcementDisabledForLegacyCasFieldNumber = 438,
kWebUsbAskForUrlsFieldNumber = 441,
kWebUsbBlockedForUrlsFieldNumber = 442,
kIsolateOriginsAndroidFieldNumber = 447,
kSitePerProcessAndroidFieldNumber = 448,
kOverrideSecurityRestrictionsOnInsecureOriginFieldNumber = 459,
kAutofillAddressEnabledFieldNumber = 461,
kUrlKeyedAnonymizedDataCollectionEnabledFieldNumber = 463,
kCoalesceH2ConnectionsWithClientCertificatesForHostsFieldNumber = 468,
kEnterpriseHardwarePlatformAPIEnabledFieldNumber = 485,
kWebUsbAllowDevicesForUrlsFieldNumber = 488,
kBrowserSigninFieldNumber = 489,
kCloudReportingEnabledFieldNumber = 495,
kCloudManagementEnrollmentTokenFieldNumber = 512,
kPolicyListMultipleSourceMergeListFieldNumber = 556,
kPolicyDictionaryMultipleSourceMergeListFieldNumber = 567,
kPasswordLeakDetectionEnabledFieldNumber = 582,
kDnsOverHttpsModeFieldNumber = 584,
kPolicyAtomicGroupsEnabledFieldNumber = 586,
kHSTSPolicyBypassListFieldNumber = 603,
kSharedClipboardEnabledFieldNumber = 612,
kLegacySameSiteCookieBehaviorEnabledForDomainListFieldNumber = 626,
kDnsOverHttpsTemplatesFieldNumber = 644,
kSyncTypesListDisabledFieldNumber = 651,
kPaymentMethodQueryEnabledFieldNumber = 653,
kSafeBrowsingProtectionLevelFieldNumber = 686,
kScrollToTextFragmentEnabledFieldNumber = 689,
kEnableExperimentalPoliciesFieldNumber = 713,
kIntensiveWakeUpThrottlingEnabledFieldNumber = 715,
kURLBlocklistFieldNumber = 738,
kURLAllowlistFieldNumber = 739,
kAuthNegotiateDelegateAllowlistFieldNumber = 748,
kAuthServerAllowlistFieldNumber = 749,
kInsecureFormsWarningsEnabledFieldNumber = 750,
kDefaultSensorsSettingFieldNumber = 756,
kSensorsAllowedForUrlsFieldNumber = 757,
kSensorsBlockedForUrlsFieldNumber = 758,
kBackForwardCacheEnabledFieldNumber = 760,
kInsecurePrivateNetworkRequestsAllowedFieldNumber = 768,
kInsecurePrivateNetworkRequestsAllowedForUrlsFieldNumber = 769,
kLookalikeWarningAllowlistDomainsFieldNumber = 784,
kBrowsingDataLifetimeFieldNumber = 793,
kTosDialogBehaviorFieldNumber = 803,
kSSLErrorOverrideAllowedForOriginsFieldNumber = 821,
kWebXRImmersiveArEnabledFieldNumber = 822,
kSuppressDifferentOriginSubframeDialogsFieldNumber = 831,
kCECPQ2EnabledFieldNumber = 843,
kExplicitlyAllowedNetworkPortsFieldNumber = 851,
kLensCameraAssistedSearchEnabledFieldNumber = 855,
kAdditionalDnsQueryTypesEnabledFieldNumber = 859,
kCloudUserPolicyMergeFieldNumber = 861,
kDefaultJavaScriptJitSettingFieldNumber = 869,
kJavaScriptJitAllowedForSitesFieldNumber = 870,
kJavaScriptJitBlockedForSitesFieldNumber = 871,
kHttpsOnlyModeFieldNumber = 872,
kCloudUserPolicyOverridesCloudMachinePolicyFieldNumber = 901,
kCORSNonWildcardRequestHeadersSupportFieldNumber = 923,
kUserAgentClientHintsGREASEUpdateEnabledFieldNumber = 926,
kUserAgentReductionFieldNumber = 934,
kCloudProfileReportingEnabledFieldNumber = 944,
kFirstPartySetsEnabledFieldNumber = 950,
kForceMajorVersionToMinorPositionInUserAgentFieldNumber = 951,
kAllHttpAuthSchemesAllowedForOriginsFieldNumber = 952,
kCloudReportingUploadFrequencyFieldNumber = 964,
kWebSQLAccessFieldNumber = 968,
kSetTimeoutWithout1MsClampEnabledFieldNumber = 969,
kFirstPartySetsOverridesFieldNumber = 971,
kEnterpriseAuthenticationAppLinkPolicyFieldNumber = 978,
kUrlParamFilterEnabledFieldNumber = 983,
kUnthrottledNestedTimeoutEnabledFieldNumber = 990,
kEventPathEnabledFieldNumber = 992,
kWebSQLNonSecureContextEnabledFieldNumber = 995,
kEncryptedClientHelloEnabledFieldNumber = 998,
kPersistentQuotaEnabledFieldNumber = 1004,
};
// optional .enterprise_management.StringPolicyProto HomepageLocation = 3;
bool has_homepagelocation() const;
private:
bool _internal_has_homepagelocation() const;
public:
void clear_homepagelocation();
const ::enterprise_management::StringPolicyProto& homepagelocation() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_homepagelocation();
::enterprise_management::StringPolicyProto* mutable_homepagelocation();
void set_allocated_homepagelocation(::enterprise_management::StringPolicyProto* homepagelocation);
private:
const ::enterprise_management::StringPolicyProto& _internal_homepagelocation() const;
::enterprise_management::StringPolicyProto* _internal_mutable_homepagelocation();
public:
void unsafe_arena_set_allocated_homepagelocation(
::enterprise_management::StringPolicyProto* homepagelocation);
::enterprise_management::StringPolicyProto* unsafe_arena_release_homepagelocation();

// optional .enterprise_management.BooleanPolicyProto AlternateErrorPagesEnabled = 7;
bool has_alternateerrorpagesenabled() const;
private:
bool _internal_has_alternateerrorpagesenabled() const;
public:
void clear_alternateerrorpagesenabled();
const ::enterprise_management::BooleanPolicyProto& alternateerrorpagesenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_alternateerrorpagesenabled();
::enterprise_management::BooleanPolicyProto* mutable_alternateerrorpagesenabled();
void set_allocated_alternateerrorpagesenabled(::enterprise_management::BooleanPolicyProto* alternateerrorpagesenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_alternateerrorpagesenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_alternateerrorpagesenabled();
public:
void unsafe_arena_set_allocated_alternateerrorpagesenabled(
::enterprise_management::BooleanPolicyProto* alternateerrorpagesenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_alternateerrorpagesenabled();

// optional .enterprise_management.BooleanPolicyProto SearchSuggestEnabled = 8;
bool has_searchsuggestenabled() const;
private:
bool _internal_has_searchsuggestenabled() const;
public:
void clear_searchsuggestenabled();
const ::enterprise_management::BooleanPolicyProto& searchsuggestenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_searchsuggestenabled();
::enterprise_management::BooleanPolicyProto* mutable_searchsuggestenabled();
void set_allocated_searchsuggestenabled(::enterprise_management::BooleanPolicyProto* searchsuggestenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_searchsuggestenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_searchsuggestenabled();
public:
void unsafe_arena_set_allocated_searchsuggestenabled(
::enterprise_management::BooleanPolicyProto* searchsuggestenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_searchsuggestenabled();

// optional .enterprise_management.BooleanPolicyProto JavascriptEnabled = 11;
bool has_javascriptenabled() const;
private:
bool _internal_has_javascriptenabled() const;
public:
void clear_javascriptenabled();
const ::enterprise_management::BooleanPolicyProto& javascriptenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_javascriptenabled();
::enterprise_management::BooleanPolicyProto* mutable_javascriptenabled();
void set_allocated_javascriptenabled(::enterprise_management::BooleanPolicyProto* javascriptenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_javascriptenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_javascriptenabled();
public:
void unsafe_arena_set_allocated_javascriptenabled(
::enterprise_management::BooleanPolicyProto* javascriptenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_javascriptenabled();

// optional .enterprise_management.BooleanPolicyProto IncognitoEnabled = 12;
bool has_incognitoenabled() const;
private:
bool _internal_has_incognitoenabled() const;
public:
void clear_incognitoenabled();
const ::enterprise_management::BooleanPolicyProto& incognitoenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_incognitoenabled();
::enterprise_management::BooleanPolicyProto* mutable_incognitoenabled();
void set_allocated_incognitoenabled(::enterprise_management::BooleanPolicyProto* incognitoenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_incognitoenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_incognitoenabled();
public:
void unsafe_arena_set_allocated_incognitoenabled(
::enterprise_management::BooleanPolicyProto* incognitoenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_incognitoenabled();

// optional .enterprise_management.BooleanPolicyProto SavingBrowserHistoryDisabled = 13;
bool has_savingbrowserhistorydisabled() const;
private:
bool _internal_has_savingbrowserhistorydisabled() const;
public:
void clear_savingbrowserhistorydisabled();
const ::enterprise_management::BooleanPolicyProto& savingbrowserhistorydisabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_savingbrowserhistorydisabled();
::enterprise_management::BooleanPolicyProto* mutable_savingbrowserhistorydisabled();
void set_allocated_savingbrowserhistorydisabled(::enterprise_management::BooleanPolicyProto* savingbrowserhistorydisabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_savingbrowserhistorydisabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_savingbrowserhistorydisabled();
public:
void unsafe_arena_set_allocated_savingbrowserhistorydisabled(
::enterprise_management::BooleanPolicyProto* savingbrowserhistorydisabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_savingbrowserhistorydisabled();

// optional .enterprise_management.BooleanPolicyProto PrintingEnabled = 14;
bool has_printingenabled() const;
private:
bool _internal_has_printingenabled() const;
public:
void clear_printingenabled();
const ::enterprise_management::BooleanPolicyProto& printingenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_printingenabled();
::enterprise_management::BooleanPolicyProto* mutable_printingenabled();
void set_allocated_printingenabled(::enterprise_management::BooleanPolicyProto* printingenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_printingenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_printingenabled();
public:
void unsafe_arena_set_allocated_printingenabled(
::enterprise_management::BooleanPolicyProto* printingenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_printingenabled();

// optional .enterprise_management.BooleanPolicyProto SafeBrowsingEnabled = 16;
bool has_safebrowsingenabled() const;
private:
bool _internal_has_safebrowsingenabled() const;
public:
void clear_safebrowsingenabled();
const ::enterprise_management::BooleanPolicyProto& safebrowsingenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_safebrowsingenabled();
::enterprise_management::BooleanPolicyProto* mutable_safebrowsingenabled();
void set_allocated_safebrowsingenabled(::enterprise_management::BooleanPolicyProto* safebrowsingenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_safebrowsingenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_safebrowsingenabled();
public:
void unsafe_arena_set_allocated_safebrowsingenabled(
::enterprise_management::BooleanPolicyProto* safebrowsingenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_safebrowsingenabled();

// optional .enterprise_management.BooleanPolicyProto MetricsReportingEnabled = 17;
bool has_metricsreportingenabled() const;
private:
bool _internal_has_metricsreportingenabled() const;
public:
void clear_metricsreportingenabled();
const ::enterprise_management::BooleanPolicyProto& metricsreportingenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_metricsreportingenabled();
::enterprise_management::BooleanPolicyProto* mutable_metricsreportingenabled();
void set_allocated_metricsreportingenabled(::enterprise_management::BooleanPolicyProto* metricsreportingenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_metricsreportingenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_metricsreportingenabled();
public:
void unsafe_arena_set_allocated_metricsreportingenabled(
::enterprise_management::BooleanPolicyProto* metricsreportingenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_metricsreportingenabled();

// optional .enterprise_management.BooleanPolicyProto PasswordManagerEnabled = 18;
bool has_passwordmanagerenabled() const;
private:
bool _internal_has_passwordmanagerenabled() const;
public:
void clear_passwordmanagerenabled();
const ::enterprise_management::BooleanPolicyProto& passwordmanagerenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_passwordmanagerenabled();
::enterprise_management::BooleanPolicyProto* mutable_passwordmanagerenabled();
void set_allocated_passwordmanagerenabled(::enterprise_management::BooleanPolicyProto* passwordmanagerenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_passwordmanagerenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_passwordmanagerenabled();
public:
void unsafe_arena_set_allocated_passwordmanagerenabled(
::enterprise_management::BooleanPolicyProto* passwordmanagerenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_passwordmanagerenabled();

// optional .enterprise_management.BooleanPolicyProto AutoFillEnabled = 20;
bool has_autofillenabled() const;
private:
bool _internal_has_autofillenabled() const;
public:
void clear_autofillenabled();
const ::enterprise_management::BooleanPolicyProto& autofillenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_autofillenabled();
::enterprise_management::BooleanPolicyProto* mutable_autofillenabled();
void set_allocated_autofillenabled(::enterprise_management::BooleanPolicyProto* autofillenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_autofillenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_autofillenabled();
public:
void unsafe_arena_set_allocated_autofillenabled(
::enterprise_management::BooleanPolicyProto* autofillenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_autofillenabled();

// optional .enterprise_management.BooleanPolicyProto SyncDisabled = 22;
bool has_syncdisabled() const;
private:
bool _internal_has_syncdisabled() const;
public:
void clear_syncdisabled();
const ::enterprise_management::BooleanPolicyProto& syncdisabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_syncdisabled();
::enterprise_management::BooleanPolicyProto* mutable_syncdisabled();
void set_allocated_syncdisabled(::enterprise_management::BooleanPolicyProto* syncdisabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_syncdisabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_syncdisabled();
public:
void unsafe_arena_set_allocated_syncdisabled(
::enterprise_management::BooleanPolicyProto* syncdisabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_syncdisabled();

// optional .enterprise_management.StringPolicyProto ProxyMode = 23;
bool has_proxymode() const;
private:
bool _internal_has_proxymode() const;
public:
void clear_proxymode();
const ::enterprise_management::StringPolicyProto& proxymode() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_proxymode();
::enterprise_management::StringPolicyProto* mutable_proxymode();
void set_allocated_proxymode(::enterprise_management::StringPolicyProto* proxymode);
private:
const ::enterprise_management::StringPolicyProto& _internal_proxymode() const;
::enterprise_management::StringPolicyProto* _internal_mutable_proxymode();
public:
void unsafe_arena_set_allocated_proxymode(
::enterprise_management::StringPolicyProto* proxymode);
::enterprise_management::StringPolicyProto* unsafe_arena_release_proxymode();

// optional .enterprise_management.IntegerPolicyProto ProxyServerMode = 24;
bool has_proxyservermode() const;
private:
bool _internal_has_proxyservermode() const;
public:
void clear_proxyservermode();
const ::enterprise_management::IntegerPolicyProto& proxyservermode() const;
PROTOBUF_NODISCARD ::enterprise_management::IntegerPolicyProto* release_proxyservermode();
::enterprise_management::IntegerPolicyProto* mutable_proxyservermode();
void set_allocated_proxyservermode(::enterprise_management::IntegerPolicyProto* proxyservermode);
private:
const ::enterprise_management::IntegerPolicyProto& _internal_proxyservermode() const;
::enterprise_management::IntegerPolicyProto* _internal_mutable_proxyservermode();
public:
void unsafe_arena_set_allocated_proxyservermode(
::enterprise_management::IntegerPolicyProto* proxyservermode);
::enterprise_management::IntegerPolicyProto* unsafe_arena_release_proxyservermode();

// optional .enterprise_management.StringPolicyProto ProxyServer = 25;
bool has_proxyserver() const;
private:
bool _internal_has_proxyserver() const;
public:
void clear_proxyserver();
const ::enterprise_management::StringPolicyProto& proxyserver() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_proxyserver();
::enterprise_management::StringPolicyProto* mutable_proxyserver();
void set_allocated_proxyserver(::enterprise_management::StringPolicyProto* proxyserver);
private:
const ::enterprise_management::StringPolicyProto& _internal_proxyserver() const;
::enterprise_management::StringPolicyProto* _internal_mutable_proxyserver();
public:
void unsafe_arena_set_allocated_proxyserver(
::enterprise_management::StringPolicyProto* proxyserver);
::enterprise_management::StringPolicyProto* unsafe_arena_release_proxyserver();

// optional .enterprise_management.StringPolicyProto ProxyPacUrl = 26;
bool has_proxypacurl() const;
private:
bool _internal_has_proxypacurl() const;
public:
void clear_proxypacurl();
const ::enterprise_management::StringPolicyProto& proxypacurl() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_proxypacurl();
::enterprise_management::StringPolicyProto* mutable_proxypacurl();
void set_allocated_proxypacurl(::enterprise_management::StringPolicyProto* proxypacurl);
private:
const ::enterprise_management::StringPolicyProto& _internal_proxypacurl() const;
::enterprise_management::StringPolicyProto* _internal_mutable_proxypacurl();
public:
void unsafe_arena_set_allocated_proxypacurl(
::enterprise_management::StringPolicyProto* proxypacurl);
::enterprise_management::StringPolicyProto* unsafe_arena_release_proxypacurl();

// optional .enterprise_management.StringPolicyProto ProxyBypassList = 27;
bool has_proxybypasslist() const;
private:
bool _internal_has_proxybypasslist() const;
public:
void clear_proxybypasslist();
const ::enterprise_management::StringPolicyProto& proxybypasslist() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_proxybypasslist();
::enterprise_management::StringPolicyProto* mutable_proxybypasslist();
void set_allocated_proxybypasslist(::enterprise_management::StringPolicyProto* proxybypasslist);
private:
const ::enterprise_management::StringPolicyProto& _internal_proxybypasslist() const;
::enterprise_management::StringPolicyProto* _internal_mutable_proxybypasslist();
public:
void unsafe_arena_set_allocated_proxybypasslist(
::enterprise_management::StringPolicyProto* proxybypasslist);
::enterprise_management::StringPolicyProto* unsafe_arena_release_proxybypasslist();

// optional .enterprise_management.StringPolicyProto AuthSchemes = 28;
bool has_authschemes() const;
private:
bool _internal_has_authschemes() const;
public:
void clear_authschemes();
const ::enterprise_management::StringPolicyProto& authschemes() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_authschemes();
::enterprise_management::StringPolicyProto* mutable_authschemes();
void set_allocated_authschemes(::enterprise_management::StringPolicyProto* authschemes);
private:
const ::enterprise_management::StringPolicyProto& _internal_authschemes() const;
::enterprise_management::StringPolicyProto* _internal_mutable_authschemes();
public:
void unsafe_arena_set_allocated_authschemes(
::enterprise_management::StringPolicyProto* authschemes);
::enterprise_management::StringPolicyProto* unsafe_arena_release_authschemes();

// optional .enterprise_management.BooleanPolicyProto DisableAuthNegotiateCnameLookup = 29;
bool has_disableauthnegotiatecnamelookup() const;
private:
bool _internal_has_disableauthnegotiatecnamelookup() const;
public:
void clear_disableauthnegotiatecnamelookup();
const ::enterprise_management::BooleanPolicyProto& disableauthnegotiatecnamelookup() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_disableauthnegotiatecnamelookup();
::enterprise_management::BooleanPolicyProto* mutable_disableauthnegotiatecnamelookup();
void set_allocated_disableauthnegotiatecnamelookup(::enterprise_management::BooleanPolicyProto* disableauthnegotiatecnamelookup);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_disableauthnegotiatecnamelookup() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_disableauthnegotiatecnamelookup();
public:
void unsafe_arena_set_allocated_disableauthnegotiatecnamelookup(
::enterprise_management::BooleanPolicyProto* disableauthnegotiatecnamelookup);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_disableauthnegotiatecnamelookup();

// optional .enterprise_management.BooleanPolicyProto BlockThirdPartyCookies = 41;
bool has_blockthirdpartycookies() const;
private:
bool _internal_has_blockthirdpartycookies() const;
public:
void clear_blockthirdpartycookies();
const ::enterprise_management::BooleanPolicyProto& blockthirdpartycookies() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_blockthirdpartycookies();
::enterprise_management::BooleanPolicyProto* mutable_blockthirdpartycookies();
void set_allocated_blockthirdpartycookies(::enterprise_management::BooleanPolicyProto* blockthirdpartycookies);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_blockthirdpartycookies() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_blockthirdpartycookies();
public:
void unsafe_arena_set_allocated_blockthirdpartycookies(
::enterprise_management::BooleanPolicyProto* blockthirdpartycookies);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_blockthirdpartycookies();

// optional .enterprise_management.BooleanPolicyProto DefaultSearchProviderEnabled = 42;
bool has_defaultsearchproviderenabled() const;
private:
bool _internal_has_defaultsearchproviderenabled() const;
public:
void clear_defaultsearchproviderenabled();
const ::enterprise_management::BooleanPolicyProto& defaultsearchproviderenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_defaultsearchproviderenabled();
::enterprise_management::BooleanPolicyProto* mutable_defaultsearchproviderenabled();
void set_allocated_defaultsearchproviderenabled(::enterprise_management::BooleanPolicyProto* defaultsearchproviderenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_defaultsearchproviderenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_defaultsearchproviderenabled();
public:
void unsafe_arena_set_allocated_defaultsearchproviderenabled(
::enterprise_management::BooleanPolicyProto* defaultsearchproviderenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_defaultsearchproviderenabled();

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderName = 43;
bool has_defaultsearchprovidername() const;
private:
bool _internal_has_defaultsearchprovidername() const;
public:
void clear_defaultsearchprovidername();
const ::enterprise_management::StringPolicyProto& defaultsearchprovidername() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_defaultsearchprovidername();
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidername();
void set_allocated_defaultsearchprovidername(::enterprise_management::StringPolicyProto* defaultsearchprovidername);
private:
const ::enterprise_management::StringPolicyProto& _internal_defaultsearchprovidername() const;
::enterprise_management::StringPolicyProto* _internal_mutable_defaultsearchprovidername();
public:
void unsafe_arena_set_allocated_defaultsearchprovidername(
::enterprise_management::StringPolicyProto* defaultsearchprovidername);
::enterprise_management::StringPolicyProto* unsafe_arena_release_defaultsearchprovidername();

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderKeyword = 44;
bool has_defaultsearchproviderkeyword() const;
private:
bool _internal_has_defaultsearchproviderkeyword() const;
public:
void clear_defaultsearchproviderkeyword();
const ::enterprise_management::StringPolicyProto& defaultsearchproviderkeyword() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_defaultsearchproviderkeyword();
::enterprise_management::StringPolicyProto* mutable_defaultsearchproviderkeyword();
void set_allocated_defaultsearchproviderkeyword(::enterprise_management::StringPolicyProto* defaultsearchproviderkeyword);
private:
const ::enterprise_management::StringPolicyProto& _internal_defaultsearchproviderkeyword() const;
::enterprise_management::StringPolicyProto* _internal_mutable_defaultsearchproviderkeyword();
public:
void unsafe_arena_set_allocated_defaultsearchproviderkeyword(
::enterprise_management::StringPolicyProto* defaultsearchproviderkeyword);
::enterprise_management::StringPolicyProto* unsafe_arena_release_defaultsearchproviderkeyword();

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURL = 45;
bool has_defaultsearchprovidersearchurl() const;
private:
bool _internal_has_defaultsearchprovidersearchurl() const;
public:
void clear_defaultsearchprovidersearchurl();
const ::enterprise_management::StringPolicyProto& defaultsearchprovidersearchurl() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_defaultsearchprovidersearchurl();
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidersearchurl();
void set_allocated_defaultsearchprovidersearchurl(::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurl);
private:
const ::enterprise_management::StringPolicyProto& _internal_defaultsearchprovidersearchurl() const;
::enterprise_management::StringPolicyProto* _internal_mutable_defaultsearchprovidersearchurl();
public:
void unsafe_arena_set_allocated_defaultsearchprovidersearchurl(
::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurl);
::enterprise_management::StringPolicyProto* unsafe_arena_release_defaultsearchprovidersearchurl();

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURL = 46;
bool has_defaultsearchprovidersuggesturl() const;
private:
bool _internal_has_defaultsearchprovidersuggesturl() const;
public:
void clear_defaultsearchprovidersuggesturl();
const ::enterprise_management::StringPolicyProto& defaultsearchprovidersuggesturl() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_defaultsearchprovidersuggesturl();
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidersuggesturl();
void set_allocated_defaultsearchprovidersuggesturl(::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturl);
private:
const ::enterprise_management::StringPolicyProto& _internal_defaultsearchprovidersuggesturl() const;
::enterprise_management::StringPolicyProto* _internal_mutable_defaultsearchprovidersuggesturl();
public:
void unsafe_arena_set_allocated_defaultsearchprovidersuggesturl(
::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturl);
::enterprise_management::StringPolicyProto* unsafe_arena_release_defaultsearchprovidersuggesturl();

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderIconURL = 48;
bool has_defaultsearchprovidericonurl() const;
private:
bool _internal_has_defaultsearchprovidericonurl() const;
public:
void clear_defaultsearchprovidericonurl();
const ::enterprise_management::StringPolicyProto& defaultsearchprovidericonurl() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_defaultsearchprovidericonurl();
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidericonurl();
void set_allocated_defaultsearchprovidericonurl(::enterprise_management::StringPolicyProto* defaultsearchprovidericonurl);
private:
const ::enterprise_management::StringPolicyProto& _internal_defaultsearchprovidericonurl() const;
::enterprise_management::StringPolicyProto* _internal_mutable_defaultsearchprovidericonurl();
public:
void unsafe_arena_set_allocated_defaultsearchprovidericonurl(
::enterprise_management::StringPolicyProto* defaultsearchprovidericonurl);
::enterprise_management::StringPolicyProto* unsafe_arena_release_defaultsearchprovidericonurl();

// optional .enterprise_management.StringListPolicyProto DefaultSearchProviderEncodings = 49;
bool has_defaultsearchproviderencodings() const;
private:
bool _internal_has_defaultsearchproviderencodings() const;
public:
void clear_defaultsearchproviderencodings();
const ::enterprise_management::StringListPolicyProto& defaultsearchproviderencodings() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_defaultsearchproviderencodings();
::enterprise_management::StringListPolicyProto* mutable_defaultsearchproviderencodings();
void set_allocated_defaultsearchproviderencodings(::enterprise_management::StringListPolicyProto* defaultsearchproviderencodings);
private:
const ::enterprise_management::StringListPolicyProto& _internal_defaultsearchproviderencodings() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_defaultsearchproviderencodings();
public:
void unsafe_arena_set_allocated_defaultsearchproviderencodings(
::enterprise_management::StringListPolicyProto* defaultsearchproviderencodings);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_defaultsearchproviderencodings();

// optional .enterprise_management.IntegerPolicyProto DefaultCookiesSetting = 50;
bool has_defaultcookiessetting() const;
private:
bool _internal_has_defaultcookiessetting() const;
public:
void clear_defaultcookiessetting();
const ::enterprise_management::IntegerPolicyProto& defaultcookiessetting() const;
PROTOBUF_NODISCARD ::enterprise_management::IntegerPolicyProto* release_defaultcookiessetting();
::enterprise_management::IntegerPolicyProto* mutable_defaultcookiessetting();
void set_allocated_defaultcookiessetting(::enterprise_management::IntegerPolicyProto* defaultcookiessetting);
private:
const ::enterprise_management::IntegerPolicyProto& _internal_defaultcookiessetting() const;
::enterprise_management::IntegerPolicyProto* _internal_mutable_defaultcookiessetting();
public:
void unsafe_arena_set_allocated_defaultcookiessetting(
::enterprise_management::IntegerPolicyProto* defaultcookiessetting);
::enterprise_management::IntegerPolicyProto* unsafe_arena_release_defaultcookiessetting();

// optional .enterprise_management.IntegerPolicyProto DefaultJavaScriptSetting = 52;
bool has_defaultjavascriptsetting() const;
private:
bool _internal_has_defaultjavascriptsetting() const;
public:
void clear_defaultjavascriptsetting();
const ::enterprise_management::IntegerPolicyProto& defaultjavascriptsetting() const;
PROTOBUF_NODISCARD ::enterprise_management::IntegerPolicyProto* release_defaultjavascriptsetting();
::enterprise_management::IntegerPolicyProto* mutable_defaultjavascriptsetting();
void set_allocated_defaultjavascriptsetting(::enterprise_management::IntegerPolicyProto* defaultjavascriptsetting);
private:
const ::enterprise_management::IntegerPolicyProto& _internal_defaultjavascriptsetting() const;
::enterprise_management::IntegerPolicyProto* _internal_mutable_defaultjavascriptsetting();
public:
void unsafe_arena_set_allocated_defaultjavascriptsetting(
::enterprise_management::IntegerPolicyProto* defaultjavascriptsetting);
::enterprise_management::IntegerPolicyProto* unsafe_arena_release_defaultjavascriptsetting();

// optional .enterprise_management.IntegerPolicyProto DefaultPopupsSetting = 54;
bool has_defaultpopupssetting() const;
private:
bool _internal_has_defaultpopupssetting() const;
public:
void clear_defaultpopupssetting();
const ::enterprise_management::IntegerPolicyProto& defaultpopupssetting() const;
PROTOBUF_NODISCARD ::enterprise_management::IntegerPolicyProto* release_defaultpopupssetting();
::enterprise_management::IntegerPolicyProto* mutable_defaultpopupssetting();
void set_allocated_defaultpopupssetting(::enterprise_management::IntegerPolicyProto* defaultpopupssetting);
private:
const ::enterprise_management::IntegerPolicyProto& _internal_defaultpopupssetting() const;
::enterprise_management::IntegerPolicyProto* _internal_mutable_defaultpopupssetting();
public:
void unsafe_arena_set_allocated_defaultpopupssetting(
::enterprise_management::IntegerPolicyProto* defaultpopupssetting);
::enterprise_management::IntegerPolicyProto* unsafe_arena_release_defaultpopupssetting();

// optional .enterprise_management.IntegerPolicyProto DefaultGeolocationSetting = 56;
bool has_defaultgeolocationsetting() const;
private:
bool _internal_has_defaultgeolocationsetting() const;
public:
void clear_defaultgeolocationsetting();
const ::enterprise_management::IntegerPolicyProto& defaultgeolocationsetting() const;
PROTOBUF_NODISCARD ::enterprise_management::IntegerPolicyProto* release_defaultgeolocationsetting();
::enterprise_management::IntegerPolicyProto* mutable_defaultgeolocationsetting();
void set_allocated_defaultgeolocationsetting(::enterprise_management::IntegerPolicyProto* defaultgeolocationsetting);
private:
const ::enterprise_management::IntegerPolicyProto& _internal_defaultgeolocationsetting() const;
::enterprise_management::IntegerPolicyProto* _internal_mutable_defaultgeolocationsetting();
public:
void unsafe_arena_set_allocated_defaultgeolocationsetting(
::enterprise_management::IntegerPolicyProto* defaultgeolocationsetting);
::enterprise_management::IntegerPolicyProto* unsafe_arena_release_defaultgeolocationsetting();

// optional .enterprise_management.StringListPolicyProto CookiesBlockedForUrls = 69;
bool has_cookiesblockedforurls() const;
private:
bool _internal_has_cookiesblockedforurls() const;
public:
void clear_cookiesblockedforurls();
const ::enterprise_management::StringListPolicyProto& cookiesblockedforurls() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_cookiesblockedforurls();
::enterprise_management::StringListPolicyProto* mutable_cookiesblockedforurls();
void set_allocated_cookiesblockedforurls(::enterprise_management::StringListPolicyProto* cookiesblockedforurls);
private:
const ::enterprise_management::StringListPolicyProto& _internal_cookiesblockedforurls() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_cookiesblockedforurls();
public:
void unsafe_arena_set_allocated_cookiesblockedforurls(
::enterprise_management::StringListPolicyProto* cookiesblockedforurls);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_cookiesblockedforurls();

// optional .enterprise_management.StringListPolicyProto CookiesSessionOnlyForUrls = 70;
bool has_cookiessessiononlyforurls() const;
private:
bool _internal_has_cookiessessiononlyforurls() const;
public:
void clear_cookiessessiononlyforurls();
const ::enterprise_management::StringListPolicyProto& cookiessessiononlyforurls() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_cookiessessiononlyforurls();
::enterprise_management::StringListPolicyProto* mutable_cookiessessiononlyforurls();
void set_allocated_cookiessessiononlyforurls(::enterprise_management::StringListPolicyProto* cookiessessiononlyforurls);
private:
const ::enterprise_management::StringListPolicyProto& _internal_cookiessessiononlyforurls() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_cookiessessiononlyforurls();
public:
void unsafe_arena_set_allocated_cookiessessiononlyforurls(
::enterprise_management::StringListPolicyProto* cookiessessiononlyforurls);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_cookiessessiononlyforurls();

// optional .enterprise_management.StringListPolicyProto JavaScriptAllowedForUrls = 73;
bool has_javascriptallowedforurls() const;
private:
bool _internal_has_javascriptallowedforurls() const;
public:
void clear_javascriptallowedforurls();
const ::enterprise_management::StringListPolicyProto& javascriptallowedforurls() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_javascriptallowedforurls();
::enterprise_management::StringListPolicyProto* mutable_javascriptallowedforurls();
void set_allocated_javascriptallowedforurls(::enterprise_management::StringListPolicyProto* javascriptallowedforurls);
private:
const ::enterprise_management::StringListPolicyProto& _internal_javascriptallowedforurls() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_javascriptallowedforurls();
public:
void unsafe_arena_set_allocated_javascriptallowedforurls(
::enterprise_management::StringListPolicyProto* javascriptallowedforurls);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_javascriptallowedforurls();

// optional .enterprise_management.StringListPolicyProto JavaScriptBlockedForUrls = 74;
bool has_javascriptblockedforurls() const;
private:
bool _internal_has_javascriptblockedforurls() const;
public:
void clear_javascriptblockedforurls();
const ::enterprise_management::StringListPolicyProto& javascriptblockedforurls() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_javascriptblockedforurls();
::enterprise_management::StringListPolicyProto* mutable_javascriptblockedforurls();
void set_allocated_javascriptblockedforurls(::enterprise_management::StringListPolicyProto* javascriptblockedforurls);
private:
const ::enterprise_management::StringListPolicyProto& _internal_javascriptblockedforurls() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_javascriptblockedforurls();
public:
void unsafe_arena_set_allocated_javascriptblockedforurls(
::enterprise_management::StringListPolicyProto* javascriptblockedforurls);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_javascriptblockedforurls();

// optional .enterprise_management.StringListPolicyProto PopupsAllowedForUrls = 77;
bool has_popupsallowedforurls() const;
private:
bool _internal_has_popupsallowedforurls() const;
public:
void clear_popupsallowedforurls();
const ::enterprise_management::StringListPolicyProto& popupsallowedforurls() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_popupsallowedforurls();
::enterprise_management::StringListPolicyProto* mutable_popupsallowedforurls();
void set_allocated_popupsallowedforurls(::enterprise_management::StringListPolicyProto* popupsallowedforurls);
private:
const ::enterprise_management::StringListPolicyProto& _internal_popupsallowedforurls() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_popupsallowedforurls();
public:
void unsafe_arena_set_allocated_popupsallowedforurls(
::enterprise_management::StringListPolicyProto* popupsallowedforurls);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_popupsallowedforurls();

// optional .enterprise_management.StringListPolicyProto PopupsBlockedForUrls = 78;
bool has_popupsblockedforurls() const;
private:
bool _internal_has_popupsblockedforurls() const;
public:
void clear_popupsblockedforurls();
const ::enterprise_management::StringListPolicyProto& popupsblockedforurls() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_popupsblockedforurls();
::enterprise_management::StringListPolicyProto* mutable_popupsblockedforurls();
void set_allocated_popupsblockedforurls(::enterprise_management::StringListPolicyProto* popupsblockedforurls);
private:
const ::enterprise_management::StringListPolicyProto& _internal_popupsblockedforurls() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_popupsblockedforurls();
public:
void unsafe_arena_set_allocated_popupsblockedforurls(
::enterprise_management::StringListPolicyProto* popupsblockedforurls);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_popupsblockedforurls();

// optional .enterprise_management.StringListPolicyProto CookiesAllowedForUrls = 79;
bool has_cookiesallowedforurls() const;
private:
bool _internal_has_cookiesallowedforurls() const;
public:
void clear_cookiesallowedforurls();
const ::enterprise_management::StringListPolicyProto& cookiesallowedforurls() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_cookiesallowedforurls();
::enterprise_management::StringListPolicyProto* mutable_cookiesallowedforurls();
void set_allocated_cookiesallowedforurls(::enterprise_management::StringListPolicyProto* cookiesallowedforurls);
private:
const ::enterprise_management::StringListPolicyProto& _internal_cookiesallowedforurls() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_cookiesallowedforurls();
public:
void unsafe_arena_set_allocated_cookiesallowedforurls(
::enterprise_management::StringListPolicyProto* cookiesallowedforurls);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_cookiesallowedforurls();

// optional .enterprise_management.BooleanPolicyProto TranslateEnabled = 82;
bool has_translateenabled() const;
private:
bool _internal_has_translateenabled() const;
public:
void clear_translateenabled();
const ::enterprise_management::BooleanPolicyProto& translateenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_translateenabled();
::enterprise_management::BooleanPolicyProto* mutable_translateenabled();
void set_allocated_translateenabled(::enterprise_management::BooleanPolicyProto* translateenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_translateenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_translateenabled();
public:
void unsafe_arena_set_allocated_translateenabled(
::enterprise_management::BooleanPolicyProto* translateenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_translateenabled();

// optional .enterprise_management.BooleanPolicyProto EditBookmarksEnabled = 85;
bool has_editbookmarksenabled() const;
private:
bool _internal_has_editbookmarksenabled() const;
public:
void clear_editbookmarksenabled();
const ::enterprise_management::BooleanPolicyProto& editbookmarksenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_editbookmarksenabled();
::enterprise_management::BooleanPolicyProto* mutable_editbookmarksenabled();
void set_allocated_editbookmarksenabled(::enterprise_management::BooleanPolicyProto* editbookmarksenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_editbookmarksenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_editbookmarksenabled();
public:
void unsafe_arena_set_allocated_editbookmarksenabled(
::enterprise_management::BooleanPolicyProto* editbookmarksenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_editbookmarksenabled();

// optional .enterprise_management.IntegerPolicyProto IncognitoModeAvailability = 95;
bool has_incognitomodeavailability() const;
private:
bool _internal_has_incognitomodeavailability() const;
public:
void clear_incognitomodeavailability();
const ::enterprise_management::IntegerPolicyProto& incognitomodeavailability() const;
PROTOBUF_NODISCARD ::enterprise_management::IntegerPolicyProto* release_incognitomodeavailability();
::enterprise_management::IntegerPolicyProto* mutable_incognitomodeavailability();
void set_allocated_incognitomodeavailability(::enterprise_management::IntegerPolicyProto* incognitomodeavailability);
private:
const ::enterprise_management::IntegerPolicyProto& _internal_incognitomodeavailability() const;
::enterprise_management::IntegerPolicyProto* _internal_mutable_incognitomodeavailability();
public:
void unsafe_arena_set_allocated_incognitomodeavailability(
::enterprise_management::IntegerPolicyProto* incognitomodeavailability);
::enterprise_management::IntegerPolicyProto* unsafe_arena_release_incognitomodeavailability();

// optional .enterprise_management.StringPolicyProto ProxySettings = 118;
bool has_proxysettings() const;
private:
bool _internal_has_proxysettings() const;
public:
void clear_proxysettings();
const ::enterprise_management::StringPolicyProto& proxysettings() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_proxysettings();
::enterprise_management::StringPolicyProto* mutable_proxysettings();
void set_allocated_proxysettings(::enterprise_management::StringPolicyProto* proxysettings);
private:
const ::enterprise_management::StringPolicyProto& _internal_proxysettings() const;
::enterprise_management::StringPolicyProto* _internal_mutable_proxysettings();
public:
void unsafe_arena_set_allocated_proxysettings(
::enterprise_management::StringPolicyProto* proxysettings);
::enterprise_management::StringPolicyProto* unsafe_arena_release_proxysettings();

// optional .enterprise_management.BooleanPolicyProto DisableSafeBrowsingProceedAnyway = 152;
bool has_disablesafebrowsingproceedanyway() const;
private:
bool _internal_has_disablesafebrowsingproceedanyway() const;
public:
void clear_disablesafebrowsingproceedanyway();
const ::enterprise_management::BooleanPolicyProto& disablesafebrowsingproceedanyway() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_disablesafebrowsingproceedanyway();
::enterprise_management::BooleanPolicyProto* mutable_disablesafebrowsingproceedanyway();
void set_allocated_disablesafebrowsingproceedanyway(::enterprise_management::BooleanPolicyProto* disablesafebrowsingproceedanyway);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_disablesafebrowsingproceedanyway() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_disablesafebrowsingproceedanyway();
public:
void unsafe_arena_set_allocated_disablesafebrowsingproceedanyway(
::enterprise_management::BooleanPolicyProto* disablesafebrowsingproceedanyway);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_disablesafebrowsingproceedanyway();

// optional .enterprise_management.StringListPolicyProto DefaultSearchProviderAlternateURLs = 163;
bool has_defaultsearchprovideralternateurls() const;
private:
bool _internal_has_defaultsearchprovideralternateurls() const;
public:
void clear_defaultsearchprovideralternateurls();
const ::enterprise_management::StringListPolicyProto& defaultsearchprovideralternateurls() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_defaultsearchprovideralternateurls();
::enterprise_management::StringListPolicyProto* mutable_defaultsearchprovideralternateurls();
void set_allocated_defaultsearchprovideralternateurls(::enterprise_management::StringListPolicyProto* defaultsearchprovideralternateurls);
private:
const ::enterprise_management::StringListPolicyProto& _internal_defaultsearchprovideralternateurls() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_defaultsearchprovideralternateurls();
public:
void unsafe_arena_set_allocated_defaultsearchprovideralternateurls(
::enterprise_management::StringListPolicyProto* defaultsearchprovideralternateurls);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_defaultsearchprovideralternateurls();

// optional .enterprise_management.BooleanPolicyProto ForceSafeSearch = 164;
bool has_forcesafesearch() const;
private:
bool _internal_has_forcesafesearch() const;
public:
void clear_forcesafesearch();
const ::enterprise_management::BooleanPolicyProto& forcesafesearch() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_forcesafesearch();
::enterprise_management::BooleanPolicyProto* mutable_forcesafesearch();
void set_allocated_forcesafesearch(::enterprise_management::BooleanPolicyProto* forcesafesearch);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_forcesafesearch() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_forcesafesearch();
public:
void unsafe_arena_set_allocated_forcesafesearch(
::enterprise_management::BooleanPolicyProto* forcesafesearch);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_forcesafesearch();

// optional .enterprise_management.BooleanPolicyProto BuiltInDnsClientEnabled = 167;
bool has_builtindnsclientenabled() const;
private:
bool _internal_has_builtindnsclientenabled() const;
public:
void clear_builtindnsclientenabled();
const ::enterprise_management::BooleanPolicyProto& builtindnsclientenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_builtindnsclientenabled();
::enterprise_management::BooleanPolicyProto* mutable_builtindnsclientenabled();
void set_allocated_builtindnsclientenabled(::enterprise_management::BooleanPolicyProto* builtindnsclientenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_builtindnsclientenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_builtindnsclientenabled();
public:
void unsafe_arena_set_allocated_builtindnsclientenabled(
::enterprise_management::BooleanPolicyProto* builtindnsclientenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_builtindnsclientenabled();

// optional .enterprise_management.BooleanPolicyProto SigninAllowed = 192;
bool has_signinallowed() const;
private:
bool _internal_has_signinallowed() const;
public:
void clear_signinallowed();
const ::enterprise_management::BooleanPolicyProto& signinallowed() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_signinallowed();
::enterprise_management::BooleanPolicyProto* mutable_signinallowed();
void set_allocated_signinallowed(::enterprise_management::BooleanPolicyProto* signinallowed);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_signinallowed() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_signinallowed();
public:
void unsafe_arena_set_allocated_signinallowed(
::enterprise_management::BooleanPolicyProto* signinallowed);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_signinallowed();

// optional .enterprise_management.StringPolicyProto VariationsRestrictParameter = 198;
bool has_variationsrestrictparameter() const;
private:
bool _internal_has_variationsrestrictparameter() const;
public:
void clear_variationsrestrictparameter();
const ::enterprise_management::StringPolicyProto& variationsrestrictparameter() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_variationsrestrictparameter();
::enterprise_management::StringPolicyProto* mutable_variationsrestrictparameter();
void set_allocated_variationsrestrictparameter(::enterprise_management::StringPolicyProto* variationsrestrictparameter);
private:
const ::enterprise_management::StringPolicyProto& _internal_variationsrestrictparameter() const;
::enterprise_management::StringPolicyProto* _internal_mutable_variationsrestrictparameter();
public:
void unsafe_arena_set_allocated_variationsrestrictparameter(
::enterprise_management::StringPolicyProto* variationsrestrictparameter);
::enterprise_management::StringPolicyProto* unsafe_arena_release_variationsrestrictparameter();

// optional .enterprise_management.StringPolicyProto ManagedBookmarks = 229;
bool has_managedbookmarks() const;
private:
bool _internal_has_managedbookmarks() const;
public:
void clear_managedbookmarks();
const ::enterprise_management::StringPolicyProto& managedbookmarks() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_managedbookmarks();
::enterprise_management::StringPolicyProto* mutable_managedbookmarks();
void set_allocated_managedbookmarks(::enterprise_management::StringPolicyProto* managedbookmarks);
private:
const ::enterprise_management::StringPolicyProto& _internal_managedbookmarks() const;
::enterprise_management::StringPolicyProto* _internal_mutable_managedbookmarks();
public:
void unsafe_arena_set_allocated_managedbookmarks(
::enterprise_management::StringPolicyProto* managedbookmarks);
::enterprise_management::StringPolicyProto* unsafe_arena_release_managedbookmarks();

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURL = 231;
bool has_defaultsearchproviderimageurl() const;
private:
bool _internal_has_defaultsearchproviderimageurl() const;
public:
void clear_defaultsearchproviderimageurl();
const ::enterprise_management::StringPolicyProto& defaultsearchproviderimageurl() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_defaultsearchproviderimageurl();
::enterprise_management::StringPolicyProto* mutable_defaultsearchproviderimageurl();
void set_allocated_defaultsearchproviderimageurl(::enterprise_management::StringPolicyProto* defaultsearchproviderimageurl);
private:
const ::enterprise_management::StringPolicyProto& _internal_defaultsearchproviderimageurl() const;
::enterprise_management::StringPolicyProto* _internal_mutable_defaultsearchproviderimageurl();
public:
void unsafe_arena_set_allocated_defaultsearchproviderimageurl(
::enterprise_management::StringPolicyProto* defaultsearchproviderimageurl);
::enterprise_management::StringPolicyProto* unsafe_arena_release_defaultsearchproviderimageurl();

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURLPostParams = 232;
bool has_defaultsearchprovidersearchurlpostparams() const;
private:
bool _internal_has_defaultsearchprovidersearchurlpostparams() const;
public:
void clear_defaultsearchprovidersearchurlpostparams();
const ::enterprise_management::StringPolicyProto& defaultsearchprovidersearchurlpostparams() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_defaultsearchprovidersearchurlpostparams();
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidersearchurlpostparams();
void set_allocated_defaultsearchprovidersearchurlpostparams(::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurlpostparams);
private:
const ::enterprise_management::StringPolicyProto& _internal_defaultsearchprovidersearchurlpostparams() const;
::enterprise_management::StringPolicyProto* _internal_mutable_defaultsearchprovidersearchurlpostparams();
public:
void unsafe_arena_set_allocated_defaultsearchprovidersearchurlpostparams(
::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurlpostparams);
::enterprise_management::StringPolicyProto* unsafe_arena_release_defaultsearchprovidersearchurlpostparams();

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURLPostParams = 233;
bool has_defaultsearchprovidersuggesturlpostparams() const;
private:
bool _internal_has_defaultsearchprovidersuggesturlpostparams() const;
public:
void clear_defaultsearchprovidersuggesturlpostparams();
const ::enterprise_management::StringPolicyProto& defaultsearchprovidersuggesturlpostparams() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_defaultsearchprovidersuggesturlpostparams();
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidersuggesturlpostparams();
void set_allocated_defaultsearchprovidersuggesturlpostparams(::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturlpostparams);
private:
const ::enterprise_management::StringPolicyProto& _internal_defaultsearchprovidersuggesturlpostparams() const;
::enterprise_management::StringPolicyProto* _internal_mutable_defaultsearchprovidersuggesturlpostparams();
public:
void unsafe_arena_set_allocated_defaultsearchprovidersuggesturlpostparams(
::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturlpostparams);
::enterprise_management::StringPolicyProto* unsafe_arena_release_defaultsearchprovidersuggesturlpostparams();

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURLPostParams = 235;
bool has_defaultsearchproviderimageurlpostparams() const;
private:
bool _internal_has_defaultsearchproviderimageurlpostparams() const;
public:
void clear_defaultsearchproviderimageurlpostparams();
const ::enterprise_management::StringPolicyProto& defaultsearchproviderimageurlpostparams() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_defaultsearchproviderimageurlpostparams();
::enterprise_management::StringPolicyProto* mutable_defaultsearchproviderimageurlpostparams();
void set_allocated_defaultsearchproviderimageurlpostparams(::enterprise_management::StringPolicyProto* defaultsearchproviderimageurlpostparams);
private:
const ::enterprise_management::StringPolicyProto& _internal_defaultsearchproviderimageurlpostparams() const;
::enterprise_management::StringPolicyProto* _internal_mutable_defaultsearchproviderimageurlpostparams();
public:
void unsafe_arena_set_allocated_defaultsearchproviderimageurlpostparams(
::enterprise_management::StringPolicyProto* defaultsearchproviderimageurlpostparams);
::enterprise_management::StringPolicyProto* unsafe_arena_release_defaultsearchproviderimageurlpostparams();

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderNewTabURL = 239;
bool has_defaultsearchprovidernewtaburl() const;
private:
bool _internal_has_defaultsearchprovidernewtaburl() const;
public:
void clear_defaultsearchprovidernewtaburl();
const ::enterprise_management::StringPolicyProto& defaultsearchprovidernewtaburl() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_defaultsearchprovidernewtaburl();
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidernewtaburl();
void set_allocated_defaultsearchprovidernewtaburl(::enterprise_management::StringPolicyProto* defaultsearchprovidernewtaburl);
private:
const ::enterprise_management::StringPolicyProto& _internal_defaultsearchprovidernewtaburl() const;
::enterprise_management::StringPolicyProto* _internal_mutable_defaultsearchprovidernewtaburl();
public:
void unsafe_arena_set_allocated_defaultsearchprovidernewtaburl(
::enterprise_management::StringPolicyProto* defaultsearchprovidernewtaburl);
::enterprise_management::StringPolicyProto* unsafe_arena_release_defaultsearchprovidernewtaburl();

// optional .enterprise_management.IntegerPolicyProto NetworkPredictionOptions = 275;
bool has_networkpredictionoptions() const;
private:
bool _internal_has_networkpredictionoptions() const;
public:
void clear_networkpredictionoptions();
const ::enterprise_management::IntegerPolicyProto& networkpredictionoptions() const;
PROTOBUF_NODISCARD ::enterprise_management::IntegerPolicyProto* release_networkpredictionoptions();
::enterprise_management::IntegerPolicyProto* mutable_networkpredictionoptions();
void set_allocated_networkpredictionoptions(::enterprise_management::IntegerPolicyProto* networkpredictionoptions);
private:
const ::enterprise_management::IntegerPolicyProto& _internal_networkpredictionoptions() const;
::enterprise_management::IntegerPolicyProto* _internal_mutable_networkpredictionoptions();
public:
void unsafe_arena_set_allocated_networkpredictionoptions(
::enterprise_management::IntegerPolicyProto* networkpredictionoptions);
::enterprise_management::IntegerPolicyProto* unsafe_arena_release_networkpredictionoptions();

// optional .enterprise_management.StringPolicyProto SSLVersionMin = 281;
bool has_sslversionmin() const;
private:
bool _internal_has_sslversionmin() const;
public:
void clear_sslversionmin();
const ::enterprise_management::StringPolicyProto& sslversionmin() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_sslversionmin();
::enterprise_management::StringPolicyProto* mutable_sslversionmin();
void set_allocated_sslversionmin(::enterprise_management::StringPolicyProto* sslversionmin);
private:
const ::enterprise_management::StringPolicyProto& _internal_sslversionmin() const;
::enterprise_management::StringPolicyProto* _internal_mutable_sslversionmin();
public:
void unsafe_arena_set_allocated_sslversionmin(
::enterprise_management::StringPolicyProto* sslversionmin);
::enterprise_management::StringPolicyProto* unsafe_arena_release_sslversionmin();

// optional .enterprise_management.BooleanPolicyProto ContextualSearchEnabled = 283;
bool has_contextualsearchenabled() const;
private:
bool _internal_has_contextualsearchenabled() const;
public:
void clear_contextualsearchenabled();
const ::enterprise_management::BooleanPolicyProto& contextualsearchenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_contextualsearchenabled();
::enterprise_management::BooleanPolicyProto* mutable_contextualsearchenabled();
void set_allocated_contextualsearchenabled(::enterprise_management::BooleanPolicyProto* contextualsearchenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_contextualsearchenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_contextualsearchenabled();
public:
void unsafe_arena_set_allocated_contextualsearchenabled(
::enterprise_management::BooleanPolicyProto* contextualsearchenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_contextualsearchenabled();

// optional .enterprise_management.BooleanPolicyProto ForceGoogleSafeSearch = 284;
bool has_forcegooglesafesearch() const;
private:
bool _internal_has_forcegooglesafesearch() const;
public:
void clear_forcegooglesafesearch();
const ::enterprise_management::BooleanPolicyProto& forcegooglesafesearch() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_forcegooglesafesearch();
::enterprise_management::BooleanPolicyProto* mutable_forcegooglesafesearch();
void set_allocated_forcegooglesafesearch(::enterprise_management::BooleanPolicyProto* forcegooglesafesearch);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_forcegooglesafesearch() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_forcegooglesafesearch();
public:
void unsafe_arena_set_allocated_forcegooglesafesearch(
::enterprise_management::BooleanPolicyProto* forcegooglesafesearch);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_forcegooglesafesearch();

// optional .enterprise_management.BooleanPolicyProto ForceYouTubeSafetyMode = 285;
bool has_forceyoutubesafetymode() const;
private:
bool _internal_has_forceyoutubesafetymode() const;
public:
void clear_forceyoutubesafetymode();
const ::enterprise_management::BooleanPolicyProto& forceyoutubesafetymode() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_forceyoutubesafetymode();
::enterprise_management::BooleanPolicyProto* mutable_forceyoutubesafetymode();
void set_allocated_forceyoutubesafetymode(::enterprise_management::BooleanPolicyProto* forceyoutubesafetymode);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_forceyoutubesafetymode() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_forceyoutubesafetymode();
public:
void unsafe_arena_set_allocated_forceyoutubesafetymode(
::enterprise_management::BooleanPolicyProto* forceyoutubesafetymode);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_forceyoutubesafetymode();

// optional .enterprise_management.BooleanPolicyProto SSLErrorOverrideAllowed = 302;
bool has_sslerroroverrideallowed() const;
private:
bool _internal_has_sslerroroverrideallowed() const;
public:
void clear_sslerroroverrideallowed();
const ::enterprise_management::BooleanPolicyProto& sslerroroverrideallowed() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_sslerroroverrideallowed();
::enterprise_management::BooleanPolicyProto* mutable_sslerroroverrideallowed();
void set_allocated_sslerroroverrideallowed(::enterprise_management::BooleanPolicyProto* sslerroroverrideallowed);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_sslerroroverrideallowed() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_sslerroroverrideallowed();
public:
void unsafe_arena_set_allocated_sslerroroverrideallowed(
::enterprise_management::BooleanPolicyProto* sslerroroverrideallowed);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_sslerroroverrideallowed();

// optional .enterprise_management.StringPolicyProto AuthAndroidNegotiateAccountType = 307;
bool has_authandroidnegotiateaccounttype() const;
private:
bool _internal_has_authandroidnegotiateaccounttype() const;
public:
void clear_authandroidnegotiateaccounttype();
const ::enterprise_management::StringPolicyProto& authandroidnegotiateaccounttype() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_authandroidnegotiateaccounttype();
::enterprise_management::StringPolicyProto* mutable_authandroidnegotiateaccounttype();
void set_allocated_authandroidnegotiateaccounttype(::enterprise_management::StringPolicyProto* authandroidnegotiateaccounttype);
private:
const ::enterprise_management::StringPolicyProto& _internal_authandroidnegotiateaccounttype() const;
::enterprise_management::StringPolicyProto* _internal_mutable_authandroidnegotiateaccounttype();
public:
void unsafe_arena_set_allocated_authandroidnegotiateaccounttype(
::enterprise_management::StringPolicyProto* authandroidnegotiateaccounttype);
::enterprise_management::StringPolicyProto* unsafe_arena_release_authandroidnegotiateaccounttype();

// optional .enterprise_management.IntegerPolicyProto DefaultWebBluetoothGuardSetting = 322;
bool has_defaultwebbluetoothguardsetting() const;
private:
bool _internal_has_defaultwebbluetoothguardsetting() const;
public:
void clear_defaultwebbluetoothguardsetting();
const ::enterprise_management::IntegerPolicyProto& defaultwebbluetoothguardsetting() const;
PROTOBUF_NODISCARD ::enterprise_management::IntegerPolicyProto* release_defaultwebbluetoothguardsetting();
::enterprise_management::IntegerPolicyProto* mutable_defaultwebbluetoothguardsetting();
void set_allocated_defaultwebbluetoothguardsetting(::enterprise_management::IntegerPolicyProto* defaultwebbluetoothguardsetting);
private:
const ::enterprise_management::IntegerPolicyProto& _internal_defaultwebbluetoothguardsetting() const;
::enterprise_management::IntegerPolicyProto* _internal_mutable_defaultwebbluetoothguardsetting();
public:
void unsafe_arena_set_allocated_defaultwebbluetoothguardsetting(
::enterprise_management::IntegerPolicyProto* defaultwebbluetoothguardsetting);
::enterprise_management::IntegerPolicyProto* unsafe_arena_release_defaultwebbluetoothguardsetting();

// optional .enterprise_management.StringPolicyProto AllowedDomainsForApps = 333;
bool has_alloweddomainsforapps() const;
private:
bool _internal_has_alloweddomainsforapps() const;
public:
void clear_alloweddomainsforapps();
const ::enterprise_management::StringPolicyProto& alloweddomainsforapps() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_alloweddomainsforapps();
::enterprise_management::StringPolicyProto* mutable_alloweddomainsforapps();
void set_allocated_alloweddomainsforapps(::enterprise_management::StringPolicyProto* alloweddomainsforapps);
private:
const ::enterprise_management::StringPolicyProto& _internal_alloweddomainsforapps() const;
::enterprise_management::StringPolicyProto* _internal_mutable_alloweddomainsforapps();
public:
void unsafe_arena_set_allocated_alloweddomainsforapps(
::enterprise_management::StringPolicyProto* alloweddomainsforapps);
::enterprise_management::StringPolicyProto* unsafe_arena_release_alloweddomainsforapps();

// optional .enterprise_management.BooleanPolicyProto EnableMediaRouter = 335;
bool has_enablemediarouter() const;
private:
bool _internal_has_enablemediarouter() const;
public:
void clear_enablemediarouter();
const ::enterprise_management::BooleanPolicyProto& enablemediarouter() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_enablemediarouter();
::enterprise_management::BooleanPolicyProto* mutable_enablemediarouter();
void set_allocated_enablemediarouter(::enterprise_management::BooleanPolicyProto* enablemediarouter);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_enablemediarouter() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_enablemediarouter();
public:
void unsafe_arena_set_allocated_enablemediarouter(
::enterprise_management::BooleanPolicyProto* enablemediarouter);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_enablemediarouter();

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForUrls = 337;
bool has_certificatetransparencyenforcementdisabledforurls() const;
private:
bool _internal_has_certificatetransparencyenforcementdisabledforurls() const;
public:
void clear_certificatetransparencyenforcementdisabledforurls();
const ::enterprise_management::StringListPolicyProto& certificatetransparencyenforcementdisabledforurls() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_certificatetransparencyenforcementdisabledforurls();
::enterprise_management::StringListPolicyProto* mutable_certificatetransparencyenforcementdisabledforurls();
void set_allocated_certificatetransparencyenforcementdisabledforurls(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforurls);
private:
const ::enterprise_management::StringListPolicyProto& _internal_certificatetransparencyenforcementdisabledforurls() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_certificatetransparencyenforcementdisabledforurls();
public:
void unsafe_arena_set_allocated_certificatetransparencyenforcementdisabledforurls(
::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforurls);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_certificatetransparencyenforcementdisabledforurls();

// optional .enterprise_management.BooleanPolicyProto NTPContentSuggestionsEnabled = 340;
bool has_ntpcontentsuggestionsenabled() const;
private:
bool _internal_has_ntpcontentsuggestionsenabled() const;
public:
void clear_ntpcontentsuggestionsenabled();
const ::enterprise_management::BooleanPolicyProto& ntpcontentsuggestionsenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_ntpcontentsuggestionsenabled();
::enterprise_management::BooleanPolicyProto* mutable_ntpcontentsuggestionsenabled();
void set_allocated_ntpcontentsuggestionsenabled(::enterprise_management::BooleanPolicyProto* ntpcontentsuggestionsenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_ntpcontentsuggestionsenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_ntpcontentsuggestionsenabled();
public:
void unsafe_arena_set_allocated_ntpcontentsuggestionsenabled(
::enterprise_management::BooleanPolicyProto* ntpcontentsuggestionsenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_ntpcontentsuggestionsenabled();

// optional .enterprise_management.StringPolicyProto WebRtcUdpPortRange = 341;
bool has_webrtcudpportrange() const;
private:
bool _internal_has_webrtcudpportrange() const;
public:
void clear_webrtcudpportrange();
const ::enterprise_management::StringPolicyProto& webrtcudpportrange() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_webrtcudpportrange();
::enterprise_management::StringPolicyProto* mutable_webrtcudpportrange();
void set_allocated_webrtcudpportrange(::enterprise_management::StringPolicyProto* webrtcudpportrange);
private:
const ::enterprise_management::StringPolicyProto& _internal_webrtcudpportrange() const;
::enterprise_management::StringPolicyProto* _internal_mutable_webrtcudpportrange();
public:
void unsafe_arena_set_allocated_webrtcudpportrange(
::enterprise_management::StringPolicyProto* webrtcudpportrange);
::enterprise_management::StringPolicyProto* unsafe_arena_release_webrtcudpportrange();

// optional .enterprise_management.BooleanPolicyProto ComponentUpdatesEnabled = 344;
bool has_componentupdatesenabled() const;
private:
bool _internal_has_componentupdatesenabled() const;
public:
void clear_componentupdatesenabled();
const ::enterprise_management::BooleanPolicyProto& componentupdatesenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_componentupdatesenabled();
::enterprise_management::BooleanPolicyProto* mutable_componentupdatesenabled();
void set_allocated_componentupdatesenabled(::enterprise_management::BooleanPolicyProto* componentupdatesenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_componentupdatesenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_componentupdatesenabled();
public:
void unsafe_arena_set_allocated_componentupdatesenabled(
::enterprise_management::BooleanPolicyProto* componentupdatesenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_componentupdatesenabled();

// optional .enterprise_management.BooleanPolicyProto ForceBrowserSignin = 348;
bool has_forcebrowsersignin() const;
private:
bool _internal_has_forcebrowsersignin() const;
public:
void clear_forcebrowsersignin();
const ::enterprise_management::BooleanPolicyProto& forcebrowsersignin() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_forcebrowsersignin();
::enterprise_management::BooleanPolicyProto* mutable_forcebrowsersignin();
void set_allocated_forcebrowsersignin(::enterprise_management::BooleanPolicyProto* forcebrowsersignin);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_forcebrowsersignin() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_forcebrowsersignin();
public:
void unsafe_arena_set_allocated_forcebrowsersignin(
::enterprise_management::BooleanPolicyProto* forcebrowsersignin);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_forcebrowsersignin();

// optional .enterprise_management.IntegerPolicyProto ForceYouTubeRestrict = 350;
bool has_forceyoutuberestrict() const;
private:
bool _internal_has_forceyoutuberestrict() const;
public:
void clear_forceyoutuberestrict();
const ::enterprise_management::IntegerPolicyProto& forceyoutuberestrict() const;
PROTOBUF_NODISCARD ::enterprise_management::IntegerPolicyProto* release_forceyoutuberestrict();
::enterprise_management::IntegerPolicyProto* mutable_forceyoutuberestrict();
void set_allocated_forceyoutuberestrict(::enterprise_management::IntegerPolicyProto* forceyoutuberestrict);
private:
const ::enterprise_management::IntegerPolicyProto& _internal_forceyoutuberestrict() const;
::enterprise_management::IntegerPolicyProto* _internal_mutable_forceyoutuberestrict();
public:
void unsafe_arena_set_allocated_forceyoutuberestrict(
::enterprise_management::IntegerPolicyProto* forceyoutuberestrict);
::enterprise_management::IntegerPolicyProto* unsafe_arena_release_forceyoutuberestrict();

// optional .enterprise_management.BooleanPolicyProto CloudPolicyOverridesPlatformPolicy = 383;
bool has_cloudpolicyoverridesplatformpolicy() const;
private:
bool _internal_has_cloudpolicyoverridesplatformpolicy() const;
public:
void clear_cloudpolicyoverridesplatformpolicy();
const ::enterprise_management::BooleanPolicyProto& cloudpolicyoverridesplatformpolicy() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_cloudpolicyoverridesplatformpolicy();
::enterprise_management::BooleanPolicyProto* mutable_cloudpolicyoverridesplatformpolicy();
void set_allocated_cloudpolicyoverridesplatformpolicy(::enterprise_management::BooleanPolicyProto* cloudpolicyoverridesplatformpolicy);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_cloudpolicyoverridesplatformpolicy() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_cloudpolicyoverridesplatformpolicy();
public:
void unsafe_arena_set_allocated_cloudpolicyoverridesplatformpolicy(
::enterprise_management::BooleanPolicyProto* cloudpolicyoverridesplatformpolicy);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_cloudpolicyoverridesplatformpolicy();

// optional .enterprise_management.BooleanPolicyProto AutofillCreditCardEnabled = 394;
bool has_autofillcreditcardenabled() const;
private:
bool _internal_has_autofillcreditcardenabled() const;
public:
void clear_autofillcreditcardenabled();
const ::enterprise_management::BooleanPolicyProto& autofillcreditcardenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_autofillcreditcardenabled();
::enterprise_management::BooleanPolicyProto* mutable_autofillcreditcardenabled();
void set_allocated_autofillcreditcardenabled(::enterprise_management::BooleanPolicyProto* autofillcreditcardenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_autofillcreditcardenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_autofillcreditcardenabled();
public:
void unsafe_arena_set_allocated_autofillcreditcardenabled(
::enterprise_management::BooleanPolicyProto* autofillcreditcardenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_autofillcreditcardenabled();

// optional .enterprise_management.BooleanPolicyProto NtlmV2Enabled = 395;
bool has_ntlmv2enabled() const;
private:
bool _internal_has_ntlmv2enabled() const;
public:
void clear_ntlmv2enabled();
const ::enterprise_management::BooleanPolicyProto& ntlmv2enabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_ntlmv2enabled();
::enterprise_management::BooleanPolicyProto* mutable_ntlmv2enabled();
void set_allocated_ntlmv2enabled(::enterprise_management::BooleanPolicyProto* ntlmv2enabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_ntlmv2enabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_ntlmv2enabled();
public:
void unsafe_arena_set_allocated_ntlmv2enabled(
::enterprise_management::BooleanPolicyProto* ntlmv2enabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_ntlmv2enabled();

// optional .enterprise_management.BooleanPolicyProto PromptForDownloadLocation = 397;
bool has_promptfordownloadlocation() const;
private:
bool _internal_has_promptfordownloadlocation() const;
public:
void clear_promptfordownloadlocation();
const ::enterprise_management::BooleanPolicyProto& promptfordownloadlocation() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_promptfordownloadlocation();
::enterprise_management::BooleanPolicyProto* mutable_promptfordownloadlocation();
void set_allocated_promptfordownloadlocation(::enterprise_management::BooleanPolicyProto* promptfordownloadlocation);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_promptfordownloadlocation() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_promptfordownloadlocation();
public:
void unsafe_arena_set_allocated_promptfordownloadlocation(
::enterprise_management::BooleanPolicyProto* promptfordownloadlocation);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_promptfordownloadlocation();

// optional .enterprise_management.StringListPolicyProto RestrictAccountsToPatterns = 412;
bool has_restrictaccountstopatterns() const;
private:
bool _internal_has_restrictaccountstopatterns() const;
public:
void clear_restrictaccountstopatterns();
const ::enterprise_management::StringListPolicyProto& restrictaccountstopatterns() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_restrictaccountstopatterns();
::enterprise_management::StringListPolicyProto* mutable_restrictaccountstopatterns();
void set_allocated_restrictaccountstopatterns(::enterprise_management::StringListPolicyProto* restrictaccountstopatterns);
private:
const ::enterprise_management::StringListPolicyProto& _internal_restrictaccountstopatterns() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_restrictaccountstopatterns();
public:
void unsafe_arena_set_allocated_restrictaccountstopatterns(
::enterprise_management::StringListPolicyProto* restrictaccountstopatterns);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_restrictaccountstopatterns();

// optional .enterprise_management.BooleanPolicyProto SafeBrowsingExtendedReportingEnabled = 431;
bool has_safebrowsingextendedreportingenabled() const;
private:
bool _internal_has_safebrowsingextendedreportingenabled() const;
public:
void clear_safebrowsingextendedreportingenabled();
const ::enterprise_management::BooleanPolicyProto& safebrowsingextendedreportingenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_safebrowsingextendedreportingenabled();
::enterprise_management::BooleanPolicyProto* mutable_safebrowsingextendedreportingenabled();
void set_allocated_safebrowsingextendedreportingenabled(::enterprise_management::BooleanPolicyProto* safebrowsingextendedreportingenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_safebrowsingextendedreportingenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_safebrowsingextendedreportingenabled();
public:
void unsafe_arena_set_allocated_safebrowsingextendedreportingenabled(
::enterprise_management::BooleanPolicyProto* safebrowsingextendedreportingenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_safebrowsingextendedreportingenabled();

// optional .enterprise_management.IntegerPolicyProto DefaultWebUsbGuardSetting = 436;
bool has_defaultwebusbguardsetting() const;
private:
bool _internal_has_defaultwebusbguardsetting() const;
public:
void clear_defaultwebusbguardsetting();
const ::enterprise_management::IntegerPolicyProto& defaultwebusbguardsetting() const;
PROTOBUF_NODISCARD ::enterprise_management::IntegerPolicyProto* release_defaultwebusbguardsetting();
::enterprise_management::IntegerPolicyProto* mutable_defaultwebusbguardsetting();
void set_allocated_defaultwebusbguardsetting(::enterprise_management::IntegerPolicyProto* defaultwebusbguardsetting);
private:
const ::enterprise_management::IntegerPolicyProto& _internal_defaultwebusbguardsetting() const;
::enterprise_management::IntegerPolicyProto* _internal_mutable_defaultwebusbguardsetting();
public:
void unsafe_arena_set_allocated_defaultwebusbguardsetting(
::enterprise_management::IntegerPolicyProto* defaultwebusbguardsetting);
::enterprise_management::IntegerPolicyProto* unsafe_arena_release_defaultwebusbguardsetting();

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForCas = 437;
bool has_certificatetransparencyenforcementdisabledforcas() const;
private:
bool _internal_has_certificatetransparencyenforcementdisabledforcas() const;
public:
void clear_certificatetransparencyenforcementdisabledforcas();
const ::enterprise_management::StringListPolicyProto& certificatetransparencyenforcementdisabledforcas() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_certificatetransparencyenforcementdisabledforcas();
::enterprise_management::StringListPolicyProto* mutable_certificatetransparencyenforcementdisabledforcas();
void set_allocated_certificatetransparencyenforcementdisabledforcas(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforcas);
private:
const ::enterprise_management::StringListPolicyProto& _internal_certificatetransparencyenforcementdisabledforcas() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_certificatetransparencyenforcementdisabledforcas();
public:
void unsafe_arena_set_allocated_certificatetransparencyenforcementdisabledforcas(
::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforcas);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_certificatetransparencyenforcementdisabledforcas();

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForLegacyCas = 438;
bool has_certificatetransparencyenforcementdisabledforlegacycas() const;
private:
bool _internal_has_certificatetransparencyenforcementdisabledforlegacycas() const;
public:
void clear_certificatetransparencyenforcementdisabledforlegacycas();
const ::enterprise_management::StringListPolicyProto& certificatetransparencyenforcementdisabledforlegacycas() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_certificatetransparencyenforcementdisabledforlegacycas();
::enterprise_management::StringListPolicyProto* mutable_certificatetransparencyenforcementdisabledforlegacycas();
void set_allocated_certificatetransparencyenforcementdisabledforlegacycas(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforlegacycas);
private:
const ::enterprise_management::StringListPolicyProto& _internal_certificatetransparencyenforcementdisabledforlegacycas() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_certificatetransparencyenforcementdisabledforlegacycas();
public:
void unsafe_arena_set_allocated_certificatetransparencyenforcementdisabledforlegacycas(
::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforlegacycas);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_certificatetransparencyenforcementdisabledforlegacycas();

// optional .enterprise_management.StringListPolicyProto WebUsbAskForUrls = 441;
bool has_webusbaskforurls() const;
private:
bool _internal_has_webusbaskforurls() const;
public:
void clear_webusbaskforurls();
const ::enterprise_management::StringListPolicyProto& webusbaskforurls() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_webusbaskforurls();
::enterprise_management::StringListPolicyProto* mutable_webusbaskforurls();
void set_allocated_webusbaskforurls(::enterprise_management::StringListPolicyProto* webusbaskforurls);
private:
const ::enterprise_management::StringListPolicyProto& _internal_webusbaskforurls() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_webusbaskforurls();
public:
void unsafe_arena_set_allocated_webusbaskforurls(
::enterprise_management::StringListPolicyProto* webusbaskforurls);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_webusbaskforurls();

// optional .enterprise_management.StringListPolicyProto WebUsbBlockedForUrls = 442;
bool has_webusbblockedforurls() const;
private:
bool _internal_has_webusbblockedforurls() const;
public:
void clear_webusbblockedforurls();
const ::enterprise_management::StringListPolicyProto& webusbblockedforurls() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_webusbblockedforurls();
::enterprise_management::StringListPolicyProto* mutable_webusbblockedforurls();
void set_allocated_webusbblockedforurls(::enterprise_management::StringListPolicyProto* webusbblockedforurls);
private:
const ::enterprise_management::StringListPolicyProto& _internal_webusbblockedforurls() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_webusbblockedforurls();
public:
void unsafe_arena_set_allocated_webusbblockedforurls(
::enterprise_management::StringListPolicyProto* webusbblockedforurls);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_webusbblockedforurls();

// optional .enterprise_management.StringPolicyProto IsolateOriginsAndroid = 447;
bool has_isolateoriginsandroid() const;
private:
bool _internal_has_isolateoriginsandroid() const;
public:
void clear_isolateoriginsandroid();
const ::enterprise_management::StringPolicyProto& isolateoriginsandroid() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_isolateoriginsandroid();
::enterprise_management::StringPolicyProto* mutable_isolateoriginsandroid();
void set_allocated_isolateoriginsandroid(::enterprise_management::StringPolicyProto* isolateoriginsandroid);
private:
const ::enterprise_management::StringPolicyProto& _internal_isolateoriginsandroid() const;
::enterprise_management::StringPolicyProto* _internal_mutable_isolateoriginsandroid();
public:
void unsafe_arena_set_allocated_isolateoriginsandroid(
::enterprise_management::StringPolicyProto* isolateoriginsandroid);
::enterprise_management::StringPolicyProto* unsafe_arena_release_isolateoriginsandroid();

// optional .enterprise_management.BooleanPolicyProto SitePerProcessAndroid = 448;
bool has_siteperprocessandroid() const;
private:
bool _internal_has_siteperprocessandroid() const;
public:
void clear_siteperprocessandroid();
const ::enterprise_management::BooleanPolicyProto& siteperprocessandroid() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_siteperprocessandroid();
::enterprise_management::BooleanPolicyProto* mutable_siteperprocessandroid();
void set_allocated_siteperprocessandroid(::enterprise_management::BooleanPolicyProto* siteperprocessandroid);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_siteperprocessandroid() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_siteperprocessandroid();
public:
void unsafe_arena_set_allocated_siteperprocessandroid(
::enterprise_management::BooleanPolicyProto* siteperprocessandroid);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_siteperprocessandroid();

// optional .enterprise_management.StringListPolicyProto OverrideSecurityRestrictionsOnInsecureOrigin = 459;
bool has_overridesecurityrestrictionsoninsecureorigin() const;
private:
bool _internal_has_overridesecurityrestrictionsoninsecureorigin() const;
public:
void clear_overridesecurityrestrictionsoninsecureorigin();
const ::enterprise_management::StringListPolicyProto& overridesecurityrestrictionsoninsecureorigin() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_overridesecurityrestrictionsoninsecureorigin();
::enterprise_management::StringListPolicyProto* mutable_overridesecurityrestrictionsoninsecureorigin();
void set_allocated_overridesecurityrestrictionsoninsecureorigin(::enterprise_management::StringListPolicyProto* overridesecurityrestrictionsoninsecureorigin);
private:
const ::enterprise_management::StringListPolicyProto& _internal_overridesecurityrestrictionsoninsecureorigin() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_overridesecurityrestrictionsoninsecureorigin();
public:
void unsafe_arena_set_allocated_overridesecurityrestrictionsoninsecureorigin(
::enterprise_management::StringListPolicyProto* overridesecurityrestrictionsoninsecureorigin);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_overridesecurityrestrictionsoninsecureorigin();

// optional .enterprise_management.BooleanPolicyProto AutofillAddressEnabled = 461;
bool has_autofilladdressenabled() const;
private:
bool _internal_has_autofilladdressenabled() const;
public:
void clear_autofilladdressenabled();
const ::enterprise_management::BooleanPolicyProto& autofilladdressenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_autofilladdressenabled();
::enterprise_management::BooleanPolicyProto* mutable_autofilladdressenabled();
void set_allocated_autofilladdressenabled(::enterprise_management::BooleanPolicyProto* autofilladdressenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_autofilladdressenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_autofilladdressenabled();
public:
void unsafe_arena_set_allocated_autofilladdressenabled(
::enterprise_management::BooleanPolicyProto* autofilladdressenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_autofilladdressenabled();

// optional .enterprise_management.BooleanPolicyProto UrlKeyedAnonymizedDataCollectionEnabled = 463;
bool has_urlkeyedanonymizeddatacollectionenabled() const;
private:
bool _internal_has_urlkeyedanonymizeddatacollectionenabled() const;
public:
void clear_urlkeyedanonymizeddatacollectionenabled();
const ::enterprise_management::BooleanPolicyProto& urlkeyedanonymizeddatacollectionenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_urlkeyedanonymizeddatacollectionenabled();
::enterprise_management::BooleanPolicyProto* mutable_urlkeyedanonymizeddatacollectionenabled();
void set_allocated_urlkeyedanonymizeddatacollectionenabled(::enterprise_management::BooleanPolicyProto* urlkeyedanonymizeddatacollectionenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_urlkeyedanonymizeddatacollectionenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_urlkeyedanonymizeddatacollectionenabled();
public:
void unsafe_arena_set_allocated_urlkeyedanonymizeddatacollectionenabled(
::enterprise_management::BooleanPolicyProto* urlkeyedanonymizeddatacollectionenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_urlkeyedanonymizeddatacollectionenabled();

// optional .enterprise_management.StringListPolicyProto CoalesceH2ConnectionsWithClientCertificatesForHosts = 468;
bool has_coalesceh2connectionswithclientcertificatesforhosts() const;
private:
bool _internal_has_coalesceh2connectionswithclientcertificatesforhosts() const;
public:
void clear_coalesceh2connectionswithclientcertificatesforhosts();
const ::enterprise_management::StringListPolicyProto& coalesceh2connectionswithclientcertificatesforhosts() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_coalesceh2connectionswithclientcertificatesforhosts();
::enterprise_management::StringListPolicyProto* mutable_coalesceh2connectionswithclientcertificatesforhosts();
void set_allocated_coalesceh2connectionswithclientcertificatesforhosts(::enterprise_management::StringListPolicyProto* coalesceh2connectionswithclientcertificatesforhosts);
private:
const ::enterprise_management::StringListPolicyProto& _internal_coalesceh2connectionswithclientcertificatesforhosts() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_coalesceh2connectionswithclientcertificatesforhosts();
public:
void unsafe_arena_set_allocated_coalesceh2connectionswithclientcertificatesforhosts(
::enterprise_management::StringListPolicyProto* coalesceh2connectionswithclientcertificatesforhosts);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_coalesceh2connectionswithclientcertificatesforhosts();

// optional .enterprise_management.BooleanPolicyProto EnterpriseHardwarePlatformAPIEnabled = 485;
bool has_enterprisehardwareplatformapienabled() const;
private:
bool _internal_has_enterprisehardwareplatformapienabled() const;
public:
void clear_enterprisehardwareplatformapienabled();
const ::enterprise_management::BooleanPolicyProto& enterprisehardwareplatformapienabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_enterprisehardwareplatformapienabled();
::enterprise_management::BooleanPolicyProto* mutable_enterprisehardwareplatformapienabled();
void set_allocated_enterprisehardwareplatformapienabled(::enterprise_management::BooleanPolicyProto* enterprisehardwareplatformapienabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_enterprisehardwareplatformapienabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_enterprisehardwareplatformapienabled();
public:
void unsafe_arena_set_allocated_enterprisehardwareplatformapienabled(
::enterprise_management::BooleanPolicyProto* enterprisehardwareplatformapienabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_enterprisehardwareplatformapienabled();

// optional .enterprise_management.StringPolicyProto WebUsbAllowDevicesForUrls = 488;
bool has_webusballowdevicesforurls() const;
private:
bool _internal_has_webusballowdevicesforurls() const;
public:
void clear_webusballowdevicesforurls();
const ::enterprise_management::StringPolicyProto& webusballowdevicesforurls() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_webusballowdevicesforurls();
::enterprise_management::StringPolicyProto* mutable_webusballowdevicesforurls();
void set_allocated_webusballowdevicesforurls(::enterprise_management::StringPolicyProto* webusballowdevicesforurls);
private:
const ::enterprise_management::StringPolicyProto& _internal_webusballowdevicesforurls() const;
::enterprise_management::StringPolicyProto* _internal_mutable_webusballowdevicesforurls();
public:
void unsafe_arena_set_allocated_webusballowdevicesforurls(
::enterprise_management::StringPolicyProto* webusballowdevicesforurls);
::enterprise_management::StringPolicyProto* unsafe_arena_release_webusballowdevicesforurls();

// optional .enterprise_management.IntegerPolicyProto BrowserSignin = 489;
bool has_browsersignin() const;
private:
bool _internal_has_browsersignin() const;
public:
void clear_browsersignin();
const ::enterprise_management::IntegerPolicyProto& browsersignin() const;
PROTOBUF_NODISCARD ::enterprise_management::IntegerPolicyProto* release_browsersignin();
::enterprise_management::IntegerPolicyProto* mutable_browsersignin();
void set_allocated_browsersignin(::enterprise_management::IntegerPolicyProto* browsersignin);
private:
const ::enterprise_management::IntegerPolicyProto& _internal_browsersignin() const;
::enterprise_management::IntegerPolicyProto* _internal_mutable_browsersignin();
public:
void unsafe_arena_set_allocated_browsersignin(
::enterprise_management::IntegerPolicyProto* browsersignin);
::enterprise_management::IntegerPolicyProto* unsafe_arena_release_browsersignin();

// optional .enterprise_management.BooleanPolicyProto CloudReportingEnabled = 495;
bool has_cloudreportingenabled() const;
private:
bool _internal_has_cloudreportingenabled() const;
public:
void clear_cloudreportingenabled();
const ::enterprise_management::BooleanPolicyProto& cloudreportingenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_cloudreportingenabled();
::enterprise_management::BooleanPolicyProto* mutable_cloudreportingenabled();
void set_allocated_cloudreportingenabled(::enterprise_management::BooleanPolicyProto* cloudreportingenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_cloudreportingenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_cloudreportingenabled();
public:
void unsafe_arena_set_allocated_cloudreportingenabled(
::enterprise_management::BooleanPolicyProto* cloudreportingenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_cloudreportingenabled();

// optional .enterprise_management.StringPolicyProto CloudManagementEnrollmentToken = 512;
bool has_cloudmanagementenrollmenttoken() const;
private:
bool _internal_has_cloudmanagementenrollmenttoken() const;
public:
void clear_cloudmanagementenrollmenttoken();
const ::enterprise_management::StringPolicyProto& cloudmanagementenrollmenttoken() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_cloudmanagementenrollmenttoken();
::enterprise_management::StringPolicyProto* mutable_cloudmanagementenrollmenttoken();
void set_allocated_cloudmanagementenrollmenttoken(::enterprise_management::StringPolicyProto* cloudmanagementenrollmenttoken);
private:
const ::enterprise_management::StringPolicyProto& _internal_cloudmanagementenrollmenttoken() const;
::enterprise_management::StringPolicyProto* _internal_mutable_cloudmanagementenrollmenttoken();
public:
void unsafe_arena_set_allocated_cloudmanagementenrollmenttoken(
::enterprise_management::StringPolicyProto* cloudmanagementenrollmenttoken);
::enterprise_management::StringPolicyProto* unsafe_arena_release_cloudmanagementenrollmenttoken();

// optional .enterprise_management.StringListPolicyProto PolicyListMultipleSourceMergeList = 556;
bool has_policylistmultiplesourcemergelist() const;
private:
bool _internal_has_policylistmultiplesourcemergelist() const;
public:
void clear_policylistmultiplesourcemergelist();
const ::enterprise_management::StringListPolicyProto& policylistmultiplesourcemergelist() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_policylistmultiplesourcemergelist();
::enterprise_management::StringListPolicyProto* mutable_policylistmultiplesourcemergelist();
void set_allocated_policylistmultiplesourcemergelist(::enterprise_management::StringListPolicyProto* policylistmultiplesourcemergelist);
private:
const ::enterprise_management::StringListPolicyProto& _internal_policylistmultiplesourcemergelist() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_policylistmultiplesourcemergelist();
public:
void unsafe_arena_set_allocated_policylistmultiplesourcemergelist(
::enterprise_management::StringListPolicyProto* policylistmultiplesourcemergelist);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_policylistmultiplesourcemergelist();

// optional .enterprise_management.StringListPolicyProto PolicyDictionaryMultipleSourceMergeList = 567;
bool has_policydictionarymultiplesourcemergelist() const;
private:
bool _internal_has_policydictionarymultiplesourcemergelist() const;
public:
void clear_policydictionarymultiplesourcemergelist();
const ::enterprise_management::StringListPolicyProto& policydictionarymultiplesourcemergelist() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_policydictionarymultiplesourcemergelist();
::enterprise_management::StringListPolicyProto* mutable_policydictionarymultiplesourcemergelist();
void set_allocated_policydictionarymultiplesourcemergelist(::enterprise_management::StringListPolicyProto* policydictionarymultiplesourcemergelist);
private:
const ::enterprise_management::StringListPolicyProto& _internal_policydictionarymultiplesourcemergelist() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_policydictionarymultiplesourcemergelist();
public:
void unsafe_arena_set_allocated_policydictionarymultiplesourcemergelist(
::enterprise_management::StringListPolicyProto* policydictionarymultiplesourcemergelist);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_policydictionarymultiplesourcemergelist();

// optional .enterprise_management.BooleanPolicyProto PasswordLeakDetectionEnabled = 582;
bool has_passwordleakdetectionenabled() const;
private:
bool _internal_has_passwordleakdetectionenabled() const;
public:
void clear_passwordleakdetectionenabled();
const ::enterprise_management::BooleanPolicyProto& passwordleakdetectionenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_passwordleakdetectionenabled();
::enterprise_management::BooleanPolicyProto* mutable_passwordleakdetectionenabled();
void set_allocated_passwordleakdetectionenabled(::enterprise_management::BooleanPolicyProto* passwordleakdetectionenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_passwordleakdetectionenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_passwordleakdetectionenabled();
public:
void unsafe_arena_set_allocated_passwordleakdetectionenabled(
::enterprise_management::BooleanPolicyProto* passwordleakdetectionenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_passwordleakdetectionenabled();

// optional .enterprise_management.StringPolicyProto DnsOverHttpsMode = 584;
bool has_dnsoverhttpsmode() const;
private:
bool _internal_has_dnsoverhttpsmode() const;
public:
void clear_dnsoverhttpsmode();
const ::enterprise_management::StringPolicyProto& dnsoverhttpsmode() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_dnsoverhttpsmode();
::enterprise_management::StringPolicyProto* mutable_dnsoverhttpsmode();
void set_allocated_dnsoverhttpsmode(::enterprise_management::StringPolicyProto* dnsoverhttpsmode);
private:
const ::enterprise_management::StringPolicyProto& _internal_dnsoverhttpsmode() const;
::enterprise_management::StringPolicyProto* _internal_mutable_dnsoverhttpsmode();
public:
void unsafe_arena_set_allocated_dnsoverhttpsmode(
::enterprise_management::StringPolicyProto* dnsoverhttpsmode);
::enterprise_management::StringPolicyProto* unsafe_arena_release_dnsoverhttpsmode();

// optional .enterprise_management.BooleanPolicyProto PolicyAtomicGroupsEnabled = 586;
bool has_policyatomicgroupsenabled() const;
private:
bool _internal_has_policyatomicgroupsenabled() const;
public:
void clear_policyatomicgroupsenabled();
const ::enterprise_management::BooleanPolicyProto& policyatomicgroupsenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_policyatomicgroupsenabled();
::enterprise_management::BooleanPolicyProto* mutable_policyatomicgroupsenabled();
void set_allocated_policyatomicgroupsenabled(::enterprise_management::BooleanPolicyProto* policyatomicgroupsenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_policyatomicgroupsenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_policyatomicgroupsenabled();
public:
void unsafe_arena_set_allocated_policyatomicgroupsenabled(
::enterprise_management::BooleanPolicyProto* policyatomicgroupsenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_policyatomicgroupsenabled();

// optional .enterprise_management.StringListPolicyProto HSTSPolicyBypassList = 603;
bool has_hstspolicybypasslist() const;
private:
bool _internal_has_hstspolicybypasslist() const;
public:
void clear_hstspolicybypasslist();
const ::enterprise_management::StringListPolicyProto& hstspolicybypasslist() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_hstspolicybypasslist();
::enterprise_management::StringListPolicyProto* mutable_hstspolicybypasslist();
void set_allocated_hstspolicybypasslist(::enterprise_management::StringListPolicyProto* hstspolicybypasslist);
private:
const ::enterprise_management::StringListPolicyProto& _internal_hstspolicybypasslist() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_hstspolicybypasslist();
public:
void unsafe_arena_set_allocated_hstspolicybypasslist(
::enterprise_management::StringListPolicyProto* hstspolicybypasslist);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_hstspolicybypasslist();

// optional .enterprise_management.BooleanPolicyProto SharedClipboardEnabled = 612;
bool has_sharedclipboardenabled() const;
private:
bool _internal_has_sharedclipboardenabled() const;
public:
void clear_sharedclipboardenabled();
const ::enterprise_management::BooleanPolicyProto& sharedclipboardenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_sharedclipboardenabled();
::enterprise_management::BooleanPolicyProto* mutable_sharedclipboardenabled();
void set_allocated_sharedclipboardenabled(::enterprise_management::BooleanPolicyProto* sharedclipboardenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_sharedclipboardenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_sharedclipboardenabled();
public:
void unsafe_arena_set_allocated_sharedclipboardenabled(
::enterprise_management::BooleanPolicyProto* sharedclipboardenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_sharedclipboardenabled();

// optional .enterprise_management.StringListPolicyProto LegacySameSiteCookieBehaviorEnabledForDomainList = 626;
bool has_legacysamesitecookiebehaviorenabledfordomainlist() const;
private:
bool _internal_has_legacysamesitecookiebehaviorenabledfordomainlist() const;
public:
void clear_legacysamesitecookiebehaviorenabledfordomainlist();
const ::enterprise_management::StringListPolicyProto& legacysamesitecookiebehaviorenabledfordomainlist() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_legacysamesitecookiebehaviorenabledfordomainlist();
::enterprise_management::StringListPolicyProto* mutable_legacysamesitecookiebehaviorenabledfordomainlist();
void set_allocated_legacysamesitecookiebehaviorenabledfordomainlist(::enterprise_management::StringListPolicyProto* legacysamesitecookiebehaviorenabledfordomainlist);
private:
const ::enterprise_management::StringListPolicyProto& _internal_legacysamesitecookiebehaviorenabledfordomainlist() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_legacysamesitecookiebehaviorenabledfordomainlist();
public:
void unsafe_arena_set_allocated_legacysamesitecookiebehaviorenabledfordomainlist(
::enterprise_management::StringListPolicyProto* legacysamesitecookiebehaviorenabledfordomainlist);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_legacysamesitecookiebehaviorenabledfordomainlist();

// optional .enterprise_management.StringPolicyProto DnsOverHttpsTemplates = 644;
bool has_dnsoverhttpstemplates() const;
private:
bool _internal_has_dnsoverhttpstemplates() const;
public:
void clear_dnsoverhttpstemplates();
const ::enterprise_management::StringPolicyProto& dnsoverhttpstemplates() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_dnsoverhttpstemplates();
::enterprise_management::StringPolicyProto* mutable_dnsoverhttpstemplates();
void set_allocated_dnsoverhttpstemplates(::enterprise_management::StringPolicyProto* dnsoverhttpstemplates);
private:
const ::enterprise_management::StringPolicyProto& _internal_dnsoverhttpstemplates() const;
::enterprise_management::StringPolicyProto* _internal_mutable_dnsoverhttpstemplates();
public:
void unsafe_arena_set_allocated_dnsoverhttpstemplates(
::enterprise_management::StringPolicyProto* dnsoverhttpstemplates);
::enterprise_management::StringPolicyProto* unsafe_arena_release_dnsoverhttpstemplates();

// optional .enterprise_management.StringListPolicyProto SyncTypesListDisabled = 651;
bool has_synctypeslistdisabled() const;
private:
bool _internal_has_synctypeslistdisabled() const;
public:
void clear_synctypeslistdisabled();
const ::enterprise_management::StringListPolicyProto& synctypeslistdisabled() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_synctypeslistdisabled();
::enterprise_management::StringListPolicyProto* mutable_synctypeslistdisabled();
void set_allocated_synctypeslistdisabled(::enterprise_management::StringListPolicyProto* synctypeslistdisabled);
private:
const ::enterprise_management::StringListPolicyProto& _internal_synctypeslistdisabled() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_synctypeslistdisabled();
public:
void unsafe_arena_set_allocated_synctypeslistdisabled(
::enterprise_management::StringListPolicyProto* synctypeslistdisabled);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_synctypeslistdisabled();

// optional .enterprise_management.BooleanPolicyProto PaymentMethodQueryEnabled = 653;
bool has_paymentmethodqueryenabled() const;
private:
bool _internal_has_paymentmethodqueryenabled() const;
public:
void clear_paymentmethodqueryenabled();
const ::enterprise_management::BooleanPolicyProto& paymentmethodqueryenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_paymentmethodqueryenabled();
::enterprise_management::BooleanPolicyProto* mutable_paymentmethodqueryenabled();
void set_allocated_paymentmethodqueryenabled(::enterprise_management::BooleanPolicyProto* paymentmethodqueryenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_paymentmethodqueryenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_paymentmethodqueryenabled();
public:
void unsafe_arena_set_allocated_paymentmethodqueryenabled(
::enterprise_management::BooleanPolicyProto* paymentmethodqueryenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_paymentmethodqueryenabled();

// optional .enterprise_management.IntegerPolicyProto SafeBrowsingProtectionLevel = 686;
bool has_safebrowsingprotectionlevel() const;
private:
bool _internal_has_safebrowsingprotectionlevel() const;
public:
void clear_safebrowsingprotectionlevel();
const ::enterprise_management::IntegerPolicyProto& safebrowsingprotectionlevel() const;
PROTOBUF_NODISCARD ::enterprise_management::IntegerPolicyProto* release_safebrowsingprotectionlevel();
::enterprise_management::IntegerPolicyProto* mutable_safebrowsingprotectionlevel();
void set_allocated_safebrowsingprotectionlevel(::enterprise_management::IntegerPolicyProto* safebrowsingprotectionlevel);
private:
const ::enterprise_management::IntegerPolicyProto& _internal_safebrowsingprotectionlevel() const;
::enterprise_management::IntegerPolicyProto* _internal_mutable_safebrowsingprotectionlevel();
public:
void unsafe_arena_set_allocated_safebrowsingprotectionlevel(
::enterprise_management::IntegerPolicyProto* safebrowsingprotectionlevel);
::enterprise_management::IntegerPolicyProto* unsafe_arena_release_safebrowsingprotectionlevel();

// optional .enterprise_management.BooleanPolicyProto ScrollToTextFragmentEnabled = 689;
bool has_scrolltotextfragmentenabled() const;
private:
bool _internal_has_scrolltotextfragmentenabled() const;
public:
void clear_scrolltotextfragmentenabled();
const ::enterprise_management::BooleanPolicyProto& scrolltotextfragmentenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_scrolltotextfragmentenabled();
::enterprise_management::BooleanPolicyProto* mutable_scrolltotextfragmentenabled();
void set_allocated_scrolltotextfragmentenabled(::enterprise_management::BooleanPolicyProto* scrolltotextfragmentenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_scrolltotextfragmentenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_scrolltotextfragmentenabled();
public:
void unsafe_arena_set_allocated_scrolltotextfragmentenabled(
::enterprise_management::BooleanPolicyProto* scrolltotextfragmentenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_scrolltotextfragmentenabled();

// optional .enterprise_management.StringListPolicyProto EnableExperimentalPolicies = 713;
bool has_enableexperimentalpolicies() const;
private:
bool _internal_has_enableexperimentalpolicies() const;
public:
void clear_enableexperimentalpolicies();
const ::enterprise_management::StringListPolicyProto& enableexperimentalpolicies() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_enableexperimentalpolicies();
::enterprise_management::StringListPolicyProto* mutable_enableexperimentalpolicies();
void set_allocated_enableexperimentalpolicies(::enterprise_management::StringListPolicyProto* enableexperimentalpolicies);
private:
const ::enterprise_management::StringListPolicyProto& _internal_enableexperimentalpolicies() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_enableexperimentalpolicies();
public:
void unsafe_arena_set_allocated_enableexperimentalpolicies(
::enterprise_management::StringListPolicyProto* enableexperimentalpolicies);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_enableexperimentalpolicies();

// optional .enterprise_management.BooleanPolicyProto IntensiveWakeUpThrottlingEnabled = 715;
bool has_intensivewakeupthrottlingenabled() const;
private:
bool _internal_has_intensivewakeupthrottlingenabled() const;
public:
void clear_intensivewakeupthrottlingenabled();
const ::enterprise_management::BooleanPolicyProto& intensivewakeupthrottlingenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_intensivewakeupthrottlingenabled();
::enterprise_management::BooleanPolicyProto* mutable_intensivewakeupthrottlingenabled();
void set_allocated_intensivewakeupthrottlingenabled(::enterprise_management::BooleanPolicyProto* intensivewakeupthrottlingenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_intensivewakeupthrottlingenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_intensivewakeupthrottlingenabled();
public:
void unsafe_arena_set_allocated_intensivewakeupthrottlingenabled(
::enterprise_management::BooleanPolicyProto* intensivewakeupthrottlingenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_intensivewakeupthrottlingenabled();

// optional .enterprise_management.StringListPolicyProto URLBlocklist = 738;
bool has_urlblocklist() const;
private:
bool _internal_has_urlblocklist() const;
public:
void clear_urlblocklist();
const ::enterprise_management::StringListPolicyProto& urlblocklist() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_urlblocklist();
::enterprise_management::StringListPolicyProto* mutable_urlblocklist();
void set_allocated_urlblocklist(::enterprise_management::StringListPolicyProto* urlblocklist);
private:
const ::enterprise_management::StringListPolicyProto& _internal_urlblocklist() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_urlblocklist();
public:
void unsafe_arena_set_allocated_urlblocklist(
::enterprise_management::StringListPolicyProto* urlblocklist);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_urlblocklist();

// optional .enterprise_management.StringListPolicyProto URLAllowlist = 739;
bool has_urlallowlist() const;
private:
bool _internal_has_urlallowlist() const;
public:
void clear_urlallowlist();
const ::enterprise_management::StringListPolicyProto& urlallowlist() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_urlallowlist();
::enterprise_management::StringListPolicyProto* mutable_urlallowlist();
void set_allocated_urlallowlist(::enterprise_management::StringListPolicyProto* urlallowlist);
private:
const ::enterprise_management::StringListPolicyProto& _internal_urlallowlist() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_urlallowlist();
public:
void unsafe_arena_set_allocated_urlallowlist(
::enterprise_management::StringListPolicyProto* urlallowlist);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_urlallowlist();

// optional .enterprise_management.StringPolicyProto AuthNegotiateDelegateAllowlist = 748;
bool has_authnegotiatedelegateallowlist() const;
private:
bool _internal_has_authnegotiatedelegateallowlist() const;
public:
void clear_authnegotiatedelegateallowlist();
const ::enterprise_management::StringPolicyProto& authnegotiatedelegateallowlist() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_authnegotiatedelegateallowlist();
::enterprise_management::StringPolicyProto* mutable_authnegotiatedelegateallowlist();
void set_allocated_authnegotiatedelegateallowlist(::enterprise_management::StringPolicyProto* authnegotiatedelegateallowlist);
private:
const ::enterprise_management::StringPolicyProto& _internal_authnegotiatedelegateallowlist() const;
::enterprise_management::StringPolicyProto* _internal_mutable_authnegotiatedelegateallowlist();
public:
void unsafe_arena_set_allocated_authnegotiatedelegateallowlist(
::enterprise_management::StringPolicyProto* authnegotiatedelegateallowlist);
::enterprise_management::StringPolicyProto* unsafe_arena_release_authnegotiatedelegateallowlist();

// optional .enterprise_management.StringPolicyProto AuthServerAllowlist = 749;
bool has_authserverallowlist() const;
private:
bool _internal_has_authserverallowlist() const;
public:
void clear_authserverallowlist();
const ::enterprise_management::StringPolicyProto& authserverallowlist() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_authserverallowlist();
::enterprise_management::StringPolicyProto* mutable_authserverallowlist();
void set_allocated_authserverallowlist(::enterprise_management::StringPolicyProto* authserverallowlist);
private:
const ::enterprise_management::StringPolicyProto& _internal_authserverallowlist() const;
::enterprise_management::StringPolicyProto* _internal_mutable_authserverallowlist();
public:
void unsafe_arena_set_allocated_authserverallowlist(
::enterprise_management::StringPolicyProto* authserverallowlist);
::enterprise_management::StringPolicyProto* unsafe_arena_release_authserverallowlist();

// optional .enterprise_management.BooleanPolicyProto InsecureFormsWarningsEnabled = 750;
bool has_insecureformswarningsenabled() const;
private:
bool _internal_has_insecureformswarningsenabled() const;
public:
void clear_insecureformswarningsenabled();
const ::enterprise_management::BooleanPolicyProto& insecureformswarningsenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_insecureformswarningsenabled();
::enterprise_management::BooleanPolicyProto* mutable_insecureformswarningsenabled();
void set_allocated_insecureformswarningsenabled(::enterprise_management::BooleanPolicyProto* insecureformswarningsenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_insecureformswarningsenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_insecureformswarningsenabled();
public:
void unsafe_arena_set_allocated_insecureformswarningsenabled(
::enterprise_management::BooleanPolicyProto* insecureformswarningsenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_insecureformswarningsenabled();

// optional .enterprise_management.IntegerPolicyProto DefaultSensorsSetting = 756;
bool has_defaultsensorssetting() const;
private:
bool _internal_has_defaultsensorssetting() const;
public:
void clear_defaultsensorssetting();
const ::enterprise_management::IntegerPolicyProto& defaultsensorssetting() const;
PROTOBUF_NODISCARD ::enterprise_management::IntegerPolicyProto* release_defaultsensorssetting();
::enterprise_management::IntegerPolicyProto* mutable_defaultsensorssetting();
void set_allocated_defaultsensorssetting(::enterprise_management::IntegerPolicyProto* defaultsensorssetting);
private:
const ::enterprise_management::IntegerPolicyProto& _internal_defaultsensorssetting() const;
::enterprise_management::IntegerPolicyProto* _internal_mutable_defaultsensorssetting();
public:
void unsafe_arena_set_allocated_defaultsensorssetting(
::enterprise_management::IntegerPolicyProto* defaultsensorssetting);
::enterprise_management::IntegerPolicyProto* unsafe_arena_release_defaultsensorssetting();

// optional .enterprise_management.StringListPolicyProto SensorsAllowedForUrls = 757;
bool has_sensorsallowedforurls() const;
private:
bool _internal_has_sensorsallowedforurls() const;
public:
void clear_sensorsallowedforurls();
const ::enterprise_management::StringListPolicyProto& sensorsallowedforurls() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_sensorsallowedforurls();
::enterprise_management::StringListPolicyProto* mutable_sensorsallowedforurls();
void set_allocated_sensorsallowedforurls(::enterprise_management::StringListPolicyProto* sensorsallowedforurls);
private:
const ::enterprise_management::StringListPolicyProto& _internal_sensorsallowedforurls() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_sensorsallowedforurls();
public:
void unsafe_arena_set_allocated_sensorsallowedforurls(
::enterprise_management::StringListPolicyProto* sensorsallowedforurls);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_sensorsallowedforurls();

// optional .enterprise_management.StringListPolicyProto SensorsBlockedForUrls = 758;
bool has_sensorsblockedforurls() const;
private:
bool _internal_has_sensorsblockedforurls() const;
public:
void clear_sensorsblockedforurls();
const ::enterprise_management::StringListPolicyProto& sensorsblockedforurls() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_sensorsblockedforurls();
::enterprise_management::StringListPolicyProto* mutable_sensorsblockedforurls();
void set_allocated_sensorsblockedforurls(::enterprise_management::StringListPolicyProto* sensorsblockedforurls);
private:
const ::enterprise_management::StringListPolicyProto& _internal_sensorsblockedforurls() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_sensorsblockedforurls();
public:
void unsafe_arena_set_allocated_sensorsblockedforurls(
::enterprise_management::StringListPolicyProto* sensorsblockedforurls);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_sensorsblockedforurls();

// optional .enterprise_management.BooleanPolicyProto BackForwardCacheEnabled = 760;
bool has_backforwardcacheenabled() const;
private:
bool _internal_has_backforwardcacheenabled() const;
public:
void clear_backforwardcacheenabled();
const ::enterprise_management::BooleanPolicyProto& backforwardcacheenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_backforwardcacheenabled();
::enterprise_management::BooleanPolicyProto* mutable_backforwardcacheenabled();
void set_allocated_backforwardcacheenabled(::enterprise_management::BooleanPolicyProto* backforwardcacheenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_backforwardcacheenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_backforwardcacheenabled();
public:
void unsafe_arena_set_allocated_backforwardcacheenabled(
::enterprise_management::BooleanPolicyProto* backforwardcacheenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_backforwardcacheenabled();

// optional .enterprise_management.BooleanPolicyProto InsecurePrivateNetworkRequestsAllowed = 768;
bool has_insecureprivatenetworkrequestsallowed() const;
private:
bool _internal_has_insecureprivatenetworkrequestsallowed() const;
public:
void clear_insecureprivatenetworkrequestsallowed();
const ::enterprise_management::BooleanPolicyProto& insecureprivatenetworkrequestsallowed() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_insecureprivatenetworkrequestsallowed();
::enterprise_management::BooleanPolicyProto* mutable_insecureprivatenetworkrequestsallowed();
void set_allocated_insecureprivatenetworkrequestsallowed(::enterprise_management::BooleanPolicyProto* insecureprivatenetworkrequestsallowed);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_insecureprivatenetworkrequestsallowed() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_insecureprivatenetworkrequestsallowed();
public:
void unsafe_arena_set_allocated_insecureprivatenetworkrequestsallowed(
::enterprise_management::BooleanPolicyProto* insecureprivatenetworkrequestsallowed);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_insecureprivatenetworkrequestsallowed();

// optional .enterprise_management.StringListPolicyProto InsecurePrivateNetworkRequestsAllowedForUrls = 769;
bool has_insecureprivatenetworkrequestsallowedforurls() const;
private:
bool _internal_has_insecureprivatenetworkrequestsallowedforurls() const;
public:
void clear_insecureprivatenetworkrequestsallowedforurls();
const ::enterprise_management::StringListPolicyProto& insecureprivatenetworkrequestsallowedforurls() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_insecureprivatenetworkrequestsallowedforurls();
::enterprise_management::StringListPolicyProto* mutable_insecureprivatenetworkrequestsallowedforurls();
void set_allocated_insecureprivatenetworkrequestsallowedforurls(::enterprise_management::StringListPolicyProto* insecureprivatenetworkrequestsallowedforurls);
private:
const ::enterprise_management::StringListPolicyProto& _internal_insecureprivatenetworkrequestsallowedforurls() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_insecureprivatenetworkrequestsallowedforurls();
public:
void unsafe_arena_set_allocated_insecureprivatenetworkrequestsallowedforurls(
::enterprise_management::StringListPolicyProto* insecureprivatenetworkrequestsallowedforurls);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_insecureprivatenetworkrequestsallowedforurls();

// optional .enterprise_management.StringListPolicyProto LookalikeWarningAllowlistDomains = 784;
bool has_lookalikewarningallowlistdomains() const;
private:
bool _internal_has_lookalikewarningallowlistdomains() const;
public:
void clear_lookalikewarningallowlistdomains();
const ::enterprise_management::StringListPolicyProto& lookalikewarningallowlistdomains() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_lookalikewarningallowlistdomains();
::enterprise_management::StringListPolicyProto* mutable_lookalikewarningallowlistdomains();
void set_allocated_lookalikewarningallowlistdomains(::enterprise_management::StringListPolicyProto* lookalikewarningallowlistdomains);
private:
const ::enterprise_management::StringListPolicyProto& _internal_lookalikewarningallowlistdomains() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_lookalikewarningallowlistdomains();
public:
void unsafe_arena_set_allocated_lookalikewarningallowlistdomains(
::enterprise_management::StringListPolicyProto* lookalikewarningallowlistdomains);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_lookalikewarningallowlistdomains();

// optional .enterprise_management.StringPolicyProto BrowsingDataLifetime = 793;
bool has_browsingdatalifetime() const;
private:
bool _internal_has_browsingdatalifetime() const;
public:
void clear_browsingdatalifetime();
const ::enterprise_management::StringPolicyProto& browsingdatalifetime() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_browsingdatalifetime();
::enterprise_management::StringPolicyProto* mutable_browsingdatalifetime();
void set_allocated_browsingdatalifetime(::enterprise_management::StringPolicyProto* browsingdatalifetime);
private:
const ::enterprise_management::StringPolicyProto& _internal_browsingdatalifetime() const;
::enterprise_management::StringPolicyProto* _internal_mutable_browsingdatalifetime();
public:
void unsafe_arena_set_allocated_browsingdatalifetime(
::enterprise_management::StringPolicyProto* browsingdatalifetime);
::enterprise_management::StringPolicyProto* unsafe_arena_release_browsingdatalifetime();

// optional .enterprise_management.IntegerPolicyProto TosDialogBehavior = 803;
bool has_tosdialogbehavior() const;
private:
bool _internal_has_tosdialogbehavior() const;
public:
void clear_tosdialogbehavior();
const ::enterprise_management::IntegerPolicyProto& tosdialogbehavior() const;
PROTOBUF_NODISCARD ::enterprise_management::IntegerPolicyProto* release_tosdialogbehavior();
::enterprise_management::IntegerPolicyProto* mutable_tosdialogbehavior();
void set_allocated_tosdialogbehavior(::enterprise_management::IntegerPolicyProto* tosdialogbehavior);
private:
const ::enterprise_management::IntegerPolicyProto& _internal_tosdialogbehavior() const;
::enterprise_management::IntegerPolicyProto* _internal_mutable_tosdialogbehavior();
public:
void unsafe_arena_set_allocated_tosdialogbehavior(
::enterprise_management::IntegerPolicyProto* tosdialogbehavior);
::enterprise_management::IntegerPolicyProto* unsafe_arena_release_tosdialogbehavior();

// optional .enterprise_management.StringListPolicyProto SSLErrorOverrideAllowedForOrigins = 821;
bool has_sslerroroverrideallowedfororigins() const;
private:
bool _internal_has_sslerroroverrideallowedfororigins() const;
public:
void clear_sslerroroverrideallowedfororigins();
const ::enterprise_management::StringListPolicyProto& sslerroroverrideallowedfororigins() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_sslerroroverrideallowedfororigins();
::enterprise_management::StringListPolicyProto* mutable_sslerroroverrideallowedfororigins();
void set_allocated_sslerroroverrideallowedfororigins(::enterprise_management::StringListPolicyProto* sslerroroverrideallowedfororigins);
private:
const ::enterprise_management::StringListPolicyProto& _internal_sslerroroverrideallowedfororigins() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_sslerroroverrideallowedfororigins();
public:
void unsafe_arena_set_allocated_sslerroroverrideallowedfororigins(
::enterprise_management::StringListPolicyProto* sslerroroverrideallowedfororigins);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_sslerroroverrideallowedfororigins();

// optional .enterprise_management.BooleanPolicyProto WebXRImmersiveArEnabled = 822;
bool has_webxrimmersivearenabled() const;
private:
bool _internal_has_webxrimmersivearenabled() const;
public:
void clear_webxrimmersivearenabled();
const ::enterprise_management::BooleanPolicyProto& webxrimmersivearenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_webxrimmersivearenabled();
::enterprise_management::BooleanPolicyProto* mutable_webxrimmersivearenabled();
void set_allocated_webxrimmersivearenabled(::enterprise_management::BooleanPolicyProto* webxrimmersivearenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_webxrimmersivearenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_webxrimmersivearenabled();
public:
void unsafe_arena_set_allocated_webxrimmersivearenabled(
::enterprise_management::BooleanPolicyProto* webxrimmersivearenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_webxrimmersivearenabled();

// optional .enterprise_management.BooleanPolicyProto SuppressDifferentOriginSubframeDialogs = 831;
bool has_suppressdifferentoriginsubframedialogs() const;
private:
bool _internal_has_suppressdifferentoriginsubframedialogs() const;
public:
void clear_suppressdifferentoriginsubframedialogs();
const ::enterprise_management::BooleanPolicyProto& suppressdifferentoriginsubframedialogs() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_suppressdifferentoriginsubframedialogs();
::enterprise_management::BooleanPolicyProto* mutable_suppressdifferentoriginsubframedialogs();
void set_allocated_suppressdifferentoriginsubframedialogs(::enterprise_management::BooleanPolicyProto* suppressdifferentoriginsubframedialogs);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_suppressdifferentoriginsubframedialogs() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_suppressdifferentoriginsubframedialogs();
public:
void unsafe_arena_set_allocated_suppressdifferentoriginsubframedialogs(
::enterprise_management::BooleanPolicyProto* suppressdifferentoriginsubframedialogs);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_suppressdifferentoriginsubframedialogs();

// optional .enterprise_management.BooleanPolicyProto CECPQ2Enabled = 843;
bool has_cecpq2enabled() const;
private:
bool _internal_has_cecpq2enabled() const;
public:
void clear_cecpq2enabled();
const ::enterprise_management::BooleanPolicyProto& cecpq2enabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_cecpq2enabled();
::enterprise_management::BooleanPolicyProto* mutable_cecpq2enabled();
void set_allocated_cecpq2enabled(::enterprise_management::BooleanPolicyProto* cecpq2enabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_cecpq2enabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_cecpq2enabled();
public:
void unsafe_arena_set_allocated_cecpq2enabled(
::enterprise_management::BooleanPolicyProto* cecpq2enabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_cecpq2enabled();

// optional .enterprise_management.StringListPolicyProto ExplicitlyAllowedNetworkPorts = 851;
bool has_explicitlyallowednetworkports() const;
private:
bool _internal_has_explicitlyallowednetworkports() const;
public:
void clear_explicitlyallowednetworkports();
const ::enterprise_management::StringListPolicyProto& explicitlyallowednetworkports() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_explicitlyallowednetworkports();
::enterprise_management::StringListPolicyProto* mutable_explicitlyallowednetworkports();
void set_allocated_explicitlyallowednetworkports(::enterprise_management::StringListPolicyProto* explicitlyallowednetworkports);
private:
const ::enterprise_management::StringListPolicyProto& _internal_explicitlyallowednetworkports() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_explicitlyallowednetworkports();
public:
void unsafe_arena_set_allocated_explicitlyallowednetworkports(
::enterprise_management::StringListPolicyProto* explicitlyallowednetworkports);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_explicitlyallowednetworkports();

// optional .enterprise_management.BooleanPolicyProto LensCameraAssistedSearchEnabled = 855;
bool has_lenscameraassistedsearchenabled() const;
private:
bool _internal_has_lenscameraassistedsearchenabled() const;
public:
void clear_lenscameraassistedsearchenabled();
const ::enterprise_management::BooleanPolicyProto& lenscameraassistedsearchenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_lenscameraassistedsearchenabled();
::enterprise_management::BooleanPolicyProto* mutable_lenscameraassistedsearchenabled();
void set_allocated_lenscameraassistedsearchenabled(::enterprise_management::BooleanPolicyProto* lenscameraassistedsearchenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_lenscameraassistedsearchenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_lenscameraassistedsearchenabled();
public:
void unsafe_arena_set_allocated_lenscameraassistedsearchenabled(
::enterprise_management::BooleanPolicyProto* lenscameraassistedsearchenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_lenscameraassistedsearchenabled();

// optional .enterprise_management.BooleanPolicyProto AdditionalDnsQueryTypesEnabled = 859;
bool has_additionaldnsquerytypesenabled() const;
private:
bool _internal_has_additionaldnsquerytypesenabled() const;
public:
void clear_additionaldnsquerytypesenabled();
const ::enterprise_management::BooleanPolicyProto& additionaldnsquerytypesenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_additionaldnsquerytypesenabled();
::enterprise_management::BooleanPolicyProto* mutable_additionaldnsquerytypesenabled();
void set_allocated_additionaldnsquerytypesenabled(::enterprise_management::BooleanPolicyProto* additionaldnsquerytypesenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_additionaldnsquerytypesenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_additionaldnsquerytypesenabled();
public:
void unsafe_arena_set_allocated_additionaldnsquerytypesenabled(
::enterprise_management::BooleanPolicyProto* additionaldnsquerytypesenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_additionaldnsquerytypesenabled();

// optional .enterprise_management.BooleanPolicyProto CloudUserPolicyMerge = 861;
bool has_clouduserpolicymerge() const;
private:
bool _internal_has_clouduserpolicymerge() const;
public:
void clear_clouduserpolicymerge();
const ::enterprise_management::BooleanPolicyProto& clouduserpolicymerge() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_clouduserpolicymerge();
::enterprise_management::BooleanPolicyProto* mutable_clouduserpolicymerge();
void set_allocated_clouduserpolicymerge(::enterprise_management::BooleanPolicyProto* clouduserpolicymerge);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_clouduserpolicymerge() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_clouduserpolicymerge();
public:
void unsafe_arena_set_allocated_clouduserpolicymerge(
::enterprise_management::BooleanPolicyProto* clouduserpolicymerge);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_clouduserpolicymerge();

// optional .enterprise_management.IntegerPolicyProto DefaultJavaScriptJitSetting = 869;
bool has_defaultjavascriptjitsetting() const;
private:
bool _internal_has_defaultjavascriptjitsetting() const;
public:
void clear_defaultjavascriptjitsetting();
const ::enterprise_management::IntegerPolicyProto& defaultjavascriptjitsetting() const;
PROTOBUF_NODISCARD ::enterprise_management::IntegerPolicyProto* release_defaultjavascriptjitsetting();
::enterprise_management::IntegerPolicyProto* mutable_defaultjavascriptjitsetting();
void set_allocated_defaultjavascriptjitsetting(::enterprise_management::IntegerPolicyProto* defaultjavascriptjitsetting);
private:
const ::enterprise_management::IntegerPolicyProto& _internal_defaultjavascriptjitsetting() const;
::enterprise_management::IntegerPolicyProto* _internal_mutable_defaultjavascriptjitsetting();
public:
void unsafe_arena_set_allocated_defaultjavascriptjitsetting(
::enterprise_management::IntegerPolicyProto* defaultjavascriptjitsetting);
::enterprise_management::IntegerPolicyProto* unsafe_arena_release_defaultjavascriptjitsetting();

// optional .enterprise_management.StringListPolicyProto JavaScriptJitAllowedForSites = 870;
bool has_javascriptjitallowedforsites() const;
private:
bool _internal_has_javascriptjitallowedforsites() const;
public:
void clear_javascriptjitallowedforsites();
const ::enterprise_management::StringListPolicyProto& javascriptjitallowedforsites() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_javascriptjitallowedforsites();
::enterprise_management::StringListPolicyProto* mutable_javascriptjitallowedforsites();
void set_allocated_javascriptjitallowedforsites(::enterprise_management::StringListPolicyProto* javascriptjitallowedforsites);
private:
const ::enterprise_management::StringListPolicyProto& _internal_javascriptjitallowedforsites() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_javascriptjitallowedforsites();
public:
void unsafe_arena_set_allocated_javascriptjitallowedforsites(
::enterprise_management::StringListPolicyProto* javascriptjitallowedforsites);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_javascriptjitallowedforsites();

// optional .enterprise_management.StringListPolicyProto JavaScriptJitBlockedForSites = 871;
bool has_javascriptjitblockedforsites() const;
private:
bool _internal_has_javascriptjitblockedforsites() const;
public:
void clear_javascriptjitblockedforsites();
const ::enterprise_management::StringListPolicyProto& javascriptjitblockedforsites() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_javascriptjitblockedforsites();
::enterprise_management::StringListPolicyProto* mutable_javascriptjitblockedforsites();
void set_allocated_javascriptjitblockedforsites(::enterprise_management::StringListPolicyProto* javascriptjitblockedforsites);
private:
const ::enterprise_management::StringListPolicyProto& _internal_javascriptjitblockedforsites() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_javascriptjitblockedforsites();
public:
void unsafe_arena_set_allocated_javascriptjitblockedforsites(
::enterprise_management::StringListPolicyProto* javascriptjitblockedforsites);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_javascriptjitblockedforsites();

// optional .enterprise_management.StringPolicyProto HttpsOnlyMode = 872;
bool has_httpsonlymode() const;
private:
bool _internal_has_httpsonlymode() const;
public:
void clear_httpsonlymode();
const ::enterprise_management::StringPolicyProto& httpsonlymode() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_httpsonlymode();
::enterprise_management::StringPolicyProto* mutable_httpsonlymode();
void set_allocated_httpsonlymode(::enterprise_management::StringPolicyProto* httpsonlymode);
private:
const ::enterprise_management::StringPolicyProto& _internal_httpsonlymode() const;
::enterprise_management::StringPolicyProto* _internal_mutable_httpsonlymode();
public:
void unsafe_arena_set_allocated_httpsonlymode(
::enterprise_management::StringPolicyProto* httpsonlymode);
::enterprise_management::StringPolicyProto* unsafe_arena_release_httpsonlymode();

// optional .enterprise_management.BooleanPolicyProto CloudUserPolicyOverridesCloudMachinePolicy = 901;
bool has_clouduserpolicyoverridescloudmachinepolicy() const;
private:
bool _internal_has_clouduserpolicyoverridescloudmachinepolicy() const;
public:
void clear_clouduserpolicyoverridescloudmachinepolicy();
const ::enterprise_management::BooleanPolicyProto& clouduserpolicyoverridescloudmachinepolicy() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_clouduserpolicyoverridescloudmachinepolicy();
::enterprise_management::BooleanPolicyProto* mutable_clouduserpolicyoverridescloudmachinepolicy();
void set_allocated_clouduserpolicyoverridescloudmachinepolicy(::enterprise_management::BooleanPolicyProto* clouduserpolicyoverridescloudmachinepolicy);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_clouduserpolicyoverridescloudmachinepolicy() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_clouduserpolicyoverridescloudmachinepolicy();
public:
void unsafe_arena_set_allocated_clouduserpolicyoverridescloudmachinepolicy(
::enterprise_management::BooleanPolicyProto* clouduserpolicyoverridescloudmachinepolicy);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_clouduserpolicyoverridescloudmachinepolicy();

// optional .enterprise_management.BooleanPolicyProto CORSNonWildcardRequestHeadersSupport = 923;
bool has_corsnonwildcardrequestheaderssupport() const;
private:
bool _internal_has_corsnonwildcardrequestheaderssupport() const;
public:
void clear_corsnonwildcardrequestheaderssupport();
const ::enterprise_management::BooleanPolicyProto& corsnonwildcardrequestheaderssupport() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_corsnonwildcardrequestheaderssupport();
::enterprise_management::BooleanPolicyProto* mutable_corsnonwildcardrequestheaderssupport();
void set_allocated_corsnonwildcardrequestheaderssupport(::enterprise_management::BooleanPolicyProto* corsnonwildcardrequestheaderssupport);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_corsnonwildcardrequestheaderssupport() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_corsnonwildcardrequestheaderssupport();
public:
void unsafe_arena_set_allocated_corsnonwildcardrequestheaderssupport(
::enterprise_management::BooleanPolicyProto* corsnonwildcardrequestheaderssupport);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_corsnonwildcardrequestheaderssupport();

// optional .enterprise_management.BooleanPolicyProto UserAgentClientHintsGREASEUpdateEnabled = 926;
bool has_useragentclienthintsgreaseupdateenabled() const;
private:
bool _internal_has_useragentclienthintsgreaseupdateenabled() const;
public:
void clear_useragentclienthintsgreaseupdateenabled();
const ::enterprise_management::BooleanPolicyProto& useragentclienthintsgreaseupdateenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_useragentclienthintsgreaseupdateenabled();
::enterprise_management::BooleanPolicyProto* mutable_useragentclienthintsgreaseupdateenabled();
void set_allocated_useragentclienthintsgreaseupdateenabled(::enterprise_management::BooleanPolicyProto* useragentclienthintsgreaseupdateenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_useragentclienthintsgreaseupdateenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_useragentclienthintsgreaseupdateenabled();
public:
void unsafe_arena_set_allocated_useragentclienthintsgreaseupdateenabled(
::enterprise_management::BooleanPolicyProto* useragentclienthintsgreaseupdateenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_useragentclienthintsgreaseupdateenabled();

// optional .enterprise_management.IntegerPolicyProto UserAgentReduction = 934;
bool has_useragentreduction() const;
private:
bool _internal_has_useragentreduction() const;
public:
void clear_useragentreduction();
const ::enterprise_management::IntegerPolicyProto& useragentreduction() const;
PROTOBUF_NODISCARD ::enterprise_management::IntegerPolicyProto* release_useragentreduction();
::enterprise_management::IntegerPolicyProto* mutable_useragentreduction();
void set_allocated_useragentreduction(::enterprise_management::IntegerPolicyProto* useragentreduction);
private:
const ::enterprise_management::IntegerPolicyProto& _internal_useragentreduction() const;
::enterprise_management::IntegerPolicyProto* _internal_mutable_useragentreduction();
public:
void unsafe_arena_set_allocated_useragentreduction(
::enterprise_management::IntegerPolicyProto* useragentreduction);
::enterprise_management::IntegerPolicyProto* unsafe_arena_release_useragentreduction();

// optional .enterprise_management.BooleanPolicyProto CloudProfileReportingEnabled = 944;
bool has_cloudprofilereportingenabled() const;
private:
bool _internal_has_cloudprofilereportingenabled() const;
public:
void clear_cloudprofilereportingenabled();
const ::enterprise_management::BooleanPolicyProto& cloudprofilereportingenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_cloudprofilereportingenabled();
::enterprise_management::BooleanPolicyProto* mutable_cloudprofilereportingenabled();
void set_allocated_cloudprofilereportingenabled(::enterprise_management::BooleanPolicyProto* cloudprofilereportingenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_cloudprofilereportingenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_cloudprofilereportingenabled();
public:
void unsafe_arena_set_allocated_cloudprofilereportingenabled(
::enterprise_management::BooleanPolicyProto* cloudprofilereportingenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_cloudprofilereportingenabled();

// optional .enterprise_management.BooleanPolicyProto FirstPartySetsEnabled = 950;
bool has_firstpartysetsenabled() const;
private:
bool _internal_has_firstpartysetsenabled() const;
public:
void clear_firstpartysetsenabled();
const ::enterprise_management::BooleanPolicyProto& firstpartysetsenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_firstpartysetsenabled();
::enterprise_management::BooleanPolicyProto* mutable_firstpartysetsenabled();
void set_allocated_firstpartysetsenabled(::enterprise_management::BooleanPolicyProto* firstpartysetsenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_firstpartysetsenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_firstpartysetsenabled();
public:
void unsafe_arena_set_allocated_firstpartysetsenabled(
::enterprise_management::BooleanPolicyProto* firstpartysetsenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_firstpartysetsenabled();

// optional .enterprise_management.IntegerPolicyProto ForceMajorVersionToMinorPositionInUserAgent = 951;
bool has_forcemajorversiontominorpositioninuseragent() const;
private:
bool _internal_has_forcemajorversiontominorpositioninuseragent() const;
public:
void clear_forcemajorversiontominorpositioninuseragent();
const ::enterprise_management::IntegerPolicyProto& forcemajorversiontominorpositioninuseragent() const;
PROTOBUF_NODISCARD ::enterprise_management::IntegerPolicyProto* release_forcemajorversiontominorpositioninuseragent();
::enterprise_management::IntegerPolicyProto* mutable_forcemajorversiontominorpositioninuseragent();
void set_allocated_forcemajorversiontominorpositioninuseragent(::enterprise_management::IntegerPolicyProto* forcemajorversiontominorpositioninuseragent);
private:
const ::enterprise_management::IntegerPolicyProto& _internal_forcemajorversiontominorpositioninuseragent() const;
::enterprise_management::IntegerPolicyProto* _internal_mutable_forcemajorversiontominorpositioninuseragent();
public:
void unsafe_arena_set_allocated_forcemajorversiontominorpositioninuseragent(
::enterprise_management::IntegerPolicyProto* forcemajorversiontominorpositioninuseragent);
::enterprise_management::IntegerPolicyProto* unsafe_arena_release_forcemajorversiontominorpositioninuseragent();

// optional .enterprise_management.StringListPolicyProto AllHttpAuthSchemesAllowedForOrigins = 952;
bool has_allhttpauthschemesallowedfororigins() const;
private:
bool _internal_has_allhttpauthschemesallowedfororigins() const;
public:
void clear_allhttpauthschemesallowedfororigins();
const ::enterprise_management::StringListPolicyProto& allhttpauthschemesallowedfororigins() const;
PROTOBUF_NODISCARD ::enterprise_management::StringListPolicyProto* release_allhttpauthschemesallowedfororigins();
::enterprise_management::StringListPolicyProto* mutable_allhttpauthschemesallowedfororigins();
void set_allocated_allhttpauthschemesallowedfororigins(::enterprise_management::StringListPolicyProto* allhttpauthschemesallowedfororigins);
private:
const ::enterprise_management::StringListPolicyProto& _internal_allhttpauthschemesallowedfororigins() const;
::enterprise_management::StringListPolicyProto* _internal_mutable_allhttpauthschemesallowedfororigins();
public:
void unsafe_arena_set_allocated_allhttpauthschemesallowedfororigins(
::enterprise_management::StringListPolicyProto* allhttpauthschemesallowedfororigins);
::enterprise_management::StringListPolicyProto* unsafe_arena_release_allhttpauthschemesallowedfororigins();

// optional .enterprise_management.IntegerPolicyProto CloudReportingUploadFrequency = 964;
bool has_cloudreportinguploadfrequency() const;
private:
bool _internal_has_cloudreportinguploadfrequency() const;
public:
void clear_cloudreportinguploadfrequency();
const ::enterprise_management::IntegerPolicyProto& cloudreportinguploadfrequency() const;
PROTOBUF_NODISCARD ::enterprise_management::IntegerPolicyProto* release_cloudreportinguploadfrequency();
::enterprise_management::IntegerPolicyProto* mutable_cloudreportinguploadfrequency();
void set_allocated_cloudreportinguploadfrequency(::enterprise_management::IntegerPolicyProto* cloudreportinguploadfrequency);
private:
const ::enterprise_management::IntegerPolicyProto& _internal_cloudreportinguploadfrequency() const;
::enterprise_management::IntegerPolicyProto* _internal_mutable_cloudreportinguploadfrequency();
public:
void unsafe_arena_set_allocated_cloudreportinguploadfrequency(
::enterprise_management::IntegerPolicyProto* cloudreportinguploadfrequency);
::enterprise_management::IntegerPolicyProto* unsafe_arena_release_cloudreportinguploadfrequency();

// optional .enterprise_management.BooleanPolicyProto WebSQLAccess = 968;
bool has_websqlaccess() const;
private:
bool _internal_has_websqlaccess() const;
public:
void clear_websqlaccess();
const ::enterprise_management::BooleanPolicyProto& websqlaccess() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_websqlaccess();
::enterprise_management::BooleanPolicyProto* mutable_websqlaccess();
void set_allocated_websqlaccess(::enterprise_management::BooleanPolicyProto* websqlaccess);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_websqlaccess() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_websqlaccess();
public:
void unsafe_arena_set_allocated_websqlaccess(
::enterprise_management::BooleanPolicyProto* websqlaccess);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_websqlaccess();

// optional .enterprise_management.BooleanPolicyProto SetTimeoutWithout1MsClampEnabled = 969;
bool has_settimeoutwithout1msclampenabled() const;
private:
bool _internal_has_settimeoutwithout1msclampenabled() const;
public:
void clear_settimeoutwithout1msclampenabled();
const ::enterprise_management::BooleanPolicyProto& settimeoutwithout1msclampenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_settimeoutwithout1msclampenabled();
::enterprise_management::BooleanPolicyProto* mutable_settimeoutwithout1msclampenabled();
void set_allocated_settimeoutwithout1msclampenabled(::enterprise_management::BooleanPolicyProto* settimeoutwithout1msclampenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_settimeoutwithout1msclampenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_settimeoutwithout1msclampenabled();
public:
void unsafe_arena_set_allocated_settimeoutwithout1msclampenabled(
::enterprise_management::BooleanPolicyProto* settimeoutwithout1msclampenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_settimeoutwithout1msclampenabled();

// optional .enterprise_management.StringPolicyProto FirstPartySetsOverrides = 971;
bool has_firstpartysetsoverrides() const;
private:
bool _internal_has_firstpartysetsoverrides() const;
public:
void clear_firstpartysetsoverrides();
const ::enterprise_management::StringPolicyProto& firstpartysetsoverrides() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_firstpartysetsoverrides();
::enterprise_management::StringPolicyProto* mutable_firstpartysetsoverrides();
void set_allocated_firstpartysetsoverrides(::enterprise_management::StringPolicyProto* firstpartysetsoverrides);
private:
const ::enterprise_management::StringPolicyProto& _internal_firstpartysetsoverrides() const;
::enterprise_management::StringPolicyProto* _internal_mutable_firstpartysetsoverrides();
public:
void unsafe_arena_set_allocated_firstpartysetsoverrides(
::enterprise_management::StringPolicyProto* firstpartysetsoverrides);
::enterprise_management::StringPolicyProto* unsafe_arena_release_firstpartysetsoverrides();

// optional .enterprise_management.StringPolicyProto EnterpriseAuthenticationAppLinkPolicy = 978;
bool has_enterpriseauthenticationapplinkpolicy() const;
private:
bool _internal_has_enterpriseauthenticationapplinkpolicy() const;
public:
void clear_enterpriseauthenticationapplinkpolicy();
const ::enterprise_management::StringPolicyProto& enterpriseauthenticationapplinkpolicy() const;
PROTOBUF_NODISCARD ::enterprise_management::StringPolicyProto* release_enterpriseauthenticationapplinkpolicy();
::enterprise_management::StringPolicyProto* mutable_enterpriseauthenticationapplinkpolicy();
void set_allocated_enterpriseauthenticationapplinkpolicy(::enterprise_management::StringPolicyProto* enterpriseauthenticationapplinkpolicy);
private:
const ::enterprise_management::StringPolicyProto& _internal_enterpriseauthenticationapplinkpolicy() const;
::enterprise_management::StringPolicyProto* _internal_mutable_enterpriseauthenticationapplinkpolicy();
public:
void unsafe_arena_set_allocated_enterpriseauthenticationapplinkpolicy(
::enterprise_management::StringPolicyProto* enterpriseauthenticationapplinkpolicy);
::enterprise_management::StringPolicyProto* unsafe_arena_release_enterpriseauthenticationapplinkpolicy();

// optional .enterprise_management.BooleanPolicyProto UrlParamFilterEnabled = 983;
bool has_urlparamfilterenabled() const;
private:
bool _internal_has_urlparamfilterenabled() const;
public:
void clear_urlparamfilterenabled();
const ::enterprise_management::BooleanPolicyProto& urlparamfilterenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_urlparamfilterenabled();
::enterprise_management::BooleanPolicyProto* mutable_urlparamfilterenabled();
void set_allocated_urlparamfilterenabled(::enterprise_management::BooleanPolicyProto* urlparamfilterenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_urlparamfilterenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_urlparamfilterenabled();
public:
void unsafe_arena_set_allocated_urlparamfilterenabled(
::enterprise_management::BooleanPolicyProto* urlparamfilterenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_urlparamfilterenabled();

// optional .enterprise_management.BooleanPolicyProto UnthrottledNestedTimeoutEnabled = 990;
bool has_unthrottlednestedtimeoutenabled() const;
private:
bool _internal_has_unthrottlednestedtimeoutenabled() const;
public:
void clear_unthrottlednestedtimeoutenabled();
const ::enterprise_management::BooleanPolicyProto& unthrottlednestedtimeoutenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_unthrottlednestedtimeoutenabled();
::enterprise_management::BooleanPolicyProto* mutable_unthrottlednestedtimeoutenabled();
void set_allocated_unthrottlednestedtimeoutenabled(::enterprise_management::BooleanPolicyProto* unthrottlednestedtimeoutenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_unthrottlednestedtimeoutenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_unthrottlednestedtimeoutenabled();
public:
void unsafe_arena_set_allocated_unthrottlednestedtimeoutenabled(
::enterprise_management::BooleanPolicyProto* unthrottlednestedtimeoutenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_unthrottlednestedtimeoutenabled();

// optional .enterprise_management.BooleanPolicyProto EventPathEnabled = 992;
bool has_eventpathenabled() const;
private:
bool _internal_has_eventpathenabled() const;
public:
void clear_eventpathenabled();
const ::enterprise_management::BooleanPolicyProto& eventpathenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_eventpathenabled();
::enterprise_management::BooleanPolicyProto* mutable_eventpathenabled();
void set_allocated_eventpathenabled(::enterprise_management::BooleanPolicyProto* eventpathenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_eventpathenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_eventpathenabled();
public:
void unsafe_arena_set_allocated_eventpathenabled(
::enterprise_management::BooleanPolicyProto* eventpathenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_eventpathenabled();

// optional .enterprise_management.BooleanPolicyProto WebSQLNonSecureContextEnabled = 995;
bool has_websqlnonsecurecontextenabled() const;
private:
bool _internal_has_websqlnonsecurecontextenabled() const;
public:
void clear_websqlnonsecurecontextenabled();
const ::enterprise_management::BooleanPolicyProto& websqlnonsecurecontextenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_websqlnonsecurecontextenabled();
::enterprise_management::BooleanPolicyProto* mutable_websqlnonsecurecontextenabled();
void set_allocated_websqlnonsecurecontextenabled(::enterprise_management::BooleanPolicyProto* websqlnonsecurecontextenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_websqlnonsecurecontextenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_websqlnonsecurecontextenabled();
public:
void unsafe_arena_set_allocated_websqlnonsecurecontextenabled(
::enterprise_management::BooleanPolicyProto* websqlnonsecurecontextenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_websqlnonsecurecontextenabled();

// optional .enterprise_management.BooleanPolicyProto EncryptedClientHelloEnabled = 998;
bool has_encryptedclienthelloenabled() const;
private:
bool _internal_has_encryptedclienthelloenabled() const;
public:
void clear_encryptedclienthelloenabled();
const ::enterprise_management::BooleanPolicyProto& encryptedclienthelloenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_encryptedclienthelloenabled();
::enterprise_management::BooleanPolicyProto* mutable_encryptedclienthelloenabled();
void set_allocated_encryptedclienthelloenabled(::enterprise_management::BooleanPolicyProto* encryptedclienthelloenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_encryptedclienthelloenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_encryptedclienthelloenabled();
public:
void unsafe_arena_set_allocated_encryptedclienthelloenabled(
::enterprise_management::BooleanPolicyProto* encryptedclienthelloenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_encryptedclienthelloenabled();

// optional .enterprise_management.BooleanPolicyProto PersistentQuotaEnabled = 1004;
bool has_persistentquotaenabled() const;
private:
bool _internal_has_persistentquotaenabled() const;
public:
void clear_persistentquotaenabled();
const ::enterprise_management::BooleanPolicyProto& persistentquotaenabled() const;
PROTOBUF_NODISCARD ::enterprise_management::BooleanPolicyProto* release_persistentquotaenabled();
::enterprise_management::BooleanPolicyProto* mutable_persistentquotaenabled();
void set_allocated_persistentquotaenabled(::enterprise_management::BooleanPolicyProto* persistentquotaenabled);
private:
const ::enterprise_management::BooleanPolicyProto& _internal_persistentquotaenabled() const;
::enterprise_management::BooleanPolicyProto* _internal_mutable_persistentquotaenabled();
public:
void unsafe_arena_set_allocated_persistentquotaenabled(
::enterprise_management::BooleanPolicyProto* persistentquotaenabled);
::enterprise_management::BooleanPolicyProto* unsafe_arena_release_persistentquotaenabled();

// @@protoc_insertion_point(class_scope:enterprise_management.CloudPolicySettings)
private:
class _Internal;

template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
typedef void InternalArenaConstructable_;
typedef void DestructorSkippable_;
::PROTOBUF_NAMESPACE_ID::internal::HasBits<5> _has_bits_;
mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
::enterprise_management::StringPolicyProto* homepagelocation_;
::enterprise_management::BooleanPolicyProto* alternateerrorpagesenabled_;
::enterprise_management::BooleanPolicyProto* searchsuggestenabled_;
::enterprise_management::BooleanPolicyProto* javascriptenabled_;
::enterprise_management::BooleanPolicyProto* incognitoenabled_;
::enterprise_management::BooleanPolicyProto* savingbrowserhistorydisabled_;
::enterprise_management::BooleanPolicyProto* printingenabled_;
::enterprise_management::BooleanPolicyProto* safebrowsingenabled_;
::enterprise_management::BooleanPolicyProto* metricsreportingenabled_;
::enterprise_management::BooleanPolicyProto* passwordmanagerenabled_;
::enterprise_management::BooleanPolicyProto* autofillenabled_;
::enterprise_management::BooleanPolicyProto* syncdisabled_;
::enterprise_management::StringPolicyProto* proxymode_;
::enterprise_management::IntegerPolicyProto* proxyservermode_;
::enterprise_management::StringPolicyProto* proxyserver_;
::enterprise_management::StringPolicyProto* proxypacurl_;
::enterprise_management::StringPolicyProto* proxybypasslist_;
::enterprise_management::StringPolicyProto* authschemes_;
::enterprise_management::BooleanPolicyProto* disableauthnegotiatecnamelookup_;
::enterprise_management::BooleanPolicyProto* blockthirdpartycookies_;
::enterprise_management::BooleanPolicyProto* defaultsearchproviderenabled_;
::enterprise_management::StringPolicyProto* defaultsearchprovidername_;
::enterprise_management::StringPolicyProto* defaultsearchproviderkeyword_;
::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurl_;
::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturl_;
::enterprise_management::StringPolicyProto* defaultsearchprovidericonurl_;
::enterprise_management::StringListPolicyProto* defaultsearchproviderencodings_;
::enterprise_management::IntegerPolicyProto* defaultcookiessetting_;
::enterprise_management::IntegerPolicyProto* defaultjavascriptsetting_;
::enterprise_management::IntegerPolicyProto* defaultpopupssetting_;
::enterprise_management::IntegerPolicyProto* defaultgeolocationsetting_;
::enterprise_management::StringListPolicyProto* cookiesblockedforurls_;
::enterprise_management::StringListPolicyProto* cookiessessiononlyforurls_;
::enterprise_management::StringListPolicyProto* javascriptallowedforurls_;
::enterprise_management::StringListPolicyProto* javascriptblockedforurls_;
::enterprise_management::StringListPolicyProto* popupsallowedforurls_;
::enterprise_management::StringListPolicyProto* popupsblockedforurls_;
::enterprise_management::StringListPolicyProto* cookiesallowedforurls_;
::enterprise_management::BooleanPolicyProto* translateenabled_;
::enterprise_management::BooleanPolicyProto* editbookmarksenabled_;
::enterprise_management::IntegerPolicyProto* incognitomodeavailability_;
::enterprise_management::StringPolicyProto* proxysettings_;
::enterprise_management::BooleanPolicyProto* disablesafebrowsingproceedanyway_;
::enterprise_management::StringListPolicyProto* defaultsearchprovideralternateurls_;
::enterprise_management::BooleanPolicyProto* forcesafesearch_;
::enterprise_management::BooleanPolicyProto* builtindnsclientenabled_;
::enterprise_management::BooleanPolicyProto* signinallowed_;
::enterprise_management::StringPolicyProto* variationsrestrictparameter_;
::enterprise_management::StringPolicyProto* managedbookmarks_;
::enterprise_management::StringPolicyProto* defaultsearchproviderimageurl_;
::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurlpostparams_;
::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturlpostparams_;
::enterprise_management::StringPolicyProto* defaultsearchproviderimageurlpostparams_;
::enterprise_management::StringPolicyProto* defaultsearchprovidernewtaburl_;
::enterprise_management::IntegerPolicyProto* networkpredictionoptions_;
::enterprise_management::StringPolicyProto* sslversionmin_;
::enterprise_management::BooleanPolicyProto* contextualsearchenabled_;
::enterprise_management::BooleanPolicyProto* forcegooglesafesearch_;
::enterprise_management::BooleanPolicyProto* forceyoutubesafetymode_;
::enterprise_management::BooleanPolicyProto* sslerroroverrideallowed_;
::enterprise_management::StringPolicyProto* authandroidnegotiateaccounttype_;
::enterprise_management::IntegerPolicyProto* defaultwebbluetoothguardsetting_;
::enterprise_management::StringPolicyProto* alloweddomainsforapps_;
::enterprise_management::BooleanPolicyProto* enablemediarouter_;
::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforurls_;
::enterprise_management::BooleanPolicyProto* ntpcontentsuggestionsenabled_;
::enterprise_management::StringPolicyProto* webrtcudpportrange_;
::enterprise_management::BooleanPolicyProto* componentupdatesenabled_;
::enterprise_management::BooleanPolicyProto* forcebrowsersignin_;
::enterprise_management::IntegerPolicyProto* forceyoutuberestrict_;
::enterprise_management::BooleanPolicyProto* cloudpolicyoverridesplatformpolicy_;
::enterprise_management::BooleanPolicyProto* autofillcreditcardenabled_;
::enterprise_management::BooleanPolicyProto* ntlmv2enabled_;
::enterprise_management::BooleanPolicyProto* promptfordownloadlocation_;
::enterprise_management::StringListPolicyProto* restrictaccountstopatterns_;
::enterprise_management::BooleanPolicyProto* safebrowsingextendedreportingenabled_;
::enterprise_management::IntegerPolicyProto* defaultwebusbguardsetting_;
::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforcas_;
::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforlegacycas_;
::enterprise_management::StringListPolicyProto* webusbaskforurls_;
::enterprise_management::StringListPolicyProto* webusbblockedforurls_;
::enterprise_management::StringPolicyProto* isolateoriginsandroid_;
::enterprise_management::BooleanPolicyProto* siteperprocessandroid_;
::enterprise_management::StringListPolicyProto* overridesecurityrestrictionsoninsecureorigin_;
::enterprise_management::BooleanPolicyProto* autofilladdressenabled_;
::enterprise_management::BooleanPolicyProto* urlkeyedanonymizeddatacollectionenabled_;
::enterprise_management::StringListPolicyProto* coalesceh2connectionswithclientcertificatesforhosts_;
::enterprise_management::BooleanPolicyProto* enterprisehardwareplatformapienabled_;
::enterprise_management::StringPolicyProto* webusballowdevicesforurls_;
::enterprise_management::IntegerPolicyProto* browsersignin_;
::enterprise_management::BooleanPolicyProto* cloudreportingenabled_;
::enterprise_management::StringPolicyProto* cloudmanagementenrollmenttoken_;
::enterprise_management::StringListPolicyProto* policylistmultiplesourcemergelist_;
::enterprise_management::StringListPolicyProto* policydictionarymultiplesourcemergelist_;
::enterprise_management::BooleanPolicyProto* passwordleakdetectionenabled_;
::enterprise_management::StringPolicyProto* dnsoverhttpsmode_;
::enterprise_management::BooleanPolicyProto* policyatomicgroupsenabled_;
::enterprise_management::StringListPolicyProto* hstspolicybypasslist_;
::enterprise_management::BooleanPolicyProto* sharedclipboardenabled_;
::enterprise_management::StringListPolicyProto* legacysamesitecookiebehaviorenabledfordomainlist_;
::enterprise_management::StringPolicyProto* dnsoverhttpstemplates_;
::enterprise_management::StringListPolicyProto* synctypeslistdisabled_;
::enterprise_management::BooleanPolicyProto* paymentmethodqueryenabled_;
::enterprise_management::IntegerPolicyProto* safebrowsingprotectionlevel_;
::enterprise_management::BooleanPolicyProto* scrolltotextfragmentenabled_;
::enterprise_management::StringListPolicyProto* enableexperimentalpolicies_;
::enterprise_management::BooleanPolicyProto* intensivewakeupthrottlingenabled_;
::enterprise_management::StringListPolicyProto* urlblocklist_;
::enterprise_management::StringListPolicyProto* urlallowlist_;
::enterprise_management::StringPolicyProto* authnegotiatedelegateallowlist_;
::enterprise_management::StringPolicyProto* authserverallowlist_;
::enterprise_management::BooleanPolicyProto* insecureformswarningsenabled_;
::enterprise_management::IntegerPolicyProto* defaultsensorssetting_;
::enterprise_management::StringListPolicyProto* sensorsallowedforurls_;
::enterprise_management::StringListPolicyProto* sensorsblockedforurls_;
::enterprise_management::BooleanPolicyProto* backforwardcacheenabled_;
::enterprise_management::BooleanPolicyProto* insecureprivatenetworkrequestsallowed_;
::enterprise_management::StringListPolicyProto* insecureprivatenetworkrequestsallowedforurls_;
::enterprise_management::StringListPolicyProto* lookalikewarningallowlistdomains_;
::enterprise_management::StringPolicyProto* browsingdatalifetime_;
::enterprise_management::IntegerPolicyProto* tosdialogbehavior_;
::enterprise_management::StringListPolicyProto* sslerroroverrideallowedfororigins_;
::enterprise_management::BooleanPolicyProto* webxrimmersivearenabled_;
::enterprise_management::BooleanPolicyProto* suppressdifferentoriginsubframedialogs_;
::enterprise_management::BooleanPolicyProto* cecpq2enabled_;
::enterprise_management::StringListPolicyProto* explicitlyallowednetworkports_;
::enterprise_management::BooleanPolicyProto* lenscameraassistedsearchenabled_;
::enterprise_management::BooleanPolicyProto* additionaldnsquerytypesenabled_;
::enterprise_management::BooleanPolicyProto* clouduserpolicymerge_;
::enterprise_management::IntegerPolicyProto* defaultjavascriptjitsetting_;
::enterprise_management::StringListPolicyProto* javascriptjitallowedforsites_;
::enterprise_management::StringListPolicyProto* javascriptjitblockedforsites_;
::enterprise_management::StringPolicyProto* httpsonlymode_;
::enterprise_management::BooleanPolicyProto* clouduserpolicyoverridescloudmachinepolicy_;
::enterprise_management::BooleanPolicyProto* corsnonwildcardrequestheaderssupport_;
::enterprise_management::BooleanPolicyProto* useragentclienthintsgreaseupdateenabled_;
::enterprise_management::IntegerPolicyProto* useragentreduction_;
::enterprise_management::BooleanPolicyProto* cloudprofilereportingenabled_;
::enterprise_management::BooleanPolicyProto* firstpartysetsenabled_;
::enterprise_management::IntegerPolicyProto* forcemajorversiontominorpositioninuseragent_;
::enterprise_management::StringListPolicyProto* allhttpauthschemesallowedfororigins_;
::enterprise_management::IntegerPolicyProto* cloudreportinguploadfrequency_;
::enterprise_management::BooleanPolicyProto* websqlaccess_;
::enterprise_management::BooleanPolicyProto* settimeoutwithout1msclampenabled_;
::enterprise_management::StringPolicyProto* firstpartysetsoverrides_;
::enterprise_management::StringPolicyProto* enterpriseauthenticationapplinkpolicy_;
::enterprise_management::BooleanPolicyProto* urlparamfilterenabled_;
::enterprise_management::BooleanPolicyProto* unthrottlednestedtimeoutenabled_;
::enterprise_management::BooleanPolicyProto* eventpathenabled_;
::enterprise_management::BooleanPolicyProto* websqlnonsecurecontextenabled_;
::enterprise_management::BooleanPolicyProto* encryptedclienthelloenabled_;
::enterprise_management::BooleanPolicyProto* persistentquotaenabled_;
friend struct ::TableStruct_cloud_5fpolicy_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CloudPolicySettings

// optional .enterprise_management.StringPolicyProto HomepageLocation = 3;
inline bool CloudPolicySettings::_internal_has_homepagelocation() const {
bool value = (_has_bits_[0] & 0x00000001u) != 0;
PROTOBUF_ASSUME(!value || homepagelocation_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_homepagelocation() const {
return _internal_has_homepagelocation();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_homepagelocation() const {
const ::enterprise_management::StringPolicyProto* p = homepagelocation_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::homepagelocation() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.HomepageLocation)
return _internal_homepagelocation();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_homepagelocation(
::enterprise_management::StringPolicyProto* homepagelocation) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(homepagelocation_);
}
homepagelocation_ = homepagelocation;
if (homepagelocation) {
_has_bits_[0] |= 0x00000001u;
} else {
_has_bits_[0] &= ~0x00000001u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.HomepageLocation)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_homepagelocation() {
_has_bits_[0] &= ~0x00000001u;
::enterprise_management::StringPolicyProto* temp = homepagelocation_;
homepagelocation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_homepagelocation() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.HomepageLocation)
_has_bits_[0] &= ~0x00000001u;
::enterprise_management::StringPolicyProto* temp = homepagelocation_;
homepagelocation_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_homepagelocation() {
_has_bits_[0] |= 0x00000001u;
if (homepagelocation_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
homepagelocation_ = p;
}
return homepagelocation_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_homepagelocation() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_homepagelocation();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.HomepageLocation)
return _msg;
}
inline void CloudPolicySettings::set_allocated_homepagelocation(::enterprise_management::StringPolicyProto* homepagelocation) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(homepagelocation_);
}
if (homepagelocation) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(homepagelocation));
if (message_arena != submessage_arena) {
homepagelocation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, homepagelocation, submessage_arena);
}
_has_bits_[0] |= 0x00000001u;
} else {
_has_bits_[0] &= ~0x00000001u;
}
homepagelocation_ = homepagelocation;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.HomepageLocation)
}

// optional .enterprise_management.BooleanPolicyProto AlternateErrorPagesEnabled = 7;
inline bool CloudPolicySettings::_internal_has_alternateerrorpagesenabled() const {
bool value = (_has_bits_[0] & 0x00000002u) != 0;
PROTOBUF_ASSUME(!value || alternateerrorpagesenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_alternateerrorpagesenabled() const {
return _internal_has_alternateerrorpagesenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_alternateerrorpagesenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = alternateerrorpagesenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::alternateerrorpagesenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AlternateErrorPagesEnabled)
return _internal_alternateerrorpagesenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_alternateerrorpagesenabled(
::enterprise_management::BooleanPolicyProto* alternateerrorpagesenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(alternateerrorpagesenabled_);
}
alternateerrorpagesenabled_ = alternateerrorpagesenabled;
if (alternateerrorpagesenabled) {
_has_bits_[0] |= 0x00000002u;
} else {
_has_bits_[0] &= ~0x00000002u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.AlternateErrorPagesEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_alternateerrorpagesenabled() {
_has_bits_[0] &= ~0x00000002u;
::enterprise_management::BooleanPolicyProto* temp = alternateerrorpagesenabled_;
alternateerrorpagesenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_alternateerrorpagesenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AlternateErrorPagesEnabled)
_has_bits_[0] &= ~0x00000002u;
::enterprise_management::BooleanPolicyProto* temp = alternateerrorpagesenabled_;
alternateerrorpagesenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_alternateerrorpagesenabled() {
_has_bits_[0] |= 0x00000002u;
if (alternateerrorpagesenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
alternateerrorpagesenabled_ = p;
}
return alternateerrorpagesenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_alternateerrorpagesenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_alternateerrorpagesenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AlternateErrorPagesEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_alternateerrorpagesenabled(::enterprise_management::BooleanPolicyProto* alternateerrorpagesenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(alternateerrorpagesenabled_);
}
if (alternateerrorpagesenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(alternateerrorpagesenabled));
if (message_arena != submessage_arena) {
alternateerrorpagesenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, alternateerrorpagesenabled, submessage_arena);
}
_has_bits_[0] |= 0x00000002u;
} else {
_has_bits_[0] &= ~0x00000002u;
}
alternateerrorpagesenabled_ = alternateerrorpagesenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AlternateErrorPagesEnabled)
}

// optional .enterprise_management.BooleanPolicyProto SearchSuggestEnabled = 8;
inline bool CloudPolicySettings::_internal_has_searchsuggestenabled() const {
bool value = (_has_bits_[0] & 0x00000004u) != 0;
PROTOBUF_ASSUME(!value || searchsuggestenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_searchsuggestenabled() const {
return _internal_has_searchsuggestenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_searchsuggestenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = searchsuggestenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::searchsuggestenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SearchSuggestEnabled)
return _internal_searchsuggestenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_searchsuggestenabled(
::enterprise_management::BooleanPolicyProto* searchsuggestenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(searchsuggestenabled_);
}
searchsuggestenabled_ = searchsuggestenabled;
if (searchsuggestenabled) {
_has_bits_[0] |= 0x00000004u;
} else {
_has_bits_[0] &= ~0x00000004u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.SearchSuggestEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_searchsuggestenabled() {
_has_bits_[0] &= ~0x00000004u;
::enterprise_management::BooleanPolicyProto* temp = searchsuggestenabled_;
searchsuggestenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_searchsuggestenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SearchSuggestEnabled)
_has_bits_[0] &= ~0x00000004u;
::enterprise_management::BooleanPolicyProto* temp = searchsuggestenabled_;
searchsuggestenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_searchsuggestenabled() {
_has_bits_[0] |= 0x00000004u;
if (searchsuggestenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
searchsuggestenabled_ = p;
}
return searchsuggestenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_searchsuggestenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_searchsuggestenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SearchSuggestEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_searchsuggestenabled(::enterprise_management::BooleanPolicyProto* searchsuggestenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(searchsuggestenabled_);
}
if (searchsuggestenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(searchsuggestenabled));
if (message_arena != submessage_arena) {
searchsuggestenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, searchsuggestenabled, submessage_arena);
}
_has_bits_[0] |= 0x00000004u;
} else {
_has_bits_[0] &= ~0x00000004u;
}
searchsuggestenabled_ = searchsuggestenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SearchSuggestEnabled)
}

// optional .enterprise_management.IntegerPolicyProto NetworkPredictionOptions = 275;
inline bool CloudPolicySettings::_internal_has_networkpredictionoptions() const {
bool value = (_has_bits_[1] & 0x00400000u) != 0;
PROTOBUF_ASSUME(!value || networkpredictionoptions_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_networkpredictionoptions() const {
return _internal_has_networkpredictionoptions();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::_internal_networkpredictionoptions() const {
const ::enterprise_management::IntegerPolicyProto* p = networkpredictionoptions_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::IntegerPolicyProto&>(
::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::networkpredictionoptions() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NetworkPredictionOptions)
return _internal_networkpredictionoptions();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_networkpredictionoptions(
::enterprise_management::IntegerPolicyProto* networkpredictionoptions) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(networkpredictionoptions_);
}
networkpredictionoptions_ = networkpredictionoptions;
if (networkpredictionoptions) {
_has_bits_[1] |= 0x00400000u;
} else {
_has_bits_[1] &= ~0x00400000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.NetworkPredictionOptions)
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_networkpredictionoptions() {
_has_bits_[1] &= ~0x00400000u;
::enterprise_management::IntegerPolicyProto* temp = networkpredictionoptions_;
networkpredictionoptions_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::unsafe_arena_release_networkpredictionoptions() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NetworkPredictionOptions)
_has_bits_[1] &= ~0x00400000u;
::enterprise_management::IntegerPolicyProto* temp = networkpredictionoptions_;
networkpredictionoptions_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::_internal_mutable_networkpredictionoptions() {
_has_bits_[1] |= 0x00400000u;
if (networkpredictionoptions_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaForAllocation());
networkpredictionoptions_ = p;
}
return networkpredictionoptions_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_networkpredictionoptions() {
::enterprise_management::IntegerPolicyProto* _msg = _internal_mutable_networkpredictionoptions();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NetworkPredictionOptions)
return _msg;
}
inline void CloudPolicySettings::set_allocated_networkpredictionoptions(::enterprise_management::IntegerPolicyProto* networkpredictionoptions) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(networkpredictionoptions_);
}
if (networkpredictionoptions) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(networkpredictionoptions));
if (message_arena != submessage_arena) {
networkpredictionoptions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, networkpredictionoptions, submessage_arena);
}
_has_bits_[1] |= 0x00400000u;
} else {
_has_bits_[1] &= ~0x00400000u;
}
networkpredictionoptions_ = networkpredictionoptions;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NetworkPredictionOptions)
}

// optional .enterprise_management.BooleanPolicyProto JavascriptEnabled = 11;
inline bool CloudPolicySettings::_internal_has_javascriptenabled() const {
bool value = (_has_bits_[0] & 0x00000008u) != 0;
PROTOBUF_ASSUME(!value || javascriptenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_javascriptenabled() const {
return _internal_has_javascriptenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_javascriptenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = javascriptenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::javascriptenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.JavascriptEnabled)
return _internal_javascriptenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_javascriptenabled(
::enterprise_management::BooleanPolicyProto* javascriptenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(javascriptenabled_);
}
javascriptenabled_ = javascriptenabled;
if (javascriptenabled) {
_has_bits_[0] |= 0x00000008u;
} else {
_has_bits_[0] &= ~0x00000008u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.JavascriptEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_javascriptenabled() {
_has_bits_[0] &= ~0x00000008u;
::enterprise_management::BooleanPolicyProto* temp = javascriptenabled_;
javascriptenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_javascriptenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.JavascriptEnabled)
_has_bits_[0] &= ~0x00000008u;
::enterprise_management::BooleanPolicyProto* temp = javascriptenabled_;
javascriptenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_javascriptenabled() {
_has_bits_[0] |= 0x00000008u;
if (javascriptenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
javascriptenabled_ = p;
}
return javascriptenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_javascriptenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_javascriptenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.JavascriptEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_javascriptenabled(::enterprise_management::BooleanPolicyProto* javascriptenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(javascriptenabled_);
}
if (javascriptenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(javascriptenabled));
if (message_arena != submessage_arena) {
javascriptenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, javascriptenabled, submessage_arena);
}
_has_bits_[0] |= 0x00000008u;
} else {
_has_bits_[0] &= ~0x00000008u;
}
javascriptenabled_ = javascriptenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.JavascriptEnabled)
}

// optional .enterprise_management.BooleanPolicyProto IncognitoEnabled = 12;
inline bool CloudPolicySettings::_internal_has_incognitoenabled() const {
bool value = (_has_bits_[0] & 0x00000010u) != 0;
PROTOBUF_ASSUME(!value || incognitoenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_incognitoenabled() const {
return _internal_has_incognitoenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_incognitoenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = incognitoenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::incognitoenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.IncognitoEnabled)
return _internal_incognitoenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_incognitoenabled(
::enterprise_management::BooleanPolicyProto* incognitoenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(incognitoenabled_);
}
incognitoenabled_ = incognitoenabled;
if (incognitoenabled) {
_has_bits_[0] |= 0x00000010u;
} else {
_has_bits_[0] &= ~0x00000010u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.IncognitoEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_incognitoenabled() {
_has_bits_[0] &= ~0x00000010u;
::enterprise_management::BooleanPolicyProto* temp = incognitoenabled_;
incognitoenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_incognitoenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.IncognitoEnabled)
_has_bits_[0] &= ~0x00000010u;
::enterprise_management::BooleanPolicyProto* temp = incognitoenabled_;
incognitoenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_incognitoenabled() {
_has_bits_[0] |= 0x00000010u;
if (incognitoenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
incognitoenabled_ = p;
}
return incognitoenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_incognitoenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_incognitoenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.IncognitoEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_incognitoenabled(::enterprise_management::BooleanPolicyProto* incognitoenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(incognitoenabled_);
}
if (incognitoenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(incognitoenabled));
if (message_arena != submessage_arena) {
incognitoenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, incognitoenabled, submessage_arena);
}
_has_bits_[0] |= 0x00000010u;
} else {
_has_bits_[0] &= ~0x00000010u;
}
incognitoenabled_ = incognitoenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.IncognitoEnabled)
}

// optional .enterprise_management.IntegerPolicyProto IncognitoModeAvailability = 95;
inline bool CloudPolicySettings::_internal_has_incognitomodeavailability() const {
bool value = (_has_bits_[1] & 0x00000100u) != 0;
PROTOBUF_ASSUME(!value || incognitomodeavailability_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_incognitomodeavailability() const {
return _internal_has_incognitomodeavailability();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::_internal_incognitomodeavailability() const {
const ::enterprise_management::IntegerPolicyProto* p = incognitomodeavailability_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::IntegerPolicyProto&>(
::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::incognitomodeavailability() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.IncognitoModeAvailability)
return _internal_incognitomodeavailability();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_incognitomodeavailability(
::enterprise_management::IntegerPolicyProto* incognitomodeavailability) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(incognitomodeavailability_);
}
incognitomodeavailability_ = incognitomodeavailability;
if (incognitomodeavailability) {
_has_bits_[1] |= 0x00000100u;
} else {
_has_bits_[1] &= ~0x00000100u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.IncognitoModeAvailability)
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_incognitomodeavailability() {
_has_bits_[1] &= ~0x00000100u;
::enterprise_management::IntegerPolicyProto* temp = incognitomodeavailability_;
incognitomodeavailability_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::unsafe_arena_release_incognitomodeavailability() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.IncognitoModeAvailability)
_has_bits_[1] &= ~0x00000100u;
::enterprise_management::IntegerPolicyProto* temp = incognitomodeavailability_;
incognitomodeavailability_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::_internal_mutable_incognitomodeavailability() {
_has_bits_[1] |= 0x00000100u;
if (incognitomodeavailability_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaForAllocation());
incognitomodeavailability_ = p;
}
return incognitomodeavailability_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_incognitomodeavailability() {
::enterprise_management::IntegerPolicyProto* _msg = _internal_mutable_incognitomodeavailability();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.IncognitoModeAvailability)
return _msg;
}
inline void CloudPolicySettings::set_allocated_incognitomodeavailability(::enterprise_management::IntegerPolicyProto* incognitomodeavailability) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(incognitomodeavailability_);
}
if (incognitomodeavailability) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(incognitomodeavailability));
if (message_arena != submessage_arena) {
incognitomodeavailability = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, incognitomodeavailability, submessage_arena);
}
_has_bits_[1] |= 0x00000100u;
} else {
_has_bits_[1] &= ~0x00000100u;
}
incognitomodeavailability_ = incognitomodeavailability;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.IncognitoModeAvailability)
}

// optional .enterprise_management.BooleanPolicyProto SavingBrowserHistoryDisabled = 13;
inline bool CloudPolicySettings::_internal_has_savingbrowserhistorydisabled() const {
bool value = (_has_bits_[0] & 0x00000020u) != 0;
PROTOBUF_ASSUME(!value || savingbrowserhistorydisabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_savingbrowserhistorydisabled() const {
return _internal_has_savingbrowserhistorydisabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_savingbrowserhistorydisabled() const {
const ::enterprise_management::BooleanPolicyProto* p = savingbrowserhistorydisabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::savingbrowserhistorydisabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SavingBrowserHistoryDisabled)
return _internal_savingbrowserhistorydisabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_savingbrowserhistorydisabled(
::enterprise_management::BooleanPolicyProto* savingbrowserhistorydisabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(savingbrowserhistorydisabled_);
}
savingbrowserhistorydisabled_ = savingbrowserhistorydisabled;
if (savingbrowserhistorydisabled) {
_has_bits_[0] |= 0x00000020u;
} else {
_has_bits_[0] &= ~0x00000020u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.SavingBrowserHistoryDisabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_savingbrowserhistorydisabled() {
_has_bits_[0] &= ~0x00000020u;
::enterprise_management::BooleanPolicyProto* temp = savingbrowserhistorydisabled_;
savingbrowserhistorydisabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_savingbrowserhistorydisabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SavingBrowserHistoryDisabled)
_has_bits_[0] &= ~0x00000020u;
::enterprise_management::BooleanPolicyProto* temp = savingbrowserhistorydisabled_;
savingbrowserhistorydisabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_savingbrowserhistorydisabled() {
_has_bits_[0] |= 0x00000020u;
if (savingbrowserhistorydisabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
savingbrowserhistorydisabled_ = p;
}
return savingbrowserhistorydisabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_savingbrowserhistorydisabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_savingbrowserhistorydisabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SavingBrowserHistoryDisabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_savingbrowserhistorydisabled(::enterprise_management::BooleanPolicyProto* savingbrowserhistorydisabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(savingbrowserhistorydisabled_);
}
if (savingbrowserhistorydisabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(savingbrowserhistorydisabled));
if (message_arena != submessage_arena) {
savingbrowserhistorydisabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, savingbrowserhistorydisabled, submessage_arena);
}
_has_bits_[0] |= 0x00000020u;
} else {
_has_bits_[0] &= ~0x00000020u;
}
savingbrowserhistorydisabled_ = savingbrowserhistorydisabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SavingBrowserHistoryDisabled)
}

// optional .enterprise_management.BooleanPolicyProto PrintingEnabled = 14;
inline bool CloudPolicySettings::_internal_has_printingenabled() const {
bool value = (_has_bits_[0] & 0x00000040u) != 0;
PROTOBUF_ASSUME(!value || printingenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_printingenabled() const {
return _internal_has_printingenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_printingenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = printingenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::printingenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PrintingEnabled)
return _internal_printingenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_printingenabled(
::enterprise_management::BooleanPolicyProto* printingenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(printingenabled_);
}
printingenabled_ = printingenabled;
if (printingenabled) {
_has_bits_[0] |= 0x00000040u;
} else {
_has_bits_[0] &= ~0x00000040u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.PrintingEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_printingenabled() {
_has_bits_[0] &= ~0x00000040u;
::enterprise_management::BooleanPolicyProto* temp = printingenabled_;
printingenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_printingenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PrintingEnabled)
_has_bits_[0] &= ~0x00000040u;
::enterprise_management::BooleanPolicyProto* temp = printingenabled_;
printingenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_printingenabled() {
_has_bits_[0] |= 0x00000040u;
if (printingenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
printingenabled_ = p;
}
return printingenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_printingenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_printingenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PrintingEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_printingenabled(::enterprise_management::BooleanPolicyProto* printingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(printingenabled_);
}
if (printingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(printingenabled));
if (message_arena != submessage_arena) {
printingenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, printingenabled, submessage_arena);
}
_has_bits_[0] |= 0x00000040u;
} else {
_has_bits_[0] &= ~0x00000040u;
}
printingenabled_ = printingenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PrintingEnabled)
}

// optional .enterprise_management.BooleanPolicyProto ForceSafeSearch = 164;
inline bool CloudPolicySettings::_internal_has_forcesafesearch() const {
bool value = (_has_bits_[1] & 0x00001000u) != 0;
PROTOBUF_ASSUME(!value || forcesafesearch_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_forcesafesearch() const {
return _internal_has_forcesafesearch();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_forcesafesearch() const {
const ::enterprise_management::BooleanPolicyProto* p = forcesafesearch_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::forcesafesearch() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceSafeSearch)
return _internal_forcesafesearch();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_forcesafesearch(
::enterprise_management::BooleanPolicyProto* forcesafesearch) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(forcesafesearch_);
}
forcesafesearch_ = forcesafesearch;
if (forcesafesearch) {
_has_bits_[1] |= 0x00001000u;
} else {
_has_bits_[1] &= ~0x00001000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.ForceSafeSearch)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_forcesafesearch() {
_has_bits_[1] &= ~0x00001000u;
::enterprise_management::BooleanPolicyProto* temp = forcesafesearch_;
forcesafesearch_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_forcesafesearch() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceSafeSearch)
_has_bits_[1] &= ~0x00001000u;
::enterprise_management::BooleanPolicyProto* temp = forcesafesearch_;
forcesafesearch_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_forcesafesearch() {
_has_bits_[1] |= 0x00001000u;
if (forcesafesearch_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
forcesafesearch_ = p;
}
return forcesafesearch_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_forcesafesearch() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_forcesafesearch();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceSafeSearch)
return _msg;
}
inline void CloudPolicySettings::set_allocated_forcesafesearch(::enterprise_management::BooleanPolicyProto* forcesafesearch) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(forcesafesearch_);
}
if (forcesafesearch) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(forcesafesearch));
if (message_arena != submessage_arena) {
forcesafesearch = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, forcesafesearch, submessage_arena);
}
_has_bits_[1] |= 0x00001000u;
} else {
_has_bits_[1] &= ~0x00001000u;
}
forcesafesearch_ = forcesafesearch;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceSafeSearch)
}

// optional .enterprise_management.BooleanPolicyProto ForceGoogleSafeSearch = 284;
inline bool CloudPolicySettings::_internal_has_forcegooglesafesearch() const {
bool value = (_has_bits_[1] & 0x02000000u) != 0;
PROTOBUF_ASSUME(!value || forcegooglesafesearch_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_forcegooglesafesearch() const {
return _internal_has_forcegooglesafesearch();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_forcegooglesafesearch() const {
const ::enterprise_management::BooleanPolicyProto* p = forcegooglesafesearch_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::forcegooglesafesearch() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceGoogleSafeSearch)
return _internal_forcegooglesafesearch();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_forcegooglesafesearch(
::enterprise_management::BooleanPolicyProto* forcegooglesafesearch) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(forcegooglesafesearch_);
}
forcegooglesafesearch_ = forcegooglesafesearch;
if (forcegooglesafesearch) {
_has_bits_[1] |= 0x02000000u;
} else {
_has_bits_[1] &= ~0x02000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.ForceGoogleSafeSearch)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_forcegooglesafesearch() {
_has_bits_[1] &= ~0x02000000u;
::enterprise_management::BooleanPolicyProto* temp = forcegooglesafesearch_;
forcegooglesafesearch_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_forcegooglesafesearch() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceGoogleSafeSearch)
_has_bits_[1] &= ~0x02000000u;
::enterprise_management::BooleanPolicyProto* temp = forcegooglesafesearch_;
forcegooglesafesearch_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_forcegooglesafesearch() {
_has_bits_[1] |= 0x02000000u;
if (forcegooglesafesearch_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
forcegooglesafesearch_ = p;
}
return forcegooglesafesearch_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_forcegooglesafesearch() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_forcegooglesafesearch();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceGoogleSafeSearch)
return _msg;
}
inline void CloudPolicySettings::set_allocated_forcegooglesafesearch(::enterprise_management::BooleanPolicyProto* forcegooglesafesearch) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(forcegooglesafesearch_);
}
if (forcegooglesafesearch) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(forcegooglesafesearch));
if (message_arena != submessage_arena) {
forcegooglesafesearch = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, forcegooglesafesearch, submessage_arena);
}
_has_bits_[1] |= 0x02000000u;
} else {
_has_bits_[1] &= ~0x02000000u;
}
forcegooglesafesearch_ = forcegooglesafesearch;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceGoogleSafeSearch)
}

// optional .enterprise_management.BooleanPolicyProto ForceYouTubeSafetyMode = 285;
inline bool CloudPolicySettings::_internal_has_forceyoutubesafetymode() const {
bool value = (_has_bits_[1] & 0x04000000u) != 0;
PROTOBUF_ASSUME(!value || forceyoutubesafetymode_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_forceyoutubesafetymode() const {
return _internal_has_forceyoutubesafetymode();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_forceyoutubesafetymode() const {
const ::enterprise_management::BooleanPolicyProto* p = forceyoutubesafetymode_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::forceyoutubesafetymode() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceYouTubeSafetyMode)
return _internal_forceyoutubesafetymode();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_forceyoutubesafetymode(
::enterprise_management::BooleanPolicyProto* forceyoutubesafetymode) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(forceyoutubesafetymode_);
}
forceyoutubesafetymode_ = forceyoutubesafetymode;
if (forceyoutubesafetymode) {
_has_bits_[1] |= 0x04000000u;
} else {
_has_bits_[1] &= ~0x04000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.ForceYouTubeSafetyMode)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_forceyoutubesafetymode() {
_has_bits_[1] &= ~0x04000000u;
::enterprise_management::BooleanPolicyProto* temp = forceyoutubesafetymode_;
forceyoutubesafetymode_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_forceyoutubesafetymode() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceYouTubeSafetyMode)
_has_bits_[1] &= ~0x04000000u;
::enterprise_management::BooleanPolicyProto* temp = forceyoutubesafetymode_;
forceyoutubesafetymode_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_forceyoutubesafetymode() {
_has_bits_[1] |= 0x04000000u;
if (forceyoutubesafetymode_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
forceyoutubesafetymode_ = p;
}
return forceyoutubesafetymode_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_forceyoutubesafetymode() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_forceyoutubesafetymode();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceYouTubeSafetyMode)
return _msg;
}
inline void CloudPolicySettings::set_allocated_forceyoutubesafetymode(::enterprise_management::BooleanPolicyProto* forceyoutubesafetymode) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(forceyoutubesafetymode_);
}
if (forceyoutubesafetymode) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(forceyoutubesafetymode));
if (message_arena != submessage_arena) {
forceyoutubesafetymode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, forceyoutubesafetymode, submessage_arena);
}
_has_bits_[1] |= 0x04000000u;
} else {
_has_bits_[1] &= ~0x04000000u;
}
forceyoutubesafetymode_ = forceyoutubesafetymode;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceYouTubeSafetyMode)
}

// optional .enterprise_management.IntegerPolicyProto ForceYouTubeRestrict = 350;
inline bool CloudPolicySettings::_internal_has_forceyoutuberestrict() const {
bool value = (_has_bits_[2] & 0x00000020u) != 0;
PROTOBUF_ASSUME(!value || forceyoutuberestrict_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_forceyoutuberestrict() const {
return _internal_has_forceyoutuberestrict();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::_internal_forceyoutuberestrict() const {
const ::enterprise_management::IntegerPolicyProto* p = forceyoutuberestrict_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::IntegerPolicyProto&>(
::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::forceyoutuberestrict() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceYouTubeRestrict)
return _internal_forceyoutuberestrict();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_forceyoutuberestrict(
::enterprise_management::IntegerPolicyProto* forceyoutuberestrict) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(forceyoutuberestrict_);
}
forceyoutuberestrict_ = forceyoutuberestrict;
if (forceyoutuberestrict) {
_has_bits_[2] |= 0x00000020u;
} else {
_has_bits_[2] &= ~0x00000020u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.ForceYouTubeRestrict)
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_forceyoutuberestrict() {
_has_bits_[2] &= ~0x00000020u;
::enterprise_management::IntegerPolicyProto* temp = forceyoutuberestrict_;
forceyoutuberestrict_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::unsafe_arena_release_forceyoutuberestrict() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceYouTubeRestrict)
_has_bits_[2] &= ~0x00000020u;
::enterprise_management::IntegerPolicyProto* temp = forceyoutuberestrict_;
forceyoutuberestrict_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::_internal_mutable_forceyoutuberestrict() {
_has_bits_[2] |= 0x00000020u;
if (forceyoutuberestrict_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaForAllocation());
forceyoutuberestrict_ = p;
}
return forceyoutuberestrict_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_forceyoutuberestrict() {
::enterprise_management::IntegerPolicyProto* _msg = _internal_mutable_forceyoutuberestrict();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceYouTubeRestrict)
return _msg;
}
inline void CloudPolicySettings::set_allocated_forceyoutuberestrict(::enterprise_management::IntegerPolicyProto* forceyoutuberestrict) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(forceyoutuberestrict_);
}
if (forceyoutuberestrict) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(forceyoutuberestrict));
if (message_arena != submessage_arena) {
forceyoutuberestrict = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, forceyoutuberestrict, submessage_arena);
}
_has_bits_[2] |= 0x00000020u;
} else {
_has_bits_[2] &= ~0x00000020u;
}
forceyoutuberestrict_ = forceyoutuberestrict;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceYouTubeRestrict)
}

// optional .enterprise_management.BooleanPolicyProto SafeBrowsingEnabled = 16;
inline bool CloudPolicySettings::_internal_has_safebrowsingenabled() const {
bool value = (_has_bits_[0] & 0x00000080u) != 0;
PROTOBUF_ASSUME(!value || safebrowsingenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_safebrowsingenabled() const {
return _internal_has_safebrowsingenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_safebrowsingenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = safebrowsingenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::safebrowsingenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SafeBrowsingEnabled)
return _internal_safebrowsingenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_safebrowsingenabled(
::enterprise_management::BooleanPolicyProto* safebrowsingenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(safebrowsingenabled_);
}
safebrowsingenabled_ = safebrowsingenabled;
if (safebrowsingenabled) {
_has_bits_[0] |= 0x00000080u;
} else {
_has_bits_[0] &= ~0x00000080u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.SafeBrowsingEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_safebrowsingenabled() {
_has_bits_[0] &= ~0x00000080u;
::enterprise_management::BooleanPolicyProto* temp = safebrowsingenabled_;
safebrowsingenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_safebrowsingenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SafeBrowsingEnabled)
_has_bits_[0] &= ~0x00000080u;
::enterprise_management::BooleanPolicyProto* temp = safebrowsingenabled_;
safebrowsingenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_safebrowsingenabled() {
_has_bits_[0] |= 0x00000080u;
if (safebrowsingenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
safebrowsingenabled_ = p;
}
return safebrowsingenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_safebrowsingenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_safebrowsingenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SafeBrowsingEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_safebrowsingenabled(::enterprise_management::BooleanPolicyProto* safebrowsingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(safebrowsingenabled_);
}
if (safebrowsingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(safebrowsingenabled));
if (message_arena != submessage_arena) {
safebrowsingenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, safebrowsingenabled, submessage_arena);
}
_has_bits_[0] |= 0x00000080u;
} else {
_has_bits_[0] &= ~0x00000080u;
}
safebrowsingenabled_ = safebrowsingenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SafeBrowsingEnabled)
}

// optional .enterprise_management.IntegerPolicyProto SafeBrowsingProtectionLevel = 686;
inline bool CloudPolicySettings::_internal_has_safebrowsingprotectionlevel() const {
bool value = (_has_bits_[3] & 0x00000080u) != 0;
PROTOBUF_ASSUME(!value || safebrowsingprotectionlevel_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_safebrowsingprotectionlevel() const {
return _internal_has_safebrowsingprotectionlevel();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::_internal_safebrowsingprotectionlevel() const {
const ::enterprise_management::IntegerPolicyProto* p = safebrowsingprotectionlevel_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::IntegerPolicyProto&>(
::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::safebrowsingprotectionlevel() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SafeBrowsingProtectionLevel)
return _internal_safebrowsingprotectionlevel();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_safebrowsingprotectionlevel(
::enterprise_management::IntegerPolicyProto* safebrowsingprotectionlevel) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(safebrowsingprotectionlevel_);
}
safebrowsingprotectionlevel_ = safebrowsingprotectionlevel;
if (safebrowsingprotectionlevel) {
_has_bits_[3] |= 0x00000080u;
} else {
_has_bits_[3] &= ~0x00000080u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.SafeBrowsingProtectionLevel)
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_safebrowsingprotectionlevel() {
_has_bits_[3] &= ~0x00000080u;
::enterprise_management::IntegerPolicyProto* temp = safebrowsingprotectionlevel_;
safebrowsingprotectionlevel_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::unsafe_arena_release_safebrowsingprotectionlevel() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SafeBrowsingProtectionLevel)
_has_bits_[3] &= ~0x00000080u;
::enterprise_management::IntegerPolicyProto* temp = safebrowsingprotectionlevel_;
safebrowsingprotectionlevel_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::_internal_mutable_safebrowsingprotectionlevel() {
_has_bits_[3] |= 0x00000080u;
if (safebrowsingprotectionlevel_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaForAllocation());
safebrowsingprotectionlevel_ = p;
}
return safebrowsingprotectionlevel_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_safebrowsingprotectionlevel() {
::enterprise_management::IntegerPolicyProto* _msg = _internal_mutable_safebrowsingprotectionlevel();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SafeBrowsingProtectionLevel)
return _msg;
}
inline void CloudPolicySettings::set_allocated_safebrowsingprotectionlevel(::enterprise_management::IntegerPolicyProto* safebrowsingprotectionlevel) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(safebrowsingprotectionlevel_);
}
if (safebrowsingprotectionlevel) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(safebrowsingprotectionlevel));
if (message_arena != submessage_arena) {
safebrowsingprotectionlevel = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, safebrowsingprotectionlevel, submessage_arena);
}
_has_bits_[3] |= 0x00000080u;
} else {
_has_bits_[3] &= ~0x00000080u;
}
safebrowsingprotectionlevel_ = safebrowsingprotectionlevel;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SafeBrowsingProtectionLevel)
}

// optional .enterprise_management.BooleanPolicyProto MetricsReportingEnabled = 17;
inline bool CloudPolicySettings::_internal_has_metricsreportingenabled() const {
bool value = (_has_bits_[0] & 0x00000100u) != 0;
PROTOBUF_ASSUME(!value || metricsreportingenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_metricsreportingenabled() const {
return _internal_has_metricsreportingenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_metricsreportingenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = metricsreportingenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::metricsreportingenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.MetricsReportingEnabled)
return _internal_metricsreportingenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_metricsreportingenabled(
::enterprise_management::BooleanPolicyProto* metricsreportingenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(metricsreportingenabled_);
}
metricsreportingenabled_ = metricsreportingenabled;
if (metricsreportingenabled) {
_has_bits_[0] |= 0x00000100u;
} else {
_has_bits_[0] &= ~0x00000100u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.MetricsReportingEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_metricsreportingenabled() {
_has_bits_[0] &= ~0x00000100u;
::enterprise_management::BooleanPolicyProto* temp = metricsreportingenabled_;
metricsreportingenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_metricsreportingenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.MetricsReportingEnabled)
_has_bits_[0] &= ~0x00000100u;
::enterprise_management::BooleanPolicyProto* temp = metricsreportingenabled_;
metricsreportingenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_metricsreportingenabled() {
_has_bits_[0] |= 0x00000100u;
if (metricsreportingenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
metricsreportingenabled_ = p;
}
return metricsreportingenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_metricsreportingenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_metricsreportingenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.MetricsReportingEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_metricsreportingenabled(::enterprise_management::BooleanPolicyProto* metricsreportingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(metricsreportingenabled_);
}
if (metricsreportingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(metricsreportingenabled));
if (message_arena != submessage_arena) {
metricsreportingenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, metricsreportingenabled, submessage_arena);
}
_has_bits_[0] |= 0x00000100u;
} else {
_has_bits_[0] &= ~0x00000100u;
}
metricsreportingenabled_ = metricsreportingenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.MetricsReportingEnabled)
}

// optional .enterprise_management.BooleanPolicyProto PasswordManagerEnabled = 18;
inline bool CloudPolicySettings::_internal_has_passwordmanagerenabled() const {
bool value = (_has_bits_[0] & 0x00000200u) != 0;
PROTOBUF_ASSUME(!value || passwordmanagerenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_passwordmanagerenabled() const {
return _internal_has_passwordmanagerenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_passwordmanagerenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = passwordmanagerenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::passwordmanagerenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PasswordManagerEnabled)
return _internal_passwordmanagerenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_passwordmanagerenabled(
::enterprise_management::BooleanPolicyProto* passwordmanagerenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(passwordmanagerenabled_);
}
passwordmanagerenabled_ = passwordmanagerenabled;
if (passwordmanagerenabled) {
_has_bits_[0] |= 0x00000200u;
} else {
_has_bits_[0] &= ~0x00000200u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.PasswordManagerEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_passwordmanagerenabled() {
_has_bits_[0] &= ~0x00000200u;
::enterprise_management::BooleanPolicyProto* temp = passwordmanagerenabled_;
passwordmanagerenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_passwordmanagerenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PasswordManagerEnabled)
_has_bits_[0] &= ~0x00000200u;
::enterprise_management::BooleanPolicyProto* temp = passwordmanagerenabled_;
passwordmanagerenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_passwordmanagerenabled() {
_has_bits_[0] |= 0x00000200u;
if (passwordmanagerenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
passwordmanagerenabled_ = p;
}
return passwordmanagerenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_passwordmanagerenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_passwordmanagerenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PasswordManagerEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_passwordmanagerenabled(::enterprise_management::BooleanPolicyProto* passwordmanagerenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(passwordmanagerenabled_);
}
if (passwordmanagerenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(passwordmanagerenabled));
if (message_arena != submessage_arena) {
passwordmanagerenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, passwordmanagerenabled, submessage_arena);
}
_has_bits_[0] |= 0x00000200u;
} else {
_has_bits_[0] &= ~0x00000200u;
}
passwordmanagerenabled_ = passwordmanagerenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PasswordManagerEnabled)
}

// optional .enterprise_management.BooleanPolicyProto PasswordLeakDetectionEnabled = 582;
inline bool CloudPolicySettings::_internal_has_passwordleakdetectionenabled() const {
bool value = (_has_bits_[2] & 0x40000000u) != 0;
PROTOBUF_ASSUME(!value || passwordleakdetectionenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_passwordleakdetectionenabled() const {
return _internal_has_passwordleakdetectionenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_passwordleakdetectionenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = passwordleakdetectionenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::passwordleakdetectionenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PasswordLeakDetectionEnabled)
return _internal_passwordleakdetectionenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_passwordleakdetectionenabled(
::enterprise_management::BooleanPolicyProto* passwordleakdetectionenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(passwordleakdetectionenabled_);
}
passwordleakdetectionenabled_ = passwordleakdetectionenabled;
if (passwordleakdetectionenabled) {
_has_bits_[2] |= 0x40000000u;
} else {
_has_bits_[2] &= ~0x40000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.PasswordLeakDetectionEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_passwordleakdetectionenabled() {
_has_bits_[2] &= ~0x40000000u;
::enterprise_management::BooleanPolicyProto* temp = passwordleakdetectionenabled_;
passwordleakdetectionenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_passwordleakdetectionenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PasswordLeakDetectionEnabled)
_has_bits_[2] &= ~0x40000000u;
::enterprise_management::BooleanPolicyProto* temp = passwordleakdetectionenabled_;
passwordleakdetectionenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_passwordleakdetectionenabled() {
_has_bits_[2] |= 0x40000000u;
if (passwordleakdetectionenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
passwordleakdetectionenabled_ = p;
}
return passwordleakdetectionenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_passwordleakdetectionenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_passwordleakdetectionenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PasswordLeakDetectionEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_passwordleakdetectionenabled(::enterprise_management::BooleanPolicyProto* passwordleakdetectionenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(passwordleakdetectionenabled_);
}
if (passwordleakdetectionenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(passwordleakdetectionenabled));
if (message_arena != submessage_arena) {
passwordleakdetectionenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, passwordleakdetectionenabled, submessage_arena);
}
_has_bits_[2] |= 0x40000000u;
} else {
_has_bits_[2] &= ~0x40000000u;
}
passwordleakdetectionenabled_ = passwordleakdetectionenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PasswordLeakDetectionEnabled)
}

// optional .enterprise_management.BooleanPolicyProto AutoFillEnabled = 20;
inline bool CloudPolicySettings::_internal_has_autofillenabled() const {
bool value = (_has_bits_[0] & 0x00000400u) != 0;
PROTOBUF_ASSUME(!value || autofillenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_autofillenabled() const {
return _internal_has_autofillenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_autofillenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = autofillenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::autofillenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AutoFillEnabled)
return _internal_autofillenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_autofillenabled(
::enterprise_management::BooleanPolicyProto* autofillenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(autofillenabled_);
}
autofillenabled_ = autofillenabled;
if (autofillenabled) {
_has_bits_[0] |= 0x00000400u;
} else {
_has_bits_[0] &= ~0x00000400u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.AutoFillEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_autofillenabled() {
_has_bits_[0] &= ~0x00000400u;
::enterprise_management::BooleanPolicyProto* temp = autofillenabled_;
autofillenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_autofillenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AutoFillEnabled)
_has_bits_[0] &= ~0x00000400u;
::enterprise_management::BooleanPolicyProto* temp = autofillenabled_;
autofillenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_autofillenabled() {
_has_bits_[0] |= 0x00000400u;
if (autofillenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
autofillenabled_ = p;
}
return autofillenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_autofillenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_autofillenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AutoFillEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_autofillenabled(::enterprise_management::BooleanPolicyProto* autofillenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(autofillenabled_);
}
if (autofillenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(autofillenabled));
if (message_arena != submessage_arena) {
autofillenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, autofillenabled, submessage_arena);
}
_has_bits_[0] |= 0x00000400u;
} else {
_has_bits_[0] &= ~0x00000400u;
}
autofillenabled_ = autofillenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AutoFillEnabled)
}

// optional .enterprise_management.BooleanPolicyProto AutofillAddressEnabled = 461;
inline bool CloudPolicySettings::_internal_has_autofilladdressenabled() const {
bool value = (_has_bits_[2] & 0x00100000u) != 0;
PROTOBUF_ASSUME(!value || autofilladdressenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_autofilladdressenabled() const {
return _internal_has_autofilladdressenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_autofilladdressenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = autofilladdressenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::autofilladdressenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AutofillAddressEnabled)
return _internal_autofilladdressenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_autofilladdressenabled(
::enterprise_management::BooleanPolicyProto* autofilladdressenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(autofilladdressenabled_);
}
autofilladdressenabled_ = autofilladdressenabled;
if (autofilladdressenabled) {
_has_bits_[2] |= 0x00100000u;
} else {
_has_bits_[2] &= ~0x00100000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.AutofillAddressEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_autofilladdressenabled() {
_has_bits_[2] &= ~0x00100000u;
::enterprise_management::BooleanPolicyProto* temp = autofilladdressenabled_;
autofilladdressenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_autofilladdressenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AutofillAddressEnabled)
_has_bits_[2] &= ~0x00100000u;
::enterprise_management::BooleanPolicyProto* temp = autofilladdressenabled_;
autofilladdressenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_autofilladdressenabled() {
_has_bits_[2] |= 0x00100000u;
if (autofilladdressenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
autofilladdressenabled_ = p;
}
return autofilladdressenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_autofilladdressenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_autofilladdressenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AutofillAddressEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_autofilladdressenabled(::enterprise_management::BooleanPolicyProto* autofilladdressenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(autofilladdressenabled_);
}
if (autofilladdressenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(autofilladdressenabled));
if (message_arena != submessage_arena) {
autofilladdressenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, autofilladdressenabled, submessage_arena);
}
_has_bits_[2] |= 0x00100000u;
} else {
_has_bits_[2] &= ~0x00100000u;
}
autofilladdressenabled_ = autofilladdressenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AutofillAddressEnabled)
}

// optional .enterprise_management.BooleanPolicyProto AutofillCreditCardEnabled = 394;
inline bool CloudPolicySettings::_internal_has_autofillcreditcardenabled() const {
bool value = (_has_bits_[2] & 0x00000080u) != 0;
PROTOBUF_ASSUME(!value || autofillcreditcardenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_autofillcreditcardenabled() const {
return _internal_has_autofillcreditcardenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_autofillcreditcardenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = autofillcreditcardenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::autofillcreditcardenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AutofillCreditCardEnabled)
return _internal_autofillcreditcardenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_autofillcreditcardenabled(
::enterprise_management::BooleanPolicyProto* autofillcreditcardenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(autofillcreditcardenabled_);
}
autofillcreditcardenabled_ = autofillcreditcardenabled;
if (autofillcreditcardenabled) {
_has_bits_[2] |= 0x00000080u;
} else {
_has_bits_[2] &= ~0x00000080u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.AutofillCreditCardEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_autofillcreditcardenabled() {
_has_bits_[2] &= ~0x00000080u;
::enterprise_management::BooleanPolicyProto* temp = autofillcreditcardenabled_;
autofillcreditcardenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_autofillcreditcardenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AutofillCreditCardEnabled)
_has_bits_[2] &= ~0x00000080u;
::enterprise_management::BooleanPolicyProto* temp = autofillcreditcardenabled_;
autofillcreditcardenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_autofillcreditcardenabled() {
_has_bits_[2] |= 0x00000080u;
if (autofillcreditcardenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
autofillcreditcardenabled_ = p;
}
return autofillcreditcardenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_autofillcreditcardenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_autofillcreditcardenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AutofillCreditCardEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_autofillcreditcardenabled(::enterprise_management::BooleanPolicyProto* autofillcreditcardenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(autofillcreditcardenabled_);
}
if (autofillcreditcardenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(autofillcreditcardenabled));
if (message_arena != submessage_arena) {
autofillcreditcardenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, autofillcreditcardenabled, submessage_arena);
}
_has_bits_[2] |= 0x00000080u;
} else {
_has_bits_[2] &= ~0x00000080u;
}
autofillcreditcardenabled_ = autofillcreditcardenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AutofillCreditCardEnabled)
}

// optional .enterprise_management.BooleanPolicyProto SyncDisabled = 22;
inline bool CloudPolicySettings::_internal_has_syncdisabled() const {
bool value = (_has_bits_[0] & 0x00000800u) != 0;
PROTOBUF_ASSUME(!value || syncdisabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_syncdisabled() const {
return _internal_has_syncdisabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_syncdisabled() const {
const ::enterprise_management::BooleanPolicyProto* p = syncdisabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::syncdisabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SyncDisabled)
return _internal_syncdisabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_syncdisabled(
::enterprise_management::BooleanPolicyProto* syncdisabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(syncdisabled_);
}
syncdisabled_ = syncdisabled;
if (syncdisabled) {
_has_bits_[0] |= 0x00000800u;
} else {
_has_bits_[0] &= ~0x00000800u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.SyncDisabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_syncdisabled() {
_has_bits_[0] &= ~0x00000800u;
::enterprise_management::BooleanPolicyProto* temp = syncdisabled_;
syncdisabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_syncdisabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SyncDisabled)
_has_bits_[0] &= ~0x00000800u;
::enterprise_management::BooleanPolicyProto* temp = syncdisabled_;
syncdisabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_syncdisabled() {
_has_bits_[0] |= 0x00000800u;
if (syncdisabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
syncdisabled_ = p;
}
return syncdisabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_syncdisabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_syncdisabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SyncDisabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_syncdisabled(::enterprise_management::BooleanPolicyProto* syncdisabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(syncdisabled_);
}
if (syncdisabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(syncdisabled));
if (message_arena != submessage_arena) {
syncdisabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, syncdisabled, submessage_arena);
}
_has_bits_[0] |= 0x00000800u;
} else {
_has_bits_[0] &= ~0x00000800u;
}
syncdisabled_ = syncdisabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SyncDisabled)
}

// optional .enterprise_management.StringListPolicyProto SyncTypesListDisabled = 651;
inline bool CloudPolicySettings::_internal_has_synctypeslistdisabled() const {
bool value = (_has_bits_[3] & 0x00000020u) != 0;
PROTOBUF_ASSUME(!value || synctypeslistdisabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_synctypeslistdisabled() const {
return _internal_has_synctypeslistdisabled();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_synctypeslistdisabled() const {
const ::enterprise_management::StringListPolicyProto* p = synctypeslistdisabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::synctypeslistdisabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SyncTypesListDisabled)
return _internal_synctypeslistdisabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_synctypeslistdisabled(
::enterprise_management::StringListPolicyProto* synctypeslistdisabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(synctypeslistdisabled_);
}
synctypeslistdisabled_ = synctypeslistdisabled;
if (synctypeslistdisabled) {
_has_bits_[3] |= 0x00000020u;
} else {
_has_bits_[3] &= ~0x00000020u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.SyncTypesListDisabled)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_synctypeslistdisabled() {
_has_bits_[3] &= ~0x00000020u;
::enterprise_management::StringListPolicyProto* temp = synctypeslistdisabled_;
synctypeslistdisabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_synctypeslistdisabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SyncTypesListDisabled)
_has_bits_[3] &= ~0x00000020u;
::enterprise_management::StringListPolicyProto* temp = synctypeslistdisabled_;
synctypeslistdisabled_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_synctypeslistdisabled() {
_has_bits_[3] |= 0x00000020u;
if (synctypeslistdisabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
synctypeslistdisabled_ = p;
}
return synctypeslistdisabled_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_synctypeslistdisabled() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_synctypeslistdisabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SyncTypesListDisabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_synctypeslistdisabled(::enterprise_management::StringListPolicyProto* synctypeslistdisabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(synctypeslistdisabled_);
}
if (synctypeslistdisabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(synctypeslistdisabled));
if (message_arena != submessage_arena) {
synctypeslistdisabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, synctypeslistdisabled, submessage_arena);
}
_has_bits_[3] |= 0x00000020u;
} else {
_has_bits_[3] &= ~0x00000020u;
}
synctypeslistdisabled_ = synctypeslistdisabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SyncTypesListDisabled)
}

// optional .enterprise_management.BooleanPolicyProto SigninAllowed = 192;
inline bool CloudPolicySettings::_internal_has_signinallowed() const {
bool value = (_has_bits_[1] & 0x00004000u) != 0;
PROTOBUF_ASSUME(!value || signinallowed_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_signinallowed() const {
return _internal_has_signinallowed();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_signinallowed() const {
const ::enterprise_management::BooleanPolicyProto* p = signinallowed_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::signinallowed() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SigninAllowed)
return _internal_signinallowed();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_signinallowed(
::enterprise_management::BooleanPolicyProto* signinallowed) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(signinallowed_);
}
signinallowed_ = signinallowed;
if (signinallowed) {
_has_bits_[1] |= 0x00004000u;
} else {
_has_bits_[1] &= ~0x00004000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.SigninAllowed)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_signinallowed() {
_has_bits_[1] &= ~0x00004000u;
::enterprise_management::BooleanPolicyProto* temp = signinallowed_;
signinallowed_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_signinallowed() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SigninAllowed)
_has_bits_[1] &= ~0x00004000u;
::enterprise_management::BooleanPolicyProto* temp = signinallowed_;
signinallowed_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_signinallowed() {
_has_bits_[1] |= 0x00004000u;
if (signinallowed_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
signinallowed_ = p;
}
return signinallowed_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_signinallowed() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_signinallowed();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SigninAllowed)
return _msg;
}
inline void CloudPolicySettings::set_allocated_signinallowed(::enterprise_management::BooleanPolicyProto* signinallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(signinallowed_);
}
if (signinallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(signinallowed));
if (message_arena != submessage_arena) {
signinallowed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, signinallowed, submessage_arena);
}
_has_bits_[1] |= 0x00004000u;
} else {
_has_bits_[1] &= ~0x00004000u;
}
signinallowed_ = signinallowed;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SigninAllowed)
}

// optional .enterprise_management.StringPolicyProto ProxyMode = 23;
inline bool CloudPolicySettings::_internal_has_proxymode() const {
bool value = (_has_bits_[0] & 0x00001000u) != 0;
PROTOBUF_ASSUME(!value || proxymode_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_proxymode() const {
return _internal_has_proxymode();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_proxymode() const {
const ::enterprise_management::StringPolicyProto* p = proxymode_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxymode() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyMode)
return _internal_proxymode();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_proxymode(
::enterprise_management::StringPolicyProto* proxymode) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxymode_);
}
proxymode_ = proxymode;
if (proxymode) {
_has_bits_[0] |= 0x00001000u;
} else {
_has_bits_[0] &= ~0x00001000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.ProxyMode)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxymode() {
_has_bits_[0] &= ~0x00001000u;
::enterprise_management::StringPolicyProto* temp = proxymode_;
proxymode_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_proxymode() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyMode)
_has_bits_[0] &= ~0x00001000u;
::enterprise_management::StringPolicyProto* temp = proxymode_;
proxymode_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_proxymode() {
_has_bits_[0] |= 0x00001000u;
if (proxymode_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
proxymode_ = p;
}
return proxymode_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxymode() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_proxymode();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyMode)
return _msg;
}
inline void CloudPolicySettings::set_allocated_proxymode(::enterprise_management::StringPolicyProto* proxymode) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxymode_);
}
if (proxymode) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxymode));
if (message_arena != submessage_arena) {
proxymode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, proxymode, submessage_arena);
}
_has_bits_[0] |= 0x00001000u;
} else {
_has_bits_[0] &= ~0x00001000u;
}
proxymode_ = proxymode;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyMode)
}

// optional .enterprise_management.IntegerPolicyProto ProxyServerMode = 24;
inline bool CloudPolicySettings::_internal_has_proxyservermode() const {
bool value = (_has_bits_[0] & 0x00002000u) != 0;
PROTOBUF_ASSUME(!value || proxyservermode_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_proxyservermode() const {
return _internal_has_proxyservermode();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::_internal_proxyservermode() const {
const ::enterprise_management::IntegerPolicyProto* p = proxyservermode_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::IntegerPolicyProto&>(
::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::proxyservermode() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyServerMode)
return _internal_proxyservermode();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_proxyservermode(
::enterprise_management::IntegerPolicyProto* proxyservermode) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxyservermode_);
}
proxyservermode_ = proxyservermode;
if (proxyservermode) {
_has_bits_[0] |= 0x00002000u;
} else {
_has_bits_[0] &= ~0x00002000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.ProxyServerMode)
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_proxyservermode() {
_has_bits_[0] &= ~0x00002000u;
::enterprise_management::IntegerPolicyProto* temp = proxyservermode_;
proxyservermode_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::unsafe_arena_release_proxyservermode() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyServerMode)
_has_bits_[0] &= ~0x00002000u;
::enterprise_management::IntegerPolicyProto* temp = proxyservermode_;
proxyservermode_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::_internal_mutable_proxyservermode() {
_has_bits_[0] |= 0x00002000u;
if (proxyservermode_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaForAllocation());
proxyservermode_ = p;
}
return proxyservermode_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_proxyservermode() {
::enterprise_management::IntegerPolicyProto* _msg = _internal_mutable_proxyservermode();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyServerMode)
return _msg;
}
inline void CloudPolicySettings::set_allocated_proxyservermode(::enterprise_management::IntegerPolicyProto* proxyservermode) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxyservermode_);
}
if (proxyservermode) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxyservermode));
if (message_arena != submessage_arena) {
proxyservermode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, proxyservermode, submessage_arena);
}
_has_bits_[0] |= 0x00002000u;
} else {
_has_bits_[0] &= ~0x00002000u;
}
proxyservermode_ = proxyservermode;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyServerMode)
}

// optional .enterprise_management.StringPolicyProto ProxyServer = 25;
inline bool CloudPolicySettings::_internal_has_proxyserver() const {
bool value = (_has_bits_[0] & 0x00004000u) != 0;
PROTOBUF_ASSUME(!value || proxyserver_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_proxyserver() const {
return _internal_has_proxyserver();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_proxyserver() const {
const ::enterprise_management::StringPolicyProto* p = proxyserver_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxyserver() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyServer)
return _internal_proxyserver();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_proxyserver(
::enterprise_management::StringPolicyProto* proxyserver) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxyserver_);
}
proxyserver_ = proxyserver;
if (proxyserver) {
_has_bits_[0] |= 0x00004000u;
} else {
_has_bits_[0] &= ~0x00004000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.ProxyServer)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxyserver() {
_has_bits_[0] &= ~0x00004000u;
::enterprise_management::StringPolicyProto* temp = proxyserver_;
proxyserver_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_proxyserver() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyServer)
_has_bits_[0] &= ~0x00004000u;
::enterprise_management::StringPolicyProto* temp = proxyserver_;
proxyserver_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_proxyserver() {
_has_bits_[0] |= 0x00004000u;
if (proxyserver_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
proxyserver_ = p;
}
return proxyserver_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxyserver() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_proxyserver();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyServer)
return _msg;
}
inline void CloudPolicySettings::set_allocated_proxyserver(::enterprise_management::StringPolicyProto* proxyserver) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxyserver_);
}
if (proxyserver) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxyserver));
if (message_arena != submessage_arena) {
proxyserver = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, proxyserver, submessage_arena);
}
_has_bits_[0] |= 0x00004000u;
} else {
_has_bits_[0] &= ~0x00004000u;
}
proxyserver_ = proxyserver;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyServer)
}

// optional .enterprise_management.StringPolicyProto ProxyPacUrl = 26;
inline bool CloudPolicySettings::_internal_has_proxypacurl() const {
bool value = (_has_bits_[0] & 0x00008000u) != 0;
PROTOBUF_ASSUME(!value || proxypacurl_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_proxypacurl() const {
return _internal_has_proxypacurl();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_proxypacurl() const {
const ::enterprise_management::StringPolicyProto* p = proxypacurl_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxypacurl() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyPacUrl)
return _internal_proxypacurl();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_proxypacurl(
::enterprise_management::StringPolicyProto* proxypacurl) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxypacurl_);
}
proxypacurl_ = proxypacurl;
if (proxypacurl) {
_has_bits_[0] |= 0x00008000u;
} else {
_has_bits_[0] &= ~0x00008000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.ProxyPacUrl)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxypacurl() {
_has_bits_[0] &= ~0x00008000u;
::enterprise_management::StringPolicyProto* temp = proxypacurl_;
proxypacurl_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_proxypacurl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyPacUrl)
_has_bits_[0] &= ~0x00008000u;
::enterprise_management::StringPolicyProto* temp = proxypacurl_;
proxypacurl_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_proxypacurl() {
_has_bits_[0] |= 0x00008000u;
if (proxypacurl_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
proxypacurl_ = p;
}
return proxypacurl_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxypacurl() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_proxypacurl();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyPacUrl)
return _msg;
}
inline void CloudPolicySettings::set_allocated_proxypacurl(::enterprise_management::StringPolicyProto* proxypacurl) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxypacurl_);
}
if (proxypacurl) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxypacurl));
if (message_arena != submessage_arena) {
proxypacurl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, proxypacurl, submessage_arena);
}
_has_bits_[0] |= 0x00008000u;
} else {
_has_bits_[0] &= ~0x00008000u;
}
proxypacurl_ = proxypacurl;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyPacUrl)
}

// optional .enterprise_management.StringPolicyProto ProxyBypassList = 27;
inline bool CloudPolicySettings::_internal_has_proxybypasslist() const {
bool value = (_has_bits_[0] & 0x00010000u) != 0;
PROTOBUF_ASSUME(!value || proxybypasslist_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_proxybypasslist() const {
return _internal_has_proxybypasslist();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_proxybypasslist() const {
const ::enterprise_management::StringPolicyProto* p = proxybypasslist_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxybypasslist() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyBypassList)
return _internal_proxybypasslist();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_proxybypasslist(
::enterprise_management::StringPolicyProto* proxybypasslist) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxybypasslist_);
}
proxybypasslist_ = proxybypasslist;
if (proxybypasslist) {
_has_bits_[0] |= 0x00010000u;
} else {
_has_bits_[0] &= ~0x00010000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.ProxyBypassList)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxybypasslist() {
_has_bits_[0] &= ~0x00010000u;
::enterprise_management::StringPolicyProto* temp = proxybypasslist_;
proxybypasslist_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_proxybypasslist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyBypassList)
_has_bits_[0] &= ~0x00010000u;
::enterprise_management::StringPolicyProto* temp = proxybypasslist_;
proxybypasslist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_proxybypasslist() {
_has_bits_[0] |= 0x00010000u;
if (proxybypasslist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
proxybypasslist_ = p;
}
return proxybypasslist_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxybypasslist() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_proxybypasslist();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyBypassList)
return _msg;
}
inline void CloudPolicySettings::set_allocated_proxybypasslist(::enterprise_management::StringPolicyProto* proxybypasslist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxybypasslist_);
}
if (proxybypasslist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxybypasslist));
if (message_arena != submessage_arena) {
proxybypasslist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, proxybypasslist, submessage_arena);
}
_has_bits_[0] |= 0x00010000u;
} else {
_has_bits_[0] &= ~0x00010000u;
}
proxybypasslist_ = proxybypasslist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyBypassList)
}

// optional .enterprise_management.StringPolicyProto ProxySettings = 118;
inline bool CloudPolicySettings::_internal_has_proxysettings() const {
bool value = (_has_bits_[1] & 0x00000200u) != 0;
PROTOBUF_ASSUME(!value || proxysettings_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_proxysettings() const {
return _internal_has_proxysettings();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_proxysettings() const {
const ::enterprise_management::StringPolicyProto* p = proxysettings_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxysettings() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxySettings)
return _internal_proxysettings();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_proxysettings(
::enterprise_management::StringPolicyProto* proxysettings) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxysettings_);
}
proxysettings_ = proxysettings;
if (proxysettings) {
_has_bits_[1] |= 0x00000200u;
} else {
_has_bits_[1] &= ~0x00000200u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.ProxySettings)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxysettings() {
_has_bits_[1] &= ~0x00000200u;
::enterprise_management::StringPolicyProto* temp = proxysettings_;
proxysettings_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_proxysettings() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxySettings)
_has_bits_[1] &= ~0x00000200u;
::enterprise_management::StringPolicyProto* temp = proxysettings_;
proxysettings_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_proxysettings() {
_has_bits_[1] |= 0x00000200u;
if (proxysettings_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
proxysettings_ = p;
}
return proxysettings_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxysettings() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_proxysettings();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxySettings)
return _msg;
}
inline void CloudPolicySettings::set_allocated_proxysettings(::enterprise_management::StringPolicyProto* proxysettings) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxysettings_);
}
if (proxysettings) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxysettings));
if (message_arena != submessage_arena) {
proxysettings = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, proxysettings, submessage_arena);
}
_has_bits_[1] |= 0x00000200u;
} else {
_has_bits_[1] &= ~0x00000200u;
}
proxysettings_ = proxysettings;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxySettings)
}

// optional .enterprise_management.StringPolicyProto AuthSchemes = 28;
inline bool CloudPolicySettings::_internal_has_authschemes() const {
bool value = (_has_bits_[0] & 0x00020000u) != 0;
PROTOBUF_ASSUME(!value || authschemes_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_authschemes() const {
return _internal_has_authschemes();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_authschemes() const {
const ::enterprise_management::StringPolicyProto* p = authschemes_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::authschemes() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AuthSchemes)
return _internal_authschemes();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_authschemes(
::enterprise_management::StringPolicyProto* authschemes) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(authschemes_);
}
authschemes_ = authschemes;
if (authschemes) {
_has_bits_[0] |= 0x00020000u;
} else {
_has_bits_[0] &= ~0x00020000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.AuthSchemes)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_authschemes() {
_has_bits_[0] &= ~0x00020000u;
::enterprise_management::StringPolicyProto* temp = authschemes_;
authschemes_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_authschemes() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AuthSchemes)
_has_bits_[0] &= ~0x00020000u;
::enterprise_management::StringPolicyProto* temp = authschemes_;
authschemes_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_authschemes() {
_has_bits_[0] |= 0x00020000u;
if (authschemes_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
authschemes_ = p;
}
return authschemes_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_authschemes() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_authschemes();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AuthSchemes)
return _msg;
}
inline void CloudPolicySettings::set_allocated_authschemes(::enterprise_management::StringPolicyProto* authschemes) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(authschemes_);
}
if (authschemes) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(authschemes));
if (message_arena != submessage_arena) {
authschemes = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, authschemes, submessage_arena);
}
_has_bits_[0] |= 0x00020000u;
} else {
_has_bits_[0] &= ~0x00020000u;
}
authschemes_ = authschemes;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AuthSchemes)
}

// optional .enterprise_management.StringListPolicyProto AllHttpAuthSchemesAllowedForOrigins = 952;
inline bool CloudPolicySettings::_internal_has_allhttpauthschemesallowedfororigins() const {
bool value = (_has_bits_[4] & 0x00001000u) != 0;
PROTOBUF_ASSUME(!value || allhttpauthschemesallowedfororigins_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_allhttpauthschemesallowedfororigins() const {
return _internal_has_allhttpauthschemesallowedfororigins();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_allhttpauthschemesallowedfororigins() const {
const ::enterprise_management::StringListPolicyProto* p = allhttpauthschemesallowedfororigins_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::allhttpauthschemesallowedfororigins() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllHttpAuthSchemesAllowedForOrigins)
return _internal_allhttpauthschemesallowedfororigins();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_allhttpauthschemesallowedfororigins(
::enterprise_management::StringListPolicyProto* allhttpauthschemesallowedfororigins) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(allhttpauthschemesallowedfororigins_);
}
allhttpauthschemesallowedfororigins_ = allhttpauthschemesallowedfororigins;
if (allhttpauthschemesallowedfororigins) {
_has_bits_[4] |= 0x00001000u;
} else {
_has_bits_[4] &= ~0x00001000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.AllHttpAuthSchemesAllowedForOrigins)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_allhttpauthschemesallowedfororigins() {
_has_bits_[4] &= ~0x00001000u;
::enterprise_management::StringListPolicyProto* temp = allhttpauthschemesallowedfororigins_;
allhttpauthschemesallowedfororigins_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_allhttpauthschemesallowedfororigins() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllHttpAuthSchemesAllowedForOrigins)
_has_bits_[4] &= ~0x00001000u;
::enterprise_management::StringListPolicyProto* temp = allhttpauthschemesallowedfororigins_;
allhttpauthschemesallowedfororigins_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_allhttpauthschemesallowedfororigins() {
_has_bits_[4] |= 0x00001000u;
if (allhttpauthschemesallowedfororigins_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
allhttpauthschemesallowedfororigins_ = p;
}
return allhttpauthschemesallowedfororigins_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_allhttpauthschemesallowedfororigins() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_allhttpauthschemesallowedfororigins();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllHttpAuthSchemesAllowedForOrigins)
return _msg;
}
inline void CloudPolicySettings::set_allocated_allhttpauthschemesallowedfororigins(::enterprise_management::StringListPolicyProto* allhttpauthschemesallowedfororigins) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(allhttpauthschemesallowedfororigins_);
}
if (allhttpauthschemesallowedfororigins) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(allhttpauthschemesallowedfororigins));
if (message_arena != submessage_arena) {
allhttpauthschemesallowedfororigins = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, allhttpauthschemesallowedfororigins, submessage_arena);
}
_has_bits_[4] |= 0x00001000u;
} else {
_has_bits_[4] &= ~0x00001000u;
}
allhttpauthschemesallowedfororigins_ = allhttpauthschemesallowedfororigins;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllHttpAuthSchemesAllowedForOrigins)
}

// optional .enterprise_management.BooleanPolicyProto DisableAuthNegotiateCnameLookup = 29;
inline bool CloudPolicySettings::_internal_has_disableauthnegotiatecnamelookup() const {
bool value = (_has_bits_[0] & 0x00040000u) != 0;
PROTOBUF_ASSUME(!value || disableauthnegotiatecnamelookup_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_disableauthnegotiatecnamelookup() const {
return _internal_has_disableauthnegotiatecnamelookup();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_disableauthnegotiatecnamelookup() const {
const ::enterprise_management::BooleanPolicyProto* p = disableauthnegotiatecnamelookup_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::disableauthnegotiatecnamelookup() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisableAuthNegotiateCnameLookup)
return _internal_disableauthnegotiatecnamelookup();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_disableauthnegotiatecnamelookup(
::enterprise_management::BooleanPolicyProto* disableauthnegotiatecnamelookup) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(disableauthnegotiatecnamelookup_);
}
disableauthnegotiatecnamelookup_ = disableauthnegotiatecnamelookup;
if (disableauthnegotiatecnamelookup) {
_has_bits_[0] |= 0x00040000u;
} else {
_has_bits_[0] &= ~0x00040000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.DisableAuthNegotiateCnameLookup)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_disableauthnegotiatecnamelookup() {
_has_bits_[0] &= ~0x00040000u;
::enterprise_management::BooleanPolicyProto* temp = disableauthnegotiatecnamelookup_;
disableauthnegotiatecnamelookup_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_disableauthnegotiatecnamelookup() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisableAuthNegotiateCnameLookup)
_has_bits_[0] &= ~0x00040000u;
::enterprise_management::BooleanPolicyProto* temp = disableauthnegotiatecnamelookup_;
disableauthnegotiatecnamelookup_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_disableauthnegotiatecnamelookup() {
_has_bits_[0] |= 0x00040000u;
if (disableauthnegotiatecnamelookup_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
disableauthnegotiatecnamelookup_ = p;
}
return disableauthnegotiatecnamelookup_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_disableauthnegotiatecnamelookup() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_disableauthnegotiatecnamelookup();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisableAuthNegotiateCnameLookup)
return _msg;
}
inline void CloudPolicySettings::set_allocated_disableauthnegotiatecnamelookup(::enterprise_management::BooleanPolicyProto* disableauthnegotiatecnamelookup) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(disableauthnegotiatecnamelookup_);
}
if (disableauthnegotiatecnamelookup) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(disableauthnegotiatecnamelookup));
if (message_arena != submessage_arena) {
disableauthnegotiatecnamelookup = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, disableauthnegotiatecnamelookup, submessage_arena);
}
_has_bits_[0] |= 0x00040000u;
} else {
_has_bits_[0] &= ~0x00040000u;
}
disableauthnegotiatecnamelookup_ = disableauthnegotiatecnamelookup;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisableAuthNegotiateCnameLookup)
}

// optional .enterprise_management.StringPolicyProto AuthServerAllowlist = 749;
inline bool CloudPolicySettings::_internal_has_authserverallowlist() const {
bool value = (_has_bits_[3] & 0x00004000u) != 0;
PROTOBUF_ASSUME(!value || authserverallowlist_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_authserverallowlist() const {
return _internal_has_authserverallowlist();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_authserverallowlist() const {
const ::enterprise_management::StringPolicyProto* p = authserverallowlist_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::authserverallowlist() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AuthServerAllowlist)
return _internal_authserverallowlist();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_authserverallowlist(
::enterprise_management::StringPolicyProto* authserverallowlist) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(authserverallowlist_);
}
authserverallowlist_ = authserverallowlist;
if (authserverallowlist) {
_has_bits_[3] |= 0x00004000u;
} else {
_has_bits_[3] &= ~0x00004000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.AuthServerAllowlist)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_authserverallowlist() {
_has_bits_[3] &= ~0x00004000u;
::enterprise_management::StringPolicyProto* temp = authserverallowlist_;
authserverallowlist_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_authserverallowlist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AuthServerAllowlist)
_has_bits_[3] &= ~0x00004000u;
::enterprise_management::StringPolicyProto* temp = authserverallowlist_;
authserverallowlist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_authserverallowlist() {
_has_bits_[3] |= 0x00004000u;
if (authserverallowlist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
authserverallowlist_ = p;
}
return authserverallowlist_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_authserverallowlist() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_authserverallowlist();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AuthServerAllowlist)
return _msg;
}
inline void CloudPolicySettings::set_allocated_authserverallowlist(::enterprise_management::StringPolicyProto* authserverallowlist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(authserverallowlist_);
}
if (authserverallowlist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(authserverallowlist));
if (message_arena != submessage_arena) {
authserverallowlist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, authserverallowlist, submessage_arena);
}
_has_bits_[3] |= 0x00004000u;
} else {
_has_bits_[3] &= ~0x00004000u;
}
authserverallowlist_ = authserverallowlist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AuthServerAllowlist)
}

// optional .enterprise_management.StringPolicyProto AuthNegotiateDelegateAllowlist = 748;
inline bool CloudPolicySettings::_internal_has_authnegotiatedelegateallowlist() const {
bool value = (_has_bits_[3] & 0x00002000u) != 0;
PROTOBUF_ASSUME(!value || authnegotiatedelegateallowlist_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_authnegotiatedelegateallowlist() const {
return _internal_has_authnegotiatedelegateallowlist();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_authnegotiatedelegateallowlist() const {
const ::enterprise_management::StringPolicyProto* p = authnegotiatedelegateallowlist_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::authnegotiatedelegateallowlist() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateAllowlist)
return _internal_authnegotiatedelegateallowlist();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_authnegotiatedelegateallowlist(
::enterprise_management::StringPolicyProto* authnegotiatedelegateallowlist) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(authnegotiatedelegateallowlist_);
}
authnegotiatedelegateallowlist_ = authnegotiatedelegateallowlist;
if (authnegotiatedelegateallowlist) {
_has_bits_[3] |= 0x00002000u;
} else {
_has_bits_[3] &= ~0x00002000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateAllowlist)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_authnegotiatedelegateallowlist() {
_has_bits_[3] &= ~0x00002000u;
::enterprise_management::StringPolicyProto* temp = authnegotiatedelegateallowlist_;
authnegotiatedelegateallowlist_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_authnegotiatedelegateallowlist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateAllowlist)
_has_bits_[3] &= ~0x00002000u;
::enterprise_management::StringPolicyProto* temp = authnegotiatedelegateallowlist_;
authnegotiatedelegateallowlist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_authnegotiatedelegateallowlist() {
_has_bits_[3] |= 0x00002000u;
if (authnegotiatedelegateallowlist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
authnegotiatedelegateallowlist_ = p;
}
return authnegotiatedelegateallowlist_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_authnegotiatedelegateallowlist() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_authnegotiatedelegateallowlist();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateAllowlist)
return _msg;
}
inline void CloudPolicySettings::set_allocated_authnegotiatedelegateallowlist(::enterprise_management::StringPolicyProto* authnegotiatedelegateallowlist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(authnegotiatedelegateallowlist_);
}
if (authnegotiatedelegateallowlist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(authnegotiatedelegateallowlist));
if (message_arena != submessage_arena) {
authnegotiatedelegateallowlist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, authnegotiatedelegateallowlist, submessage_arena);
}
_has_bits_[3] |= 0x00002000u;
} else {
_has_bits_[3] &= ~0x00002000u;
}
authnegotiatedelegateallowlist_ = authnegotiatedelegateallowlist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateAllowlist)
}

// optional .enterprise_management.StringPolicyProto AuthAndroidNegotiateAccountType = 307;
inline bool CloudPolicySettings::_internal_has_authandroidnegotiateaccounttype() const {
bool value = (_has_bits_[1] & 0x10000000u) != 0;
PROTOBUF_ASSUME(!value || authandroidnegotiateaccounttype_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_authandroidnegotiateaccounttype() const {
return _internal_has_authandroidnegotiateaccounttype();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_authandroidnegotiateaccounttype() const {
const ::enterprise_management::StringPolicyProto* p = authandroidnegotiateaccounttype_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::authandroidnegotiateaccounttype() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AuthAndroidNegotiateAccountType)
return _internal_authandroidnegotiateaccounttype();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_authandroidnegotiateaccounttype(
::enterprise_management::StringPolicyProto* authandroidnegotiateaccounttype) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(authandroidnegotiateaccounttype_);
}
authandroidnegotiateaccounttype_ = authandroidnegotiateaccounttype;
if (authandroidnegotiateaccounttype) {
_has_bits_[1] |= 0x10000000u;
} else {
_has_bits_[1] &= ~0x10000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.AuthAndroidNegotiateAccountType)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_authandroidnegotiateaccounttype() {
_has_bits_[1] &= ~0x10000000u;
::enterprise_management::StringPolicyProto* temp = authandroidnegotiateaccounttype_;
authandroidnegotiateaccounttype_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_authandroidnegotiateaccounttype() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AuthAndroidNegotiateAccountType)
_has_bits_[1] &= ~0x10000000u;
::enterprise_management::StringPolicyProto* temp = authandroidnegotiateaccounttype_;
authandroidnegotiateaccounttype_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_authandroidnegotiateaccounttype() {
_has_bits_[1] |= 0x10000000u;
if (authandroidnegotiateaccounttype_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
authandroidnegotiateaccounttype_ = p;
}
return authandroidnegotiateaccounttype_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_authandroidnegotiateaccounttype() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_authandroidnegotiateaccounttype();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AuthAndroidNegotiateAccountType)
return _msg;
}
inline void CloudPolicySettings::set_allocated_authandroidnegotiateaccounttype(::enterprise_management::StringPolicyProto* authandroidnegotiateaccounttype) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(authandroidnegotiateaccounttype_);
}
if (authandroidnegotiateaccounttype) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(authandroidnegotiateaccounttype));
if (message_arena != submessage_arena) {
authandroidnegotiateaccounttype = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, authandroidnegotiateaccounttype, submessage_arena);
}
_has_bits_[1] |= 0x10000000u;
} else {
_has_bits_[1] &= ~0x10000000u;
}
authandroidnegotiateaccounttype_ = authandroidnegotiateaccounttype;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AuthAndroidNegotiateAccountType)
}

// optional .enterprise_management.BooleanPolicyProto NtlmV2Enabled = 395;
inline bool CloudPolicySettings::_internal_has_ntlmv2enabled() const {
bool value = (_has_bits_[2] & 0x00000100u) != 0;
PROTOBUF_ASSUME(!value || ntlmv2enabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_ntlmv2enabled() const {
return _internal_has_ntlmv2enabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_ntlmv2enabled() const {
const ::enterprise_management::BooleanPolicyProto* p = ntlmv2enabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::ntlmv2enabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NtlmV2Enabled)
return _internal_ntlmv2enabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_ntlmv2enabled(
::enterprise_management::BooleanPolicyProto* ntlmv2enabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ntlmv2enabled_);
}
ntlmv2enabled_ = ntlmv2enabled;
if (ntlmv2enabled) {
_has_bits_[2] |= 0x00000100u;
} else {
_has_bits_[2] &= ~0x00000100u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.NtlmV2Enabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_ntlmv2enabled() {
_has_bits_[2] &= ~0x00000100u;
::enterprise_management::BooleanPolicyProto* temp = ntlmv2enabled_;
ntlmv2enabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_ntlmv2enabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NtlmV2Enabled)
_has_bits_[2] &= ~0x00000100u;
::enterprise_management::BooleanPolicyProto* temp = ntlmv2enabled_;
ntlmv2enabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_ntlmv2enabled() {
_has_bits_[2] |= 0x00000100u;
if (ntlmv2enabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
ntlmv2enabled_ = p;
}
return ntlmv2enabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_ntlmv2enabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_ntlmv2enabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NtlmV2Enabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_ntlmv2enabled(::enterprise_management::BooleanPolicyProto* ntlmv2enabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ntlmv2enabled_);
}
if (ntlmv2enabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ntlmv2enabled));
if (message_arena != submessage_arena) {
ntlmv2enabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, ntlmv2enabled, submessage_arena);
}
_has_bits_[2] |= 0x00000100u;
} else {
_has_bits_[2] &= ~0x00000100u;
}
ntlmv2enabled_ = ntlmv2enabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NtlmV2Enabled)
}

// optional .enterprise_management.BooleanPolicyProto BlockThirdPartyCookies = 41;
inline bool CloudPolicySettings::_internal_has_blockthirdpartycookies() const {
bool value = (_has_bits_[0] & 0x00080000u) != 0;
PROTOBUF_ASSUME(!value || blockthirdpartycookies_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_blockthirdpartycookies() const {
return _internal_has_blockthirdpartycookies();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_blockthirdpartycookies() const {
const ::enterprise_management::BooleanPolicyProto* p = blockthirdpartycookies_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::blockthirdpartycookies() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BlockThirdPartyCookies)
return _internal_blockthirdpartycookies();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_blockthirdpartycookies(
::enterprise_management::BooleanPolicyProto* blockthirdpartycookies) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blockthirdpartycookies_);
}
blockthirdpartycookies_ = blockthirdpartycookies;
if (blockthirdpartycookies) {
_has_bits_[0] |= 0x00080000u;
} else {
_has_bits_[0] &= ~0x00080000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.BlockThirdPartyCookies)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_blockthirdpartycookies() {
_has_bits_[0] &= ~0x00080000u;
::enterprise_management::BooleanPolicyProto* temp = blockthirdpartycookies_;
blockthirdpartycookies_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_blockthirdpartycookies() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BlockThirdPartyCookies)
_has_bits_[0] &= ~0x00080000u;
::enterprise_management::BooleanPolicyProto* temp = blockthirdpartycookies_;
blockthirdpartycookies_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_blockthirdpartycookies() {
_has_bits_[0] |= 0x00080000u;
if (blockthirdpartycookies_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
blockthirdpartycookies_ = p;
}
return blockthirdpartycookies_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_blockthirdpartycookies() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_blockthirdpartycookies();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BlockThirdPartyCookies)
return _msg;
}
inline void CloudPolicySettings::set_allocated_blockthirdpartycookies(::enterprise_management::BooleanPolicyProto* blockthirdpartycookies) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(blockthirdpartycookies_);
}
if (blockthirdpartycookies) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blockthirdpartycookies));
if (message_arena != submessage_arena) {
blockthirdpartycookies = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, blockthirdpartycookies, submessage_arena);
}
_has_bits_[0] |= 0x00080000u;
} else {
_has_bits_[0] &= ~0x00080000u;
}
blockthirdpartycookies_ = blockthirdpartycookies;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BlockThirdPartyCookies)
}

// optional .enterprise_management.BooleanPolicyProto DefaultSearchProviderEnabled = 42;
inline bool CloudPolicySettings::_internal_has_defaultsearchproviderenabled() const {
bool value = (_has_bits_[0] & 0x00100000u) != 0;
PROTOBUF_ASSUME(!value || defaultsearchproviderenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_defaultsearchproviderenabled() const {
return _internal_has_defaultsearchproviderenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_defaultsearchproviderenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = defaultsearchproviderenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::defaultsearchproviderenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderEnabled)
return _internal_defaultsearchproviderenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_defaultsearchproviderenabled(
::enterprise_management::BooleanPolicyProto* defaultsearchproviderenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchproviderenabled_);
}
defaultsearchproviderenabled_ = defaultsearchproviderenabled;
if (defaultsearchproviderenabled) {
_has_bits_[0] |= 0x00100000u;
} else {
_has_bits_[0] &= ~0x00100000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_defaultsearchproviderenabled() {
_has_bits_[0] &= ~0x00100000u;
::enterprise_management::BooleanPolicyProto* temp = defaultsearchproviderenabled_;
defaultsearchproviderenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_defaultsearchproviderenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderEnabled)
_has_bits_[0] &= ~0x00100000u;
::enterprise_management::BooleanPolicyProto* temp = defaultsearchproviderenabled_;
defaultsearchproviderenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_defaultsearchproviderenabled() {
_has_bits_[0] |= 0x00100000u;
if (defaultsearchproviderenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
defaultsearchproviderenabled_ = p;
}
return defaultsearchproviderenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_defaultsearchproviderenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_defaultsearchproviderenabled(::enterprise_management::BooleanPolicyProto* defaultsearchproviderenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchproviderenabled_);
}
if (defaultsearchproviderenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchproviderenabled));
if (message_arena != submessage_arena) {
defaultsearchproviderenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchproviderenabled, submessage_arena);
}
_has_bits_[0] |= 0x00100000u;
} else {
_has_bits_[0] &= ~0x00100000u;
}
defaultsearchproviderenabled_ = defaultsearchproviderenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderEnabled)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderName = 43;
inline bool CloudPolicySettings::_internal_has_defaultsearchprovidername() const {
bool value = (_has_bits_[0] & 0x00200000u) != 0;
PROTOBUF_ASSUME(!value || defaultsearchprovidername_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_defaultsearchprovidername() const {
return _internal_has_defaultsearchprovidername();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_defaultsearchprovidername() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchprovidername_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidername() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderName)
return _internal_defaultsearchprovidername();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_defaultsearchprovidername(
::enterprise_management::StringPolicyProto* defaultsearchprovidername) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidername_);
}
defaultsearchprovidername_ = defaultsearchprovidername;
if (defaultsearchprovidername) {
_has_bits_[0] |= 0x00200000u;
} else {
_has_bits_[0] &= ~0x00200000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderName)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidername() {
_has_bits_[0] &= ~0x00200000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidername_;
defaultsearchprovidername_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_defaultsearchprovidername() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderName)
_has_bits_[0] &= ~0x00200000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidername_;
defaultsearchprovidername_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_defaultsearchprovidername() {
_has_bits_[0] |= 0x00200000u;
if (defaultsearchprovidername_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
defaultsearchprovidername_ = p;
}
return defaultsearchprovidername_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidername() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_defaultsearchprovidername();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderName)
return _msg;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidername(::enterprise_management::StringPolicyProto* defaultsearchprovidername) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidername_);
}
if (defaultsearchprovidername) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidername));
if (message_arena != submessage_arena) {
defaultsearchprovidername = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchprovidername, submessage_arena);
}
_has_bits_[0] |= 0x00200000u;
} else {
_has_bits_[0] &= ~0x00200000u;
}
defaultsearchprovidername_ = defaultsearchprovidername;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderName)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderKeyword = 44;
inline bool CloudPolicySettings::_internal_has_defaultsearchproviderkeyword() const {
bool value = (_has_bits_[0] & 0x00400000u) != 0;
PROTOBUF_ASSUME(!value || defaultsearchproviderkeyword_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_defaultsearchproviderkeyword() const {
return _internal_has_defaultsearchproviderkeyword();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_defaultsearchproviderkeyword() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchproviderkeyword_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchproviderkeyword() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderKeyword)
return _internal_defaultsearchproviderkeyword();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_defaultsearchproviderkeyword(
::enterprise_management::StringPolicyProto* defaultsearchproviderkeyword) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchproviderkeyword_);
}
defaultsearchproviderkeyword_ = defaultsearchproviderkeyword;
if (defaultsearchproviderkeyword) {
_has_bits_[0] |= 0x00400000u;
} else {
_has_bits_[0] &= ~0x00400000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderKeyword)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchproviderkeyword() {
_has_bits_[0] &= ~0x00400000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchproviderkeyword_;
defaultsearchproviderkeyword_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_defaultsearchproviderkeyword() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderKeyword)
_has_bits_[0] &= ~0x00400000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchproviderkeyword_;
defaultsearchproviderkeyword_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_defaultsearchproviderkeyword() {
_has_bits_[0] |= 0x00400000u;
if (defaultsearchproviderkeyword_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
defaultsearchproviderkeyword_ = p;
}
return defaultsearchproviderkeyword_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderkeyword() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_defaultsearchproviderkeyword();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderKeyword)
return _msg;
}
inline void CloudPolicySettings::set_allocated_defaultsearchproviderkeyword(::enterprise_management::StringPolicyProto* defaultsearchproviderkeyword) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchproviderkeyword_);
}
if (defaultsearchproviderkeyword) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchproviderkeyword));
if (message_arena != submessage_arena) {
defaultsearchproviderkeyword = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchproviderkeyword, submessage_arena);
}
_has_bits_[0] |= 0x00400000u;
} else {
_has_bits_[0] &= ~0x00400000u;
}
defaultsearchproviderkeyword_ = defaultsearchproviderkeyword;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderKeyword)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURL = 45;
inline bool CloudPolicySettings::_internal_has_defaultsearchprovidersearchurl() const {
bool value = (_has_bits_[0] & 0x00800000u) != 0;
PROTOBUF_ASSUME(!value || defaultsearchprovidersearchurl_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_defaultsearchprovidersearchurl() const {
return _internal_has_defaultsearchprovidersearchurl();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_defaultsearchprovidersearchurl() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchprovidersearchurl_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidersearchurl() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURL)
return _internal_defaultsearchprovidersearchurl();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_defaultsearchprovidersearchurl(
::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurl) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidersearchurl_);
}
defaultsearchprovidersearchurl_ = defaultsearchprovidersearchurl;
if (defaultsearchprovidersearchurl) {
_has_bits_[0] |= 0x00800000u;
} else {
_has_bits_[0] &= ~0x00800000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURL)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidersearchurl() {
_has_bits_[0] &= ~0x00800000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersearchurl_;
defaultsearchprovidersearchurl_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_defaultsearchprovidersearchurl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURL)
_has_bits_[0] &= ~0x00800000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersearchurl_;
defaultsearchprovidersearchurl_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_defaultsearchprovidersearchurl() {
_has_bits_[0] |= 0x00800000u;
if (defaultsearchprovidersearchurl_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
defaultsearchprovidersearchurl_ = p;
}
return defaultsearchprovidersearchurl_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidersearchurl() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_defaultsearchprovidersearchurl();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURL)
return _msg;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidersearchurl(::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurl) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidersearchurl_);
}
if (defaultsearchprovidersearchurl) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidersearchurl));
if (message_arena != submessage_arena) {
defaultsearchprovidersearchurl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchprovidersearchurl, submessage_arena);
}
_has_bits_[0] |= 0x00800000u;
} else {
_has_bits_[0] &= ~0x00800000u;
}
defaultsearchprovidersearchurl_ = defaultsearchprovidersearchurl;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURL)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURL = 46;
inline bool CloudPolicySettings::_internal_has_defaultsearchprovidersuggesturl() const {
bool value = (_has_bits_[0] & 0x01000000u) != 0;
PROTOBUF_ASSUME(!value || defaultsearchprovidersuggesturl_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_defaultsearchprovidersuggesturl() const {
return _internal_has_defaultsearchprovidersuggesturl();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_defaultsearchprovidersuggesturl() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchprovidersuggesturl_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidersuggesturl() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURL)
return _internal_defaultsearchprovidersuggesturl();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_defaultsearchprovidersuggesturl(
::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturl) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidersuggesturl_);
}
defaultsearchprovidersuggesturl_ = defaultsearchprovidersuggesturl;
if (defaultsearchprovidersuggesturl) {
_has_bits_[0] |= 0x01000000u;
} else {
_has_bits_[0] &= ~0x01000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURL)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidersuggesturl() {
_has_bits_[0] &= ~0x01000000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersuggesturl_;
defaultsearchprovidersuggesturl_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_defaultsearchprovidersuggesturl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURL)
_has_bits_[0] &= ~0x01000000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersuggesturl_;
defaultsearchprovidersuggesturl_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_defaultsearchprovidersuggesturl() {
_has_bits_[0] |= 0x01000000u;
if (defaultsearchprovidersuggesturl_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
defaultsearchprovidersuggesturl_ = p;
}
return defaultsearchprovidersuggesturl_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidersuggesturl() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_defaultsearchprovidersuggesturl();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURL)
return _msg;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidersuggesturl(::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturl) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidersuggesturl_);
}
if (defaultsearchprovidersuggesturl) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidersuggesturl));
if (message_arena != submessage_arena) {
defaultsearchprovidersuggesturl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchprovidersuggesturl, submessage_arena);
}
_has_bits_[0] |= 0x01000000u;
} else {
_has_bits_[0] &= ~0x01000000u;
}
defaultsearchprovidersuggesturl_ = defaultsearchprovidersuggesturl;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURL)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderIconURL = 48;
inline bool CloudPolicySettings::_internal_has_defaultsearchprovidericonurl() const {
bool value = (_has_bits_[0] & 0x02000000u) != 0;
PROTOBUF_ASSUME(!value || defaultsearchprovidericonurl_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_defaultsearchprovidericonurl() const {
return _internal_has_defaultsearchprovidericonurl();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_defaultsearchprovidericonurl() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchprovidericonurl_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidericonurl() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderIconURL)
return _internal_defaultsearchprovidericonurl();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_defaultsearchprovidericonurl(
::enterprise_management::StringPolicyProto* defaultsearchprovidericonurl) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidericonurl_);
}
defaultsearchprovidericonurl_ = defaultsearchprovidericonurl;
if (defaultsearchprovidericonurl) {
_has_bits_[0] |= 0x02000000u;
} else {
_has_bits_[0] &= ~0x02000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderIconURL)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidericonurl() {
_has_bits_[0] &= ~0x02000000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidericonurl_;
defaultsearchprovidericonurl_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_defaultsearchprovidericonurl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderIconURL)
_has_bits_[0] &= ~0x02000000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidericonurl_;
defaultsearchprovidericonurl_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_defaultsearchprovidericonurl() {
_has_bits_[0] |= 0x02000000u;
if (defaultsearchprovidericonurl_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
defaultsearchprovidericonurl_ = p;
}
return defaultsearchprovidericonurl_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidericonurl() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_defaultsearchprovidericonurl();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderIconURL)
return _msg;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidericonurl(::enterprise_management::StringPolicyProto* defaultsearchprovidericonurl) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidericonurl_);
}
if (defaultsearchprovidericonurl) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidericonurl));
if (message_arena != submessage_arena) {
defaultsearchprovidericonurl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchprovidericonurl, submessage_arena);
}
_has_bits_[0] |= 0x02000000u;
} else {
_has_bits_[0] &= ~0x02000000u;
}
defaultsearchprovidericonurl_ = defaultsearchprovidericonurl;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderIconURL)
}

// optional .enterprise_management.StringListPolicyProto DefaultSearchProviderEncodings = 49;
inline bool CloudPolicySettings::_internal_has_defaultsearchproviderencodings() const {
bool value = (_has_bits_[0] & 0x04000000u) != 0;
PROTOBUF_ASSUME(!value || defaultsearchproviderencodings_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_defaultsearchproviderencodings() const {
return _internal_has_defaultsearchproviderencodings();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_defaultsearchproviderencodings() const {
const ::enterprise_management::StringListPolicyProto* p = defaultsearchproviderencodings_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::defaultsearchproviderencodings() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderEncodings)
return _internal_defaultsearchproviderencodings();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_defaultsearchproviderencodings(
::enterprise_management::StringListPolicyProto* defaultsearchproviderencodings) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchproviderencodings_);
}
defaultsearchproviderencodings_ = defaultsearchproviderencodings;
if (defaultsearchproviderencodings) {
_has_bits_[0] |= 0x04000000u;
} else {
_has_bits_[0] &= ~0x04000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderEncodings)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_defaultsearchproviderencodings() {
_has_bits_[0] &= ~0x04000000u;
::enterprise_management::StringListPolicyProto* temp = defaultsearchproviderencodings_;
defaultsearchproviderencodings_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_defaultsearchproviderencodings() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderEncodings)
_has_bits_[0] &= ~0x04000000u;
::enterprise_management::StringListPolicyProto* temp = defaultsearchproviderencodings_;
defaultsearchproviderencodings_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_defaultsearchproviderencodings() {
_has_bits_[0] |= 0x04000000u;
if (defaultsearchproviderencodings_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
defaultsearchproviderencodings_ = p;
}
return defaultsearchproviderencodings_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderencodings() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_defaultsearchproviderencodings();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderEncodings)
return _msg;
}
inline void CloudPolicySettings::set_allocated_defaultsearchproviderencodings(::enterprise_management::StringListPolicyProto* defaultsearchproviderencodings) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchproviderencodings_);
}
if (defaultsearchproviderencodings) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchproviderencodings));
if (message_arena != submessage_arena) {
defaultsearchproviderencodings = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchproviderencodings, submessage_arena);
}
_has_bits_[0] |= 0x04000000u;
} else {
_has_bits_[0] &= ~0x04000000u;
}
defaultsearchproviderencodings_ = defaultsearchproviderencodings;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderEncodings)
}

// optional .enterprise_management.StringListPolicyProto DefaultSearchProviderAlternateURLs = 163;
inline bool CloudPolicySettings::_internal_has_defaultsearchprovideralternateurls() const {
bool value = (_has_bits_[1] & 0x00000800u) != 0;
PROTOBUF_ASSUME(!value || defaultsearchprovideralternateurls_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_defaultsearchprovideralternateurls() const {
return _internal_has_defaultsearchprovideralternateurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_defaultsearchprovideralternateurls() const {
const ::enterprise_management::StringListPolicyProto* p = defaultsearchprovideralternateurls_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::defaultsearchprovideralternateurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderAlternateURLs)
return _internal_defaultsearchprovideralternateurls();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_defaultsearchprovideralternateurls(
::enterprise_management::StringListPolicyProto* defaultsearchprovideralternateurls) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovideralternateurls_);
}
defaultsearchprovideralternateurls_ = defaultsearchprovideralternateurls;
if (defaultsearchprovideralternateurls) {
_has_bits_[1] |= 0x00000800u;
} else {
_has_bits_[1] &= ~0x00000800u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderAlternateURLs)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_defaultsearchprovideralternateurls() {
_has_bits_[1] &= ~0x00000800u;
::enterprise_management::StringListPolicyProto* temp = defaultsearchprovideralternateurls_;
defaultsearchprovideralternateurls_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_defaultsearchprovideralternateurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderAlternateURLs)
_has_bits_[1] &= ~0x00000800u;
::enterprise_management::StringListPolicyProto* temp = defaultsearchprovideralternateurls_;
defaultsearchprovideralternateurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_defaultsearchprovideralternateurls() {
_has_bits_[1] |= 0x00000800u;
if (defaultsearchprovideralternateurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
defaultsearchprovideralternateurls_ = p;
}
return defaultsearchprovideralternateurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_defaultsearchprovideralternateurls() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_defaultsearchprovideralternateurls();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderAlternateURLs)
return _msg;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovideralternateurls(::enterprise_management::StringListPolicyProto* defaultsearchprovideralternateurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovideralternateurls_);
}
if (defaultsearchprovideralternateurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovideralternateurls));
if (message_arena != submessage_arena) {
defaultsearchprovideralternateurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchprovideralternateurls, submessage_arena);
}
_has_bits_[1] |= 0x00000800u;
} else {
_has_bits_[1] &= ~0x00000800u;
}
defaultsearchprovideralternateurls_ = defaultsearchprovideralternateurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderAlternateURLs)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURL = 231;
inline bool CloudPolicySettings::_internal_has_defaultsearchproviderimageurl() const {
bool value = (_has_bits_[1] & 0x00020000u) != 0;
PROTOBUF_ASSUME(!value || defaultsearchproviderimageurl_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_defaultsearchproviderimageurl() const {
return _internal_has_defaultsearchproviderimageurl();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_defaultsearchproviderimageurl() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchproviderimageurl_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchproviderimageurl() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURL)
return _internal_defaultsearchproviderimageurl();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_defaultsearchproviderimageurl(
::enterprise_management::StringPolicyProto* defaultsearchproviderimageurl) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchproviderimageurl_);
}
defaultsearchproviderimageurl_ = defaultsearchproviderimageurl;
if (defaultsearchproviderimageurl) {
_has_bits_[1] |= 0x00020000u;
} else {
_has_bits_[1] &= ~0x00020000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURL)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchproviderimageurl() {
_has_bits_[1] &= ~0x00020000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchproviderimageurl_;
defaultsearchproviderimageurl_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_defaultsearchproviderimageurl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURL)
_has_bits_[1] &= ~0x00020000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchproviderimageurl_;
defaultsearchproviderimageurl_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_defaultsearchproviderimageurl() {
_has_bits_[1] |= 0x00020000u;
if (defaultsearchproviderimageurl_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
defaultsearchproviderimageurl_ = p;
}
return defaultsearchproviderimageurl_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderimageurl() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_defaultsearchproviderimageurl();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURL)
return _msg;
}
inline void CloudPolicySettings::set_allocated_defaultsearchproviderimageurl(::enterprise_management::StringPolicyProto* defaultsearchproviderimageurl) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchproviderimageurl_);
}
if (defaultsearchproviderimageurl) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchproviderimageurl));
if (message_arena != submessage_arena) {
defaultsearchproviderimageurl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchproviderimageurl, submessage_arena);
}
_has_bits_[1] |= 0x00020000u;
} else {
_has_bits_[1] &= ~0x00020000u;
}
defaultsearchproviderimageurl_ = defaultsearchproviderimageurl;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURL)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderNewTabURL = 239;
inline bool CloudPolicySettings::_internal_has_defaultsearchprovidernewtaburl() const {
bool value = (_has_bits_[1] & 0x00200000u) != 0;
PROTOBUF_ASSUME(!value || defaultsearchprovidernewtaburl_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_defaultsearchprovidernewtaburl() const {
return _internal_has_defaultsearchprovidernewtaburl();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_defaultsearchprovidernewtaburl() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchprovidernewtaburl_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidernewtaburl() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderNewTabURL)
return _internal_defaultsearchprovidernewtaburl();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_defaultsearchprovidernewtaburl(
::enterprise_management::StringPolicyProto* defaultsearchprovidernewtaburl) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidernewtaburl_);
}
defaultsearchprovidernewtaburl_ = defaultsearchprovidernewtaburl;
if (defaultsearchprovidernewtaburl) {
_has_bits_[1] |= 0x00200000u;
} else {
_has_bits_[1] &= ~0x00200000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderNewTabURL)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidernewtaburl() {
_has_bits_[1] &= ~0x00200000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidernewtaburl_;
defaultsearchprovidernewtaburl_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_defaultsearchprovidernewtaburl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderNewTabURL)
_has_bits_[1] &= ~0x00200000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidernewtaburl_;
defaultsearchprovidernewtaburl_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_defaultsearchprovidernewtaburl() {
_has_bits_[1] |= 0x00200000u;
if (defaultsearchprovidernewtaburl_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
defaultsearchprovidernewtaburl_ = p;
}
return defaultsearchprovidernewtaburl_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidernewtaburl() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_defaultsearchprovidernewtaburl();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderNewTabURL)
return _msg;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidernewtaburl(::enterprise_management::StringPolicyProto* defaultsearchprovidernewtaburl) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidernewtaburl_);
}
if (defaultsearchprovidernewtaburl) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidernewtaburl));
if (message_arena != submessage_arena) {
defaultsearchprovidernewtaburl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchprovidernewtaburl, submessage_arena);
}
_has_bits_[1] |= 0x00200000u;
} else {
_has_bits_[1] &= ~0x00200000u;
}
defaultsearchprovidernewtaburl_ = defaultsearchprovidernewtaburl;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderNewTabURL)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURLPostParams = 232;
inline bool CloudPolicySettings::_internal_has_defaultsearchprovidersearchurlpostparams() const {
bool value = (_has_bits_[1] & 0x00040000u) != 0;
PROTOBUF_ASSUME(!value || defaultsearchprovidersearchurlpostparams_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_defaultsearchprovidersearchurlpostparams() const {
return _internal_has_defaultsearchprovidersearchurlpostparams();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_defaultsearchprovidersearchurlpostparams() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchprovidersearchurlpostparams_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidersearchurlpostparams() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURLPostParams)
return _internal_defaultsearchprovidersearchurlpostparams();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_defaultsearchprovidersearchurlpostparams(
::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurlpostparams) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidersearchurlpostparams_);
}
defaultsearchprovidersearchurlpostparams_ = defaultsearchprovidersearchurlpostparams;
if (defaultsearchprovidersearchurlpostparams) {
_has_bits_[1] |= 0x00040000u;
} else {
_has_bits_[1] &= ~0x00040000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURLPostParams)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidersearchurlpostparams() {
_has_bits_[1] &= ~0x00040000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersearchurlpostparams_;
defaultsearchprovidersearchurlpostparams_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_defaultsearchprovidersearchurlpostparams() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURLPostParams)
_has_bits_[1] &= ~0x00040000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersearchurlpostparams_;
defaultsearchprovidersearchurlpostparams_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_defaultsearchprovidersearchurlpostparams() {
_has_bits_[1] |= 0x00040000u;
if (defaultsearchprovidersearchurlpostparams_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
defaultsearchprovidersearchurlpostparams_ = p;
}
return defaultsearchprovidersearchurlpostparams_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidersearchurlpostparams() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_defaultsearchprovidersearchurlpostparams();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURLPostParams)
return _msg;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidersearchurlpostparams(::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurlpostparams) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidersearchurlpostparams_);
}
if (defaultsearchprovidersearchurlpostparams) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidersearchurlpostparams));
if (message_arena != submessage_arena) {
defaultsearchprovidersearchurlpostparams = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchprovidersearchurlpostparams, submessage_arena);
}
_has_bits_[1] |= 0x00040000u;
} else {
_has_bits_[1] &= ~0x00040000u;
}
defaultsearchprovidersearchurlpostparams_ = defaultsearchprovidersearchurlpostparams;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURLPostParams)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURLPostParams = 233;
inline bool CloudPolicySettings::_internal_has_defaultsearchprovidersuggesturlpostparams() const {
bool value = (_has_bits_[1] & 0x00080000u) != 0;
PROTOBUF_ASSUME(!value || defaultsearchprovidersuggesturlpostparams_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_defaultsearchprovidersuggesturlpostparams() const {
return _internal_has_defaultsearchprovidersuggesturlpostparams();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_defaultsearchprovidersuggesturlpostparams() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchprovidersuggesturlpostparams_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidersuggesturlpostparams() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURLPostParams)
return _internal_defaultsearchprovidersuggesturlpostparams();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_defaultsearchprovidersuggesturlpostparams(
::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturlpostparams) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidersuggesturlpostparams_);
}
defaultsearchprovidersuggesturlpostparams_ = defaultsearchprovidersuggesturlpostparams;
if (defaultsearchprovidersuggesturlpostparams) {
_has_bits_[1] |= 0x00080000u;
} else {
_has_bits_[1] &= ~0x00080000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURLPostParams)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidersuggesturlpostparams() {
_has_bits_[1] &= ~0x00080000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersuggesturlpostparams_;
defaultsearchprovidersuggesturlpostparams_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_defaultsearchprovidersuggesturlpostparams() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURLPostParams)
_has_bits_[1] &= ~0x00080000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersuggesturlpostparams_;
defaultsearchprovidersuggesturlpostparams_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_defaultsearchprovidersuggesturlpostparams() {
_has_bits_[1] |= 0x00080000u;
if (defaultsearchprovidersuggesturlpostparams_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
defaultsearchprovidersuggesturlpostparams_ = p;
}
return defaultsearchprovidersuggesturlpostparams_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidersuggesturlpostparams() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_defaultsearchprovidersuggesturlpostparams();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURLPostParams)
return _msg;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidersuggesturlpostparams(::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturlpostparams) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidersuggesturlpostparams_);
}
if (defaultsearchprovidersuggesturlpostparams) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidersuggesturlpostparams));
if (message_arena != submessage_arena) {
defaultsearchprovidersuggesturlpostparams = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchprovidersuggesturlpostparams, submessage_arena);
}
_has_bits_[1] |= 0x00080000u;
} else {
_has_bits_[1] &= ~0x00080000u;
}
defaultsearchprovidersuggesturlpostparams_ = defaultsearchprovidersuggesturlpostparams;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURLPostParams)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURLPostParams = 235;
inline bool CloudPolicySettings::_internal_has_defaultsearchproviderimageurlpostparams() const {
bool value = (_has_bits_[1] & 0x00100000u) != 0;
PROTOBUF_ASSUME(!value || defaultsearchproviderimageurlpostparams_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_defaultsearchproviderimageurlpostparams() const {
return _internal_has_defaultsearchproviderimageurlpostparams();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_defaultsearchproviderimageurlpostparams() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchproviderimageurlpostparams_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchproviderimageurlpostparams() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURLPostParams)
return _internal_defaultsearchproviderimageurlpostparams();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_defaultsearchproviderimageurlpostparams(
::enterprise_management::StringPolicyProto* defaultsearchproviderimageurlpostparams) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchproviderimageurlpostparams_);
}
defaultsearchproviderimageurlpostparams_ = defaultsearchproviderimageurlpostparams;
if (defaultsearchproviderimageurlpostparams) {
_has_bits_[1] |= 0x00100000u;
} else {
_has_bits_[1] &= ~0x00100000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURLPostParams)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchproviderimageurlpostparams() {
_has_bits_[1] &= ~0x00100000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchproviderimageurlpostparams_;
defaultsearchproviderimageurlpostparams_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_defaultsearchproviderimageurlpostparams() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURLPostParams)
_has_bits_[1] &= ~0x00100000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchproviderimageurlpostparams_;
defaultsearchproviderimageurlpostparams_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_defaultsearchproviderimageurlpostparams() {
_has_bits_[1] |= 0x00100000u;
if (defaultsearchproviderimageurlpostparams_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
defaultsearchproviderimageurlpostparams_ = p;
}
return defaultsearchproviderimageurlpostparams_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderimageurlpostparams() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_defaultsearchproviderimageurlpostparams();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURLPostParams)
return _msg;
}
inline void CloudPolicySettings::set_allocated_defaultsearchproviderimageurlpostparams(::enterprise_management::StringPolicyProto* defaultsearchproviderimageurlpostparams) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchproviderimageurlpostparams_);
}
if (defaultsearchproviderimageurlpostparams) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchproviderimageurlpostparams));
if (message_arena != submessage_arena) {
defaultsearchproviderimageurlpostparams = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchproviderimageurlpostparams, submessage_arena);
}
_has_bits_[1] |= 0x00100000u;
} else {
_has_bits_[1] &= ~0x00100000u;
}
defaultsearchproviderimageurlpostparams_ = defaultsearchproviderimageurlpostparams;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURLPostParams)
}

// optional .enterprise_management.IntegerPolicyProto DefaultCookiesSetting = 50;
inline bool CloudPolicySettings::_internal_has_defaultcookiessetting() const {
bool value = (_has_bits_[0] & 0x08000000u) != 0;
PROTOBUF_ASSUME(!value || defaultcookiessetting_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_defaultcookiessetting() const {
return _internal_has_defaultcookiessetting();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::_internal_defaultcookiessetting() const {
const ::enterprise_management::IntegerPolicyProto* p = defaultcookiessetting_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::IntegerPolicyProto&>(
::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultcookiessetting() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultCookiesSetting)
return _internal_defaultcookiessetting();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_defaultcookiessetting(
::enterprise_management::IntegerPolicyProto* defaultcookiessetting) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultcookiessetting_);
}
defaultcookiessetting_ = defaultcookiessetting;
if (defaultcookiessetting) {
_has_bits_[0] |= 0x08000000u;
} else {
_has_bits_[0] &= ~0x08000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.DefaultCookiesSetting)
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultcookiessetting() {
_has_bits_[0] &= ~0x08000000u;
::enterprise_management::IntegerPolicyProto* temp = defaultcookiessetting_;
defaultcookiessetting_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::unsafe_arena_release_defaultcookiessetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultCookiesSetting)
_has_bits_[0] &= ~0x08000000u;
::enterprise_management::IntegerPolicyProto* temp = defaultcookiessetting_;
defaultcookiessetting_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::_internal_mutable_defaultcookiessetting() {
_has_bits_[0] |= 0x08000000u;
if (defaultcookiessetting_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaForAllocation());
defaultcookiessetting_ = p;
}
return defaultcookiessetting_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultcookiessetting() {
::enterprise_management::IntegerPolicyProto* _msg = _internal_mutable_defaultcookiessetting();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultCookiesSetting)
return _msg;
}
inline void CloudPolicySettings::set_allocated_defaultcookiessetting(::enterprise_management::IntegerPolicyProto* defaultcookiessetting) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultcookiessetting_);
}
if (defaultcookiessetting) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultcookiessetting));
if (message_arena != submessage_arena) {
defaultcookiessetting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultcookiessetting, submessage_arena);
}
_has_bits_[0] |= 0x08000000u;
} else {
_has_bits_[0] &= ~0x08000000u;
}
defaultcookiessetting_ = defaultcookiessetting;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultCookiesSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultJavaScriptSetting = 52;
inline bool CloudPolicySettings::_internal_has_defaultjavascriptsetting() const {
bool value = (_has_bits_[0] & 0x10000000u) != 0;
PROTOBUF_ASSUME(!value || defaultjavascriptsetting_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_defaultjavascriptsetting() const {
return _internal_has_defaultjavascriptsetting();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::_internal_defaultjavascriptsetting() const {
const ::enterprise_management::IntegerPolicyProto* p = defaultjavascriptsetting_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::IntegerPolicyProto&>(
::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultjavascriptsetting() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultJavaScriptSetting)
return _internal_defaultjavascriptsetting();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_defaultjavascriptsetting(
::enterprise_management::IntegerPolicyProto* defaultjavascriptsetting) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultjavascriptsetting_);
}
defaultjavascriptsetting_ = defaultjavascriptsetting;
if (defaultjavascriptsetting) {
_has_bits_[0] |= 0x10000000u;
} else {
_has_bits_[0] &= ~0x10000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.DefaultJavaScriptSetting)
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultjavascriptsetting() {
_has_bits_[0] &= ~0x10000000u;
::enterprise_management::IntegerPolicyProto* temp = defaultjavascriptsetting_;
defaultjavascriptsetting_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::unsafe_arena_release_defaultjavascriptsetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultJavaScriptSetting)
_has_bits_[0] &= ~0x10000000u;
::enterprise_management::IntegerPolicyProto* temp = defaultjavascriptsetting_;
defaultjavascriptsetting_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::_internal_mutable_defaultjavascriptsetting() {
_has_bits_[0] |= 0x10000000u;
if (defaultjavascriptsetting_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaForAllocation());
defaultjavascriptsetting_ = p;
}
return defaultjavascriptsetting_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultjavascriptsetting() {
::enterprise_management::IntegerPolicyProto* _msg = _internal_mutable_defaultjavascriptsetting();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultJavaScriptSetting)
return _msg;
}
inline void CloudPolicySettings::set_allocated_defaultjavascriptsetting(::enterprise_management::IntegerPolicyProto* defaultjavascriptsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultjavascriptsetting_);
}
if (defaultjavascriptsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultjavascriptsetting));
if (message_arena != submessage_arena) {
defaultjavascriptsetting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultjavascriptsetting, submessage_arena);
}
_has_bits_[0] |= 0x10000000u;
} else {
_has_bits_[0] &= ~0x10000000u;
}
defaultjavascriptsetting_ = defaultjavascriptsetting;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultJavaScriptSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultPopupsSetting = 54;
inline bool CloudPolicySettings::_internal_has_defaultpopupssetting() const {
bool value = (_has_bits_[0] & 0x20000000u) != 0;
PROTOBUF_ASSUME(!value || defaultpopupssetting_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_defaultpopupssetting() const {
return _internal_has_defaultpopupssetting();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::_internal_defaultpopupssetting() const {
const ::enterprise_management::IntegerPolicyProto* p = defaultpopupssetting_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::IntegerPolicyProto&>(
::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultpopupssetting() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultPopupsSetting)
return _internal_defaultpopupssetting();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_defaultpopupssetting(
::enterprise_management::IntegerPolicyProto* defaultpopupssetting) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultpopupssetting_);
}
defaultpopupssetting_ = defaultpopupssetting;
if (defaultpopupssetting) {
_has_bits_[0] |= 0x20000000u;
} else {
_has_bits_[0] &= ~0x20000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.DefaultPopupsSetting)
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultpopupssetting() {
_has_bits_[0] &= ~0x20000000u;
::enterprise_management::IntegerPolicyProto* temp = defaultpopupssetting_;
defaultpopupssetting_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::unsafe_arena_release_defaultpopupssetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultPopupsSetting)
_has_bits_[0] &= ~0x20000000u;
::enterprise_management::IntegerPolicyProto* temp = defaultpopupssetting_;
defaultpopupssetting_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::_internal_mutable_defaultpopupssetting() {
_has_bits_[0] |= 0x20000000u;
if (defaultpopupssetting_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaForAllocation());
defaultpopupssetting_ = p;
}
return defaultpopupssetting_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultpopupssetting() {
::enterprise_management::IntegerPolicyProto* _msg = _internal_mutable_defaultpopupssetting();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultPopupsSetting)
return _msg;
}
inline void CloudPolicySettings::set_allocated_defaultpopupssetting(::enterprise_management::IntegerPolicyProto* defaultpopupssetting) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultpopupssetting_);
}
if (defaultpopupssetting) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultpopupssetting));
if (message_arena != submessage_arena) {
defaultpopupssetting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultpopupssetting, submessage_arena);
}
_has_bits_[0] |= 0x20000000u;
} else {
_has_bits_[0] &= ~0x20000000u;
}
defaultpopupssetting_ = defaultpopupssetting;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultPopupsSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultGeolocationSetting = 56;
inline bool CloudPolicySettings::_internal_has_defaultgeolocationsetting() const {
bool value = (_has_bits_[0] & 0x40000000u) != 0;
PROTOBUF_ASSUME(!value || defaultgeolocationsetting_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_defaultgeolocationsetting() const {
return _internal_has_defaultgeolocationsetting();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::_internal_defaultgeolocationsetting() const {
const ::enterprise_management::IntegerPolicyProto* p = defaultgeolocationsetting_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::IntegerPolicyProto&>(
::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultgeolocationsetting() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultGeolocationSetting)
return _internal_defaultgeolocationsetting();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_defaultgeolocationsetting(
::enterprise_management::IntegerPolicyProto* defaultgeolocationsetting) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultgeolocationsetting_);
}
defaultgeolocationsetting_ = defaultgeolocationsetting;
if (defaultgeolocationsetting) {
_has_bits_[0] |= 0x40000000u;
} else {
_has_bits_[0] &= ~0x40000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.DefaultGeolocationSetting)
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultgeolocationsetting() {
_has_bits_[0] &= ~0x40000000u;
::enterprise_management::IntegerPolicyProto* temp = defaultgeolocationsetting_;
defaultgeolocationsetting_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::unsafe_arena_release_defaultgeolocationsetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultGeolocationSetting)
_has_bits_[0] &= ~0x40000000u;
::enterprise_management::IntegerPolicyProto* temp = defaultgeolocationsetting_;
defaultgeolocationsetting_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::_internal_mutable_defaultgeolocationsetting() {
_has_bits_[0] |= 0x40000000u;
if (defaultgeolocationsetting_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaForAllocation());
defaultgeolocationsetting_ = p;
}
return defaultgeolocationsetting_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultgeolocationsetting() {
::enterprise_management::IntegerPolicyProto* _msg = _internal_mutable_defaultgeolocationsetting();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultGeolocationSetting)
return _msg;
}
inline void CloudPolicySettings::set_allocated_defaultgeolocationsetting(::enterprise_management::IntegerPolicyProto* defaultgeolocationsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultgeolocationsetting_);
}
if (defaultgeolocationsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultgeolocationsetting));
if (message_arena != submessage_arena) {
defaultgeolocationsetting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultgeolocationsetting, submessage_arena);
}
_has_bits_[0] |= 0x40000000u;
} else {
_has_bits_[0] &= ~0x40000000u;
}
defaultgeolocationsetting_ = defaultgeolocationsetting;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultGeolocationSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultWebBluetoothGuardSetting = 322;
inline bool CloudPolicySettings::_internal_has_defaultwebbluetoothguardsetting() const {
bool value = (_has_bits_[1] & 0x20000000u) != 0;
PROTOBUF_ASSUME(!value || defaultwebbluetoothguardsetting_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_defaultwebbluetoothguardsetting() const {
return _internal_has_defaultwebbluetoothguardsetting();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::_internal_defaultwebbluetoothguardsetting() const {
const ::enterprise_management::IntegerPolicyProto* p = defaultwebbluetoothguardsetting_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::IntegerPolicyProto&>(
::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultwebbluetoothguardsetting() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultWebBluetoothGuardSetting)
return _internal_defaultwebbluetoothguardsetting();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_defaultwebbluetoothguardsetting(
::enterprise_management::IntegerPolicyProto* defaultwebbluetoothguardsetting) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultwebbluetoothguardsetting_);
}
defaultwebbluetoothguardsetting_ = defaultwebbluetoothguardsetting;
if (defaultwebbluetoothguardsetting) {
_has_bits_[1] |= 0x20000000u;
} else {
_has_bits_[1] &= ~0x20000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.DefaultWebBluetoothGuardSetting)
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultwebbluetoothguardsetting() {
_has_bits_[1] &= ~0x20000000u;
::enterprise_management::IntegerPolicyProto* temp = defaultwebbluetoothguardsetting_;
defaultwebbluetoothguardsetting_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::unsafe_arena_release_defaultwebbluetoothguardsetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultWebBluetoothGuardSetting)
_has_bits_[1] &= ~0x20000000u;
::enterprise_management::IntegerPolicyProto* temp = defaultwebbluetoothguardsetting_;
defaultwebbluetoothguardsetting_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::_internal_mutable_defaultwebbluetoothguardsetting() {
_has_bits_[1] |= 0x20000000u;
if (defaultwebbluetoothguardsetting_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaForAllocation());
defaultwebbluetoothguardsetting_ = p;
}
return defaultwebbluetoothguardsetting_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultwebbluetoothguardsetting() {
::enterprise_management::IntegerPolicyProto* _msg = _internal_mutable_defaultwebbluetoothguardsetting();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultWebBluetoothGuardSetting)
return _msg;
}
inline void CloudPolicySettings::set_allocated_defaultwebbluetoothguardsetting(::enterprise_management::IntegerPolicyProto* defaultwebbluetoothguardsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultwebbluetoothguardsetting_);
}
if (defaultwebbluetoothguardsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultwebbluetoothguardsetting));
if (message_arena != submessage_arena) {
defaultwebbluetoothguardsetting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultwebbluetoothguardsetting, submessage_arena);
}
_has_bits_[1] |= 0x20000000u;
} else {
_has_bits_[1] &= ~0x20000000u;
}
defaultwebbluetoothguardsetting_ = defaultwebbluetoothguardsetting;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultWebBluetoothGuardSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultSensorsSetting = 756;
inline bool CloudPolicySettings::_internal_has_defaultsensorssetting() const {
bool value = (_has_bits_[3] & 0x00010000u) != 0;
PROTOBUF_ASSUME(!value || defaultsensorssetting_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_defaultsensorssetting() const {
return _internal_has_defaultsensorssetting();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::_internal_defaultsensorssetting() const {
const ::enterprise_management::IntegerPolicyProto* p = defaultsensorssetting_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::IntegerPolicyProto&>(
::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultsensorssetting() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSensorsSetting)
return _internal_defaultsensorssetting();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_defaultsensorssetting(
::enterprise_management::IntegerPolicyProto* defaultsensorssetting) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsensorssetting_);
}
defaultsensorssetting_ = defaultsensorssetting;
if (defaultsensorssetting) {
_has_bits_[3] |= 0x00010000u;
} else {
_has_bits_[3] &= ~0x00010000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.DefaultSensorsSetting)
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultsensorssetting() {
_has_bits_[3] &= ~0x00010000u;
::enterprise_management::IntegerPolicyProto* temp = defaultsensorssetting_;
defaultsensorssetting_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::unsafe_arena_release_defaultsensorssetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSensorsSetting)
_has_bits_[3] &= ~0x00010000u;
::enterprise_management::IntegerPolicyProto* temp = defaultsensorssetting_;
defaultsensorssetting_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::_internal_mutable_defaultsensorssetting() {
_has_bits_[3] |= 0x00010000u;
if (defaultsensorssetting_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaForAllocation());
defaultsensorssetting_ = p;
}
return defaultsensorssetting_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultsensorssetting() {
::enterprise_management::IntegerPolicyProto* _msg = _internal_mutable_defaultsensorssetting();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSensorsSetting)
return _msg;
}
inline void CloudPolicySettings::set_allocated_defaultsensorssetting(::enterprise_management::IntegerPolicyProto* defaultsensorssetting) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsensorssetting_);
}
if (defaultsensorssetting) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsensorssetting));
if (message_arena != submessage_arena) {
defaultsensorssetting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsensorssetting, submessage_arena);
}
_has_bits_[3] |= 0x00010000u;
} else {
_has_bits_[3] &= ~0x00010000u;
}
defaultsensorssetting_ = defaultsensorssetting;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSensorsSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultWebUsbGuardSetting = 436;
inline bool CloudPolicySettings::_internal_has_defaultwebusbguardsetting() const {
bool value = (_has_bits_[2] & 0x00001000u) != 0;
PROTOBUF_ASSUME(!value || defaultwebusbguardsetting_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_defaultwebusbguardsetting() const {
return _internal_has_defaultwebusbguardsetting();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::_internal_defaultwebusbguardsetting() const {
const ::enterprise_management::IntegerPolicyProto* p = defaultwebusbguardsetting_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::IntegerPolicyProto&>(
::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultwebusbguardsetting() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultWebUsbGuardSetting)
return _internal_defaultwebusbguardsetting();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_defaultwebusbguardsetting(
::enterprise_management::IntegerPolicyProto* defaultwebusbguardsetting) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultwebusbguardsetting_);
}
defaultwebusbguardsetting_ = defaultwebusbguardsetting;
if (defaultwebusbguardsetting) {
_has_bits_[2] |= 0x00001000u;
} else {
_has_bits_[2] &= ~0x00001000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.DefaultWebUsbGuardSetting)
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultwebusbguardsetting() {
_has_bits_[2] &= ~0x00001000u;
::enterprise_management::IntegerPolicyProto* temp = defaultwebusbguardsetting_;
defaultwebusbguardsetting_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::unsafe_arena_release_defaultwebusbguardsetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultWebUsbGuardSetting)
_has_bits_[2] &= ~0x00001000u;
::enterprise_management::IntegerPolicyProto* temp = defaultwebusbguardsetting_;
defaultwebusbguardsetting_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::_internal_mutable_defaultwebusbguardsetting() {
_has_bits_[2] |= 0x00001000u;
if (defaultwebusbguardsetting_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaForAllocation());
defaultwebusbguardsetting_ = p;
}
return defaultwebusbguardsetting_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultwebusbguardsetting() {
::enterprise_management::IntegerPolicyProto* _msg = _internal_mutable_defaultwebusbguardsetting();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultWebUsbGuardSetting)
return _msg;
}
inline void CloudPolicySettings::set_allocated_defaultwebusbguardsetting(::enterprise_management::IntegerPolicyProto* defaultwebusbguardsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultwebusbguardsetting_);
}
if (defaultwebusbguardsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultwebusbguardsetting));
if (message_arena != submessage_arena) {
defaultwebusbguardsetting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultwebusbguardsetting, submessage_arena);
}
_has_bits_[2] |= 0x00001000u;
} else {
_has_bits_[2] &= ~0x00001000u;
}
defaultwebusbguardsetting_ = defaultwebusbguardsetting;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultWebUsbGuardSetting)
}

// optional .enterprise_management.StringPolicyProto WebUsbAllowDevicesForUrls = 488;
inline bool CloudPolicySettings::_internal_has_webusballowdevicesforurls() const {
bool value = (_has_bits_[2] & 0x01000000u) != 0;
PROTOBUF_ASSUME(!value || webusballowdevicesforurls_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_webusballowdevicesforurls() const {
return _internal_has_webusballowdevicesforurls();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_webusballowdevicesforurls() const {
const ::enterprise_management::StringPolicyProto* p = webusballowdevicesforurls_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::webusballowdevicesforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebUsbAllowDevicesForUrls)
return _internal_webusballowdevicesforurls();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_webusballowdevicesforurls(
::enterprise_management::StringPolicyProto* webusballowdevicesforurls) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(webusballowdevicesforurls_);
}
webusballowdevicesforurls_ = webusballowdevicesforurls;
if (webusballowdevicesforurls) {
_has_bits_[2] |= 0x01000000u;
} else {
_has_bits_[2] &= ~0x01000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.WebUsbAllowDevicesForUrls)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_webusballowdevicesforurls() {
_has_bits_[2] &= ~0x01000000u;
::enterprise_management::StringPolicyProto* temp = webusballowdevicesforurls_;
webusballowdevicesforurls_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_webusballowdevicesforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebUsbAllowDevicesForUrls)
_has_bits_[2] &= ~0x01000000u;
::enterprise_management::StringPolicyProto* temp = webusballowdevicesforurls_;
webusballowdevicesforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_webusballowdevicesforurls() {
_has_bits_[2] |= 0x01000000u;
if (webusballowdevicesforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
webusballowdevicesforurls_ = p;
}
return webusballowdevicesforurls_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_webusballowdevicesforurls() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_webusballowdevicesforurls();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebUsbAllowDevicesForUrls)
return _msg;
}
inline void CloudPolicySettings::set_allocated_webusballowdevicesforurls(::enterprise_management::StringPolicyProto* webusballowdevicesforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(webusballowdevicesforurls_);
}
if (webusballowdevicesforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(webusballowdevicesforurls));
if (message_arena != submessage_arena) {
webusballowdevicesforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, webusballowdevicesforurls, submessage_arena);
}
_has_bits_[2] |= 0x01000000u;
} else {
_has_bits_[2] &= ~0x01000000u;
}
webusballowdevicesforurls_ = webusballowdevicesforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebUsbAllowDevicesForUrls)
}

// optional .enterprise_management.StringListPolicyProto WebUsbAskForUrls = 441;
inline bool CloudPolicySettings::_internal_has_webusbaskforurls() const {
bool value = (_has_bits_[2] & 0x00008000u) != 0;
PROTOBUF_ASSUME(!value || webusbaskforurls_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_webusbaskforurls() const {
return _internal_has_webusbaskforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_webusbaskforurls() const {
const ::enterprise_management::StringListPolicyProto* p = webusbaskforurls_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::webusbaskforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebUsbAskForUrls)
return _internal_webusbaskforurls();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_webusbaskforurls(
::enterprise_management::StringListPolicyProto* webusbaskforurls) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(webusbaskforurls_);
}
webusbaskforurls_ = webusbaskforurls;
if (webusbaskforurls) {
_has_bits_[2] |= 0x00008000u;
} else {
_has_bits_[2] &= ~0x00008000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.WebUsbAskForUrls)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_webusbaskforurls() {
_has_bits_[2] &= ~0x00008000u;
::enterprise_management::StringListPolicyProto* temp = webusbaskforurls_;
webusbaskforurls_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_webusbaskforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebUsbAskForUrls)
_has_bits_[2] &= ~0x00008000u;
::enterprise_management::StringListPolicyProto* temp = webusbaskforurls_;
webusbaskforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_webusbaskforurls() {
_has_bits_[2] |= 0x00008000u;
if (webusbaskforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
webusbaskforurls_ = p;
}
return webusbaskforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_webusbaskforurls() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_webusbaskforurls();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebUsbAskForUrls)
return _msg;
}
inline void CloudPolicySettings::set_allocated_webusbaskforurls(::enterprise_management::StringListPolicyProto* webusbaskforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(webusbaskforurls_);
}
if (webusbaskforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(webusbaskforurls));
if (message_arena != submessage_arena) {
webusbaskforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, webusbaskforurls, submessage_arena);
}
_has_bits_[2] |= 0x00008000u;
} else {
_has_bits_[2] &= ~0x00008000u;
}
webusbaskforurls_ = webusbaskforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebUsbAskForUrls)
}

// optional .enterprise_management.StringListPolicyProto WebUsbBlockedForUrls = 442;
inline bool CloudPolicySettings::_internal_has_webusbblockedforurls() const {
bool value = (_has_bits_[2] & 0x00010000u) != 0;
PROTOBUF_ASSUME(!value || webusbblockedforurls_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_webusbblockedforurls() const {
return _internal_has_webusbblockedforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_webusbblockedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = webusbblockedforurls_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::webusbblockedforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebUsbBlockedForUrls)
return _internal_webusbblockedforurls();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_webusbblockedforurls(
::enterprise_management::StringListPolicyProto* webusbblockedforurls) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(webusbblockedforurls_);
}
webusbblockedforurls_ = webusbblockedforurls;
if (webusbblockedforurls) {
_has_bits_[2] |= 0x00010000u;
} else {
_has_bits_[2] &= ~0x00010000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.WebUsbBlockedForUrls)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_webusbblockedforurls() {
_has_bits_[2] &= ~0x00010000u;
::enterprise_management::StringListPolicyProto* temp = webusbblockedforurls_;
webusbblockedforurls_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_webusbblockedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebUsbBlockedForUrls)
_has_bits_[2] &= ~0x00010000u;
::enterprise_management::StringListPolicyProto* temp = webusbblockedforurls_;
webusbblockedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_webusbblockedforurls() {
_has_bits_[2] |= 0x00010000u;
if (webusbblockedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
webusbblockedforurls_ = p;
}
return webusbblockedforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_webusbblockedforurls() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_webusbblockedforurls();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebUsbBlockedForUrls)
return _msg;
}
inline void CloudPolicySettings::set_allocated_webusbblockedforurls(::enterprise_management::StringListPolicyProto* webusbblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(webusbblockedforurls_);
}
if (webusbblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(webusbblockedforurls));
if (message_arena != submessage_arena) {
webusbblockedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, webusbblockedforurls, submessage_arena);
}
_has_bits_[2] |= 0x00010000u;
} else {
_has_bits_[2] &= ~0x00010000u;
}
webusbblockedforurls_ = webusbblockedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebUsbBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto CookiesAllowedForUrls = 79;
inline bool CloudPolicySettings::_internal_has_cookiesallowedforurls() const {
bool value = (_has_bits_[1] & 0x00000020u) != 0;
PROTOBUF_ASSUME(!value || cookiesallowedforurls_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_cookiesallowedforurls() const {
return _internal_has_cookiesallowedforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_cookiesallowedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = cookiesallowedforurls_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::cookiesallowedforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CookiesAllowedForUrls)
return _internal_cookiesallowedforurls();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_cookiesallowedforurls(
::enterprise_management::StringListPolicyProto* cookiesallowedforurls) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cookiesallowedforurls_);
}
cookiesallowedforurls_ = cookiesallowedforurls;
if (cookiesallowedforurls) {
_has_bits_[1] |= 0x00000020u;
} else {
_has_bits_[1] &= ~0x00000020u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.CookiesAllowedForUrls)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_cookiesallowedforurls() {
_has_bits_[1] &= ~0x00000020u;
::enterprise_management::StringListPolicyProto* temp = cookiesallowedforurls_;
cookiesallowedforurls_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_cookiesallowedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CookiesAllowedForUrls)
_has_bits_[1] &= ~0x00000020u;
::enterprise_management::StringListPolicyProto* temp = cookiesallowedforurls_;
cookiesallowedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_cookiesallowedforurls() {
_has_bits_[1] |= 0x00000020u;
if (cookiesallowedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
cookiesallowedforurls_ = p;
}
return cookiesallowedforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_cookiesallowedforurls() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_cookiesallowedforurls();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CookiesAllowedForUrls)
return _msg;
}
inline void CloudPolicySettings::set_allocated_cookiesallowedforurls(::enterprise_management::StringListPolicyProto* cookiesallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cookiesallowedforurls_);
}
if (cookiesallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cookiesallowedforurls));
if (message_arena != submessage_arena) {
cookiesallowedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, cookiesallowedforurls, submessage_arena);
}
_has_bits_[1] |= 0x00000020u;
} else {
_has_bits_[1] &= ~0x00000020u;
}
cookiesallowedforurls_ = cookiesallowedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CookiesAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto CookiesBlockedForUrls = 69;
inline bool CloudPolicySettings::_internal_has_cookiesblockedforurls() const {
bool value = (_has_bits_[0] & 0x80000000u) != 0;
PROTOBUF_ASSUME(!value || cookiesblockedforurls_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_cookiesblockedforurls() const {
return _internal_has_cookiesblockedforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_cookiesblockedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = cookiesblockedforurls_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::cookiesblockedforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CookiesBlockedForUrls)
return _internal_cookiesblockedforurls();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_cookiesblockedforurls(
::enterprise_management::StringListPolicyProto* cookiesblockedforurls) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cookiesblockedforurls_);
}
cookiesblockedforurls_ = cookiesblockedforurls;
if (cookiesblockedforurls) {
_has_bits_[0] |= 0x80000000u;
} else {
_has_bits_[0] &= ~0x80000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.CookiesBlockedForUrls)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_cookiesblockedforurls() {
_has_bits_[0] &= ~0x80000000u;
::enterprise_management::StringListPolicyProto* temp = cookiesblockedforurls_;
cookiesblockedforurls_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_cookiesblockedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CookiesBlockedForUrls)
_has_bits_[0] &= ~0x80000000u;
::enterprise_management::StringListPolicyProto* temp = cookiesblockedforurls_;
cookiesblockedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_cookiesblockedforurls() {
_has_bits_[0] |= 0x80000000u;
if (cookiesblockedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
cookiesblockedforurls_ = p;
}
return cookiesblockedforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_cookiesblockedforurls() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_cookiesblockedforurls();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CookiesBlockedForUrls)
return _msg;
}
inline void CloudPolicySettings::set_allocated_cookiesblockedforurls(::enterprise_management::StringListPolicyProto* cookiesblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cookiesblockedforurls_);
}
if (cookiesblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cookiesblockedforurls));
if (message_arena != submessage_arena) {
cookiesblockedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, cookiesblockedforurls, submessage_arena);
}
_has_bits_[0] |= 0x80000000u;
} else {
_has_bits_[0] &= ~0x80000000u;
}
cookiesblockedforurls_ = cookiesblockedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CookiesBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto CookiesSessionOnlyForUrls = 70;
inline bool CloudPolicySettings::_internal_has_cookiessessiononlyforurls() const {
bool value = (_has_bits_[1] & 0x00000001u) != 0;
PROTOBUF_ASSUME(!value || cookiessessiononlyforurls_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_cookiessessiononlyforurls() const {
return _internal_has_cookiessessiononlyforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_cookiessessiononlyforurls() const {
const ::enterprise_management::StringListPolicyProto* p = cookiessessiononlyforurls_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::cookiessessiononlyforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CookiesSessionOnlyForUrls)
return _internal_cookiessessiononlyforurls();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_cookiessessiononlyforurls(
::enterprise_management::StringListPolicyProto* cookiessessiononlyforurls) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cookiessessiononlyforurls_);
}
cookiessessiononlyforurls_ = cookiessessiononlyforurls;
if (cookiessessiononlyforurls) {
_has_bits_[1] |= 0x00000001u;
} else {
_has_bits_[1] &= ~0x00000001u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.CookiesSessionOnlyForUrls)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_cookiessessiononlyforurls() {
_has_bits_[1] &= ~0x00000001u;
::enterprise_management::StringListPolicyProto* temp = cookiessessiononlyforurls_;
cookiessessiononlyforurls_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_cookiessessiononlyforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CookiesSessionOnlyForUrls)
_has_bits_[1] &= ~0x00000001u;
::enterprise_management::StringListPolicyProto* temp = cookiessessiononlyforurls_;
cookiessessiononlyforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_cookiessessiononlyforurls() {
_has_bits_[1] |= 0x00000001u;
if (cookiessessiononlyforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
cookiessessiononlyforurls_ = p;
}
return cookiessessiononlyforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_cookiessessiononlyforurls() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_cookiessessiononlyforurls();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CookiesSessionOnlyForUrls)
return _msg;
}
inline void CloudPolicySettings::set_allocated_cookiessessiononlyforurls(::enterprise_management::StringListPolicyProto* cookiessessiononlyforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cookiessessiononlyforurls_);
}
if (cookiessessiononlyforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cookiessessiononlyforurls));
if (message_arena != submessage_arena) {
cookiessessiononlyforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, cookiessessiononlyforurls, submessage_arena);
}
_has_bits_[1] |= 0x00000001u;
} else {
_has_bits_[1] &= ~0x00000001u;
}
cookiessessiononlyforurls_ = cookiessessiononlyforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CookiesSessionOnlyForUrls)
}

// optional .enterprise_management.StringListPolicyProto JavaScriptAllowedForUrls = 73;
inline bool CloudPolicySettings::_internal_has_javascriptallowedforurls() const {
bool value = (_has_bits_[1] & 0x00000002u) != 0;
PROTOBUF_ASSUME(!value || javascriptallowedforurls_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_javascriptallowedforurls() const {
return _internal_has_javascriptallowedforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_javascriptallowedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = javascriptallowedforurls_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::javascriptallowedforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.JavaScriptAllowedForUrls)
return _internal_javascriptallowedforurls();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_javascriptallowedforurls(
::enterprise_management::StringListPolicyProto* javascriptallowedforurls) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(javascriptallowedforurls_);
}
javascriptallowedforurls_ = javascriptallowedforurls;
if (javascriptallowedforurls) {
_has_bits_[1] |= 0x00000002u;
} else {
_has_bits_[1] &= ~0x00000002u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.JavaScriptAllowedForUrls)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_javascriptallowedforurls() {
_has_bits_[1] &= ~0x00000002u;
::enterprise_management::StringListPolicyProto* temp = javascriptallowedforurls_;
javascriptallowedforurls_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_javascriptallowedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.JavaScriptAllowedForUrls)
_has_bits_[1] &= ~0x00000002u;
::enterprise_management::StringListPolicyProto* temp = javascriptallowedforurls_;
javascriptallowedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_javascriptallowedforurls() {
_has_bits_[1] |= 0x00000002u;
if (javascriptallowedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
javascriptallowedforurls_ = p;
}
return javascriptallowedforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_javascriptallowedforurls() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_javascriptallowedforurls();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.JavaScriptAllowedForUrls)
return _msg;
}
inline void CloudPolicySettings::set_allocated_javascriptallowedforurls(::enterprise_management::StringListPolicyProto* javascriptallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(javascriptallowedforurls_);
}
if (javascriptallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(javascriptallowedforurls));
if (message_arena != submessage_arena) {
javascriptallowedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, javascriptallowedforurls, submessage_arena);
}
_has_bits_[1] |= 0x00000002u;
} else {
_has_bits_[1] &= ~0x00000002u;
}
javascriptallowedforurls_ = javascriptallowedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.JavaScriptAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto JavaScriptBlockedForUrls = 74;
inline bool CloudPolicySettings::_internal_has_javascriptblockedforurls() const {
bool value = (_has_bits_[1] & 0x00000004u) != 0;
PROTOBUF_ASSUME(!value || javascriptblockedforurls_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_javascriptblockedforurls() const {
return _internal_has_javascriptblockedforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_javascriptblockedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = javascriptblockedforurls_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::javascriptblockedforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.JavaScriptBlockedForUrls)
return _internal_javascriptblockedforurls();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_javascriptblockedforurls(
::enterprise_management::StringListPolicyProto* javascriptblockedforurls) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(javascriptblockedforurls_);
}
javascriptblockedforurls_ = javascriptblockedforurls;
if (javascriptblockedforurls) {
_has_bits_[1] |= 0x00000004u;
} else {
_has_bits_[1] &= ~0x00000004u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.JavaScriptBlockedForUrls)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_javascriptblockedforurls() {
_has_bits_[1] &= ~0x00000004u;
::enterprise_management::StringListPolicyProto* temp = javascriptblockedforurls_;
javascriptblockedforurls_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_javascriptblockedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.JavaScriptBlockedForUrls)
_has_bits_[1] &= ~0x00000004u;
::enterprise_management::StringListPolicyProto* temp = javascriptblockedforurls_;
javascriptblockedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_javascriptblockedforurls() {
_has_bits_[1] |= 0x00000004u;
if (javascriptblockedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
javascriptblockedforurls_ = p;
}
return javascriptblockedforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_javascriptblockedforurls() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_javascriptblockedforurls();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.JavaScriptBlockedForUrls)
return _msg;
}
inline void CloudPolicySettings::set_allocated_javascriptblockedforurls(::enterprise_management::StringListPolicyProto* javascriptblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(javascriptblockedforurls_);
}
if (javascriptblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(javascriptblockedforurls));
if (message_arena != submessage_arena) {
javascriptblockedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, javascriptblockedforurls, submessage_arena);
}
_has_bits_[1] |= 0x00000004u;
} else {
_has_bits_[1] &= ~0x00000004u;
}
javascriptblockedforurls_ = javascriptblockedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.JavaScriptBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto LegacySameSiteCookieBehaviorEnabledForDomainList = 626;
inline bool CloudPolicySettings::_internal_has_legacysamesitecookiebehaviorenabledfordomainlist() const {
bool value = (_has_bits_[3] & 0x00000008u) != 0;
PROTOBUF_ASSUME(!value || legacysamesitecookiebehaviorenabledfordomainlist_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_legacysamesitecookiebehaviorenabledfordomainlist() const {
return _internal_has_legacysamesitecookiebehaviorenabledfordomainlist();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_legacysamesitecookiebehaviorenabledfordomainlist() const {
const ::enterprise_management::StringListPolicyProto* p = legacysamesitecookiebehaviorenabledfordomainlist_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::legacysamesitecookiebehaviorenabledfordomainlist() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.LegacySameSiteCookieBehaviorEnabledForDomainList)
return _internal_legacysamesitecookiebehaviorenabledfordomainlist();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_legacysamesitecookiebehaviorenabledfordomainlist(
::enterprise_management::StringListPolicyProto* legacysamesitecookiebehaviorenabledfordomainlist) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(legacysamesitecookiebehaviorenabledfordomainlist_);
}
legacysamesitecookiebehaviorenabledfordomainlist_ = legacysamesitecookiebehaviorenabledfordomainlist;
if (legacysamesitecookiebehaviorenabledfordomainlist) {
_has_bits_[3] |= 0x00000008u;
} else {
_has_bits_[3] &= ~0x00000008u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.LegacySameSiteCookieBehaviorEnabledForDomainList)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_legacysamesitecookiebehaviorenabledfordomainlist() {
_has_bits_[3] &= ~0x00000008u;
::enterprise_management::StringListPolicyProto* temp = legacysamesitecookiebehaviorenabledfordomainlist_;
legacysamesitecookiebehaviorenabledfordomainlist_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_legacysamesitecookiebehaviorenabledfordomainlist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.LegacySameSiteCookieBehaviorEnabledForDomainList)
_has_bits_[3] &= ~0x00000008u;
::enterprise_management::StringListPolicyProto* temp = legacysamesitecookiebehaviorenabledfordomainlist_;
legacysamesitecookiebehaviorenabledfordomainlist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_legacysamesitecookiebehaviorenabledfordomainlist() {
_has_bits_[3] |= 0x00000008u;
if (legacysamesitecookiebehaviorenabledfordomainlist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
legacysamesitecookiebehaviorenabledfordomainlist_ = p;
}
return legacysamesitecookiebehaviorenabledfordomainlist_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_legacysamesitecookiebehaviorenabledfordomainlist() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_legacysamesitecookiebehaviorenabledfordomainlist();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.LegacySameSiteCookieBehaviorEnabledForDomainList)
return _msg;
}
inline void CloudPolicySettings::set_allocated_legacysamesitecookiebehaviorenabledfordomainlist(::enterprise_management::StringListPolicyProto* legacysamesitecookiebehaviorenabledfordomainlist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(legacysamesitecookiebehaviorenabledfordomainlist_);
}
if (legacysamesitecookiebehaviorenabledfordomainlist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(legacysamesitecookiebehaviorenabledfordomainlist));
if (message_arena != submessage_arena) {
legacysamesitecookiebehaviorenabledfordomainlist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, legacysamesitecookiebehaviorenabledfordomainlist, submessage_arena);
}
_has_bits_[3] |= 0x00000008u;
} else {
_has_bits_[3] &= ~0x00000008u;
}
legacysamesitecookiebehaviorenabledfordomainlist_ = legacysamesitecookiebehaviorenabledfordomainlist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.LegacySameSiteCookieBehaviorEnabledForDomainList)
}

// optional .enterprise_management.BooleanPolicyProto LensCameraAssistedSearchEnabled = 855;
inline bool CloudPolicySettings::_internal_has_lenscameraassistedsearchenabled() const {
bool value = (_has_bits_[3] & 0x40000000u) != 0;
PROTOBUF_ASSUME(!value || lenscameraassistedsearchenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_lenscameraassistedsearchenabled() const {
return _internal_has_lenscameraassistedsearchenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_lenscameraassistedsearchenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = lenscameraassistedsearchenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::lenscameraassistedsearchenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.LensCameraAssistedSearchEnabled)
return _internal_lenscameraassistedsearchenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_lenscameraassistedsearchenabled(
::enterprise_management::BooleanPolicyProto* lenscameraassistedsearchenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(lenscameraassistedsearchenabled_);
}
lenscameraassistedsearchenabled_ = lenscameraassistedsearchenabled;
if (lenscameraassistedsearchenabled) {
_has_bits_[3] |= 0x40000000u;
} else {
_has_bits_[3] &= ~0x40000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.LensCameraAssistedSearchEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_lenscameraassistedsearchenabled() {
_has_bits_[3] &= ~0x40000000u;
::enterprise_management::BooleanPolicyProto* temp = lenscameraassistedsearchenabled_;
lenscameraassistedsearchenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_lenscameraassistedsearchenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.LensCameraAssistedSearchEnabled)
_has_bits_[3] &= ~0x40000000u;
::enterprise_management::BooleanPolicyProto* temp = lenscameraassistedsearchenabled_;
lenscameraassistedsearchenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_lenscameraassistedsearchenabled() {
_has_bits_[3] |= 0x40000000u;
if (lenscameraassistedsearchenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
lenscameraassistedsearchenabled_ = p;
}
return lenscameraassistedsearchenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_lenscameraassistedsearchenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_lenscameraassistedsearchenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.LensCameraAssistedSearchEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_lenscameraassistedsearchenabled(::enterprise_management::BooleanPolicyProto* lenscameraassistedsearchenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(lenscameraassistedsearchenabled_);
}
if (lenscameraassistedsearchenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(lenscameraassistedsearchenabled));
if (message_arena != submessage_arena) {
lenscameraassistedsearchenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, lenscameraassistedsearchenabled, submessage_arena);
}
_has_bits_[3] |= 0x40000000u;
} else {
_has_bits_[3] &= ~0x40000000u;
}
lenscameraassistedsearchenabled_ = lenscameraassistedsearchenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.LensCameraAssistedSearchEnabled)
}

// optional .enterprise_management.BooleanPolicyProto InsecurePrivateNetworkRequestsAllowed = 768;
inline bool CloudPolicySettings::_internal_has_insecureprivatenetworkrequestsallowed() const {
bool value = (_has_bits_[3] & 0x00100000u) != 0;
PROTOBUF_ASSUME(!value || insecureprivatenetworkrequestsallowed_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_insecureprivatenetworkrequestsallowed() const {
return _internal_has_insecureprivatenetworkrequestsallowed();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_insecureprivatenetworkrequestsallowed() const {
const ::enterprise_management::BooleanPolicyProto* p = insecureprivatenetworkrequestsallowed_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::insecureprivatenetworkrequestsallowed() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.InsecurePrivateNetworkRequestsAllowed)
return _internal_insecureprivatenetworkrequestsallowed();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_insecureprivatenetworkrequestsallowed(
::enterprise_management::BooleanPolicyProto* insecureprivatenetworkrequestsallowed) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(insecureprivatenetworkrequestsallowed_);
}
insecureprivatenetworkrequestsallowed_ = insecureprivatenetworkrequestsallowed;
if (insecureprivatenetworkrequestsallowed) {
_has_bits_[3] |= 0x00100000u;
} else {
_has_bits_[3] &= ~0x00100000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.InsecurePrivateNetworkRequestsAllowed)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_insecureprivatenetworkrequestsallowed() {
_has_bits_[3] &= ~0x00100000u;
::enterprise_management::BooleanPolicyProto* temp = insecureprivatenetworkrequestsallowed_;
insecureprivatenetworkrequestsallowed_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_insecureprivatenetworkrequestsallowed() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.InsecurePrivateNetworkRequestsAllowed)
_has_bits_[3] &= ~0x00100000u;
::enterprise_management::BooleanPolicyProto* temp = insecureprivatenetworkrequestsallowed_;
insecureprivatenetworkrequestsallowed_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_insecureprivatenetworkrequestsallowed() {
_has_bits_[3] |= 0x00100000u;
if (insecureprivatenetworkrequestsallowed_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
insecureprivatenetworkrequestsallowed_ = p;
}
return insecureprivatenetworkrequestsallowed_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_insecureprivatenetworkrequestsallowed() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_insecureprivatenetworkrequestsallowed();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.InsecurePrivateNetworkRequestsAllowed)
return _msg;
}
inline void CloudPolicySettings::set_allocated_insecureprivatenetworkrequestsallowed(::enterprise_management::BooleanPolicyProto* insecureprivatenetworkrequestsallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(insecureprivatenetworkrequestsallowed_);
}
if (insecureprivatenetworkrequestsallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(insecureprivatenetworkrequestsallowed));
if (message_arena != submessage_arena) {
insecureprivatenetworkrequestsallowed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, insecureprivatenetworkrequestsallowed, submessage_arena);
}
_has_bits_[3] |= 0x00100000u;
} else {
_has_bits_[3] &= ~0x00100000u;
}
insecureprivatenetworkrequestsallowed_ = insecureprivatenetworkrequestsallowed;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.InsecurePrivateNetworkRequestsAllowed)
}

// optional .enterprise_management.StringListPolicyProto InsecurePrivateNetworkRequestsAllowedForUrls = 769;
inline bool CloudPolicySettings::_internal_has_insecureprivatenetworkrequestsallowedforurls() const {
bool value = (_has_bits_[3] & 0x00200000u) != 0;
PROTOBUF_ASSUME(!value || insecureprivatenetworkrequestsallowedforurls_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_insecureprivatenetworkrequestsallowedforurls() const {
return _internal_has_insecureprivatenetworkrequestsallowedforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_insecureprivatenetworkrequestsallowedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = insecureprivatenetworkrequestsallowedforurls_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::insecureprivatenetworkrequestsallowedforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.InsecurePrivateNetworkRequestsAllowedForUrls)
return _internal_insecureprivatenetworkrequestsallowedforurls();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_insecureprivatenetworkrequestsallowedforurls(
::enterprise_management::StringListPolicyProto* insecureprivatenetworkrequestsallowedforurls) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(insecureprivatenetworkrequestsallowedforurls_);
}
insecureprivatenetworkrequestsallowedforurls_ = insecureprivatenetworkrequestsallowedforurls;
if (insecureprivatenetworkrequestsallowedforurls) {
_has_bits_[3] |= 0x00200000u;
} else {
_has_bits_[3] &= ~0x00200000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.InsecurePrivateNetworkRequestsAllowedForUrls)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_insecureprivatenetworkrequestsallowedforurls() {
_has_bits_[3] &= ~0x00200000u;
::enterprise_management::StringListPolicyProto* temp = insecureprivatenetworkrequestsallowedforurls_;
insecureprivatenetworkrequestsallowedforurls_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_insecureprivatenetworkrequestsallowedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.InsecurePrivateNetworkRequestsAllowedForUrls)
_has_bits_[3] &= ~0x00200000u;
::enterprise_management::StringListPolicyProto* temp = insecureprivatenetworkrequestsallowedforurls_;
insecureprivatenetworkrequestsallowedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_insecureprivatenetworkrequestsallowedforurls() {
_has_bits_[3] |= 0x00200000u;
if (insecureprivatenetworkrequestsallowedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
insecureprivatenetworkrequestsallowedforurls_ = p;
}
return insecureprivatenetworkrequestsallowedforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_insecureprivatenetworkrequestsallowedforurls() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_insecureprivatenetworkrequestsallowedforurls();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.InsecurePrivateNetworkRequestsAllowedForUrls)
return _msg;
}
inline void CloudPolicySettings::set_allocated_insecureprivatenetworkrequestsallowedforurls(::enterprise_management::StringListPolicyProto* insecureprivatenetworkrequestsallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(insecureprivatenetworkrequestsallowedforurls_);
}
if (insecureprivatenetworkrequestsallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(insecureprivatenetworkrequestsallowedforurls));
if (message_arena != submessage_arena) {
insecureprivatenetworkrequestsallowedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, insecureprivatenetworkrequestsallowedforurls, submessage_arena);
}
_has_bits_[3] |= 0x00200000u;
} else {
_has_bits_[3] &= ~0x00200000u;
}
insecureprivatenetworkrequestsallowedforurls_ = insecureprivatenetworkrequestsallowedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.InsecurePrivateNetworkRequestsAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto PopupsAllowedForUrls = 77;
inline bool CloudPolicySettings::_internal_has_popupsallowedforurls() const {
bool value = (_has_bits_[1] & 0x00000008u) != 0;
PROTOBUF_ASSUME(!value || popupsallowedforurls_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_popupsallowedforurls() const {
return _internal_has_popupsallowedforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_popupsallowedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = popupsallowedforurls_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::popupsallowedforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PopupsAllowedForUrls)
return _internal_popupsallowedforurls();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_popupsallowedforurls(
::enterprise_management::StringListPolicyProto* popupsallowedforurls) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(popupsallowedforurls_);
}
popupsallowedforurls_ = popupsallowedforurls;
if (popupsallowedforurls) {
_has_bits_[1] |= 0x00000008u;
} else {
_has_bits_[1] &= ~0x00000008u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.PopupsAllowedForUrls)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_popupsallowedforurls() {
_has_bits_[1] &= ~0x00000008u;
::enterprise_management::StringListPolicyProto* temp = popupsallowedforurls_;
popupsallowedforurls_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_popupsallowedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PopupsAllowedForUrls)
_has_bits_[1] &= ~0x00000008u;
::enterprise_management::StringListPolicyProto* temp = popupsallowedforurls_;
popupsallowedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_popupsallowedforurls() {
_has_bits_[1] |= 0x00000008u;
if (popupsallowedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
popupsallowedforurls_ = p;
}
return popupsallowedforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_popupsallowedforurls() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_popupsallowedforurls();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PopupsAllowedForUrls)
return _msg;
}
inline void CloudPolicySettings::set_allocated_popupsallowedforurls(::enterprise_management::StringListPolicyProto* popupsallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(popupsallowedforurls_);
}
if (popupsallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(popupsallowedforurls));
if (message_arena != submessage_arena) {
popupsallowedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, popupsallowedforurls, submessage_arena);
}
_has_bits_[1] |= 0x00000008u;
} else {
_has_bits_[1] &= ~0x00000008u;
}
popupsallowedforurls_ = popupsallowedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PopupsAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto PopupsBlockedForUrls = 78;
inline bool CloudPolicySettings::_internal_has_popupsblockedforurls() const {
bool value = (_has_bits_[1] & 0x00000010u) != 0;
PROTOBUF_ASSUME(!value || popupsblockedforurls_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_popupsblockedforurls() const {
return _internal_has_popupsblockedforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_popupsblockedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = popupsblockedforurls_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::popupsblockedforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PopupsBlockedForUrls)
return _internal_popupsblockedforurls();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_popupsblockedforurls(
::enterprise_management::StringListPolicyProto* popupsblockedforurls) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(popupsblockedforurls_);
}
popupsblockedforurls_ = popupsblockedforurls;
if (popupsblockedforurls) {
_has_bits_[1] |= 0x00000010u;
} else {
_has_bits_[1] &= ~0x00000010u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.PopupsBlockedForUrls)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_popupsblockedforurls() {
_has_bits_[1] &= ~0x00000010u;
::enterprise_management::StringListPolicyProto* temp = popupsblockedforurls_;
popupsblockedforurls_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_popupsblockedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PopupsBlockedForUrls)
_has_bits_[1] &= ~0x00000010u;
::enterprise_management::StringListPolicyProto* temp = popupsblockedforurls_;
popupsblockedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_popupsblockedforurls() {
_has_bits_[1] |= 0x00000010u;
if (popupsblockedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
popupsblockedforurls_ = p;
}
return popupsblockedforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_popupsblockedforurls() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_popupsblockedforurls();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PopupsBlockedForUrls)
return _msg;
}
inline void CloudPolicySettings::set_allocated_popupsblockedforurls(::enterprise_management::StringListPolicyProto* popupsblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(popupsblockedforurls_);
}
if (popupsblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(popupsblockedforurls));
if (message_arena != submessage_arena) {
popupsblockedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, popupsblockedforurls, submessage_arena);
}
_has_bits_[1] |= 0x00000010u;
} else {
_has_bits_[1] &= ~0x00000010u;
}
popupsblockedforurls_ = popupsblockedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PopupsBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto SensorsAllowedForUrls = 757;
inline bool CloudPolicySettings::_internal_has_sensorsallowedforurls() const {
bool value = (_has_bits_[3] & 0x00020000u) != 0;
PROTOBUF_ASSUME(!value || sensorsallowedforurls_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_sensorsallowedforurls() const {
return _internal_has_sensorsallowedforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_sensorsallowedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = sensorsallowedforurls_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::sensorsallowedforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SensorsAllowedForUrls)
return _internal_sensorsallowedforurls();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_sensorsallowedforurls(
::enterprise_management::StringListPolicyProto* sensorsallowedforurls) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sensorsallowedforurls_);
}
sensorsallowedforurls_ = sensorsallowedforurls;
if (sensorsallowedforurls) {
_has_bits_[3] |= 0x00020000u;
} else {
_has_bits_[3] &= ~0x00020000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.SensorsAllowedForUrls)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_sensorsallowedforurls() {
_has_bits_[3] &= ~0x00020000u;
::enterprise_management::StringListPolicyProto* temp = sensorsallowedforurls_;
sensorsallowedforurls_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_sensorsallowedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SensorsAllowedForUrls)
_has_bits_[3] &= ~0x00020000u;
::enterprise_management::StringListPolicyProto* temp = sensorsallowedforurls_;
sensorsallowedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_sensorsallowedforurls() {
_has_bits_[3] |= 0x00020000u;
if (sensorsallowedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
sensorsallowedforurls_ = p;
}
return sensorsallowedforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_sensorsallowedforurls() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_sensorsallowedforurls();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SensorsAllowedForUrls)
return _msg;
}
inline void CloudPolicySettings::set_allocated_sensorsallowedforurls(::enterprise_management::StringListPolicyProto* sensorsallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(sensorsallowedforurls_);
}
if (sensorsallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sensorsallowedforurls));
if (message_arena != submessage_arena) {
sensorsallowedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, sensorsallowedforurls, submessage_arena);
}
_has_bits_[3] |= 0x00020000u;
} else {
_has_bits_[3] &= ~0x00020000u;
}
sensorsallowedforurls_ = sensorsallowedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SensorsAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto SensorsBlockedForUrls = 758;
inline bool CloudPolicySettings::_internal_has_sensorsblockedforurls() const {
bool value = (_has_bits_[3] & 0x00040000u) != 0;
PROTOBUF_ASSUME(!value || sensorsblockedforurls_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_sensorsblockedforurls() const {
return _internal_has_sensorsblockedforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_sensorsblockedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = sensorsblockedforurls_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::sensorsblockedforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SensorsBlockedForUrls)
return _internal_sensorsblockedforurls();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_sensorsblockedforurls(
::enterprise_management::StringListPolicyProto* sensorsblockedforurls) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sensorsblockedforurls_);
}
sensorsblockedforurls_ = sensorsblockedforurls;
if (sensorsblockedforurls) {
_has_bits_[3] |= 0x00040000u;
} else {
_has_bits_[3] &= ~0x00040000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.SensorsBlockedForUrls)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_sensorsblockedforurls() {
_has_bits_[3] &= ~0x00040000u;
::enterprise_management::StringListPolicyProto* temp = sensorsblockedforurls_;
sensorsblockedforurls_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_sensorsblockedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SensorsBlockedForUrls)
_has_bits_[3] &= ~0x00040000u;
::enterprise_management::StringListPolicyProto* temp = sensorsblockedforurls_;
sensorsblockedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_sensorsblockedforurls() {
_has_bits_[3] |= 0x00040000u;
if (sensorsblockedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
sensorsblockedforurls_ = p;
}
return sensorsblockedforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_sensorsblockedforurls() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_sensorsblockedforurls();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SensorsBlockedForUrls)
return _msg;
}
inline void CloudPolicySettings::set_allocated_sensorsblockedforurls(::enterprise_management::StringListPolicyProto* sensorsblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(sensorsblockedforurls_);
}
if (sensorsblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sensorsblockedforurls));
if (message_arena != submessage_arena) {
sensorsblockedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, sensorsblockedforurls, submessage_arena);
}
_has_bits_[3] |= 0x00040000u;
} else {
_has_bits_[3] &= ~0x00040000u;
}
sensorsblockedforurls_ = sensorsblockedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SensorsBlockedForUrls)
}

// optional .enterprise_management.BooleanPolicyProto TranslateEnabled = 82;
inline bool CloudPolicySettings::_internal_has_translateenabled() const {
bool value = (_has_bits_[1] & 0x00000040u) != 0;
PROTOBUF_ASSUME(!value || translateenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_translateenabled() const {
return _internal_has_translateenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_translateenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = translateenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::translateenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.TranslateEnabled)
return _internal_translateenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_translateenabled(
::enterprise_management::BooleanPolicyProto* translateenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(translateenabled_);
}
translateenabled_ = translateenabled;
if (translateenabled) {
_has_bits_[1] |= 0x00000040u;
} else {
_has_bits_[1] &= ~0x00000040u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.TranslateEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_translateenabled() {
_has_bits_[1] &= ~0x00000040u;
::enterprise_management::BooleanPolicyProto* temp = translateenabled_;
translateenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_translateenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.TranslateEnabled)
_has_bits_[1] &= ~0x00000040u;
::enterprise_management::BooleanPolicyProto* temp = translateenabled_;
translateenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_translateenabled() {
_has_bits_[1] |= 0x00000040u;
if (translateenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
translateenabled_ = p;
}
return translateenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_translateenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_translateenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.TranslateEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_translateenabled(::enterprise_management::BooleanPolicyProto* translateenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(translateenabled_);
}
if (translateenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(translateenabled));
if (message_arena != submessage_arena) {
translateenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, translateenabled, submessage_arena);
}
_has_bits_[1] |= 0x00000040u;
} else {
_has_bits_[1] &= ~0x00000040u;
}
translateenabled_ = translateenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.TranslateEnabled)
}

// optional .enterprise_management.BooleanPolicyProto EditBookmarksEnabled = 85;
inline bool CloudPolicySettings::_internal_has_editbookmarksenabled() const {
bool value = (_has_bits_[1] & 0x00000080u) != 0;
PROTOBUF_ASSUME(!value || editbookmarksenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_editbookmarksenabled() const {
return _internal_has_editbookmarksenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_editbookmarksenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = editbookmarksenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::editbookmarksenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EditBookmarksEnabled)
return _internal_editbookmarksenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_editbookmarksenabled(
::enterprise_management::BooleanPolicyProto* editbookmarksenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(editbookmarksenabled_);
}
editbookmarksenabled_ = editbookmarksenabled;
if (editbookmarksenabled) {
_has_bits_[1] |= 0x00000080u;
} else {
_has_bits_[1] &= ~0x00000080u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.EditBookmarksEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_editbookmarksenabled() {
_has_bits_[1] &= ~0x00000080u;
::enterprise_management::BooleanPolicyProto* temp = editbookmarksenabled_;
editbookmarksenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_editbookmarksenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EditBookmarksEnabled)
_has_bits_[1] &= ~0x00000080u;
::enterprise_management::BooleanPolicyProto* temp = editbookmarksenabled_;
editbookmarksenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_editbookmarksenabled() {
_has_bits_[1] |= 0x00000080u;
if (editbookmarksenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
editbookmarksenabled_ = p;
}
return editbookmarksenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_editbookmarksenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_editbookmarksenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EditBookmarksEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_editbookmarksenabled(::enterprise_management::BooleanPolicyProto* editbookmarksenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(editbookmarksenabled_);
}
if (editbookmarksenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(editbookmarksenabled));
if (message_arena != submessage_arena) {
editbookmarksenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, editbookmarksenabled, submessage_arena);
}
_has_bits_[1] |= 0x00000080u;
} else {
_has_bits_[1] &= ~0x00000080u;
}
editbookmarksenabled_ = editbookmarksenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EditBookmarksEnabled)
}

// optional .enterprise_management.StringListPolicyProto URLBlocklist = 738;
inline bool CloudPolicySettings::_internal_has_urlblocklist() const {
bool value = (_has_bits_[3] & 0x00000800u) != 0;
PROTOBUF_ASSUME(!value || urlblocklist_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_urlblocklist() const {
return _internal_has_urlblocklist();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_urlblocklist() const {
const ::enterprise_management::StringListPolicyProto* p = urlblocklist_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::urlblocklist() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.URLBlocklist)
return _internal_urlblocklist();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_urlblocklist(
::enterprise_management::StringListPolicyProto* urlblocklist) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(urlblocklist_);
}
urlblocklist_ = urlblocklist;
if (urlblocklist) {
_has_bits_[3] |= 0x00000800u;
} else {
_has_bits_[3] &= ~0x00000800u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.URLBlocklist)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_urlblocklist() {
_has_bits_[3] &= ~0x00000800u;
::enterprise_management::StringListPolicyProto* temp = urlblocklist_;
urlblocklist_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_urlblocklist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.URLBlocklist)
_has_bits_[3] &= ~0x00000800u;
::enterprise_management::StringListPolicyProto* temp = urlblocklist_;
urlblocklist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_urlblocklist() {
_has_bits_[3] |= 0x00000800u;
if (urlblocklist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
urlblocklist_ = p;
}
return urlblocklist_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_urlblocklist() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_urlblocklist();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.URLBlocklist)
return _msg;
}
inline void CloudPolicySettings::set_allocated_urlblocklist(::enterprise_management::StringListPolicyProto* urlblocklist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(urlblocklist_);
}
if (urlblocklist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(urlblocklist));
if (message_arena != submessage_arena) {
urlblocklist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, urlblocklist, submessage_arena);
}
_has_bits_[3] |= 0x00000800u;
} else {
_has_bits_[3] &= ~0x00000800u;
}
urlblocklist_ = urlblocklist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.URLBlocklist)
}

// optional .enterprise_management.StringListPolicyProto URLAllowlist = 739;
inline bool CloudPolicySettings::_internal_has_urlallowlist() const {
bool value = (_has_bits_[3] & 0x00001000u) != 0;
PROTOBUF_ASSUME(!value || urlallowlist_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_urlallowlist() const {
return _internal_has_urlallowlist();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_urlallowlist() const {
const ::enterprise_management::StringListPolicyProto* p = urlallowlist_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::urlallowlist() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.URLAllowlist)
return _internal_urlallowlist();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_urlallowlist(
::enterprise_management::StringListPolicyProto* urlallowlist) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(urlallowlist_);
}
urlallowlist_ = urlallowlist;
if (urlallowlist) {
_has_bits_[3] |= 0x00001000u;
} else {
_has_bits_[3] &= ~0x00001000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.URLAllowlist)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_urlallowlist() {
_has_bits_[3] &= ~0x00001000u;
::enterprise_management::StringListPolicyProto* temp = urlallowlist_;
urlallowlist_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_urlallowlist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.URLAllowlist)
_has_bits_[3] &= ~0x00001000u;
::enterprise_management::StringListPolicyProto* temp = urlallowlist_;
urlallowlist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_urlallowlist() {
_has_bits_[3] |= 0x00001000u;
if (urlallowlist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
urlallowlist_ = p;
}
return urlallowlist_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_urlallowlist() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_urlallowlist();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.URLAllowlist)
return _msg;
}
inline void CloudPolicySettings::set_allocated_urlallowlist(::enterprise_management::StringListPolicyProto* urlallowlist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(urlallowlist_);
}
if (urlallowlist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(urlallowlist));
if (message_arena != submessage_arena) {
urlallowlist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, urlallowlist, submessage_arena);
}
_has_bits_[3] |= 0x00001000u;
} else {
_has_bits_[3] &= ~0x00001000u;
}
urlallowlist_ = urlallowlist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.URLAllowlist)
}

// optional .enterprise_management.BooleanPolicyProto PolicyAtomicGroupsEnabled = 586;
inline bool CloudPolicySettings::_internal_has_policyatomicgroupsenabled() const {
bool value = (_has_bits_[3] & 0x00000001u) != 0;
PROTOBUF_ASSUME(!value || policyatomicgroupsenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_policyatomicgroupsenabled() const {
return _internal_has_policyatomicgroupsenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_policyatomicgroupsenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = policyatomicgroupsenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::policyatomicgroupsenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PolicyAtomicGroupsEnabled)
return _internal_policyatomicgroupsenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_policyatomicgroupsenabled(
::enterprise_management::BooleanPolicyProto* policyatomicgroupsenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(policyatomicgroupsenabled_);
}
policyatomicgroupsenabled_ = policyatomicgroupsenabled;
if (policyatomicgroupsenabled) {
_has_bits_[3] |= 0x00000001u;
} else {
_has_bits_[3] &= ~0x00000001u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.PolicyAtomicGroupsEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_policyatomicgroupsenabled() {
_has_bits_[3] &= ~0x00000001u;
::enterprise_management::BooleanPolicyProto* temp = policyatomicgroupsenabled_;
policyatomicgroupsenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_policyatomicgroupsenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PolicyAtomicGroupsEnabled)
_has_bits_[3] &= ~0x00000001u;
::enterprise_management::BooleanPolicyProto* temp = policyatomicgroupsenabled_;
policyatomicgroupsenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_policyatomicgroupsenabled() {
_has_bits_[3] |= 0x00000001u;
if (policyatomicgroupsenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
policyatomicgroupsenabled_ = p;
}
return policyatomicgroupsenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_policyatomicgroupsenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_policyatomicgroupsenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PolicyAtomicGroupsEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_policyatomicgroupsenabled(::enterprise_management::BooleanPolicyProto* policyatomicgroupsenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(policyatomicgroupsenabled_);
}
if (policyatomicgroupsenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(policyatomicgroupsenabled));
if (message_arena != submessage_arena) {
policyatomicgroupsenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, policyatomicgroupsenabled, submessage_arena);
}
_has_bits_[3] |= 0x00000001u;
} else {
_has_bits_[3] &= ~0x00000001u;
}
policyatomicgroupsenabled_ = policyatomicgroupsenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PolicyAtomicGroupsEnabled)
}

// optional .enterprise_management.StringListPolicyProto PolicyListMultipleSourceMergeList = 556;
inline bool CloudPolicySettings::_internal_has_policylistmultiplesourcemergelist() const {
bool value = (_has_bits_[2] & 0x10000000u) != 0;
PROTOBUF_ASSUME(!value || policylistmultiplesourcemergelist_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_policylistmultiplesourcemergelist() const {
return _internal_has_policylistmultiplesourcemergelist();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_policylistmultiplesourcemergelist() const {
const ::enterprise_management::StringListPolicyProto* p = policylistmultiplesourcemergelist_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::policylistmultiplesourcemergelist() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PolicyListMultipleSourceMergeList)
return _internal_policylistmultiplesourcemergelist();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_policylistmultiplesourcemergelist(
::enterprise_management::StringListPolicyProto* policylistmultiplesourcemergelist) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(policylistmultiplesourcemergelist_);
}
policylistmultiplesourcemergelist_ = policylistmultiplesourcemergelist;
if (policylistmultiplesourcemergelist) {
_has_bits_[2] |= 0x10000000u;
} else {
_has_bits_[2] &= ~0x10000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.PolicyListMultipleSourceMergeList)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_policylistmultiplesourcemergelist() {
_has_bits_[2] &= ~0x10000000u;
::enterprise_management::StringListPolicyProto* temp = policylistmultiplesourcemergelist_;
policylistmultiplesourcemergelist_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_policylistmultiplesourcemergelist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PolicyListMultipleSourceMergeList)
_has_bits_[2] &= ~0x10000000u;
::enterprise_management::StringListPolicyProto* temp = policylistmultiplesourcemergelist_;
policylistmultiplesourcemergelist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_policylistmultiplesourcemergelist() {
_has_bits_[2] |= 0x10000000u;
if (policylistmultiplesourcemergelist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
policylistmultiplesourcemergelist_ = p;
}
return policylistmultiplesourcemergelist_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_policylistmultiplesourcemergelist() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_policylistmultiplesourcemergelist();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PolicyListMultipleSourceMergeList)
return _msg;
}
inline void CloudPolicySettings::set_allocated_policylistmultiplesourcemergelist(::enterprise_management::StringListPolicyProto* policylistmultiplesourcemergelist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(policylistmultiplesourcemergelist_);
}
if (policylistmultiplesourcemergelist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(policylistmultiplesourcemergelist));
if (message_arena != submessage_arena) {
policylistmultiplesourcemergelist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, policylistmultiplesourcemergelist, submessage_arena);
}
_has_bits_[2] |= 0x10000000u;
} else {
_has_bits_[2] &= ~0x10000000u;
}
policylistmultiplesourcemergelist_ = policylistmultiplesourcemergelist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PolicyListMultipleSourceMergeList)
}

// optional .enterprise_management.StringListPolicyProto PolicyDictionaryMultipleSourceMergeList = 567;
inline bool CloudPolicySettings::_internal_has_policydictionarymultiplesourcemergelist() const {
bool value = (_has_bits_[2] & 0x20000000u) != 0;
PROTOBUF_ASSUME(!value || policydictionarymultiplesourcemergelist_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_policydictionarymultiplesourcemergelist() const {
return _internal_has_policydictionarymultiplesourcemergelist();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_policydictionarymultiplesourcemergelist() const {
const ::enterprise_management::StringListPolicyProto* p = policydictionarymultiplesourcemergelist_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::policydictionarymultiplesourcemergelist() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PolicyDictionaryMultipleSourceMergeList)
return _internal_policydictionarymultiplesourcemergelist();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_policydictionarymultiplesourcemergelist(
::enterprise_management::StringListPolicyProto* policydictionarymultiplesourcemergelist) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(policydictionarymultiplesourcemergelist_);
}
policydictionarymultiplesourcemergelist_ = policydictionarymultiplesourcemergelist;
if (policydictionarymultiplesourcemergelist) {
_has_bits_[2] |= 0x20000000u;
} else {
_has_bits_[2] &= ~0x20000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.PolicyDictionaryMultipleSourceMergeList)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_policydictionarymultiplesourcemergelist() {
_has_bits_[2] &= ~0x20000000u;
::enterprise_management::StringListPolicyProto* temp = policydictionarymultiplesourcemergelist_;
policydictionarymultiplesourcemergelist_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_policydictionarymultiplesourcemergelist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PolicyDictionaryMultipleSourceMergeList)
_has_bits_[2] &= ~0x20000000u;
::enterprise_management::StringListPolicyProto* temp = policydictionarymultiplesourcemergelist_;
policydictionarymultiplesourcemergelist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_policydictionarymultiplesourcemergelist() {
_has_bits_[2] |= 0x20000000u;
if (policydictionarymultiplesourcemergelist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
policydictionarymultiplesourcemergelist_ = p;
}
return policydictionarymultiplesourcemergelist_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_policydictionarymultiplesourcemergelist() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_policydictionarymultiplesourcemergelist();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PolicyDictionaryMultipleSourceMergeList)
return _msg;
}
inline void CloudPolicySettings::set_allocated_policydictionarymultiplesourcemergelist(::enterprise_management::StringListPolicyProto* policydictionarymultiplesourcemergelist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(policydictionarymultiplesourcemergelist_);
}
if (policydictionarymultiplesourcemergelist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(policydictionarymultiplesourcemergelist));
if (message_arena != submessage_arena) {
policydictionarymultiplesourcemergelist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, policydictionarymultiplesourcemergelist, submessage_arena);
}
_has_bits_[2] |= 0x20000000u;
} else {
_has_bits_[2] &= ~0x20000000u;
}
policydictionarymultiplesourcemergelist_ = policydictionarymultiplesourcemergelist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PolicyDictionaryMultipleSourceMergeList)
}

// optional .enterprise_management.BooleanPolicyProto CloudUserPolicyMerge = 861;
inline bool CloudPolicySettings::_internal_has_clouduserpolicymerge() const {
bool value = (_has_bits_[4] & 0x00000001u) != 0;
PROTOBUF_ASSUME(!value || clouduserpolicymerge_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_clouduserpolicymerge() const {
return _internal_has_clouduserpolicymerge();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_clouduserpolicymerge() const {
const ::enterprise_management::BooleanPolicyProto* p = clouduserpolicymerge_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::clouduserpolicymerge() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CloudUserPolicyMerge)
return _internal_clouduserpolicymerge();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_clouduserpolicymerge(
::enterprise_management::BooleanPolicyProto* clouduserpolicymerge) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(clouduserpolicymerge_);
}
clouduserpolicymerge_ = clouduserpolicymerge;
if (clouduserpolicymerge) {
_has_bits_[4] |= 0x00000001u;
} else {
_has_bits_[4] &= ~0x00000001u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.CloudUserPolicyMerge)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_clouduserpolicymerge() {
_has_bits_[4] &= ~0x00000001u;
::enterprise_management::BooleanPolicyProto* temp = clouduserpolicymerge_;
clouduserpolicymerge_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_clouduserpolicymerge() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CloudUserPolicyMerge)
_has_bits_[4] &= ~0x00000001u;
::enterprise_management::BooleanPolicyProto* temp = clouduserpolicymerge_;
clouduserpolicymerge_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_clouduserpolicymerge() {
_has_bits_[4] |= 0x00000001u;
if (clouduserpolicymerge_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
clouduserpolicymerge_ = p;
}
return clouduserpolicymerge_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_clouduserpolicymerge() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_clouduserpolicymerge();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CloudUserPolicyMerge)
return _msg;
}
inline void CloudPolicySettings::set_allocated_clouduserpolicymerge(::enterprise_management::BooleanPolicyProto* clouduserpolicymerge) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(clouduserpolicymerge_);
}
if (clouduserpolicymerge) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(clouduserpolicymerge));
if (message_arena != submessage_arena) {
clouduserpolicymerge = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, clouduserpolicymerge, submessage_arena);
}
_has_bits_[4] |= 0x00000001u;
} else {
_has_bits_[4] &= ~0x00000001u;
}
clouduserpolicymerge_ = clouduserpolicymerge;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CloudUserPolicyMerge)
}

// optional .enterprise_management.StringListPolicyProto EnableExperimentalPolicies = 713;
inline bool CloudPolicySettings::_internal_has_enableexperimentalpolicies() const {
bool value = (_has_bits_[3] & 0x00000200u) != 0;
PROTOBUF_ASSUME(!value || enableexperimentalpolicies_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_enableexperimentalpolicies() const {
return _internal_has_enableexperimentalpolicies();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_enableexperimentalpolicies() const {
const ::enterprise_management::StringListPolicyProto* p = enableexperimentalpolicies_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::enableexperimentalpolicies() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnableExperimentalPolicies)
return _internal_enableexperimentalpolicies();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_enableexperimentalpolicies(
::enterprise_management::StringListPolicyProto* enableexperimentalpolicies) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(enableexperimentalpolicies_);
}
enableexperimentalpolicies_ = enableexperimentalpolicies;
if (enableexperimentalpolicies) {
_has_bits_[3] |= 0x00000200u;
} else {
_has_bits_[3] &= ~0x00000200u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.EnableExperimentalPolicies)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_enableexperimentalpolicies() {
_has_bits_[3] &= ~0x00000200u;
::enterprise_management::StringListPolicyProto* temp = enableexperimentalpolicies_;
enableexperimentalpolicies_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_enableexperimentalpolicies() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnableExperimentalPolicies)
_has_bits_[3] &= ~0x00000200u;
::enterprise_management::StringListPolicyProto* temp = enableexperimentalpolicies_;
enableexperimentalpolicies_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_enableexperimentalpolicies() {
_has_bits_[3] |= 0x00000200u;
if (enableexperimentalpolicies_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
enableexperimentalpolicies_ = p;
}
return enableexperimentalpolicies_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_enableexperimentalpolicies() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_enableexperimentalpolicies();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnableExperimentalPolicies)
return _msg;
}
inline void CloudPolicySettings::set_allocated_enableexperimentalpolicies(::enterprise_management::StringListPolicyProto* enableexperimentalpolicies) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(enableexperimentalpolicies_);
}
if (enableexperimentalpolicies) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(enableexperimentalpolicies));
if (message_arena != submessage_arena) {
enableexperimentalpolicies = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, enableexperimentalpolicies, submessage_arena);
}
_has_bits_[3] |= 0x00000200u;
} else {
_has_bits_[3] &= ~0x00000200u;
}
enableexperimentalpolicies_ = enableexperimentalpolicies;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnableExperimentalPolicies)
}

// optional .enterprise_management.BooleanPolicyProto DisableSafeBrowsingProceedAnyway = 152;
inline bool CloudPolicySettings::_internal_has_disablesafebrowsingproceedanyway() const {
bool value = (_has_bits_[1] & 0x00000400u) != 0;
PROTOBUF_ASSUME(!value || disablesafebrowsingproceedanyway_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_disablesafebrowsingproceedanyway() const {
return _internal_has_disablesafebrowsingproceedanyway();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_disablesafebrowsingproceedanyway() const {
const ::enterprise_management::BooleanPolicyProto* p = disablesafebrowsingproceedanyway_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::disablesafebrowsingproceedanyway() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisableSafeBrowsingProceedAnyway)
return _internal_disablesafebrowsingproceedanyway();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_disablesafebrowsingproceedanyway(
::enterprise_management::BooleanPolicyProto* disablesafebrowsingproceedanyway) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(disablesafebrowsingproceedanyway_);
}
disablesafebrowsingproceedanyway_ = disablesafebrowsingproceedanyway;
if (disablesafebrowsingproceedanyway) {
_has_bits_[1] |= 0x00000400u;
} else {
_has_bits_[1] &= ~0x00000400u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.DisableSafeBrowsingProceedAnyway)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_disablesafebrowsingproceedanyway() {
_has_bits_[1] &= ~0x00000400u;
::enterprise_management::BooleanPolicyProto* temp = disablesafebrowsingproceedanyway_;
disablesafebrowsingproceedanyway_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_disablesafebrowsingproceedanyway() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisableSafeBrowsingProceedAnyway)
_has_bits_[1] &= ~0x00000400u;
::enterprise_management::BooleanPolicyProto* temp = disablesafebrowsingproceedanyway_;
disablesafebrowsingproceedanyway_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_disablesafebrowsingproceedanyway() {
_has_bits_[1] |= 0x00000400u;
if (disablesafebrowsingproceedanyway_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
disablesafebrowsingproceedanyway_ = p;
}
return disablesafebrowsingproceedanyway_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_disablesafebrowsingproceedanyway() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_disablesafebrowsingproceedanyway();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisableSafeBrowsingProceedAnyway)
return _msg;
}
inline void CloudPolicySettings::set_allocated_disablesafebrowsingproceedanyway(::enterprise_management::BooleanPolicyProto* disablesafebrowsingproceedanyway) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(disablesafebrowsingproceedanyway_);
}
if (disablesafebrowsingproceedanyway) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(disablesafebrowsingproceedanyway));
if (message_arena != submessage_arena) {
disablesafebrowsingproceedanyway = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, disablesafebrowsingproceedanyway, submessage_arena);
}
_has_bits_[1] |= 0x00000400u;
} else {
_has_bits_[1] &= ~0x00000400u;
}
disablesafebrowsingproceedanyway_ = disablesafebrowsingproceedanyway;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisableSafeBrowsingProceedAnyway)
}

// optional .enterprise_management.BooleanPolicyProto BuiltInDnsClientEnabled = 167;
inline bool CloudPolicySettings::_internal_has_builtindnsclientenabled() const {
bool value = (_has_bits_[1] & 0x00002000u) != 0;
PROTOBUF_ASSUME(!value || builtindnsclientenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_builtindnsclientenabled() const {
return _internal_has_builtindnsclientenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_builtindnsclientenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = builtindnsclientenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::builtindnsclientenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BuiltInDnsClientEnabled)
return _internal_builtindnsclientenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_builtindnsclientenabled(
::enterprise_management::BooleanPolicyProto* builtindnsclientenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(builtindnsclientenabled_);
}
builtindnsclientenabled_ = builtindnsclientenabled;
if (builtindnsclientenabled) {
_has_bits_[1] |= 0x00002000u;
} else {
_has_bits_[1] &= ~0x00002000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.BuiltInDnsClientEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_builtindnsclientenabled() {
_has_bits_[1] &= ~0x00002000u;
::enterprise_management::BooleanPolicyProto* temp = builtindnsclientenabled_;
builtindnsclientenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_builtindnsclientenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BuiltInDnsClientEnabled)
_has_bits_[1] &= ~0x00002000u;
::enterprise_management::BooleanPolicyProto* temp = builtindnsclientenabled_;
builtindnsclientenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_builtindnsclientenabled() {
_has_bits_[1] |= 0x00002000u;
if (builtindnsclientenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
builtindnsclientenabled_ = p;
}
return builtindnsclientenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_builtindnsclientenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_builtindnsclientenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BuiltInDnsClientEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_builtindnsclientenabled(::enterprise_management::BooleanPolicyProto* builtindnsclientenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(builtindnsclientenabled_);
}
if (builtindnsclientenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(builtindnsclientenabled));
if (message_arena != submessage_arena) {
builtindnsclientenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, builtindnsclientenabled, submessage_arena);
}
_has_bits_[1] |= 0x00002000u;
} else {
_has_bits_[1] &= ~0x00002000u;
}
builtindnsclientenabled_ = builtindnsclientenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BuiltInDnsClientEnabled)
}

// optional .enterprise_management.StringPolicyProto DnsOverHttpsMode = 584;
inline bool CloudPolicySettings::_internal_has_dnsoverhttpsmode() const {
bool value = (_has_bits_[2] & 0x80000000u) != 0;
PROTOBUF_ASSUME(!value || dnsoverhttpsmode_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_dnsoverhttpsmode() const {
return _internal_has_dnsoverhttpsmode();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_dnsoverhttpsmode() const {
const ::enterprise_management::StringPolicyProto* p = dnsoverhttpsmode_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::dnsoverhttpsmode() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DnsOverHttpsMode)
return _internal_dnsoverhttpsmode();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_dnsoverhttpsmode(
::enterprise_management::StringPolicyProto* dnsoverhttpsmode) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dnsoverhttpsmode_);
}
dnsoverhttpsmode_ = dnsoverhttpsmode;
if (dnsoverhttpsmode) {
_has_bits_[2] |= 0x80000000u;
} else {
_has_bits_[2] &= ~0x80000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.DnsOverHttpsMode)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_dnsoverhttpsmode() {
_has_bits_[2] &= ~0x80000000u;
::enterprise_management::StringPolicyProto* temp = dnsoverhttpsmode_;
dnsoverhttpsmode_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_dnsoverhttpsmode() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DnsOverHttpsMode)
_has_bits_[2] &= ~0x80000000u;
::enterprise_management::StringPolicyProto* temp = dnsoverhttpsmode_;
dnsoverhttpsmode_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_dnsoverhttpsmode() {
_has_bits_[2] |= 0x80000000u;
if (dnsoverhttpsmode_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
dnsoverhttpsmode_ = p;
}
return dnsoverhttpsmode_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_dnsoverhttpsmode() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_dnsoverhttpsmode();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DnsOverHttpsMode)
return _msg;
}
inline void CloudPolicySettings::set_allocated_dnsoverhttpsmode(::enterprise_management::StringPolicyProto* dnsoverhttpsmode) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dnsoverhttpsmode_);
}
if (dnsoverhttpsmode) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dnsoverhttpsmode));
if (message_arena != submessage_arena) {
dnsoverhttpsmode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, dnsoverhttpsmode, submessage_arena);
}
_has_bits_[2] |= 0x80000000u;
} else {
_has_bits_[2] &= ~0x80000000u;
}
dnsoverhttpsmode_ = dnsoverhttpsmode;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DnsOverHttpsMode)
}

// optional .enterprise_management.StringPolicyProto DnsOverHttpsTemplates = 644;
inline bool CloudPolicySettings::_internal_has_dnsoverhttpstemplates() const {
bool value = (_has_bits_[3] & 0x00000010u) != 0;
PROTOBUF_ASSUME(!value || dnsoverhttpstemplates_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_dnsoverhttpstemplates() const {
return _internal_has_dnsoverhttpstemplates();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_dnsoverhttpstemplates() const {
const ::enterprise_management::StringPolicyProto* p = dnsoverhttpstemplates_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::dnsoverhttpstemplates() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DnsOverHttpsTemplates)
return _internal_dnsoverhttpstemplates();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_dnsoverhttpstemplates(
::enterprise_management::StringPolicyProto* dnsoverhttpstemplates) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dnsoverhttpstemplates_);
}
dnsoverhttpstemplates_ = dnsoverhttpstemplates;
if (dnsoverhttpstemplates) {
_has_bits_[3] |= 0x00000010u;
} else {
_has_bits_[3] &= ~0x00000010u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.DnsOverHttpsTemplates)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_dnsoverhttpstemplates() {
_has_bits_[3] &= ~0x00000010u;
::enterprise_management::StringPolicyProto* temp = dnsoverhttpstemplates_;
dnsoverhttpstemplates_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_dnsoverhttpstemplates() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DnsOverHttpsTemplates)
_has_bits_[3] &= ~0x00000010u;
::enterprise_management::StringPolicyProto* temp = dnsoverhttpstemplates_;
dnsoverhttpstemplates_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_dnsoverhttpstemplates() {
_has_bits_[3] |= 0x00000010u;
if (dnsoverhttpstemplates_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
dnsoverhttpstemplates_ = p;
}
return dnsoverhttpstemplates_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_dnsoverhttpstemplates() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_dnsoverhttpstemplates();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DnsOverHttpsTemplates)
return _msg;
}
inline void CloudPolicySettings::set_allocated_dnsoverhttpstemplates(::enterprise_management::StringPolicyProto* dnsoverhttpstemplates) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dnsoverhttpstemplates_);
}
if (dnsoverhttpstemplates) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dnsoverhttpstemplates));
if (message_arena != submessage_arena) {
dnsoverhttpstemplates = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, dnsoverhttpstemplates, submessage_arena);
}
_has_bits_[3] |= 0x00000010u;
} else {
_has_bits_[3] &= ~0x00000010u;
}
dnsoverhttpstemplates_ = dnsoverhttpstemplates;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DnsOverHttpsTemplates)
}

// optional .enterprise_management.BooleanPolicyProto AdditionalDnsQueryTypesEnabled = 859;
inline bool CloudPolicySettings::_internal_has_additionaldnsquerytypesenabled() const {
bool value = (_has_bits_[3] & 0x80000000u) != 0;
PROTOBUF_ASSUME(!value || additionaldnsquerytypesenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_additionaldnsquerytypesenabled() const {
return _internal_has_additionaldnsquerytypesenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_additionaldnsquerytypesenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = additionaldnsquerytypesenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::additionaldnsquerytypesenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AdditionalDnsQueryTypesEnabled)
return _internal_additionaldnsquerytypesenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_additionaldnsquerytypesenabled(
::enterprise_management::BooleanPolicyProto* additionaldnsquerytypesenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(additionaldnsquerytypesenabled_);
}
additionaldnsquerytypesenabled_ = additionaldnsquerytypesenabled;
if (additionaldnsquerytypesenabled) {
_has_bits_[3] |= 0x80000000u;
} else {
_has_bits_[3] &= ~0x80000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.AdditionalDnsQueryTypesEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_additionaldnsquerytypesenabled() {
_has_bits_[3] &= ~0x80000000u;
::enterprise_management::BooleanPolicyProto* temp = additionaldnsquerytypesenabled_;
additionaldnsquerytypesenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_additionaldnsquerytypesenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AdditionalDnsQueryTypesEnabled)
_has_bits_[3] &= ~0x80000000u;
::enterprise_management::BooleanPolicyProto* temp = additionaldnsquerytypesenabled_;
additionaldnsquerytypesenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_additionaldnsquerytypesenabled() {
_has_bits_[3] |= 0x80000000u;
if (additionaldnsquerytypesenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
additionaldnsquerytypesenabled_ = p;
}
return additionaldnsquerytypesenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_additionaldnsquerytypesenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_additionaldnsquerytypesenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AdditionalDnsQueryTypesEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_additionaldnsquerytypesenabled(::enterprise_management::BooleanPolicyProto* additionaldnsquerytypesenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(additionaldnsquerytypesenabled_);
}
if (additionaldnsquerytypesenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(additionaldnsquerytypesenabled));
if (message_arena != submessage_arena) {
additionaldnsquerytypesenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, additionaldnsquerytypesenabled, submessage_arena);
}
_has_bits_[3] |= 0x80000000u;
} else {
_has_bits_[3] &= ~0x80000000u;
}
additionaldnsquerytypesenabled_ = additionaldnsquerytypesenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AdditionalDnsQueryTypesEnabled)
}

// optional .enterprise_management.BooleanPolicyProto SharedClipboardEnabled = 612;
inline bool CloudPolicySettings::_internal_has_sharedclipboardenabled() const {
bool value = (_has_bits_[3] & 0x00000004u) != 0;
PROTOBUF_ASSUME(!value || sharedclipboardenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_sharedclipboardenabled() const {
return _internal_has_sharedclipboardenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_sharedclipboardenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = sharedclipboardenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::sharedclipboardenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SharedClipboardEnabled)
return _internal_sharedclipboardenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_sharedclipboardenabled(
::enterprise_management::BooleanPolicyProto* sharedclipboardenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sharedclipboardenabled_);
}
sharedclipboardenabled_ = sharedclipboardenabled;
if (sharedclipboardenabled) {
_has_bits_[3] |= 0x00000004u;
} else {
_has_bits_[3] &= ~0x00000004u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.SharedClipboardEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_sharedclipboardenabled() {
_has_bits_[3] &= ~0x00000004u;
::enterprise_management::BooleanPolicyProto* temp = sharedclipboardenabled_;
sharedclipboardenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_sharedclipboardenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SharedClipboardEnabled)
_has_bits_[3] &= ~0x00000004u;
::enterprise_management::BooleanPolicyProto* temp = sharedclipboardenabled_;
sharedclipboardenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_sharedclipboardenabled() {
_has_bits_[3] |= 0x00000004u;
if (sharedclipboardenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
sharedclipboardenabled_ = p;
}
return sharedclipboardenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_sharedclipboardenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_sharedclipboardenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SharedClipboardEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_sharedclipboardenabled(::enterprise_management::BooleanPolicyProto* sharedclipboardenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(sharedclipboardenabled_);
}
if (sharedclipboardenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sharedclipboardenabled));
if (message_arena != submessage_arena) {
sharedclipboardenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, sharedclipboardenabled, submessage_arena);
}
_has_bits_[3] |= 0x00000004u;
} else {
_has_bits_[3] &= ~0x00000004u;
}
sharedclipboardenabled_ = sharedclipboardenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SharedClipboardEnabled)
}

// optional .enterprise_management.StringPolicyProto VariationsRestrictParameter = 198;
inline bool CloudPolicySettings::_internal_has_variationsrestrictparameter() const {
bool value = (_has_bits_[1] & 0x00008000u) != 0;
PROTOBUF_ASSUME(!value || variationsrestrictparameter_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_variationsrestrictparameter() const {
return _internal_has_variationsrestrictparameter();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_variationsrestrictparameter() const {
const ::enterprise_management::StringPolicyProto* p = variationsrestrictparameter_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::variationsrestrictparameter() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.VariationsRestrictParameter)
return _internal_variationsrestrictparameter();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_variationsrestrictparameter(
::enterprise_management::StringPolicyProto* variationsrestrictparameter) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(variationsrestrictparameter_);
}
variationsrestrictparameter_ = variationsrestrictparameter;
if (variationsrestrictparameter) {
_has_bits_[1] |= 0x00008000u;
} else {
_has_bits_[1] &= ~0x00008000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.VariationsRestrictParameter)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_variationsrestrictparameter() {
_has_bits_[1] &= ~0x00008000u;
::enterprise_management::StringPolicyProto* temp = variationsrestrictparameter_;
variationsrestrictparameter_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_variationsrestrictparameter() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.VariationsRestrictParameter)
_has_bits_[1] &= ~0x00008000u;
::enterprise_management::StringPolicyProto* temp = variationsrestrictparameter_;
variationsrestrictparameter_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_variationsrestrictparameter() {
_has_bits_[1] |= 0x00008000u;
if (variationsrestrictparameter_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
variationsrestrictparameter_ = p;
}
return variationsrestrictparameter_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_variationsrestrictparameter() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_variationsrestrictparameter();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.VariationsRestrictParameter)
return _msg;
}
inline void CloudPolicySettings::set_allocated_variationsrestrictparameter(::enterprise_management::StringPolicyProto* variationsrestrictparameter) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(variationsrestrictparameter_);
}
if (variationsrestrictparameter) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(variationsrestrictparameter));
if (message_arena != submessage_arena) {
variationsrestrictparameter = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, variationsrestrictparameter, submessage_arena);
}
_has_bits_[1] |= 0x00008000u;
} else {
_has_bits_[1] &= ~0x00008000u;
}
variationsrestrictparameter_ = variationsrestrictparameter;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.VariationsRestrictParameter)
}

// optional .enterprise_management.StringPolicyProto ManagedBookmarks = 229;
inline bool CloudPolicySettings::_internal_has_managedbookmarks() const {
bool value = (_has_bits_[1] & 0x00010000u) != 0;
PROTOBUF_ASSUME(!value || managedbookmarks_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_managedbookmarks() const {
return _internal_has_managedbookmarks();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_managedbookmarks() const {
const ::enterprise_management::StringPolicyProto* p = managedbookmarks_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::managedbookmarks() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ManagedBookmarks)
return _internal_managedbookmarks();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_managedbookmarks(
::enterprise_management::StringPolicyProto* managedbookmarks) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(managedbookmarks_);
}
managedbookmarks_ = managedbookmarks;
if (managedbookmarks) {
_has_bits_[1] |= 0x00010000u;
} else {
_has_bits_[1] &= ~0x00010000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.ManagedBookmarks)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_managedbookmarks() {
_has_bits_[1] &= ~0x00010000u;
::enterprise_management::StringPolicyProto* temp = managedbookmarks_;
managedbookmarks_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_managedbookmarks() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ManagedBookmarks)
_has_bits_[1] &= ~0x00010000u;
::enterprise_management::StringPolicyProto* temp = managedbookmarks_;
managedbookmarks_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_managedbookmarks() {
_has_bits_[1] |= 0x00010000u;
if (managedbookmarks_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
managedbookmarks_ = p;
}
return managedbookmarks_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_managedbookmarks() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_managedbookmarks();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ManagedBookmarks)
return _msg;
}
inline void CloudPolicySettings::set_allocated_managedbookmarks(::enterprise_management::StringPolicyProto* managedbookmarks) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(managedbookmarks_);
}
if (managedbookmarks) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(managedbookmarks));
if (message_arena != submessage_arena) {
managedbookmarks = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, managedbookmarks, submessage_arena);
}
_has_bits_[1] |= 0x00010000u;
} else {
_has_bits_[1] &= ~0x00010000u;
}
managedbookmarks_ = managedbookmarks;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ManagedBookmarks)
}

// optional .enterprise_management.BooleanPolicyProto ForceBrowserSignin = 348;
inline bool CloudPolicySettings::_internal_has_forcebrowsersignin() const {
bool value = (_has_bits_[2] & 0x00000010u) != 0;
PROTOBUF_ASSUME(!value || forcebrowsersignin_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_forcebrowsersignin() const {
return _internal_has_forcebrowsersignin();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_forcebrowsersignin() const {
const ::enterprise_management::BooleanPolicyProto* p = forcebrowsersignin_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::forcebrowsersignin() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceBrowserSignin)
return _internal_forcebrowsersignin();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_forcebrowsersignin(
::enterprise_management::BooleanPolicyProto* forcebrowsersignin) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(forcebrowsersignin_);
}
forcebrowsersignin_ = forcebrowsersignin;
if (forcebrowsersignin) {
_has_bits_[2] |= 0x00000010u;
} else {
_has_bits_[2] &= ~0x00000010u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.ForceBrowserSignin)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_forcebrowsersignin() {
_has_bits_[2] &= ~0x00000010u;
::enterprise_management::BooleanPolicyProto* temp = forcebrowsersignin_;
forcebrowsersignin_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_forcebrowsersignin() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceBrowserSignin)
_has_bits_[2] &= ~0x00000010u;
::enterprise_management::BooleanPolicyProto* temp = forcebrowsersignin_;
forcebrowsersignin_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_forcebrowsersignin() {
_has_bits_[2] |= 0x00000010u;
if (forcebrowsersignin_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
forcebrowsersignin_ = p;
}
return forcebrowsersignin_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_forcebrowsersignin() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_forcebrowsersignin();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceBrowserSignin)
return _msg;
}
inline void CloudPolicySettings::set_allocated_forcebrowsersignin(::enterprise_management::BooleanPolicyProto* forcebrowsersignin) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(forcebrowsersignin_);
}
if (forcebrowsersignin) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(forcebrowsersignin));
if (message_arena != submessage_arena) {
forcebrowsersignin = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, forcebrowsersignin, submessage_arena);
}
_has_bits_[2] |= 0x00000010u;
} else {
_has_bits_[2] &= ~0x00000010u;
}
forcebrowsersignin_ = forcebrowsersignin;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceBrowserSignin)
}

// optional .enterprise_management.IntegerPolicyProto BrowserSignin = 489;
inline bool CloudPolicySettings::_internal_has_browsersignin() const {
bool value = (_has_bits_[2] & 0x02000000u) != 0;
PROTOBUF_ASSUME(!value || browsersignin_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_browsersignin() const {
return _internal_has_browsersignin();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::_internal_browsersignin() const {
const ::enterprise_management::IntegerPolicyProto* p = browsersignin_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::IntegerPolicyProto&>(
::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::browsersignin() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BrowserSignin)
return _internal_browsersignin();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_browsersignin(
::enterprise_management::IntegerPolicyProto* browsersignin) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(browsersignin_);
}
browsersignin_ = browsersignin;
if (browsersignin) {
_has_bits_[2] |= 0x02000000u;
} else {
_has_bits_[2] &= ~0x02000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.BrowserSignin)
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_browsersignin() {
_has_bits_[2] &= ~0x02000000u;
::enterprise_management::IntegerPolicyProto* temp = browsersignin_;
browsersignin_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::unsafe_arena_release_browsersignin() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BrowserSignin)
_has_bits_[2] &= ~0x02000000u;
::enterprise_management::IntegerPolicyProto* temp = browsersignin_;
browsersignin_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::_internal_mutable_browsersignin() {
_has_bits_[2] |= 0x02000000u;
if (browsersignin_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaForAllocation());
browsersignin_ = p;
}
return browsersignin_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_browsersignin() {
::enterprise_management::IntegerPolicyProto* _msg = _internal_mutable_browsersignin();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BrowserSignin)
return _msg;
}
inline void CloudPolicySettings::set_allocated_browsersignin(::enterprise_management::IntegerPolicyProto* browsersignin) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(browsersignin_);
}
if (browsersignin) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(browsersignin));
if (message_arena != submessage_arena) {
browsersignin = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, browsersignin, submessage_arena);
}
_has_bits_[2] |= 0x02000000u;
} else {
_has_bits_[2] &= ~0x02000000u;
}
browsersignin_ = browsersignin;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BrowserSignin)
}

// optional .enterprise_management.StringPolicyProto SSLVersionMin = 281;
inline bool CloudPolicySettings::_internal_has_sslversionmin() const {
bool value = (_has_bits_[1] & 0x00800000u) != 0;
PROTOBUF_ASSUME(!value || sslversionmin_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_sslversionmin() const {
return _internal_has_sslversionmin();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_sslversionmin() const {
const ::enterprise_management::StringPolicyProto* p = sslversionmin_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::sslversionmin() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SSLVersionMin)
return _internal_sslversionmin();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_sslversionmin(
::enterprise_management::StringPolicyProto* sslversionmin) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sslversionmin_);
}
sslversionmin_ = sslversionmin;
if (sslversionmin) {
_has_bits_[1] |= 0x00800000u;
} else {
_has_bits_[1] &= ~0x00800000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.SSLVersionMin)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_sslversionmin() {
_has_bits_[1] &= ~0x00800000u;
::enterprise_management::StringPolicyProto* temp = sslversionmin_;
sslversionmin_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_sslversionmin() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SSLVersionMin)
_has_bits_[1] &= ~0x00800000u;
::enterprise_management::StringPolicyProto* temp = sslversionmin_;
sslversionmin_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_sslversionmin() {
_has_bits_[1] |= 0x00800000u;
if (sslversionmin_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
sslversionmin_ = p;
}
return sslversionmin_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_sslversionmin() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_sslversionmin();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SSLVersionMin)
return _msg;
}
inline void CloudPolicySettings::set_allocated_sslversionmin(::enterprise_management::StringPolicyProto* sslversionmin) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(sslversionmin_);
}
if (sslversionmin) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sslversionmin));
if (message_arena != submessage_arena) {
sslversionmin = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, sslversionmin, submessage_arena);
}
_has_bits_[1] |= 0x00800000u;
} else {
_has_bits_[1] &= ~0x00800000u;
}
sslversionmin_ = sslversionmin;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SSLVersionMin)
}

// optional .enterprise_management.BooleanPolicyProto CECPQ2Enabled = 843;
inline bool CloudPolicySettings::_internal_has_cecpq2enabled() const {
bool value = (_has_bits_[3] & 0x10000000u) != 0;
PROTOBUF_ASSUME(!value || cecpq2enabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_cecpq2enabled() const {
return _internal_has_cecpq2enabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_cecpq2enabled() const {
const ::enterprise_management::BooleanPolicyProto* p = cecpq2enabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::cecpq2enabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CECPQ2Enabled)
return _internal_cecpq2enabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_cecpq2enabled(
::enterprise_management::BooleanPolicyProto* cecpq2enabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cecpq2enabled_);
}
cecpq2enabled_ = cecpq2enabled;
if (cecpq2enabled) {
_has_bits_[3] |= 0x10000000u;
} else {
_has_bits_[3] &= ~0x10000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.CECPQ2Enabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_cecpq2enabled() {
_has_bits_[3] &= ~0x10000000u;
::enterprise_management::BooleanPolicyProto* temp = cecpq2enabled_;
cecpq2enabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_cecpq2enabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CECPQ2Enabled)
_has_bits_[3] &= ~0x10000000u;
::enterprise_management::BooleanPolicyProto* temp = cecpq2enabled_;
cecpq2enabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_cecpq2enabled() {
_has_bits_[3] |= 0x10000000u;
if (cecpq2enabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
cecpq2enabled_ = p;
}
return cecpq2enabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_cecpq2enabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_cecpq2enabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CECPQ2Enabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_cecpq2enabled(::enterprise_management::BooleanPolicyProto* cecpq2enabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cecpq2enabled_);
}
if (cecpq2enabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cecpq2enabled));
if (message_arena != submessage_arena) {
cecpq2enabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, cecpq2enabled, submessage_arena);
}
_has_bits_[3] |= 0x10000000u;
} else {
_has_bits_[3] &= ~0x10000000u;
}
cecpq2enabled_ = cecpq2enabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CECPQ2Enabled)
}

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForUrls = 337;
inline bool CloudPolicySettings::_internal_has_certificatetransparencyenforcementdisabledforurls() const {
bool value = (_has_bits_[2] & 0x00000001u) != 0;
PROTOBUF_ASSUME(!value || certificatetransparencyenforcementdisabledforurls_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_certificatetransparencyenforcementdisabledforurls() const {
return _internal_has_certificatetransparencyenforcementdisabledforurls();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_certificatetransparencyenforcementdisabledforurls() const {
const ::enterprise_management::StringListPolicyProto* p = certificatetransparencyenforcementdisabledforurls_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::certificatetransparencyenforcementdisabledforurls() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForUrls)
return _internal_certificatetransparencyenforcementdisabledforurls();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_certificatetransparencyenforcementdisabledforurls(
::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforurls) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(certificatetransparencyenforcementdisabledforurls_);
}
certificatetransparencyenforcementdisabledforurls_ = certificatetransparencyenforcementdisabledforurls;
if (certificatetransparencyenforcementdisabledforurls) {
_has_bits_[2] |= 0x00000001u;
} else {
_has_bits_[2] &= ~0x00000001u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForUrls)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_certificatetransparencyenforcementdisabledforurls() {
_has_bits_[2] &= ~0x00000001u;
::enterprise_management::StringListPolicyProto* temp = certificatetransparencyenforcementdisabledforurls_;
certificatetransparencyenforcementdisabledforurls_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_certificatetransparencyenforcementdisabledforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForUrls)
_has_bits_[2] &= ~0x00000001u;
::enterprise_management::StringListPolicyProto* temp = certificatetransparencyenforcementdisabledforurls_;
certificatetransparencyenforcementdisabledforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_certificatetransparencyenforcementdisabledforurls() {
_has_bits_[2] |= 0x00000001u;
if (certificatetransparencyenforcementdisabledforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
certificatetransparencyenforcementdisabledforurls_ = p;
}
return certificatetransparencyenforcementdisabledforurls_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_certificatetransparencyenforcementdisabledforurls() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_certificatetransparencyenforcementdisabledforurls();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForUrls)
return _msg;
}
inline void CloudPolicySettings::set_allocated_certificatetransparencyenforcementdisabledforurls(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(certificatetransparencyenforcementdisabledforurls_);
}
if (certificatetransparencyenforcementdisabledforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(certificatetransparencyenforcementdisabledforurls));
if (message_arena != submessage_arena) {
certificatetransparencyenforcementdisabledforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, certificatetransparencyenforcementdisabledforurls, submessage_arena);
}
_has_bits_[2] |= 0x00000001u;
} else {
_has_bits_[2] &= ~0x00000001u;
}
certificatetransparencyenforcementdisabledforurls_ = certificatetransparencyenforcementdisabledforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForUrls)
}

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForCas = 437;
inline bool CloudPolicySettings::_internal_has_certificatetransparencyenforcementdisabledforcas() const {
bool value = (_has_bits_[2] & 0x00002000u) != 0;
PROTOBUF_ASSUME(!value || certificatetransparencyenforcementdisabledforcas_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_certificatetransparencyenforcementdisabledforcas() const {
return _internal_has_certificatetransparencyenforcementdisabledforcas();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_certificatetransparencyenforcementdisabledforcas() const {
const ::enterprise_management::StringListPolicyProto* p = certificatetransparencyenforcementdisabledforcas_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::certificatetransparencyenforcementdisabledforcas() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForCas)
return _internal_certificatetransparencyenforcementdisabledforcas();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_certificatetransparencyenforcementdisabledforcas(
::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforcas) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(certificatetransparencyenforcementdisabledforcas_);
}
certificatetransparencyenforcementdisabledforcas_ = certificatetransparencyenforcementdisabledforcas;
if (certificatetransparencyenforcementdisabledforcas) {
_has_bits_[2] |= 0x00002000u;
} else {
_has_bits_[2] &= ~0x00002000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForCas)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_certificatetransparencyenforcementdisabledforcas() {
_has_bits_[2] &= ~0x00002000u;
::enterprise_management::StringListPolicyProto* temp = certificatetransparencyenforcementdisabledforcas_;
certificatetransparencyenforcementdisabledforcas_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_certificatetransparencyenforcementdisabledforcas() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForCas)
_has_bits_[2] &= ~0x00002000u;
::enterprise_management::StringListPolicyProto* temp = certificatetransparencyenforcementdisabledforcas_;
certificatetransparencyenforcementdisabledforcas_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_certificatetransparencyenforcementdisabledforcas() {
_has_bits_[2] |= 0x00002000u;
if (certificatetransparencyenforcementdisabledforcas_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
certificatetransparencyenforcementdisabledforcas_ = p;
}
return certificatetransparencyenforcementdisabledforcas_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_certificatetransparencyenforcementdisabledforcas() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_certificatetransparencyenforcementdisabledforcas();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForCas)
return _msg;
}
inline void CloudPolicySettings::set_allocated_certificatetransparencyenforcementdisabledforcas(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforcas) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(certificatetransparencyenforcementdisabledforcas_);
}
if (certificatetransparencyenforcementdisabledforcas) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(certificatetransparencyenforcementdisabledforcas));
if (message_arena != submessage_arena) {
certificatetransparencyenforcementdisabledforcas = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, certificatetransparencyenforcementdisabledforcas, submessage_arena);
}
_has_bits_[2] |= 0x00002000u;
} else {
_has_bits_[2] &= ~0x00002000u;
}
certificatetransparencyenforcementdisabledforcas_ = certificatetransparencyenforcementdisabledforcas;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForCas)
}

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForLegacyCas = 438;
inline bool CloudPolicySettings::_internal_has_certificatetransparencyenforcementdisabledforlegacycas() const {
bool value = (_has_bits_[2] & 0x00004000u) != 0;
PROTOBUF_ASSUME(!value || certificatetransparencyenforcementdisabledforlegacycas_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_certificatetransparencyenforcementdisabledforlegacycas() const {
return _internal_has_certificatetransparencyenforcementdisabledforlegacycas();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_certificatetransparencyenforcementdisabledforlegacycas() const {
const ::enterprise_management::StringListPolicyProto* p = certificatetransparencyenforcementdisabledforlegacycas_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::certificatetransparencyenforcementdisabledforlegacycas() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForLegacyCas)
return _internal_certificatetransparencyenforcementdisabledforlegacycas();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_certificatetransparencyenforcementdisabledforlegacycas(
::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforlegacycas) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(certificatetransparencyenforcementdisabledforlegacycas_);
}
certificatetransparencyenforcementdisabledforlegacycas_ = certificatetransparencyenforcementdisabledforlegacycas;
if (certificatetransparencyenforcementdisabledforlegacycas) {
_has_bits_[2] |= 0x00004000u;
} else {
_has_bits_[2] &= ~0x00004000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForLegacyCas)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_certificatetransparencyenforcementdisabledforlegacycas() {
_has_bits_[2] &= ~0x00004000u;
::enterprise_management::StringListPolicyProto* temp = certificatetransparencyenforcementdisabledforlegacycas_;
certificatetransparencyenforcementdisabledforlegacycas_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_certificatetransparencyenforcementdisabledforlegacycas() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForLegacyCas)
_has_bits_[2] &= ~0x00004000u;
::enterprise_management::StringListPolicyProto* temp = certificatetransparencyenforcementdisabledforlegacycas_;
certificatetransparencyenforcementdisabledforlegacycas_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_certificatetransparencyenforcementdisabledforlegacycas() {
_has_bits_[2] |= 0x00004000u;
if (certificatetransparencyenforcementdisabledforlegacycas_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
certificatetransparencyenforcementdisabledforlegacycas_ = p;
}
return certificatetransparencyenforcementdisabledforlegacycas_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_certificatetransparencyenforcementdisabledforlegacycas() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_certificatetransparencyenforcementdisabledforlegacycas();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForLegacyCas)
return _msg;
}
inline void CloudPolicySettings::set_allocated_certificatetransparencyenforcementdisabledforlegacycas(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforlegacycas) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(certificatetransparencyenforcementdisabledforlegacycas_);
}
if (certificatetransparencyenforcementdisabledforlegacycas) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(certificatetransparencyenforcementdisabledforlegacycas));
if (message_arena != submessage_arena) {
certificatetransparencyenforcementdisabledforlegacycas = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, certificatetransparencyenforcementdisabledforlegacycas, submessage_arena);
}
_has_bits_[2] |= 0x00004000u;
} else {
_has_bits_[2] &= ~0x00004000u;
}
certificatetransparencyenforcementdisabledforlegacycas_ = certificatetransparencyenforcementdisabledforlegacycas;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForLegacyCas)
}

// optional .enterprise_management.BooleanPolicyProto ContextualSearchEnabled = 283;
inline bool CloudPolicySettings::_internal_has_contextualsearchenabled() const {
bool value = (_has_bits_[1] & 0x01000000u) != 0;
PROTOBUF_ASSUME(!value || contextualsearchenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_contextualsearchenabled() const {
return _internal_has_contextualsearchenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_contextualsearchenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = contextualsearchenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::contextualsearchenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ContextualSearchEnabled)
return _internal_contextualsearchenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_contextualsearchenabled(
::enterprise_management::BooleanPolicyProto* contextualsearchenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(contextualsearchenabled_);
}
contextualsearchenabled_ = contextualsearchenabled;
if (contextualsearchenabled) {
_has_bits_[1] |= 0x01000000u;
} else {
_has_bits_[1] &= ~0x01000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.ContextualSearchEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_contextualsearchenabled() {
_has_bits_[1] &= ~0x01000000u;
::enterprise_management::BooleanPolicyProto* temp = contextualsearchenabled_;
contextualsearchenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_contextualsearchenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ContextualSearchEnabled)
_has_bits_[1] &= ~0x01000000u;
::enterprise_management::BooleanPolicyProto* temp = contextualsearchenabled_;
contextualsearchenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_contextualsearchenabled() {
_has_bits_[1] |= 0x01000000u;
if (contextualsearchenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
contextualsearchenabled_ = p;
}
return contextualsearchenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_contextualsearchenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_contextualsearchenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ContextualSearchEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_contextualsearchenabled(::enterprise_management::BooleanPolicyProto* contextualsearchenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(contextualsearchenabled_);
}
if (contextualsearchenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(contextualsearchenabled));
if (message_arena != submessage_arena) {
contextualsearchenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, contextualsearchenabled, submessage_arena);
}
_has_bits_[1] |= 0x01000000u;
} else {
_has_bits_[1] &= ~0x01000000u;
}
contextualsearchenabled_ = contextualsearchenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ContextualSearchEnabled)
}

// optional .enterprise_management.BooleanPolicyProto SSLErrorOverrideAllowed = 302;
inline bool CloudPolicySettings::_internal_has_sslerroroverrideallowed() const {
bool value = (_has_bits_[1] & 0x08000000u) != 0;
PROTOBUF_ASSUME(!value || sslerroroverrideallowed_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_sslerroroverrideallowed() const {
return _internal_has_sslerroroverrideallowed();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_sslerroroverrideallowed() const {
const ::enterprise_management::BooleanPolicyProto* p = sslerroroverrideallowed_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::sslerroroverrideallowed() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowed)
return _internal_sslerroroverrideallowed();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_sslerroroverrideallowed(
::enterprise_management::BooleanPolicyProto* sslerroroverrideallowed) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sslerroroverrideallowed_);
}
sslerroroverrideallowed_ = sslerroroverrideallowed;
if (sslerroroverrideallowed) {
_has_bits_[1] |= 0x08000000u;
} else {
_has_bits_[1] &= ~0x08000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowed)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_sslerroroverrideallowed() {
_has_bits_[1] &= ~0x08000000u;
::enterprise_management::BooleanPolicyProto* temp = sslerroroverrideallowed_;
sslerroroverrideallowed_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_sslerroroverrideallowed() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowed)
_has_bits_[1] &= ~0x08000000u;
::enterprise_management::BooleanPolicyProto* temp = sslerroroverrideallowed_;
sslerroroverrideallowed_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_sslerroroverrideallowed() {
_has_bits_[1] |= 0x08000000u;
if (sslerroroverrideallowed_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
sslerroroverrideallowed_ = p;
}
return sslerroroverrideallowed_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_sslerroroverrideallowed() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_sslerroroverrideallowed();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowed)
return _msg;
}
inline void CloudPolicySettings::set_allocated_sslerroroverrideallowed(::enterprise_management::BooleanPolicyProto* sslerroroverrideallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(sslerroroverrideallowed_);
}
if (sslerroroverrideallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sslerroroverrideallowed));
if (message_arena != submessage_arena) {
sslerroroverrideallowed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, sslerroroverrideallowed, submessage_arena);
}
_has_bits_[1] |= 0x08000000u;
} else {
_has_bits_[1] &= ~0x08000000u;
}
sslerroroverrideallowed_ = sslerroroverrideallowed;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowed)
}

// optional .enterprise_management.StringListPolicyProto SSLErrorOverrideAllowedForOrigins = 821;
inline bool CloudPolicySettings::_internal_has_sslerroroverrideallowedfororigins() const {
bool value = (_has_bits_[3] & 0x02000000u) != 0;
PROTOBUF_ASSUME(!value || sslerroroverrideallowedfororigins_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_sslerroroverrideallowedfororigins() const {
return _internal_has_sslerroroverrideallowedfororigins();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_sslerroroverrideallowedfororigins() const {
const ::enterprise_management::StringListPolicyProto* p = sslerroroverrideallowedfororigins_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::sslerroroverrideallowedfororigins() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowedForOrigins)
return _internal_sslerroroverrideallowedfororigins();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_sslerroroverrideallowedfororigins(
::enterprise_management::StringListPolicyProto* sslerroroverrideallowedfororigins) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sslerroroverrideallowedfororigins_);
}
sslerroroverrideallowedfororigins_ = sslerroroverrideallowedfororigins;
if (sslerroroverrideallowedfororigins) {
_has_bits_[3] |= 0x02000000u;
} else {
_has_bits_[3] &= ~0x02000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowedForOrigins)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_sslerroroverrideallowedfororigins() {
_has_bits_[3] &= ~0x02000000u;
::enterprise_management::StringListPolicyProto* temp = sslerroroverrideallowedfororigins_;
sslerroroverrideallowedfororigins_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_sslerroroverrideallowedfororigins() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowedForOrigins)
_has_bits_[3] &= ~0x02000000u;
::enterprise_management::StringListPolicyProto* temp = sslerroroverrideallowedfororigins_;
sslerroroverrideallowedfororigins_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_sslerroroverrideallowedfororigins() {
_has_bits_[3] |= 0x02000000u;
if (sslerroroverrideallowedfororigins_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
sslerroroverrideallowedfororigins_ = p;
}
return sslerroroverrideallowedfororigins_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_sslerroroverrideallowedfororigins() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_sslerroroverrideallowedfororigins();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowedForOrigins)
return _msg;
}
inline void CloudPolicySettings::set_allocated_sslerroroverrideallowedfororigins(::enterprise_management::StringListPolicyProto* sslerroroverrideallowedfororigins) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(sslerroroverrideallowedfororigins_);
}
if (sslerroroverrideallowedfororigins) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sslerroroverrideallowedfororigins));
if (message_arena != submessage_arena) {
sslerroroverrideallowedfororigins = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, sslerroroverrideallowedfororigins, submessage_arena);
}
_has_bits_[3] |= 0x02000000u;
} else {
_has_bits_[3] &= ~0x02000000u;
}
sslerroroverrideallowedfororigins_ = sslerroroverrideallowedfororigins;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowedForOrigins)
}

// optional .enterprise_management.StringPolicyProto AllowedDomainsForApps = 333;
inline bool CloudPolicySettings::_internal_has_alloweddomainsforapps() const {
bool value = (_has_bits_[1] & 0x40000000u) != 0;
PROTOBUF_ASSUME(!value || alloweddomainsforapps_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_alloweddomainsforapps() const {
return _internal_has_alloweddomainsforapps();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_alloweddomainsforapps() const {
const ::enterprise_management::StringPolicyProto* p = alloweddomainsforapps_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::alloweddomainsforapps() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowedDomainsForApps)
return _internal_alloweddomainsforapps();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_alloweddomainsforapps(
::enterprise_management::StringPolicyProto* alloweddomainsforapps) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(alloweddomainsforapps_);
}
alloweddomainsforapps_ = alloweddomainsforapps;
if (alloweddomainsforapps) {
_has_bits_[1] |= 0x40000000u;
} else {
_has_bits_[1] &= ~0x40000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.AllowedDomainsForApps)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_alloweddomainsforapps() {
_has_bits_[1] &= ~0x40000000u;
::enterprise_management::StringPolicyProto* temp = alloweddomainsforapps_;
alloweddomainsforapps_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_alloweddomainsforapps() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowedDomainsForApps)
_has_bits_[1] &= ~0x40000000u;
::enterprise_management::StringPolicyProto* temp = alloweddomainsforapps_;
alloweddomainsforapps_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_alloweddomainsforapps() {
_has_bits_[1] |= 0x40000000u;
if (alloweddomainsforapps_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
alloweddomainsforapps_ = p;
}
return alloweddomainsforapps_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_alloweddomainsforapps() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_alloweddomainsforapps();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowedDomainsForApps)
return _msg;
}
inline void CloudPolicySettings::set_allocated_alloweddomainsforapps(::enterprise_management::StringPolicyProto* alloweddomainsforapps) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(alloweddomainsforapps_);
}
if (alloweddomainsforapps) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(alloweddomainsforapps));
if (message_arena != submessage_arena) {
alloweddomainsforapps = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, alloweddomainsforapps, submessage_arena);
}
_has_bits_[1] |= 0x40000000u;
} else {
_has_bits_[1] &= ~0x40000000u;
}
alloweddomainsforapps_ = alloweddomainsforapps;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowedDomainsForApps)
}

// optional .enterprise_management.BooleanPolicyProto EnableMediaRouter = 335;
inline bool CloudPolicySettings::_internal_has_enablemediarouter() const {
bool value = (_has_bits_[1] & 0x80000000u) != 0;
PROTOBUF_ASSUME(!value || enablemediarouter_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_enablemediarouter() const {
return _internal_has_enablemediarouter();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_enablemediarouter() const {
const ::enterprise_management::BooleanPolicyProto* p = enablemediarouter_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::enablemediarouter() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnableMediaRouter)
return _internal_enablemediarouter();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_enablemediarouter(
::enterprise_management::BooleanPolicyProto* enablemediarouter) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(enablemediarouter_);
}
enablemediarouter_ = enablemediarouter;
if (enablemediarouter) {
_has_bits_[1] |= 0x80000000u;
} else {
_has_bits_[1] &= ~0x80000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.EnableMediaRouter)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_enablemediarouter() {
_has_bits_[1] &= ~0x80000000u;
::enterprise_management::BooleanPolicyProto* temp = enablemediarouter_;
enablemediarouter_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_enablemediarouter() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnableMediaRouter)
_has_bits_[1] &= ~0x80000000u;
::enterprise_management::BooleanPolicyProto* temp = enablemediarouter_;
enablemediarouter_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_enablemediarouter() {
_has_bits_[1] |= 0x80000000u;
if (enablemediarouter_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
enablemediarouter_ = p;
}
return enablemediarouter_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_enablemediarouter() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_enablemediarouter();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnableMediaRouter)
return _msg;
}
inline void CloudPolicySettings::set_allocated_enablemediarouter(::enterprise_management::BooleanPolicyProto* enablemediarouter) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(enablemediarouter_);
}
if (enablemediarouter) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(enablemediarouter));
if (message_arena != submessage_arena) {
enablemediarouter = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, enablemediarouter, submessage_arena);
}
_has_bits_[1] |= 0x80000000u;
} else {
_has_bits_[1] &= ~0x80000000u;
}
enablemediarouter_ = enablemediarouter;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnableMediaRouter)
}

// optional .enterprise_management.BooleanPolicyProto NTPContentSuggestionsEnabled = 340;
inline bool CloudPolicySettings::_internal_has_ntpcontentsuggestionsenabled() const {
bool value = (_has_bits_[2] & 0x00000002u) != 0;
PROTOBUF_ASSUME(!value || ntpcontentsuggestionsenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_ntpcontentsuggestionsenabled() const {
return _internal_has_ntpcontentsuggestionsenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_ntpcontentsuggestionsenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = ntpcontentsuggestionsenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::ntpcontentsuggestionsenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NTPContentSuggestionsEnabled)
return _internal_ntpcontentsuggestionsenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_ntpcontentsuggestionsenabled(
::enterprise_management::BooleanPolicyProto* ntpcontentsuggestionsenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ntpcontentsuggestionsenabled_);
}
ntpcontentsuggestionsenabled_ = ntpcontentsuggestionsenabled;
if (ntpcontentsuggestionsenabled) {
_has_bits_[2] |= 0x00000002u;
} else {
_has_bits_[2] &= ~0x00000002u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.NTPContentSuggestionsEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_ntpcontentsuggestionsenabled() {
_has_bits_[2] &= ~0x00000002u;
::enterprise_management::BooleanPolicyProto* temp = ntpcontentsuggestionsenabled_;
ntpcontentsuggestionsenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_ntpcontentsuggestionsenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NTPContentSuggestionsEnabled)
_has_bits_[2] &= ~0x00000002u;
::enterprise_management::BooleanPolicyProto* temp = ntpcontentsuggestionsenabled_;
ntpcontentsuggestionsenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_ntpcontentsuggestionsenabled() {
_has_bits_[2] |= 0x00000002u;
if (ntpcontentsuggestionsenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
ntpcontentsuggestionsenabled_ = p;
}
return ntpcontentsuggestionsenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_ntpcontentsuggestionsenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_ntpcontentsuggestionsenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NTPContentSuggestionsEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_ntpcontentsuggestionsenabled(::enterprise_management::BooleanPolicyProto* ntpcontentsuggestionsenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ntpcontentsuggestionsenabled_);
}
if (ntpcontentsuggestionsenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ntpcontentsuggestionsenabled));
if (message_arena != submessage_arena) {
ntpcontentsuggestionsenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, ntpcontentsuggestionsenabled, submessage_arena);
}
_has_bits_[2] |= 0x00000002u;
} else {
_has_bits_[2] &= ~0x00000002u;
}
ntpcontentsuggestionsenabled_ = ntpcontentsuggestionsenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NTPContentSuggestionsEnabled)
}

// optional .enterprise_management.StringPolicyProto WebRtcUdpPortRange = 341;
inline bool CloudPolicySettings::_internal_has_webrtcudpportrange() const {
bool value = (_has_bits_[2] & 0x00000004u) != 0;
PROTOBUF_ASSUME(!value || webrtcudpportrange_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_webrtcudpportrange() const {
return _internal_has_webrtcudpportrange();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_webrtcudpportrange() const {
const ::enterprise_management::StringPolicyProto* p = webrtcudpportrange_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::webrtcudpportrange() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebRtcUdpPortRange)
return _internal_webrtcudpportrange();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_webrtcudpportrange(
::enterprise_management::StringPolicyProto* webrtcudpportrange) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(webrtcudpportrange_);
}
webrtcudpportrange_ = webrtcudpportrange;
if (webrtcudpportrange) {
_has_bits_[2] |= 0x00000004u;
} else {
_has_bits_[2] &= ~0x00000004u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.WebRtcUdpPortRange)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_webrtcudpportrange() {
_has_bits_[2] &= ~0x00000004u;
::enterprise_management::StringPolicyProto* temp = webrtcudpportrange_;
webrtcudpportrange_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_webrtcudpportrange() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebRtcUdpPortRange)
_has_bits_[2] &= ~0x00000004u;
::enterprise_management::StringPolicyProto* temp = webrtcudpportrange_;
webrtcudpportrange_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_webrtcudpportrange() {
_has_bits_[2] |= 0x00000004u;
if (webrtcudpportrange_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
webrtcudpportrange_ = p;
}
return webrtcudpportrange_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_webrtcudpportrange() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_webrtcudpportrange();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebRtcUdpPortRange)
return _msg;
}
inline void CloudPolicySettings::set_allocated_webrtcudpportrange(::enterprise_management::StringPolicyProto* webrtcudpportrange) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(webrtcudpportrange_);
}
if (webrtcudpportrange) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(webrtcudpportrange));
if (message_arena != submessage_arena) {
webrtcudpportrange = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, webrtcudpportrange, submessage_arena);
}
_has_bits_[2] |= 0x00000004u;
} else {
_has_bits_[2] &= ~0x00000004u;
}
webrtcudpportrange_ = webrtcudpportrange;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebRtcUdpPortRange)
}

// optional .enterprise_management.BooleanPolicyProto ComponentUpdatesEnabled = 344;
inline bool CloudPolicySettings::_internal_has_componentupdatesenabled() const {
bool value = (_has_bits_[2] & 0x00000008u) != 0;
PROTOBUF_ASSUME(!value || componentupdatesenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_componentupdatesenabled() const {
return _internal_has_componentupdatesenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_componentupdatesenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = componentupdatesenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::componentupdatesenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ComponentUpdatesEnabled)
return _internal_componentupdatesenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_componentupdatesenabled(
::enterprise_management::BooleanPolicyProto* componentupdatesenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(componentupdatesenabled_);
}
componentupdatesenabled_ = componentupdatesenabled;
if (componentupdatesenabled) {
_has_bits_[2] |= 0x00000008u;
} else {
_has_bits_[2] &= ~0x00000008u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.ComponentUpdatesEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_componentupdatesenabled() {
_has_bits_[2] &= ~0x00000008u;
::enterprise_management::BooleanPolicyProto* temp = componentupdatesenabled_;
componentupdatesenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_componentupdatesenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ComponentUpdatesEnabled)
_has_bits_[2] &= ~0x00000008u;
::enterprise_management::BooleanPolicyProto* temp = componentupdatesenabled_;
componentupdatesenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_componentupdatesenabled() {
_has_bits_[2] |= 0x00000008u;
if (componentupdatesenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
componentupdatesenabled_ = p;
}
return componentupdatesenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_componentupdatesenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_componentupdatesenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ComponentUpdatesEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_componentupdatesenabled(::enterprise_management::BooleanPolicyProto* componentupdatesenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(componentupdatesenabled_);
}
if (componentupdatesenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(componentupdatesenabled));
if (message_arena != submessage_arena) {
componentupdatesenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, componentupdatesenabled, submessage_arena);
}
_has_bits_[2] |= 0x00000008u;
} else {
_has_bits_[2] &= ~0x00000008u;
}
componentupdatesenabled_ = componentupdatesenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ComponentUpdatesEnabled)
}

// optional .enterprise_management.BooleanPolicyProto CloudPolicyOverridesPlatformPolicy = 383;
inline bool CloudPolicySettings::_internal_has_cloudpolicyoverridesplatformpolicy() const {
bool value = (_has_bits_[2] & 0x00000040u) != 0;
PROTOBUF_ASSUME(!value || cloudpolicyoverridesplatformpolicy_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_cloudpolicyoverridesplatformpolicy() const {
return _internal_has_cloudpolicyoverridesplatformpolicy();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_cloudpolicyoverridesplatformpolicy() const {
const ::enterprise_management::BooleanPolicyProto* p = cloudpolicyoverridesplatformpolicy_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::cloudpolicyoverridesplatformpolicy() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CloudPolicyOverridesPlatformPolicy)
return _internal_cloudpolicyoverridesplatformpolicy();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_cloudpolicyoverridesplatformpolicy(
::enterprise_management::BooleanPolicyProto* cloudpolicyoverridesplatformpolicy) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cloudpolicyoverridesplatformpolicy_);
}
cloudpolicyoverridesplatformpolicy_ = cloudpolicyoverridesplatformpolicy;
if (cloudpolicyoverridesplatformpolicy) {
_has_bits_[2] |= 0x00000040u;
} else {
_has_bits_[2] &= ~0x00000040u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.CloudPolicyOverridesPlatformPolicy)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_cloudpolicyoverridesplatformpolicy() {
_has_bits_[2] &= ~0x00000040u;
::enterprise_management::BooleanPolicyProto* temp = cloudpolicyoverridesplatformpolicy_;
cloudpolicyoverridesplatformpolicy_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_cloudpolicyoverridesplatformpolicy() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CloudPolicyOverridesPlatformPolicy)
_has_bits_[2] &= ~0x00000040u;
::enterprise_management::BooleanPolicyProto* temp = cloudpolicyoverridesplatformpolicy_;
cloudpolicyoverridesplatformpolicy_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_cloudpolicyoverridesplatformpolicy() {
_has_bits_[2] |= 0x00000040u;
if (cloudpolicyoverridesplatformpolicy_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
cloudpolicyoverridesplatformpolicy_ = p;
}
return cloudpolicyoverridesplatformpolicy_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_cloudpolicyoverridesplatformpolicy() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_cloudpolicyoverridesplatformpolicy();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CloudPolicyOverridesPlatformPolicy)
return _msg;
}
inline void CloudPolicySettings::set_allocated_cloudpolicyoverridesplatformpolicy(::enterprise_management::BooleanPolicyProto* cloudpolicyoverridesplatformpolicy) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cloudpolicyoverridesplatformpolicy_);
}
if (cloudpolicyoverridesplatformpolicy) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cloudpolicyoverridesplatformpolicy));
if (message_arena != submessage_arena) {
cloudpolicyoverridesplatformpolicy = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, cloudpolicyoverridesplatformpolicy, submessage_arena);
}
_has_bits_[2] |= 0x00000040u;
} else {
_has_bits_[2] &= ~0x00000040u;
}
cloudpolicyoverridesplatformpolicy_ = cloudpolicyoverridesplatformpolicy;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CloudPolicyOverridesPlatformPolicy)
}

// optional .enterprise_management.BooleanPolicyProto CloudUserPolicyOverridesCloudMachinePolicy = 901;
inline bool CloudPolicySettings::_internal_has_clouduserpolicyoverridescloudmachinepolicy() const {
bool value = (_has_bits_[4] & 0x00000020u) != 0;
PROTOBUF_ASSUME(!value || clouduserpolicyoverridescloudmachinepolicy_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_clouduserpolicyoverridescloudmachinepolicy() const {
return _internal_has_clouduserpolicyoverridescloudmachinepolicy();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_clouduserpolicyoverridescloudmachinepolicy() const {
const ::enterprise_management::BooleanPolicyProto* p = clouduserpolicyoverridescloudmachinepolicy_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::clouduserpolicyoverridescloudmachinepolicy() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CloudUserPolicyOverridesCloudMachinePolicy)
return _internal_clouduserpolicyoverridescloudmachinepolicy();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_clouduserpolicyoverridescloudmachinepolicy(
::enterprise_management::BooleanPolicyProto* clouduserpolicyoverridescloudmachinepolicy) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(clouduserpolicyoverridescloudmachinepolicy_);
}
clouduserpolicyoverridescloudmachinepolicy_ = clouduserpolicyoverridescloudmachinepolicy;
if (clouduserpolicyoverridescloudmachinepolicy) {
_has_bits_[4] |= 0x00000020u;
} else {
_has_bits_[4] &= ~0x00000020u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.CloudUserPolicyOverridesCloudMachinePolicy)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_clouduserpolicyoverridescloudmachinepolicy() {
_has_bits_[4] &= ~0x00000020u;
::enterprise_management::BooleanPolicyProto* temp = clouduserpolicyoverridescloudmachinepolicy_;
clouduserpolicyoverridescloudmachinepolicy_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_clouduserpolicyoverridescloudmachinepolicy() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CloudUserPolicyOverridesCloudMachinePolicy)
_has_bits_[4] &= ~0x00000020u;
::enterprise_management::BooleanPolicyProto* temp = clouduserpolicyoverridescloudmachinepolicy_;
clouduserpolicyoverridescloudmachinepolicy_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_clouduserpolicyoverridescloudmachinepolicy() {
_has_bits_[4] |= 0x00000020u;
if (clouduserpolicyoverridescloudmachinepolicy_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
clouduserpolicyoverridescloudmachinepolicy_ = p;
}
return clouduserpolicyoverridescloudmachinepolicy_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_clouduserpolicyoverridescloudmachinepolicy() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_clouduserpolicyoverridescloudmachinepolicy();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CloudUserPolicyOverridesCloudMachinePolicy)
return _msg;
}
inline void CloudPolicySettings::set_allocated_clouduserpolicyoverridescloudmachinepolicy(::enterprise_management::BooleanPolicyProto* clouduserpolicyoverridescloudmachinepolicy) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(clouduserpolicyoverridescloudmachinepolicy_);
}
if (clouduserpolicyoverridescloudmachinepolicy) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(clouduserpolicyoverridescloudmachinepolicy));
if (message_arena != submessage_arena) {
clouduserpolicyoverridescloudmachinepolicy = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, clouduserpolicyoverridescloudmachinepolicy, submessage_arena);
}
_has_bits_[4] |= 0x00000020u;
} else {
_has_bits_[4] &= ~0x00000020u;
}
clouduserpolicyoverridescloudmachinepolicy_ = clouduserpolicyoverridescloudmachinepolicy;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CloudUserPolicyOverridesCloudMachinePolicy)
}

// optional .enterprise_management.BooleanPolicyProto PromptForDownloadLocation = 397;
inline bool CloudPolicySettings::_internal_has_promptfordownloadlocation() const {
bool value = (_has_bits_[2] & 0x00000200u) != 0;
PROTOBUF_ASSUME(!value || promptfordownloadlocation_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_promptfordownloadlocation() const {
return _internal_has_promptfordownloadlocation();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_promptfordownloadlocation() const {
const ::enterprise_management::BooleanPolicyProto* p = promptfordownloadlocation_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::promptfordownloadlocation() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PromptForDownloadLocation)
return _internal_promptfordownloadlocation();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_promptfordownloadlocation(
::enterprise_management::BooleanPolicyProto* promptfordownloadlocation) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(promptfordownloadlocation_);
}
promptfordownloadlocation_ = promptfordownloadlocation;
if (promptfordownloadlocation) {
_has_bits_[2] |= 0x00000200u;
} else {
_has_bits_[2] &= ~0x00000200u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.PromptForDownloadLocation)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_promptfordownloadlocation() {
_has_bits_[2] &= ~0x00000200u;
::enterprise_management::BooleanPolicyProto* temp = promptfordownloadlocation_;
promptfordownloadlocation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_promptfordownloadlocation() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PromptForDownloadLocation)
_has_bits_[2] &= ~0x00000200u;
::enterprise_management::BooleanPolicyProto* temp = promptfordownloadlocation_;
promptfordownloadlocation_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_promptfordownloadlocation() {
_has_bits_[2] |= 0x00000200u;
if (promptfordownloadlocation_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
promptfordownloadlocation_ = p;
}
return promptfordownloadlocation_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_promptfordownloadlocation() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_promptfordownloadlocation();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PromptForDownloadLocation)
return _msg;
}
inline void CloudPolicySettings::set_allocated_promptfordownloadlocation(::enterprise_management::BooleanPolicyProto* promptfordownloadlocation) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(promptfordownloadlocation_);
}
if (promptfordownloadlocation) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(promptfordownloadlocation));
if (message_arena != submessage_arena) {
promptfordownloadlocation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, promptfordownloadlocation, submessage_arena);
}
_has_bits_[2] |= 0x00000200u;
} else {
_has_bits_[2] &= ~0x00000200u;
}
promptfordownloadlocation_ = promptfordownloadlocation;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PromptForDownloadLocation)
}

// optional .enterprise_management.StringPolicyProto IsolateOriginsAndroid = 447;
inline bool CloudPolicySettings::_internal_has_isolateoriginsandroid() const {
bool value = (_has_bits_[2] & 0x00020000u) != 0;
PROTOBUF_ASSUME(!value || isolateoriginsandroid_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_isolateoriginsandroid() const {
return _internal_has_isolateoriginsandroid();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_isolateoriginsandroid() const {
const ::enterprise_management::StringPolicyProto* p = isolateoriginsandroid_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::isolateoriginsandroid() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.IsolateOriginsAndroid)
return _internal_isolateoriginsandroid();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_isolateoriginsandroid(
::enterprise_management::StringPolicyProto* isolateoriginsandroid) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(isolateoriginsandroid_);
}
isolateoriginsandroid_ = isolateoriginsandroid;
if (isolateoriginsandroid) {
_has_bits_[2] |= 0x00020000u;
} else {
_has_bits_[2] &= ~0x00020000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.IsolateOriginsAndroid)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_isolateoriginsandroid() {
_has_bits_[2] &= ~0x00020000u;
::enterprise_management::StringPolicyProto* temp = isolateoriginsandroid_;
isolateoriginsandroid_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_isolateoriginsandroid() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.IsolateOriginsAndroid)
_has_bits_[2] &= ~0x00020000u;
::enterprise_management::StringPolicyProto* temp = isolateoriginsandroid_;
isolateoriginsandroid_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_isolateoriginsandroid() {
_has_bits_[2] |= 0x00020000u;
if (isolateoriginsandroid_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
isolateoriginsandroid_ = p;
}
return isolateoriginsandroid_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_isolateoriginsandroid() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_isolateoriginsandroid();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.IsolateOriginsAndroid)
return _msg;
}
inline void CloudPolicySettings::set_allocated_isolateoriginsandroid(::enterprise_management::StringPolicyProto* isolateoriginsandroid) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(isolateoriginsandroid_);
}
if (isolateoriginsandroid) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(isolateoriginsandroid));
if (message_arena != submessage_arena) {
isolateoriginsandroid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, isolateoriginsandroid, submessage_arena);
}
_has_bits_[2] |= 0x00020000u;
} else {
_has_bits_[2] &= ~0x00020000u;
}
isolateoriginsandroid_ = isolateoriginsandroid;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.IsolateOriginsAndroid)
}

// optional .enterprise_management.BooleanPolicyProto SitePerProcessAndroid = 448;
inline bool CloudPolicySettings::_internal_has_siteperprocessandroid() const {
bool value = (_has_bits_[2] & 0x00040000u) != 0;
PROTOBUF_ASSUME(!value || siteperprocessandroid_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_siteperprocessandroid() const {
return _internal_has_siteperprocessandroid();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_siteperprocessandroid() const {
const ::enterprise_management::BooleanPolicyProto* p = siteperprocessandroid_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::siteperprocessandroid() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SitePerProcessAndroid)
return _internal_siteperprocessandroid();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_siteperprocessandroid(
::enterprise_management::BooleanPolicyProto* siteperprocessandroid) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(siteperprocessandroid_);
}
siteperprocessandroid_ = siteperprocessandroid;
if (siteperprocessandroid) {
_has_bits_[2] |= 0x00040000u;
} else {
_has_bits_[2] &= ~0x00040000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.SitePerProcessAndroid)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_siteperprocessandroid() {
_has_bits_[2] &= ~0x00040000u;
::enterprise_management::BooleanPolicyProto* temp = siteperprocessandroid_;
siteperprocessandroid_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_siteperprocessandroid() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SitePerProcessAndroid)
_has_bits_[2] &= ~0x00040000u;
::enterprise_management::BooleanPolicyProto* temp = siteperprocessandroid_;
siteperprocessandroid_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_siteperprocessandroid() {
_has_bits_[2] |= 0x00040000u;
if (siteperprocessandroid_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
siteperprocessandroid_ = p;
}
return siteperprocessandroid_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_siteperprocessandroid() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_siteperprocessandroid();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SitePerProcessAndroid)
return _msg;
}
inline void CloudPolicySettings::set_allocated_siteperprocessandroid(::enterprise_management::BooleanPolicyProto* siteperprocessandroid) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(siteperprocessandroid_);
}
if (siteperprocessandroid) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(siteperprocessandroid));
if (message_arena != submessage_arena) {
siteperprocessandroid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, siteperprocessandroid, submessage_arena);
}
_has_bits_[2] |= 0x00040000u;
} else {
_has_bits_[2] &= ~0x00040000u;
}
siteperprocessandroid_ = siteperprocessandroid;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SitePerProcessAndroid)
}

// optional .enterprise_management.StringListPolicyProto RestrictAccountsToPatterns = 412;
inline bool CloudPolicySettings::_internal_has_restrictaccountstopatterns() const {
bool value = (_has_bits_[2] & 0x00000400u) != 0;
PROTOBUF_ASSUME(!value || restrictaccountstopatterns_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_restrictaccountstopatterns() const {
return _internal_has_restrictaccountstopatterns();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_restrictaccountstopatterns() const {
const ::enterprise_management::StringListPolicyProto* p = restrictaccountstopatterns_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::restrictaccountstopatterns() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RestrictAccountsToPatterns)
return _internal_restrictaccountstopatterns();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_restrictaccountstopatterns(
::enterprise_management::StringListPolicyProto* restrictaccountstopatterns) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(restrictaccountstopatterns_);
}
restrictaccountstopatterns_ = restrictaccountstopatterns;
if (restrictaccountstopatterns) {
_has_bits_[2] |= 0x00000400u;
} else {
_has_bits_[2] &= ~0x00000400u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.RestrictAccountsToPatterns)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_restrictaccountstopatterns() {
_has_bits_[2] &= ~0x00000400u;
::enterprise_management::StringListPolicyProto* temp = restrictaccountstopatterns_;
restrictaccountstopatterns_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_restrictaccountstopatterns() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RestrictAccountsToPatterns)
_has_bits_[2] &= ~0x00000400u;
::enterprise_management::StringListPolicyProto* temp = restrictaccountstopatterns_;
restrictaccountstopatterns_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_restrictaccountstopatterns() {
_has_bits_[2] |= 0x00000400u;
if (restrictaccountstopatterns_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
restrictaccountstopatterns_ = p;
}
return restrictaccountstopatterns_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_restrictaccountstopatterns() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_restrictaccountstopatterns();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RestrictAccountsToPatterns)
return _msg;
}
inline void CloudPolicySettings::set_allocated_restrictaccountstopatterns(::enterprise_management::StringListPolicyProto* restrictaccountstopatterns) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(restrictaccountstopatterns_);
}
if (restrictaccountstopatterns) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(restrictaccountstopatterns));
if (message_arena != submessage_arena) {
restrictaccountstopatterns = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, restrictaccountstopatterns, submessage_arena);
}
_has_bits_[2] |= 0x00000400u;
} else {
_has_bits_[2] &= ~0x00000400u;
}
restrictaccountstopatterns_ = restrictaccountstopatterns;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RestrictAccountsToPatterns)
}

// optional .enterprise_management.BooleanPolicyProto SafeBrowsingExtendedReportingEnabled = 431;
inline bool CloudPolicySettings::_internal_has_safebrowsingextendedreportingenabled() const {
bool value = (_has_bits_[2] & 0x00000800u) != 0;
PROTOBUF_ASSUME(!value || safebrowsingextendedreportingenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_safebrowsingextendedreportingenabled() const {
return _internal_has_safebrowsingextendedreportingenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_safebrowsingextendedreportingenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = safebrowsingextendedreportingenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::safebrowsingextendedreportingenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SafeBrowsingExtendedReportingEnabled)
return _internal_safebrowsingextendedreportingenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_safebrowsingextendedreportingenabled(
::enterprise_management::BooleanPolicyProto* safebrowsingextendedreportingenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(safebrowsingextendedreportingenabled_);
}
safebrowsingextendedreportingenabled_ = safebrowsingextendedreportingenabled;
if (safebrowsingextendedreportingenabled) {
_has_bits_[2] |= 0x00000800u;
} else {
_has_bits_[2] &= ~0x00000800u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.SafeBrowsingExtendedReportingEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_safebrowsingextendedreportingenabled() {
_has_bits_[2] &= ~0x00000800u;
::enterprise_management::BooleanPolicyProto* temp = safebrowsingextendedreportingenabled_;
safebrowsingextendedreportingenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_safebrowsingextendedreportingenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SafeBrowsingExtendedReportingEnabled)
_has_bits_[2] &= ~0x00000800u;
::enterprise_management::BooleanPolicyProto* temp = safebrowsingextendedreportingenabled_;
safebrowsingextendedreportingenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_safebrowsingextendedreportingenabled() {
_has_bits_[2] |= 0x00000800u;
if (safebrowsingextendedreportingenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
safebrowsingextendedreportingenabled_ = p;
}
return safebrowsingextendedreportingenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_safebrowsingextendedreportingenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_safebrowsingextendedreportingenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SafeBrowsingExtendedReportingEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_safebrowsingextendedreportingenabled(::enterprise_management::BooleanPolicyProto* safebrowsingextendedreportingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(safebrowsingextendedreportingenabled_);
}
if (safebrowsingextendedreportingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(safebrowsingextendedreportingenabled));
if (message_arena != submessage_arena) {
safebrowsingextendedreportingenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, safebrowsingextendedreportingenabled, submessage_arena);
}
_has_bits_[2] |= 0x00000800u;
} else {
_has_bits_[2] &= ~0x00000800u;
}
safebrowsingextendedreportingenabled_ = safebrowsingextendedreportingenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SafeBrowsingExtendedReportingEnabled)
}

// optional .enterprise_management.StringPolicyProto CloudManagementEnrollmentToken = 512;
inline bool CloudPolicySettings::_internal_has_cloudmanagementenrollmenttoken() const {
bool value = (_has_bits_[2] & 0x08000000u) != 0;
PROTOBUF_ASSUME(!value || cloudmanagementenrollmenttoken_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_cloudmanagementenrollmenttoken() const {
return _internal_has_cloudmanagementenrollmenttoken();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_cloudmanagementenrollmenttoken() const {
const ::enterprise_management::StringPolicyProto* p = cloudmanagementenrollmenttoken_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::cloudmanagementenrollmenttoken() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CloudManagementEnrollmentToken)
return _internal_cloudmanagementenrollmenttoken();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_cloudmanagementenrollmenttoken(
::enterprise_management::StringPolicyProto* cloudmanagementenrollmenttoken) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cloudmanagementenrollmenttoken_);
}
cloudmanagementenrollmenttoken_ = cloudmanagementenrollmenttoken;
if (cloudmanagementenrollmenttoken) {
_has_bits_[2] |= 0x08000000u;
} else {
_has_bits_[2] &= ~0x08000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.CloudManagementEnrollmentToken)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_cloudmanagementenrollmenttoken() {
_has_bits_[2] &= ~0x08000000u;
::enterprise_management::StringPolicyProto* temp = cloudmanagementenrollmenttoken_;
cloudmanagementenrollmenttoken_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_cloudmanagementenrollmenttoken() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CloudManagementEnrollmentToken)
_has_bits_[2] &= ~0x08000000u;
::enterprise_management::StringPolicyProto* temp = cloudmanagementenrollmenttoken_;
cloudmanagementenrollmenttoken_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_cloudmanagementenrollmenttoken() {
_has_bits_[2] |= 0x08000000u;
if (cloudmanagementenrollmenttoken_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
cloudmanagementenrollmenttoken_ = p;
}
return cloudmanagementenrollmenttoken_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_cloudmanagementenrollmenttoken() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_cloudmanagementenrollmenttoken();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CloudManagementEnrollmentToken)
return _msg;
}
inline void CloudPolicySettings::set_allocated_cloudmanagementenrollmenttoken(::enterprise_management::StringPolicyProto* cloudmanagementenrollmenttoken) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cloudmanagementenrollmenttoken_);
}
if (cloudmanagementenrollmenttoken) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cloudmanagementenrollmenttoken));
if (message_arena != submessage_arena) {
cloudmanagementenrollmenttoken = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, cloudmanagementenrollmenttoken, submessage_arena);
}
_has_bits_[2] |= 0x08000000u;
} else {
_has_bits_[2] &= ~0x08000000u;
}
cloudmanagementenrollmenttoken_ = cloudmanagementenrollmenttoken;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CloudManagementEnrollmentToken)
}

// optional .enterprise_management.StringListPolicyProto OverrideSecurityRestrictionsOnInsecureOrigin = 459;
inline bool CloudPolicySettings::_internal_has_overridesecurityrestrictionsoninsecureorigin() const {
bool value = (_has_bits_[2] & 0x00080000u) != 0;
PROTOBUF_ASSUME(!value || overridesecurityrestrictionsoninsecureorigin_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_overridesecurityrestrictionsoninsecureorigin() const {
return _internal_has_overridesecurityrestrictionsoninsecureorigin();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_overridesecurityrestrictionsoninsecureorigin() const {
const ::enterprise_management::StringListPolicyProto* p = overridesecurityrestrictionsoninsecureorigin_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::overridesecurityrestrictionsoninsecureorigin() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.OverrideSecurityRestrictionsOnInsecureOrigin)
return _internal_overridesecurityrestrictionsoninsecureorigin();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_overridesecurityrestrictionsoninsecureorigin(
::enterprise_management::StringListPolicyProto* overridesecurityrestrictionsoninsecureorigin) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(overridesecurityrestrictionsoninsecureorigin_);
}
overridesecurityrestrictionsoninsecureorigin_ = overridesecurityrestrictionsoninsecureorigin;
if (overridesecurityrestrictionsoninsecureorigin) {
_has_bits_[2] |= 0x00080000u;
} else {
_has_bits_[2] &= ~0x00080000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.OverrideSecurityRestrictionsOnInsecureOrigin)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_overridesecurityrestrictionsoninsecureorigin() {
_has_bits_[2] &= ~0x00080000u;
::enterprise_management::StringListPolicyProto* temp = overridesecurityrestrictionsoninsecureorigin_;
overridesecurityrestrictionsoninsecureorigin_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_overridesecurityrestrictionsoninsecureorigin() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.OverrideSecurityRestrictionsOnInsecureOrigin)
_has_bits_[2] &= ~0x00080000u;
::enterprise_management::StringListPolicyProto* temp = overridesecurityrestrictionsoninsecureorigin_;
overridesecurityrestrictionsoninsecureorigin_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_overridesecurityrestrictionsoninsecureorigin() {
_has_bits_[2] |= 0x00080000u;
if (overridesecurityrestrictionsoninsecureorigin_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
overridesecurityrestrictionsoninsecureorigin_ = p;
}
return overridesecurityrestrictionsoninsecureorigin_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_overridesecurityrestrictionsoninsecureorigin() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_overridesecurityrestrictionsoninsecureorigin();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.OverrideSecurityRestrictionsOnInsecureOrigin)
return _msg;
}
inline void CloudPolicySettings::set_allocated_overridesecurityrestrictionsoninsecureorigin(::enterprise_management::StringListPolicyProto* overridesecurityrestrictionsoninsecureorigin) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(overridesecurityrestrictionsoninsecureorigin_);
}
if (overridesecurityrestrictionsoninsecureorigin) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(overridesecurityrestrictionsoninsecureorigin));
if (message_arena != submessage_arena) {
overridesecurityrestrictionsoninsecureorigin = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, overridesecurityrestrictionsoninsecureorigin, submessage_arena);
}
_has_bits_[2] |= 0x00080000u;
} else {
_has_bits_[2] &= ~0x00080000u;
}
overridesecurityrestrictionsoninsecureorigin_ = overridesecurityrestrictionsoninsecureorigin;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.OverrideSecurityRestrictionsOnInsecureOrigin)
}

// optional .enterprise_management.BooleanPolicyProto UrlKeyedAnonymizedDataCollectionEnabled = 463;
inline bool CloudPolicySettings::_internal_has_urlkeyedanonymizeddatacollectionenabled() const {
bool value = (_has_bits_[2] & 0x00200000u) != 0;
PROTOBUF_ASSUME(!value || urlkeyedanonymizeddatacollectionenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_urlkeyedanonymizeddatacollectionenabled() const {
return _internal_has_urlkeyedanonymizeddatacollectionenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_urlkeyedanonymizeddatacollectionenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = urlkeyedanonymizeddatacollectionenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::urlkeyedanonymizeddatacollectionenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.UrlKeyedAnonymizedDataCollectionEnabled)
return _internal_urlkeyedanonymizeddatacollectionenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_urlkeyedanonymizeddatacollectionenabled(
::enterprise_management::BooleanPolicyProto* urlkeyedanonymizeddatacollectionenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(urlkeyedanonymizeddatacollectionenabled_);
}
urlkeyedanonymizeddatacollectionenabled_ = urlkeyedanonymizeddatacollectionenabled;
if (urlkeyedanonymizeddatacollectionenabled) {
_has_bits_[2] |= 0x00200000u;
} else {
_has_bits_[2] &= ~0x00200000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.UrlKeyedAnonymizedDataCollectionEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_urlkeyedanonymizeddatacollectionenabled() {
_has_bits_[2] &= ~0x00200000u;
::enterprise_management::BooleanPolicyProto* temp = urlkeyedanonymizeddatacollectionenabled_;
urlkeyedanonymizeddatacollectionenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_urlkeyedanonymizeddatacollectionenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.UrlKeyedAnonymizedDataCollectionEnabled)
_has_bits_[2] &= ~0x00200000u;
::enterprise_management::BooleanPolicyProto* temp = urlkeyedanonymizeddatacollectionenabled_;
urlkeyedanonymizeddatacollectionenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_urlkeyedanonymizeddatacollectionenabled() {
_has_bits_[2] |= 0x00200000u;
if (urlkeyedanonymizeddatacollectionenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
urlkeyedanonymizeddatacollectionenabled_ = p;
}
return urlkeyedanonymizeddatacollectionenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_urlkeyedanonymizeddatacollectionenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_urlkeyedanonymizeddatacollectionenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.UrlKeyedAnonymizedDataCollectionEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_urlkeyedanonymizeddatacollectionenabled(::enterprise_management::BooleanPolicyProto* urlkeyedanonymizeddatacollectionenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(urlkeyedanonymizeddatacollectionenabled_);
}
if (urlkeyedanonymizeddatacollectionenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(urlkeyedanonymizeddatacollectionenabled));
if (message_arena != submessage_arena) {
urlkeyedanonymizeddatacollectionenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, urlkeyedanonymizeddatacollectionenabled, submessage_arena);
}
_has_bits_[2] |= 0x00200000u;
} else {
_has_bits_[2] &= ~0x00200000u;
}
urlkeyedanonymizeddatacollectionenabled_ = urlkeyedanonymizeddatacollectionenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.UrlKeyedAnonymizedDataCollectionEnabled)
}

// optional .enterprise_management.StringListPolicyProto CoalesceH2ConnectionsWithClientCertificatesForHosts = 468;
inline bool CloudPolicySettings::_internal_has_coalesceh2connectionswithclientcertificatesforhosts() const {
bool value = (_has_bits_[2] & 0x00400000u) != 0;
PROTOBUF_ASSUME(!value || coalesceh2connectionswithclientcertificatesforhosts_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_coalesceh2connectionswithclientcertificatesforhosts() const {
return _internal_has_coalesceh2connectionswithclientcertificatesforhosts();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_coalesceh2connectionswithclientcertificatesforhosts() const {
const ::enterprise_management::StringListPolicyProto* p = coalesceh2connectionswithclientcertificatesforhosts_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::coalesceh2connectionswithclientcertificatesforhosts() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CoalesceH2ConnectionsWithClientCertificatesForHosts)
return _internal_coalesceh2connectionswithclientcertificatesforhosts();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_coalesceh2connectionswithclientcertificatesforhosts(
::enterprise_management::StringListPolicyProto* coalesceh2connectionswithclientcertificatesforhosts) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(coalesceh2connectionswithclientcertificatesforhosts_);
}
coalesceh2connectionswithclientcertificatesforhosts_ = coalesceh2connectionswithclientcertificatesforhosts;
if (coalesceh2connectionswithclientcertificatesforhosts) {
_has_bits_[2] |= 0x00400000u;
} else {
_has_bits_[2] &= ~0x00400000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.CoalesceH2ConnectionsWithClientCertificatesForHosts)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_coalesceh2connectionswithclientcertificatesforhosts() {
_has_bits_[2] &= ~0x00400000u;
::enterprise_management::StringListPolicyProto* temp = coalesceh2connectionswithclientcertificatesforhosts_;
coalesceh2connectionswithclientcertificatesforhosts_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_coalesceh2connectionswithclientcertificatesforhosts() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CoalesceH2ConnectionsWithClientCertificatesForHosts)
_has_bits_[2] &= ~0x00400000u;
::enterprise_management::StringListPolicyProto* temp = coalesceh2connectionswithclientcertificatesforhosts_;
coalesceh2connectionswithclientcertificatesforhosts_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_coalesceh2connectionswithclientcertificatesforhosts() {
_has_bits_[2] |= 0x00400000u;
if (coalesceh2connectionswithclientcertificatesforhosts_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
coalesceh2connectionswithclientcertificatesforhosts_ = p;
}
return coalesceh2connectionswithclientcertificatesforhosts_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_coalesceh2connectionswithclientcertificatesforhosts() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_coalesceh2connectionswithclientcertificatesforhosts();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CoalesceH2ConnectionsWithClientCertificatesForHosts)
return _msg;
}
inline void CloudPolicySettings::set_allocated_coalesceh2connectionswithclientcertificatesforhosts(::enterprise_management::StringListPolicyProto* coalesceh2connectionswithclientcertificatesforhosts) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(coalesceh2connectionswithclientcertificatesforhosts_);
}
if (coalesceh2connectionswithclientcertificatesforhosts) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(coalesceh2connectionswithclientcertificatesforhosts));
if (message_arena != submessage_arena) {
coalesceh2connectionswithclientcertificatesforhosts = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, coalesceh2connectionswithclientcertificatesforhosts, submessage_arena);
}
_has_bits_[2] |= 0x00400000u;
} else {
_has_bits_[2] &= ~0x00400000u;
}
coalesceh2connectionswithclientcertificatesforhosts_ = coalesceh2connectionswithclientcertificatesforhosts;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CoalesceH2ConnectionsWithClientCertificatesForHosts)
}

// optional .enterprise_management.BooleanPolicyProto CloudReportingEnabled = 495;
inline bool CloudPolicySettings::_internal_has_cloudreportingenabled() const {
bool value = (_has_bits_[2] & 0x04000000u) != 0;
PROTOBUF_ASSUME(!value || cloudreportingenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_cloudreportingenabled() const {
return _internal_has_cloudreportingenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_cloudreportingenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = cloudreportingenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::cloudreportingenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CloudReportingEnabled)
return _internal_cloudreportingenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_cloudreportingenabled(
::enterprise_management::BooleanPolicyProto* cloudreportingenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cloudreportingenabled_);
}
cloudreportingenabled_ = cloudreportingenabled;
if (cloudreportingenabled) {
_has_bits_[2] |= 0x04000000u;
} else {
_has_bits_[2] &= ~0x04000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.CloudReportingEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_cloudreportingenabled() {
_has_bits_[2] &= ~0x04000000u;
::enterprise_management::BooleanPolicyProto* temp = cloudreportingenabled_;
cloudreportingenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_cloudreportingenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CloudReportingEnabled)
_has_bits_[2] &= ~0x04000000u;
::enterprise_management::BooleanPolicyProto* temp = cloudreportingenabled_;
cloudreportingenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_cloudreportingenabled() {
_has_bits_[2] |= 0x04000000u;
if (cloudreportingenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
cloudreportingenabled_ = p;
}
return cloudreportingenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_cloudreportingenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_cloudreportingenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CloudReportingEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_cloudreportingenabled(::enterprise_management::BooleanPolicyProto* cloudreportingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cloudreportingenabled_);
}
if (cloudreportingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cloudreportingenabled));
if (message_arena != submessage_arena) {
cloudreportingenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, cloudreportingenabled, submessage_arena);
}
_has_bits_[2] |= 0x04000000u;
} else {
_has_bits_[2] &= ~0x04000000u;
}
cloudreportingenabled_ = cloudreportingenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CloudReportingEnabled)
}

// optional .enterprise_management.BooleanPolicyProto CloudProfileReportingEnabled = 944;
inline bool CloudPolicySettings::_internal_has_cloudprofilereportingenabled() const {
bool value = (_has_bits_[4] & 0x00000200u) != 0;
PROTOBUF_ASSUME(!value || cloudprofilereportingenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_cloudprofilereportingenabled() const {
return _internal_has_cloudprofilereportingenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_cloudprofilereportingenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = cloudprofilereportingenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::cloudprofilereportingenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CloudProfileReportingEnabled)
return _internal_cloudprofilereportingenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_cloudprofilereportingenabled(
::enterprise_management::BooleanPolicyProto* cloudprofilereportingenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cloudprofilereportingenabled_);
}
cloudprofilereportingenabled_ = cloudprofilereportingenabled;
if (cloudprofilereportingenabled) {
_has_bits_[4] |= 0x00000200u;
} else {
_has_bits_[4] &= ~0x00000200u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.CloudProfileReportingEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_cloudprofilereportingenabled() {
_has_bits_[4] &= ~0x00000200u;
::enterprise_management::BooleanPolicyProto* temp = cloudprofilereportingenabled_;
cloudprofilereportingenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_cloudprofilereportingenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CloudProfileReportingEnabled)
_has_bits_[4] &= ~0x00000200u;
::enterprise_management::BooleanPolicyProto* temp = cloudprofilereportingenabled_;
cloudprofilereportingenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_cloudprofilereportingenabled() {
_has_bits_[4] |= 0x00000200u;
if (cloudprofilereportingenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
cloudprofilereportingenabled_ = p;
}
return cloudprofilereportingenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_cloudprofilereportingenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_cloudprofilereportingenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CloudProfileReportingEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_cloudprofilereportingenabled(::enterprise_management::BooleanPolicyProto* cloudprofilereportingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cloudprofilereportingenabled_);
}
if (cloudprofilereportingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cloudprofilereportingenabled));
if (message_arena != submessage_arena) {
cloudprofilereportingenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, cloudprofilereportingenabled, submessage_arena);
}
_has_bits_[4] |= 0x00000200u;
} else {
_has_bits_[4] &= ~0x00000200u;
}
cloudprofilereportingenabled_ = cloudprofilereportingenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CloudProfileReportingEnabled)
}

// optional .enterprise_management.IntegerPolicyProto CloudReportingUploadFrequency = 964;
inline bool CloudPolicySettings::_internal_has_cloudreportinguploadfrequency() const {
bool value = (_has_bits_[4] & 0x00002000u) != 0;
PROTOBUF_ASSUME(!value || cloudreportinguploadfrequency_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_cloudreportinguploadfrequency() const {
return _internal_has_cloudreportinguploadfrequency();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::_internal_cloudreportinguploadfrequency() const {
const ::enterprise_management::IntegerPolicyProto* p = cloudreportinguploadfrequency_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::IntegerPolicyProto&>(
::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::cloudreportinguploadfrequency() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CloudReportingUploadFrequency)
return _internal_cloudreportinguploadfrequency();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_cloudreportinguploadfrequency(
::enterprise_management::IntegerPolicyProto* cloudreportinguploadfrequency) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cloudreportinguploadfrequency_);
}
cloudreportinguploadfrequency_ = cloudreportinguploadfrequency;
if (cloudreportinguploadfrequency) {
_has_bits_[4] |= 0x00002000u;
} else {
_has_bits_[4] &= ~0x00002000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.CloudReportingUploadFrequency)
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_cloudreportinguploadfrequency() {
_has_bits_[4] &= ~0x00002000u;
::enterprise_management::IntegerPolicyProto* temp = cloudreportinguploadfrequency_;
cloudreportinguploadfrequency_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::unsafe_arena_release_cloudreportinguploadfrequency() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CloudReportingUploadFrequency)
_has_bits_[4] &= ~0x00002000u;
::enterprise_management::IntegerPolicyProto* temp = cloudreportinguploadfrequency_;
cloudreportinguploadfrequency_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::_internal_mutable_cloudreportinguploadfrequency() {
_has_bits_[4] |= 0x00002000u;
if (cloudreportinguploadfrequency_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaForAllocation());
cloudreportinguploadfrequency_ = p;
}
return cloudreportinguploadfrequency_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_cloudreportinguploadfrequency() {
::enterprise_management::IntegerPolicyProto* _msg = _internal_mutable_cloudreportinguploadfrequency();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CloudReportingUploadFrequency)
return _msg;
}
inline void CloudPolicySettings::set_allocated_cloudreportinguploadfrequency(::enterprise_management::IntegerPolicyProto* cloudreportinguploadfrequency) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cloudreportinguploadfrequency_);
}
if (cloudreportinguploadfrequency) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cloudreportinguploadfrequency));
if (message_arena != submessage_arena) {
cloudreportinguploadfrequency = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, cloudreportinguploadfrequency, submessage_arena);
}
_has_bits_[4] |= 0x00002000u;
} else {
_has_bits_[4] &= ~0x00002000u;
}
cloudreportinguploadfrequency_ = cloudreportinguploadfrequency;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CloudReportingUploadFrequency)
}

// optional .enterprise_management.BooleanPolicyProto EnterpriseHardwarePlatformAPIEnabled = 485;
inline bool CloudPolicySettings::_internal_has_enterprisehardwareplatformapienabled() const {
bool value = (_has_bits_[2] & 0x00800000u) != 0;
PROTOBUF_ASSUME(!value || enterprisehardwareplatformapienabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_enterprisehardwareplatformapienabled() const {
return _internal_has_enterprisehardwareplatformapienabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_enterprisehardwareplatformapienabled() const {
const ::enterprise_management::BooleanPolicyProto* p = enterprisehardwareplatformapienabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::enterprisehardwareplatformapienabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnterpriseHardwarePlatformAPIEnabled)
return _internal_enterprisehardwareplatformapienabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_enterprisehardwareplatformapienabled(
::enterprise_management::BooleanPolicyProto* enterprisehardwareplatformapienabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(enterprisehardwareplatformapienabled_);
}
enterprisehardwareplatformapienabled_ = enterprisehardwareplatformapienabled;
if (enterprisehardwareplatformapienabled) {
_has_bits_[2] |= 0x00800000u;
} else {
_has_bits_[2] &= ~0x00800000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.EnterpriseHardwarePlatformAPIEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_enterprisehardwareplatformapienabled() {
_has_bits_[2] &= ~0x00800000u;
::enterprise_management::BooleanPolicyProto* temp = enterprisehardwareplatformapienabled_;
enterprisehardwareplatformapienabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_enterprisehardwareplatformapienabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnterpriseHardwarePlatformAPIEnabled)
_has_bits_[2] &= ~0x00800000u;
::enterprise_management::BooleanPolicyProto* temp = enterprisehardwareplatformapienabled_;
enterprisehardwareplatformapienabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_enterprisehardwareplatformapienabled() {
_has_bits_[2] |= 0x00800000u;
if (enterprisehardwareplatformapienabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
enterprisehardwareplatformapienabled_ = p;
}
return enterprisehardwareplatformapienabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_enterprisehardwareplatformapienabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_enterprisehardwareplatformapienabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnterpriseHardwarePlatformAPIEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_enterprisehardwareplatformapienabled(::enterprise_management::BooleanPolicyProto* enterprisehardwareplatformapienabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(enterprisehardwareplatformapienabled_);
}
if (enterprisehardwareplatformapienabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(enterprisehardwareplatformapienabled));
if (message_arena != submessage_arena) {
enterprisehardwareplatformapienabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, enterprisehardwareplatformapienabled, submessage_arena);
}
_has_bits_[2] |= 0x00800000u;
} else {
_has_bits_[2] &= ~0x00800000u;
}
enterprisehardwareplatformapienabled_ = enterprisehardwareplatformapienabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnterpriseHardwarePlatformAPIEnabled)
}

// optional .enterprise_management.StringListPolicyProto HSTSPolicyBypassList = 603;
inline bool CloudPolicySettings::_internal_has_hstspolicybypasslist() const {
bool value = (_has_bits_[3] & 0x00000002u) != 0;
PROTOBUF_ASSUME(!value || hstspolicybypasslist_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_hstspolicybypasslist() const {
return _internal_has_hstspolicybypasslist();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_hstspolicybypasslist() const {
const ::enterprise_management::StringListPolicyProto* p = hstspolicybypasslist_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::hstspolicybypasslist() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.HSTSPolicyBypassList)
return _internal_hstspolicybypasslist();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_hstspolicybypasslist(
::enterprise_management::StringListPolicyProto* hstspolicybypasslist) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(hstspolicybypasslist_);
}
hstspolicybypasslist_ = hstspolicybypasslist;
if (hstspolicybypasslist) {
_has_bits_[3] |= 0x00000002u;
} else {
_has_bits_[3] &= ~0x00000002u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.HSTSPolicyBypassList)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_hstspolicybypasslist() {
_has_bits_[3] &= ~0x00000002u;
::enterprise_management::StringListPolicyProto* temp = hstspolicybypasslist_;
hstspolicybypasslist_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_hstspolicybypasslist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.HSTSPolicyBypassList)
_has_bits_[3] &= ~0x00000002u;
::enterprise_management::StringListPolicyProto* temp = hstspolicybypasslist_;
hstspolicybypasslist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_hstspolicybypasslist() {
_has_bits_[3] |= 0x00000002u;
if (hstspolicybypasslist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
hstspolicybypasslist_ = p;
}
return hstspolicybypasslist_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_hstspolicybypasslist() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_hstspolicybypasslist();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.HSTSPolicyBypassList)
return _msg;
}
inline void CloudPolicySettings::set_allocated_hstspolicybypasslist(::enterprise_management::StringListPolicyProto* hstspolicybypasslist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(hstspolicybypasslist_);
}
if (hstspolicybypasslist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(hstspolicybypasslist));
if (message_arena != submessage_arena) {
hstspolicybypasslist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, hstspolicybypasslist, submessage_arena);
}
_has_bits_[3] |= 0x00000002u;
} else {
_has_bits_[3] &= ~0x00000002u;
}
hstspolicybypasslist_ = hstspolicybypasslist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.HSTSPolicyBypassList)
}

// optional .enterprise_management.BooleanPolicyProto EventPathEnabled = 992;
inline bool CloudPolicySettings::_internal_has_eventpathenabled() const {
bool value = (_has_bits_[4] & 0x00100000u) != 0;
PROTOBUF_ASSUME(!value || eventpathenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_eventpathenabled() const {
return _internal_has_eventpathenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_eventpathenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = eventpathenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::eventpathenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EventPathEnabled)
return _internal_eventpathenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_eventpathenabled(
::enterprise_management::BooleanPolicyProto* eventpathenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(eventpathenabled_);
}
eventpathenabled_ = eventpathenabled;
if (eventpathenabled) {
_has_bits_[4] |= 0x00100000u;
} else {
_has_bits_[4] &= ~0x00100000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.EventPathEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_eventpathenabled() {
_has_bits_[4] &= ~0x00100000u;
::enterprise_management::BooleanPolicyProto* temp = eventpathenabled_;
eventpathenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_eventpathenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EventPathEnabled)
_has_bits_[4] &= ~0x00100000u;
::enterprise_management::BooleanPolicyProto* temp = eventpathenabled_;
eventpathenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_eventpathenabled() {
_has_bits_[4] |= 0x00100000u;
if (eventpathenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
eventpathenabled_ = p;
}
return eventpathenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_eventpathenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_eventpathenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EventPathEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_eventpathenabled(::enterprise_management::BooleanPolicyProto* eventpathenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(eventpathenabled_);
}
if (eventpathenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(eventpathenabled));
if (message_arena != submessage_arena) {
eventpathenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, eventpathenabled, submessage_arena);
}
_has_bits_[4] |= 0x00100000u;
} else {
_has_bits_[4] &= ~0x00100000u;
}
eventpathenabled_ = eventpathenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EventPathEnabled)
}

// optional .enterprise_management.BooleanPolicyProto PaymentMethodQueryEnabled = 653;
inline bool CloudPolicySettings::_internal_has_paymentmethodqueryenabled() const {
bool value = (_has_bits_[3] & 0x00000040u) != 0;
PROTOBUF_ASSUME(!value || paymentmethodqueryenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_paymentmethodqueryenabled() const {
return _internal_has_paymentmethodqueryenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_paymentmethodqueryenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = paymentmethodqueryenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::paymentmethodqueryenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PaymentMethodQueryEnabled)
return _internal_paymentmethodqueryenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_paymentmethodqueryenabled(
::enterprise_management::BooleanPolicyProto* paymentmethodqueryenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(paymentmethodqueryenabled_);
}
paymentmethodqueryenabled_ = paymentmethodqueryenabled;
if (paymentmethodqueryenabled) {
_has_bits_[3] |= 0x00000040u;
} else {
_has_bits_[3] &= ~0x00000040u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.PaymentMethodQueryEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_paymentmethodqueryenabled() {
_has_bits_[3] &= ~0x00000040u;
::enterprise_management::BooleanPolicyProto* temp = paymentmethodqueryenabled_;
paymentmethodqueryenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_paymentmethodqueryenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PaymentMethodQueryEnabled)
_has_bits_[3] &= ~0x00000040u;
::enterprise_management::BooleanPolicyProto* temp = paymentmethodqueryenabled_;
paymentmethodqueryenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_paymentmethodqueryenabled() {
_has_bits_[3] |= 0x00000040u;
if (paymentmethodqueryenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
paymentmethodqueryenabled_ = p;
}
return paymentmethodqueryenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_paymentmethodqueryenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_paymentmethodqueryenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PaymentMethodQueryEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_paymentmethodqueryenabled(::enterprise_management::BooleanPolicyProto* paymentmethodqueryenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(paymentmethodqueryenabled_);
}
if (paymentmethodqueryenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(paymentmethodqueryenabled));
if (message_arena != submessage_arena) {
paymentmethodqueryenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, paymentmethodqueryenabled, submessage_arena);
}
_has_bits_[3] |= 0x00000040u;
} else {
_has_bits_[3] &= ~0x00000040u;
}
paymentmethodqueryenabled_ = paymentmethodqueryenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PaymentMethodQueryEnabled)
}

// optional .enterprise_management.BooleanPolicyProto ScrollToTextFragmentEnabled = 689;
inline bool CloudPolicySettings::_internal_has_scrolltotextfragmentenabled() const {
bool value = (_has_bits_[3] & 0x00000100u) != 0;
PROTOBUF_ASSUME(!value || scrolltotextfragmentenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_scrolltotextfragmentenabled() const {
return _internal_has_scrolltotextfragmentenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_scrolltotextfragmentenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = scrolltotextfragmentenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::scrolltotextfragmentenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ScrollToTextFragmentEnabled)
return _internal_scrolltotextfragmentenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_scrolltotextfragmentenabled(
::enterprise_management::BooleanPolicyProto* scrolltotextfragmentenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(scrolltotextfragmentenabled_);
}
scrolltotextfragmentenabled_ = scrolltotextfragmentenabled;
if (scrolltotextfragmentenabled) {
_has_bits_[3] |= 0x00000100u;
} else {
_has_bits_[3] &= ~0x00000100u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.ScrollToTextFragmentEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_scrolltotextfragmentenabled() {
_has_bits_[3] &= ~0x00000100u;
::enterprise_management::BooleanPolicyProto* temp = scrolltotextfragmentenabled_;
scrolltotextfragmentenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_scrolltotextfragmentenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ScrollToTextFragmentEnabled)
_has_bits_[3] &= ~0x00000100u;
::enterprise_management::BooleanPolicyProto* temp = scrolltotextfragmentenabled_;
scrolltotextfragmentenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_scrolltotextfragmentenabled() {
_has_bits_[3] |= 0x00000100u;
if (scrolltotextfragmentenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
scrolltotextfragmentenabled_ = p;
}
return scrolltotextfragmentenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_scrolltotextfragmentenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_scrolltotextfragmentenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ScrollToTextFragmentEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_scrolltotextfragmentenabled(::enterprise_management::BooleanPolicyProto* scrolltotextfragmentenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(scrolltotextfragmentenabled_);
}
if (scrolltotextfragmentenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(scrolltotextfragmentenabled));
if (message_arena != submessage_arena) {
scrolltotextfragmentenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, scrolltotextfragmentenabled, submessage_arena);
}
_has_bits_[3] |= 0x00000100u;
} else {
_has_bits_[3] &= ~0x00000100u;
}
scrolltotextfragmentenabled_ = scrolltotextfragmentenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ScrollToTextFragmentEnabled)
}

// optional .enterprise_management.BooleanPolicyProto IntensiveWakeUpThrottlingEnabled = 715;
inline bool CloudPolicySettings::_internal_has_intensivewakeupthrottlingenabled() const {
bool value = (_has_bits_[3] & 0x00000400u) != 0;
PROTOBUF_ASSUME(!value || intensivewakeupthrottlingenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_intensivewakeupthrottlingenabled() const {
return _internal_has_intensivewakeupthrottlingenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_intensivewakeupthrottlingenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = intensivewakeupthrottlingenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::intensivewakeupthrottlingenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.IntensiveWakeUpThrottlingEnabled)
return _internal_intensivewakeupthrottlingenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_intensivewakeupthrottlingenabled(
::enterprise_management::BooleanPolicyProto* intensivewakeupthrottlingenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(intensivewakeupthrottlingenabled_);
}
intensivewakeupthrottlingenabled_ = intensivewakeupthrottlingenabled;
if (intensivewakeupthrottlingenabled) {
_has_bits_[3] |= 0x00000400u;
} else {
_has_bits_[3] &= ~0x00000400u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.IntensiveWakeUpThrottlingEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_intensivewakeupthrottlingenabled() {
_has_bits_[3] &= ~0x00000400u;
::enterprise_management::BooleanPolicyProto* temp = intensivewakeupthrottlingenabled_;
intensivewakeupthrottlingenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_intensivewakeupthrottlingenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.IntensiveWakeUpThrottlingEnabled)
_has_bits_[3] &= ~0x00000400u;
::enterprise_management::BooleanPolicyProto* temp = intensivewakeupthrottlingenabled_;
intensivewakeupthrottlingenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_intensivewakeupthrottlingenabled() {
_has_bits_[3] |= 0x00000400u;
if (intensivewakeupthrottlingenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
intensivewakeupthrottlingenabled_ = p;
}
return intensivewakeupthrottlingenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_intensivewakeupthrottlingenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_intensivewakeupthrottlingenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.IntensiveWakeUpThrottlingEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_intensivewakeupthrottlingenabled(::enterprise_management::BooleanPolicyProto* intensivewakeupthrottlingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(intensivewakeupthrottlingenabled_);
}
if (intensivewakeupthrottlingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(intensivewakeupthrottlingenabled));
if (message_arena != submessage_arena) {
intensivewakeupthrottlingenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, intensivewakeupthrottlingenabled, submessage_arena);
}
_has_bits_[3] |= 0x00000400u;
} else {
_has_bits_[3] &= ~0x00000400u;
}
intensivewakeupthrottlingenabled_ = intensivewakeupthrottlingenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.IntensiveWakeUpThrottlingEnabled)
}

// optional .enterprise_management.BooleanPolicyProto BackForwardCacheEnabled = 760;
inline bool CloudPolicySettings::_internal_has_backforwardcacheenabled() const {
bool value = (_has_bits_[3] & 0x00080000u) != 0;
PROTOBUF_ASSUME(!value || backforwardcacheenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_backforwardcacheenabled() const {
return _internal_has_backforwardcacheenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_backforwardcacheenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = backforwardcacheenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::backforwardcacheenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BackForwardCacheEnabled)
return _internal_backforwardcacheenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_backforwardcacheenabled(
::enterprise_management::BooleanPolicyProto* backforwardcacheenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(backforwardcacheenabled_);
}
backforwardcacheenabled_ = backforwardcacheenabled;
if (backforwardcacheenabled) {
_has_bits_[3] |= 0x00080000u;
} else {
_has_bits_[3] &= ~0x00080000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.BackForwardCacheEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_backforwardcacheenabled() {
_has_bits_[3] &= ~0x00080000u;
::enterprise_management::BooleanPolicyProto* temp = backforwardcacheenabled_;
backforwardcacheenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_backforwardcacheenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BackForwardCacheEnabled)
_has_bits_[3] &= ~0x00080000u;
::enterprise_management::BooleanPolicyProto* temp = backforwardcacheenabled_;
backforwardcacheenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_backforwardcacheenabled() {
_has_bits_[3] |= 0x00080000u;
if (backforwardcacheenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
backforwardcacheenabled_ = p;
}
return backforwardcacheenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_backforwardcacheenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_backforwardcacheenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BackForwardCacheEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_backforwardcacheenabled(::enterprise_management::BooleanPolicyProto* backforwardcacheenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(backforwardcacheenabled_);
}
if (backforwardcacheenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(backforwardcacheenabled));
if (message_arena != submessage_arena) {
backforwardcacheenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, backforwardcacheenabled, submessage_arena);
}
_has_bits_[3] |= 0x00080000u;
} else {
_has_bits_[3] &= ~0x00080000u;
}
backforwardcacheenabled_ = backforwardcacheenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BackForwardCacheEnabled)
}

// optional .enterprise_management.BooleanPolicyProto UserAgentClientHintsGREASEUpdateEnabled = 926;
inline bool CloudPolicySettings::_internal_has_useragentclienthintsgreaseupdateenabled() const {
bool value = (_has_bits_[4] & 0x00000080u) != 0;
PROTOBUF_ASSUME(!value || useragentclienthintsgreaseupdateenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_useragentclienthintsgreaseupdateenabled() const {
return _internal_has_useragentclienthintsgreaseupdateenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_useragentclienthintsgreaseupdateenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = useragentclienthintsgreaseupdateenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::useragentclienthintsgreaseupdateenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.UserAgentClientHintsGREASEUpdateEnabled)
return _internal_useragentclienthintsgreaseupdateenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_useragentclienthintsgreaseupdateenabled(
::enterprise_management::BooleanPolicyProto* useragentclienthintsgreaseupdateenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(useragentclienthintsgreaseupdateenabled_);
}
useragentclienthintsgreaseupdateenabled_ = useragentclienthintsgreaseupdateenabled;
if (useragentclienthintsgreaseupdateenabled) {
_has_bits_[4] |= 0x00000080u;
} else {
_has_bits_[4] &= ~0x00000080u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.UserAgentClientHintsGREASEUpdateEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_useragentclienthintsgreaseupdateenabled() {
_has_bits_[4] &= ~0x00000080u;
::enterprise_management::BooleanPolicyProto* temp = useragentclienthintsgreaseupdateenabled_;
useragentclienthintsgreaseupdateenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_useragentclienthintsgreaseupdateenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.UserAgentClientHintsGREASEUpdateEnabled)
_has_bits_[4] &= ~0x00000080u;
::enterprise_management::BooleanPolicyProto* temp = useragentclienthintsgreaseupdateenabled_;
useragentclienthintsgreaseupdateenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_useragentclienthintsgreaseupdateenabled() {
_has_bits_[4] |= 0x00000080u;
if (useragentclienthintsgreaseupdateenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
useragentclienthintsgreaseupdateenabled_ = p;
}
return useragentclienthintsgreaseupdateenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_useragentclienthintsgreaseupdateenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_useragentclienthintsgreaseupdateenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.UserAgentClientHintsGREASEUpdateEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_useragentclienthintsgreaseupdateenabled(::enterprise_management::BooleanPolicyProto* useragentclienthintsgreaseupdateenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(useragentclienthintsgreaseupdateenabled_);
}
if (useragentclienthintsgreaseupdateenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(useragentclienthintsgreaseupdateenabled));
if (message_arena != submessage_arena) {
useragentclienthintsgreaseupdateenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, useragentclienthintsgreaseupdateenabled, submessage_arena);
}
_has_bits_[4] |= 0x00000080u;
} else {
_has_bits_[4] &= ~0x00000080u;
}
useragentclienthintsgreaseupdateenabled_ = useragentclienthintsgreaseupdateenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.UserAgentClientHintsGREASEUpdateEnabled)
}

// optional .enterprise_management.BooleanPolicyProto UrlParamFilterEnabled = 983;
inline bool CloudPolicySettings::_internal_has_urlparamfilterenabled() const {
bool value = (_has_bits_[4] & 0x00040000u) != 0;
PROTOBUF_ASSUME(!value || urlparamfilterenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_urlparamfilterenabled() const {
return _internal_has_urlparamfilterenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_urlparamfilterenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = urlparamfilterenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::urlparamfilterenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.UrlParamFilterEnabled)
return _internal_urlparamfilterenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_urlparamfilterenabled(
::enterprise_management::BooleanPolicyProto* urlparamfilterenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(urlparamfilterenabled_);
}
urlparamfilterenabled_ = urlparamfilterenabled;
if (urlparamfilterenabled) {
_has_bits_[4] |= 0x00040000u;
} else {
_has_bits_[4] &= ~0x00040000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.UrlParamFilterEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_urlparamfilterenabled() {
_has_bits_[4] &= ~0x00040000u;
::enterprise_management::BooleanPolicyProto* temp = urlparamfilterenabled_;
urlparamfilterenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_urlparamfilterenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.UrlParamFilterEnabled)
_has_bits_[4] &= ~0x00040000u;
::enterprise_management::BooleanPolicyProto* temp = urlparamfilterenabled_;
urlparamfilterenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_urlparamfilterenabled() {
_has_bits_[4] |= 0x00040000u;
if (urlparamfilterenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
urlparamfilterenabled_ = p;
}
return urlparamfilterenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_urlparamfilterenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_urlparamfilterenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.UrlParamFilterEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_urlparamfilterenabled(::enterprise_management::BooleanPolicyProto* urlparamfilterenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(urlparamfilterenabled_);
}
if (urlparamfilterenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(urlparamfilterenabled));
if (message_arena != submessage_arena) {
urlparamfilterenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, urlparamfilterenabled, submessage_arena);
}
_has_bits_[4] |= 0x00040000u;
} else {
_has_bits_[4] &= ~0x00040000u;
}
urlparamfilterenabled_ = urlparamfilterenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.UrlParamFilterEnabled)
}

// optional .enterprise_management.BooleanPolicyProto InsecureFormsWarningsEnabled = 750;
inline bool CloudPolicySettings::_internal_has_insecureformswarningsenabled() const {
bool value = (_has_bits_[3] & 0x00008000u) != 0;
PROTOBUF_ASSUME(!value || insecureformswarningsenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_insecureformswarningsenabled() const {
return _internal_has_insecureformswarningsenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_insecureformswarningsenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = insecureformswarningsenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::insecureformswarningsenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.InsecureFormsWarningsEnabled)
return _internal_insecureformswarningsenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_insecureformswarningsenabled(
::enterprise_management::BooleanPolicyProto* insecureformswarningsenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(insecureformswarningsenabled_);
}
insecureformswarningsenabled_ = insecureformswarningsenabled;
if (insecureformswarningsenabled) {
_has_bits_[3] |= 0x00008000u;
} else {
_has_bits_[3] &= ~0x00008000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.InsecureFormsWarningsEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_insecureformswarningsenabled() {
_has_bits_[3] &= ~0x00008000u;
::enterprise_management::BooleanPolicyProto* temp = insecureformswarningsenabled_;
insecureformswarningsenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_insecureformswarningsenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.InsecureFormsWarningsEnabled)
_has_bits_[3] &= ~0x00008000u;
::enterprise_management::BooleanPolicyProto* temp = insecureformswarningsenabled_;
insecureformswarningsenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_insecureformswarningsenabled() {
_has_bits_[3] |= 0x00008000u;
if (insecureformswarningsenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
insecureformswarningsenabled_ = p;
}
return insecureformswarningsenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_insecureformswarningsenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_insecureformswarningsenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.InsecureFormsWarningsEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_insecureformswarningsenabled(::enterprise_management::BooleanPolicyProto* insecureformswarningsenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(insecureformswarningsenabled_);
}
if (insecureformswarningsenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(insecureformswarningsenabled));
if (message_arena != submessage_arena) {
insecureformswarningsenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, insecureformswarningsenabled, submessage_arena);
}
_has_bits_[3] |= 0x00008000u;
} else {
_has_bits_[3] &= ~0x00008000u;
}
insecureformswarningsenabled_ = insecureformswarningsenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.InsecureFormsWarningsEnabled)
}

// optional .enterprise_management.StringListPolicyProto LookalikeWarningAllowlistDomains = 784;
inline bool CloudPolicySettings::_internal_has_lookalikewarningallowlistdomains() const {
bool value = (_has_bits_[3] & 0x00400000u) != 0;
PROTOBUF_ASSUME(!value || lookalikewarningallowlistdomains_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_lookalikewarningallowlistdomains() const {
return _internal_has_lookalikewarningallowlistdomains();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_lookalikewarningallowlistdomains() const {
const ::enterprise_management::StringListPolicyProto* p = lookalikewarningallowlistdomains_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::lookalikewarningallowlistdomains() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.LookalikeWarningAllowlistDomains)
return _internal_lookalikewarningallowlistdomains();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_lookalikewarningallowlistdomains(
::enterprise_management::StringListPolicyProto* lookalikewarningallowlistdomains) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(lookalikewarningallowlistdomains_);
}
lookalikewarningallowlistdomains_ = lookalikewarningallowlistdomains;
if (lookalikewarningallowlistdomains) {
_has_bits_[3] |= 0x00400000u;
} else {
_has_bits_[3] &= ~0x00400000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.LookalikeWarningAllowlistDomains)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_lookalikewarningallowlistdomains() {
_has_bits_[3] &= ~0x00400000u;
::enterprise_management::StringListPolicyProto* temp = lookalikewarningallowlistdomains_;
lookalikewarningallowlistdomains_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_lookalikewarningallowlistdomains() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.LookalikeWarningAllowlistDomains)
_has_bits_[3] &= ~0x00400000u;
::enterprise_management::StringListPolicyProto* temp = lookalikewarningallowlistdomains_;
lookalikewarningallowlistdomains_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_lookalikewarningallowlistdomains() {
_has_bits_[3] |= 0x00400000u;
if (lookalikewarningallowlistdomains_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
lookalikewarningallowlistdomains_ = p;
}
return lookalikewarningallowlistdomains_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_lookalikewarningallowlistdomains() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_lookalikewarningallowlistdomains();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.LookalikeWarningAllowlistDomains)
return _msg;
}
inline void CloudPolicySettings::set_allocated_lookalikewarningallowlistdomains(::enterprise_management::StringListPolicyProto* lookalikewarningallowlistdomains) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(lookalikewarningallowlistdomains_);
}
if (lookalikewarningallowlistdomains) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(lookalikewarningallowlistdomains));
if (message_arena != submessage_arena) {
lookalikewarningallowlistdomains = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, lookalikewarningallowlistdomains, submessage_arena);
}
_has_bits_[3] |= 0x00400000u;
} else {
_has_bits_[3] &= ~0x00400000u;
}
lookalikewarningallowlistdomains_ = lookalikewarningallowlistdomains;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.LookalikeWarningAllowlistDomains)
}

// optional .enterprise_management.IntegerPolicyProto TosDialogBehavior = 803;
inline bool CloudPolicySettings::_internal_has_tosdialogbehavior() const {
bool value = (_has_bits_[3] & 0x01000000u) != 0;
PROTOBUF_ASSUME(!value || tosdialogbehavior_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_tosdialogbehavior() const {
return _internal_has_tosdialogbehavior();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::_internal_tosdialogbehavior() const {
const ::enterprise_management::IntegerPolicyProto* p = tosdialogbehavior_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::IntegerPolicyProto&>(
::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::tosdialogbehavior() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.TosDialogBehavior)
return _internal_tosdialogbehavior();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_tosdialogbehavior(
::enterprise_management::IntegerPolicyProto* tosdialogbehavior) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(tosdialogbehavior_);
}
tosdialogbehavior_ = tosdialogbehavior;
if (tosdialogbehavior) {
_has_bits_[3] |= 0x01000000u;
} else {
_has_bits_[3] &= ~0x01000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.TosDialogBehavior)
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_tosdialogbehavior() {
_has_bits_[3] &= ~0x01000000u;
::enterprise_management::IntegerPolicyProto* temp = tosdialogbehavior_;
tosdialogbehavior_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::unsafe_arena_release_tosdialogbehavior() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.TosDialogBehavior)
_has_bits_[3] &= ~0x01000000u;
::enterprise_management::IntegerPolicyProto* temp = tosdialogbehavior_;
tosdialogbehavior_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::_internal_mutable_tosdialogbehavior() {
_has_bits_[3] |= 0x01000000u;
if (tosdialogbehavior_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaForAllocation());
tosdialogbehavior_ = p;
}
return tosdialogbehavior_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_tosdialogbehavior() {
::enterprise_management::IntegerPolicyProto* _msg = _internal_mutable_tosdialogbehavior();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.TosDialogBehavior)
return _msg;
}
inline void CloudPolicySettings::set_allocated_tosdialogbehavior(::enterprise_management::IntegerPolicyProto* tosdialogbehavior) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(tosdialogbehavior_);
}
if (tosdialogbehavior) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(tosdialogbehavior));
if (message_arena != submessage_arena) {
tosdialogbehavior = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, tosdialogbehavior, submessage_arena);
}
_has_bits_[3] |= 0x01000000u;
} else {
_has_bits_[3] &= ~0x01000000u;
}
tosdialogbehavior_ = tosdialogbehavior;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.TosDialogBehavior)
}

// optional .enterprise_management.StringPolicyProto BrowsingDataLifetime = 793;
inline bool CloudPolicySettings::_internal_has_browsingdatalifetime() const {
bool value = (_has_bits_[3] & 0x00800000u) != 0;
PROTOBUF_ASSUME(!value || browsingdatalifetime_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_browsingdatalifetime() const {
return _internal_has_browsingdatalifetime();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_browsingdatalifetime() const {
const ::enterprise_management::StringPolicyProto* p = browsingdatalifetime_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::browsingdatalifetime() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BrowsingDataLifetime)
return _internal_browsingdatalifetime();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_browsingdatalifetime(
::enterprise_management::StringPolicyProto* browsingdatalifetime) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(browsingdatalifetime_);
}
browsingdatalifetime_ = browsingdatalifetime;
if (browsingdatalifetime) {
_has_bits_[3] |= 0x00800000u;
} else {
_has_bits_[3] &= ~0x00800000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.BrowsingDataLifetime)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_browsingdatalifetime() {
_has_bits_[3] &= ~0x00800000u;
::enterprise_management::StringPolicyProto* temp = browsingdatalifetime_;
browsingdatalifetime_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_browsingdatalifetime() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BrowsingDataLifetime)
_has_bits_[3] &= ~0x00800000u;
::enterprise_management::StringPolicyProto* temp = browsingdatalifetime_;
browsingdatalifetime_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_browsingdatalifetime() {
_has_bits_[3] |= 0x00800000u;
if (browsingdatalifetime_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
browsingdatalifetime_ = p;
}
return browsingdatalifetime_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_browsingdatalifetime() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_browsingdatalifetime();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BrowsingDataLifetime)
return _msg;
}
inline void CloudPolicySettings::set_allocated_browsingdatalifetime(::enterprise_management::StringPolicyProto* browsingdatalifetime) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(browsingdatalifetime_);
}
if (browsingdatalifetime) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(browsingdatalifetime));
if (message_arena != submessage_arena) {
browsingdatalifetime = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, browsingdatalifetime, submessage_arena);
}
_has_bits_[3] |= 0x00800000u;
} else {
_has_bits_[3] &= ~0x00800000u;
}
browsingdatalifetime_ = browsingdatalifetime;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BrowsingDataLifetime)
}

// optional .enterprise_management.BooleanPolicyProto WebXRImmersiveArEnabled = 822;
inline bool CloudPolicySettings::_internal_has_webxrimmersivearenabled() const {
bool value = (_has_bits_[3] & 0x04000000u) != 0;
PROTOBUF_ASSUME(!value || webxrimmersivearenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_webxrimmersivearenabled() const {
return _internal_has_webxrimmersivearenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_webxrimmersivearenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = webxrimmersivearenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::webxrimmersivearenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebXRImmersiveArEnabled)
return _internal_webxrimmersivearenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_webxrimmersivearenabled(
::enterprise_management::BooleanPolicyProto* webxrimmersivearenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(webxrimmersivearenabled_);
}
webxrimmersivearenabled_ = webxrimmersivearenabled;
if (webxrimmersivearenabled) {
_has_bits_[3] |= 0x04000000u;
} else {
_has_bits_[3] &= ~0x04000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.WebXRImmersiveArEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_webxrimmersivearenabled() {
_has_bits_[3] &= ~0x04000000u;
::enterprise_management::BooleanPolicyProto* temp = webxrimmersivearenabled_;
webxrimmersivearenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_webxrimmersivearenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebXRImmersiveArEnabled)
_has_bits_[3] &= ~0x04000000u;
::enterprise_management::BooleanPolicyProto* temp = webxrimmersivearenabled_;
webxrimmersivearenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_webxrimmersivearenabled() {
_has_bits_[3] |= 0x04000000u;
if (webxrimmersivearenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
webxrimmersivearenabled_ = p;
}
return webxrimmersivearenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_webxrimmersivearenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_webxrimmersivearenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebXRImmersiveArEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_webxrimmersivearenabled(::enterprise_management::BooleanPolicyProto* webxrimmersivearenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(webxrimmersivearenabled_);
}
if (webxrimmersivearenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(webxrimmersivearenabled));
if (message_arena != submessage_arena) {
webxrimmersivearenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, webxrimmersivearenabled, submessage_arena);
}
_has_bits_[3] |= 0x04000000u;
} else {
_has_bits_[3] &= ~0x04000000u;
}
webxrimmersivearenabled_ = webxrimmersivearenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebXRImmersiveArEnabled)
}

// optional .enterprise_management.BooleanPolicyProto SuppressDifferentOriginSubframeDialogs = 831;
inline bool CloudPolicySettings::_internal_has_suppressdifferentoriginsubframedialogs() const {
bool value = (_has_bits_[3] & 0x08000000u) != 0;
PROTOBUF_ASSUME(!value || suppressdifferentoriginsubframedialogs_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_suppressdifferentoriginsubframedialogs() const {
return _internal_has_suppressdifferentoriginsubframedialogs();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_suppressdifferentoriginsubframedialogs() const {
const ::enterprise_management::BooleanPolicyProto* p = suppressdifferentoriginsubframedialogs_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::suppressdifferentoriginsubframedialogs() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SuppressDifferentOriginSubframeDialogs)
return _internal_suppressdifferentoriginsubframedialogs();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_suppressdifferentoriginsubframedialogs(
::enterprise_management::BooleanPolicyProto* suppressdifferentoriginsubframedialogs) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(suppressdifferentoriginsubframedialogs_);
}
suppressdifferentoriginsubframedialogs_ = suppressdifferentoriginsubframedialogs;
if (suppressdifferentoriginsubframedialogs) {
_has_bits_[3] |= 0x08000000u;
} else {
_has_bits_[3] &= ~0x08000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.SuppressDifferentOriginSubframeDialogs)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_suppressdifferentoriginsubframedialogs() {
_has_bits_[3] &= ~0x08000000u;
::enterprise_management::BooleanPolicyProto* temp = suppressdifferentoriginsubframedialogs_;
suppressdifferentoriginsubframedialogs_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_suppressdifferentoriginsubframedialogs() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SuppressDifferentOriginSubframeDialogs)
_has_bits_[3] &= ~0x08000000u;
::enterprise_management::BooleanPolicyProto* temp = suppressdifferentoriginsubframedialogs_;
suppressdifferentoriginsubframedialogs_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_suppressdifferentoriginsubframedialogs() {
_has_bits_[3] |= 0x08000000u;
if (suppressdifferentoriginsubframedialogs_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
suppressdifferentoriginsubframedialogs_ = p;
}
return suppressdifferentoriginsubframedialogs_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_suppressdifferentoriginsubframedialogs() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_suppressdifferentoriginsubframedialogs();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SuppressDifferentOriginSubframeDialogs)
return _msg;
}
inline void CloudPolicySettings::set_allocated_suppressdifferentoriginsubframedialogs(::enterprise_management::BooleanPolicyProto* suppressdifferentoriginsubframedialogs) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(suppressdifferentoriginsubframedialogs_);
}
if (suppressdifferentoriginsubframedialogs) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(suppressdifferentoriginsubframedialogs));
if (message_arena != submessage_arena) {
suppressdifferentoriginsubframedialogs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, suppressdifferentoriginsubframedialogs, submessage_arena);
}
_has_bits_[3] |= 0x08000000u;
} else {
_has_bits_[3] &= ~0x08000000u;
}
suppressdifferentoriginsubframedialogs_ = suppressdifferentoriginsubframedialogs;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SuppressDifferentOriginSubframeDialogs)
}

// optional .enterprise_management.StringListPolicyProto ExplicitlyAllowedNetworkPorts = 851;
inline bool CloudPolicySettings::_internal_has_explicitlyallowednetworkports() const {
bool value = (_has_bits_[3] & 0x20000000u) != 0;
PROTOBUF_ASSUME(!value || explicitlyallowednetworkports_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_explicitlyallowednetworkports() const {
return _internal_has_explicitlyallowednetworkports();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_explicitlyallowednetworkports() const {
const ::enterprise_management::StringListPolicyProto* p = explicitlyallowednetworkports_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::explicitlyallowednetworkports() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ExplicitlyAllowedNetworkPorts)
return _internal_explicitlyallowednetworkports();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_explicitlyallowednetworkports(
::enterprise_management::StringListPolicyProto* explicitlyallowednetworkports) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(explicitlyallowednetworkports_);
}
explicitlyallowednetworkports_ = explicitlyallowednetworkports;
if (explicitlyallowednetworkports) {
_has_bits_[3] |= 0x20000000u;
} else {
_has_bits_[3] &= ~0x20000000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.ExplicitlyAllowedNetworkPorts)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_explicitlyallowednetworkports() {
_has_bits_[3] &= ~0x20000000u;
::enterprise_management::StringListPolicyProto* temp = explicitlyallowednetworkports_;
explicitlyallowednetworkports_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_explicitlyallowednetworkports() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ExplicitlyAllowedNetworkPorts)
_has_bits_[3] &= ~0x20000000u;
::enterprise_management::StringListPolicyProto* temp = explicitlyallowednetworkports_;
explicitlyallowednetworkports_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_explicitlyallowednetworkports() {
_has_bits_[3] |= 0x20000000u;
if (explicitlyallowednetworkports_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
explicitlyallowednetworkports_ = p;
}
return explicitlyallowednetworkports_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_explicitlyallowednetworkports() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_explicitlyallowednetworkports();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ExplicitlyAllowedNetworkPorts)
return _msg;
}
inline void CloudPolicySettings::set_allocated_explicitlyallowednetworkports(::enterprise_management::StringListPolicyProto* explicitlyallowednetworkports) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(explicitlyallowednetworkports_);
}
if (explicitlyallowednetworkports) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(explicitlyallowednetworkports));
if (message_arena != submessage_arena) {
explicitlyallowednetworkports = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, explicitlyallowednetworkports, submessage_arena);
}
_has_bits_[3] |= 0x20000000u;
} else {
_has_bits_[3] &= ~0x20000000u;
}
explicitlyallowednetworkports_ = explicitlyallowednetworkports;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ExplicitlyAllowedNetworkPorts)
}

// optional .enterprise_management.IntegerPolicyProto DefaultJavaScriptJitSetting = 869;
inline bool CloudPolicySettings::_internal_has_defaultjavascriptjitsetting() const {
bool value = (_has_bits_[4] & 0x00000002u) != 0;
PROTOBUF_ASSUME(!value || defaultjavascriptjitsetting_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_defaultjavascriptjitsetting() const {
return _internal_has_defaultjavascriptjitsetting();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::_internal_defaultjavascriptjitsetting() const {
const ::enterprise_management::IntegerPolicyProto* p = defaultjavascriptjitsetting_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::IntegerPolicyProto&>(
::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultjavascriptjitsetting() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultJavaScriptJitSetting)
return _internal_defaultjavascriptjitsetting();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_defaultjavascriptjitsetting(
::enterprise_management::IntegerPolicyProto* defaultjavascriptjitsetting) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultjavascriptjitsetting_);
}
defaultjavascriptjitsetting_ = defaultjavascriptjitsetting;
if (defaultjavascriptjitsetting) {
_has_bits_[4] |= 0x00000002u;
} else {
_has_bits_[4] &= ~0x00000002u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.DefaultJavaScriptJitSetting)
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultjavascriptjitsetting() {
_has_bits_[4] &= ~0x00000002u;
::enterprise_management::IntegerPolicyProto* temp = defaultjavascriptjitsetting_;
defaultjavascriptjitsetting_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::unsafe_arena_release_defaultjavascriptjitsetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultJavaScriptJitSetting)
_has_bits_[4] &= ~0x00000002u;
::enterprise_management::IntegerPolicyProto* temp = defaultjavascriptjitsetting_;
defaultjavascriptjitsetting_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::_internal_mutable_defaultjavascriptjitsetting() {
_has_bits_[4] |= 0x00000002u;
if (defaultjavascriptjitsetting_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaForAllocation());
defaultjavascriptjitsetting_ = p;
}
return defaultjavascriptjitsetting_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultjavascriptjitsetting() {
::enterprise_management::IntegerPolicyProto* _msg = _internal_mutable_defaultjavascriptjitsetting();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultJavaScriptJitSetting)
return _msg;
}
inline void CloudPolicySettings::set_allocated_defaultjavascriptjitsetting(::enterprise_management::IntegerPolicyProto* defaultjavascriptjitsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultjavascriptjitsetting_);
}
if (defaultjavascriptjitsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultjavascriptjitsetting));
if (message_arena != submessage_arena) {
defaultjavascriptjitsetting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultjavascriptjitsetting, submessage_arena);
}
_has_bits_[4] |= 0x00000002u;
} else {
_has_bits_[4] &= ~0x00000002u;
}
defaultjavascriptjitsetting_ = defaultjavascriptjitsetting;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultJavaScriptJitSetting)
}

// optional .enterprise_management.StringListPolicyProto JavaScriptJitAllowedForSites = 870;
inline bool CloudPolicySettings::_internal_has_javascriptjitallowedforsites() const {
bool value = (_has_bits_[4] & 0x00000004u) != 0;
PROTOBUF_ASSUME(!value || javascriptjitallowedforsites_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_javascriptjitallowedforsites() const {
return _internal_has_javascriptjitallowedforsites();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_javascriptjitallowedforsites() const {
const ::enterprise_management::StringListPolicyProto* p = javascriptjitallowedforsites_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::javascriptjitallowedforsites() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.JavaScriptJitAllowedForSites)
return _internal_javascriptjitallowedforsites();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_javascriptjitallowedforsites(
::enterprise_management::StringListPolicyProto* javascriptjitallowedforsites) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(javascriptjitallowedforsites_);
}
javascriptjitallowedforsites_ = javascriptjitallowedforsites;
if (javascriptjitallowedforsites) {
_has_bits_[4] |= 0x00000004u;
} else {
_has_bits_[4] &= ~0x00000004u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.JavaScriptJitAllowedForSites)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_javascriptjitallowedforsites() {
_has_bits_[4] &= ~0x00000004u;
::enterprise_management::StringListPolicyProto* temp = javascriptjitallowedforsites_;
javascriptjitallowedforsites_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_javascriptjitallowedforsites() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.JavaScriptJitAllowedForSites)
_has_bits_[4] &= ~0x00000004u;
::enterprise_management::StringListPolicyProto* temp = javascriptjitallowedforsites_;
javascriptjitallowedforsites_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_javascriptjitallowedforsites() {
_has_bits_[4] |= 0x00000004u;
if (javascriptjitallowedforsites_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
javascriptjitallowedforsites_ = p;
}
return javascriptjitallowedforsites_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_javascriptjitallowedforsites() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_javascriptjitallowedforsites();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.JavaScriptJitAllowedForSites)
return _msg;
}
inline void CloudPolicySettings::set_allocated_javascriptjitallowedforsites(::enterprise_management::StringListPolicyProto* javascriptjitallowedforsites) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(javascriptjitallowedforsites_);
}
if (javascriptjitallowedforsites) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(javascriptjitallowedforsites));
if (message_arena != submessage_arena) {
javascriptjitallowedforsites = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, javascriptjitallowedforsites, submessage_arena);
}
_has_bits_[4] |= 0x00000004u;
} else {
_has_bits_[4] &= ~0x00000004u;
}
javascriptjitallowedforsites_ = javascriptjitallowedforsites;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.JavaScriptJitAllowedForSites)
}

// optional .enterprise_management.StringListPolicyProto JavaScriptJitBlockedForSites = 871;
inline bool CloudPolicySettings::_internal_has_javascriptjitblockedforsites() const {
bool value = (_has_bits_[4] & 0x00000008u) != 0;
PROTOBUF_ASSUME(!value || javascriptjitblockedforsites_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_javascriptjitblockedforsites() const {
return _internal_has_javascriptjitblockedforsites();
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::_internal_javascriptjitblockedforsites() const {
const ::enterprise_management::StringListPolicyProto* p = javascriptjitblockedforsites_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringListPolicyProto&>(
::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::javascriptjitblockedforsites() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.JavaScriptJitBlockedForSites)
return _internal_javascriptjitblockedforsites();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_javascriptjitblockedforsites(
::enterprise_management::StringListPolicyProto* javascriptjitblockedforsites) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(javascriptjitblockedforsites_);
}
javascriptjitblockedforsites_ = javascriptjitblockedforsites;
if (javascriptjitblockedforsites) {
_has_bits_[4] |= 0x00000008u;
} else {
_has_bits_[4] &= ~0x00000008u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.JavaScriptJitBlockedForSites)
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_javascriptjitblockedforsites() {
_has_bits_[4] &= ~0x00000008u;
::enterprise_management::StringListPolicyProto* temp = javascriptjitblockedforsites_;
javascriptjitblockedforsites_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::unsafe_arena_release_javascriptjitblockedforsites() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.JavaScriptJitBlockedForSites)
_has_bits_[4] &= ~0x00000008u;
::enterprise_management::StringListPolicyProto* temp = javascriptjitblockedforsites_;
javascriptjitblockedforsites_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::_internal_mutable_javascriptjitblockedforsites() {
_has_bits_[4] |= 0x00000008u;
if (javascriptjitblockedforsites_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaForAllocation());
javascriptjitblockedforsites_ = p;
}
return javascriptjitblockedforsites_;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_javascriptjitblockedforsites() {
::enterprise_management::StringListPolicyProto* _msg = _internal_mutable_javascriptjitblockedforsites();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.JavaScriptJitBlockedForSites)
return _msg;
}
inline void CloudPolicySettings::set_allocated_javascriptjitblockedforsites(::enterprise_management::StringListPolicyProto* javascriptjitblockedforsites) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(javascriptjitblockedforsites_);
}
if (javascriptjitblockedforsites) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(javascriptjitblockedforsites));
if (message_arena != submessage_arena) {
javascriptjitblockedforsites = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, javascriptjitblockedforsites, submessage_arena);
}
_has_bits_[4] |= 0x00000008u;
} else {
_has_bits_[4] &= ~0x00000008u;
}
javascriptjitblockedforsites_ = javascriptjitblockedforsites;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.JavaScriptJitBlockedForSites)
}

// optional .enterprise_management.StringPolicyProto HttpsOnlyMode = 872;
inline bool CloudPolicySettings::_internal_has_httpsonlymode() const {
bool value = (_has_bits_[4] & 0x00000010u) != 0;
PROTOBUF_ASSUME(!value || httpsonlymode_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_httpsonlymode() const {
return _internal_has_httpsonlymode();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_httpsonlymode() const {
const ::enterprise_management::StringPolicyProto* p = httpsonlymode_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::httpsonlymode() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.HttpsOnlyMode)
return _internal_httpsonlymode();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_httpsonlymode(
::enterprise_management::StringPolicyProto* httpsonlymode) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(httpsonlymode_);
}
httpsonlymode_ = httpsonlymode;
if (httpsonlymode) {
_has_bits_[4] |= 0x00000010u;
} else {
_has_bits_[4] &= ~0x00000010u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.HttpsOnlyMode)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_httpsonlymode() {
_has_bits_[4] &= ~0x00000010u;
::enterprise_management::StringPolicyProto* temp = httpsonlymode_;
httpsonlymode_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_httpsonlymode() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.HttpsOnlyMode)
_has_bits_[4] &= ~0x00000010u;
::enterprise_management::StringPolicyProto* temp = httpsonlymode_;
httpsonlymode_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_httpsonlymode() {
_has_bits_[4] |= 0x00000010u;
if (httpsonlymode_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
httpsonlymode_ = p;
}
return httpsonlymode_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_httpsonlymode() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_httpsonlymode();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.HttpsOnlyMode)
return _msg;
}
inline void CloudPolicySettings::set_allocated_httpsonlymode(::enterprise_management::StringPolicyProto* httpsonlymode) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(httpsonlymode_);
}
if (httpsonlymode) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(httpsonlymode));
if (message_arena != submessage_arena) {
httpsonlymode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, httpsonlymode, submessage_arena);
}
_has_bits_[4] |= 0x00000010u;
} else {
_has_bits_[4] &= ~0x00000010u;
}
httpsonlymode_ = httpsonlymode;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.HttpsOnlyMode)
}

// optional .enterprise_management.BooleanPolicyProto CORSNonWildcardRequestHeadersSupport = 923;
inline bool CloudPolicySettings::_internal_has_corsnonwildcardrequestheaderssupport() const {
bool value = (_has_bits_[4] & 0x00000040u) != 0;
PROTOBUF_ASSUME(!value || corsnonwildcardrequestheaderssupport_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_corsnonwildcardrequestheaderssupport() const {
return _internal_has_corsnonwildcardrequestheaderssupport();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_corsnonwildcardrequestheaderssupport() const {
const ::enterprise_management::BooleanPolicyProto* p = corsnonwildcardrequestheaderssupport_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::corsnonwildcardrequestheaderssupport() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CORSNonWildcardRequestHeadersSupport)
return _internal_corsnonwildcardrequestheaderssupport();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_corsnonwildcardrequestheaderssupport(
::enterprise_management::BooleanPolicyProto* corsnonwildcardrequestheaderssupport) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(corsnonwildcardrequestheaderssupport_);
}
corsnonwildcardrequestheaderssupport_ = corsnonwildcardrequestheaderssupport;
if (corsnonwildcardrequestheaderssupport) {
_has_bits_[4] |= 0x00000040u;
} else {
_has_bits_[4] &= ~0x00000040u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.CORSNonWildcardRequestHeadersSupport)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_corsnonwildcardrequestheaderssupport() {
_has_bits_[4] &= ~0x00000040u;
::enterprise_management::BooleanPolicyProto* temp = corsnonwildcardrequestheaderssupport_;
corsnonwildcardrequestheaderssupport_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_corsnonwildcardrequestheaderssupport() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CORSNonWildcardRequestHeadersSupport)
_has_bits_[4] &= ~0x00000040u;
::enterprise_management::BooleanPolicyProto* temp = corsnonwildcardrequestheaderssupport_;
corsnonwildcardrequestheaderssupport_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_corsnonwildcardrequestheaderssupport() {
_has_bits_[4] |= 0x00000040u;
if (corsnonwildcardrequestheaderssupport_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
corsnonwildcardrequestheaderssupport_ = p;
}
return corsnonwildcardrequestheaderssupport_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_corsnonwildcardrequestheaderssupport() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_corsnonwildcardrequestheaderssupport();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CORSNonWildcardRequestHeadersSupport)
return _msg;
}
inline void CloudPolicySettings::set_allocated_corsnonwildcardrequestheaderssupport(::enterprise_management::BooleanPolicyProto* corsnonwildcardrequestheaderssupport) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(corsnonwildcardrequestheaderssupport_);
}
if (corsnonwildcardrequestheaderssupport) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(corsnonwildcardrequestheaderssupport));
if (message_arena != submessage_arena) {
corsnonwildcardrequestheaderssupport = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, corsnonwildcardrequestheaderssupport, submessage_arena);
}
_has_bits_[4] |= 0x00000040u;
} else {
_has_bits_[4] &= ~0x00000040u;
}
corsnonwildcardrequestheaderssupport_ = corsnonwildcardrequestheaderssupport;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CORSNonWildcardRequestHeadersSupport)
}

// optional .enterprise_management.IntegerPolicyProto UserAgentReduction = 934;
inline bool CloudPolicySettings::_internal_has_useragentreduction() const {
bool value = (_has_bits_[4] & 0x00000100u) != 0;
PROTOBUF_ASSUME(!value || useragentreduction_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_useragentreduction() const {
return _internal_has_useragentreduction();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::_internal_useragentreduction() const {
const ::enterprise_management::IntegerPolicyProto* p = useragentreduction_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::IntegerPolicyProto&>(
::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::useragentreduction() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.UserAgentReduction)
return _internal_useragentreduction();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_useragentreduction(
::enterprise_management::IntegerPolicyProto* useragentreduction) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(useragentreduction_);
}
useragentreduction_ = useragentreduction;
if (useragentreduction) {
_has_bits_[4] |= 0x00000100u;
} else {
_has_bits_[4] &= ~0x00000100u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.UserAgentReduction)
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_useragentreduction() {
_has_bits_[4] &= ~0x00000100u;
::enterprise_management::IntegerPolicyProto* temp = useragentreduction_;
useragentreduction_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::unsafe_arena_release_useragentreduction() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.UserAgentReduction)
_has_bits_[4] &= ~0x00000100u;
::enterprise_management::IntegerPolicyProto* temp = useragentreduction_;
useragentreduction_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::_internal_mutable_useragentreduction() {
_has_bits_[4] |= 0x00000100u;
if (useragentreduction_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaForAllocation());
useragentreduction_ = p;
}
return useragentreduction_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_useragentreduction() {
::enterprise_management::IntegerPolicyProto* _msg = _internal_mutable_useragentreduction();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.UserAgentReduction)
return _msg;
}
inline void CloudPolicySettings::set_allocated_useragentreduction(::enterprise_management::IntegerPolicyProto* useragentreduction) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(useragentreduction_);
}
if (useragentreduction) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(useragentreduction));
if (message_arena != submessage_arena) {
useragentreduction = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, useragentreduction, submessage_arena);
}
_has_bits_[4] |= 0x00000100u;
} else {
_has_bits_[4] &= ~0x00000100u;
}
useragentreduction_ = useragentreduction;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.UserAgentReduction)
}

// optional .enterprise_management.IntegerPolicyProto ForceMajorVersionToMinorPositionInUserAgent = 951;
inline bool CloudPolicySettings::_internal_has_forcemajorversiontominorpositioninuseragent() const {
bool value = (_has_bits_[4] & 0x00000800u) != 0;
PROTOBUF_ASSUME(!value || forcemajorversiontominorpositioninuseragent_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_forcemajorversiontominorpositioninuseragent() const {
return _internal_has_forcemajorversiontominorpositioninuseragent();
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::_internal_forcemajorversiontominorpositioninuseragent() const {
const ::enterprise_management::IntegerPolicyProto* p = forcemajorversiontominorpositioninuseragent_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::IntegerPolicyProto&>(
::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::forcemajorversiontominorpositioninuseragent() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceMajorVersionToMinorPositionInUserAgent)
return _internal_forcemajorversiontominorpositioninuseragent();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_forcemajorversiontominorpositioninuseragent(
::enterprise_management::IntegerPolicyProto* forcemajorversiontominorpositioninuseragent) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(forcemajorversiontominorpositioninuseragent_);
}
forcemajorversiontominorpositioninuseragent_ = forcemajorversiontominorpositioninuseragent;
if (forcemajorversiontominorpositioninuseragent) {
_has_bits_[4] |= 0x00000800u;
} else {
_has_bits_[4] &= ~0x00000800u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.ForceMajorVersionToMinorPositionInUserAgent)
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_forcemajorversiontominorpositioninuseragent() {
_has_bits_[4] &= ~0x00000800u;
::enterprise_management::IntegerPolicyProto* temp = forcemajorversiontominorpositioninuseragent_;
forcemajorversiontominorpositioninuseragent_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::unsafe_arena_release_forcemajorversiontominorpositioninuseragent() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceMajorVersionToMinorPositionInUserAgent)
_has_bits_[4] &= ~0x00000800u;
::enterprise_management::IntegerPolicyProto* temp = forcemajorversiontominorpositioninuseragent_;
forcemajorversiontominorpositioninuseragent_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::_internal_mutable_forcemajorversiontominorpositioninuseragent() {
_has_bits_[4] |= 0x00000800u;
if (forcemajorversiontominorpositioninuseragent_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaForAllocation());
forcemajorversiontominorpositioninuseragent_ = p;
}
return forcemajorversiontominorpositioninuseragent_;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_forcemajorversiontominorpositioninuseragent() {
::enterprise_management::IntegerPolicyProto* _msg = _internal_mutable_forcemajorversiontominorpositioninuseragent();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceMajorVersionToMinorPositionInUserAgent)
return _msg;
}
inline void CloudPolicySettings::set_allocated_forcemajorversiontominorpositioninuseragent(::enterprise_management::IntegerPolicyProto* forcemajorversiontominorpositioninuseragent) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(forcemajorversiontominorpositioninuseragent_);
}
if (forcemajorversiontominorpositioninuseragent) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(forcemajorversiontominorpositioninuseragent));
if (message_arena != submessage_arena) {
forcemajorversiontominorpositioninuseragent = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, forcemajorversiontominorpositioninuseragent, submessage_arena);
}
_has_bits_[4] |= 0x00000800u;
} else {
_has_bits_[4] &= ~0x00000800u;
}
forcemajorversiontominorpositioninuseragent_ = forcemajorversiontominorpositioninuseragent;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceMajorVersionToMinorPositionInUserAgent)
}

// optional .enterprise_management.BooleanPolicyProto FirstPartySetsEnabled = 950;
inline bool CloudPolicySettings::_internal_has_firstpartysetsenabled() const {
bool value = (_has_bits_[4] & 0x00000400u) != 0;
PROTOBUF_ASSUME(!value || firstpartysetsenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_firstpartysetsenabled() const {
return _internal_has_firstpartysetsenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_firstpartysetsenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = firstpartysetsenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::firstpartysetsenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.FirstPartySetsEnabled)
return _internal_firstpartysetsenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_firstpartysetsenabled(
::enterprise_management::BooleanPolicyProto* firstpartysetsenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(firstpartysetsenabled_);
}
firstpartysetsenabled_ = firstpartysetsenabled;
if (firstpartysetsenabled) {
_has_bits_[4] |= 0x00000400u;
} else {
_has_bits_[4] &= ~0x00000400u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.FirstPartySetsEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_firstpartysetsenabled() {
_has_bits_[4] &= ~0x00000400u;
::enterprise_management::BooleanPolicyProto* temp = firstpartysetsenabled_;
firstpartysetsenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_firstpartysetsenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.FirstPartySetsEnabled)
_has_bits_[4] &= ~0x00000400u;
::enterprise_management::BooleanPolicyProto* temp = firstpartysetsenabled_;
firstpartysetsenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_firstpartysetsenabled() {
_has_bits_[4] |= 0x00000400u;
if (firstpartysetsenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
firstpartysetsenabled_ = p;
}
return firstpartysetsenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_firstpartysetsenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_firstpartysetsenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.FirstPartySetsEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_firstpartysetsenabled(::enterprise_management::BooleanPolicyProto* firstpartysetsenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(firstpartysetsenabled_);
}
if (firstpartysetsenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(firstpartysetsenabled));
if (message_arena != submessage_arena) {
firstpartysetsenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, firstpartysetsenabled, submessage_arena);
}
_has_bits_[4] |= 0x00000400u;
} else {
_has_bits_[4] &= ~0x00000400u;
}
firstpartysetsenabled_ = firstpartysetsenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.FirstPartySetsEnabled)
}

// optional .enterprise_management.StringPolicyProto FirstPartySetsOverrides = 971;
inline bool CloudPolicySettings::_internal_has_firstpartysetsoverrides() const {
bool value = (_has_bits_[4] & 0x00010000u) != 0;
PROTOBUF_ASSUME(!value || firstpartysetsoverrides_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_firstpartysetsoverrides() const {
return _internal_has_firstpartysetsoverrides();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_firstpartysetsoverrides() const {
const ::enterprise_management::StringPolicyProto* p = firstpartysetsoverrides_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::firstpartysetsoverrides() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.FirstPartySetsOverrides)
return _internal_firstpartysetsoverrides();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_firstpartysetsoverrides(
::enterprise_management::StringPolicyProto* firstpartysetsoverrides) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(firstpartysetsoverrides_);
}
firstpartysetsoverrides_ = firstpartysetsoverrides;
if (firstpartysetsoverrides) {
_has_bits_[4] |= 0x00010000u;
} else {
_has_bits_[4] &= ~0x00010000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.FirstPartySetsOverrides)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_firstpartysetsoverrides() {
_has_bits_[4] &= ~0x00010000u;
::enterprise_management::StringPolicyProto* temp = firstpartysetsoverrides_;
firstpartysetsoverrides_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_firstpartysetsoverrides() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.FirstPartySetsOverrides)
_has_bits_[4] &= ~0x00010000u;
::enterprise_management::StringPolicyProto* temp = firstpartysetsoverrides_;
firstpartysetsoverrides_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_firstpartysetsoverrides() {
_has_bits_[4] |= 0x00010000u;
if (firstpartysetsoverrides_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
firstpartysetsoverrides_ = p;
}
return firstpartysetsoverrides_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_firstpartysetsoverrides() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_firstpartysetsoverrides();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.FirstPartySetsOverrides)
return _msg;
}
inline void CloudPolicySettings::set_allocated_firstpartysetsoverrides(::enterprise_management::StringPolicyProto* firstpartysetsoverrides) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(firstpartysetsoverrides_);
}
if (firstpartysetsoverrides) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(firstpartysetsoverrides));
if (message_arena != submessage_arena) {
firstpartysetsoverrides = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, firstpartysetsoverrides, submessage_arena);
}
_has_bits_[4] |= 0x00010000u;
} else {
_has_bits_[4] &= ~0x00010000u;
}
firstpartysetsoverrides_ = firstpartysetsoverrides;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.FirstPartySetsOverrides)
}

// optional .enterprise_management.BooleanPolicyProto WebSQLAccess = 968;
inline bool CloudPolicySettings::_internal_has_websqlaccess() const {
bool value = (_has_bits_[4] & 0x00004000u) != 0;
PROTOBUF_ASSUME(!value || websqlaccess_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_websqlaccess() const {
return _internal_has_websqlaccess();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_websqlaccess() const {
const ::enterprise_management::BooleanPolicyProto* p = websqlaccess_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::websqlaccess() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebSQLAccess)
return _internal_websqlaccess();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_websqlaccess(
::enterprise_management::BooleanPolicyProto* websqlaccess) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(websqlaccess_);
}
websqlaccess_ = websqlaccess;
if (websqlaccess) {
_has_bits_[4] |= 0x00004000u;
} else {
_has_bits_[4] &= ~0x00004000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.WebSQLAccess)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_websqlaccess() {
_has_bits_[4] &= ~0x00004000u;
::enterprise_management::BooleanPolicyProto* temp = websqlaccess_;
websqlaccess_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_websqlaccess() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebSQLAccess)
_has_bits_[4] &= ~0x00004000u;
::enterprise_management::BooleanPolicyProto* temp = websqlaccess_;
websqlaccess_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_websqlaccess() {
_has_bits_[4] |= 0x00004000u;
if (websqlaccess_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
websqlaccess_ = p;
}
return websqlaccess_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_websqlaccess() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_websqlaccess();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebSQLAccess)
return _msg;
}
inline void CloudPolicySettings::set_allocated_websqlaccess(::enterprise_management::BooleanPolicyProto* websqlaccess) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(websqlaccess_);
}
if (websqlaccess) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(websqlaccess));
if (message_arena != submessage_arena) {
websqlaccess = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, websqlaccess, submessage_arena);
}
_has_bits_[4] |= 0x00004000u;
} else {
_has_bits_[4] &= ~0x00004000u;
}
websqlaccess_ = websqlaccess;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebSQLAccess)
}

// optional .enterprise_management.BooleanPolicyProto WebSQLNonSecureContextEnabled = 995;
inline bool CloudPolicySettings::_internal_has_websqlnonsecurecontextenabled() const {
bool value = (_has_bits_[4] & 0x00200000u) != 0;
PROTOBUF_ASSUME(!value || websqlnonsecurecontextenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_websqlnonsecurecontextenabled() const {
return _internal_has_websqlnonsecurecontextenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_websqlnonsecurecontextenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = websqlnonsecurecontextenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::websqlnonsecurecontextenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebSQLNonSecureContextEnabled)
return _internal_websqlnonsecurecontextenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_websqlnonsecurecontextenabled(
::enterprise_management::BooleanPolicyProto* websqlnonsecurecontextenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(websqlnonsecurecontextenabled_);
}
websqlnonsecurecontextenabled_ = websqlnonsecurecontextenabled;
if (websqlnonsecurecontextenabled) {
_has_bits_[4] |= 0x00200000u;
} else {
_has_bits_[4] &= ~0x00200000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.WebSQLNonSecureContextEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_websqlnonsecurecontextenabled() {
_has_bits_[4] &= ~0x00200000u;
::enterprise_management::BooleanPolicyProto* temp = websqlnonsecurecontextenabled_;
websqlnonsecurecontextenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_websqlnonsecurecontextenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebSQLNonSecureContextEnabled)
_has_bits_[4] &= ~0x00200000u;
::enterprise_management::BooleanPolicyProto* temp = websqlnonsecurecontextenabled_;
websqlnonsecurecontextenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_websqlnonsecurecontextenabled() {
_has_bits_[4] |= 0x00200000u;
if (websqlnonsecurecontextenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
websqlnonsecurecontextenabled_ = p;
}
return websqlnonsecurecontextenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_websqlnonsecurecontextenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_websqlnonsecurecontextenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebSQLNonSecureContextEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_websqlnonsecurecontextenabled(::enterprise_management::BooleanPolicyProto* websqlnonsecurecontextenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(websqlnonsecurecontextenabled_);
}
if (websqlnonsecurecontextenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(websqlnonsecurecontextenabled));
if (message_arena != submessage_arena) {
websqlnonsecurecontextenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, websqlnonsecurecontextenabled, submessage_arena);
}
_has_bits_[4] |= 0x00200000u;
} else {
_has_bits_[4] &= ~0x00200000u;
}
websqlnonsecurecontextenabled_ = websqlnonsecurecontextenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebSQLNonSecureContextEnabled)
}

// optional .enterprise_management.BooleanPolicyProto SetTimeoutWithout1MsClampEnabled = 969;
inline bool CloudPolicySettings::_internal_has_settimeoutwithout1msclampenabled() const {
bool value = (_has_bits_[4] & 0x00008000u) != 0;
PROTOBUF_ASSUME(!value || settimeoutwithout1msclampenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_settimeoutwithout1msclampenabled() const {
return _internal_has_settimeoutwithout1msclampenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_settimeoutwithout1msclampenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = settimeoutwithout1msclampenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::settimeoutwithout1msclampenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SetTimeoutWithout1MsClampEnabled)
return _internal_settimeoutwithout1msclampenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_settimeoutwithout1msclampenabled(
::enterprise_management::BooleanPolicyProto* settimeoutwithout1msclampenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(settimeoutwithout1msclampenabled_);
}
settimeoutwithout1msclampenabled_ = settimeoutwithout1msclampenabled;
if (settimeoutwithout1msclampenabled) {
_has_bits_[4] |= 0x00008000u;
} else {
_has_bits_[4] &= ~0x00008000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.SetTimeoutWithout1MsClampEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_settimeoutwithout1msclampenabled() {
_has_bits_[4] &= ~0x00008000u;
::enterprise_management::BooleanPolicyProto* temp = settimeoutwithout1msclampenabled_;
settimeoutwithout1msclampenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_settimeoutwithout1msclampenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SetTimeoutWithout1MsClampEnabled)
_has_bits_[4] &= ~0x00008000u;
::enterprise_management::BooleanPolicyProto* temp = settimeoutwithout1msclampenabled_;
settimeoutwithout1msclampenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_settimeoutwithout1msclampenabled() {
_has_bits_[4] |= 0x00008000u;
if (settimeoutwithout1msclampenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
settimeoutwithout1msclampenabled_ = p;
}
return settimeoutwithout1msclampenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_settimeoutwithout1msclampenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_settimeoutwithout1msclampenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SetTimeoutWithout1MsClampEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_settimeoutwithout1msclampenabled(::enterprise_management::BooleanPolicyProto* settimeoutwithout1msclampenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(settimeoutwithout1msclampenabled_);
}
if (settimeoutwithout1msclampenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(settimeoutwithout1msclampenabled));
if (message_arena != submessage_arena) {
settimeoutwithout1msclampenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, settimeoutwithout1msclampenabled, submessage_arena);
}
_has_bits_[4] |= 0x00008000u;
} else {
_has_bits_[4] &= ~0x00008000u;
}
settimeoutwithout1msclampenabled_ = settimeoutwithout1msclampenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SetTimeoutWithout1MsClampEnabled)
}

// optional .enterprise_management.StringPolicyProto EnterpriseAuthenticationAppLinkPolicy = 978;
inline bool CloudPolicySettings::_internal_has_enterpriseauthenticationapplinkpolicy() const {
bool value = (_has_bits_[4] & 0x00020000u) != 0;
PROTOBUF_ASSUME(!value || enterpriseauthenticationapplinkpolicy_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_enterpriseauthenticationapplinkpolicy() const {
return _internal_has_enterpriseauthenticationapplinkpolicy();
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::_internal_enterpriseauthenticationapplinkpolicy() const {
const ::enterprise_management::StringPolicyProto* p = enterpriseauthenticationapplinkpolicy_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::StringPolicyProto&>(
::enterprise_management::_StringPolicyProto_default_instance_);
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::enterpriseauthenticationapplinkpolicy() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnterpriseAuthenticationAppLinkPolicy)
return _internal_enterpriseauthenticationapplinkpolicy();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_enterpriseauthenticationapplinkpolicy(
::enterprise_management::StringPolicyProto* enterpriseauthenticationapplinkpolicy) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(enterpriseauthenticationapplinkpolicy_);
}
enterpriseauthenticationapplinkpolicy_ = enterpriseauthenticationapplinkpolicy;
if (enterpriseauthenticationapplinkpolicy) {
_has_bits_[4] |= 0x00020000u;
} else {
_has_bits_[4] &= ~0x00020000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.EnterpriseAuthenticationAppLinkPolicy)
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_enterpriseauthenticationapplinkpolicy() {
_has_bits_[4] &= ~0x00020000u;
::enterprise_management::StringPolicyProto* temp = enterpriseauthenticationapplinkpolicy_;
enterpriseauthenticationapplinkpolicy_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::unsafe_arena_release_enterpriseauthenticationapplinkpolicy() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnterpriseAuthenticationAppLinkPolicy)
_has_bits_[4] &= ~0x00020000u;
::enterprise_management::StringPolicyProto* temp = enterpriseauthenticationapplinkpolicy_;
enterpriseauthenticationapplinkpolicy_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::_internal_mutable_enterpriseauthenticationapplinkpolicy() {
_has_bits_[4] |= 0x00020000u;
if (enterpriseauthenticationapplinkpolicy_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaForAllocation());
enterpriseauthenticationapplinkpolicy_ = p;
}
return enterpriseauthenticationapplinkpolicy_;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_enterpriseauthenticationapplinkpolicy() {
::enterprise_management::StringPolicyProto* _msg = _internal_mutable_enterpriseauthenticationapplinkpolicy();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnterpriseAuthenticationAppLinkPolicy)
return _msg;
}
inline void CloudPolicySettings::set_allocated_enterpriseauthenticationapplinkpolicy(::enterprise_management::StringPolicyProto* enterpriseauthenticationapplinkpolicy) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(enterpriseauthenticationapplinkpolicy_);
}
if (enterpriseauthenticationapplinkpolicy) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(enterpriseauthenticationapplinkpolicy));
if (message_arena != submessage_arena) {
enterpriseauthenticationapplinkpolicy = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, enterpriseauthenticationapplinkpolicy, submessage_arena);
}
_has_bits_[4] |= 0x00020000u;
} else {
_has_bits_[4] &= ~0x00020000u;
}
enterpriseauthenticationapplinkpolicy_ = enterpriseauthenticationapplinkpolicy;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnterpriseAuthenticationAppLinkPolicy)
}

// optional .enterprise_management.BooleanPolicyProto UnthrottledNestedTimeoutEnabled = 990;
inline bool CloudPolicySettings::_internal_has_unthrottlednestedtimeoutenabled() const {
bool value = (_has_bits_[4] & 0x00080000u) != 0;
PROTOBUF_ASSUME(!value || unthrottlednestedtimeoutenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_unthrottlednestedtimeoutenabled() const {
return _internal_has_unthrottlednestedtimeoutenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_unthrottlednestedtimeoutenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = unthrottlednestedtimeoutenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::unthrottlednestedtimeoutenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.UnthrottledNestedTimeoutEnabled)
return _internal_unthrottlednestedtimeoutenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_unthrottlednestedtimeoutenabled(
::enterprise_management::BooleanPolicyProto* unthrottlednestedtimeoutenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(unthrottlednestedtimeoutenabled_);
}
unthrottlednestedtimeoutenabled_ = unthrottlednestedtimeoutenabled;
if (unthrottlednestedtimeoutenabled) {
_has_bits_[4] |= 0x00080000u;
} else {
_has_bits_[4] &= ~0x00080000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.UnthrottledNestedTimeoutEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_unthrottlednestedtimeoutenabled() {
_has_bits_[4] &= ~0x00080000u;
::enterprise_management::BooleanPolicyProto* temp = unthrottlednestedtimeoutenabled_;
unthrottlednestedtimeoutenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_unthrottlednestedtimeoutenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.UnthrottledNestedTimeoutEnabled)
_has_bits_[4] &= ~0x00080000u;
::enterprise_management::BooleanPolicyProto* temp = unthrottlednestedtimeoutenabled_;
unthrottlednestedtimeoutenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_unthrottlednestedtimeoutenabled() {
_has_bits_[4] |= 0x00080000u;
if (unthrottlednestedtimeoutenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
unthrottlednestedtimeoutenabled_ = p;
}
return unthrottlednestedtimeoutenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_unthrottlednestedtimeoutenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_unthrottlednestedtimeoutenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.UnthrottledNestedTimeoutEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_unthrottlednestedtimeoutenabled(::enterprise_management::BooleanPolicyProto* unthrottlednestedtimeoutenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(unthrottlednestedtimeoutenabled_);
}
if (unthrottlednestedtimeoutenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(unthrottlednestedtimeoutenabled));
if (message_arena != submessage_arena) {
unthrottlednestedtimeoutenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, unthrottlednestedtimeoutenabled, submessage_arena);
}
_has_bits_[4] |= 0x00080000u;
} else {
_has_bits_[4] &= ~0x00080000u;
}
unthrottlednestedtimeoutenabled_ = unthrottlednestedtimeoutenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.UnthrottledNestedTimeoutEnabled)
}

// optional .enterprise_management.BooleanPolicyProto EncryptedClientHelloEnabled = 998;
inline bool CloudPolicySettings::_internal_has_encryptedclienthelloenabled() const {
bool value = (_has_bits_[4] & 0x00400000u) != 0;
PROTOBUF_ASSUME(!value || encryptedclienthelloenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_encryptedclienthelloenabled() const {
return _internal_has_encryptedclienthelloenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_encryptedclienthelloenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = encryptedclienthelloenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::encryptedclienthelloenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EncryptedClientHelloEnabled)
return _internal_encryptedclienthelloenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_encryptedclienthelloenabled(
::enterprise_management::BooleanPolicyProto* encryptedclienthelloenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(encryptedclienthelloenabled_);
}
encryptedclienthelloenabled_ = encryptedclienthelloenabled;
if (encryptedclienthelloenabled) {
_has_bits_[4] |= 0x00400000u;
} else {
_has_bits_[4] &= ~0x00400000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.EncryptedClientHelloEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_encryptedclienthelloenabled() {
_has_bits_[4] &= ~0x00400000u;
::enterprise_management::BooleanPolicyProto* temp = encryptedclienthelloenabled_;
encryptedclienthelloenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_encryptedclienthelloenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EncryptedClientHelloEnabled)
_has_bits_[4] &= ~0x00400000u;
::enterprise_management::BooleanPolicyProto* temp = encryptedclienthelloenabled_;
encryptedclienthelloenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_encryptedclienthelloenabled() {
_has_bits_[4] |= 0x00400000u;
if (encryptedclienthelloenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
encryptedclienthelloenabled_ = p;
}
return encryptedclienthelloenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_encryptedclienthelloenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_encryptedclienthelloenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EncryptedClientHelloEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_encryptedclienthelloenabled(::enterprise_management::BooleanPolicyProto* encryptedclienthelloenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(encryptedclienthelloenabled_);
}
if (encryptedclienthelloenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(encryptedclienthelloenabled));
if (message_arena != submessage_arena) {
encryptedclienthelloenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, encryptedclienthelloenabled, submessage_arena);
}
_has_bits_[4] |= 0x00400000u;
} else {
_has_bits_[4] &= ~0x00400000u;
}
encryptedclienthelloenabled_ = encryptedclienthelloenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EncryptedClientHelloEnabled)
}

// optional .enterprise_management.BooleanPolicyProto PersistentQuotaEnabled = 1004;
inline bool CloudPolicySettings::_internal_has_persistentquotaenabled() const {
bool value = (_has_bits_[4] & 0x00800000u) != 0;
PROTOBUF_ASSUME(!value || persistentquotaenabled_ != nullptr);
return value;
}
inline bool CloudPolicySettings::has_persistentquotaenabled() const {
return _internal_has_persistentquotaenabled();
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::_internal_persistentquotaenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = persistentquotaenabled_;
return p != nullptr ? *p : reinterpret_cast<const ::enterprise_management::BooleanPolicyProto&>(
::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::persistentquotaenabled() const {
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PersistentQuotaEnabled)
return _internal_persistentquotaenabled();
}
inline void CloudPolicySettings::unsafe_arena_set_allocated_persistentquotaenabled(
::enterprise_management::BooleanPolicyProto* persistentquotaenabled) {
if (GetArenaForAllocation() == nullptr) {
delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(persistentquotaenabled_);
}
persistentquotaenabled_ = persistentquotaenabled;
if (persistentquotaenabled) {
_has_bits_[4] |= 0x00800000u;
} else {
_has_bits_[4] &= ~0x00800000u;
}
// @@protoc_insertion_point(field_unsafe_arena_set_allocated:enterprise_management.CloudPolicySettings.PersistentQuotaEnabled)
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_persistentquotaenabled() {
_has_bits_[4] &= ~0x00800000u;
::enterprise_management::BooleanPolicyProto* temp = persistentquotaenabled_;
persistentquotaenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
if (GetArenaForAllocation() != nullptr) {
temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
}
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::unsafe_arena_release_persistentquotaenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PersistentQuotaEnabled)
_has_bits_[4] &= ~0x00800000u;
::enterprise_management::BooleanPolicyProto* temp = persistentquotaenabled_;
persistentquotaenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::_internal_mutable_persistentquotaenabled() {
_has_bits_[4] |= 0x00800000u;
if (persistentquotaenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaForAllocation());
persistentquotaenabled_ = p;
}
return persistentquotaenabled_;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_persistentquotaenabled() {
::enterprise_management::BooleanPolicyProto* _msg = _internal_mutable_persistentquotaenabled();
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PersistentQuotaEnabled)
return _msg;
}
inline void CloudPolicySettings::set_allocated_persistentquotaenabled(::enterprise_management::BooleanPolicyProto* persistentquotaenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(persistentquotaenabled_);
}
if (persistentquotaenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(persistentquotaenabled));
if (message_arena != submessage_arena) {
persistentquotaenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, persistentquotaenabled, submessage_arena);
}
_has_bits_[4] |= 0x00800000u;
} else {
_has_bits_[4] &= ~0x00800000u;
}
persistentquotaenabled_ = persistentquotaenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PersistentQuotaEnabled)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace enterprise_management

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_cloud_5fpolicy_2eproto
