// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cloud_policy.proto

#include "cloud_policy.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace enterprise_management {
PROTOBUF_CONSTEXPR CloudPolicySettings::CloudPolicySettings(
    ::_pbi::ConstantInitialized)
  : homepagelocation_(nullptr)
  , alternateerrorpagesenabled_(nullptr)
  , searchsuggestenabled_(nullptr)
  , javascriptenabled_(nullptr)
  , incognitoenabled_(nullptr)
  , savingbrowserhistorydisabled_(nullptr)
  , printingenabled_(nullptr)
  , safebrowsingenabled_(nullptr)
  , metricsreportingenabled_(nullptr)
  , passwordmanagerenabled_(nullptr)
  , autofillenabled_(nullptr)
  , syncdisabled_(nullptr)
  , proxymode_(nullptr)
  , proxyservermode_(nullptr)
  , proxyserver_(nullptr)
  , proxypacurl_(nullptr)
  , proxybypasslist_(nullptr)
  , authschemes_(nullptr)
  , disableauthnegotiatecnamelookup_(nullptr)
  , blockthirdpartycookies_(nullptr)
  , defaultsearchproviderenabled_(nullptr)
  , defaultsearchprovidername_(nullptr)
  , defaultsearchproviderkeyword_(nullptr)
  , defaultsearchprovidersearchurl_(nullptr)
  , defaultsearchprovidersuggesturl_(nullptr)
  , defaultsearchprovidericonurl_(nullptr)
  , defaultsearchproviderencodings_(nullptr)
  , defaultcookiessetting_(nullptr)
  , defaultjavascriptsetting_(nullptr)
  , defaultpopupssetting_(nullptr)
  , defaultgeolocationsetting_(nullptr)
  , cookiesblockedforurls_(nullptr)
  , cookiessessiononlyforurls_(nullptr)
  , javascriptallowedforurls_(nullptr)
  , javascriptblockedforurls_(nullptr)
  , popupsallowedforurls_(nullptr)
  , popupsblockedforurls_(nullptr)
  , cookiesallowedforurls_(nullptr)
  , translateenabled_(nullptr)
  , editbookmarksenabled_(nullptr)
  , incognitomodeavailability_(nullptr)
  , proxysettings_(nullptr)
  , disablesafebrowsingproceedanyway_(nullptr)
  , defaultsearchprovideralternateurls_(nullptr)
  , forcesafesearch_(nullptr)
  , builtindnsclientenabled_(nullptr)
  , signinallowed_(nullptr)
  , variationsrestrictparameter_(nullptr)
  , managedbookmarks_(nullptr)
  , defaultsearchproviderimageurl_(nullptr)
  , defaultsearchprovidersearchurlpostparams_(nullptr)
  , defaultsearchprovidersuggesturlpostparams_(nullptr)
  , defaultsearchproviderimageurlpostparams_(nullptr)
  , defaultsearchprovidernewtaburl_(nullptr)
  , networkpredictionoptions_(nullptr)
  , sslversionmin_(nullptr)
  , contextualsearchenabled_(nullptr)
  , forcegooglesafesearch_(nullptr)
  , forceyoutubesafetymode_(nullptr)
  , sslerroroverrideallowed_(nullptr)
  , authandroidnegotiateaccounttype_(nullptr)
  , defaultwebbluetoothguardsetting_(nullptr)
  , alloweddomainsforapps_(nullptr)
  , enablemediarouter_(nullptr)
  , certificatetransparencyenforcementdisabledforurls_(nullptr)
  , ntpcontentsuggestionsenabled_(nullptr)
  , webrtcudpportrange_(nullptr)
  , componentupdatesenabled_(nullptr)
  , forcebrowsersignin_(nullptr)
  , forceyoutuberestrict_(nullptr)
  , cloudpolicyoverridesplatformpolicy_(nullptr)
  , autofillcreditcardenabled_(nullptr)
  , ntlmv2enabled_(nullptr)
  , promptfordownloadlocation_(nullptr)
  , restrictaccountstopatterns_(nullptr)
  , safebrowsingextendedreportingenabled_(nullptr)
  , defaultwebusbguardsetting_(nullptr)
  , certificatetransparencyenforcementdisabledforcas_(nullptr)
  , certificatetransparencyenforcementdisabledforlegacycas_(nullptr)
  , webusbaskforurls_(nullptr)
  , webusbblockedforurls_(nullptr)
  , isolateoriginsandroid_(nullptr)
  , siteperprocessandroid_(nullptr)
  , overridesecurityrestrictionsoninsecureorigin_(nullptr)
  , autofilladdressenabled_(nullptr)
  , urlkeyedanonymizeddatacollectionenabled_(nullptr)
  , coalesceh2connectionswithclientcertificatesforhosts_(nullptr)
  , enterprisehardwareplatformapienabled_(nullptr)
  , webusballowdevicesforurls_(nullptr)
  , browsersignin_(nullptr)
  , cloudreportingenabled_(nullptr)
  , cloudmanagementenrollmenttoken_(nullptr)
  , policylistmultiplesourcemergelist_(nullptr)
  , policydictionarymultiplesourcemergelist_(nullptr)
  , passwordleakdetectionenabled_(nullptr)
  , dnsoverhttpsmode_(nullptr)
  , policyatomicgroupsenabled_(nullptr)
  , hstspolicybypasslist_(nullptr)
  , sharedclipboardenabled_(nullptr)
  , legacysamesitecookiebehaviorenabledfordomainlist_(nullptr)
  , dnsoverhttpstemplates_(nullptr)
  , synctypeslistdisabled_(nullptr)
  , paymentmethodqueryenabled_(nullptr)
  , safebrowsingprotectionlevel_(nullptr)
  , scrolltotextfragmentenabled_(nullptr)
  , enableexperimentalpolicies_(nullptr)
  , intensivewakeupthrottlingenabled_(nullptr)
  , urlblocklist_(nullptr)
  , urlallowlist_(nullptr)
  , authnegotiatedelegateallowlist_(nullptr)
  , authserverallowlist_(nullptr)
  , insecureformswarningsenabled_(nullptr)
  , defaultsensorssetting_(nullptr)
  , sensorsallowedforurls_(nullptr)
  , sensorsblockedforurls_(nullptr)
  , backforwardcacheenabled_(nullptr)
  , insecureprivatenetworkrequestsallowed_(nullptr)
  , insecureprivatenetworkrequestsallowedforurls_(nullptr)
  , lookalikewarningallowlistdomains_(nullptr)
  , browsingdatalifetime_(nullptr)
  , tosdialogbehavior_(nullptr)
  , sslerroroverrideallowedfororigins_(nullptr)
  , webxrimmersivearenabled_(nullptr)
  , suppressdifferentoriginsubframedialogs_(nullptr)
  , cecpq2enabled_(nullptr)
  , explicitlyallowednetworkports_(nullptr)
  , lenscameraassistedsearchenabled_(nullptr)
  , additionaldnsquerytypesenabled_(nullptr)
  , clouduserpolicymerge_(nullptr)
  , defaultjavascriptjitsetting_(nullptr)
  , javascriptjitallowedforsites_(nullptr)
  , javascriptjitblockedforsites_(nullptr)
  , httpsonlymode_(nullptr)
  , clouduserpolicyoverridescloudmachinepolicy_(nullptr)
  , corsnonwildcardrequestheaderssupport_(nullptr)
  , useragentclienthintsgreaseupdateenabled_(nullptr)
  , useragentreduction_(nullptr)
  , cloudprofilereportingenabled_(nullptr)
  , firstpartysetsenabled_(nullptr)
  , forcemajorversiontominorpositioninuseragent_(nullptr)
  , allhttpauthschemesallowedfororigins_(nullptr)
  , cloudreportinguploadfrequency_(nullptr)
  , websqlaccess_(nullptr)
  , settimeoutwithout1msclampenabled_(nullptr)
  , firstpartysetsoverrides_(nullptr)
  , enterpriseauthenticationapplinkpolicy_(nullptr)
  , urlparamfilterenabled_(nullptr)
  , unthrottlednestedtimeoutenabled_(nullptr)
  , eventpathenabled_(nullptr)
  , websqlnonsecurecontextenabled_(nullptr)
  , encryptedclienthelloenabled_(nullptr)
  , persistentquotaenabled_(nullptr){}
struct CloudPolicySettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CloudPolicySettingsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CloudPolicySettingsDefaultTypeInternal() {}
  union {
    CloudPolicySettings _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT_WITH_PTR PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CloudPolicySettingsDefaultTypeInternal _CloudPolicySettings_default_instance_;
}  // namespace enterprise_management
namespace enterprise_management {

// ===================================================================

class CloudPolicySettings::_Internal {
 public:
  using HasBits = decltype(std::declval<CloudPolicySettings>()._has_bits_);
  static const ::enterprise_management::StringPolicyProto& homepagelocation(const CloudPolicySettings* msg);
  static void set_has_homepagelocation(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::enterprise_management::BooleanPolicyProto& alternateerrorpagesenabled(const CloudPolicySettings* msg);
  static void set_has_alternateerrorpagesenabled(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::enterprise_management::BooleanPolicyProto& searchsuggestenabled(const CloudPolicySettings* msg);
  static void set_has_searchsuggestenabled(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::enterprise_management::IntegerPolicyProto& networkpredictionoptions(const CloudPolicySettings* msg);
  static void set_has_networkpredictionoptions(HasBits* has_bits) {
    (*has_bits)[1] |= 4194304u;
  }
  static const ::enterprise_management::BooleanPolicyProto& javascriptenabled(const CloudPolicySettings* msg);
  static void set_has_javascriptenabled(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::enterprise_management::BooleanPolicyProto& incognitoenabled(const CloudPolicySettings* msg);
  static void set_has_incognitoenabled(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::enterprise_management::IntegerPolicyProto& incognitomodeavailability(const CloudPolicySettings* msg);
  static void set_has_incognitomodeavailability(HasBits* has_bits) {
    (*has_bits)[1] |= 256u;
  }
  static const ::enterprise_management::BooleanPolicyProto& savingbrowserhistorydisabled(const CloudPolicySettings* msg);
  static void set_has_savingbrowserhistorydisabled(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::enterprise_management::BooleanPolicyProto& printingenabled(const CloudPolicySettings* msg);
  static void set_has_printingenabled(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::enterprise_management::BooleanPolicyProto& forcesafesearch(const CloudPolicySettings* msg);
  static void set_has_forcesafesearch(HasBits* has_bits) {
    (*has_bits)[1] |= 4096u;
  }
  static const ::enterprise_management::BooleanPolicyProto& forcegooglesafesearch(const CloudPolicySettings* msg);
  static void set_has_forcegooglesafesearch(HasBits* has_bits) {
    (*has_bits)[1] |= 33554432u;
  }
  static const ::enterprise_management::BooleanPolicyProto& forceyoutubesafetymode(const CloudPolicySettings* msg);
  static void set_has_forceyoutubesafetymode(HasBits* has_bits) {
    (*has_bits)[1] |= 67108864u;
  }
  static const ::enterprise_management::IntegerPolicyProto& forceyoutuberestrict(const CloudPolicySettings* msg);
  static void set_has_forceyoutuberestrict(HasBits* has_bits) {
    (*has_bits)[2] |= 32u;
  }
  static const ::enterprise_management::BooleanPolicyProto& safebrowsingenabled(const CloudPolicySettings* msg);
  static void set_has_safebrowsingenabled(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::enterprise_management::IntegerPolicyProto& safebrowsingprotectionlevel(const CloudPolicySettings* msg);
  static void set_has_safebrowsingprotectionlevel(HasBits* has_bits) {
    (*has_bits)[3] |= 128u;
  }
  static const ::enterprise_management::BooleanPolicyProto& metricsreportingenabled(const CloudPolicySettings* msg);
  static void set_has_metricsreportingenabled(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::enterprise_management::BooleanPolicyProto& passwordmanagerenabled(const CloudPolicySettings* msg);
  static void set_has_passwordmanagerenabled(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::enterprise_management::BooleanPolicyProto& passwordleakdetectionenabled(const CloudPolicySettings* msg);
  static void set_has_passwordleakdetectionenabled(HasBits* has_bits) {
    (*has_bits)[2] |= 1073741824u;
  }
  static const ::enterprise_management::BooleanPolicyProto& autofillenabled(const CloudPolicySettings* msg);
  static void set_has_autofillenabled(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::enterprise_management::BooleanPolicyProto& autofilladdressenabled(const CloudPolicySettings* msg);
  static void set_has_autofilladdressenabled(HasBits* has_bits) {
    (*has_bits)[2] |= 1048576u;
  }
  static const ::enterprise_management::BooleanPolicyProto& autofillcreditcardenabled(const CloudPolicySettings* msg);
  static void set_has_autofillcreditcardenabled(HasBits* has_bits) {
    (*has_bits)[2] |= 128u;
  }
  static const ::enterprise_management::BooleanPolicyProto& syncdisabled(const CloudPolicySettings* msg);
  static void set_has_syncdisabled(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static const ::enterprise_management::StringListPolicyProto& synctypeslistdisabled(const CloudPolicySettings* msg);
  static void set_has_synctypeslistdisabled(HasBits* has_bits) {
    (*has_bits)[3] |= 32u;
  }
  static const ::enterprise_management::BooleanPolicyProto& signinallowed(const CloudPolicySettings* msg);
  static void set_has_signinallowed(HasBits* has_bits) {
    (*has_bits)[1] |= 16384u;
  }
  static const ::enterprise_management::StringPolicyProto& proxymode(const CloudPolicySettings* msg);
  static void set_has_proxymode(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static const ::enterprise_management::IntegerPolicyProto& proxyservermode(const CloudPolicySettings* msg);
  static void set_has_proxyservermode(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static const ::enterprise_management::StringPolicyProto& proxyserver(const CloudPolicySettings* msg);
  static void set_has_proxyserver(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static const ::enterprise_management::StringPolicyProto& proxypacurl(const CloudPolicySettings* msg);
  static void set_has_proxypacurl(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static const ::enterprise_management::StringPolicyProto& proxybypasslist(const CloudPolicySettings* msg);
  static void set_has_proxybypasslist(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static const ::enterprise_management::StringPolicyProto& proxysettings(const CloudPolicySettings* msg);
  static void set_has_proxysettings(HasBits* has_bits) {
    (*has_bits)[1] |= 512u;
  }
  static const ::enterprise_management::StringPolicyProto& authschemes(const CloudPolicySettings* msg);
  static void set_has_authschemes(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static const ::enterprise_management::StringListPolicyProto& allhttpauthschemesallowedfororigins(const CloudPolicySettings* msg);
  static void set_has_allhttpauthschemesallowedfororigins(HasBits* has_bits) {
    (*has_bits)[4] |= 4096u;
  }
  static const ::enterprise_management::BooleanPolicyProto& disableauthnegotiatecnamelookup(const CloudPolicySettings* msg);
  static void set_has_disableauthnegotiatecnamelookup(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static const ::enterprise_management::StringPolicyProto& authserverallowlist(const CloudPolicySettings* msg);
  static void set_has_authserverallowlist(HasBits* has_bits) {
    (*has_bits)[3] |= 16384u;
  }
  static const ::enterprise_management::StringPolicyProto& authnegotiatedelegateallowlist(const CloudPolicySettings* msg);
  static void set_has_authnegotiatedelegateallowlist(HasBits* has_bits) {
    (*has_bits)[3] |= 8192u;
  }
  static const ::enterprise_management::StringPolicyProto& authandroidnegotiateaccounttype(const CloudPolicySettings* msg);
  static void set_has_authandroidnegotiateaccounttype(HasBits* has_bits) {
    (*has_bits)[1] |= 268435456u;
  }
  static const ::enterprise_management::BooleanPolicyProto& ntlmv2enabled(const CloudPolicySettings* msg);
  static void set_has_ntlmv2enabled(HasBits* has_bits) {
    (*has_bits)[2] |= 256u;
  }
  static const ::enterprise_management::BooleanPolicyProto& blockthirdpartycookies(const CloudPolicySettings* msg);
  static void set_has_blockthirdpartycookies(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static const ::enterprise_management::BooleanPolicyProto& defaultsearchproviderenabled(const CloudPolicySettings* msg);
  static void set_has_defaultsearchproviderenabled(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static const ::enterprise_management::StringPolicyProto& defaultsearchprovidername(const CloudPolicySettings* msg);
  static void set_has_defaultsearchprovidername(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static const ::enterprise_management::StringPolicyProto& defaultsearchproviderkeyword(const CloudPolicySettings* msg);
  static void set_has_defaultsearchproviderkeyword(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static const ::enterprise_management::StringPolicyProto& defaultsearchprovidersearchurl(const CloudPolicySettings* msg);
  static void set_has_defaultsearchprovidersearchurl(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static const ::enterprise_management::StringPolicyProto& defaultsearchprovidersuggesturl(const CloudPolicySettings* msg);
  static void set_has_defaultsearchprovidersuggesturl(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static const ::enterprise_management::StringPolicyProto& defaultsearchprovidericonurl(const CloudPolicySettings* msg);
  static void set_has_defaultsearchprovidericonurl(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static const ::enterprise_management::StringListPolicyProto& defaultsearchproviderencodings(const CloudPolicySettings* msg);
  static void set_has_defaultsearchproviderencodings(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static const ::enterprise_management::StringListPolicyProto& defaultsearchprovideralternateurls(const CloudPolicySettings* msg);
  static void set_has_defaultsearchprovideralternateurls(HasBits* has_bits) {
    (*has_bits)[1] |= 2048u;
  }
  static const ::enterprise_management::StringPolicyProto& defaultsearchproviderimageurl(const CloudPolicySettings* msg);
  static void set_has_defaultsearchproviderimageurl(HasBits* has_bits) {
    (*has_bits)[1] |= 131072u;
  }
  static const ::enterprise_management::StringPolicyProto& defaultsearchprovidernewtaburl(const CloudPolicySettings* msg);
  static void set_has_defaultsearchprovidernewtaburl(HasBits* has_bits) {
    (*has_bits)[1] |= 2097152u;
  }
  static const ::enterprise_management::StringPolicyProto& defaultsearchprovidersearchurlpostparams(const CloudPolicySettings* msg);
  static void set_has_defaultsearchprovidersearchurlpostparams(HasBits* has_bits) {
    (*has_bits)[1] |= 262144u;
  }
  static const ::enterprise_management::StringPolicyProto& defaultsearchprovidersuggesturlpostparams(const CloudPolicySettings* msg);
  static void set_has_defaultsearchprovidersuggesturlpostparams(HasBits* has_bits) {
    (*has_bits)[1] |= 524288u;
  }
  static const ::enterprise_management::StringPolicyProto& defaultsearchproviderimageurlpostparams(const CloudPolicySettings* msg);
  static void set_has_defaultsearchproviderimageurlpostparams(HasBits* has_bits) {
    (*has_bits)[1] |= 1048576u;
  }
  static const ::enterprise_management::IntegerPolicyProto& defaultcookiessetting(const CloudPolicySettings* msg);
  static void set_has_defaultcookiessetting(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static const ::enterprise_management::IntegerPolicyProto& defaultjavascriptsetting(const CloudPolicySettings* msg);
  static void set_has_defaultjavascriptsetting(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static const ::enterprise_management::IntegerPolicyProto& defaultpopupssetting(const CloudPolicySettings* msg);
  static void set_has_defaultpopupssetting(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static const ::enterprise_management::IntegerPolicyProto& defaultgeolocationsetting(const CloudPolicySettings* msg);
  static void set_has_defaultgeolocationsetting(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static const ::enterprise_management::IntegerPolicyProto& defaultwebbluetoothguardsetting(const CloudPolicySettings* msg);
  static void set_has_defaultwebbluetoothguardsetting(HasBits* has_bits) {
    (*has_bits)[1] |= 536870912u;
  }
  static const ::enterprise_management::IntegerPolicyProto& defaultsensorssetting(const CloudPolicySettings* msg);
  static void set_has_defaultsensorssetting(HasBits* has_bits) {
    (*has_bits)[3] |= 65536u;
  }
  static const ::enterprise_management::IntegerPolicyProto& defaultwebusbguardsetting(const CloudPolicySettings* msg);
  static void set_has_defaultwebusbguardsetting(HasBits* has_bits) {
    (*has_bits)[2] |= 4096u;
  }
  static const ::enterprise_management::StringPolicyProto& webusballowdevicesforurls(const CloudPolicySettings* msg);
  static void set_has_webusballowdevicesforurls(HasBits* has_bits) {
    (*has_bits)[2] |= 16777216u;
  }
  static const ::enterprise_management::StringListPolicyProto& webusbaskforurls(const CloudPolicySettings* msg);
  static void set_has_webusbaskforurls(HasBits* has_bits) {
    (*has_bits)[2] |= 32768u;
  }
  static const ::enterprise_management::StringListPolicyProto& webusbblockedforurls(const CloudPolicySettings* msg);
  static void set_has_webusbblockedforurls(HasBits* has_bits) {
    (*has_bits)[2] |= 65536u;
  }
  static const ::enterprise_management::StringListPolicyProto& cookiesallowedforurls(const CloudPolicySettings* msg);
  static void set_has_cookiesallowedforurls(HasBits* has_bits) {
    (*has_bits)[1] |= 32u;
  }
  static const ::enterprise_management::StringListPolicyProto& cookiesblockedforurls(const CloudPolicySettings* msg);
  static void set_has_cookiesblockedforurls(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static const ::enterprise_management::StringListPolicyProto& cookiessessiononlyforurls(const CloudPolicySettings* msg);
  static void set_has_cookiessessiononlyforurls(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static const ::enterprise_management::StringListPolicyProto& javascriptallowedforurls(const CloudPolicySettings* msg);
  static void set_has_javascriptallowedforurls(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static const ::enterprise_management::StringListPolicyProto& javascriptblockedforurls(const CloudPolicySettings* msg);
  static void set_has_javascriptblockedforurls(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static const ::enterprise_management::StringListPolicyProto& legacysamesitecookiebehaviorenabledfordomainlist(const CloudPolicySettings* msg);
  static void set_has_legacysamesitecookiebehaviorenabledfordomainlist(HasBits* has_bits) {
    (*has_bits)[3] |= 8u;
  }
  static const ::enterprise_management::BooleanPolicyProto& lenscameraassistedsearchenabled(const CloudPolicySettings* msg);
  static void set_has_lenscameraassistedsearchenabled(HasBits* has_bits) {
    (*has_bits)[3] |= 1073741824u;
  }
  static const ::enterprise_management::BooleanPolicyProto& insecureprivatenetworkrequestsallowed(const CloudPolicySettings* msg);
  static void set_has_insecureprivatenetworkrequestsallowed(HasBits* has_bits) {
    (*has_bits)[3] |= 1048576u;
  }
  static const ::enterprise_management::StringListPolicyProto& insecureprivatenetworkrequestsallowedforurls(const CloudPolicySettings* msg);
  static void set_has_insecureprivatenetworkrequestsallowedforurls(HasBits* has_bits) {
    (*has_bits)[3] |= 2097152u;
  }
  static const ::enterprise_management::StringListPolicyProto& popupsallowedforurls(const CloudPolicySettings* msg);
  static void set_has_popupsallowedforurls(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static const ::enterprise_management::StringListPolicyProto& popupsblockedforurls(const CloudPolicySettings* msg);
  static void set_has_popupsblockedforurls(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
  static const ::enterprise_management::StringListPolicyProto& sensorsallowedforurls(const CloudPolicySettings* msg);
  static void set_has_sensorsallowedforurls(HasBits* has_bits) {
    (*has_bits)[3] |= 131072u;
  }
  static const ::enterprise_management::StringListPolicyProto& sensorsblockedforurls(const CloudPolicySettings* msg);
  static void set_has_sensorsblockedforurls(HasBits* has_bits) {
    (*has_bits)[3] |= 262144u;
  }
  static const ::enterprise_management::BooleanPolicyProto& translateenabled(const CloudPolicySettings* msg);
  static void set_has_translateenabled(HasBits* has_bits) {
    (*has_bits)[1] |= 64u;
  }
  static const ::enterprise_management::BooleanPolicyProto& editbookmarksenabled(const CloudPolicySettings* msg);
  static void set_has_editbookmarksenabled(HasBits* has_bits) {
    (*has_bits)[1] |= 128u;
  }
  static const ::enterprise_management::StringListPolicyProto& urlblocklist(const CloudPolicySettings* msg);
  static void set_has_urlblocklist(HasBits* has_bits) {
    (*has_bits)[3] |= 2048u;
  }
  static const ::enterprise_management::StringListPolicyProto& urlallowlist(const CloudPolicySettings* msg);
  static void set_has_urlallowlist(HasBits* has_bits) {
    (*has_bits)[3] |= 4096u;
  }
  static const ::enterprise_management::BooleanPolicyProto& policyatomicgroupsenabled(const CloudPolicySettings* msg);
  static void set_has_policyatomicgroupsenabled(HasBits* has_bits) {
    (*has_bits)[3] |= 1u;
  }
  static const ::enterprise_management::StringListPolicyProto& policylistmultiplesourcemergelist(const CloudPolicySettings* msg);
  static void set_has_policylistmultiplesourcemergelist(HasBits* has_bits) {
    (*has_bits)[2] |= 268435456u;
  }
  static const ::enterprise_management::StringListPolicyProto& policydictionarymultiplesourcemergelist(const CloudPolicySettings* msg);
  static void set_has_policydictionarymultiplesourcemergelist(HasBits* has_bits) {
    (*has_bits)[2] |= 536870912u;
  }
  static const ::enterprise_management::BooleanPolicyProto& clouduserpolicymerge(const CloudPolicySettings* msg);
  static void set_has_clouduserpolicymerge(HasBits* has_bits) {
    (*has_bits)[4] |= 1u;
  }
  static const ::enterprise_management::StringListPolicyProto& enableexperimentalpolicies(const CloudPolicySettings* msg);
  static void set_has_enableexperimentalpolicies(HasBits* has_bits) {
    (*has_bits)[3] |= 512u;
  }
  static const ::enterprise_management::BooleanPolicyProto& disablesafebrowsingproceedanyway(const CloudPolicySettings* msg);
  static void set_has_disablesafebrowsingproceedanyway(HasBits* has_bits) {
    (*has_bits)[1] |= 1024u;
  }
  static const ::enterprise_management::BooleanPolicyProto& builtindnsclientenabled(const CloudPolicySettings* msg);
  static void set_has_builtindnsclientenabled(HasBits* has_bits) {
    (*has_bits)[1] |= 8192u;
  }
  static const ::enterprise_management::StringPolicyProto& dnsoverhttpsmode(const CloudPolicySettings* msg);
  static void set_has_dnsoverhttpsmode(HasBits* has_bits) {
    (*has_bits)[2] |= 2147483648u;
  }
  static const ::enterprise_management::StringPolicyProto& dnsoverhttpstemplates(const CloudPolicySettings* msg);
  static void set_has_dnsoverhttpstemplates(HasBits* has_bits) {
    (*has_bits)[3] |= 16u;
  }
  static const ::enterprise_management::BooleanPolicyProto& additionaldnsquerytypesenabled(const CloudPolicySettings* msg);
  static void set_has_additionaldnsquerytypesenabled(HasBits* has_bits) {
    (*has_bits)[3] |= 2147483648u;
  }
  static const ::enterprise_management::BooleanPolicyProto& sharedclipboardenabled(const CloudPolicySettings* msg);
  static void set_has_sharedclipboardenabled(HasBits* has_bits) {
    (*has_bits)[3] |= 4u;
  }
  static const ::enterprise_management::StringPolicyProto& variationsrestrictparameter(const CloudPolicySettings* msg);
  static void set_has_variationsrestrictparameter(HasBits* has_bits) {
    (*has_bits)[1] |= 32768u;
  }
  static const ::enterprise_management::StringPolicyProto& managedbookmarks(const CloudPolicySettings* msg);
  static void set_has_managedbookmarks(HasBits* has_bits) {
    (*has_bits)[1] |= 65536u;
  }
  static const ::enterprise_management::BooleanPolicyProto& forcebrowsersignin(const CloudPolicySettings* msg);
  static void set_has_forcebrowsersignin(HasBits* has_bits) {
    (*has_bits)[2] |= 16u;
  }
  static const ::enterprise_management::IntegerPolicyProto& browsersignin(const CloudPolicySettings* msg);
  static void set_has_browsersignin(HasBits* has_bits) {
    (*has_bits)[2] |= 33554432u;
  }
  static const ::enterprise_management::StringPolicyProto& sslversionmin(const CloudPolicySettings* msg);
  static void set_has_sslversionmin(HasBits* has_bits) {
    (*has_bits)[1] |= 8388608u;
  }
  static const ::enterprise_management::BooleanPolicyProto& cecpq2enabled(const CloudPolicySettings* msg);
  static void set_has_cecpq2enabled(HasBits* has_bits) {
    (*has_bits)[3] |= 268435456u;
  }
  static const ::enterprise_management::StringListPolicyProto& certificatetransparencyenforcementdisabledforurls(const CloudPolicySettings* msg);
  static void set_has_certificatetransparencyenforcementdisabledforurls(HasBits* has_bits) {
    (*has_bits)[2] |= 1u;
  }
  static const ::enterprise_management::StringListPolicyProto& certificatetransparencyenforcementdisabledforcas(const CloudPolicySettings* msg);
  static void set_has_certificatetransparencyenforcementdisabledforcas(HasBits* has_bits) {
    (*has_bits)[2] |= 8192u;
  }
  static const ::enterprise_management::StringListPolicyProto& certificatetransparencyenforcementdisabledforlegacycas(const CloudPolicySettings* msg);
  static void set_has_certificatetransparencyenforcementdisabledforlegacycas(HasBits* has_bits) {
    (*has_bits)[2] |= 16384u;
  }
  static const ::enterprise_management::BooleanPolicyProto& contextualsearchenabled(const CloudPolicySettings* msg);
  static void set_has_contextualsearchenabled(HasBits* has_bits) {
    (*has_bits)[1] |= 16777216u;
  }
  static const ::enterprise_management::BooleanPolicyProto& sslerroroverrideallowed(const CloudPolicySettings* msg);
  static void set_has_sslerroroverrideallowed(HasBits* has_bits) {
    (*has_bits)[1] |= 134217728u;
  }
  static const ::enterprise_management::StringListPolicyProto& sslerroroverrideallowedfororigins(const CloudPolicySettings* msg);
  static void set_has_sslerroroverrideallowedfororigins(HasBits* has_bits) {
    (*has_bits)[3] |= 33554432u;
  }
  static const ::enterprise_management::StringPolicyProto& alloweddomainsforapps(const CloudPolicySettings* msg);
  static void set_has_alloweddomainsforapps(HasBits* has_bits) {
    (*has_bits)[1] |= 1073741824u;
  }
  static const ::enterprise_management::BooleanPolicyProto& enablemediarouter(const CloudPolicySettings* msg);
  static void set_has_enablemediarouter(HasBits* has_bits) {
    (*has_bits)[1] |= 2147483648u;
  }
  static const ::enterprise_management::BooleanPolicyProto& ntpcontentsuggestionsenabled(const CloudPolicySettings* msg);
  static void set_has_ntpcontentsuggestionsenabled(HasBits* has_bits) {
    (*has_bits)[2] |= 2u;
  }
  static const ::enterprise_management::StringPolicyProto& webrtcudpportrange(const CloudPolicySettings* msg);
  static void set_has_webrtcudpportrange(HasBits* has_bits) {
    (*has_bits)[2] |= 4u;
  }
  static const ::enterprise_management::BooleanPolicyProto& componentupdatesenabled(const CloudPolicySettings* msg);
  static void set_has_componentupdatesenabled(HasBits* has_bits) {
    (*has_bits)[2] |= 8u;
  }
  static const ::enterprise_management::BooleanPolicyProto& cloudpolicyoverridesplatformpolicy(const CloudPolicySettings* msg);
  static void set_has_cloudpolicyoverridesplatformpolicy(HasBits* has_bits) {
    (*has_bits)[2] |= 64u;
  }
  static const ::enterprise_management::BooleanPolicyProto& clouduserpolicyoverridescloudmachinepolicy(const CloudPolicySettings* msg);
  static void set_has_clouduserpolicyoverridescloudmachinepolicy(HasBits* has_bits) {
    (*has_bits)[4] |= 32u;
  }
  static const ::enterprise_management::BooleanPolicyProto& promptfordownloadlocation(const CloudPolicySettings* msg);
  static void set_has_promptfordownloadlocation(HasBits* has_bits) {
    (*has_bits)[2] |= 512u;
  }
  static const ::enterprise_management::StringPolicyProto& isolateoriginsandroid(const CloudPolicySettings* msg);
  static void set_has_isolateoriginsandroid(HasBits* has_bits) {
    (*has_bits)[2] |= 131072u;
  }
  static const ::enterprise_management::BooleanPolicyProto& siteperprocessandroid(const CloudPolicySettings* msg);
  static void set_has_siteperprocessandroid(HasBits* has_bits) {
    (*has_bits)[2] |= 262144u;
  }
  static const ::enterprise_management::StringListPolicyProto& restrictaccountstopatterns(const CloudPolicySettings* msg);
  static void set_has_restrictaccountstopatterns(HasBits* has_bits) {
    (*has_bits)[2] |= 1024u;
  }
  static const ::enterprise_management::BooleanPolicyProto& safebrowsingextendedreportingenabled(const CloudPolicySettings* msg);
  static void set_has_safebrowsingextendedreportingenabled(HasBits* has_bits) {
    (*has_bits)[2] |= 2048u;
  }
  static const ::enterprise_management::StringPolicyProto& cloudmanagementenrollmenttoken(const CloudPolicySettings* msg);
  static void set_has_cloudmanagementenrollmenttoken(HasBits* has_bits) {
    (*has_bits)[2] |= 134217728u;
  }
  static const ::enterprise_management::StringListPolicyProto& overridesecurityrestrictionsoninsecureorigin(const CloudPolicySettings* msg);
  static void set_has_overridesecurityrestrictionsoninsecureorigin(HasBits* has_bits) {
    (*has_bits)[2] |= 524288u;
  }
  static const ::enterprise_management::BooleanPolicyProto& urlkeyedanonymizeddatacollectionenabled(const CloudPolicySettings* msg);
  static void set_has_urlkeyedanonymizeddatacollectionenabled(HasBits* has_bits) {
    (*has_bits)[2] |= 2097152u;
  }
  static const ::enterprise_management::StringListPolicyProto& coalesceh2connectionswithclientcertificatesforhosts(const CloudPolicySettings* msg);
  static void set_has_coalesceh2connectionswithclientcertificatesforhosts(HasBits* has_bits) {
    (*has_bits)[2] |= 4194304u;
  }
  static const ::enterprise_management::BooleanPolicyProto& cloudreportingenabled(const CloudPolicySettings* msg);
  static void set_has_cloudreportingenabled(HasBits* has_bits) {
    (*has_bits)[2] |= 67108864u;
  }
  static const ::enterprise_management::BooleanPolicyProto& cloudprofilereportingenabled(const CloudPolicySettings* msg);
  static void set_has_cloudprofilereportingenabled(HasBits* has_bits) {
    (*has_bits)[4] |= 512u;
  }
  static const ::enterprise_management::IntegerPolicyProto& cloudreportinguploadfrequency(const CloudPolicySettings* msg);
  static void set_has_cloudreportinguploadfrequency(HasBits* has_bits) {
    (*has_bits)[4] |= 8192u;
  }
  static const ::enterprise_management::BooleanPolicyProto& enterprisehardwareplatformapienabled(const CloudPolicySettings* msg);
  static void set_has_enterprisehardwareplatformapienabled(HasBits* has_bits) {
    (*has_bits)[2] |= 8388608u;
  }
  static const ::enterprise_management::StringListPolicyProto& hstspolicybypasslist(const CloudPolicySettings* msg);
  static void set_has_hstspolicybypasslist(HasBits* has_bits) {
    (*has_bits)[3] |= 2u;
  }
  static const ::enterprise_management::BooleanPolicyProto& eventpathenabled(const CloudPolicySettings* msg);
  static void set_has_eventpathenabled(HasBits* has_bits) {
    (*has_bits)[4] |= 1048576u;
  }
  static const ::enterprise_management::BooleanPolicyProto& paymentmethodqueryenabled(const CloudPolicySettings* msg);
  static void set_has_paymentmethodqueryenabled(HasBits* has_bits) {
    (*has_bits)[3] |= 64u;
  }
  static const ::enterprise_management::BooleanPolicyProto& scrolltotextfragmentenabled(const CloudPolicySettings* msg);
  static void set_has_scrolltotextfragmentenabled(HasBits* has_bits) {
    (*has_bits)[3] |= 256u;
  }
  static const ::enterprise_management::BooleanPolicyProto& intensivewakeupthrottlingenabled(const CloudPolicySettings* msg);
  static void set_has_intensivewakeupthrottlingenabled(HasBits* has_bits) {
    (*has_bits)[3] |= 1024u;
  }
  static const ::enterprise_management::BooleanPolicyProto& backforwardcacheenabled(const CloudPolicySettings* msg);
  static void set_has_backforwardcacheenabled(HasBits* has_bits) {
    (*has_bits)[3] |= 524288u;
  }
  static const ::enterprise_management::BooleanPolicyProto& useragentclienthintsgreaseupdateenabled(const CloudPolicySettings* msg);
  static void set_has_useragentclienthintsgreaseupdateenabled(HasBits* has_bits) {
    (*has_bits)[4] |= 128u;
  }
  static const ::enterprise_management::BooleanPolicyProto& urlparamfilterenabled(const CloudPolicySettings* msg);
  static void set_has_urlparamfilterenabled(HasBits* has_bits) {
    (*has_bits)[4] |= 262144u;
  }
  static const ::enterprise_management::BooleanPolicyProto& insecureformswarningsenabled(const CloudPolicySettings* msg);
  static void set_has_insecureformswarningsenabled(HasBits* has_bits) {
    (*has_bits)[3] |= 32768u;
  }
  static const ::enterprise_management::StringListPolicyProto& lookalikewarningallowlistdomains(const CloudPolicySettings* msg);
  static void set_has_lookalikewarningallowlistdomains(HasBits* has_bits) {
    (*has_bits)[3] |= 4194304u;
  }
  static const ::enterprise_management::IntegerPolicyProto& tosdialogbehavior(const CloudPolicySettings* msg);
  static void set_has_tosdialogbehavior(HasBits* has_bits) {
    (*has_bits)[3] |= 16777216u;
  }
  static const ::enterprise_management::StringPolicyProto& browsingdatalifetime(const CloudPolicySettings* msg);
  static void set_has_browsingdatalifetime(HasBits* has_bits) {
    (*has_bits)[3] |= 8388608u;
  }
  static const ::enterprise_management::BooleanPolicyProto& webxrimmersivearenabled(const CloudPolicySettings* msg);
  static void set_has_webxrimmersivearenabled(HasBits* has_bits) {
    (*has_bits)[3] |= 67108864u;
  }
  static const ::enterprise_management::BooleanPolicyProto& suppressdifferentoriginsubframedialogs(const CloudPolicySettings* msg);
  static void set_has_suppressdifferentoriginsubframedialogs(HasBits* has_bits) {
    (*has_bits)[3] |= 134217728u;
  }
  static const ::enterprise_management::StringListPolicyProto& explicitlyallowednetworkports(const CloudPolicySettings* msg);
  static void set_has_explicitlyallowednetworkports(HasBits* has_bits) {
    (*has_bits)[3] |= 536870912u;
  }
  static const ::enterprise_management::IntegerPolicyProto& defaultjavascriptjitsetting(const CloudPolicySettings* msg);
  static void set_has_defaultjavascriptjitsetting(HasBits* has_bits) {
    (*has_bits)[4] |= 2u;
  }
  static const ::enterprise_management::StringListPolicyProto& javascriptjitallowedforsites(const CloudPolicySettings* msg);
  static void set_has_javascriptjitallowedforsites(HasBits* has_bits) {
    (*has_bits)[4] |= 4u;
  }
  static const ::enterprise_management::StringListPolicyProto& javascriptjitblockedforsites(const CloudPolicySettings* msg);
  static void set_has_javascriptjitblockedforsites(HasBits* has_bits) {
    (*has_bits)[4] |= 8u;
  }
  static const ::enterprise_management::StringPolicyProto& httpsonlymode(const CloudPolicySettings* msg);
  static void set_has_httpsonlymode(HasBits* has_bits) {
    (*has_bits)[4] |= 16u;
  }
  static const ::enterprise_management::BooleanPolicyProto& corsnonwildcardrequestheaderssupport(const CloudPolicySettings* msg);
  static void set_has_corsnonwildcardrequestheaderssupport(HasBits* has_bits) {
    (*has_bits)[4] |= 64u;
  }
  static const ::enterprise_management::IntegerPolicyProto& useragentreduction(const CloudPolicySettings* msg);
  static void set_has_useragentreduction(HasBits* has_bits) {
    (*has_bits)[4] |= 256u;
  }
  static const ::enterprise_management::IntegerPolicyProto& forcemajorversiontominorpositioninuseragent(const CloudPolicySettings* msg);
  static void set_has_forcemajorversiontominorpositioninuseragent(HasBits* has_bits) {
    (*has_bits)[4] |= 2048u;
  }
  static const ::enterprise_management::BooleanPolicyProto& firstpartysetsenabled(const CloudPolicySettings* msg);
  static void set_has_firstpartysetsenabled(HasBits* has_bits) {
    (*has_bits)[4] |= 1024u;
  }
  static const ::enterprise_management::StringPolicyProto& firstpartysetsoverrides(const CloudPolicySettings* msg);
  static void set_has_firstpartysetsoverrides(HasBits* has_bits) {
    (*has_bits)[4] |= 65536u;
  }
  static const ::enterprise_management::BooleanPolicyProto& websqlaccess(const CloudPolicySettings* msg);
  static void set_has_websqlaccess(HasBits* has_bits) {
    (*has_bits)[4] |= 16384u;
  }
  static const ::enterprise_management::BooleanPolicyProto& websqlnonsecurecontextenabled(const CloudPolicySettings* msg);
  static void set_has_websqlnonsecurecontextenabled(HasBits* has_bits) {
    (*has_bits)[4] |= 2097152u;
  }
  static const ::enterprise_management::BooleanPolicyProto& settimeoutwithout1msclampenabled(const CloudPolicySettings* msg);
  static void set_has_settimeoutwithout1msclampenabled(HasBits* has_bits) {
    (*has_bits)[4] |= 32768u;
  }
  static const ::enterprise_management::StringPolicyProto& enterpriseauthenticationapplinkpolicy(const CloudPolicySettings* msg);
  static void set_has_enterpriseauthenticationapplinkpolicy(HasBits* has_bits) {
    (*has_bits)[4] |= 131072u;
  }
  static const ::enterprise_management::BooleanPolicyProto& unthrottlednestedtimeoutenabled(const CloudPolicySettings* msg);
  static void set_has_unthrottlednestedtimeoutenabled(HasBits* has_bits) {
    (*has_bits)[4] |= 524288u;
  }
  static const ::enterprise_management::BooleanPolicyProto& encryptedclienthelloenabled(const CloudPolicySettings* msg);
  static void set_has_encryptedclienthelloenabled(HasBits* has_bits) {
    (*has_bits)[4] |= 4194304u;
  }
  static const ::enterprise_management::BooleanPolicyProto& persistentquotaenabled(const CloudPolicySettings* msg);
  static void set_has_persistentquotaenabled(HasBits* has_bits) {
    (*has_bits)[4] |= 8388608u;
  }
};

const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::homepagelocation(const CloudPolicySettings* msg) {
  return *msg->homepagelocation_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::alternateerrorpagesenabled(const CloudPolicySettings* msg) {
  return *msg->alternateerrorpagesenabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::searchsuggestenabled(const CloudPolicySettings* msg) {
  return *msg->searchsuggestenabled_;
}
const ::enterprise_management::IntegerPolicyProto&
CloudPolicySettings::_Internal::networkpredictionoptions(const CloudPolicySettings* msg) {
  return *msg->networkpredictionoptions_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::javascriptenabled(const CloudPolicySettings* msg) {
  return *msg->javascriptenabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::incognitoenabled(const CloudPolicySettings* msg) {
  return *msg->incognitoenabled_;
}
const ::enterprise_management::IntegerPolicyProto&
CloudPolicySettings::_Internal::incognitomodeavailability(const CloudPolicySettings* msg) {
  return *msg->incognitomodeavailability_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::savingbrowserhistorydisabled(const CloudPolicySettings* msg) {
  return *msg->savingbrowserhistorydisabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::printingenabled(const CloudPolicySettings* msg) {
  return *msg->printingenabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::forcesafesearch(const CloudPolicySettings* msg) {
  return *msg->forcesafesearch_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::forcegooglesafesearch(const CloudPolicySettings* msg) {
  return *msg->forcegooglesafesearch_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::forceyoutubesafetymode(const CloudPolicySettings* msg) {
  return *msg->forceyoutubesafetymode_;
}
const ::enterprise_management::IntegerPolicyProto&
CloudPolicySettings::_Internal::forceyoutuberestrict(const CloudPolicySettings* msg) {
  return *msg->forceyoutuberestrict_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::safebrowsingenabled(const CloudPolicySettings* msg) {
  return *msg->safebrowsingenabled_;
}
const ::enterprise_management::IntegerPolicyProto&
CloudPolicySettings::_Internal::safebrowsingprotectionlevel(const CloudPolicySettings* msg) {
  return *msg->safebrowsingprotectionlevel_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::metricsreportingenabled(const CloudPolicySettings* msg) {
  return *msg->metricsreportingenabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::passwordmanagerenabled(const CloudPolicySettings* msg) {
  return *msg->passwordmanagerenabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::passwordleakdetectionenabled(const CloudPolicySettings* msg) {
  return *msg->passwordleakdetectionenabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::autofillenabled(const CloudPolicySettings* msg) {
  return *msg->autofillenabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::autofilladdressenabled(const CloudPolicySettings* msg) {
  return *msg->autofilladdressenabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::autofillcreditcardenabled(const CloudPolicySettings* msg) {
  return *msg->autofillcreditcardenabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::syncdisabled(const CloudPolicySettings* msg) {
  return *msg->syncdisabled_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::synctypeslistdisabled(const CloudPolicySettings* msg) {
  return *msg->synctypeslistdisabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::signinallowed(const CloudPolicySettings* msg) {
  return *msg->signinallowed_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::proxymode(const CloudPolicySettings* msg) {
  return *msg->proxymode_;
}
const ::enterprise_management::IntegerPolicyProto&
CloudPolicySettings::_Internal::proxyservermode(const CloudPolicySettings* msg) {
  return *msg->proxyservermode_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::proxyserver(const CloudPolicySettings* msg) {
  return *msg->proxyserver_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::proxypacurl(const CloudPolicySettings* msg) {
  return *msg->proxypacurl_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::proxybypasslist(const CloudPolicySettings* msg) {
  return *msg->proxybypasslist_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::proxysettings(const CloudPolicySettings* msg) {
  return *msg->proxysettings_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::authschemes(const CloudPolicySettings* msg) {
  return *msg->authschemes_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::allhttpauthschemesallowedfororigins(const CloudPolicySettings* msg) {
  return *msg->allhttpauthschemesallowedfororigins_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::disableauthnegotiatecnamelookup(const CloudPolicySettings* msg) {
  return *msg->disableauthnegotiatecnamelookup_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::authserverallowlist(const CloudPolicySettings* msg) {
  return *msg->authserverallowlist_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::authnegotiatedelegateallowlist(const CloudPolicySettings* msg) {
  return *msg->authnegotiatedelegateallowlist_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::authandroidnegotiateaccounttype(const CloudPolicySettings* msg) {
  return *msg->authandroidnegotiateaccounttype_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::ntlmv2enabled(const CloudPolicySettings* msg) {
  return *msg->ntlmv2enabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::blockthirdpartycookies(const CloudPolicySettings* msg) {
  return *msg->blockthirdpartycookies_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::defaultsearchproviderenabled(const CloudPolicySettings* msg) {
  return *msg->defaultsearchproviderenabled_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::defaultsearchprovidername(const CloudPolicySettings* msg) {
  return *msg->defaultsearchprovidername_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::defaultsearchproviderkeyword(const CloudPolicySettings* msg) {
  return *msg->defaultsearchproviderkeyword_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::defaultsearchprovidersearchurl(const CloudPolicySettings* msg) {
  return *msg->defaultsearchprovidersearchurl_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::defaultsearchprovidersuggesturl(const CloudPolicySettings* msg) {
  return *msg->defaultsearchprovidersuggesturl_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::defaultsearchprovidericonurl(const CloudPolicySettings* msg) {
  return *msg->defaultsearchprovidericonurl_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::defaultsearchproviderencodings(const CloudPolicySettings* msg) {
  return *msg->defaultsearchproviderencodings_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::defaultsearchprovideralternateurls(const CloudPolicySettings* msg) {
  return *msg->defaultsearchprovideralternateurls_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::defaultsearchproviderimageurl(const CloudPolicySettings* msg) {
  return *msg->defaultsearchproviderimageurl_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::defaultsearchprovidernewtaburl(const CloudPolicySettings* msg) {
  return *msg->defaultsearchprovidernewtaburl_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::defaultsearchprovidersearchurlpostparams(const CloudPolicySettings* msg) {
  return *msg->defaultsearchprovidersearchurlpostparams_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::defaultsearchprovidersuggesturlpostparams(const CloudPolicySettings* msg) {
  return *msg->defaultsearchprovidersuggesturlpostparams_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::defaultsearchproviderimageurlpostparams(const CloudPolicySettings* msg) {
  return *msg->defaultsearchproviderimageurlpostparams_;
}
const ::enterprise_management::IntegerPolicyProto&
CloudPolicySettings::_Internal::defaultcookiessetting(const CloudPolicySettings* msg) {
  return *msg->defaultcookiessetting_;
}
const ::enterprise_management::IntegerPolicyProto&
CloudPolicySettings::_Internal::defaultjavascriptsetting(const CloudPolicySettings* msg) {
  return *msg->defaultjavascriptsetting_;
}
const ::enterprise_management::IntegerPolicyProto&
CloudPolicySettings::_Internal::defaultpopupssetting(const CloudPolicySettings* msg) {
  return *msg->defaultpopupssetting_;
}
const ::enterprise_management::IntegerPolicyProto&
CloudPolicySettings::_Internal::defaultgeolocationsetting(const CloudPolicySettings* msg) {
  return *msg->defaultgeolocationsetting_;
}
const ::enterprise_management::IntegerPolicyProto&
CloudPolicySettings::_Internal::defaultwebbluetoothguardsetting(const CloudPolicySettings* msg) {
  return *msg->defaultwebbluetoothguardsetting_;
}
const ::enterprise_management::IntegerPolicyProto&
CloudPolicySettings::_Internal::defaultsensorssetting(const CloudPolicySettings* msg) {
  return *msg->defaultsensorssetting_;
}
const ::enterprise_management::IntegerPolicyProto&
CloudPolicySettings::_Internal::defaultwebusbguardsetting(const CloudPolicySettings* msg) {
  return *msg->defaultwebusbguardsetting_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::webusballowdevicesforurls(const CloudPolicySettings* msg) {
  return *msg->webusballowdevicesforurls_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::webusbaskforurls(const CloudPolicySettings* msg) {
  return *msg->webusbaskforurls_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::webusbblockedforurls(const CloudPolicySettings* msg) {
  return *msg->webusbblockedforurls_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::cookiesallowedforurls(const CloudPolicySettings* msg) {
  return *msg->cookiesallowedforurls_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::cookiesblockedforurls(const CloudPolicySettings* msg) {
  return *msg->cookiesblockedforurls_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::cookiessessiononlyforurls(const CloudPolicySettings* msg) {
  return *msg->cookiessessiononlyforurls_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::javascriptallowedforurls(const CloudPolicySettings* msg) {
  return *msg->javascriptallowedforurls_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::javascriptblockedforurls(const CloudPolicySettings* msg) {
  return *msg->javascriptblockedforurls_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::legacysamesitecookiebehaviorenabledfordomainlist(const CloudPolicySettings* msg) {
  return *msg->legacysamesitecookiebehaviorenabledfordomainlist_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::lenscameraassistedsearchenabled(const CloudPolicySettings* msg) {
  return *msg->lenscameraassistedsearchenabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::insecureprivatenetworkrequestsallowed(const CloudPolicySettings* msg) {
  return *msg->insecureprivatenetworkrequestsallowed_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::insecureprivatenetworkrequestsallowedforurls(const CloudPolicySettings* msg) {
  return *msg->insecureprivatenetworkrequestsallowedforurls_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::popupsallowedforurls(const CloudPolicySettings* msg) {
  return *msg->popupsallowedforurls_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::popupsblockedforurls(const CloudPolicySettings* msg) {
  return *msg->popupsblockedforurls_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::sensorsallowedforurls(const CloudPolicySettings* msg) {
  return *msg->sensorsallowedforurls_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::sensorsblockedforurls(const CloudPolicySettings* msg) {
  return *msg->sensorsblockedforurls_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::translateenabled(const CloudPolicySettings* msg) {
  return *msg->translateenabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::editbookmarksenabled(const CloudPolicySettings* msg) {
  return *msg->editbookmarksenabled_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::urlblocklist(const CloudPolicySettings* msg) {
  return *msg->urlblocklist_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::urlallowlist(const CloudPolicySettings* msg) {
  return *msg->urlallowlist_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::policyatomicgroupsenabled(const CloudPolicySettings* msg) {
  return *msg->policyatomicgroupsenabled_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::policylistmultiplesourcemergelist(const CloudPolicySettings* msg) {
  return *msg->policylistmultiplesourcemergelist_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::policydictionarymultiplesourcemergelist(const CloudPolicySettings* msg) {
  return *msg->policydictionarymultiplesourcemergelist_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::clouduserpolicymerge(const CloudPolicySettings* msg) {
  return *msg->clouduserpolicymerge_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::enableexperimentalpolicies(const CloudPolicySettings* msg) {
  return *msg->enableexperimentalpolicies_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::disablesafebrowsingproceedanyway(const CloudPolicySettings* msg) {
  return *msg->disablesafebrowsingproceedanyway_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::builtindnsclientenabled(const CloudPolicySettings* msg) {
  return *msg->builtindnsclientenabled_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::dnsoverhttpsmode(const CloudPolicySettings* msg) {
  return *msg->dnsoverhttpsmode_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::dnsoverhttpstemplates(const CloudPolicySettings* msg) {
  return *msg->dnsoverhttpstemplates_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::additionaldnsquerytypesenabled(const CloudPolicySettings* msg) {
  return *msg->additionaldnsquerytypesenabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::sharedclipboardenabled(const CloudPolicySettings* msg) {
  return *msg->sharedclipboardenabled_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::variationsrestrictparameter(const CloudPolicySettings* msg) {
  return *msg->variationsrestrictparameter_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::managedbookmarks(const CloudPolicySettings* msg) {
  return *msg->managedbookmarks_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::forcebrowsersignin(const CloudPolicySettings* msg) {
  return *msg->forcebrowsersignin_;
}
const ::enterprise_management::IntegerPolicyProto&
CloudPolicySettings::_Internal::browsersignin(const CloudPolicySettings* msg) {
  return *msg->browsersignin_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::sslversionmin(const CloudPolicySettings* msg) {
  return *msg->sslversionmin_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::cecpq2enabled(const CloudPolicySettings* msg) {
  return *msg->cecpq2enabled_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::certificatetransparencyenforcementdisabledforurls(const CloudPolicySettings* msg) {
  return *msg->certificatetransparencyenforcementdisabledforurls_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::certificatetransparencyenforcementdisabledforcas(const CloudPolicySettings* msg) {
  return *msg->certificatetransparencyenforcementdisabledforcas_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::certificatetransparencyenforcementdisabledforlegacycas(const CloudPolicySettings* msg) {
  return *msg->certificatetransparencyenforcementdisabledforlegacycas_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::contextualsearchenabled(const CloudPolicySettings* msg) {
  return *msg->contextualsearchenabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::sslerroroverrideallowed(const CloudPolicySettings* msg) {
  return *msg->sslerroroverrideallowed_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::sslerroroverrideallowedfororigins(const CloudPolicySettings* msg) {
  return *msg->sslerroroverrideallowedfororigins_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::alloweddomainsforapps(const CloudPolicySettings* msg) {
  return *msg->alloweddomainsforapps_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::enablemediarouter(const CloudPolicySettings* msg) {
  return *msg->enablemediarouter_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::ntpcontentsuggestionsenabled(const CloudPolicySettings* msg) {
  return *msg->ntpcontentsuggestionsenabled_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::webrtcudpportrange(const CloudPolicySettings* msg) {
  return *msg->webrtcudpportrange_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::componentupdatesenabled(const CloudPolicySettings* msg) {
  return *msg->componentupdatesenabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::cloudpolicyoverridesplatformpolicy(const CloudPolicySettings* msg) {
  return *msg->cloudpolicyoverridesplatformpolicy_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::clouduserpolicyoverridescloudmachinepolicy(const CloudPolicySettings* msg) {
  return *msg->clouduserpolicyoverridescloudmachinepolicy_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::promptfordownloadlocation(const CloudPolicySettings* msg) {
  return *msg->promptfordownloadlocation_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::isolateoriginsandroid(const CloudPolicySettings* msg) {
  return *msg->isolateoriginsandroid_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::siteperprocessandroid(const CloudPolicySettings* msg) {
  return *msg->siteperprocessandroid_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::restrictaccountstopatterns(const CloudPolicySettings* msg) {
  return *msg->restrictaccountstopatterns_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::safebrowsingextendedreportingenabled(const CloudPolicySettings* msg) {
  return *msg->safebrowsingextendedreportingenabled_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::cloudmanagementenrollmenttoken(const CloudPolicySettings* msg) {
  return *msg->cloudmanagementenrollmenttoken_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::overridesecurityrestrictionsoninsecureorigin(const CloudPolicySettings* msg) {
  return *msg->overridesecurityrestrictionsoninsecureorigin_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::urlkeyedanonymizeddatacollectionenabled(const CloudPolicySettings* msg) {
  return *msg->urlkeyedanonymizeddatacollectionenabled_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::coalesceh2connectionswithclientcertificatesforhosts(const CloudPolicySettings* msg) {
  return *msg->coalesceh2connectionswithclientcertificatesforhosts_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::cloudreportingenabled(const CloudPolicySettings* msg) {
  return *msg->cloudreportingenabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::cloudprofilereportingenabled(const CloudPolicySettings* msg) {
  return *msg->cloudprofilereportingenabled_;
}
const ::enterprise_management::IntegerPolicyProto&
CloudPolicySettings::_Internal::cloudreportinguploadfrequency(const CloudPolicySettings* msg) {
  return *msg->cloudreportinguploadfrequency_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::enterprisehardwareplatformapienabled(const CloudPolicySettings* msg) {
  return *msg->enterprisehardwareplatformapienabled_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::hstspolicybypasslist(const CloudPolicySettings* msg) {
  return *msg->hstspolicybypasslist_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::eventpathenabled(const CloudPolicySettings* msg) {
  return *msg->eventpathenabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::paymentmethodqueryenabled(const CloudPolicySettings* msg) {
  return *msg->paymentmethodqueryenabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::scrolltotextfragmentenabled(const CloudPolicySettings* msg) {
  return *msg->scrolltotextfragmentenabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::intensivewakeupthrottlingenabled(const CloudPolicySettings* msg) {
  return *msg->intensivewakeupthrottlingenabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::backforwardcacheenabled(const CloudPolicySettings* msg) {
  return *msg->backforwardcacheenabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::useragentclienthintsgreaseupdateenabled(const CloudPolicySettings* msg) {
  return *msg->useragentclienthintsgreaseupdateenabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::urlparamfilterenabled(const CloudPolicySettings* msg) {
  return *msg->urlparamfilterenabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::insecureformswarningsenabled(const CloudPolicySettings* msg) {
  return *msg->insecureformswarningsenabled_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::lookalikewarningallowlistdomains(const CloudPolicySettings* msg) {
  return *msg->lookalikewarningallowlistdomains_;
}
const ::enterprise_management::IntegerPolicyProto&
CloudPolicySettings::_Internal::tosdialogbehavior(const CloudPolicySettings* msg) {
  return *msg->tosdialogbehavior_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::browsingdatalifetime(const CloudPolicySettings* msg) {
  return *msg->browsingdatalifetime_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::webxrimmersivearenabled(const CloudPolicySettings* msg) {
  return *msg->webxrimmersivearenabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::suppressdifferentoriginsubframedialogs(const CloudPolicySettings* msg) {
  return *msg->suppressdifferentoriginsubframedialogs_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::explicitlyallowednetworkports(const CloudPolicySettings* msg) {
  return *msg->explicitlyallowednetworkports_;
}
const ::enterprise_management::IntegerPolicyProto&
CloudPolicySettings::_Internal::defaultjavascriptjitsetting(const CloudPolicySettings* msg) {
  return *msg->defaultjavascriptjitsetting_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::javascriptjitallowedforsites(const CloudPolicySettings* msg) {
  return *msg->javascriptjitallowedforsites_;
}
const ::enterprise_management::StringListPolicyProto&
CloudPolicySettings::_Internal::javascriptjitblockedforsites(const CloudPolicySettings* msg) {
  return *msg->javascriptjitblockedforsites_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::httpsonlymode(const CloudPolicySettings* msg) {
  return *msg->httpsonlymode_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::corsnonwildcardrequestheaderssupport(const CloudPolicySettings* msg) {
  return *msg->corsnonwildcardrequestheaderssupport_;
}
const ::enterprise_management::IntegerPolicyProto&
CloudPolicySettings::_Internal::useragentreduction(const CloudPolicySettings* msg) {
  return *msg->useragentreduction_;
}
const ::enterprise_management::IntegerPolicyProto&
CloudPolicySettings::_Internal::forcemajorversiontominorpositioninuseragent(const CloudPolicySettings* msg) {
  return *msg->forcemajorversiontominorpositioninuseragent_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::firstpartysetsenabled(const CloudPolicySettings* msg) {
  return *msg->firstpartysetsenabled_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::firstpartysetsoverrides(const CloudPolicySettings* msg) {
  return *msg->firstpartysetsoverrides_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::websqlaccess(const CloudPolicySettings* msg) {
  return *msg->websqlaccess_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::websqlnonsecurecontextenabled(const CloudPolicySettings* msg) {
  return *msg->websqlnonsecurecontextenabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::settimeoutwithout1msclampenabled(const CloudPolicySettings* msg) {
  return *msg->settimeoutwithout1msclampenabled_;
}
const ::enterprise_management::StringPolicyProto&
CloudPolicySettings::_Internal::enterpriseauthenticationapplinkpolicy(const CloudPolicySettings* msg) {
  return *msg->enterpriseauthenticationapplinkpolicy_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::unthrottlednestedtimeoutenabled(const CloudPolicySettings* msg) {
  return *msg->unthrottlednestedtimeoutenabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::encryptedclienthelloenabled(const CloudPolicySettings* msg) {
  return *msg->encryptedclienthelloenabled_;
}
const ::enterprise_management::BooleanPolicyProto&
CloudPolicySettings::_Internal::persistentquotaenabled(const CloudPolicySettings* msg) {
  return *msg->persistentquotaenabled_;
}
void CloudPolicySettings::clear_homepagelocation() {
  if (homepagelocation_ != nullptr) homepagelocation_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void CloudPolicySettings::clear_alternateerrorpagesenabled() {
  if (alternateerrorpagesenabled_ != nullptr) alternateerrorpagesenabled_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void CloudPolicySettings::clear_searchsuggestenabled() {
  if (searchsuggestenabled_ != nullptr) searchsuggestenabled_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void CloudPolicySettings::clear_networkpredictionoptions() {
  if (networkpredictionoptions_ != nullptr) networkpredictionoptions_->Clear();
  _has_bits_[1] &= ~0x00400000u;
}
void CloudPolicySettings::clear_javascriptenabled() {
  if (javascriptenabled_ != nullptr) javascriptenabled_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
void CloudPolicySettings::clear_incognitoenabled() {
  if (incognitoenabled_ != nullptr) incognitoenabled_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
void CloudPolicySettings::clear_incognitomodeavailability() {
  if (incognitomodeavailability_ != nullptr) incognitomodeavailability_->Clear();
  _has_bits_[1] &= ~0x00000100u;
}
void CloudPolicySettings::clear_savingbrowserhistorydisabled() {
  if (savingbrowserhistorydisabled_ != nullptr) savingbrowserhistorydisabled_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
void CloudPolicySettings::clear_printingenabled() {
  if (printingenabled_ != nullptr) printingenabled_->Clear();
  _has_bits_[0] &= ~0x00000040u;
}
void CloudPolicySettings::clear_forcesafesearch() {
  if (forcesafesearch_ != nullptr) forcesafesearch_->Clear();
  _has_bits_[1] &= ~0x00001000u;
}
void CloudPolicySettings::clear_forcegooglesafesearch() {
  if (forcegooglesafesearch_ != nullptr) forcegooglesafesearch_->Clear();
  _has_bits_[1] &= ~0x02000000u;
}
void CloudPolicySettings::clear_forceyoutubesafetymode() {
  if (forceyoutubesafetymode_ != nullptr) forceyoutubesafetymode_->Clear();
  _has_bits_[1] &= ~0x04000000u;
}
void CloudPolicySettings::clear_forceyoutuberestrict() {
  if (forceyoutuberestrict_ != nullptr) forceyoutuberestrict_->Clear();
  _has_bits_[2] &= ~0x00000020u;
}
void CloudPolicySettings::clear_safebrowsingenabled() {
  if (safebrowsingenabled_ != nullptr) safebrowsingenabled_->Clear();
  _has_bits_[0] &= ~0x00000080u;
}
void CloudPolicySettings::clear_safebrowsingprotectionlevel() {
  if (safebrowsingprotectionlevel_ != nullptr) safebrowsingprotectionlevel_->Clear();
  _has_bits_[3] &= ~0x00000080u;
}
void CloudPolicySettings::clear_metricsreportingenabled() {
  if (metricsreportingenabled_ != nullptr) metricsreportingenabled_->Clear();
  _has_bits_[0] &= ~0x00000100u;
}
void CloudPolicySettings::clear_passwordmanagerenabled() {
  if (passwordmanagerenabled_ != nullptr) passwordmanagerenabled_->Clear();
  _has_bits_[0] &= ~0x00000200u;
}
void CloudPolicySettings::clear_passwordleakdetectionenabled() {
  if (passwordleakdetectionenabled_ != nullptr) passwordleakdetectionenabled_->Clear();
  _has_bits_[2] &= ~0x40000000u;
}
void CloudPolicySettings::clear_autofillenabled() {
  if (autofillenabled_ != nullptr) autofillenabled_->Clear();
  _has_bits_[0] &= ~0x00000400u;
}
void CloudPolicySettings::clear_autofilladdressenabled() {
  if (autofilladdressenabled_ != nullptr) autofilladdressenabled_->Clear();
  _has_bits_[2] &= ~0x00100000u;
}
void CloudPolicySettings::clear_autofillcreditcardenabled() {
  if (autofillcreditcardenabled_ != nullptr) autofillcreditcardenabled_->Clear();
  _has_bits_[2] &= ~0x00000080u;
}
void CloudPolicySettings::clear_syncdisabled() {
  if (syncdisabled_ != nullptr) syncdisabled_->Clear();
  _has_bits_[0] &= ~0x00000800u;
}
void CloudPolicySettings::clear_synctypeslistdisabled() {
  if (synctypeslistdisabled_ != nullptr) synctypeslistdisabled_->Clear();
  _has_bits_[3] &= ~0x00000020u;
}
void CloudPolicySettings::clear_signinallowed() {
  if (signinallowed_ != nullptr) signinallowed_->Clear();
  _has_bits_[1] &= ~0x00004000u;
}
void CloudPolicySettings::clear_proxymode() {
  if (proxymode_ != nullptr) proxymode_->Clear();
  _has_bits_[0] &= ~0x00001000u;
}
void CloudPolicySettings::clear_proxyservermode() {
  if (proxyservermode_ != nullptr) proxyservermode_->Clear();
  _has_bits_[0] &= ~0x00002000u;
}
void CloudPolicySettings::clear_proxyserver() {
  if (proxyserver_ != nullptr) proxyserver_->Clear();
  _has_bits_[0] &= ~0x00004000u;
}
void CloudPolicySettings::clear_proxypacurl() {
  if (proxypacurl_ != nullptr) proxypacurl_->Clear();
  _has_bits_[0] &= ~0x00008000u;
}
void CloudPolicySettings::clear_proxybypasslist() {
  if (proxybypasslist_ != nullptr) proxybypasslist_->Clear();
  _has_bits_[0] &= ~0x00010000u;
}
void CloudPolicySettings::clear_proxysettings() {
  if (proxysettings_ != nullptr) proxysettings_->Clear();
  _has_bits_[1] &= ~0x00000200u;
}
void CloudPolicySettings::clear_authschemes() {
  if (authschemes_ != nullptr) authschemes_->Clear();
  _has_bits_[0] &= ~0x00020000u;
}
void CloudPolicySettings::clear_allhttpauthschemesallowedfororigins() {
  if (allhttpauthschemesallowedfororigins_ != nullptr) allhttpauthschemesallowedfororigins_->Clear();
  _has_bits_[4] &= ~0x00001000u;
}
void CloudPolicySettings::clear_disableauthnegotiatecnamelookup() {
  if (disableauthnegotiatecnamelookup_ != nullptr) disableauthnegotiatecnamelookup_->Clear();
  _has_bits_[0] &= ~0x00040000u;
}
void CloudPolicySettings::clear_authserverallowlist() {
  if (authserverallowlist_ != nullptr) authserverallowlist_->Clear();
  _has_bits_[3] &= ~0x00004000u;
}
void CloudPolicySettings::clear_authnegotiatedelegateallowlist() {
  if (authnegotiatedelegateallowlist_ != nullptr) authnegotiatedelegateallowlist_->Clear();
  _has_bits_[3] &= ~0x00002000u;
}
void CloudPolicySettings::clear_authandroidnegotiateaccounttype() {
  if (authandroidnegotiateaccounttype_ != nullptr) authandroidnegotiateaccounttype_->Clear();
  _has_bits_[1] &= ~0x10000000u;
}
void CloudPolicySettings::clear_ntlmv2enabled() {
  if (ntlmv2enabled_ != nullptr) ntlmv2enabled_->Clear();
  _has_bits_[2] &= ~0x00000100u;
}
void CloudPolicySettings::clear_blockthirdpartycookies() {
  if (blockthirdpartycookies_ != nullptr) blockthirdpartycookies_->Clear();
  _has_bits_[0] &= ~0x00080000u;
}
void CloudPolicySettings::clear_defaultsearchproviderenabled() {
  if (defaultsearchproviderenabled_ != nullptr) defaultsearchproviderenabled_->Clear();
  _has_bits_[0] &= ~0x00100000u;
}
void CloudPolicySettings::clear_defaultsearchprovidername() {
  if (defaultsearchprovidername_ != nullptr) defaultsearchprovidername_->Clear();
  _has_bits_[0] &= ~0x00200000u;
}
void CloudPolicySettings::clear_defaultsearchproviderkeyword() {
  if (defaultsearchproviderkeyword_ != nullptr) defaultsearchproviderkeyword_->Clear();
  _has_bits_[0] &= ~0x00400000u;
}
void CloudPolicySettings::clear_defaultsearchprovidersearchurl() {
  if (defaultsearchprovidersearchurl_ != nullptr) defaultsearchprovidersearchurl_->Clear();
  _has_bits_[0] &= ~0x00800000u;
}
void CloudPolicySettings::clear_defaultsearchprovidersuggesturl() {
  if (defaultsearchprovidersuggesturl_ != nullptr) defaultsearchprovidersuggesturl_->Clear();
  _has_bits_[0] &= ~0x01000000u;
}
void CloudPolicySettings::clear_defaultsearchprovidericonurl() {
  if (defaultsearchprovidericonurl_ != nullptr) defaultsearchprovidericonurl_->Clear();
  _has_bits_[0] &= ~0x02000000u;
}
void CloudPolicySettings::clear_defaultsearchproviderencodings() {
  if (defaultsearchproviderencodings_ != nullptr) defaultsearchproviderencodings_->Clear();
  _has_bits_[0] &= ~0x04000000u;
}
void CloudPolicySettings::clear_defaultsearchprovideralternateurls() {
  if (defaultsearchprovideralternateurls_ != nullptr) defaultsearchprovideralternateurls_->Clear();
  _has_bits_[1] &= ~0x00000800u;
}
void CloudPolicySettings::clear_defaultsearchproviderimageurl() {
  if (defaultsearchproviderimageurl_ != nullptr) defaultsearchproviderimageurl_->Clear();
  _has_bits_[1] &= ~0x00020000u;
}
void CloudPolicySettings::clear_defaultsearchprovidernewtaburl() {
  if (defaultsearchprovidernewtaburl_ != nullptr) defaultsearchprovidernewtaburl_->Clear();
  _has_bits_[1] &= ~0x00200000u;
}
void CloudPolicySettings::clear_defaultsearchprovidersearchurlpostparams() {
  if (defaultsearchprovidersearchurlpostparams_ != nullptr) defaultsearchprovidersearchurlpostparams_->Clear();
  _has_bits_[1] &= ~0x00040000u;
}
void CloudPolicySettings::clear_defaultsearchprovidersuggesturlpostparams() {
  if (defaultsearchprovidersuggesturlpostparams_ != nullptr) defaultsearchprovidersuggesturlpostparams_->Clear();
  _has_bits_[1] &= ~0x00080000u;
}
void CloudPolicySettings::clear_defaultsearchproviderimageurlpostparams() {
  if (defaultsearchproviderimageurlpostparams_ != nullptr) defaultsearchproviderimageurlpostparams_->Clear();
  _has_bits_[1] &= ~0x00100000u;
}
void CloudPolicySettings::clear_defaultcookiessetting() {
  if (defaultcookiessetting_ != nullptr) defaultcookiessetting_->Clear();
  _has_bits_[0] &= ~0x08000000u;
}
void CloudPolicySettings::clear_defaultjavascriptsetting() {
  if (defaultjavascriptsetting_ != nullptr) defaultjavascriptsetting_->Clear();
  _has_bits_[0] &= ~0x10000000u;
}
void CloudPolicySettings::clear_defaultpopupssetting() {
  if (defaultpopupssetting_ != nullptr) defaultpopupssetting_->Clear();
  _has_bits_[0] &= ~0x20000000u;
}
void CloudPolicySettings::clear_defaultgeolocationsetting() {
  if (defaultgeolocationsetting_ != nullptr) defaultgeolocationsetting_->Clear();
  _has_bits_[0] &= ~0x40000000u;
}
void CloudPolicySettings::clear_defaultwebbluetoothguardsetting() {
  if (defaultwebbluetoothguardsetting_ != nullptr) defaultwebbluetoothguardsetting_->Clear();
  _has_bits_[1] &= ~0x20000000u;
}
void CloudPolicySettings::clear_defaultsensorssetting() {
  if (defaultsensorssetting_ != nullptr) defaultsensorssetting_->Clear();
  _has_bits_[3] &= ~0x00010000u;
}
void CloudPolicySettings::clear_defaultwebusbguardsetting() {
  if (defaultwebusbguardsetting_ != nullptr) defaultwebusbguardsetting_->Clear();
  _has_bits_[2] &= ~0x00001000u;
}
void CloudPolicySettings::clear_webusballowdevicesforurls() {
  if (webusballowdevicesforurls_ != nullptr) webusballowdevicesforurls_->Clear();
  _has_bits_[2] &= ~0x01000000u;
}
void CloudPolicySettings::clear_webusbaskforurls() {
  if (webusbaskforurls_ != nullptr) webusbaskforurls_->Clear();
  _has_bits_[2] &= ~0x00008000u;
}
void CloudPolicySettings::clear_webusbblockedforurls() {
  if (webusbblockedforurls_ != nullptr) webusbblockedforurls_->Clear();
  _has_bits_[2] &= ~0x00010000u;
}
void CloudPolicySettings::clear_cookiesallowedforurls() {
  if (cookiesallowedforurls_ != nullptr) cookiesallowedforurls_->Clear();
  _has_bits_[1] &= ~0x00000020u;
}
void CloudPolicySettings::clear_cookiesblockedforurls() {
  if (cookiesblockedforurls_ != nullptr) cookiesblockedforurls_->Clear();
  _has_bits_[0] &= ~0x80000000u;
}
void CloudPolicySettings::clear_cookiessessiononlyforurls() {
  if (cookiessessiononlyforurls_ != nullptr) cookiessessiononlyforurls_->Clear();
  _has_bits_[1] &= ~0x00000001u;
}
void CloudPolicySettings::clear_javascriptallowedforurls() {
  if (javascriptallowedforurls_ != nullptr) javascriptallowedforurls_->Clear();
  _has_bits_[1] &= ~0x00000002u;
}
void CloudPolicySettings::clear_javascriptblockedforurls() {
  if (javascriptblockedforurls_ != nullptr) javascriptblockedforurls_->Clear();
  _has_bits_[1] &= ~0x00000004u;
}
void CloudPolicySettings::clear_legacysamesitecookiebehaviorenabledfordomainlist() {
  if (legacysamesitecookiebehaviorenabledfordomainlist_ != nullptr) legacysamesitecookiebehaviorenabledfordomainlist_->Clear();
  _has_bits_[3] &= ~0x00000008u;
}
void CloudPolicySettings::clear_lenscameraassistedsearchenabled() {
  if (lenscameraassistedsearchenabled_ != nullptr) lenscameraassistedsearchenabled_->Clear();
  _has_bits_[3] &= ~0x40000000u;
}
void CloudPolicySettings::clear_insecureprivatenetworkrequestsallowed() {
  if (insecureprivatenetworkrequestsallowed_ != nullptr) insecureprivatenetworkrequestsallowed_->Clear();
  _has_bits_[3] &= ~0x00100000u;
}
void CloudPolicySettings::clear_insecureprivatenetworkrequestsallowedforurls() {
  if (insecureprivatenetworkrequestsallowedforurls_ != nullptr) insecureprivatenetworkrequestsallowedforurls_->Clear();
  _has_bits_[3] &= ~0x00200000u;
}
void CloudPolicySettings::clear_popupsallowedforurls() {
  if (popupsallowedforurls_ != nullptr) popupsallowedforurls_->Clear();
  _has_bits_[1] &= ~0x00000008u;
}
void CloudPolicySettings::clear_popupsblockedforurls() {
  if (popupsblockedforurls_ != nullptr) popupsblockedforurls_->Clear();
  _has_bits_[1] &= ~0x00000010u;
}
void CloudPolicySettings::clear_sensorsallowedforurls() {
  if (sensorsallowedforurls_ != nullptr) sensorsallowedforurls_->Clear();
  _has_bits_[3] &= ~0x00020000u;
}
void CloudPolicySettings::clear_sensorsblockedforurls() {
  if (sensorsblockedforurls_ != nullptr) sensorsblockedforurls_->Clear();
  _has_bits_[3] &= ~0x00040000u;
}
void CloudPolicySettings::clear_translateenabled() {
  if (translateenabled_ != nullptr) translateenabled_->Clear();
  _has_bits_[1] &= ~0x00000040u;
}
void CloudPolicySettings::clear_editbookmarksenabled() {
  if (editbookmarksenabled_ != nullptr) editbookmarksenabled_->Clear();
  _has_bits_[1] &= ~0x00000080u;
}
void CloudPolicySettings::clear_urlblocklist() {
  if (urlblocklist_ != nullptr) urlblocklist_->Clear();
  _has_bits_[3] &= ~0x00000800u;
}
void CloudPolicySettings::clear_urlallowlist() {
  if (urlallowlist_ != nullptr) urlallowlist_->Clear();
  _has_bits_[3] &= ~0x00001000u;
}
void CloudPolicySettings::clear_policyatomicgroupsenabled() {
  if (policyatomicgroupsenabled_ != nullptr) policyatomicgroupsenabled_->Clear();
  _has_bits_[3] &= ~0x00000001u;
}
void CloudPolicySettings::clear_policylistmultiplesourcemergelist() {
  if (policylistmultiplesourcemergelist_ != nullptr) policylistmultiplesourcemergelist_->Clear();
  _has_bits_[2] &= ~0x10000000u;
}
void CloudPolicySettings::clear_policydictionarymultiplesourcemergelist() {
  if (policydictionarymultiplesourcemergelist_ != nullptr) policydictionarymultiplesourcemergelist_->Clear();
  _has_bits_[2] &= ~0x20000000u;
}
void CloudPolicySettings::clear_clouduserpolicymerge() {
  if (clouduserpolicymerge_ != nullptr) clouduserpolicymerge_->Clear();
  _has_bits_[4] &= ~0x00000001u;
}
void CloudPolicySettings::clear_enableexperimentalpolicies() {
  if (enableexperimentalpolicies_ != nullptr) enableexperimentalpolicies_->Clear();
  _has_bits_[3] &= ~0x00000200u;
}
void CloudPolicySettings::clear_disablesafebrowsingproceedanyway() {
  if (disablesafebrowsingproceedanyway_ != nullptr) disablesafebrowsingproceedanyway_->Clear();
  _has_bits_[1] &= ~0x00000400u;
}
void CloudPolicySettings::clear_builtindnsclientenabled() {
  if (builtindnsclientenabled_ != nullptr) builtindnsclientenabled_->Clear();
  _has_bits_[1] &= ~0x00002000u;
}
void CloudPolicySettings::clear_dnsoverhttpsmode() {
  if (dnsoverhttpsmode_ != nullptr) dnsoverhttpsmode_->Clear();
  _has_bits_[2] &= ~0x80000000u;
}
void CloudPolicySettings::clear_dnsoverhttpstemplates() {
  if (dnsoverhttpstemplates_ != nullptr) dnsoverhttpstemplates_->Clear();
  _has_bits_[3] &= ~0x00000010u;
}
void CloudPolicySettings::clear_additionaldnsquerytypesenabled() {
  if (additionaldnsquerytypesenabled_ != nullptr) additionaldnsquerytypesenabled_->Clear();
  _has_bits_[3] &= ~0x80000000u;
}
void CloudPolicySettings::clear_sharedclipboardenabled() {
  if (sharedclipboardenabled_ != nullptr) sharedclipboardenabled_->Clear();
  _has_bits_[3] &= ~0x00000004u;
}
void CloudPolicySettings::clear_variationsrestrictparameter() {
  if (variationsrestrictparameter_ != nullptr) variationsrestrictparameter_->Clear();
  _has_bits_[1] &= ~0x00008000u;
}
void CloudPolicySettings::clear_managedbookmarks() {
  if (managedbookmarks_ != nullptr) managedbookmarks_->Clear();
  _has_bits_[1] &= ~0x00010000u;
}
void CloudPolicySettings::clear_forcebrowsersignin() {
  if (forcebrowsersignin_ != nullptr) forcebrowsersignin_->Clear();
  _has_bits_[2] &= ~0x00000010u;
}
void CloudPolicySettings::clear_browsersignin() {
  if (browsersignin_ != nullptr) browsersignin_->Clear();
  _has_bits_[2] &= ~0x02000000u;
}
void CloudPolicySettings::clear_sslversionmin() {
  if (sslversionmin_ != nullptr) sslversionmin_->Clear();
  _has_bits_[1] &= ~0x00800000u;
}
void CloudPolicySettings::clear_cecpq2enabled() {
  if (cecpq2enabled_ != nullptr) cecpq2enabled_->Clear();
  _has_bits_[3] &= ~0x10000000u;
}
void CloudPolicySettings::clear_certificatetransparencyenforcementdisabledforurls() {
  if (certificatetransparencyenforcementdisabledforurls_ != nullptr) certificatetransparencyenforcementdisabledforurls_->Clear();
  _has_bits_[2] &= ~0x00000001u;
}
void CloudPolicySettings::clear_certificatetransparencyenforcementdisabledforcas() {
  if (certificatetransparencyenforcementdisabledforcas_ != nullptr) certificatetransparencyenforcementdisabledforcas_->Clear();
  _has_bits_[2] &= ~0x00002000u;
}
void CloudPolicySettings::clear_certificatetransparencyenforcementdisabledforlegacycas() {
  if (certificatetransparencyenforcementdisabledforlegacycas_ != nullptr) certificatetransparencyenforcementdisabledforlegacycas_->Clear();
  _has_bits_[2] &= ~0x00004000u;
}
void CloudPolicySettings::clear_contextualsearchenabled() {
  if (contextualsearchenabled_ != nullptr) contextualsearchenabled_->Clear();
  _has_bits_[1] &= ~0x01000000u;
}
void CloudPolicySettings::clear_sslerroroverrideallowed() {
  if (sslerroroverrideallowed_ != nullptr) sslerroroverrideallowed_->Clear();
  _has_bits_[1] &= ~0x08000000u;
}
void CloudPolicySettings::clear_sslerroroverrideallowedfororigins() {
  if (sslerroroverrideallowedfororigins_ != nullptr) sslerroroverrideallowedfororigins_->Clear();
  _has_bits_[3] &= ~0x02000000u;
}
void CloudPolicySettings::clear_alloweddomainsforapps() {
  if (alloweddomainsforapps_ != nullptr) alloweddomainsforapps_->Clear();
  _has_bits_[1] &= ~0x40000000u;
}
void CloudPolicySettings::clear_enablemediarouter() {
  if (enablemediarouter_ != nullptr) enablemediarouter_->Clear();
  _has_bits_[1] &= ~0x80000000u;
}
void CloudPolicySettings::clear_ntpcontentsuggestionsenabled() {
  if (ntpcontentsuggestionsenabled_ != nullptr) ntpcontentsuggestionsenabled_->Clear();
  _has_bits_[2] &= ~0x00000002u;
}
void CloudPolicySettings::clear_webrtcudpportrange() {
  if (webrtcudpportrange_ != nullptr) webrtcudpportrange_->Clear();
  _has_bits_[2] &= ~0x00000004u;
}
void CloudPolicySettings::clear_componentupdatesenabled() {
  if (componentupdatesenabled_ != nullptr) componentupdatesenabled_->Clear();
  _has_bits_[2] &= ~0x00000008u;
}
void CloudPolicySettings::clear_cloudpolicyoverridesplatformpolicy() {
  if (cloudpolicyoverridesplatformpolicy_ != nullptr) cloudpolicyoverridesplatformpolicy_->Clear();
  _has_bits_[2] &= ~0x00000040u;
}
void CloudPolicySettings::clear_clouduserpolicyoverridescloudmachinepolicy() {
  if (clouduserpolicyoverridescloudmachinepolicy_ != nullptr) clouduserpolicyoverridescloudmachinepolicy_->Clear();
  _has_bits_[4] &= ~0x00000020u;
}
void CloudPolicySettings::clear_promptfordownloadlocation() {
  if (promptfordownloadlocation_ != nullptr) promptfordownloadlocation_->Clear();
  _has_bits_[2] &= ~0x00000200u;
}
void CloudPolicySettings::clear_isolateoriginsandroid() {
  if (isolateoriginsandroid_ != nullptr) isolateoriginsandroid_->Clear();
  _has_bits_[2] &= ~0x00020000u;
}
void CloudPolicySettings::clear_siteperprocessandroid() {
  if (siteperprocessandroid_ != nullptr) siteperprocessandroid_->Clear();
  _has_bits_[2] &= ~0x00040000u;
}
void CloudPolicySettings::clear_restrictaccountstopatterns() {
  if (restrictaccountstopatterns_ != nullptr) restrictaccountstopatterns_->Clear();
  _has_bits_[2] &= ~0x00000400u;
}
void CloudPolicySettings::clear_safebrowsingextendedreportingenabled() {
  if (safebrowsingextendedreportingenabled_ != nullptr) safebrowsingextendedreportingenabled_->Clear();
  _has_bits_[2] &= ~0x00000800u;
}
void CloudPolicySettings::clear_cloudmanagementenrollmenttoken() {
  if (cloudmanagementenrollmenttoken_ != nullptr) cloudmanagementenrollmenttoken_->Clear();
  _has_bits_[2] &= ~0x08000000u;
}
void CloudPolicySettings::clear_overridesecurityrestrictionsoninsecureorigin() {
  if (overridesecurityrestrictionsoninsecureorigin_ != nullptr) overridesecurityrestrictionsoninsecureorigin_->Clear();
  _has_bits_[2] &= ~0x00080000u;
}
void CloudPolicySettings::clear_urlkeyedanonymizeddatacollectionenabled() {
  if (urlkeyedanonymizeddatacollectionenabled_ != nullptr) urlkeyedanonymizeddatacollectionenabled_->Clear();
  _has_bits_[2] &= ~0x00200000u;
}
void CloudPolicySettings::clear_coalesceh2connectionswithclientcertificatesforhosts() {
  if (coalesceh2connectionswithclientcertificatesforhosts_ != nullptr) coalesceh2connectionswithclientcertificatesforhosts_->Clear();
  _has_bits_[2] &= ~0x00400000u;
}
void CloudPolicySettings::clear_cloudreportingenabled() {
  if (cloudreportingenabled_ != nullptr) cloudreportingenabled_->Clear();
  _has_bits_[2] &= ~0x04000000u;
}
void CloudPolicySettings::clear_cloudprofilereportingenabled() {
  if (cloudprofilereportingenabled_ != nullptr) cloudprofilereportingenabled_->Clear();
  _has_bits_[4] &= ~0x00000200u;
}
void CloudPolicySettings::clear_cloudreportinguploadfrequency() {
  if (cloudreportinguploadfrequency_ != nullptr) cloudreportinguploadfrequency_->Clear();
  _has_bits_[4] &= ~0x00002000u;
}
void CloudPolicySettings::clear_enterprisehardwareplatformapienabled() {
  if (enterprisehardwareplatformapienabled_ != nullptr) enterprisehardwareplatformapienabled_->Clear();
  _has_bits_[2] &= ~0x00800000u;
}
void CloudPolicySettings::clear_hstspolicybypasslist() {
  if (hstspolicybypasslist_ != nullptr) hstspolicybypasslist_->Clear();
  _has_bits_[3] &= ~0x00000002u;
}
void CloudPolicySettings::clear_eventpathenabled() {
  if (eventpathenabled_ != nullptr) eventpathenabled_->Clear();
  _has_bits_[4] &= ~0x00100000u;
}
void CloudPolicySettings::clear_paymentmethodqueryenabled() {
  if (paymentmethodqueryenabled_ != nullptr) paymentmethodqueryenabled_->Clear();
  _has_bits_[3] &= ~0x00000040u;
}
void CloudPolicySettings::clear_scrolltotextfragmentenabled() {
  if (scrolltotextfragmentenabled_ != nullptr) scrolltotextfragmentenabled_->Clear();
  _has_bits_[3] &= ~0x00000100u;
}
void CloudPolicySettings::clear_intensivewakeupthrottlingenabled() {
  if (intensivewakeupthrottlingenabled_ != nullptr) intensivewakeupthrottlingenabled_->Clear();
  _has_bits_[3] &= ~0x00000400u;
}
void CloudPolicySettings::clear_backforwardcacheenabled() {
  if (backforwardcacheenabled_ != nullptr) backforwardcacheenabled_->Clear();
  _has_bits_[3] &= ~0x00080000u;
}
void CloudPolicySettings::clear_useragentclienthintsgreaseupdateenabled() {
  if (useragentclienthintsgreaseupdateenabled_ != nullptr) useragentclienthintsgreaseupdateenabled_->Clear();
  _has_bits_[4] &= ~0x00000080u;
}
void CloudPolicySettings::clear_urlparamfilterenabled() {
  if (urlparamfilterenabled_ != nullptr) urlparamfilterenabled_->Clear();
  _has_bits_[4] &= ~0x00040000u;
}
void CloudPolicySettings::clear_insecureformswarningsenabled() {
  if (insecureformswarningsenabled_ != nullptr) insecureformswarningsenabled_->Clear();
  _has_bits_[3] &= ~0x00008000u;
}
void CloudPolicySettings::clear_lookalikewarningallowlistdomains() {
  if (lookalikewarningallowlistdomains_ != nullptr) lookalikewarningallowlistdomains_->Clear();
  _has_bits_[3] &= ~0x00400000u;
}
void CloudPolicySettings::clear_tosdialogbehavior() {
  if (tosdialogbehavior_ != nullptr) tosdialogbehavior_->Clear();
  _has_bits_[3] &= ~0x01000000u;
}
void CloudPolicySettings::clear_browsingdatalifetime() {
  if (browsingdatalifetime_ != nullptr) browsingdatalifetime_->Clear();
  _has_bits_[3] &= ~0x00800000u;
}
void CloudPolicySettings::clear_webxrimmersivearenabled() {
  if (webxrimmersivearenabled_ != nullptr) webxrimmersivearenabled_->Clear();
  _has_bits_[3] &= ~0x04000000u;
}
void CloudPolicySettings::clear_suppressdifferentoriginsubframedialogs() {
  if (suppressdifferentoriginsubframedialogs_ != nullptr) suppressdifferentoriginsubframedialogs_->Clear();
  _has_bits_[3] &= ~0x08000000u;
}
void CloudPolicySettings::clear_explicitlyallowednetworkports() {
  if (explicitlyallowednetworkports_ != nullptr) explicitlyallowednetworkports_->Clear();
  _has_bits_[3] &= ~0x20000000u;
}
void CloudPolicySettings::clear_defaultjavascriptjitsetting() {
  if (defaultjavascriptjitsetting_ != nullptr) defaultjavascriptjitsetting_->Clear();
  _has_bits_[4] &= ~0x00000002u;
}
void CloudPolicySettings::clear_javascriptjitallowedforsites() {
  if (javascriptjitallowedforsites_ != nullptr) javascriptjitallowedforsites_->Clear();
  _has_bits_[4] &= ~0x00000004u;
}
void CloudPolicySettings::clear_javascriptjitblockedforsites() {
  if (javascriptjitblockedforsites_ != nullptr) javascriptjitblockedforsites_->Clear();
  _has_bits_[4] &= ~0x00000008u;
}
void CloudPolicySettings::clear_httpsonlymode() {
  if (httpsonlymode_ != nullptr) httpsonlymode_->Clear();
  _has_bits_[4] &= ~0x00000010u;
}
void CloudPolicySettings::clear_corsnonwildcardrequestheaderssupport() {
  if (corsnonwildcardrequestheaderssupport_ != nullptr) corsnonwildcardrequestheaderssupport_->Clear();
  _has_bits_[4] &= ~0x00000040u;
}
void CloudPolicySettings::clear_useragentreduction() {
  if (useragentreduction_ != nullptr) useragentreduction_->Clear();
  _has_bits_[4] &= ~0x00000100u;
}
void CloudPolicySettings::clear_forcemajorversiontominorpositioninuseragent() {
  if (forcemajorversiontominorpositioninuseragent_ != nullptr) forcemajorversiontominorpositioninuseragent_->Clear();
  _has_bits_[4] &= ~0x00000800u;
}
void CloudPolicySettings::clear_firstpartysetsenabled() {
  if (firstpartysetsenabled_ != nullptr) firstpartysetsenabled_->Clear();
  _has_bits_[4] &= ~0x00000400u;
}
void CloudPolicySettings::clear_firstpartysetsoverrides() {
  if (firstpartysetsoverrides_ != nullptr) firstpartysetsoverrides_->Clear();
  _has_bits_[4] &= ~0x00010000u;
}
void CloudPolicySettings::clear_websqlaccess() {
  if (websqlaccess_ != nullptr) websqlaccess_->Clear();
  _has_bits_[4] &= ~0x00004000u;
}
void CloudPolicySettings::clear_websqlnonsecurecontextenabled() {
  if (websqlnonsecurecontextenabled_ != nullptr) websqlnonsecurecontextenabled_->Clear();
  _has_bits_[4] &= ~0x00200000u;
}
void CloudPolicySettings::clear_settimeoutwithout1msclampenabled() {
  if (settimeoutwithout1msclampenabled_ != nullptr) settimeoutwithout1msclampenabled_->Clear();
  _has_bits_[4] &= ~0x00008000u;
}
void CloudPolicySettings::clear_enterpriseauthenticationapplinkpolicy() {
  if (enterpriseauthenticationapplinkpolicy_ != nullptr) enterpriseauthenticationapplinkpolicy_->Clear();
  _has_bits_[4] &= ~0x00020000u;
}
void CloudPolicySettings::clear_unthrottlednestedtimeoutenabled() {
  if (unthrottlednestedtimeoutenabled_ != nullptr) unthrottlednestedtimeoutenabled_->Clear();
  _has_bits_[4] &= ~0x00080000u;
}
void CloudPolicySettings::clear_encryptedclienthelloenabled() {
  if (encryptedclienthelloenabled_ != nullptr) encryptedclienthelloenabled_->Clear();
  _has_bits_[4] &= ~0x00400000u;
}
void CloudPolicySettings::clear_persistentquotaenabled() {
  if (persistentquotaenabled_ != nullptr) persistentquotaenabled_->Clear();
  _has_bits_[4] &= ~0x00800000u;
}
CloudPolicySettings::CloudPolicySettings(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:enterprise_management.CloudPolicySettings)
}
CloudPolicySettings::CloudPolicySettings(const CloudPolicySettings& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
  if (from._internal_has_homepagelocation()) {
    homepagelocation_ = new ::enterprise_management::StringPolicyProto(*from.homepagelocation_);
  } else {
    homepagelocation_ = nullptr;
  }
  if (from._internal_has_alternateerrorpagesenabled()) {
    alternateerrorpagesenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.alternateerrorpagesenabled_);
  } else {
    alternateerrorpagesenabled_ = nullptr;
  }
  if (from._internal_has_searchsuggestenabled()) {
    searchsuggestenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.searchsuggestenabled_);
  } else {
    searchsuggestenabled_ = nullptr;
  }
  if (from._internal_has_javascriptenabled()) {
    javascriptenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.javascriptenabled_);
  } else {
    javascriptenabled_ = nullptr;
  }
  if (from._internal_has_incognitoenabled()) {
    incognitoenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.incognitoenabled_);
  } else {
    incognitoenabled_ = nullptr;
  }
  if (from._internal_has_savingbrowserhistorydisabled()) {
    savingbrowserhistorydisabled_ = new ::enterprise_management::BooleanPolicyProto(*from.savingbrowserhistorydisabled_);
  } else {
    savingbrowserhistorydisabled_ = nullptr;
  }
  if (from._internal_has_printingenabled()) {
    printingenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.printingenabled_);
  } else {
    printingenabled_ = nullptr;
  }
  if (from._internal_has_safebrowsingenabled()) {
    safebrowsingenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.safebrowsingenabled_);
  } else {
    safebrowsingenabled_ = nullptr;
  }
  if (from._internal_has_metricsreportingenabled()) {
    metricsreportingenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.metricsreportingenabled_);
  } else {
    metricsreportingenabled_ = nullptr;
  }
  if (from._internal_has_passwordmanagerenabled()) {
    passwordmanagerenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.passwordmanagerenabled_);
  } else {
    passwordmanagerenabled_ = nullptr;
  }
  if (from._internal_has_autofillenabled()) {
    autofillenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.autofillenabled_);
  } else {
    autofillenabled_ = nullptr;
  }
  if (from._internal_has_syncdisabled()) {
    syncdisabled_ = new ::enterprise_management::BooleanPolicyProto(*from.syncdisabled_);
  } else {
    syncdisabled_ = nullptr;
  }
  if (from._internal_has_proxymode()) {
    proxymode_ = new ::enterprise_management::StringPolicyProto(*from.proxymode_);
  } else {
    proxymode_ = nullptr;
  }
  if (from._internal_has_proxyservermode()) {
    proxyservermode_ = new ::enterprise_management::IntegerPolicyProto(*from.proxyservermode_);
  } else {
    proxyservermode_ = nullptr;
  }
  if (from._internal_has_proxyserver()) {
    proxyserver_ = new ::enterprise_management::StringPolicyProto(*from.proxyserver_);
  } else {
    proxyserver_ = nullptr;
  }
  if (from._internal_has_proxypacurl()) {
    proxypacurl_ = new ::enterprise_management::StringPolicyProto(*from.proxypacurl_);
  } else {
    proxypacurl_ = nullptr;
  }
  if (from._internal_has_proxybypasslist()) {
    proxybypasslist_ = new ::enterprise_management::StringPolicyProto(*from.proxybypasslist_);
  } else {
    proxybypasslist_ = nullptr;
  }
  if (from._internal_has_authschemes()) {
    authschemes_ = new ::enterprise_management::StringPolicyProto(*from.authschemes_);
  } else {
    authschemes_ = nullptr;
  }
  if (from._internal_has_disableauthnegotiatecnamelookup()) {
    disableauthnegotiatecnamelookup_ = new ::enterprise_management::BooleanPolicyProto(*from.disableauthnegotiatecnamelookup_);
  } else {
    disableauthnegotiatecnamelookup_ = nullptr;
  }
  if (from._internal_has_blockthirdpartycookies()) {
    blockthirdpartycookies_ = new ::enterprise_management::BooleanPolicyProto(*from.blockthirdpartycookies_);
  } else {
    blockthirdpartycookies_ = nullptr;
  }
  if (from._internal_has_defaultsearchproviderenabled()) {
    defaultsearchproviderenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.defaultsearchproviderenabled_);
  } else {
    defaultsearchproviderenabled_ = nullptr;
  }
  if (from._internal_has_defaultsearchprovidername()) {
    defaultsearchprovidername_ = new ::enterprise_management::StringPolicyProto(*from.defaultsearchprovidername_);
  } else {
    defaultsearchprovidername_ = nullptr;
  }
  if (from._internal_has_defaultsearchproviderkeyword()) {
    defaultsearchproviderkeyword_ = new ::enterprise_management::StringPolicyProto(*from.defaultsearchproviderkeyword_);
  } else {
    defaultsearchproviderkeyword_ = nullptr;
  }
  if (from._internal_has_defaultsearchprovidersearchurl()) {
    defaultsearchprovidersearchurl_ = new ::enterprise_management::StringPolicyProto(*from.defaultsearchprovidersearchurl_);
  } else {
    defaultsearchprovidersearchurl_ = nullptr;
  }
  if (from._internal_has_defaultsearchprovidersuggesturl()) {
    defaultsearchprovidersuggesturl_ = new ::enterprise_management::StringPolicyProto(*from.defaultsearchprovidersuggesturl_);
  } else {
    defaultsearchprovidersuggesturl_ = nullptr;
  }
  if (from._internal_has_defaultsearchprovidericonurl()) {
    defaultsearchprovidericonurl_ = new ::enterprise_management::StringPolicyProto(*from.defaultsearchprovidericonurl_);
  } else {
    defaultsearchprovidericonurl_ = nullptr;
  }
  if (from._internal_has_defaultsearchproviderencodings()) {
    defaultsearchproviderencodings_ = new ::enterprise_management::StringListPolicyProto(*from.defaultsearchproviderencodings_);
  } else {
    defaultsearchproviderencodings_ = nullptr;
  }
  if (from._internal_has_defaultcookiessetting()) {
    defaultcookiessetting_ = new ::enterprise_management::IntegerPolicyProto(*from.defaultcookiessetting_);
  } else {
    defaultcookiessetting_ = nullptr;
  }
  if (from._internal_has_defaultjavascriptsetting()) {
    defaultjavascriptsetting_ = new ::enterprise_management::IntegerPolicyProto(*from.defaultjavascriptsetting_);
  } else {
    defaultjavascriptsetting_ = nullptr;
  }
  if (from._internal_has_defaultpopupssetting()) {
    defaultpopupssetting_ = new ::enterprise_management::IntegerPolicyProto(*from.defaultpopupssetting_);
  } else {
    defaultpopupssetting_ = nullptr;
  }
  if (from._internal_has_defaultgeolocationsetting()) {
    defaultgeolocationsetting_ = new ::enterprise_management::IntegerPolicyProto(*from.defaultgeolocationsetting_);
  } else {
    defaultgeolocationsetting_ = nullptr;
  }
  if (from._internal_has_cookiesblockedforurls()) {
    cookiesblockedforurls_ = new ::enterprise_management::StringListPolicyProto(*from.cookiesblockedforurls_);
  } else {
    cookiesblockedforurls_ = nullptr;
  }
  if (from._internal_has_cookiessessiononlyforurls()) {
    cookiessessiononlyforurls_ = new ::enterprise_management::StringListPolicyProto(*from.cookiessessiononlyforurls_);
  } else {
    cookiessessiononlyforurls_ = nullptr;
  }
  if (from._internal_has_javascriptallowedforurls()) {
    javascriptallowedforurls_ = new ::enterprise_management::StringListPolicyProto(*from.javascriptallowedforurls_);
  } else {
    javascriptallowedforurls_ = nullptr;
  }
  if (from._internal_has_javascriptblockedforurls()) {
    javascriptblockedforurls_ = new ::enterprise_management::StringListPolicyProto(*from.javascriptblockedforurls_);
  } else {
    javascriptblockedforurls_ = nullptr;
  }
  if (from._internal_has_popupsallowedforurls()) {
    popupsallowedforurls_ = new ::enterprise_management::StringListPolicyProto(*from.popupsallowedforurls_);
  } else {
    popupsallowedforurls_ = nullptr;
  }
  if (from._internal_has_popupsblockedforurls()) {
    popupsblockedforurls_ = new ::enterprise_management::StringListPolicyProto(*from.popupsblockedforurls_);
  } else {
    popupsblockedforurls_ = nullptr;
  }
  if (from._internal_has_cookiesallowedforurls()) {
    cookiesallowedforurls_ = new ::enterprise_management::StringListPolicyProto(*from.cookiesallowedforurls_);
  } else {
    cookiesallowedforurls_ = nullptr;
  }
  if (from._internal_has_translateenabled()) {
    translateenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.translateenabled_);
  } else {
    translateenabled_ = nullptr;
  }
  if (from._internal_has_editbookmarksenabled()) {
    editbookmarksenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.editbookmarksenabled_);
  } else {
    editbookmarksenabled_ = nullptr;
  }
  if (from._internal_has_incognitomodeavailability()) {
    incognitomodeavailability_ = new ::enterprise_management::IntegerPolicyProto(*from.incognitomodeavailability_);
  } else {
    incognitomodeavailability_ = nullptr;
  }
  if (from._internal_has_proxysettings()) {
    proxysettings_ = new ::enterprise_management::StringPolicyProto(*from.proxysettings_);
  } else {
    proxysettings_ = nullptr;
  }
  if (from._internal_has_disablesafebrowsingproceedanyway()) {
    disablesafebrowsingproceedanyway_ = new ::enterprise_management::BooleanPolicyProto(*from.disablesafebrowsingproceedanyway_);
  } else {
    disablesafebrowsingproceedanyway_ = nullptr;
  }
  if (from._internal_has_defaultsearchprovideralternateurls()) {
    defaultsearchprovideralternateurls_ = new ::enterprise_management::StringListPolicyProto(*from.defaultsearchprovideralternateurls_);
  } else {
    defaultsearchprovideralternateurls_ = nullptr;
  }
  if (from._internal_has_forcesafesearch()) {
    forcesafesearch_ = new ::enterprise_management::BooleanPolicyProto(*from.forcesafesearch_);
  } else {
    forcesafesearch_ = nullptr;
  }
  if (from._internal_has_builtindnsclientenabled()) {
    builtindnsclientenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.builtindnsclientenabled_);
  } else {
    builtindnsclientenabled_ = nullptr;
  }
  if (from._internal_has_signinallowed()) {
    signinallowed_ = new ::enterprise_management::BooleanPolicyProto(*from.signinallowed_);
  } else {
    signinallowed_ = nullptr;
  }
  if (from._internal_has_variationsrestrictparameter()) {
    variationsrestrictparameter_ = new ::enterprise_management::StringPolicyProto(*from.variationsrestrictparameter_);
  } else {
    variationsrestrictparameter_ = nullptr;
  }
  if (from._internal_has_managedbookmarks()) {
    managedbookmarks_ = new ::enterprise_management::StringPolicyProto(*from.managedbookmarks_);
  } else {
    managedbookmarks_ = nullptr;
  }
  if (from._internal_has_defaultsearchproviderimageurl()) {
    defaultsearchproviderimageurl_ = new ::enterprise_management::StringPolicyProto(*from.defaultsearchproviderimageurl_);
  } else {
    defaultsearchproviderimageurl_ = nullptr;
  }
  if (from._internal_has_defaultsearchprovidersearchurlpostparams()) {
    defaultsearchprovidersearchurlpostparams_ = new ::enterprise_management::StringPolicyProto(*from.defaultsearchprovidersearchurlpostparams_);
  } else {
    defaultsearchprovidersearchurlpostparams_ = nullptr;
  }
  if (from._internal_has_defaultsearchprovidersuggesturlpostparams()) {
    defaultsearchprovidersuggesturlpostparams_ = new ::enterprise_management::StringPolicyProto(*from.defaultsearchprovidersuggesturlpostparams_);
  } else {
    defaultsearchprovidersuggesturlpostparams_ = nullptr;
  }
  if (from._internal_has_defaultsearchproviderimageurlpostparams()) {
    defaultsearchproviderimageurlpostparams_ = new ::enterprise_management::StringPolicyProto(*from.defaultsearchproviderimageurlpostparams_);
  } else {
    defaultsearchproviderimageurlpostparams_ = nullptr;
  }
  if (from._internal_has_defaultsearchprovidernewtaburl()) {
    defaultsearchprovidernewtaburl_ = new ::enterprise_management::StringPolicyProto(*from.defaultsearchprovidernewtaburl_);
  } else {
    defaultsearchprovidernewtaburl_ = nullptr;
  }
  if (from._internal_has_networkpredictionoptions()) {
    networkpredictionoptions_ = new ::enterprise_management::IntegerPolicyProto(*from.networkpredictionoptions_);
  } else {
    networkpredictionoptions_ = nullptr;
  }
  if (from._internal_has_sslversionmin()) {
    sslversionmin_ = new ::enterprise_management::StringPolicyProto(*from.sslversionmin_);
  } else {
    sslversionmin_ = nullptr;
  }
  if (from._internal_has_contextualsearchenabled()) {
    contextualsearchenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.contextualsearchenabled_);
  } else {
    contextualsearchenabled_ = nullptr;
  }
  if (from._internal_has_forcegooglesafesearch()) {
    forcegooglesafesearch_ = new ::enterprise_management::BooleanPolicyProto(*from.forcegooglesafesearch_);
  } else {
    forcegooglesafesearch_ = nullptr;
  }
  if (from._internal_has_forceyoutubesafetymode()) {
    forceyoutubesafetymode_ = new ::enterprise_management::BooleanPolicyProto(*from.forceyoutubesafetymode_);
  } else {
    forceyoutubesafetymode_ = nullptr;
  }
  if (from._internal_has_sslerroroverrideallowed()) {
    sslerroroverrideallowed_ = new ::enterprise_management::BooleanPolicyProto(*from.sslerroroverrideallowed_);
  } else {
    sslerroroverrideallowed_ = nullptr;
  }
  if (from._internal_has_authandroidnegotiateaccounttype()) {
    authandroidnegotiateaccounttype_ = new ::enterprise_management::StringPolicyProto(*from.authandroidnegotiateaccounttype_);
  } else {
    authandroidnegotiateaccounttype_ = nullptr;
  }
  if (from._internal_has_defaultwebbluetoothguardsetting()) {
    defaultwebbluetoothguardsetting_ = new ::enterprise_management::IntegerPolicyProto(*from.defaultwebbluetoothguardsetting_);
  } else {
    defaultwebbluetoothguardsetting_ = nullptr;
  }
  if (from._internal_has_alloweddomainsforapps()) {
    alloweddomainsforapps_ = new ::enterprise_management::StringPolicyProto(*from.alloweddomainsforapps_);
  } else {
    alloweddomainsforapps_ = nullptr;
  }
  if (from._internal_has_enablemediarouter()) {
    enablemediarouter_ = new ::enterprise_management::BooleanPolicyProto(*from.enablemediarouter_);
  } else {
    enablemediarouter_ = nullptr;
  }
  if (from._internal_has_certificatetransparencyenforcementdisabledforurls()) {
    certificatetransparencyenforcementdisabledforurls_ = new ::enterprise_management::StringListPolicyProto(*from.certificatetransparencyenforcementdisabledforurls_);
  } else {
    certificatetransparencyenforcementdisabledforurls_ = nullptr;
  }
  if (from._internal_has_ntpcontentsuggestionsenabled()) {
    ntpcontentsuggestionsenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.ntpcontentsuggestionsenabled_);
  } else {
    ntpcontentsuggestionsenabled_ = nullptr;
  }
  if (from._internal_has_webrtcudpportrange()) {
    webrtcudpportrange_ = new ::enterprise_management::StringPolicyProto(*from.webrtcudpportrange_);
  } else {
    webrtcudpportrange_ = nullptr;
  }
  if (from._internal_has_componentupdatesenabled()) {
    componentupdatesenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.componentupdatesenabled_);
  } else {
    componentupdatesenabled_ = nullptr;
  }
  if (from._internal_has_forcebrowsersignin()) {
    forcebrowsersignin_ = new ::enterprise_management::BooleanPolicyProto(*from.forcebrowsersignin_);
  } else {
    forcebrowsersignin_ = nullptr;
  }
  if (from._internal_has_forceyoutuberestrict()) {
    forceyoutuberestrict_ = new ::enterprise_management::IntegerPolicyProto(*from.forceyoutuberestrict_);
  } else {
    forceyoutuberestrict_ = nullptr;
  }
  if (from._internal_has_cloudpolicyoverridesplatformpolicy()) {
    cloudpolicyoverridesplatformpolicy_ = new ::enterprise_management::BooleanPolicyProto(*from.cloudpolicyoverridesplatformpolicy_);
  } else {
    cloudpolicyoverridesplatformpolicy_ = nullptr;
  }
  if (from._internal_has_autofillcreditcardenabled()) {
    autofillcreditcardenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.autofillcreditcardenabled_);
  } else {
    autofillcreditcardenabled_ = nullptr;
  }
  if (from._internal_has_ntlmv2enabled()) {
    ntlmv2enabled_ = new ::enterprise_management::BooleanPolicyProto(*from.ntlmv2enabled_);
  } else {
    ntlmv2enabled_ = nullptr;
  }
  if (from._internal_has_promptfordownloadlocation()) {
    promptfordownloadlocation_ = new ::enterprise_management::BooleanPolicyProto(*from.promptfordownloadlocation_);
  } else {
    promptfordownloadlocation_ = nullptr;
  }
  if (from._internal_has_restrictaccountstopatterns()) {
    restrictaccountstopatterns_ = new ::enterprise_management::StringListPolicyProto(*from.restrictaccountstopatterns_);
  } else {
    restrictaccountstopatterns_ = nullptr;
  }
  if (from._internal_has_safebrowsingextendedreportingenabled()) {
    safebrowsingextendedreportingenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.safebrowsingextendedreportingenabled_);
  } else {
    safebrowsingextendedreportingenabled_ = nullptr;
  }
  if (from._internal_has_defaultwebusbguardsetting()) {
    defaultwebusbguardsetting_ = new ::enterprise_management::IntegerPolicyProto(*from.defaultwebusbguardsetting_);
  } else {
    defaultwebusbguardsetting_ = nullptr;
  }
  if (from._internal_has_certificatetransparencyenforcementdisabledforcas()) {
    certificatetransparencyenforcementdisabledforcas_ = new ::enterprise_management::StringListPolicyProto(*from.certificatetransparencyenforcementdisabledforcas_);
  } else {
    certificatetransparencyenforcementdisabledforcas_ = nullptr;
  }
  if (from._internal_has_certificatetransparencyenforcementdisabledforlegacycas()) {
    certificatetransparencyenforcementdisabledforlegacycas_ = new ::enterprise_management::StringListPolicyProto(*from.certificatetransparencyenforcementdisabledforlegacycas_);
  } else {
    certificatetransparencyenforcementdisabledforlegacycas_ = nullptr;
  }
  if (from._internal_has_webusbaskforurls()) {
    webusbaskforurls_ = new ::enterprise_management::StringListPolicyProto(*from.webusbaskforurls_);
  } else {
    webusbaskforurls_ = nullptr;
  }
  if (from._internal_has_webusbblockedforurls()) {
    webusbblockedforurls_ = new ::enterprise_management::StringListPolicyProto(*from.webusbblockedforurls_);
  } else {
    webusbblockedforurls_ = nullptr;
  }
  if (from._internal_has_isolateoriginsandroid()) {
    isolateoriginsandroid_ = new ::enterprise_management::StringPolicyProto(*from.isolateoriginsandroid_);
  } else {
    isolateoriginsandroid_ = nullptr;
  }
  if (from._internal_has_siteperprocessandroid()) {
    siteperprocessandroid_ = new ::enterprise_management::BooleanPolicyProto(*from.siteperprocessandroid_);
  } else {
    siteperprocessandroid_ = nullptr;
  }
  if (from._internal_has_overridesecurityrestrictionsoninsecureorigin()) {
    overridesecurityrestrictionsoninsecureorigin_ = new ::enterprise_management::StringListPolicyProto(*from.overridesecurityrestrictionsoninsecureorigin_);
  } else {
    overridesecurityrestrictionsoninsecureorigin_ = nullptr;
  }
  if (from._internal_has_autofilladdressenabled()) {
    autofilladdressenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.autofilladdressenabled_);
  } else {
    autofilladdressenabled_ = nullptr;
  }
  if (from._internal_has_urlkeyedanonymizeddatacollectionenabled()) {
    urlkeyedanonymizeddatacollectionenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.urlkeyedanonymizeddatacollectionenabled_);
  } else {
    urlkeyedanonymizeddatacollectionenabled_ = nullptr;
  }
  if (from._internal_has_coalesceh2connectionswithclientcertificatesforhosts()) {
    coalesceh2connectionswithclientcertificatesforhosts_ = new ::enterprise_management::StringListPolicyProto(*from.coalesceh2connectionswithclientcertificatesforhosts_);
  } else {
    coalesceh2connectionswithclientcertificatesforhosts_ = nullptr;
  }
  if (from._internal_has_enterprisehardwareplatformapienabled()) {
    enterprisehardwareplatformapienabled_ = new ::enterprise_management::BooleanPolicyProto(*from.enterprisehardwareplatformapienabled_);
  } else {
    enterprisehardwareplatformapienabled_ = nullptr;
  }
  if (from._internal_has_webusballowdevicesforurls()) {
    webusballowdevicesforurls_ = new ::enterprise_management::StringPolicyProto(*from.webusballowdevicesforurls_);
  } else {
    webusballowdevicesforurls_ = nullptr;
  }
  if (from._internal_has_browsersignin()) {
    browsersignin_ = new ::enterprise_management::IntegerPolicyProto(*from.browsersignin_);
  } else {
    browsersignin_ = nullptr;
  }
  if (from._internal_has_cloudreportingenabled()) {
    cloudreportingenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.cloudreportingenabled_);
  } else {
    cloudreportingenabled_ = nullptr;
  }
  if (from._internal_has_cloudmanagementenrollmenttoken()) {
    cloudmanagementenrollmenttoken_ = new ::enterprise_management::StringPolicyProto(*from.cloudmanagementenrollmenttoken_);
  } else {
    cloudmanagementenrollmenttoken_ = nullptr;
  }
  if (from._internal_has_policylistmultiplesourcemergelist()) {
    policylistmultiplesourcemergelist_ = new ::enterprise_management::StringListPolicyProto(*from.policylistmultiplesourcemergelist_);
  } else {
    policylistmultiplesourcemergelist_ = nullptr;
  }
  if (from._internal_has_policydictionarymultiplesourcemergelist()) {
    policydictionarymultiplesourcemergelist_ = new ::enterprise_management::StringListPolicyProto(*from.policydictionarymultiplesourcemergelist_);
  } else {
    policydictionarymultiplesourcemergelist_ = nullptr;
  }
  if (from._internal_has_passwordleakdetectionenabled()) {
    passwordleakdetectionenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.passwordleakdetectionenabled_);
  } else {
    passwordleakdetectionenabled_ = nullptr;
  }
  if (from._internal_has_dnsoverhttpsmode()) {
    dnsoverhttpsmode_ = new ::enterprise_management::StringPolicyProto(*from.dnsoverhttpsmode_);
  } else {
    dnsoverhttpsmode_ = nullptr;
  }
  if (from._internal_has_policyatomicgroupsenabled()) {
    policyatomicgroupsenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.policyatomicgroupsenabled_);
  } else {
    policyatomicgroupsenabled_ = nullptr;
  }
  if (from._internal_has_hstspolicybypasslist()) {
    hstspolicybypasslist_ = new ::enterprise_management::StringListPolicyProto(*from.hstspolicybypasslist_);
  } else {
    hstspolicybypasslist_ = nullptr;
  }
  if (from._internal_has_sharedclipboardenabled()) {
    sharedclipboardenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.sharedclipboardenabled_);
  } else {
    sharedclipboardenabled_ = nullptr;
  }
  if (from._internal_has_legacysamesitecookiebehaviorenabledfordomainlist()) {
    legacysamesitecookiebehaviorenabledfordomainlist_ = new ::enterprise_management::StringListPolicyProto(*from.legacysamesitecookiebehaviorenabledfordomainlist_);
  } else {
    legacysamesitecookiebehaviorenabledfordomainlist_ = nullptr;
  }
  if (from._internal_has_dnsoverhttpstemplates()) {
    dnsoverhttpstemplates_ = new ::enterprise_management::StringPolicyProto(*from.dnsoverhttpstemplates_);
  } else {
    dnsoverhttpstemplates_ = nullptr;
  }
  if (from._internal_has_synctypeslistdisabled()) {
    synctypeslistdisabled_ = new ::enterprise_management::StringListPolicyProto(*from.synctypeslistdisabled_);
  } else {
    synctypeslistdisabled_ = nullptr;
  }
  if (from._internal_has_paymentmethodqueryenabled()) {
    paymentmethodqueryenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.paymentmethodqueryenabled_);
  } else {
    paymentmethodqueryenabled_ = nullptr;
  }
  if (from._internal_has_safebrowsingprotectionlevel()) {
    safebrowsingprotectionlevel_ = new ::enterprise_management::IntegerPolicyProto(*from.safebrowsingprotectionlevel_);
  } else {
    safebrowsingprotectionlevel_ = nullptr;
  }
  if (from._internal_has_scrolltotextfragmentenabled()) {
    scrolltotextfragmentenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.scrolltotextfragmentenabled_);
  } else {
    scrolltotextfragmentenabled_ = nullptr;
  }
  if (from._internal_has_enableexperimentalpolicies()) {
    enableexperimentalpolicies_ = new ::enterprise_management::StringListPolicyProto(*from.enableexperimentalpolicies_);
  } else {
    enableexperimentalpolicies_ = nullptr;
  }
  if (from._internal_has_intensivewakeupthrottlingenabled()) {
    intensivewakeupthrottlingenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.intensivewakeupthrottlingenabled_);
  } else {
    intensivewakeupthrottlingenabled_ = nullptr;
  }
  if (from._internal_has_urlblocklist()) {
    urlblocklist_ = new ::enterprise_management::StringListPolicyProto(*from.urlblocklist_);
  } else {
    urlblocklist_ = nullptr;
  }
  if (from._internal_has_urlallowlist()) {
    urlallowlist_ = new ::enterprise_management::StringListPolicyProto(*from.urlallowlist_);
  } else {
    urlallowlist_ = nullptr;
  }
  if (from._internal_has_authnegotiatedelegateallowlist()) {
    authnegotiatedelegateallowlist_ = new ::enterprise_management::StringPolicyProto(*from.authnegotiatedelegateallowlist_);
  } else {
    authnegotiatedelegateallowlist_ = nullptr;
  }
  if (from._internal_has_authserverallowlist()) {
    authserverallowlist_ = new ::enterprise_management::StringPolicyProto(*from.authserverallowlist_);
  } else {
    authserverallowlist_ = nullptr;
  }
  if (from._internal_has_insecureformswarningsenabled()) {
    insecureformswarningsenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.insecureformswarningsenabled_);
  } else {
    insecureformswarningsenabled_ = nullptr;
  }
  if (from._internal_has_defaultsensorssetting()) {
    defaultsensorssetting_ = new ::enterprise_management::IntegerPolicyProto(*from.defaultsensorssetting_);
  } else {
    defaultsensorssetting_ = nullptr;
  }
  if (from._internal_has_sensorsallowedforurls()) {
    sensorsallowedforurls_ = new ::enterprise_management::StringListPolicyProto(*from.sensorsallowedforurls_);
  } else {
    sensorsallowedforurls_ = nullptr;
  }
  if (from._internal_has_sensorsblockedforurls()) {
    sensorsblockedforurls_ = new ::enterprise_management::StringListPolicyProto(*from.sensorsblockedforurls_);
  } else {
    sensorsblockedforurls_ = nullptr;
  }
  if (from._internal_has_backforwardcacheenabled()) {
    backforwardcacheenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.backforwardcacheenabled_);
  } else {
    backforwardcacheenabled_ = nullptr;
  }
  if (from._internal_has_insecureprivatenetworkrequestsallowed()) {
    insecureprivatenetworkrequestsallowed_ = new ::enterprise_management::BooleanPolicyProto(*from.insecureprivatenetworkrequestsallowed_);
  } else {
    insecureprivatenetworkrequestsallowed_ = nullptr;
  }
  if (from._internal_has_insecureprivatenetworkrequestsallowedforurls()) {
    insecureprivatenetworkrequestsallowedforurls_ = new ::enterprise_management::StringListPolicyProto(*from.insecureprivatenetworkrequestsallowedforurls_);
  } else {
    insecureprivatenetworkrequestsallowedforurls_ = nullptr;
  }
  if (from._internal_has_lookalikewarningallowlistdomains()) {
    lookalikewarningallowlistdomains_ = new ::enterprise_management::StringListPolicyProto(*from.lookalikewarningallowlistdomains_);
  } else {
    lookalikewarningallowlistdomains_ = nullptr;
  }
  if (from._internal_has_browsingdatalifetime()) {
    browsingdatalifetime_ = new ::enterprise_management::StringPolicyProto(*from.browsingdatalifetime_);
  } else {
    browsingdatalifetime_ = nullptr;
  }
  if (from._internal_has_tosdialogbehavior()) {
    tosdialogbehavior_ = new ::enterprise_management::IntegerPolicyProto(*from.tosdialogbehavior_);
  } else {
    tosdialogbehavior_ = nullptr;
  }
  if (from._internal_has_sslerroroverrideallowedfororigins()) {
    sslerroroverrideallowedfororigins_ = new ::enterprise_management::StringListPolicyProto(*from.sslerroroverrideallowedfororigins_);
  } else {
    sslerroroverrideallowedfororigins_ = nullptr;
  }
  if (from._internal_has_webxrimmersivearenabled()) {
    webxrimmersivearenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.webxrimmersivearenabled_);
  } else {
    webxrimmersivearenabled_ = nullptr;
  }
  if (from._internal_has_suppressdifferentoriginsubframedialogs()) {
    suppressdifferentoriginsubframedialogs_ = new ::enterprise_management::BooleanPolicyProto(*from.suppressdifferentoriginsubframedialogs_);
  } else {
    suppressdifferentoriginsubframedialogs_ = nullptr;
  }
  if (from._internal_has_cecpq2enabled()) {
    cecpq2enabled_ = new ::enterprise_management::BooleanPolicyProto(*from.cecpq2enabled_);
  } else {
    cecpq2enabled_ = nullptr;
  }
  if (from._internal_has_explicitlyallowednetworkports()) {
    explicitlyallowednetworkports_ = new ::enterprise_management::StringListPolicyProto(*from.explicitlyallowednetworkports_);
  } else {
    explicitlyallowednetworkports_ = nullptr;
  }
  if (from._internal_has_lenscameraassistedsearchenabled()) {
    lenscameraassistedsearchenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.lenscameraassistedsearchenabled_);
  } else {
    lenscameraassistedsearchenabled_ = nullptr;
  }
  if (from._internal_has_additionaldnsquerytypesenabled()) {
    additionaldnsquerytypesenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.additionaldnsquerytypesenabled_);
  } else {
    additionaldnsquerytypesenabled_ = nullptr;
  }
  if (from._internal_has_clouduserpolicymerge()) {
    clouduserpolicymerge_ = new ::enterprise_management::BooleanPolicyProto(*from.clouduserpolicymerge_);
  } else {
    clouduserpolicymerge_ = nullptr;
  }
  if (from._internal_has_defaultjavascriptjitsetting()) {
    defaultjavascriptjitsetting_ = new ::enterprise_management::IntegerPolicyProto(*from.defaultjavascriptjitsetting_);
  } else {
    defaultjavascriptjitsetting_ = nullptr;
  }
  if (from._internal_has_javascriptjitallowedforsites()) {
    javascriptjitallowedforsites_ = new ::enterprise_management::StringListPolicyProto(*from.javascriptjitallowedforsites_);
  } else {
    javascriptjitallowedforsites_ = nullptr;
  }
  if (from._internal_has_javascriptjitblockedforsites()) {
    javascriptjitblockedforsites_ = new ::enterprise_management::StringListPolicyProto(*from.javascriptjitblockedforsites_);
  } else {
    javascriptjitblockedforsites_ = nullptr;
  }
  if (from._internal_has_httpsonlymode()) {
    httpsonlymode_ = new ::enterprise_management::StringPolicyProto(*from.httpsonlymode_);
  } else {
    httpsonlymode_ = nullptr;
  }
  if (from._internal_has_clouduserpolicyoverridescloudmachinepolicy()) {
    clouduserpolicyoverridescloudmachinepolicy_ = new ::enterprise_management::BooleanPolicyProto(*from.clouduserpolicyoverridescloudmachinepolicy_);
  } else {
    clouduserpolicyoverridescloudmachinepolicy_ = nullptr;
  }
  if (from._internal_has_corsnonwildcardrequestheaderssupport()) {
    corsnonwildcardrequestheaderssupport_ = new ::enterprise_management::BooleanPolicyProto(*from.corsnonwildcardrequestheaderssupport_);
  } else {
    corsnonwildcardrequestheaderssupport_ = nullptr;
  }
  if (from._internal_has_useragentclienthintsgreaseupdateenabled()) {
    useragentclienthintsgreaseupdateenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.useragentclienthintsgreaseupdateenabled_);
  } else {
    useragentclienthintsgreaseupdateenabled_ = nullptr;
  }
  if (from._internal_has_useragentreduction()) {
    useragentreduction_ = new ::enterprise_management::IntegerPolicyProto(*from.useragentreduction_);
  } else {
    useragentreduction_ = nullptr;
  }
  if (from._internal_has_cloudprofilereportingenabled()) {
    cloudprofilereportingenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.cloudprofilereportingenabled_);
  } else {
    cloudprofilereportingenabled_ = nullptr;
  }
  if (from._internal_has_firstpartysetsenabled()) {
    firstpartysetsenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.firstpartysetsenabled_);
  } else {
    firstpartysetsenabled_ = nullptr;
  }
  if (from._internal_has_forcemajorversiontominorpositioninuseragent()) {
    forcemajorversiontominorpositioninuseragent_ = new ::enterprise_management::IntegerPolicyProto(*from.forcemajorversiontominorpositioninuseragent_);
  } else {
    forcemajorversiontominorpositioninuseragent_ = nullptr;
  }
  if (from._internal_has_allhttpauthschemesallowedfororigins()) {
    allhttpauthschemesallowedfororigins_ = new ::enterprise_management::StringListPolicyProto(*from.allhttpauthschemesallowedfororigins_);
  } else {
    allhttpauthschemesallowedfororigins_ = nullptr;
  }
  if (from._internal_has_cloudreportinguploadfrequency()) {
    cloudreportinguploadfrequency_ = new ::enterprise_management::IntegerPolicyProto(*from.cloudreportinguploadfrequency_);
  } else {
    cloudreportinguploadfrequency_ = nullptr;
  }
  if (from._internal_has_websqlaccess()) {
    websqlaccess_ = new ::enterprise_management::BooleanPolicyProto(*from.websqlaccess_);
  } else {
    websqlaccess_ = nullptr;
  }
  if (from._internal_has_settimeoutwithout1msclampenabled()) {
    settimeoutwithout1msclampenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.settimeoutwithout1msclampenabled_);
  } else {
    settimeoutwithout1msclampenabled_ = nullptr;
  }
  if (from._internal_has_firstpartysetsoverrides()) {
    firstpartysetsoverrides_ = new ::enterprise_management::StringPolicyProto(*from.firstpartysetsoverrides_);
  } else {
    firstpartysetsoverrides_ = nullptr;
  }
  if (from._internal_has_enterpriseauthenticationapplinkpolicy()) {
    enterpriseauthenticationapplinkpolicy_ = new ::enterprise_management::StringPolicyProto(*from.enterpriseauthenticationapplinkpolicy_);
  } else {
    enterpriseauthenticationapplinkpolicy_ = nullptr;
  }
  if (from._internal_has_urlparamfilterenabled()) {
    urlparamfilterenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.urlparamfilterenabled_);
  } else {
    urlparamfilterenabled_ = nullptr;
  }
  if (from._internal_has_unthrottlednestedtimeoutenabled()) {
    unthrottlednestedtimeoutenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.unthrottlednestedtimeoutenabled_);
  } else {
    unthrottlednestedtimeoutenabled_ = nullptr;
  }
  if (from._internal_has_eventpathenabled()) {
    eventpathenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.eventpathenabled_);
  } else {
    eventpathenabled_ = nullptr;
  }
  if (from._internal_has_websqlnonsecurecontextenabled()) {
    websqlnonsecurecontextenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.websqlnonsecurecontextenabled_);
  } else {
    websqlnonsecurecontextenabled_ = nullptr;
  }
  if (from._internal_has_encryptedclienthelloenabled()) {
    encryptedclienthelloenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.encryptedclienthelloenabled_);
  } else {
    encryptedclienthelloenabled_ = nullptr;
  }
  if (from._internal_has_persistentquotaenabled()) {
    persistentquotaenabled_ = new ::enterprise_management::BooleanPolicyProto(*from.persistentquotaenabled_);
  } else {
    persistentquotaenabled_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:enterprise_management.CloudPolicySettings)
}

inline void CloudPolicySettings::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&homepagelocation_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&persistentquotaenabled_) -
    reinterpret_cast<char*>(&homepagelocation_)) + sizeof(persistentquotaenabled_));
}

CloudPolicySettings::~CloudPolicySettings() {
  // @@protoc_insertion_point(destructor:enterprise_management.CloudPolicySettings)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<std::string>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CloudPolicySettings::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete homepagelocation_;
  if (this != internal_default_instance()) delete alternateerrorpagesenabled_;
  if (this != internal_default_instance()) delete searchsuggestenabled_;
  if (this != internal_default_instance()) delete javascriptenabled_;
  if (this != internal_default_instance()) delete incognitoenabled_;
  if (this != internal_default_instance()) delete savingbrowserhistorydisabled_;
  if (this != internal_default_instance()) delete printingenabled_;
  if (this != internal_default_instance()) delete safebrowsingenabled_;
  if (this != internal_default_instance()) delete metricsreportingenabled_;
  if (this != internal_default_instance()) delete passwordmanagerenabled_;
  if (this != internal_default_instance()) delete autofillenabled_;
  if (this != internal_default_instance()) delete syncdisabled_;
  if (this != internal_default_instance()) delete proxymode_;
  if (this != internal_default_instance()) delete proxyservermode_;
  if (this != internal_default_instance()) delete proxyserver_;
  if (this != internal_default_instance()) delete proxypacurl_;
  if (this != internal_default_instance()) delete proxybypasslist_;
  if (this != internal_default_instance()) delete authschemes_;
  if (this != internal_default_instance()) delete disableauthnegotiatecnamelookup_;
  if (this != internal_default_instance()) delete blockthirdpartycookies_;
  if (this != internal_default_instance()) delete defaultsearchproviderenabled_;
  if (this != internal_default_instance()) delete defaultsearchprovidername_;
  if (this != internal_default_instance()) delete defaultsearchproviderkeyword_;
  if (this != internal_default_instance()) delete defaultsearchprovidersearchurl_;
  if (this != internal_default_instance()) delete defaultsearchprovidersuggesturl_;
  if (this != internal_default_instance()) delete defaultsearchprovidericonurl_;
  if (this != internal_default_instance()) delete defaultsearchproviderencodings_;
  if (this != internal_default_instance()) delete defaultcookiessetting_;
  if (this != internal_default_instance()) delete defaultjavascriptsetting_;
  if (this != internal_default_instance()) delete defaultpopupssetting_;
  if (this != internal_default_instance()) delete defaultgeolocationsetting_;
  if (this != internal_default_instance()) delete cookiesblockedforurls_;
  if (this != internal_default_instance()) delete cookiessessiononlyforurls_;
  if (this != internal_default_instance()) delete javascriptallowedforurls_;
  if (this != internal_default_instance()) delete javascriptblockedforurls_;
  if (this != internal_default_instance()) delete popupsallowedforurls_;
  if (this != internal_default_instance()) delete popupsblockedforurls_;
  if (this != internal_default_instance()) delete cookiesallowedforurls_;
  if (this != internal_default_instance()) delete translateenabled_;
  if (this != internal_default_instance()) delete editbookmarksenabled_;
  if (this != internal_default_instance()) delete incognitomodeavailability_;
  if (this != internal_default_instance()) delete proxysettings_;
  if (this != internal_default_instance()) delete disablesafebrowsingproceedanyway_;
  if (this != internal_default_instance()) delete defaultsearchprovideralternateurls_;
  if (this != internal_default_instance()) delete forcesafesearch_;
  if (this != internal_default_instance()) delete builtindnsclientenabled_;
  if (this != internal_default_instance()) delete signinallowed_;
  if (this != internal_default_instance()) delete variationsrestrictparameter_;
  if (this != internal_default_instance()) delete managedbookmarks_;
  if (this != internal_default_instance()) delete defaultsearchproviderimageurl_;
  if (this != internal_default_instance()) delete defaultsearchprovidersearchurlpostparams_;
  if (this != internal_default_instance()) delete defaultsearchprovidersuggesturlpostparams_;
  if (this != internal_default_instance()) delete defaultsearchproviderimageurlpostparams_;
  if (this != internal_default_instance()) delete defaultsearchprovidernewtaburl_;
  if (this != internal_default_instance()) delete networkpredictionoptions_;
  if (this != internal_default_instance()) delete sslversionmin_;
  if (this != internal_default_instance()) delete contextualsearchenabled_;
  if (this != internal_default_instance()) delete forcegooglesafesearch_;
  if (this != internal_default_instance()) delete forceyoutubesafetymode_;
  if (this != internal_default_instance()) delete sslerroroverrideallowed_;
  if (this != internal_default_instance()) delete authandroidnegotiateaccounttype_;
  if (this != internal_default_instance()) delete defaultwebbluetoothguardsetting_;
  if (this != internal_default_instance()) delete alloweddomainsforapps_;
  if (this != internal_default_instance()) delete enablemediarouter_;
  if (this != internal_default_instance()) delete certificatetransparencyenforcementdisabledforurls_;
  if (this != internal_default_instance()) delete ntpcontentsuggestionsenabled_;
  if (this != internal_default_instance()) delete webrtcudpportrange_;
  if (this != internal_default_instance()) delete componentupdatesenabled_;
  if (this != internal_default_instance()) delete forcebrowsersignin_;
  if (this != internal_default_instance()) delete forceyoutuberestrict_;
  if (this != internal_default_instance()) delete cloudpolicyoverridesplatformpolicy_;
  if (this != internal_default_instance()) delete autofillcreditcardenabled_;
  if (this != internal_default_instance()) delete ntlmv2enabled_;
  if (this != internal_default_instance()) delete promptfordownloadlocation_;
  if (this != internal_default_instance()) delete restrictaccountstopatterns_;
  if (this != internal_default_instance()) delete safebrowsingextendedreportingenabled_;
  if (this != internal_default_instance()) delete defaultwebusbguardsetting_;
  if (this != internal_default_instance()) delete certificatetransparencyenforcementdisabledforcas_;
  if (this != internal_default_instance()) delete certificatetransparencyenforcementdisabledforlegacycas_;
  if (this != internal_default_instance()) delete webusbaskforurls_;
  if (this != internal_default_instance()) delete webusbblockedforurls_;
  if (this != internal_default_instance()) delete isolateoriginsandroid_;
  if (this != internal_default_instance()) delete siteperprocessandroid_;
  if (this != internal_default_instance()) delete overridesecurityrestrictionsoninsecureorigin_;
  if (this != internal_default_instance()) delete autofilladdressenabled_;
  if (this != internal_default_instance()) delete urlkeyedanonymizeddatacollectionenabled_;
  if (this != internal_default_instance()) delete coalesceh2connectionswithclientcertificatesforhosts_;
  if (this != internal_default_instance()) delete enterprisehardwareplatformapienabled_;
  if (this != internal_default_instance()) delete webusballowdevicesforurls_;
  if (this != internal_default_instance()) delete browsersignin_;
  if (this != internal_default_instance()) delete cloudreportingenabled_;
  if (this != internal_default_instance()) delete cloudmanagementenrollmenttoken_;
  if (this != internal_default_instance()) delete policylistmultiplesourcemergelist_;
  if (this != internal_default_instance()) delete policydictionarymultiplesourcemergelist_;
  if (this != internal_default_instance()) delete passwordleakdetectionenabled_;
  if (this != internal_default_instance()) delete dnsoverhttpsmode_;
  if (this != internal_default_instance()) delete policyatomicgroupsenabled_;
  if (this != internal_default_instance()) delete hstspolicybypasslist_;
  if (this != internal_default_instance()) delete sharedclipboardenabled_;
  if (this != internal_default_instance()) delete legacysamesitecookiebehaviorenabledfordomainlist_;
  if (this != internal_default_instance()) delete dnsoverhttpstemplates_;
  if (this != internal_default_instance()) delete synctypeslistdisabled_;
  if (this != internal_default_instance()) delete paymentmethodqueryenabled_;
  if (this != internal_default_instance()) delete safebrowsingprotectionlevel_;
  if (this != internal_default_instance()) delete scrolltotextfragmentenabled_;
  if (this != internal_default_instance()) delete enableexperimentalpolicies_;
  if (this != internal_default_instance()) delete intensivewakeupthrottlingenabled_;
  if (this != internal_default_instance()) delete urlblocklist_;
  if (this != internal_default_instance()) delete urlallowlist_;
  if (this != internal_default_instance()) delete authnegotiatedelegateallowlist_;
  if (this != internal_default_instance()) delete authserverallowlist_;
  if (this != internal_default_instance()) delete insecureformswarningsenabled_;
  if (this != internal_default_instance()) delete defaultsensorssetting_;
  if (this != internal_default_instance()) delete sensorsallowedforurls_;
  if (this != internal_default_instance()) delete sensorsblockedforurls_;
  if (this != internal_default_instance()) delete backforwardcacheenabled_;
  if (this != internal_default_instance()) delete insecureprivatenetworkrequestsallowed_;
  if (this != internal_default_instance()) delete insecureprivatenetworkrequestsallowedforurls_;
  if (this != internal_default_instance()) delete lookalikewarningallowlistdomains_;
  if (this != internal_default_instance()) delete browsingdatalifetime_;
  if (this != internal_default_instance()) delete tosdialogbehavior_;
  if (this != internal_default_instance()) delete sslerroroverrideallowedfororigins_;
  if (this != internal_default_instance()) delete webxrimmersivearenabled_;
  if (this != internal_default_instance()) delete suppressdifferentoriginsubframedialogs_;
  if (this != internal_default_instance()) delete cecpq2enabled_;
  if (this != internal_default_instance()) delete explicitlyallowednetworkports_;
  if (this != internal_default_instance()) delete lenscameraassistedsearchenabled_;
  if (this != internal_default_instance()) delete additionaldnsquerytypesenabled_;
  if (this != internal_default_instance()) delete clouduserpolicymerge_;
  if (this != internal_default_instance()) delete defaultjavascriptjitsetting_;
  if (this != internal_default_instance()) delete javascriptjitallowedforsites_;
  if (this != internal_default_instance()) delete javascriptjitblockedforsites_;
  if (this != internal_default_instance()) delete httpsonlymode_;
  if (this != internal_default_instance()) delete clouduserpolicyoverridescloudmachinepolicy_;
  if (this != internal_default_instance()) delete corsnonwildcardrequestheaderssupport_;
  if (this != internal_default_instance()) delete useragentclienthintsgreaseupdateenabled_;
  if (this != internal_default_instance()) delete useragentreduction_;
  if (this != internal_default_instance()) delete cloudprofilereportingenabled_;
  if (this != internal_default_instance()) delete firstpartysetsenabled_;
  if (this != internal_default_instance()) delete forcemajorversiontominorpositioninuseragent_;
  if (this != internal_default_instance()) delete allhttpauthschemesallowedfororigins_;
  if (this != internal_default_instance()) delete cloudreportinguploadfrequency_;
  if (this != internal_default_instance()) delete websqlaccess_;
  if (this != internal_default_instance()) delete settimeoutwithout1msclampenabled_;
  if (this != internal_default_instance()) delete firstpartysetsoverrides_;
  if (this != internal_default_instance()) delete enterpriseauthenticationapplinkpolicy_;
  if (this != internal_default_instance()) delete urlparamfilterenabled_;
  if (this != internal_default_instance()) delete unthrottlednestedtimeoutenabled_;
  if (this != internal_default_instance()) delete eventpathenabled_;
  if (this != internal_default_instance()) delete websqlnonsecurecontextenabled_;
  if (this != internal_default_instance()) delete encryptedclienthelloenabled_;
  if (this != internal_default_instance()) delete persistentquotaenabled_;
}

void CloudPolicySettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CloudPolicySettings::Clear() {
// @@protoc_insertion_point(message_clear_start:enterprise_management.CloudPolicySettings)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(homepagelocation_ != nullptr);
      homepagelocation_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(alternateerrorpagesenabled_ != nullptr);
      alternateerrorpagesenabled_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(searchsuggestenabled_ != nullptr);
      searchsuggestenabled_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(javascriptenabled_ != nullptr);
      javascriptenabled_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(incognitoenabled_ != nullptr);
      incognitoenabled_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(savingbrowserhistorydisabled_ != nullptr);
      savingbrowserhistorydisabled_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(printingenabled_ != nullptr);
      printingenabled_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(safebrowsingenabled_ != nullptr);
      safebrowsingenabled_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(metricsreportingenabled_ != nullptr);
      metricsreportingenabled_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(passwordmanagerenabled_ != nullptr);
      passwordmanagerenabled_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(autofillenabled_ != nullptr);
      autofillenabled_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(syncdisabled_ != nullptr);
      syncdisabled_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(proxymode_ != nullptr);
      proxymode_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(proxyservermode_ != nullptr);
      proxyservermode_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(proxyserver_ != nullptr);
      proxyserver_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(proxypacurl_ != nullptr);
      proxypacurl_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(proxybypasslist_ != nullptr);
      proxybypasslist_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(authschemes_ != nullptr);
      authschemes_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(disableauthnegotiatecnamelookup_ != nullptr);
      disableauthnegotiatecnamelookup_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(blockthirdpartycookies_ != nullptr);
      blockthirdpartycookies_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(defaultsearchproviderenabled_ != nullptr);
      defaultsearchproviderenabled_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(defaultsearchprovidername_ != nullptr);
      defaultsearchprovidername_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(defaultsearchproviderkeyword_ != nullptr);
      defaultsearchproviderkeyword_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(defaultsearchprovidersearchurl_ != nullptr);
      defaultsearchprovidersearchurl_->Clear();
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(defaultsearchprovidersuggesturl_ != nullptr);
      defaultsearchprovidersuggesturl_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(defaultsearchprovidericonurl_ != nullptr);
      defaultsearchprovidericonurl_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      GOOGLE_DCHECK(defaultsearchproviderencodings_ != nullptr);
      defaultsearchproviderencodings_->Clear();
    }
    if (cached_has_bits & 0x08000000u) {
      GOOGLE_DCHECK(defaultcookiessetting_ != nullptr);
      defaultcookiessetting_->Clear();
    }
    if (cached_has_bits & 0x10000000u) {
      GOOGLE_DCHECK(defaultjavascriptsetting_ != nullptr);
      defaultjavascriptsetting_->Clear();
    }
    if (cached_has_bits & 0x20000000u) {
      GOOGLE_DCHECK(defaultpopupssetting_ != nullptr);
      defaultpopupssetting_->Clear();
    }
    if (cached_has_bits & 0x40000000u) {
      GOOGLE_DCHECK(defaultgeolocationsetting_ != nullptr);
      defaultgeolocationsetting_->Clear();
    }
    if (cached_has_bits & 0x80000000u) {
      GOOGLE_DCHECK(cookiesblockedforurls_ != nullptr);
      cookiesblockedforurls_->Clear();
    }
  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(cookiessessiononlyforurls_ != nullptr);
      cookiessessiononlyforurls_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(javascriptallowedforurls_ != nullptr);
      javascriptallowedforurls_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(javascriptblockedforurls_ != nullptr);
      javascriptblockedforurls_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(popupsallowedforurls_ != nullptr);
      popupsallowedforurls_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(popupsblockedforurls_ != nullptr);
      popupsblockedforurls_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(cookiesallowedforurls_ != nullptr);
      cookiesallowedforurls_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(translateenabled_ != nullptr);
      translateenabled_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(editbookmarksenabled_ != nullptr);
      editbookmarksenabled_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(incognitomodeavailability_ != nullptr);
      incognitomodeavailability_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(proxysettings_ != nullptr);
      proxysettings_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(disablesafebrowsingproceedanyway_ != nullptr);
      disablesafebrowsingproceedanyway_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(defaultsearchprovideralternateurls_ != nullptr);
      defaultsearchprovideralternateurls_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(forcesafesearch_ != nullptr);
      forcesafesearch_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(builtindnsclientenabled_ != nullptr);
      builtindnsclientenabled_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(signinallowed_ != nullptr);
      signinallowed_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(variationsrestrictparameter_ != nullptr);
      variationsrestrictparameter_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(managedbookmarks_ != nullptr);
      managedbookmarks_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(defaultsearchproviderimageurl_ != nullptr);
      defaultsearchproviderimageurl_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(defaultsearchprovidersearchurlpostparams_ != nullptr);
      defaultsearchprovidersearchurlpostparams_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(defaultsearchprovidersuggesturlpostparams_ != nullptr);
      defaultsearchprovidersuggesturlpostparams_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(defaultsearchproviderimageurlpostparams_ != nullptr);
      defaultsearchproviderimageurlpostparams_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(defaultsearchprovidernewtaburl_ != nullptr);
      defaultsearchprovidernewtaburl_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(networkpredictionoptions_ != nullptr);
      networkpredictionoptions_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(sslversionmin_ != nullptr);
      sslversionmin_->Clear();
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(contextualsearchenabled_ != nullptr);
      contextualsearchenabled_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(forcegooglesafesearch_ != nullptr);
      forcegooglesafesearch_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      GOOGLE_DCHECK(forceyoutubesafetymode_ != nullptr);
      forceyoutubesafetymode_->Clear();
    }
    if (cached_has_bits & 0x08000000u) {
      GOOGLE_DCHECK(sslerroroverrideallowed_ != nullptr);
      sslerroroverrideallowed_->Clear();
    }
    if (cached_has_bits & 0x10000000u) {
      GOOGLE_DCHECK(authandroidnegotiateaccounttype_ != nullptr);
      authandroidnegotiateaccounttype_->Clear();
    }
    if (cached_has_bits & 0x20000000u) {
      GOOGLE_DCHECK(defaultwebbluetoothguardsetting_ != nullptr);
      defaultwebbluetoothguardsetting_->Clear();
    }
    if (cached_has_bits & 0x40000000u) {
      GOOGLE_DCHECK(alloweddomainsforapps_ != nullptr);
      alloweddomainsforapps_->Clear();
    }
    if (cached_has_bits & 0x80000000u) {
      GOOGLE_DCHECK(enablemediarouter_ != nullptr);
      enablemediarouter_->Clear();
    }
  }
  cached_has_bits = _has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(certificatetransparencyenforcementdisabledforurls_ != nullptr);
      certificatetransparencyenforcementdisabledforurls_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(ntpcontentsuggestionsenabled_ != nullptr);
      ntpcontentsuggestionsenabled_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(webrtcudpportrange_ != nullptr);
      webrtcudpportrange_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(componentupdatesenabled_ != nullptr);
      componentupdatesenabled_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(forcebrowsersignin_ != nullptr);
      forcebrowsersignin_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(forceyoutuberestrict_ != nullptr);
      forceyoutuberestrict_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(cloudpolicyoverridesplatformpolicy_ != nullptr);
      cloudpolicyoverridesplatformpolicy_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(autofillcreditcardenabled_ != nullptr);
      autofillcreditcardenabled_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(ntlmv2enabled_ != nullptr);
      ntlmv2enabled_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(promptfordownloadlocation_ != nullptr);
      promptfordownloadlocation_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(restrictaccountstopatterns_ != nullptr);
      restrictaccountstopatterns_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(safebrowsingextendedreportingenabled_ != nullptr);
      safebrowsingextendedreportingenabled_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(defaultwebusbguardsetting_ != nullptr);
      defaultwebusbguardsetting_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(certificatetransparencyenforcementdisabledforcas_ != nullptr);
      certificatetransparencyenforcementdisabledforcas_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(certificatetransparencyenforcementdisabledforlegacycas_ != nullptr);
      certificatetransparencyenforcementdisabledforlegacycas_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(webusbaskforurls_ != nullptr);
      webusbaskforurls_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(webusbblockedforurls_ != nullptr);
      webusbblockedforurls_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(isolateoriginsandroid_ != nullptr);
      isolateoriginsandroid_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(siteperprocessandroid_ != nullptr);
      siteperprocessandroid_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(overridesecurityrestrictionsoninsecureorigin_ != nullptr);
      overridesecurityrestrictionsoninsecureorigin_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(autofilladdressenabled_ != nullptr);
      autofilladdressenabled_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(urlkeyedanonymizeddatacollectionenabled_ != nullptr);
      urlkeyedanonymizeddatacollectionenabled_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(coalesceh2connectionswithclientcertificatesforhosts_ != nullptr);
      coalesceh2connectionswithclientcertificatesforhosts_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(enterprisehardwareplatformapienabled_ != nullptr);
      enterprisehardwareplatformapienabled_->Clear();
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(webusballowdevicesforurls_ != nullptr);
      webusballowdevicesforurls_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(browsersignin_ != nullptr);
      browsersignin_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      GOOGLE_DCHECK(cloudreportingenabled_ != nullptr);
      cloudreportingenabled_->Clear();
    }
    if (cached_has_bits & 0x08000000u) {
      GOOGLE_DCHECK(cloudmanagementenrollmenttoken_ != nullptr);
      cloudmanagementenrollmenttoken_->Clear();
    }
    if (cached_has_bits & 0x10000000u) {
      GOOGLE_DCHECK(policylistmultiplesourcemergelist_ != nullptr);
      policylistmultiplesourcemergelist_->Clear();
    }
    if (cached_has_bits & 0x20000000u) {
      GOOGLE_DCHECK(policydictionarymultiplesourcemergelist_ != nullptr);
      policydictionarymultiplesourcemergelist_->Clear();
    }
    if (cached_has_bits & 0x40000000u) {
      GOOGLE_DCHECK(passwordleakdetectionenabled_ != nullptr);
      passwordleakdetectionenabled_->Clear();
    }
    if (cached_has_bits & 0x80000000u) {
      GOOGLE_DCHECK(dnsoverhttpsmode_ != nullptr);
      dnsoverhttpsmode_->Clear();
    }
  }
  cached_has_bits = _has_bits_[3];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(policyatomicgroupsenabled_ != nullptr);
      policyatomicgroupsenabled_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(hstspolicybypasslist_ != nullptr);
      hstspolicybypasslist_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(sharedclipboardenabled_ != nullptr);
      sharedclipboardenabled_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(legacysamesitecookiebehaviorenabledfordomainlist_ != nullptr);
      legacysamesitecookiebehaviorenabledfordomainlist_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(dnsoverhttpstemplates_ != nullptr);
      dnsoverhttpstemplates_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(synctypeslistdisabled_ != nullptr);
      synctypeslistdisabled_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(paymentmethodqueryenabled_ != nullptr);
      paymentmethodqueryenabled_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(safebrowsingprotectionlevel_ != nullptr);
      safebrowsingprotectionlevel_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(scrolltotextfragmentenabled_ != nullptr);
      scrolltotextfragmentenabled_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(enableexperimentalpolicies_ != nullptr);
      enableexperimentalpolicies_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(intensivewakeupthrottlingenabled_ != nullptr);
      intensivewakeupthrottlingenabled_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(urlblocklist_ != nullptr);
      urlblocklist_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(urlallowlist_ != nullptr);
      urlallowlist_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(authnegotiatedelegateallowlist_ != nullptr);
      authnegotiatedelegateallowlist_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(authserverallowlist_ != nullptr);
      authserverallowlist_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(insecureformswarningsenabled_ != nullptr);
      insecureformswarningsenabled_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(defaultsensorssetting_ != nullptr);
      defaultsensorssetting_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(sensorsallowedforurls_ != nullptr);
      sensorsallowedforurls_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(sensorsblockedforurls_ != nullptr);
      sensorsblockedforurls_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(backforwardcacheenabled_ != nullptr);
      backforwardcacheenabled_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(insecureprivatenetworkrequestsallowed_ != nullptr);
      insecureprivatenetworkrequestsallowed_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(insecureprivatenetworkrequestsallowedforurls_ != nullptr);
      insecureprivatenetworkrequestsallowedforurls_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(lookalikewarningallowlistdomains_ != nullptr);
      lookalikewarningallowlistdomains_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(browsingdatalifetime_ != nullptr);
      browsingdatalifetime_->Clear();
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(tosdialogbehavior_ != nullptr);
      tosdialogbehavior_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(sslerroroverrideallowedfororigins_ != nullptr);
      sslerroroverrideallowedfororigins_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      GOOGLE_DCHECK(webxrimmersivearenabled_ != nullptr);
      webxrimmersivearenabled_->Clear();
    }
    if (cached_has_bits & 0x08000000u) {
      GOOGLE_DCHECK(suppressdifferentoriginsubframedialogs_ != nullptr);
      suppressdifferentoriginsubframedialogs_->Clear();
    }
    if (cached_has_bits & 0x10000000u) {
      GOOGLE_DCHECK(cecpq2enabled_ != nullptr);
      cecpq2enabled_->Clear();
    }
    if (cached_has_bits & 0x20000000u) {
      GOOGLE_DCHECK(explicitlyallowednetworkports_ != nullptr);
      explicitlyallowednetworkports_->Clear();
    }
    if (cached_has_bits & 0x40000000u) {
      GOOGLE_DCHECK(lenscameraassistedsearchenabled_ != nullptr);
      lenscameraassistedsearchenabled_->Clear();
    }
    if (cached_has_bits & 0x80000000u) {
      GOOGLE_DCHECK(additionaldnsquerytypesenabled_ != nullptr);
      additionaldnsquerytypesenabled_->Clear();
    }
  }
  cached_has_bits = _has_bits_[4];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(clouduserpolicymerge_ != nullptr);
      clouduserpolicymerge_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(defaultjavascriptjitsetting_ != nullptr);
      defaultjavascriptjitsetting_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(javascriptjitallowedforsites_ != nullptr);
      javascriptjitallowedforsites_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(javascriptjitblockedforsites_ != nullptr);
      javascriptjitblockedforsites_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(httpsonlymode_ != nullptr);
      httpsonlymode_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(clouduserpolicyoverridescloudmachinepolicy_ != nullptr);
      clouduserpolicyoverridescloudmachinepolicy_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(corsnonwildcardrequestheaderssupport_ != nullptr);
      corsnonwildcardrequestheaderssupport_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(useragentclienthintsgreaseupdateenabled_ != nullptr);
      useragentclienthintsgreaseupdateenabled_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(useragentreduction_ != nullptr);
      useragentreduction_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(cloudprofilereportingenabled_ != nullptr);
      cloudprofilereportingenabled_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(firstpartysetsenabled_ != nullptr);
      firstpartysetsenabled_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(forcemajorversiontominorpositioninuseragent_ != nullptr);
      forcemajorversiontominorpositioninuseragent_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(allhttpauthschemesallowedfororigins_ != nullptr);
      allhttpauthschemesallowedfororigins_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(cloudreportinguploadfrequency_ != nullptr);
      cloudreportinguploadfrequency_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(websqlaccess_ != nullptr);
      websqlaccess_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(settimeoutwithout1msclampenabled_ != nullptr);
      settimeoutwithout1msclampenabled_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(firstpartysetsoverrides_ != nullptr);
      firstpartysetsoverrides_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(enterpriseauthenticationapplinkpolicy_ != nullptr);
      enterpriseauthenticationapplinkpolicy_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(urlparamfilterenabled_ != nullptr);
      urlparamfilterenabled_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(unthrottlednestedtimeoutenabled_ != nullptr);
      unthrottlednestedtimeoutenabled_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(eventpathenabled_ != nullptr);
      eventpathenabled_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(websqlnonsecurecontextenabled_ != nullptr);
      websqlnonsecurecontextenabled_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(encryptedclienthelloenabled_ != nullptr);
      encryptedclienthelloenabled_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(persistentquotaenabled_ != nullptr);
      persistentquotaenabled_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* CloudPolicySettings::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .enterprise_management.StringPolicyProto HomepageLocation = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_homepagelocation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto AlternateErrorPagesEnabled = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_alternateerrorpagesenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto SearchSuggestEnabled = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_searchsuggestenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto JavascriptEnabled = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_javascriptenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto IncognitoEnabled = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_incognitoenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto SavingBrowserHistoryDisabled = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_savingbrowserhistorydisabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto PrintingEnabled = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_printingenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto SafeBrowsingEnabled = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_safebrowsingenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto MetricsReportingEnabled = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_metricsreportingenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto PasswordManagerEnabled = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_passwordmanagerenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto AutoFillEnabled = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_autofillenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto SyncDisabled = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_syncdisabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto ProxyMode = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_proxymode(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.IntegerPolicyProto ProxyServerMode = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_proxyservermode(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto ProxyServer = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_proxyserver(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto ProxyPacUrl = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 210)) {
          ptr = ctx->ParseMessage(_internal_mutable_proxypacurl(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto ProxyBypassList = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_proxybypasslist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto AuthSchemes = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 226)) {
          ptr = ctx->ParseMessage(_internal_mutable_authschemes(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto DisableAuthNegotiateCnameLookup = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_disableauthnegotiatecnamelookup(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto BlockThirdPartyCookies = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_blockthirdpartycookies(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto DefaultSearchProviderEnabled = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_defaultsearchproviderenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto DefaultSearchProviderName = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_defaultsearchprovidername(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto DefaultSearchProviderKeyword = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_defaultsearchproviderkeyword(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURL = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_defaultsearchprovidersearchurl(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURL = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_defaultsearchprovidersuggesturl(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto DefaultSearchProviderIconURL = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_defaultsearchprovidericonurl(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto DefaultSearchProviderEncodings = 49;
      case 49:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_defaultsearchproviderencodings(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.IntegerPolicyProto DefaultCookiesSetting = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_defaultcookiessetting(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.IntegerPolicyProto DefaultJavaScriptSetting = 52;
      case 52:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_defaultjavascriptsetting(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.IntegerPolicyProto DefaultPopupsSetting = 54;
      case 54:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_defaultpopupssetting(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.IntegerPolicyProto DefaultGeolocationSetting = 56;
      case 56:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_defaultgeolocationsetting(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto CookiesBlockedForUrls = 69;
      case 69:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_cookiesblockedforurls(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto CookiesSessionOnlyForUrls = 70;
      case 70:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_cookiessessiononlyforurls(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto JavaScriptAllowedForUrls = 73;
      case 73:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_javascriptallowedforurls(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto JavaScriptBlockedForUrls = 74;
      case 74:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_javascriptblockedforurls(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto PopupsAllowedForUrls = 77;
      case 77:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_popupsallowedforurls(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto PopupsBlockedForUrls = 78;
      case 78:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_popupsblockedforurls(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto CookiesAllowedForUrls = 79;
      case 79:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_cookiesallowedforurls(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto TranslateEnabled = 82;
      case 82:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_translateenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto EditBookmarksEnabled = 85;
      case 85:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_editbookmarksenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.IntegerPolicyProto IncognitoModeAvailability = 95;
      case 95:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_incognitomodeavailability(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto ProxySettings = 118;
      case 118:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_proxysettings(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto DisableSafeBrowsingProceedAnyway = 152;
      case 152:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_disablesafebrowsingproceedanyway(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto DefaultSearchProviderAlternateURLs = 163;
      case 163:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_defaultsearchprovideralternateurls(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto ForceSafeSearch = 164;
      case 164:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_forcesafesearch(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto BuiltInDnsClientEnabled = 167;
      case 167:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_builtindnsclientenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto SigninAllowed = 192;
      case 192:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 2)) {
          ptr = ctx->ParseMessage(_internal_mutable_signinallowed(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto VariationsRestrictParameter = 198;
      case 198:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_variationsrestrictparameter(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto ManagedBookmarks = 229;
      case 229:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_managedbookmarks(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURL = 231;
      case 231:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_defaultsearchproviderimageurl(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURLPostParams = 232;
      case 232:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_defaultsearchprovidersearchurlpostparams(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURLPostParams = 233;
      case 233:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_defaultsearchprovidersuggesturlpostparams(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURLPostParams = 235;
      case 235:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_defaultsearchproviderimageurlpostparams(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto DefaultSearchProviderNewTabURL = 239;
      case 239:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_defaultsearchprovidernewtaburl(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.IntegerPolicyProto NetworkPredictionOptions = 275;
      case 275:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_networkpredictionoptions(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto SSLVersionMin = 281;
      case 281:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_sslversionmin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto ContextualSearchEnabled = 283;
      case 283:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_contextualsearchenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto ForceGoogleSafeSearch = 284;
      case 284:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 226)) {
          ptr = ctx->ParseMessage(_internal_mutable_forcegooglesafesearch(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto ForceYouTubeSafetyMode = 285;
      case 285:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_forceyoutubesafetymode(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto SSLErrorOverrideAllowed = 302;
      case 302:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_sslerroroverrideallowed(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto AuthAndroidNegotiateAccountType = 307;
      case 307:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_authandroidnegotiateaccounttype(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.IntegerPolicyProto DefaultWebBluetoothGuardSetting = 322;
      case 322:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_defaultwebbluetoothguardsetting(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto AllowedDomainsForApps = 333;
      case 333:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_alloweddomainsforapps(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto EnableMediaRouter = 335;
      case 335:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_enablemediarouter(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForUrls = 337;
      case 337:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_certificatetransparencyenforcementdisabledforurls(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto NTPContentSuggestionsEnabled = 340;
      case 340:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_ntpcontentsuggestionsenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto WebRtcUdpPortRange = 341;
      case 341:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_webrtcudpportrange(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto ComponentUpdatesEnabled = 344;
      case 344:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_componentupdatesenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto ForceBrowserSignin = 348;
      case 348:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 226)) {
          ptr = ctx->ParseMessage(_internal_mutable_forcebrowsersignin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.IntegerPolicyProto ForceYouTubeRestrict = 350;
      case 350:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 242)) {
          ptr = ctx->ParseMessage(_internal_mutable_forceyoutuberestrict(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto CloudPolicyOverridesPlatformPolicy = 383;
      case 383:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_cloudpolicyoverridesplatformpolicy(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto AutofillCreditCardEnabled = 394;
      case 394:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_autofillcreditcardenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto NtlmV2Enabled = 395;
      case 395:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_ntlmv2enabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto PromptForDownloadLocation = 397;
      case 397:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_promptfordownloadlocation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto RestrictAccountsToPatterns = 412;
      case 412:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 226)) {
          ptr = ctx->ParseMessage(_internal_mutable_restrictaccountstopatterns(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto SafeBrowsingExtendedReportingEnabled = 431;
      case 431:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_safebrowsingextendedreportingenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.IntegerPolicyProto DefaultWebUsbGuardSetting = 436;
      case 436:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_defaultwebusbguardsetting(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForCas = 437;
      case 437:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_certificatetransparencyenforcementdisabledforcas(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForLegacyCas = 438;
      case 438:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_certificatetransparencyenforcementdisabledforlegacycas(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto WebUsbAskForUrls = 441;
      case 441:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_webusbaskforurls(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto WebUsbBlockedForUrls = 442;
      case 442:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 210)) {
          ptr = ctx->ParseMessage(_internal_mutable_webusbblockedforurls(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto IsolateOriginsAndroid = 447;
      case 447:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_isolateoriginsandroid(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto SitePerProcessAndroid = 448;
      case 448:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 2)) {
          ptr = ctx->ParseMessage(_internal_mutable_siteperprocessandroid(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto OverrideSecurityRestrictionsOnInsecureOrigin = 459;
      case 459:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_overridesecurityrestrictionsoninsecureorigin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto AutofillAddressEnabled = 461;
      case 461:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_autofilladdressenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto UrlKeyedAnonymizedDataCollectionEnabled = 463;
      case 463:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_urlkeyedanonymizeddatacollectionenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto CoalesceH2ConnectionsWithClientCertificatesForHosts = 468;
      case 468:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_coalesceh2connectionswithclientcertificatesforhosts(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto EnterpriseHardwarePlatformAPIEnabled = 485;
      case 485:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_enterprisehardwareplatformapienabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto WebUsbAllowDevicesForUrls = 488;
      case 488:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_webusballowdevicesforurls(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.IntegerPolicyProto BrowserSignin = 489;
      case 489:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_browsersignin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto CloudReportingEnabled = 495;
      case 495:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_cloudreportingenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto CloudManagementEnrollmentToken = 512;
      case 512:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 2)) {
          ptr = ctx->ParseMessage(_internal_mutable_cloudmanagementenrollmenttoken(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto PolicyListMultipleSourceMergeList = 556;
      case 556:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_policylistmultiplesourcemergelist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto PolicyDictionaryMultipleSourceMergeList = 567;
      case 567:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_policydictionarymultiplesourcemergelist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto PasswordLeakDetectionEnabled = 582;
      case 582:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_passwordleakdetectionenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto DnsOverHttpsMode = 584;
      case 584:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_dnsoverhttpsmode(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto PolicyAtomicGroupsEnabled = 586;
      case 586:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_policyatomicgroupsenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto HSTSPolicyBypassList = 603;
      case 603:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_hstspolicybypasslist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto SharedClipboardEnabled = 612;
      case 612:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_sharedclipboardenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto LegacySameSiteCookieBehaviorEnabledForDomainList = 626;
      case 626:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_legacysamesitecookiebehaviorenabledfordomainlist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto DnsOverHttpsTemplates = 644;
      case 644:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_dnsoverhttpstemplates(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto SyncTypesListDisabled = 651;
      case 651:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_synctypeslistdisabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto PaymentMethodQueryEnabled = 653;
      case 653:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_paymentmethodqueryenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.IntegerPolicyProto SafeBrowsingProtectionLevel = 686;
      case 686:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_safebrowsingprotectionlevel(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto ScrollToTextFragmentEnabled = 689;
      case 689:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_scrolltotextfragmentenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto EnableExperimentalPolicies = 713;
      case 713:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_enableexperimentalpolicies(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto IntensiveWakeUpThrottlingEnabled = 715;
      case 715:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_intensivewakeupthrottlingenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto URLBlocklist = 738;
      case 738:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_urlblocklist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto URLAllowlist = 739;
      case 739:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_urlallowlist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto AuthNegotiateDelegateAllowlist = 748;
      case 748:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_authnegotiatedelegateallowlist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto AuthServerAllowlist = 749;
      case 749:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_authserverallowlist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto InsecureFormsWarningsEnabled = 750;
      case 750:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_insecureformswarningsenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.IntegerPolicyProto DefaultSensorsSetting = 756;
      case 756:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_defaultsensorssetting(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto SensorsAllowedForUrls = 757;
      case 757:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_sensorsallowedforurls(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto SensorsBlockedForUrls = 758;
      case 758:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_sensorsblockedforurls(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto BackForwardCacheEnabled = 760;
      case 760:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_backforwardcacheenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto InsecurePrivateNetworkRequestsAllowed = 768;
      case 768:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 2)) {
          ptr = ctx->ParseMessage(_internal_mutable_insecureprivatenetworkrequestsallowed(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto InsecurePrivateNetworkRequestsAllowedForUrls = 769;
      case 769:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_insecureprivatenetworkrequestsallowedforurls(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto LookalikeWarningAllowlistDomains = 784;
      case 784:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_lookalikewarningallowlistdomains(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto BrowsingDataLifetime = 793;
      case 793:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_browsingdatalifetime(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.IntegerPolicyProto TosDialogBehavior = 803;
      case 803:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_tosdialogbehavior(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto SSLErrorOverrideAllowedForOrigins = 821;
      case 821:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_sslerroroverrideallowedfororigins(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto WebXRImmersiveArEnabled = 822;
      case 822:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_webxrimmersivearenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto SuppressDifferentOriginSubframeDialogs = 831;
      case 831:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_suppressdifferentoriginsubframedialogs(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto CECPQ2Enabled = 843;
      case 843:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_cecpq2enabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto ExplicitlyAllowedNetworkPorts = 851;
      case 851:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_explicitlyallowednetworkports(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto LensCameraAssistedSearchEnabled = 855;
      case 855:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_lenscameraassistedsearchenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto AdditionalDnsQueryTypesEnabled = 859;
      case 859:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_additionaldnsquerytypesenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto CloudUserPolicyMerge = 861;
      case 861:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_clouduserpolicymerge(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.IntegerPolicyProto DefaultJavaScriptJitSetting = 869;
      case 869:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_defaultjavascriptjitsetting(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto JavaScriptJitAllowedForSites = 870;
      case 870:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_javascriptjitallowedforsites(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto JavaScriptJitBlockedForSites = 871;
      case 871:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_javascriptjitblockedforsites(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto HttpsOnlyMode = 872;
      case 872:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_httpsonlymode(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto CloudUserPolicyOverridesCloudMachinePolicy = 901;
      case 901:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_clouduserpolicyoverridescloudmachinepolicy(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto CORSNonWildcardRequestHeadersSupport = 923;
      case 923:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_corsnonwildcardrequestheaderssupport(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto UserAgentClientHintsGREASEUpdateEnabled = 926;
      case 926:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 242)) {
          ptr = ctx->ParseMessage(_internal_mutable_useragentclienthintsgreaseupdateenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.IntegerPolicyProto UserAgentReduction = 934;
      case 934:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_useragentreduction(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto CloudProfileReportingEnabled = 944;
      case 944:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_cloudprofilereportingenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto FirstPartySetsEnabled = 950;
      case 950:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_firstpartysetsenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.IntegerPolicyProto ForceMajorVersionToMinorPositionInUserAgent = 951;
      case 951:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_forcemajorversiontominorpositioninuseragent(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringListPolicyProto AllHttpAuthSchemesAllowedForOrigins = 952;
      case 952:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_allhttpauthschemesallowedfororigins(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.IntegerPolicyProto CloudReportingUploadFrequency = 964;
      case 964:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_cloudreportinguploadfrequency(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto WebSQLAccess = 968;
      case 968:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_websqlaccess(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto SetTimeoutWithout1MsClampEnabled = 969;
      case 969:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_settimeoutwithout1msclampenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto FirstPartySetsOverrides = 971;
      case 971:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_firstpartysetsoverrides(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.StringPolicyProto EnterpriseAuthenticationAppLinkPolicy = 978;
      case 978:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_enterpriseauthenticationapplinkpolicy(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto UrlParamFilterEnabled = 983;
      case 983:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_urlparamfilterenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto UnthrottledNestedTimeoutEnabled = 990;
      case 990:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 242)) {
          ptr = ctx->ParseMessage(_internal_mutable_unthrottlednestedtimeoutenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto EventPathEnabled = 992;
      case 992:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 2)) {
          ptr = ctx->ParseMessage(_internal_mutable_eventpathenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto WebSQLNonSecureContextEnabled = 995;
      case 995:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_websqlnonsecurecontextenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto EncryptedClientHelloEnabled = 998;
      case 998:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_encryptedclienthelloenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .enterprise_management.BooleanPolicyProto PersistentQuotaEnabled = 1004;
      case 1004:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_persistentquotaenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<std::string>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CloudPolicySettings::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:enterprise_management.CloudPolicySettings)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .enterprise_management.StringPolicyProto HomepageLocation = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::homepagelocation(this),
        _Internal::homepagelocation(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto AlternateErrorPagesEnabled = 7;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::alternateerrorpagesenabled(this),
        _Internal::alternateerrorpagesenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto SearchSuggestEnabled = 8;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::searchsuggestenabled(this),
        _Internal::searchsuggestenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto JavascriptEnabled = 11;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::javascriptenabled(this),
        _Internal::javascriptenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto IncognitoEnabled = 12;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::incognitoenabled(this),
        _Internal::incognitoenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto SavingBrowserHistoryDisabled = 13;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::savingbrowserhistorydisabled(this),
        _Internal::savingbrowserhistorydisabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto PrintingEnabled = 14;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, _Internal::printingenabled(this),
        _Internal::printingenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto SafeBrowsingEnabled = 16;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(16, _Internal::safebrowsingenabled(this),
        _Internal::safebrowsingenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto MetricsReportingEnabled = 17;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(17, _Internal::metricsreportingenabled(this),
        _Internal::metricsreportingenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto PasswordManagerEnabled = 18;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(18, _Internal::passwordmanagerenabled(this),
        _Internal::passwordmanagerenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto AutoFillEnabled = 20;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(20, _Internal::autofillenabled(this),
        _Internal::autofillenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto SyncDisabled = 22;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(22, _Internal::syncdisabled(this),
        _Internal::syncdisabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto ProxyMode = 23;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(23, _Internal::proxymode(this),
        _Internal::proxymode(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.IntegerPolicyProto ProxyServerMode = 24;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(24, _Internal::proxyservermode(this),
        _Internal::proxyservermode(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto ProxyServer = 25;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(25, _Internal::proxyserver(this),
        _Internal::proxyserver(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto ProxyPacUrl = 26;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(26, _Internal::proxypacurl(this),
        _Internal::proxypacurl(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto ProxyBypassList = 27;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(27, _Internal::proxybypasslist(this),
        _Internal::proxybypasslist(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto AuthSchemes = 28;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(28, _Internal::authschemes(this),
        _Internal::authschemes(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto DisableAuthNegotiateCnameLookup = 29;
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(29, _Internal::disableauthnegotiatecnamelookup(this),
        _Internal::disableauthnegotiatecnamelookup(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto BlockThirdPartyCookies = 41;
  if (cached_has_bits & 0x00080000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(41, _Internal::blockthirdpartycookies(this),
        _Internal::blockthirdpartycookies(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto DefaultSearchProviderEnabled = 42;
  if (cached_has_bits & 0x00100000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(42, _Internal::defaultsearchproviderenabled(this),
        _Internal::defaultsearchproviderenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto DefaultSearchProviderName = 43;
  if (cached_has_bits & 0x00200000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(43, _Internal::defaultsearchprovidername(this),
        _Internal::defaultsearchprovidername(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto DefaultSearchProviderKeyword = 44;
  if (cached_has_bits & 0x00400000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(44, _Internal::defaultsearchproviderkeyword(this),
        _Internal::defaultsearchproviderkeyword(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURL = 45;
  if (cached_has_bits & 0x00800000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(45, _Internal::defaultsearchprovidersearchurl(this),
        _Internal::defaultsearchprovidersearchurl(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURL = 46;
  if (cached_has_bits & 0x01000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(46, _Internal::defaultsearchprovidersuggesturl(this),
        _Internal::defaultsearchprovidersuggesturl(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto DefaultSearchProviderIconURL = 48;
  if (cached_has_bits & 0x02000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(48, _Internal::defaultsearchprovidericonurl(this),
        _Internal::defaultsearchprovidericonurl(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto DefaultSearchProviderEncodings = 49;
  if (cached_has_bits & 0x04000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(49, _Internal::defaultsearchproviderencodings(this),
        _Internal::defaultsearchproviderencodings(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.IntegerPolicyProto DefaultCookiesSetting = 50;
  if (cached_has_bits & 0x08000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(50, _Internal::defaultcookiessetting(this),
        _Internal::defaultcookiessetting(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.IntegerPolicyProto DefaultJavaScriptSetting = 52;
  if (cached_has_bits & 0x10000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(52, _Internal::defaultjavascriptsetting(this),
        _Internal::defaultjavascriptsetting(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.IntegerPolicyProto DefaultPopupsSetting = 54;
  if (cached_has_bits & 0x20000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(54, _Internal::defaultpopupssetting(this),
        _Internal::defaultpopupssetting(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.IntegerPolicyProto DefaultGeolocationSetting = 56;
  if (cached_has_bits & 0x40000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(56, _Internal::defaultgeolocationsetting(this),
        _Internal::defaultgeolocationsetting(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto CookiesBlockedForUrls = 69;
  if (cached_has_bits & 0x80000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(69, _Internal::cookiesblockedforurls(this),
        _Internal::cookiesblockedforurls(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _has_bits_[1];
  // optional .enterprise_management.StringListPolicyProto CookiesSessionOnlyForUrls = 70;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(70, _Internal::cookiessessiononlyforurls(this),
        _Internal::cookiessessiononlyforurls(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto JavaScriptAllowedForUrls = 73;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(73, _Internal::javascriptallowedforurls(this),
        _Internal::javascriptallowedforurls(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto JavaScriptBlockedForUrls = 74;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(74, _Internal::javascriptblockedforurls(this),
        _Internal::javascriptblockedforurls(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto PopupsAllowedForUrls = 77;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(77, _Internal::popupsallowedforurls(this),
        _Internal::popupsallowedforurls(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto PopupsBlockedForUrls = 78;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(78, _Internal::popupsblockedforurls(this),
        _Internal::popupsblockedforurls(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto CookiesAllowedForUrls = 79;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(79, _Internal::cookiesallowedforurls(this),
        _Internal::cookiesallowedforurls(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto TranslateEnabled = 82;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(82, _Internal::translateenabled(this),
        _Internal::translateenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto EditBookmarksEnabled = 85;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(85, _Internal::editbookmarksenabled(this),
        _Internal::editbookmarksenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.IntegerPolicyProto IncognitoModeAvailability = 95;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(95, _Internal::incognitomodeavailability(this),
        _Internal::incognitomodeavailability(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto ProxySettings = 118;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(118, _Internal::proxysettings(this),
        _Internal::proxysettings(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto DisableSafeBrowsingProceedAnyway = 152;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(152, _Internal::disablesafebrowsingproceedanyway(this),
        _Internal::disablesafebrowsingproceedanyway(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto DefaultSearchProviderAlternateURLs = 163;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(163, _Internal::defaultsearchprovideralternateurls(this),
        _Internal::defaultsearchprovideralternateurls(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto ForceSafeSearch = 164;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(164, _Internal::forcesafesearch(this),
        _Internal::forcesafesearch(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto BuiltInDnsClientEnabled = 167;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(167, _Internal::builtindnsclientenabled(this),
        _Internal::builtindnsclientenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto SigninAllowed = 192;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(192, _Internal::signinallowed(this),
        _Internal::signinallowed(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto VariationsRestrictParameter = 198;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(198, _Internal::variationsrestrictparameter(this),
        _Internal::variationsrestrictparameter(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto ManagedBookmarks = 229;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(229, _Internal::managedbookmarks(this),
        _Internal::managedbookmarks(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURL = 231;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(231, _Internal::defaultsearchproviderimageurl(this),
        _Internal::defaultsearchproviderimageurl(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURLPostParams = 232;
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(232, _Internal::defaultsearchprovidersearchurlpostparams(this),
        _Internal::defaultsearchprovidersearchurlpostparams(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURLPostParams = 233;
  if (cached_has_bits & 0x00080000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(233, _Internal::defaultsearchprovidersuggesturlpostparams(this),
        _Internal::defaultsearchprovidersuggesturlpostparams(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURLPostParams = 235;
  if (cached_has_bits & 0x00100000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(235, _Internal::defaultsearchproviderimageurlpostparams(this),
        _Internal::defaultsearchproviderimageurlpostparams(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto DefaultSearchProviderNewTabURL = 239;
  if (cached_has_bits & 0x00200000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(239, _Internal::defaultsearchprovidernewtaburl(this),
        _Internal::defaultsearchprovidernewtaburl(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.IntegerPolicyProto NetworkPredictionOptions = 275;
  if (cached_has_bits & 0x00400000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(275, _Internal::networkpredictionoptions(this),
        _Internal::networkpredictionoptions(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto SSLVersionMin = 281;
  if (cached_has_bits & 0x00800000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(281, _Internal::sslversionmin(this),
        _Internal::sslversionmin(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto ContextualSearchEnabled = 283;
  if (cached_has_bits & 0x01000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(283, _Internal::contextualsearchenabled(this),
        _Internal::contextualsearchenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto ForceGoogleSafeSearch = 284;
  if (cached_has_bits & 0x02000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(284, _Internal::forcegooglesafesearch(this),
        _Internal::forcegooglesafesearch(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto ForceYouTubeSafetyMode = 285;
  if (cached_has_bits & 0x04000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(285, _Internal::forceyoutubesafetymode(this),
        _Internal::forceyoutubesafetymode(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto SSLErrorOverrideAllowed = 302;
  if (cached_has_bits & 0x08000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(302, _Internal::sslerroroverrideallowed(this),
        _Internal::sslerroroverrideallowed(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto AuthAndroidNegotiateAccountType = 307;
  if (cached_has_bits & 0x10000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(307, _Internal::authandroidnegotiateaccounttype(this),
        _Internal::authandroidnegotiateaccounttype(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.IntegerPolicyProto DefaultWebBluetoothGuardSetting = 322;
  if (cached_has_bits & 0x20000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(322, _Internal::defaultwebbluetoothguardsetting(this),
        _Internal::defaultwebbluetoothguardsetting(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto AllowedDomainsForApps = 333;
  if (cached_has_bits & 0x40000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(333, _Internal::alloweddomainsforapps(this),
        _Internal::alloweddomainsforapps(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto EnableMediaRouter = 335;
  if (cached_has_bits & 0x80000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(335, _Internal::enablemediarouter(this),
        _Internal::enablemediarouter(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _has_bits_[2];
  // optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForUrls = 337;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(337, _Internal::certificatetransparencyenforcementdisabledforurls(this),
        _Internal::certificatetransparencyenforcementdisabledforurls(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto NTPContentSuggestionsEnabled = 340;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(340, _Internal::ntpcontentsuggestionsenabled(this),
        _Internal::ntpcontentsuggestionsenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto WebRtcUdpPortRange = 341;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(341, _Internal::webrtcudpportrange(this),
        _Internal::webrtcudpportrange(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto ComponentUpdatesEnabled = 344;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(344, _Internal::componentupdatesenabled(this),
        _Internal::componentupdatesenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto ForceBrowserSignin = 348;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(348, _Internal::forcebrowsersignin(this),
        _Internal::forcebrowsersignin(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.IntegerPolicyProto ForceYouTubeRestrict = 350;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(350, _Internal::forceyoutuberestrict(this),
        _Internal::forceyoutuberestrict(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto CloudPolicyOverridesPlatformPolicy = 383;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(383, _Internal::cloudpolicyoverridesplatformpolicy(this),
        _Internal::cloudpolicyoverridesplatformpolicy(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto AutofillCreditCardEnabled = 394;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(394, _Internal::autofillcreditcardenabled(this),
        _Internal::autofillcreditcardenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto NtlmV2Enabled = 395;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(395, _Internal::ntlmv2enabled(this),
        _Internal::ntlmv2enabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto PromptForDownloadLocation = 397;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(397, _Internal::promptfordownloadlocation(this),
        _Internal::promptfordownloadlocation(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto RestrictAccountsToPatterns = 412;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(412, _Internal::restrictaccountstopatterns(this),
        _Internal::restrictaccountstopatterns(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto SafeBrowsingExtendedReportingEnabled = 431;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(431, _Internal::safebrowsingextendedreportingenabled(this),
        _Internal::safebrowsingextendedreportingenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.IntegerPolicyProto DefaultWebUsbGuardSetting = 436;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(436, _Internal::defaultwebusbguardsetting(this),
        _Internal::defaultwebusbguardsetting(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForCas = 437;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(437, _Internal::certificatetransparencyenforcementdisabledforcas(this),
        _Internal::certificatetransparencyenforcementdisabledforcas(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForLegacyCas = 438;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(438, _Internal::certificatetransparencyenforcementdisabledforlegacycas(this),
        _Internal::certificatetransparencyenforcementdisabledforlegacycas(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto WebUsbAskForUrls = 441;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(441, _Internal::webusbaskforurls(this),
        _Internal::webusbaskforurls(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto WebUsbBlockedForUrls = 442;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(442, _Internal::webusbblockedforurls(this),
        _Internal::webusbblockedforurls(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto IsolateOriginsAndroid = 447;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(447, _Internal::isolateoriginsandroid(this),
        _Internal::isolateoriginsandroid(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto SitePerProcessAndroid = 448;
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(448, _Internal::siteperprocessandroid(this),
        _Internal::siteperprocessandroid(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto OverrideSecurityRestrictionsOnInsecureOrigin = 459;
  if (cached_has_bits & 0x00080000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(459, _Internal::overridesecurityrestrictionsoninsecureorigin(this),
        _Internal::overridesecurityrestrictionsoninsecureorigin(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto AutofillAddressEnabled = 461;
  if (cached_has_bits & 0x00100000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(461, _Internal::autofilladdressenabled(this),
        _Internal::autofilladdressenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto UrlKeyedAnonymizedDataCollectionEnabled = 463;
  if (cached_has_bits & 0x00200000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(463, _Internal::urlkeyedanonymizeddatacollectionenabled(this),
        _Internal::urlkeyedanonymizeddatacollectionenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto CoalesceH2ConnectionsWithClientCertificatesForHosts = 468;
  if (cached_has_bits & 0x00400000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(468, _Internal::coalesceh2connectionswithclientcertificatesforhosts(this),
        _Internal::coalesceh2connectionswithclientcertificatesforhosts(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto EnterpriseHardwarePlatformAPIEnabled = 485;
  if (cached_has_bits & 0x00800000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(485, _Internal::enterprisehardwareplatformapienabled(this),
        _Internal::enterprisehardwareplatformapienabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto WebUsbAllowDevicesForUrls = 488;
  if (cached_has_bits & 0x01000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(488, _Internal::webusballowdevicesforurls(this),
        _Internal::webusballowdevicesforurls(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.IntegerPolicyProto BrowserSignin = 489;
  if (cached_has_bits & 0x02000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(489, _Internal::browsersignin(this),
        _Internal::browsersignin(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto CloudReportingEnabled = 495;
  if (cached_has_bits & 0x04000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(495, _Internal::cloudreportingenabled(this),
        _Internal::cloudreportingenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto CloudManagementEnrollmentToken = 512;
  if (cached_has_bits & 0x08000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(512, _Internal::cloudmanagementenrollmenttoken(this),
        _Internal::cloudmanagementenrollmenttoken(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto PolicyListMultipleSourceMergeList = 556;
  if (cached_has_bits & 0x10000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(556, _Internal::policylistmultiplesourcemergelist(this),
        _Internal::policylistmultiplesourcemergelist(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto PolicyDictionaryMultipleSourceMergeList = 567;
  if (cached_has_bits & 0x20000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(567, _Internal::policydictionarymultiplesourcemergelist(this),
        _Internal::policydictionarymultiplesourcemergelist(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto PasswordLeakDetectionEnabled = 582;
  if (cached_has_bits & 0x40000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(582, _Internal::passwordleakdetectionenabled(this),
        _Internal::passwordleakdetectionenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto DnsOverHttpsMode = 584;
  if (cached_has_bits & 0x80000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(584, _Internal::dnsoverhttpsmode(this),
        _Internal::dnsoverhttpsmode(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _has_bits_[3];
  // optional .enterprise_management.BooleanPolicyProto PolicyAtomicGroupsEnabled = 586;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(586, _Internal::policyatomicgroupsenabled(this),
        _Internal::policyatomicgroupsenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto HSTSPolicyBypassList = 603;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(603, _Internal::hstspolicybypasslist(this),
        _Internal::hstspolicybypasslist(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto SharedClipboardEnabled = 612;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(612, _Internal::sharedclipboardenabled(this),
        _Internal::sharedclipboardenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto LegacySameSiteCookieBehaviorEnabledForDomainList = 626;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(626, _Internal::legacysamesitecookiebehaviorenabledfordomainlist(this),
        _Internal::legacysamesitecookiebehaviorenabledfordomainlist(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto DnsOverHttpsTemplates = 644;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(644, _Internal::dnsoverhttpstemplates(this),
        _Internal::dnsoverhttpstemplates(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto SyncTypesListDisabled = 651;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(651, _Internal::synctypeslistdisabled(this),
        _Internal::synctypeslistdisabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto PaymentMethodQueryEnabled = 653;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(653, _Internal::paymentmethodqueryenabled(this),
        _Internal::paymentmethodqueryenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.IntegerPolicyProto SafeBrowsingProtectionLevel = 686;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(686, _Internal::safebrowsingprotectionlevel(this),
        _Internal::safebrowsingprotectionlevel(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto ScrollToTextFragmentEnabled = 689;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(689, _Internal::scrolltotextfragmentenabled(this),
        _Internal::scrolltotextfragmentenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto EnableExperimentalPolicies = 713;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(713, _Internal::enableexperimentalpolicies(this),
        _Internal::enableexperimentalpolicies(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto IntensiveWakeUpThrottlingEnabled = 715;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(715, _Internal::intensivewakeupthrottlingenabled(this),
        _Internal::intensivewakeupthrottlingenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto URLBlocklist = 738;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(738, _Internal::urlblocklist(this),
        _Internal::urlblocklist(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto URLAllowlist = 739;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(739, _Internal::urlallowlist(this),
        _Internal::urlallowlist(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto AuthNegotiateDelegateAllowlist = 748;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(748, _Internal::authnegotiatedelegateallowlist(this),
        _Internal::authnegotiatedelegateallowlist(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto AuthServerAllowlist = 749;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(749, _Internal::authserverallowlist(this),
        _Internal::authserverallowlist(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto InsecureFormsWarningsEnabled = 750;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(750, _Internal::insecureformswarningsenabled(this),
        _Internal::insecureformswarningsenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.IntegerPolicyProto DefaultSensorsSetting = 756;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(756, _Internal::defaultsensorssetting(this),
        _Internal::defaultsensorssetting(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto SensorsAllowedForUrls = 757;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(757, _Internal::sensorsallowedforurls(this),
        _Internal::sensorsallowedforurls(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto SensorsBlockedForUrls = 758;
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(758, _Internal::sensorsblockedforurls(this),
        _Internal::sensorsblockedforurls(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto BackForwardCacheEnabled = 760;
  if (cached_has_bits & 0x00080000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(760, _Internal::backforwardcacheenabled(this),
        _Internal::backforwardcacheenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto InsecurePrivateNetworkRequestsAllowed = 768;
  if (cached_has_bits & 0x00100000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(768, _Internal::insecureprivatenetworkrequestsallowed(this),
        _Internal::insecureprivatenetworkrequestsallowed(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto InsecurePrivateNetworkRequestsAllowedForUrls = 769;
  if (cached_has_bits & 0x00200000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(769, _Internal::insecureprivatenetworkrequestsallowedforurls(this),
        _Internal::insecureprivatenetworkrequestsallowedforurls(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto LookalikeWarningAllowlistDomains = 784;
  if (cached_has_bits & 0x00400000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(784, _Internal::lookalikewarningallowlistdomains(this),
        _Internal::lookalikewarningallowlistdomains(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto BrowsingDataLifetime = 793;
  if (cached_has_bits & 0x00800000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(793, _Internal::browsingdatalifetime(this),
        _Internal::browsingdatalifetime(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.IntegerPolicyProto TosDialogBehavior = 803;
  if (cached_has_bits & 0x01000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(803, _Internal::tosdialogbehavior(this),
        _Internal::tosdialogbehavior(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto SSLErrorOverrideAllowedForOrigins = 821;
  if (cached_has_bits & 0x02000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(821, _Internal::sslerroroverrideallowedfororigins(this),
        _Internal::sslerroroverrideallowedfororigins(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto WebXRImmersiveArEnabled = 822;
  if (cached_has_bits & 0x04000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(822, _Internal::webxrimmersivearenabled(this),
        _Internal::webxrimmersivearenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto SuppressDifferentOriginSubframeDialogs = 831;
  if (cached_has_bits & 0x08000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(831, _Internal::suppressdifferentoriginsubframedialogs(this),
        _Internal::suppressdifferentoriginsubframedialogs(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto CECPQ2Enabled = 843;
  if (cached_has_bits & 0x10000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(843, _Internal::cecpq2enabled(this),
        _Internal::cecpq2enabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto ExplicitlyAllowedNetworkPorts = 851;
  if (cached_has_bits & 0x20000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(851, _Internal::explicitlyallowednetworkports(this),
        _Internal::explicitlyallowednetworkports(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto LensCameraAssistedSearchEnabled = 855;
  if (cached_has_bits & 0x40000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(855, _Internal::lenscameraassistedsearchenabled(this),
        _Internal::lenscameraassistedsearchenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto AdditionalDnsQueryTypesEnabled = 859;
  if (cached_has_bits & 0x80000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(859, _Internal::additionaldnsquerytypesenabled(this),
        _Internal::additionaldnsquerytypesenabled(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _has_bits_[4];
  // optional .enterprise_management.BooleanPolicyProto CloudUserPolicyMerge = 861;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(861, _Internal::clouduserpolicymerge(this),
        _Internal::clouduserpolicymerge(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.IntegerPolicyProto DefaultJavaScriptJitSetting = 869;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(869, _Internal::defaultjavascriptjitsetting(this),
        _Internal::defaultjavascriptjitsetting(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto JavaScriptJitAllowedForSites = 870;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(870, _Internal::javascriptjitallowedforsites(this),
        _Internal::javascriptjitallowedforsites(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto JavaScriptJitBlockedForSites = 871;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(871, _Internal::javascriptjitblockedforsites(this),
        _Internal::javascriptjitblockedforsites(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto HttpsOnlyMode = 872;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(872, _Internal::httpsonlymode(this),
        _Internal::httpsonlymode(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto CloudUserPolicyOverridesCloudMachinePolicy = 901;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(901, _Internal::clouduserpolicyoverridescloudmachinepolicy(this),
        _Internal::clouduserpolicyoverridescloudmachinepolicy(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto CORSNonWildcardRequestHeadersSupport = 923;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(923, _Internal::corsnonwildcardrequestheaderssupport(this),
        _Internal::corsnonwildcardrequestheaderssupport(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto UserAgentClientHintsGREASEUpdateEnabled = 926;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(926, _Internal::useragentclienthintsgreaseupdateenabled(this),
        _Internal::useragentclienthintsgreaseupdateenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.IntegerPolicyProto UserAgentReduction = 934;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(934, _Internal::useragentreduction(this),
        _Internal::useragentreduction(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto CloudProfileReportingEnabled = 944;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(944, _Internal::cloudprofilereportingenabled(this),
        _Internal::cloudprofilereportingenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto FirstPartySetsEnabled = 950;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(950, _Internal::firstpartysetsenabled(this),
        _Internal::firstpartysetsenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.IntegerPolicyProto ForceMajorVersionToMinorPositionInUserAgent = 951;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(951, _Internal::forcemajorversiontominorpositioninuseragent(this),
        _Internal::forcemajorversiontominorpositioninuseragent(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringListPolicyProto AllHttpAuthSchemesAllowedForOrigins = 952;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(952, _Internal::allhttpauthschemesallowedfororigins(this),
        _Internal::allhttpauthschemesallowedfororigins(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.IntegerPolicyProto CloudReportingUploadFrequency = 964;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(964, _Internal::cloudreportinguploadfrequency(this),
        _Internal::cloudreportinguploadfrequency(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto WebSQLAccess = 968;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(968, _Internal::websqlaccess(this),
        _Internal::websqlaccess(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto SetTimeoutWithout1MsClampEnabled = 969;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(969, _Internal::settimeoutwithout1msclampenabled(this),
        _Internal::settimeoutwithout1msclampenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto FirstPartySetsOverrides = 971;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(971, _Internal::firstpartysetsoverrides(this),
        _Internal::firstpartysetsoverrides(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.StringPolicyProto EnterpriseAuthenticationAppLinkPolicy = 978;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(978, _Internal::enterpriseauthenticationapplinkpolicy(this),
        _Internal::enterpriseauthenticationapplinkpolicy(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto UrlParamFilterEnabled = 983;
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(983, _Internal::urlparamfilterenabled(this),
        _Internal::urlparamfilterenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto UnthrottledNestedTimeoutEnabled = 990;
  if (cached_has_bits & 0x00080000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(990, _Internal::unthrottlednestedtimeoutenabled(this),
        _Internal::unthrottlednestedtimeoutenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto EventPathEnabled = 992;
  if (cached_has_bits & 0x00100000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(992, _Internal::eventpathenabled(this),
        _Internal::eventpathenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto WebSQLNonSecureContextEnabled = 995;
  if (cached_has_bits & 0x00200000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(995, _Internal::websqlnonsecurecontextenabled(this),
        _Internal::websqlnonsecurecontextenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto EncryptedClientHelloEnabled = 998;
  if (cached_has_bits & 0x00400000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(998, _Internal::encryptedclienthelloenabled(this),
        _Internal::encryptedclienthelloenabled(this).GetCachedSize(), target, stream);
  }

  // optional .enterprise_management.BooleanPolicyProto PersistentQuotaEnabled = 1004;
  if (cached_has_bits & 0x00800000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1004, _Internal::persistentquotaenabled(this),
        _Internal::persistentquotaenabled(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:enterprise_management.CloudPolicySettings)
  return target;
}

size_t CloudPolicySettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:enterprise_management.CloudPolicySettings)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .enterprise_management.StringPolicyProto HomepageLocation = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *homepagelocation_);
    }

    // optional .enterprise_management.BooleanPolicyProto AlternateErrorPagesEnabled = 7;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *alternateerrorpagesenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto SearchSuggestEnabled = 8;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *searchsuggestenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto JavascriptEnabled = 11;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *javascriptenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto IncognitoEnabled = 12;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *incognitoenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto SavingBrowserHistoryDisabled = 13;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *savingbrowserhistorydisabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto PrintingEnabled = 14;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *printingenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto SafeBrowsingEnabled = 16;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *safebrowsingenabled_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .enterprise_management.BooleanPolicyProto MetricsReportingEnabled = 17;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *metricsreportingenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto PasswordManagerEnabled = 18;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *passwordmanagerenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto AutoFillEnabled = 20;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *autofillenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto SyncDisabled = 22;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *syncdisabled_);
    }

    // optional .enterprise_management.StringPolicyProto ProxyMode = 23;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *proxymode_);
    }

    // optional .enterprise_management.IntegerPolicyProto ProxyServerMode = 24;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *proxyservermode_);
    }

    // optional .enterprise_management.StringPolicyProto ProxyServer = 25;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *proxyserver_);
    }

    // optional .enterprise_management.StringPolicyProto ProxyPacUrl = 26;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *proxypacurl_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .enterprise_management.StringPolicyProto ProxyBypassList = 27;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *proxybypasslist_);
    }

    // optional .enterprise_management.StringPolicyProto AuthSchemes = 28;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *authschemes_);
    }

    // optional .enterprise_management.BooleanPolicyProto DisableAuthNegotiateCnameLookup = 29;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *disableauthnegotiatecnamelookup_);
    }

    // optional .enterprise_management.BooleanPolicyProto BlockThirdPartyCookies = 41;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *blockthirdpartycookies_);
    }

    // optional .enterprise_management.BooleanPolicyProto DefaultSearchProviderEnabled = 42;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *defaultsearchproviderenabled_);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderName = 43;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *defaultsearchprovidername_);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderKeyword = 44;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *defaultsearchproviderkeyword_);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURL = 45;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *defaultsearchprovidersearchurl_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURL = 46;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *defaultsearchprovidersuggesturl_);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderIconURL = 48;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *defaultsearchprovidericonurl_);
    }

    // optional .enterprise_management.StringListPolicyProto DefaultSearchProviderEncodings = 49;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *defaultsearchproviderencodings_);
    }

    // optional .enterprise_management.IntegerPolicyProto DefaultCookiesSetting = 50;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *defaultcookiessetting_);
    }

    // optional .enterprise_management.IntegerPolicyProto DefaultJavaScriptSetting = 52;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *defaultjavascriptsetting_);
    }

    // optional .enterprise_management.IntegerPolicyProto DefaultPopupsSetting = 54;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *defaultpopupssetting_);
    }

    // optional .enterprise_management.IntegerPolicyProto DefaultGeolocationSetting = 56;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *defaultgeolocationsetting_);
    }

    // optional .enterprise_management.StringListPolicyProto CookiesBlockedForUrls = 69;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *cookiesblockedforurls_);
    }

  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    // optional .enterprise_management.StringListPolicyProto CookiesSessionOnlyForUrls = 70;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *cookiessessiononlyforurls_);
    }

    // optional .enterprise_management.StringListPolicyProto JavaScriptAllowedForUrls = 73;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *javascriptallowedforurls_);
    }

    // optional .enterprise_management.StringListPolicyProto JavaScriptBlockedForUrls = 74;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *javascriptblockedforurls_);
    }

    // optional .enterprise_management.StringListPolicyProto PopupsAllowedForUrls = 77;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *popupsallowedforurls_);
    }

    // optional .enterprise_management.StringListPolicyProto PopupsBlockedForUrls = 78;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *popupsblockedforurls_);
    }

    // optional .enterprise_management.StringListPolicyProto CookiesAllowedForUrls = 79;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *cookiesallowedforurls_);
    }

    // optional .enterprise_management.BooleanPolicyProto TranslateEnabled = 82;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *translateenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto EditBookmarksEnabled = 85;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *editbookmarksenabled_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .enterprise_management.IntegerPolicyProto IncognitoModeAvailability = 95;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *incognitomodeavailability_);
    }

    // optional .enterprise_management.StringPolicyProto ProxySettings = 118;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *proxysettings_);
    }

    // optional .enterprise_management.BooleanPolicyProto DisableSafeBrowsingProceedAnyway = 152;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *disablesafebrowsingproceedanyway_);
    }

    // optional .enterprise_management.StringListPolicyProto DefaultSearchProviderAlternateURLs = 163;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *defaultsearchprovideralternateurls_);
    }

    // optional .enterprise_management.BooleanPolicyProto ForceSafeSearch = 164;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *forcesafesearch_);
    }

    // optional .enterprise_management.BooleanPolicyProto BuiltInDnsClientEnabled = 167;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *builtindnsclientenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto SigninAllowed = 192;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *signinallowed_);
    }

    // optional .enterprise_management.StringPolicyProto VariationsRestrictParameter = 198;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *variationsrestrictparameter_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .enterprise_management.StringPolicyProto ManagedBookmarks = 229;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *managedbookmarks_);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURL = 231;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *defaultsearchproviderimageurl_);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURLPostParams = 232;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *defaultsearchprovidersearchurlpostparams_);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURLPostParams = 233;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *defaultsearchprovidersuggesturlpostparams_);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURLPostParams = 235;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *defaultsearchproviderimageurlpostparams_);
    }

    // optional .enterprise_management.StringPolicyProto DefaultSearchProviderNewTabURL = 239;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *defaultsearchprovidernewtaburl_);
    }

    // optional .enterprise_management.IntegerPolicyProto NetworkPredictionOptions = 275;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *networkpredictionoptions_);
    }

    // optional .enterprise_management.StringPolicyProto SSLVersionMin = 281;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *sslversionmin_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .enterprise_management.BooleanPolicyProto ContextualSearchEnabled = 283;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *contextualsearchenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto ForceGoogleSafeSearch = 284;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *forcegooglesafesearch_);
    }

    // optional .enterprise_management.BooleanPolicyProto ForceYouTubeSafetyMode = 285;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *forceyoutubesafetymode_);
    }

    // optional .enterprise_management.BooleanPolicyProto SSLErrorOverrideAllowed = 302;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *sslerroroverrideallowed_);
    }

    // optional .enterprise_management.StringPolicyProto AuthAndroidNegotiateAccountType = 307;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *authandroidnegotiateaccounttype_);
    }

    // optional .enterprise_management.IntegerPolicyProto DefaultWebBluetoothGuardSetting = 322;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *defaultwebbluetoothguardsetting_);
    }

    // optional .enterprise_management.StringPolicyProto AllowedDomainsForApps = 333;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *alloweddomainsforapps_);
    }

    // optional .enterprise_management.BooleanPolicyProto EnableMediaRouter = 335;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *enablemediarouter_);
    }

  }
  cached_has_bits = _has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    // optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForUrls = 337;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *certificatetransparencyenforcementdisabledforurls_);
    }

    // optional .enterprise_management.BooleanPolicyProto NTPContentSuggestionsEnabled = 340;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ntpcontentsuggestionsenabled_);
    }

    // optional .enterprise_management.StringPolicyProto WebRtcUdpPortRange = 341;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *webrtcudpportrange_);
    }

    // optional .enterprise_management.BooleanPolicyProto ComponentUpdatesEnabled = 344;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *componentupdatesenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto ForceBrowserSignin = 348;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *forcebrowsersignin_);
    }

    // optional .enterprise_management.IntegerPolicyProto ForceYouTubeRestrict = 350;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *forceyoutuberestrict_);
    }

    // optional .enterprise_management.BooleanPolicyProto CloudPolicyOverridesPlatformPolicy = 383;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *cloudpolicyoverridesplatformpolicy_);
    }

    // optional .enterprise_management.BooleanPolicyProto AutofillCreditCardEnabled = 394;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *autofillcreditcardenabled_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .enterprise_management.BooleanPolicyProto NtlmV2Enabled = 395;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ntlmv2enabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto PromptForDownloadLocation = 397;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *promptfordownloadlocation_);
    }

    // optional .enterprise_management.StringListPolicyProto RestrictAccountsToPatterns = 412;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *restrictaccountstopatterns_);
    }

    // optional .enterprise_management.BooleanPolicyProto SafeBrowsingExtendedReportingEnabled = 431;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *safebrowsingextendedreportingenabled_);
    }

    // optional .enterprise_management.IntegerPolicyProto DefaultWebUsbGuardSetting = 436;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *defaultwebusbguardsetting_);
    }

    // optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForCas = 437;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *certificatetransparencyenforcementdisabledforcas_);
    }

    // optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForLegacyCas = 438;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *certificatetransparencyenforcementdisabledforlegacycas_);
    }

    // optional .enterprise_management.StringListPolicyProto WebUsbAskForUrls = 441;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *webusbaskforurls_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .enterprise_management.StringListPolicyProto WebUsbBlockedForUrls = 442;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *webusbblockedforurls_);
    }

    // optional .enterprise_management.StringPolicyProto IsolateOriginsAndroid = 447;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *isolateoriginsandroid_);
    }

    // optional .enterprise_management.BooleanPolicyProto SitePerProcessAndroid = 448;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *siteperprocessandroid_);
    }

    // optional .enterprise_management.StringListPolicyProto OverrideSecurityRestrictionsOnInsecureOrigin = 459;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *overridesecurityrestrictionsoninsecureorigin_);
    }

    // optional .enterprise_management.BooleanPolicyProto AutofillAddressEnabled = 461;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *autofilladdressenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto UrlKeyedAnonymizedDataCollectionEnabled = 463;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *urlkeyedanonymizeddatacollectionenabled_);
    }

    // optional .enterprise_management.StringListPolicyProto CoalesceH2ConnectionsWithClientCertificatesForHosts = 468;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *coalesceh2connectionswithclientcertificatesforhosts_);
    }

    // optional .enterprise_management.BooleanPolicyProto EnterpriseHardwarePlatformAPIEnabled = 485;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *enterprisehardwareplatformapienabled_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .enterprise_management.StringPolicyProto WebUsbAllowDevicesForUrls = 488;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *webusballowdevicesforurls_);
    }

    // optional .enterprise_management.IntegerPolicyProto BrowserSignin = 489;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *browsersignin_);
    }

    // optional .enterprise_management.BooleanPolicyProto CloudReportingEnabled = 495;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *cloudreportingenabled_);
    }

    // optional .enterprise_management.StringPolicyProto CloudManagementEnrollmentToken = 512;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *cloudmanagementenrollmenttoken_);
    }

    // optional .enterprise_management.StringListPolicyProto PolicyListMultipleSourceMergeList = 556;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *policylistmultiplesourcemergelist_);
    }

    // optional .enterprise_management.StringListPolicyProto PolicyDictionaryMultipleSourceMergeList = 567;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *policydictionarymultiplesourcemergelist_);
    }

    // optional .enterprise_management.BooleanPolicyProto PasswordLeakDetectionEnabled = 582;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *passwordleakdetectionenabled_);
    }

    // optional .enterprise_management.StringPolicyProto DnsOverHttpsMode = 584;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *dnsoverhttpsmode_);
    }

  }
  cached_has_bits = _has_bits_[3];
  if (cached_has_bits & 0x000000ffu) {
    // optional .enterprise_management.BooleanPolicyProto PolicyAtomicGroupsEnabled = 586;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *policyatomicgroupsenabled_);
    }

    // optional .enterprise_management.StringListPolicyProto HSTSPolicyBypassList = 603;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *hstspolicybypasslist_);
    }

    // optional .enterprise_management.BooleanPolicyProto SharedClipboardEnabled = 612;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *sharedclipboardenabled_);
    }

    // optional .enterprise_management.StringListPolicyProto LegacySameSiteCookieBehaviorEnabledForDomainList = 626;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *legacysamesitecookiebehaviorenabledfordomainlist_);
    }

    // optional .enterprise_management.StringPolicyProto DnsOverHttpsTemplates = 644;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *dnsoverhttpstemplates_);
    }

    // optional .enterprise_management.StringListPolicyProto SyncTypesListDisabled = 651;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *synctypeslistdisabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto PaymentMethodQueryEnabled = 653;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *paymentmethodqueryenabled_);
    }

    // optional .enterprise_management.IntegerPolicyProto SafeBrowsingProtectionLevel = 686;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *safebrowsingprotectionlevel_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .enterprise_management.BooleanPolicyProto ScrollToTextFragmentEnabled = 689;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *scrolltotextfragmentenabled_);
    }

    // optional .enterprise_management.StringListPolicyProto EnableExperimentalPolicies = 713;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *enableexperimentalpolicies_);
    }

    // optional .enterprise_management.BooleanPolicyProto IntensiveWakeUpThrottlingEnabled = 715;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *intensivewakeupthrottlingenabled_);
    }

    // optional .enterprise_management.StringListPolicyProto URLBlocklist = 738;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *urlblocklist_);
    }

    // optional .enterprise_management.StringListPolicyProto URLAllowlist = 739;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *urlallowlist_);
    }

    // optional .enterprise_management.StringPolicyProto AuthNegotiateDelegateAllowlist = 748;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *authnegotiatedelegateallowlist_);
    }

    // optional .enterprise_management.StringPolicyProto AuthServerAllowlist = 749;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *authserverallowlist_);
    }

    // optional .enterprise_management.BooleanPolicyProto InsecureFormsWarningsEnabled = 750;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *insecureformswarningsenabled_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .enterprise_management.IntegerPolicyProto DefaultSensorsSetting = 756;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *defaultsensorssetting_);
    }

    // optional .enterprise_management.StringListPolicyProto SensorsAllowedForUrls = 757;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *sensorsallowedforurls_);
    }

    // optional .enterprise_management.StringListPolicyProto SensorsBlockedForUrls = 758;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *sensorsblockedforurls_);
    }

    // optional .enterprise_management.BooleanPolicyProto BackForwardCacheEnabled = 760;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *backforwardcacheenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto InsecurePrivateNetworkRequestsAllowed = 768;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *insecureprivatenetworkrequestsallowed_);
    }

    // optional .enterprise_management.StringListPolicyProto InsecurePrivateNetworkRequestsAllowedForUrls = 769;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *insecureprivatenetworkrequestsallowedforurls_);
    }

    // optional .enterprise_management.StringListPolicyProto LookalikeWarningAllowlistDomains = 784;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *lookalikewarningallowlistdomains_);
    }

    // optional .enterprise_management.StringPolicyProto BrowsingDataLifetime = 793;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *browsingdatalifetime_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .enterprise_management.IntegerPolicyProto TosDialogBehavior = 803;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *tosdialogbehavior_);
    }

    // optional .enterprise_management.StringListPolicyProto SSLErrorOverrideAllowedForOrigins = 821;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *sslerroroverrideallowedfororigins_);
    }

    // optional .enterprise_management.BooleanPolicyProto WebXRImmersiveArEnabled = 822;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *webxrimmersivearenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto SuppressDifferentOriginSubframeDialogs = 831;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *suppressdifferentoriginsubframedialogs_);
    }

    // optional .enterprise_management.BooleanPolicyProto CECPQ2Enabled = 843;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *cecpq2enabled_);
    }

    // optional .enterprise_management.StringListPolicyProto ExplicitlyAllowedNetworkPorts = 851;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *explicitlyallowednetworkports_);
    }

    // optional .enterprise_management.BooleanPolicyProto LensCameraAssistedSearchEnabled = 855;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *lenscameraassistedsearchenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto AdditionalDnsQueryTypesEnabled = 859;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *additionaldnsquerytypesenabled_);
    }

  }
  cached_has_bits = _has_bits_[4];
  if (cached_has_bits & 0x000000ffu) {
    // optional .enterprise_management.BooleanPolicyProto CloudUserPolicyMerge = 861;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *clouduserpolicymerge_);
    }

    // optional .enterprise_management.IntegerPolicyProto DefaultJavaScriptJitSetting = 869;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *defaultjavascriptjitsetting_);
    }

    // optional .enterprise_management.StringListPolicyProto JavaScriptJitAllowedForSites = 870;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *javascriptjitallowedforsites_);
    }

    // optional .enterprise_management.StringListPolicyProto JavaScriptJitBlockedForSites = 871;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *javascriptjitblockedforsites_);
    }

    // optional .enterprise_management.StringPolicyProto HttpsOnlyMode = 872;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *httpsonlymode_);
    }

    // optional .enterprise_management.BooleanPolicyProto CloudUserPolicyOverridesCloudMachinePolicy = 901;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *clouduserpolicyoverridescloudmachinepolicy_);
    }

    // optional .enterprise_management.BooleanPolicyProto CORSNonWildcardRequestHeadersSupport = 923;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *corsnonwildcardrequestheaderssupport_);
    }

    // optional .enterprise_management.BooleanPolicyProto UserAgentClientHintsGREASEUpdateEnabled = 926;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *useragentclienthintsgreaseupdateenabled_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .enterprise_management.IntegerPolicyProto UserAgentReduction = 934;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *useragentreduction_);
    }

    // optional .enterprise_management.BooleanPolicyProto CloudProfileReportingEnabled = 944;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *cloudprofilereportingenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto FirstPartySetsEnabled = 950;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *firstpartysetsenabled_);
    }

    // optional .enterprise_management.IntegerPolicyProto ForceMajorVersionToMinorPositionInUserAgent = 951;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *forcemajorversiontominorpositioninuseragent_);
    }

    // optional .enterprise_management.StringListPolicyProto AllHttpAuthSchemesAllowedForOrigins = 952;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *allhttpauthschemesallowedfororigins_);
    }

    // optional .enterprise_management.IntegerPolicyProto CloudReportingUploadFrequency = 964;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *cloudreportinguploadfrequency_);
    }

    // optional .enterprise_management.BooleanPolicyProto WebSQLAccess = 968;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *websqlaccess_);
    }

    // optional .enterprise_management.BooleanPolicyProto SetTimeoutWithout1MsClampEnabled = 969;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *settimeoutwithout1msclampenabled_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .enterprise_management.StringPolicyProto FirstPartySetsOverrides = 971;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *firstpartysetsoverrides_);
    }

    // optional .enterprise_management.StringPolicyProto EnterpriseAuthenticationAppLinkPolicy = 978;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *enterpriseauthenticationapplinkpolicy_);
    }

    // optional .enterprise_management.BooleanPolicyProto UrlParamFilterEnabled = 983;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *urlparamfilterenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto UnthrottledNestedTimeoutEnabled = 990;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *unthrottlednestedtimeoutenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto EventPathEnabled = 992;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *eventpathenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto WebSQLNonSecureContextEnabled = 995;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *websqlnonsecurecontextenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto EncryptedClientHelloEnabled = 998;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *encryptedclienthelloenabled_);
    }

    // optional .enterprise_management.BooleanPolicyProto PersistentQuotaEnabled = 1004;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *persistentquotaenabled_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size();
  }
  int cached_size = ::_pbi::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CloudPolicySettings::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const CloudPolicySettings*>(
      &from));
}

void CloudPolicySettings::MergeFrom(const CloudPolicySettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:enterprise_management.CloudPolicySettings)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_homepagelocation()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_homepagelocation());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_alternateerrorpagesenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_alternateerrorpagesenabled());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_searchsuggestenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_searchsuggestenabled());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_javascriptenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_javascriptenabled());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_incognitoenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_incognitoenabled());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_savingbrowserhistorydisabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_savingbrowserhistorydisabled());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_printingenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_printingenabled());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_safebrowsingenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_safebrowsingenabled());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_metricsreportingenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_metricsreportingenabled());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_passwordmanagerenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_passwordmanagerenabled());
    }
    if (cached_has_bits & 0x00000400u) {
      _internal_mutable_autofillenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_autofillenabled());
    }
    if (cached_has_bits & 0x00000800u) {
      _internal_mutable_syncdisabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_syncdisabled());
    }
    if (cached_has_bits & 0x00001000u) {
      _internal_mutable_proxymode()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_proxymode());
    }
    if (cached_has_bits & 0x00002000u) {
      _internal_mutable_proxyservermode()->::enterprise_management::IntegerPolicyProto::MergeFrom(from._internal_proxyservermode());
    }
    if (cached_has_bits & 0x00004000u) {
      _internal_mutable_proxyserver()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_proxyserver());
    }
    if (cached_has_bits & 0x00008000u) {
      _internal_mutable_proxypacurl()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_proxypacurl());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _internal_mutable_proxybypasslist()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_proxybypasslist());
    }
    if (cached_has_bits & 0x00020000u) {
      _internal_mutable_authschemes()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_authschemes());
    }
    if (cached_has_bits & 0x00040000u) {
      _internal_mutable_disableauthnegotiatecnamelookup()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_disableauthnegotiatecnamelookup());
    }
    if (cached_has_bits & 0x00080000u) {
      _internal_mutable_blockthirdpartycookies()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_blockthirdpartycookies());
    }
    if (cached_has_bits & 0x00100000u) {
      _internal_mutable_defaultsearchproviderenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_defaultsearchproviderenabled());
    }
    if (cached_has_bits & 0x00200000u) {
      _internal_mutable_defaultsearchprovidername()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_defaultsearchprovidername());
    }
    if (cached_has_bits & 0x00400000u) {
      _internal_mutable_defaultsearchproviderkeyword()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_defaultsearchproviderkeyword());
    }
    if (cached_has_bits & 0x00800000u) {
      _internal_mutable_defaultsearchprovidersearchurl()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_defaultsearchprovidersearchurl());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _internal_mutable_defaultsearchprovidersuggesturl()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_defaultsearchprovidersuggesturl());
    }
    if (cached_has_bits & 0x02000000u) {
      _internal_mutable_defaultsearchprovidericonurl()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_defaultsearchprovidericonurl());
    }
    if (cached_has_bits & 0x04000000u) {
      _internal_mutable_defaultsearchproviderencodings()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_defaultsearchproviderencodings());
    }
    if (cached_has_bits & 0x08000000u) {
      _internal_mutable_defaultcookiessetting()->::enterprise_management::IntegerPolicyProto::MergeFrom(from._internal_defaultcookiessetting());
    }
    if (cached_has_bits & 0x10000000u) {
      _internal_mutable_defaultjavascriptsetting()->::enterprise_management::IntegerPolicyProto::MergeFrom(from._internal_defaultjavascriptsetting());
    }
    if (cached_has_bits & 0x20000000u) {
      _internal_mutable_defaultpopupssetting()->::enterprise_management::IntegerPolicyProto::MergeFrom(from._internal_defaultpopupssetting());
    }
    if (cached_has_bits & 0x40000000u) {
      _internal_mutable_defaultgeolocationsetting()->::enterprise_management::IntegerPolicyProto::MergeFrom(from._internal_defaultgeolocationsetting());
    }
    if (cached_has_bits & 0x80000000u) {
      _internal_mutable_cookiesblockedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_cookiesblockedforurls());
    }
  }
  cached_has_bits = from._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_cookiessessiononlyforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_cookiessessiononlyforurls());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_javascriptallowedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_javascriptallowedforurls());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_javascriptblockedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_javascriptblockedforurls());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_popupsallowedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_popupsallowedforurls());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_popupsblockedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_popupsblockedforurls());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_cookiesallowedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_cookiesallowedforurls());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_translateenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_translateenabled());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_editbookmarksenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_editbookmarksenabled());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_incognitomodeavailability()->::enterprise_management::IntegerPolicyProto::MergeFrom(from._internal_incognitomodeavailability());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_proxysettings()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_proxysettings());
    }
    if (cached_has_bits & 0x00000400u) {
      _internal_mutable_disablesafebrowsingproceedanyway()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_disablesafebrowsingproceedanyway());
    }
    if (cached_has_bits & 0x00000800u) {
      _internal_mutable_defaultsearchprovideralternateurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_defaultsearchprovideralternateurls());
    }
    if (cached_has_bits & 0x00001000u) {
      _internal_mutable_forcesafesearch()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_forcesafesearch());
    }
    if (cached_has_bits & 0x00002000u) {
      _internal_mutable_builtindnsclientenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_builtindnsclientenabled());
    }
    if (cached_has_bits & 0x00004000u) {
      _internal_mutable_signinallowed()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_signinallowed());
    }
    if (cached_has_bits & 0x00008000u) {
      _internal_mutable_variationsrestrictparameter()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_variationsrestrictparameter());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _internal_mutable_managedbookmarks()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_managedbookmarks());
    }
    if (cached_has_bits & 0x00020000u) {
      _internal_mutable_defaultsearchproviderimageurl()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_defaultsearchproviderimageurl());
    }
    if (cached_has_bits & 0x00040000u) {
      _internal_mutable_defaultsearchprovidersearchurlpostparams()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_defaultsearchprovidersearchurlpostparams());
    }
    if (cached_has_bits & 0x00080000u) {
      _internal_mutable_defaultsearchprovidersuggesturlpostparams()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_defaultsearchprovidersuggesturlpostparams());
    }
    if (cached_has_bits & 0x00100000u) {
      _internal_mutable_defaultsearchproviderimageurlpostparams()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_defaultsearchproviderimageurlpostparams());
    }
    if (cached_has_bits & 0x00200000u) {
      _internal_mutable_defaultsearchprovidernewtaburl()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_defaultsearchprovidernewtaburl());
    }
    if (cached_has_bits & 0x00400000u) {
      _internal_mutable_networkpredictionoptions()->::enterprise_management::IntegerPolicyProto::MergeFrom(from._internal_networkpredictionoptions());
    }
    if (cached_has_bits & 0x00800000u) {
      _internal_mutable_sslversionmin()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_sslversionmin());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _internal_mutable_contextualsearchenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_contextualsearchenabled());
    }
    if (cached_has_bits & 0x02000000u) {
      _internal_mutable_forcegooglesafesearch()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_forcegooglesafesearch());
    }
    if (cached_has_bits & 0x04000000u) {
      _internal_mutable_forceyoutubesafetymode()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_forceyoutubesafetymode());
    }
    if (cached_has_bits & 0x08000000u) {
      _internal_mutable_sslerroroverrideallowed()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_sslerroroverrideallowed());
    }
    if (cached_has_bits & 0x10000000u) {
      _internal_mutable_authandroidnegotiateaccounttype()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_authandroidnegotiateaccounttype());
    }
    if (cached_has_bits & 0x20000000u) {
      _internal_mutable_defaultwebbluetoothguardsetting()->::enterprise_management::IntegerPolicyProto::MergeFrom(from._internal_defaultwebbluetoothguardsetting());
    }
    if (cached_has_bits & 0x40000000u) {
      _internal_mutable_alloweddomainsforapps()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_alloweddomainsforapps());
    }
    if (cached_has_bits & 0x80000000u) {
      _internal_mutable_enablemediarouter()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_enablemediarouter());
    }
  }
  cached_has_bits = from._has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_certificatetransparencyenforcementdisabledforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_certificatetransparencyenforcementdisabledforurls());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_ntpcontentsuggestionsenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_ntpcontentsuggestionsenabled());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_webrtcudpportrange()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_webrtcudpportrange());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_componentupdatesenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_componentupdatesenabled());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_forcebrowsersignin()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_forcebrowsersignin());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_forceyoutuberestrict()->::enterprise_management::IntegerPolicyProto::MergeFrom(from._internal_forceyoutuberestrict());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_cloudpolicyoverridesplatformpolicy()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_cloudpolicyoverridesplatformpolicy());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_autofillcreditcardenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_autofillcreditcardenabled());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_ntlmv2enabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_ntlmv2enabled());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_promptfordownloadlocation()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_promptfordownloadlocation());
    }
    if (cached_has_bits & 0x00000400u) {
      _internal_mutable_restrictaccountstopatterns()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_restrictaccountstopatterns());
    }
    if (cached_has_bits & 0x00000800u) {
      _internal_mutable_safebrowsingextendedreportingenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_safebrowsingextendedreportingenabled());
    }
    if (cached_has_bits & 0x00001000u) {
      _internal_mutable_defaultwebusbguardsetting()->::enterprise_management::IntegerPolicyProto::MergeFrom(from._internal_defaultwebusbguardsetting());
    }
    if (cached_has_bits & 0x00002000u) {
      _internal_mutable_certificatetransparencyenforcementdisabledforcas()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_certificatetransparencyenforcementdisabledforcas());
    }
    if (cached_has_bits & 0x00004000u) {
      _internal_mutable_certificatetransparencyenforcementdisabledforlegacycas()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_certificatetransparencyenforcementdisabledforlegacycas());
    }
    if (cached_has_bits & 0x00008000u) {
      _internal_mutable_webusbaskforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_webusbaskforurls());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _internal_mutable_webusbblockedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_webusbblockedforurls());
    }
    if (cached_has_bits & 0x00020000u) {
      _internal_mutable_isolateoriginsandroid()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_isolateoriginsandroid());
    }
    if (cached_has_bits & 0x00040000u) {
      _internal_mutable_siteperprocessandroid()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_siteperprocessandroid());
    }
    if (cached_has_bits & 0x00080000u) {
      _internal_mutable_overridesecurityrestrictionsoninsecureorigin()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_overridesecurityrestrictionsoninsecureorigin());
    }
    if (cached_has_bits & 0x00100000u) {
      _internal_mutable_autofilladdressenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_autofilladdressenabled());
    }
    if (cached_has_bits & 0x00200000u) {
      _internal_mutable_urlkeyedanonymizeddatacollectionenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_urlkeyedanonymizeddatacollectionenabled());
    }
    if (cached_has_bits & 0x00400000u) {
      _internal_mutable_coalesceh2connectionswithclientcertificatesforhosts()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_coalesceh2connectionswithclientcertificatesforhosts());
    }
    if (cached_has_bits & 0x00800000u) {
      _internal_mutable_enterprisehardwareplatformapienabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_enterprisehardwareplatformapienabled());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _internal_mutable_webusballowdevicesforurls()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_webusballowdevicesforurls());
    }
    if (cached_has_bits & 0x02000000u) {
      _internal_mutable_browsersignin()->::enterprise_management::IntegerPolicyProto::MergeFrom(from._internal_browsersignin());
    }
    if (cached_has_bits & 0x04000000u) {
      _internal_mutable_cloudreportingenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_cloudreportingenabled());
    }
    if (cached_has_bits & 0x08000000u) {
      _internal_mutable_cloudmanagementenrollmenttoken()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_cloudmanagementenrollmenttoken());
    }
    if (cached_has_bits & 0x10000000u) {
      _internal_mutable_policylistmultiplesourcemergelist()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_policylistmultiplesourcemergelist());
    }
    if (cached_has_bits & 0x20000000u) {
      _internal_mutable_policydictionarymultiplesourcemergelist()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_policydictionarymultiplesourcemergelist());
    }
    if (cached_has_bits & 0x40000000u) {
      _internal_mutable_passwordleakdetectionenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_passwordleakdetectionenabled());
    }
    if (cached_has_bits & 0x80000000u) {
      _internal_mutable_dnsoverhttpsmode()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_dnsoverhttpsmode());
    }
  }
  cached_has_bits = from._has_bits_[3];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_policyatomicgroupsenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_policyatomicgroupsenabled());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_hstspolicybypasslist()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_hstspolicybypasslist());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_sharedclipboardenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_sharedclipboardenabled());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_legacysamesitecookiebehaviorenabledfordomainlist()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_legacysamesitecookiebehaviorenabledfordomainlist());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_dnsoverhttpstemplates()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_dnsoverhttpstemplates());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_synctypeslistdisabled()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_synctypeslistdisabled());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_paymentmethodqueryenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_paymentmethodqueryenabled());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_safebrowsingprotectionlevel()->::enterprise_management::IntegerPolicyProto::MergeFrom(from._internal_safebrowsingprotectionlevel());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_scrolltotextfragmentenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_scrolltotextfragmentenabled());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_enableexperimentalpolicies()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_enableexperimentalpolicies());
    }
    if (cached_has_bits & 0x00000400u) {
      _internal_mutable_intensivewakeupthrottlingenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_intensivewakeupthrottlingenabled());
    }
    if (cached_has_bits & 0x00000800u) {
      _internal_mutable_urlblocklist()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_urlblocklist());
    }
    if (cached_has_bits & 0x00001000u) {
      _internal_mutable_urlallowlist()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_urlallowlist());
    }
    if (cached_has_bits & 0x00002000u) {
      _internal_mutable_authnegotiatedelegateallowlist()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_authnegotiatedelegateallowlist());
    }
    if (cached_has_bits & 0x00004000u) {
      _internal_mutable_authserverallowlist()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_authserverallowlist());
    }
    if (cached_has_bits & 0x00008000u) {
      _internal_mutable_insecureformswarningsenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_insecureformswarningsenabled());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _internal_mutable_defaultsensorssetting()->::enterprise_management::IntegerPolicyProto::MergeFrom(from._internal_defaultsensorssetting());
    }
    if (cached_has_bits & 0x00020000u) {
      _internal_mutable_sensorsallowedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_sensorsallowedforurls());
    }
    if (cached_has_bits & 0x00040000u) {
      _internal_mutable_sensorsblockedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_sensorsblockedforurls());
    }
    if (cached_has_bits & 0x00080000u) {
      _internal_mutable_backforwardcacheenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_backforwardcacheenabled());
    }
    if (cached_has_bits & 0x00100000u) {
      _internal_mutable_insecureprivatenetworkrequestsallowed()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_insecureprivatenetworkrequestsallowed());
    }
    if (cached_has_bits & 0x00200000u) {
      _internal_mutable_insecureprivatenetworkrequestsallowedforurls()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_insecureprivatenetworkrequestsallowedforurls());
    }
    if (cached_has_bits & 0x00400000u) {
      _internal_mutable_lookalikewarningallowlistdomains()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_lookalikewarningallowlistdomains());
    }
    if (cached_has_bits & 0x00800000u) {
      _internal_mutable_browsingdatalifetime()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_browsingdatalifetime());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _internal_mutable_tosdialogbehavior()->::enterprise_management::IntegerPolicyProto::MergeFrom(from._internal_tosdialogbehavior());
    }
    if (cached_has_bits & 0x02000000u) {
      _internal_mutable_sslerroroverrideallowedfororigins()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_sslerroroverrideallowedfororigins());
    }
    if (cached_has_bits & 0x04000000u) {
      _internal_mutable_webxrimmersivearenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_webxrimmersivearenabled());
    }
    if (cached_has_bits & 0x08000000u) {
      _internal_mutable_suppressdifferentoriginsubframedialogs()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_suppressdifferentoriginsubframedialogs());
    }
    if (cached_has_bits & 0x10000000u) {
      _internal_mutable_cecpq2enabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_cecpq2enabled());
    }
    if (cached_has_bits & 0x20000000u) {
      _internal_mutable_explicitlyallowednetworkports()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_explicitlyallowednetworkports());
    }
    if (cached_has_bits & 0x40000000u) {
      _internal_mutable_lenscameraassistedsearchenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_lenscameraassistedsearchenabled());
    }
    if (cached_has_bits & 0x80000000u) {
      _internal_mutable_additionaldnsquerytypesenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_additionaldnsquerytypesenabled());
    }
  }
  cached_has_bits = from._has_bits_[4];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_clouduserpolicymerge()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_clouduserpolicymerge());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_defaultjavascriptjitsetting()->::enterprise_management::IntegerPolicyProto::MergeFrom(from._internal_defaultjavascriptjitsetting());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_javascriptjitallowedforsites()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_javascriptjitallowedforsites());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_javascriptjitblockedforsites()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_javascriptjitblockedforsites());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_httpsonlymode()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_httpsonlymode());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_clouduserpolicyoverridescloudmachinepolicy()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_clouduserpolicyoverridescloudmachinepolicy());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_corsnonwildcardrequestheaderssupport()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_corsnonwildcardrequestheaderssupport());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_useragentclienthintsgreaseupdateenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_useragentclienthintsgreaseupdateenabled());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_useragentreduction()->::enterprise_management::IntegerPolicyProto::MergeFrom(from._internal_useragentreduction());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_cloudprofilereportingenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_cloudprofilereportingenabled());
    }
    if (cached_has_bits & 0x00000400u) {
      _internal_mutable_firstpartysetsenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_firstpartysetsenabled());
    }
    if (cached_has_bits & 0x00000800u) {
      _internal_mutable_forcemajorversiontominorpositioninuseragent()->::enterprise_management::IntegerPolicyProto::MergeFrom(from._internal_forcemajorversiontominorpositioninuseragent());
    }
    if (cached_has_bits & 0x00001000u) {
      _internal_mutable_allhttpauthschemesallowedfororigins()->::enterprise_management::StringListPolicyProto::MergeFrom(from._internal_allhttpauthschemesallowedfororigins());
    }
    if (cached_has_bits & 0x00002000u) {
      _internal_mutable_cloudreportinguploadfrequency()->::enterprise_management::IntegerPolicyProto::MergeFrom(from._internal_cloudreportinguploadfrequency());
    }
    if (cached_has_bits & 0x00004000u) {
      _internal_mutable_websqlaccess()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_websqlaccess());
    }
    if (cached_has_bits & 0x00008000u) {
      _internal_mutable_settimeoutwithout1msclampenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_settimeoutwithout1msclampenabled());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _internal_mutable_firstpartysetsoverrides()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_firstpartysetsoverrides());
    }
    if (cached_has_bits & 0x00020000u) {
      _internal_mutable_enterpriseauthenticationapplinkpolicy()->::enterprise_management::StringPolicyProto::MergeFrom(from._internal_enterpriseauthenticationapplinkpolicy());
    }
    if (cached_has_bits & 0x00040000u) {
      _internal_mutable_urlparamfilterenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_urlparamfilterenabled());
    }
    if (cached_has_bits & 0x00080000u) {
      _internal_mutable_unthrottlednestedtimeoutenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_unthrottlednestedtimeoutenabled());
    }
    if (cached_has_bits & 0x00100000u) {
      _internal_mutable_eventpathenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_eventpathenabled());
    }
    if (cached_has_bits & 0x00200000u) {
      _internal_mutable_websqlnonsecurecontextenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_websqlnonsecurecontextenabled());
    }
    if (cached_has_bits & 0x00400000u) {
      _internal_mutable_encryptedclienthelloenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_encryptedclienthelloenabled());
    }
    if (cached_has_bits & 0x00800000u) {
      _internal_mutable_persistentquotaenabled()->::enterprise_management::BooleanPolicyProto::MergeFrom(from._internal_persistentquotaenabled());
    }
  }
  _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void CloudPolicySettings::CopyFrom(const CloudPolicySettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:enterprise_management.CloudPolicySettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloudPolicySettings::IsInitialized() const {
  return true;
}

void CloudPolicySettings::InternalSwap(CloudPolicySettings* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(_has_bits_[1], other->_has_bits_[1]);
  swap(_has_bits_[2], other->_has_bits_[2]);
  swap(_has_bits_[3], other->_has_bits_[3]);
  swap(_has_bits_[4], other->_has_bits_[4]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CloudPolicySettings, persistentquotaenabled_)
      + sizeof(CloudPolicySettings::persistentquotaenabled_)
      - PROTOBUF_FIELD_OFFSET(CloudPolicySettings, homepagelocation_)>(
          reinterpret_cast<char*>(&homepagelocation_),
          reinterpret_cast<char*>(&other->homepagelocation_));
}

std::string CloudPolicySettings::GetTypeName() const {
  return "enterprise_management.CloudPolicySettings";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace enterprise_management
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::enterprise_management::CloudPolicySettings*
Arena::CreateMaybeMessage< ::enterprise_management::CloudPolicySettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::enterprise_management::CloudPolicySettings >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
