// components/ml/mojom/web_platform_model.mojom-blink-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_ML_MOJOM_WEB_PLATFORM_MODEL_MOJOM_BLINK_TEST_UTILS_H_
#define COMPONENTS_ML_MOJOM_WEB_PLATFORM_MODEL_MOJOM_BLINK_TEST_UTILS_H_

#include "components/ml/mojom/web_platform_model.mojom-blink.h"


namespace ml {
namespace model_loader {
namespace mojom {
namespace blink {


class  ModelLoaderInterceptorForTesting : public ModelLoader {
  virtual ModelLoader* GetForwardingInterface() = 0;
  void Load(::mojo_base::BigBuffer model_content, LoadCallback callback) override;
};
class  ModelLoaderAsyncWaiter {
 public:
  explicit ModelLoaderAsyncWaiter(ModelLoader* proxy);

  ModelLoaderAsyncWaiter(const ModelLoaderAsyncWaiter&) = delete;
  ModelLoaderAsyncWaiter& operator=(const ModelLoaderAsyncWaiter&) = delete;

  ~ModelLoaderAsyncWaiter();
  void Load(
      ::mojo_base::BigBuffer model_content, LoadModelResult* out_result, ::mojo::PendingRemote<Model>* out_remote, ModelInfoPtr* out_model_info);

 private:
  ModelLoader* const proxy_;
};


class  ModelInterceptorForTesting : public Model {
  virtual Model* GetForwardingInterface() = 0;
  void Compute(const WTF::HashMap<WTF::String, WTF::Vector<uint8_t>>& input_tensors, ComputeCallback callback) override;
};
class  ModelAsyncWaiter {
 public:
  explicit ModelAsyncWaiter(Model* proxy);

  ModelAsyncWaiter(const ModelAsyncWaiter&) = delete;
  ModelAsyncWaiter& operator=(const ModelAsyncWaiter&) = delete;

  ~ModelAsyncWaiter();
  void Compute(
      const WTF::HashMap<WTF::String, WTF::Vector<uint8_t>>& input_tensors, ComputeResult* out_result, absl::optional<WTF::HashMap<WTF::String, WTF::Vector<uint8_t>>>* out_output_tensors);

 private:
  Model* const proxy_;
};




}  // namespace blink
}  // namespace mojom
}  // namespace model_loader
}  // namespace ml

#endif  // COMPONENTS_ML_MOJOM_WEB_PLATFORM_MODEL_MOJOM_BLINK_TEST_UTILS_H_