// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/feature_engagement/CppWrappedTestTracker

#ifndef org_chromium_components_feature_engagement_CppWrappedTestTracker_JNI
#define org_chromium_components_feature_engagement_CppWrappedTestTracker_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_feature_1engagement_CppWrappedTestTracker[];
const char kClassPath_org_chromium_components_feature_1engagement_CppWrappedTestTracker[] =
    "org/chromium/components/feature_engagement/CppWrappedTestTracker";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_feature_1engagement_CppWrappedTestTracker_clazz(nullptr);
#ifndef org_chromium_components_feature_1engagement_CppWrappedTestTracker_clazz_defined
#define org_chromium_components_feature_1engagement_CppWrappedTestTracker_clazz_defined
inline jclass org_chromium_components_feature_1engagement_CppWrappedTestTracker_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_feature_1engagement_CppWrappedTestTracker,
      &g_org_chromium_components_feature_1engagement_CppWrappedTestTracker_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace feature_engagement {


static std::atomic<jmethodID>
    g_org_chromium_components_feature_1engagement_CppWrappedTestTracker_notifyEvent(nullptr);
static void Java_CppWrappedTestTracker_notifyEvent(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& event) {
  jclass clazz = org_chromium_components_feature_1engagement_CppWrappedTestTracker_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_feature_1engagement_CppWrappedTestTracker_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "notifyEvent",
          "(Ljava/lang/String;)V",
          &g_org_chromium_components_feature_1engagement_CppWrappedTestTracker_notifyEvent);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, event.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_feature_1engagement_CppWrappedTestTracker_shouldTriggerHelpUI(nullptr);
static jboolean Java_CppWrappedTestTracker_shouldTriggerHelpUI(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& feature) {
  jclass clazz = org_chromium_components_feature_1engagement_CppWrappedTestTracker_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_feature_1engagement_CppWrappedTestTracker_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "shouldTriggerHelpUI",
          "(Ljava/lang/String;)Z",
          &g_org_chromium_components_feature_1engagement_CppWrappedTestTracker_shouldTriggerHelpUI);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id, feature.obj());
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_feature_1engagement_CppWrappedTestTracker_wouldTriggerHelpUI(nullptr);
static jboolean Java_CppWrappedTestTracker_wouldTriggerHelpUI(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& feature) {
  jclass clazz = org_chromium_components_feature_1engagement_CppWrappedTestTracker_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_feature_1engagement_CppWrappedTestTracker_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "wouldTriggerHelpUI",
          "(Ljava/lang/String;)Z",
          &g_org_chromium_components_feature_1engagement_CppWrappedTestTracker_wouldTriggerHelpUI);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id, feature.obj());
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_feature_1engagement_CppWrappedTestTracker_hasEverTriggered(nullptr);
static jboolean Java_CppWrappedTestTracker_hasEverTriggered(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& feature,
    jboolean fromWindow) {
  jclass clazz = org_chromium_components_feature_1engagement_CppWrappedTestTracker_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_feature_1engagement_CppWrappedTestTracker_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "hasEverTriggered",
          "(Ljava/lang/String;Z)Z",
          &g_org_chromium_components_feature_1engagement_CppWrappedTestTracker_hasEverTriggered);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id, feature.obj(), fromWindow);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_feature_1engagement_CppWrappedTestTracker_getTriggerState(nullptr);
static jint Java_CppWrappedTestTracker_getTriggerState(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& feature) {
  jclass clazz = org_chromium_components_feature_1engagement_CppWrappedTestTracker_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_feature_1engagement_CppWrappedTestTracker_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getTriggerState",
          "(Ljava/lang/String;)I",
          &g_org_chromium_components_feature_1engagement_CppWrappedTestTracker_getTriggerState);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id, feature.obj());
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_feature_1engagement_CppWrappedTestTracker_dismissed(nullptr);
static void Java_CppWrappedTestTracker_dismissed(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj, const base::android::JavaRef<jstring>& feature) {
  jclass clazz = org_chromium_components_feature_1engagement_CppWrappedTestTracker_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_feature_1engagement_CppWrappedTestTracker_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "dismissed",
          "(Ljava/lang/String;)V",
          &g_org_chromium_components_feature_1engagement_CppWrappedTestTracker_dismissed);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, feature.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_feature_1engagement_CppWrappedTestTracker_dismissedWithSnooze(nullptr);
static void Java_CppWrappedTestTracker_dismissedWithSnooze(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& feature,
    JniIntWrapper snoozeAction) {
  jclass clazz = org_chromium_components_feature_1engagement_CppWrappedTestTracker_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_feature_1engagement_CppWrappedTestTracker_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "dismissedWithSnooze",
          "(Ljava/lang/String;I)V",
          &g_org_chromium_components_feature_1engagement_CppWrappedTestTracker_dismissedWithSnooze);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, feature.obj(), as_jint(snoozeAction));
}

static std::atomic<jmethodID>
    g_org_chromium_components_feature_1engagement_CppWrappedTestTracker_isInitialized(nullptr);
static jboolean Java_CppWrappedTestTracker_isInitialized(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_feature_1engagement_CppWrappedTestTracker_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_feature_1engagement_CppWrappedTestTracker_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "isInitialized",
          "()Z",
          &g_org_chromium_components_feature_1engagement_CppWrappedTestTracker_isInitialized);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

}  // namespace feature_engagement

#endif  // org_chromium_components_feature_engagement_CppWrappedTestTracker_JNI
