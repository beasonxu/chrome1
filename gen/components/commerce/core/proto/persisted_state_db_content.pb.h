// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/commerce/core/proto/persisted_state_db_content.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_components_2fcommerce_2fcore_2fproto_2fpersisted_5fstate_5fdb_5fcontent_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_components_2fcommerce_2fcore_2fproto_2fpersisted_5fstate_5fdb_5fcontent_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_components_2fcommerce_2fcore_2fproto_2fpersisted_5fstate_5fdb_5fcontent_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_components_2fcommerce_2fcore_2fproto_2fpersisted_5fstate_5fdb_5fcontent_2eproto {
  static const uint32_t offsets[];
};
namespace persisted_state_db {
class PersistedStateContentProto;
struct PersistedStateContentProtoDefaultTypeInternal;
extern PersistedStateContentProtoDefaultTypeInternal _PersistedStateContentProto_default_instance_;
}  // namespace persisted_state_db
PROTOBUF_NAMESPACE_OPEN
template<> ::persisted_state_db::PersistedStateContentProto* Arena::CreateMaybeMessage<::persisted_state_db::PersistedStateContentProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace persisted_state_db {

// ===================================================================

class PersistedStateContentProto final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:persisted_state_db.PersistedStateContentProto) */ {
 public:
  inline PersistedStateContentProto() : PersistedStateContentProto(nullptr) {}
  ~PersistedStateContentProto() override;
  explicit PROTOBUF_CONSTEXPR PersistedStateContentProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PersistedStateContentProto(const PersistedStateContentProto& from);
  PersistedStateContentProto(PersistedStateContentProto&& from) noexcept
    : PersistedStateContentProto() {
    *this = ::std::move(from);
  }

  inline PersistedStateContentProto& operator=(const PersistedStateContentProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline PersistedStateContentProto& operator=(PersistedStateContentProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const PersistedStateContentProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const PersistedStateContentProto* internal_default_instance() {
    return reinterpret_cast<const PersistedStateContentProto*>(
               &_PersistedStateContentProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PersistedStateContentProto& a, PersistedStateContentProto& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(PersistedStateContentProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PersistedStateContentProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PersistedStateContentProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PersistedStateContentProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const PersistedStateContentProto& from);
  void MergeFrom(const PersistedStateContentProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PersistedStateContentProto* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "persisted_state_db.PersistedStateContentProto";
  }
  protected:
  explicit PersistedStateContentProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
    kContentDataFieldNumber = 2,
  };
  // optional string key = 1;
  bool has_key() const;
  private:
  bool _internal_has_key() const;
  public:
  void clear_key();
  const std::string& key() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_key(ArgT0&& arg0, ArgT... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* key);
  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(const std::string& value);
  std::string* _internal_mutable_key();
  public:

  // optional bytes content_data = 2;
  bool has_content_data() const;
  private:
  bool _internal_has_content_data() const;
  public:
  void clear_content_data();
  const std::string& content_data() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_content_data(ArgT0&& arg0, ArgT... args);
  std::string* mutable_content_data();
  PROTOBUF_NODISCARD std::string* release_content_data();
  void set_allocated_content_data(std::string* content_data);
  private:
  const std::string& _internal_content_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_content_data(const std::string& value);
  std::string* _internal_mutable_content_data();
  public:

  // @@protoc_insertion_point(class_scope:persisted_state_db.PersistedStateContentProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr content_data_;
  friend struct ::TableStruct_components_2fcommerce_2fcore_2fproto_2fpersisted_5fstate_5fdb_5fcontent_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PersistedStateContentProto

// optional string key = 1;
inline bool PersistedStateContentProto::_internal_has_key() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PersistedStateContentProto::has_key() const {
  return _internal_has_key();
}
inline void PersistedStateContentProto::clear_key() {
  key_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PersistedStateContentProto::key() const {
  // @@protoc_insertion_point(field_get:persisted_state_db.PersistedStateContentProto.key)
  return _internal_key();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PersistedStateContentProto::set_key(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 key_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:persisted_state_db.PersistedStateContentProto.key)
}
inline std::string* PersistedStateContentProto::mutable_key() {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:persisted_state_db.PersistedStateContentProto.key)
  return _s;
}
inline const std::string& PersistedStateContentProto::_internal_key() const {
  return key_.Get();
}
inline void PersistedStateContentProto::_internal_set_key(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  key_.Set(value, GetArenaForAllocation());
}
inline std::string* PersistedStateContentProto::_internal_mutable_key() {
  _has_bits_[0] |= 0x00000001u;
  return key_.Mutable(GetArenaForAllocation());
}
inline std::string* PersistedStateContentProto::release_key() {
  // @@protoc_insertion_point(field_release:persisted_state_db.PersistedStateContentProto.key)
  if (!_internal_has_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = key_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (key_.IsDefault()) {
    key_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void PersistedStateContentProto::set_allocated_key(std::string* key) {
  if (key != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  key_.SetAllocated(key, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (key_.IsDefault()) {
    key_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:persisted_state_db.PersistedStateContentProto.key)
}

// optional bytes content_data = 2;
inline bool PersistedStateContentProto::_internal_has_content_data() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PersistedStateContentProto::has_content_data() const {
  return _internal_has_content_data();
}
inline void PersistedStateContentProto::clear_content_data() {
  content_data_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& PersistedStateContentProto::content_data() const {
  // @@protoc_insertion_point(field_get:persisted_state_db.PersistedStateContentProto.content_data)
  return _internal_content_data();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PersistedStateContentProto::set_content_data(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 content_data_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:persisted_state_db.PersistedStateContentProto.content_data)
}
inline std::string* PersistedStateContentProto::mutable_content_data() {
  std::string* _s = _internal_mutable_content_data();
  // @@protoc_insertion_point(field_mutable:persisted_state_db.PersistedStateContentProto.content_data)
  return _s;
}
inline const std::string& PersistedStateContentProto::_internal_content_data() const {
  return content_data_.Get();
}
inline void PersistedStateContentProto::_internal_set_content_data(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  content_data_.Set(value, GetArenaForAllocation());
}
inline std::string* PersistedStateContentProto::_internal_mutable_content_data() {
  _has_bits_[0] |= 0x00000002u;
  return content_data_.Mutable(GetArenaForAllocation());
}
inline std::string* PersistedStateContentProto::release_content_data() {
  // @@protoc_insertion_point(field_release:persisted_state_db.PersistedStateContentProto.content_data)
  if (!_internal_has_content_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  auto* p = content_data_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (content_data_.IsDefault()) {
    content_data_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void PersistedStateContentProto::set_allocated_content_data(std::string* content_data) {
  if (content_data != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  content_data_.SetAllocated(content_data, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (content_data_.IsDefault()) {
    content_data_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:persisted_state_db.PersistedStateContentProto.content_data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace persisted_state_db

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_components_2fcommerce_2fcore_2fproto_2fpersisted_5fstate_5fdb_5fcontent_2eproto
