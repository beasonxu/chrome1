// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/commerce/core/proto/merchant_trust.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_components_2fcommerce_2fcore_2fproto_2fmerchant_5ftrust_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_components_2fcommerce_2fcore_2fproto_2fmerchant_5ftrust_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_components_2fcommerce_2fcore_2fproto_2fmerchant_5ftrust_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_components_2fcommerce_2fcore_2fproto_2fmerchant_5ftrust_2eproto {
  static const uint32_t offsets[];
};
namespace commerce {
class MerchantTrustSignalsV2;
struct MerchantTrustSignalsV2DefaultTypeInternal;
extern MerchantTrustSignalsV2DefaultTypeInternal _MerchantTrustSignalsV2_default_instance_;
}  // namespace commerce
PROTOBUF_NAMESPACE_OPEN
template<> ::commerce::MerchantTrustSignalsV2* Arena::CreateMaybeMessage<::commerce::MerchantTrustSignalsV2>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace commerce {

// ===================================================================

class MerchantTrustSignalsV2 final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:commerce.MerchantTrustSignalsV2) */ {
 public:
  inline MerchantTrustSignalsV2() : MerchantTrustSignalsV2(nullptr) {}
  ~MerchantTrustSignalsV2() override;
  explicit PROTOBUF_CONSTEXPR MerchantTrustSignalsV2(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MerchantTrustSignalsV2(const MerchantTrustSignalsV2& from);
  MerchantTrustSignalsV2(MerchantTrustSignalsV2&& from) noexcept
    : MerchantTrustSignalsV2() {
    *this = ::std::move(from);
  }

  inline MerchantTrustSignalsV2& operator=(const MerchantTrustSignalsV2& from) {
    CopyFrom(from);
    return *this;
  }
  inline MerchantTrustSignalsV2& operator=(MerchantTrustSignalsV2&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const MerchantTrustSignalsV2& default_instance() {
    return *internal_default_instance();
  }
  static inline const MerchantTrustSignalsV2* internal_default_instance() {
    return reinterpret_cast<const MerchantTrustSignalsV2*>(
               &_MerchantTrustSignalsV2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MerchantTrustSignalsV2& a, MerchantTrustSignalsV2& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(MerchantTrustSignalsV2* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MerchantTrustSignalsV2* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MerchantTrustSignalsV2* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MerchantTrustSignalsV2>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const MerchantTrustSignalsV2& from);
  void MergeFrom(const MerchantTrustSignalsV2& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MerchantTrustSignalsV2* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "commerce.MerchantTrustSignalsV2";
  }
  protected:
  explicit MerchantTrustSignalsV2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMerchantDetailsPageUrlFieldNumber = 3,
    kMerchantStarRatingFieldNumber = 1,
    kMerchantCountRatingFieldNumber = 2,
    kNonPersonalizedFamiliarityScoreFieldNumber = 5,
    kHasReturnPolicyFieldNumber = 4,
    kContainsSensitiveContentFieldNumber = 6,
    kProactiveMessageDisabledFieldNumber = 7,
  };
  // optional string merchant_details_page_url = 3;
  bool has_merchant_details_page_url() const;
  private:
  bool _internal_has_merchant_details_page_url() const;
  public:
  void clear_merchant_details_page_url();
  const std::string& merchant_details_page_url() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_merchant_details_page_url(ArgT0&& arg0, ArgT... args);
  std::string* mutable_merchant_details_page_url();
  PROTOBUF_NODISCARD std::string* release_merchant_details_page_url();
  void set_allocated_merchant_details_page_url(std::string* merchant_details_page_url);
  private:
  const std::string& _internal_merchant_details_page_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_merchant_details_page_url(const std::string& value);
  std::string* _internal_mutable_merchant_details_page_url();
  public:

  // optional float merchant_star_rating = 1;
  bool has_merchant_star_rating() const;
  private:
  bool _internal_has_merchant_star_rating() const;
  public:
  void clear_merchant_star_rating();
  float merchant_star_rating() const;
  void set_merchant_star_rating(float value);
  private:
  float _internal_merchant_star_rating() const;
  void _internal_set_merchant_star_rating(float value);
  public:

  // optional int32 merchant_count_rating = 2;
  bool has_merchant_count_rating() const;
  private:
  bool _internal_has_merchant_count_rating() const;
  public:
  void clear_merchant_count_rating();
  int32_t merchant_count_rating() const;
  void set_merchant_count_rating(int32_t value);
  private:
  int32_t _internal_merchant_count_rating() const;
  void _internal_set_merchant_count_rating(int32_t value);
  public:

  // optional float non_personalized_familiarity_score = 5;
  bool has_non_personalized_familiarity_score() const;
  private:
  bool _internal_has_non_personalized_familiarity_score() const;
  public:
  void clear_non_personalized_familiarity_score();
  float non_personalized_familiarity_score() const;
  void set_non_personalized_familiarity_score(float value);
  private:
  float _internal_non_personalized_familiarity_score() const;
  void _internal_set_non_personalized_familiarity_score(float value);
  public:

  // optional bool has_return_policy = 4;
  bool has_has_return_policy() const;
  private:
  bool _internal_has_has_return_policy() const;
  public:
  void clear_has_return_policy();
  bool has_return_policy() const;
  void set_has_return_policy(bool value);
  private:
  bool _internal_has_return_policy() const;
  void _internal_set_has_return_policy(bool value);
  public:

  // optional bool contains_sensitive_content = 6;
  bool has_contains_sensitive_content() const;
  private:
  bool _internal_has_contains_sensitive_content() const;
  public:
  void clear_contains_sensitive_content();
  bool contains_sensitive_content() const;
  void set_contains_sensitive_content(bool value);
  private:
  bool _internal_contains_sensitive_content() const;
  void _internal_set_contains_sensitive_content(bool value);
  public:

  // optional bool proactive_message_disabled = 7;
  bool has_proactive_message_disabled() const;
  private:
  bool _internal_has_proactive_message_disabled() const;
  public:
  void clear_proactive_message_disabled();
  bool proactive_message_disabled() const;
  void set_proactive_message_disabled(bool value);
  private:
  bool _internal_proactive_message_disabled() const;
  void _internal_set_proactive_message_disabled(bool value);
  public:

  // @@protoc_insertion_point(class_scope:commerce.MerchantTrustSignalsV2)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr merchant_details_page_url_;
  float merchant_star_rating_;
  int32_t merchant_count_rating_;
  float non_personalized_familiarity_score_;
  bool has_return_policy_;
  bool contains_sensitive_content_;
  bool proactive_message_disabled_;
  friend struct ::TableStruct_components_2fcommerce_2fcore_2fproto_2fmerchant_5ftrust_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MerchantTrustSignalsV2

// optional float merchant_star_rating = 1;
inline bool MerchantTrustSignalsV2::_internal_has_merchant_star_rating() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MerchantTrustSignalsV2::has_merchant_star_rating() const {
  return _internal_has_merchant_star_rating();
}
inline void MerchantTrustSignalsV2::clear_merchant_star_rating() {
  merchant_star_rating_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float MerchantTrustSignalsV2::_internal_merchant_star_rating() const {
  return merchant_star_rating_;
}
inline float MerchantTrustSignalsV2::merchant_star_rating() const {
  // @@protoc_insertion_point(field_get:commerce.MerchantTrustSignalsV2.merchant_star_rating)
  return _internal_merchant_star_rating();
}
inline void MerchantTrustSignalsV2::_internal_set_merchant_star_rating(float value) {
  _has_bits_[0] |= 0x00000002u;
  merchant_star_rating_ = value;
}
inline void MerchantTrustSignalsV2::set_merchant_star_rating(float value) {
  _internal_set_merchant_star_rating(value);
  // @@protoc_insertion_point(field_set:commerce.MerchantTrustSignalsV2.merchant_star_rating)
}

// optional int32 merchant_count_rating = 2;
inline bool MerchantTrustSignalsV2::_internal_has_merchant_count_rating() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MerchantTrustSignalsV2::has_merchant_count_rating() const {
  return _internal_has_merchant_count_rating();
}
inline void MerchantTrustSignalsV2::clear_merchant_count_rating() {
  merchant_count_rating_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline int32_t MerchantTrustSignalsV2::_internal_merchant_count_rating() const {
  return merchant_count_rating_;
}
inline int32_t MerchantTrustSignalsV2::merchant_count_rating() const {
  // @@protoc_insertion_point(field_get:commerce.MerchantTrustSignalsV2.merchant_count_rating)
  return _internal_merchant_count_rating();
}
inline void MerchantTrustSignalsV2::_internal_set_merchant_count_rating(int32_t value) {
  _has_bits_[0] |= 0x00000004u;
  merchant_count_rating_ = value;
}
inline void MerchantTrustSignalsV2::set_merchant_count_rating(int32_t value) {
  _internal_set_merchant_count_rating(value);
  // @@protoc_insertion_point(field_set:commerce.MerchantTrustSignalsV2.merchant_count_rating)
}

// optional string merchant_details_page_url = 3;
inline bool MerchantTrustSignalsV2::_internal_has_merchant_details_page_url() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MerchantTrustSignalsV2::has_merchant_details_page_url() const {
  return _internal_has_merchant_details_page_url();
}
inline void MerchantTrustSignalsV2::clear_merchant_details_page_url() {
  merchant_details_page_url_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MerchantTrustSignalsV2::merchant_details_page_url() const {
  // @@protoc_insertion_point(field_get:commerce.MerchantTrustSignalsV2.merchant_details_page_url)
  return _internal_merchant_details_page_url();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void MerchantTrustSignalsV2::set_merchant_details_page_url(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 merchant_details_page_url_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:commerce.MerchantTrustSignalsV2.merchant_details_page_url)
}
inline std::string* MerchantTrustSignalsV2::mutable_merchant_details_page_url() {
  std::string* _s = _internal_mutable_merchant_details_page_url();
  // @@protoc_insertion_point(field_mutable:commerce.MerchantTrustSignalsV2.merchant_details_page_url)
  return _s;
}
inline const std::string& MerchantTrustSignalsV2::_internal_merchant_details_page_url() const {
  return merchant_details_page_url_.Get();
}
inline void MerchantTrustSignalsV2::_internal_set_merchant_details_page_url(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  merchant_details_page_url_.Set(value, GetArenaForAllocation());
}
inline std::string* MerchantTrustSignalsV2::_internal_mutable_merchant_details_page_url() {
  _has_bits_[0] |= 0x00000001u;
  return merchant_details_page_url_.Mutable(GetArenaForAllocation());
}
inline std::string* MerchantTrustSignalsV2::release_merchant_details_page_url() {
  // @@protoc_insertion_point(field_release:commerce.MerchantTrustSignalsV2.merchant_details_page_url)
  if (!_internal_has_merchant_details_page_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = merchant_details_page_url_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (merchant_details_page_url_.IsDefault()) {
    merchant_details_page_url_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void MerchantTrustSignalsV2::set_allocated_merchant_details_page_url(std::string* merchant_details_page_url) {
  if (merchant_details_page_url != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  merchant_details_page_url_.SetAllocated(merchant_details_page_url, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (merchant_details_page_url_.IsDefault()) {
    merchant_details_page_url_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:commerce.MerchantTrustSignalsV2.merchant_details_page_url)
}

// optional bool has_return_policy = 4;
inline bool MerchantTrustSignalsV2::_internal_has_has_return_policy() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MerchantTrustSignalsV2::has_has_return_policy() const {
  return _internal_has_has_return_policy();
}
inline void MerchantTrustSignalsV2::clear_has_return_policy() {
  has_return_policy_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool MerchantTrustSignalsV2::_internal_has_return_policy() const {
  return has_return_policy_;
}
inline bool MerchantTrustSignalsV2::has_return_policy() const {
  // @@protoc_insertion_point(field_get:commerce.MerchantTrustSignalsV2.has_return_policy)
  return _internal_has_return_policy();
}
inline void MerchantTrustSignalsV2::_internal_set_has_return_policy(bool value) {
  _has_bits_[0] |= 0x00000010u;
  has_return_policy_ = value;
}
inline void MerchantTrustSignalsV2::set_has_return_policy(bool value) {
  _internal_set_has_return_policy(value);
  // @@protoc_insertion_point(field_set:commerce.MerchantTrustSignalsV2.has_return_policy)
}

// optional float non_personalized_familiarity_score = 5;
inline bool MerchantTrustSignalsV2::_internal_has_non_personalized_familiarity_score() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MerchantTrustSignalsV2::has_non_personalized_familiarity_score() const {
  return _internal_has_non_personalized_familiarity_score();
}
inline void MerchantTrustSignalsV2::clear_non_personalized_familiarity_score() {
  non_personalized_familiarity_score_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float MerchantTrustSignalsV2::_internal_non_personalized_familiarity_score() const {
  return non_personalized_familiarity_score_;
}
inline float MerchantTrustSignalsV2::non_personalized_familiarity_score() const {
  // @@protoc_insertion_point(field_get:commerce.MerchantTrustSignalsV2.non_personalized_familiarity_score)
  return _internal_non_personalized_familiarity_score();
}
inline void MerchantTrustSignalsV2::_internal_set_non_personalized_familiarity_score(float value) {
  _has_bits_[0] |= 0x00000008u;
  non_personalized_familiarity_score_ = value;
}
inline void MerchantTrustSignalsV2::set_non_personalized_familiarity_score(float value) {
  _internal_set_non_personalized_familiarity_score(value);
  // @@protoc_insertion_point(field_set:commerce.MerchantTrustSignalsV2.non_personalized_familiarity_score)
}

// optional bool contains_sensitive_content = 6;
inline bool MerchantTrustSignalsV2::_internal_has_contains_sensitive_content() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool MerchantTrustSignalsV2::has_contains_sensitive_content() const {
  return _internal_has_contains_sensitive_content();
}
inline void MerchantTrustSignalsV2::clear_contains_sensitive_content() {
  contains_sensitive_content_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool MerchantTrustSignalsV2::_internal_contains_sensitive_content() const {
  return contains_sensitive_content_;
}
inline bool MerchantTrustSignalsV2::contains_sensitive_content() const {
  // @@protoc_insertion_point(field_get:commerce.MerchantTrustSignalsV2.contains_sensitive_content)
  return _internal_contains_sensitive_content();
}
inline void MerchantTrustSignalsV2::_internal_set_contains_sensitive_content(bool value) {
  _has_bits_[0] |= 0x00000020u;
  contains_sensitive_content_ = value;
}
inline void MerchantTrustSignalsV2::set_contains_sensitive_content(bool value) {
  _internal_set_contains_sensitive_content(value);
  // @@protoc_insertion_point(field_set:commerce.MerchantTrustSignalsV2.contains_sensitive_content)
}

// optional bool proactive_message_disabled = 7;
inline bool MerchantTrustSignalsV2::_internal_has_proactive_message_disabled() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool MerchantTrustSignalsV2::has_proactive_message_disabled() const {
  return _internal_has_proactive_message_disabled();
}
inline void MerchantTrustSignalsV2::clear_proactive_message_disabled() {
  proactive_message_disabled_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool MerchantTrustSignalsV2::_internal_proactive_message_disabled() const {
  return proactive_message_disabled_;
}
inline bool MerchantTrustSignalsV2::proactive_message_disabled() const {
  // @@protoc_insertion_point(field_get:commerce.MerchantTrustSignalsV2.proactive_message_disabled)
  return _internal_proactive_message_disabled();
}
inline void MerchantTrustSignalsV2::_internal_set_proactive_message_disabled(bool value) {
  _has_bits_[0] |= 0x00000040u;
  proactive_message_disabled_ = value;
}
inline void MerchantTrustSignalsV2::set_proactive_message_disabled(bool value) {
  _internal_set_proactive_message_disabled(value);
  // @@protoc_insertion_point(field_set:commerce.MerchantTrustSignalsV2.proactive_message_disabled)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace commerce

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_components_2fcommerce_2fcore_2fproto_2fmerchant_5ftrust_2eproto
