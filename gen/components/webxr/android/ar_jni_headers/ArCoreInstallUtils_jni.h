// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/webxr/ArCoreInstallUtils

#ifndef org_chromium_components_webxr_ArCoreInstallUtils_JNI
#define org_chromium_components_webxr_ArCoreInstallUtils_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_webxr_ArCoreInstallUtils[];
const char kClassPath_org_chromium_components_webxr_ArCoreInstallUtils[] =
    "org/chromium/components/webxr/ArCoreInstallUtils";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_webxr_ArCoreInstallUtils_clazz(nullptr);
#ifndef org_chromium_components_webxr_ArCoreInstallUtils_clazz_defined
#define org_chromium_components_webxr_ArCoreInstallUtils_clazz_defined
inline jclass org_chromium_components_webxr_ArCoreInstallUtils_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_webxr_ArCoreInstallUtils,
      &g_org_chromium_components_webxr_ArCoreInstallUtils_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace webxr {

JNI_GENERATOR_EXPORT void Java_J_N_Mwbowjjp(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeArCoreInstallHelper,
    jboolean success) {
  ArCoreInstallHelper* native = reinterpret_cast<ArCoreInstallHelper*>(nativeArCoreInstallHelper);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnRequestInstallSupportedArCoreResult");
  return native->OnRequestInstallSupportedArCoreResult(env, success);
}


static std::atomic<jmethodID> g_org_chromium_components_webxr_ArCoreInstallUtils_create(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_ArCoreInstallUtils_create(JNIEnv* env, jlong
    nativeArCoreInstallUtils) {
  jclass clazz = org_chromium_components_webxr_ArCoreInstallUtils_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_webxr_ArCoreInstallUtils_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "create",
          "(J)Lorg/chromium/components/webxr/ArCoreInstallUtils;",
          &g_org_chromium_components_webxr_ArCoreInstallUtils_create);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, nativeArCoreInstallUtils);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_webxr_ArCoreInstallUtils_onNativeDestroy(nullptr);
static void Java_ArCoreInstallUtils_onNativeDestroy(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_webxr_ArCoreInstallUtils_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_webxr_ArCoreInstallUtils_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onNativeDestroy",
          "()V",
          &g_org_chromium_components_webxr_ArCoreInstallUtils_onNativeDestroy);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_webxr_ArCoreInstallUtils_getArCoreInstallStatus(nullptr);
static jint Java_ArCoreInstallUtils_getArCoreInstallStatus(JNIEnv* env) {
  jclass clazz = org_chromium_components_webxr_ArCoreInstallUtils_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_webxr_ArCoreInstallUtils_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "getArCoreInstallStatus",
          "()I",
          &g_org_chromium_components_webxr_ArCoreInstallUtils_getArCoreInstallStatus);

  jint ret =
      env->CallStaticIntMethod(clazz,
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_webxr_ArCoreInstallUtils_shouldRequestInstallSupportedArCore(nullptr);
static jboolean Java_ArCoreInstallUtils_shouldRequestInstallSupportedArCore(JNIEnv* env) {
  jclass clazz = org_chromium_components_webxr_ArCoreInstallUtils_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_webxr_ArCoreInstallUtils_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "shouldRequestInstallSupportedArCore",
          "()Z",
          &g_org_chromium_components_webxr_ArCoreInstallUtils_shouldRequestInstallSupportedArCore);

  jboolean ret =
      env->CallStaticBooleanMethod(clazz,
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_webxr_ArCoreInstallUtils_requestInstallSupportedArCore(nullptr);
static void Java_ArCoreInstallUtils_requestInstallSupportedArCore(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>& webContents) {
  jclass clazz = org_chromium_components_webxr_ArCoreInstallUtils_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_webxr_ArCoreInstallUtils_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "requestInstallSupportedArCore",
          "(Lorg/chromium/content_public/browser/WebContents;)V",
          &g_org_chromium_components_webxr_ArCoreInstallUtils_requestInstallSupportedArCore);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, webContents.obj());
}

}  // namespace webxr

#endif  // org_chromium_components_webxr_ArCoreInstallUtils_JNI
