// components/browsing_topics/mojom/browsing_topics_internals.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_BROWSING_TOPICS_MOJOM_BROWSING_TOPICS_INTERNALS_MOJOM_PARAMS_DATA_H_
#define COMPONENTS_BROWSING_TOPICS_MOJOM_BROWSING_TOPICS_INTERNALS_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace browsing_topics {
namespace mojom {
namespace internal {

class ValidationContext;
class  PageHandler_GetBrowsingTopicsConfiguration_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<PageHandler_GetBrowsingTopicsConfiguration_Params_Data>;

  PageHandler_GetBrowsingTopicsConfiguration_Params_Data();
  ~PageHandler_GetBrowsingTopicsConfiguration_Params_Data() = delete;
};
static_assert(sizeof(PageHandler_GetBrowsingTopicsConfiguration_Params_Data) == 8,
              "Bad sizeof(PageHandler_GetBrowsingTopicsConfiguration_Params_Data)");
class  PageHandler_GetBrowsingTopicsConfiguration_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::WebUIBrowsingTopicsConfiguration_Data> config;

 private:
  friend class mojo::internal::MessageFragment<PageHandler_GetBrowsingTopicsConfiguration_ResponseParams_Data>;

  PageHandler_GetBrowsingTopicsConfiguration_ResponseParams_Data();
  ~PageHandler_GetBrowsingTopicsConfiguration_ResponseParams_Data() = delete;
};
static_assert(sizeof(PageHandler_GetBrowsingTopicsConfiguration_ResponseParams_Data) == 16,
              "Bad sizeof(PageHandler_GetBrowsingTopicsConfiguration_ResponseParams_Data)");
class  PageHandler_GetBrowsingTopicsState_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t calculate_now : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<PageHandler_GetBrowsingTopicsState_Params_Data>;

  PageHandler_GetBrowsingTopicsState_Params_Data();
  ~PageHandler_GetBrowsingTopicsState_Params_Data() = delete;
};
static_assert(sizeof(PageHandler_GetBrowsingTopicsState_Params_Data) == 16,
              "Bad sizeof(PageHandler_GetBrowsingTopicsState_Params_Data)");
class  PageHandler_GetBrowsingTopicsState_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  internal::WebUIGetBrowsingTopicsStateResult_Data result;

 private:
  friend class mojo::internal::MessageFragment<PageHandler_GetBrowsingTopicsState_ResponseParams_Data>;

  PageHandler_GetBrowsingTopicsState_ResponseParams_Data();
  ~PageHandler_GetBrowsingTopicsState_ResponseParams_Data() = delete;
};
static_assert(sizeof(PageHandler_GetBrowsingTopicsState_ResponseParams_Data) == 24,
              "Bad sizeof(PageHandler_GetBrowsingTopicsState_ResponseParams_Data)");
class  PageHandler_GetModelInfo_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<PageHandler_GetModelInfo_Params_Data>;

  PageHandler_GetModelInfo_Params_Data();
  ~PageHandler_GetModelInfo_Params_Data() = delete;
};
static_assert(sizeof(PageHandler_GetModelInfo_Params_Data) == 8,
              "Bad sizeof(PageHandler_GetModelInfo_Params_Data)");
class  PageHandler_GetModelInfo_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  internal::WebUIGetModelInfoResult_Data result;

 private:
  friend class mojo::internal::MessageFragment<PageHandler_GetModelInfo_ResponseParams_Data>;

  PageHandler_GetModelInfo_ResponseParams_Data();
  ~PageHandler_GetModelInfo_ResponseParams_Data() = delete;
};
static_assert(sizeof(PageHandler_GetModelInfo_ResponseParams_Data) == 24,
              "Bad sizeof(PageHandler_GetModelInfo_ResponseParams_Data)");
class  PageHandler_ClassifyHosts_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<mojo::internal::String_Data>>> hosts;

 private:
  friend class mojo::internal::MessageFragment<PageHandler_ClassifyHosts_Params_Data>;

  PageHandler_ClassifyHosts_Params_Data();
  ~PageHandler_ClassifyHosts_Params_Data() = delete;
};
static_assert(sizeof(PageHandler_ClassifyHosts_Params_Data) == 16,
              "Bad sizeof(PageHandler_ClassifyHosts_Params_Data)");
class  PageHandler_ClassifyHosts_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<internal::WebUITopic_Data>>>>> topics_for_hosts;

 private:
  friend class mojo::internal::MessageFragment<PageHandler_ClassifyHosts_ResponseParams_Data>;

  PageHandler_ClassifyHosts_ResponseParams_Data();
  ~PageHandler_ClassifyHosts_ResponseParams_Data() = delete;
};
static_assert(sizeof(PageHandler_ClassifyHosts_ResponseParams_Data) == 16,
              "Bad sizeof(PageHandler_ClassifyHosts_ResponseParams_Data)");

}  // namespace internal


class PageHandler_GetBrowsingTopicsConfiguration_ParamsDataView {
 public:
  PageHandler_GetBrowsingTopicsConfiguration_ParamsDataView() = default;

  PageHandler_GetBrowsingTopicsConfiguration_ParamsDataView(
      internal::PageHandler_GetBrowsingTopicsConfiguration_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::PageHandler_GetBrowsingTopicsConfiguration_Params_Data* data_ = nullptr;
};



class PageHandler_GetBrowsingTopicsConfiguration_ResponseParamsDataView {
 public:
  PageHandler_GetBrowsingTopicsConfiguration_ResponseParamsDataView() = default;

  PageHandler_GetBrowsingTopicsConfiguration_ResponseParamsDataView(
      internal::PageHandler_GetBrowsingTopicsConfiguration_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetConfigDataView(
      WebUIBrowsingTopicsConfigurationDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadConfig(UserType* output) {
    
    auto* pointer = data_->config.Get();
    return mojo::internal::Deserialize<::browsing_topics::mojom::WebUIBrowsingTopicsConfigurationDataView>(
        pointer, output, message_);
  }
 private:
  internal::PageHandler_GetBrowsingTopicsConfiguration_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PageHandler_GetBrowsingTopicsState_ParamsDataView {
 public:
  PageHandler_GetBrowsingTopicsState_ParamsDataView() = default;

  PageHandler_GetBrowsingTopicsState_ParamsDataView(
      internal::PageHandler_GetBrowsingTopicsState_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool calculate_now() const {
    return data_->calculate_now;
  }
 private:
  internal::PageHandler_GetBrowsingTopicsState_Params_Data* data_ = nullptr;
};



class PageHandler_GetBrowsingTopicsState_ResponseParamsDataView {
 public:
  PageHandler_GetBrowsingTopicsState_ResponseParamsDataView() = default;

  PageHandler_GetBrowsingTopicsState_ResponseParamsDataView(
      internal::PageHandler_GetBrowsingTopicsState_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetResultDataView(
      WebUIGetBrowsingTopicsStateResultDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadResult(UserType* output) {
    
    auto* pointer = !data_->result.is_null() ? &data_->result : nullptr;
    return mojo::internal::Deserialize<::browsing_topics::mojom::WebUIGetBrowsingTopicsStateResultDataView>(
        pointer, output, message_);
  }
 private:
  internal::PageHandler_GetBrowsingTopicsState_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PageHandler_GetModelInfo_ParamsDataView {
 public:
  PageHandler_GetModelInfo_ParamsDataView() = default;

  PageHandler_GetModelInfo_ParamsDataView(
      internal::PageHandler_GetModelInfo_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::PageHandler_GetModelInfo_Params_Data* data_ = nullptr;
};



class PageHandler_GetModelInfo_ResponseParamsDataView {
 public:
  PageHandler_GetModelInfo_ResponseParamsDataView() = default;

  PageHandler_GetModelInfo_ResponseParamsDataView(
      internal::PageHandler_GetModelInfo_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetResultDataView(
      WebUIGetModelInfoResultDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadResult(UserType* output) {
    
    auto* pointer = !data_->result.is_null() ? &data_->result : nullptr;
    return mojo::internal::Deserialize<::browsing_topics::mojom::WebUIGetModelInfoResultDataView>(
        pointer, output, message_);
  }
 private:
  internal::PageHandler_GetModelInfo_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PageHandler_ClassifyHosts_ParamsDataView {
 public:
  PageHandler_ClassifyHosts_ParamsDataView() = default;

  PageHandler_ClassifyHosts_ParamsDataView(
      internal::PageHandler_ClassifyHosts_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetHostsDataView(
      mojo::ArrayDataView<mojo::StringDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadHosts(UserType* output) {
    
    auto* pointer = data_->hosts.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<mojo::StringDataView>>(
        pointer, output, message_);
  }
 private:
  internal::PageHandler_ClassifyHosts_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PageHandler_ClassifyHosts_ResponseParamsDataView {
 public:
  PageHandler_ClassifyHosts_ResponseParamsDataView() = default;

  PageHandler_ClassifyHosts_ResponseParamsDataView(
      internal::PageHandler_ClassifyHosts_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetTopicsForHostsDataView(
      mojo::ArrayDataView<mojo::ArrayDataView<WebUITopicDataView>>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadTopicsForHosts(UserType* output) {
    
    auto* pointer = data_->topics_for_hosts.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<mojo::ArrayDataView<::browsing_topics::mojom::WebUITopicDataView>>>(
        pointer, output, message_);
  }
 private:
  internal::PageHandler_ClassifyHosts_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};




inline void PageHandler_GetBrowsingTopicsConfiguration_ResponseParamsDataView::GetConfigDataView(
    WebUIBrowsingTopicsConfigurationDataView* output) {
  auto pointer = data_->config.Get();
  *output = WebUIBrowsingTopicsConfigurationDataView(pointer, message_);
}




inline void PageHandler_GetBrowsingTopicsState_ResponseParamsDataView::GetResultDataView(
    WebUIGetBrowsingTopicsStateResultDataView* output) {
  auto pointer = &data_->result;
  *output = WebUIGetBrowsingTopicsStateResultDataView(pointer, message_);
}




inline void PageHandler_GetModelInfo_ResponseParamsDataView::GetResultDataView(
    WebUIGetModelInfoResultDataView* output) {
  auto pointer = &data_->result;
  *output = WebUIGetModelInfoResultDataView(pointer, message_);
}


inline void PageHandler_ClassifyHosts_ParamsDataView::GetHostsDataView(
    mojo::ArrayDataView<mojo::StringDataView>* output) {
  auto pointer = data_->hosts.Get();
  *output = mojo::ArrayDataView<mojo::StringDataView>(pointer, message_);
}


inline void PageHandler_ClassifyHosts_ResponseParamsDataView::GetTopicsForHostsDataView(
    mojo::ArrayDataView<mojo::ArrayDataView<WebUITopicDataView>>* output) {
  auto pointer = data_->topics_for_hosts.Get();
  *output = mojo::ArrayDataView<mojo::ArrayDataView<WebUITopicDataView>>(pointer, message_);
}

}  // namespace mojom
}  // namespace browsing_topics

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // COMPONENTS_BROWSING_TOPICS_MOJOM_BROWSING_TOPICS_INTERNALS_MOJOM_PARAMS_DATA_H_