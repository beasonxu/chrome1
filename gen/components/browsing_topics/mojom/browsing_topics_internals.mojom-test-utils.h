// components/browsing_topics/mojom/browsing_topics_internals.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_BROWSING_TOPICS_MOJOM_BROWSING_TOPICS_INTERNALS_MOJOM_TEST_UTILS_H_
#define COMPONENTS_BROWSING_TOPICS_MOJOM_BROWSING_TOPICS_INTERNALS_MOJOM_TEST_UTILS_H_

#include "components/browsing_topics/mojom/browsing_topics_internals.mojom.h"


namespace browsing_topics {
namespace mojom {


class  PageHandlerInterceptorForTesting : public PageHandler {
  virtual PageHandler* GetForwardingInterface() = 0;
  void GetBrowsingTopicsConfiguration(GetBrowsingTopicsConfigurationCallback callback) override;
  void GetBrowsingTopicsState(bool calculate_now, GetBrowsingTopicsStateCallback callback) override;
  void GetModelInfo(GetModelInfoCallback callback) override;
  void ClassifyHosts(const std::vector<std::string>& hosts, ClassifyHostsCallback callback) override;
};
class  PageHandlerAsyncWaiter {
 public:
  explicit PageHandlerAsyncWaiter(PageHandler* proxy);

  PageHandlerAsyncWaiter(const PageHandlerAsyncWaiter&) = delete;
  PageHandlerAsyncWaiter& operator=(const PageHandlerAsyncWaiter&) = delete;

  ~PageHandlerAsyncWaiter();
  void GetBrowsingTopicsConfiguration(
      WebUIBrowsingTopicsConfigurationPtr* out_config);
  void GetBrowsingTopicsState(
      bool calculate_now, WebUIGetBrowsingTopicsStateResultPtr* out_result);
  void GetModelInfo(
      WebUIGetModelInfoResultPtr* out_result);
  void ClassifyHosts(
      const std::vector<std::string>& hosts, std::vector<std::vector<WebUITopicPtr>>* out_topics_for_hosts);

 private:
  PageHandler* const proxy_;
};




}  // namespace mojom
}  // namespace browsing_topics

#endif  // COMPONENTS_BROWSING_TOPICS_MOJOM_BROWSING_TOPICS_INTERNALS_MOJOM_TEST_UTILS_H_