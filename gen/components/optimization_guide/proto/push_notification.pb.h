// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/optimization_guide/proto/push_notification.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_components_2foptimization_5fguide_2fproto_2fpush_5fnotification_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_components_2foptimization_5fguide_2fproto_2fpush_5fnotification_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "components/optimization_guide/proto/common_types.pb.h"
#include "components/optimization_guide/proto/hints.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_components_2foptimization_5fguide_2fproto_2fpush_5fnotification_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_components_2foptimization_5fguide_2fproto_2fpush_5fnotification_2eproto {
  static const uint32_t offsets[];
};
namespace optimization_guide {
namespace proto {
class HintNotificationPayload;
struct HintNotificationPayloadDefaultTypeInternal;
extern HintNotificationPayloadDefaultTypeInternal _HintNotificationPayload_default_instance_;
}  // namespace proto
}  // namespace optimization_guide
PROTOBUF_NAMESPACE_OPEN
template<> ::optimization_guide::proto::HintNotificationPayload* Arena::CreateMaybeMessage<::optimization_guide::proto::HintNotificationPayload>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace optimization_guide {
namespace proto {

// ===================================================================

class HintNotificationPayload final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:optimization_guide.proto.HintNotificationPayload) */ {
 public:
  inline HintNotificationPayload() : HintNotificationPayload(nullptr) {}
  ~HintNotificationPayload() override;
  explicit PROTOBUF_CONSTEXPR HintNotificationPayload(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  HintNotificationPayload(const HintNotificationPayload& from);
  HintNotificationPayload(HintNotificationPayload&& from) noexcept
    : HintNotificationPayload() {
    *this = ::std::move(from);
  }

  inline HintNotificationPayload& operator=(const HintNotificationPayload& from) {
    CopyFrom(from);
    return *this;
  }
  inline HintNotificationPayload& operator=(HintNotificationPayload&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const HintNotificationPayload& default_instance() {
    return *internal_default_instance();
  }
  static inline const HintNotificationPayload* internal_default_instance() {
    return reinterpret_cast<const HintNotificationPayload*>(
               &_HintNotificationPayload_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(HintNotificationPayload& a, HintNotificationPayload& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(HintNotificationPayload* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HintNotificationPayload* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HintNotificationPayload* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HintNotificationPayload>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const HintNotificationPayload& from);
  void MergeFrom(const HintNotificationPayload& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HintNotificationPayload* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "optimization_guide.proto.HintNotificationPayload";
  }
  protected:
  explicit HintNotificationPayload(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHintKeyFieldNumber = 3,
    kPayloadFieldNumber = 4,
    kOptimizationTypeFieldNumber = 1,
    kKeyRepresentationFieldNumber = 2,
  };
  // optional string hint_key = 3;
  bool has_hint_key() const;
  private:
  bool _internal_has_hint_key() const;
  public:
  void clear_hint_key();
  const std::string& hint_key() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_hint_key(ArgT0&& arg0, ArgT... args);
  std::string* mutable_hint_key();
  PROTOBUF_NODISCARD std::string* release_hint_key();
  void set_allocated_hint_key(std::string* hint_key);
  private:
  const std::string& _internal_hint_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_hint_key(const std::string& value);
  std::string* _internal_mutable_hint_key();
  public:

  // optional .optimization_guide.proto.Any payload = 4;
  bool has_payload() const;
  private:
  bool _internal_has_payload() const;
  public:
  void clear_payload();
  const ::optimization_guide::proto::Any& payload() const;
  PROTOBUF_NODISCARD ::optimization_guide::proto::Any* release_payload();
  ::optimization_guide::proto::Any* mutable_payload();
  void set_allocated_payload(::optimization_guide::proto::Any* payload);
  private:
  const ::optimization_guide::proto::Any& _internal_payload() const;
  ::optimization_guide::proto::Any* _internal_mutable_payload();
  public:
  void unsafe_arena_set_allocated_payload(
      ::optimization_guide::proto::Any* payload);
  ::optimization_guide::proto::Any* unsafe_arena_release_payload();

  // optional .optimization_guide.proto.OptimizationType optimization_type = 1;
  bool has_optimization_type() const;
  private:
  bool _internal_has_optimization_type() const;
  public:
  void clear_optimization_type();
  ::optimization_guide::proto::OptimizationType optimization_type() const;
  void set_optimization_type(::optimization_guide::proto::OptimizationType value);
  private:
  ::optimization_guide::proto::OptimizationType _internal_optimization_type() const;
  void _internal_set_optimization_type(::optimization_guide::proto::OptimizationType value);
  public:

  // optional .optimization_guide.proto.KeyRepresentation key_representation = 2;
  bool has_key_representation() const;
  private:
  bool _internal_has_key_representation() const;
  public:
  void clear_key_representation();
  ::optimization_guide::proto::KeyRepresentation key_representation() const;
  void set_key_representation(::optimization_guide::proto::KeyRepresentation value);
  private:
  ::optimization_guide::proto::KeyRepresentation _internal_key_representation() const;
  void _internal_set_key_representation(::optimization_guide::proto::KeyRepresentation value);
  public:

  // @@protoc_insertion_point(class_scope:optimization_guide.proto.HintNotificationPayload)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr hint_key_;
  ::optimization_guide::proto::Any* payload_;
  int optimization_type_;
  int key_representation_;
  friend struct ::TableStruct_components_2foptimization_5fguide_2fproto_2fpush_5fnotification_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// HintNotificationPayload

// optional .optimization_guide.proto.OptimizationType optimization_type = 1;
inline bool HintNotificationPayload::_internal_has_optimization_type() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool HintNotificationPayload::has_optimization_type() const {
  return _internal_has_optimization_type();
}
inline void HintNotificationPayload::clear_optimization_type() {
  optimization_type_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::optimization_guide::proto::OptimizationType HintNotificationPayload::_internal_optimization_type() const {
  return static_cast< ::optimization_guide::proto::OptimizationType >(optimization_type_);
}
inline ::optimization_guide::proto::OptimizationType HintNotificationPayload::optimization_type() const {
  // @@protoc_insertion_point(field_get:optimization_guide.proto.HintNotificationPayload.optimization_type)
  return _internal_optimization_type();
}
inline void HintNotificationPayload::_internal_set_optimization_type(::optimization_guide::proto::OptimizationType value) {
  assert(::optimization_guide::proto::OptimizationType_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  optimization_type_ = value;
}
inline void HintNotificationPayload::set_optimization_type(::optimization_guide::proto::OptimizationType value) {
  _internal_set_optimization_type(value);
  // @@protoc_insertion_point(field_set:optimization_guide.proto.HintNotificationPayload.optimization_type)
}

// optional .optimization_guide.proto.KeyRepresentation key_representation = 2;
inline bool HintNotificationPayload::_internal_has_key_representation() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool HintNotificationPayload::has_key_representation() const {
  return _internal_has_key_representation();
}
inline void HintNotificationPayload::clear_key_representation() {
  key_representation_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::optimization_guide::proto::KeyRepresentation HintNotificationPayload::_internal_key_representation() const {
  return static_cast< ::optimization_guide::proto::KeyRepresentation >(key_representation_);
}
inline ::optimization_guide::proto::KeyRepresentation HintNotificationPayload::key_representation() const {
  // @@protoc_insertion_point(field_get:optimization_guide.proto.HintNotificationPayload.key_representation)
  return _internal_key_representation();
}
inline void HintNotificationPayload::_internal_set_key_representation(::optimization_guide::proto::KeyRepresentation value) {
  assert(::optimization_guide::proto::KeyRepresentation_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  key_representation_ = value;
}
inline void HintNotificationPayload::set_key_representation(::optimization_guide::proto::KeyRepresentation value) {
  _internal_set_key_representation(value);
  // @@protoc_insertion_point(field_set:optimization_guide.proto.HintNotificationPayload.key_representation)
}

// optional string hint_key = 3;
inline bool HintNotificationPayload::_internal_has_hint_key() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool HintNotificationPayload::has_hint_key() const {
  return _internal_has_hint_key();
}
inline void HintNotificationPayload::clear_hint_key() {
  hint_key_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& HintNotificationPayload::hint_key() const {
  // @@protoc_insertion_point(field_get:optimization_guide.proto.HintNotificationPayload.hint_key)
  return _internal_hint_key();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void HintNotificationPayload::set_hint_key(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 hint_key_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:optimization_guide.proto.HintNotificationPayload.hint_key)
}
inline std::string* HintNotificationPayload::mutable_hint_key() {
  std::string* _s = _internal_mutable_hint_key();
  // @@protoc_insertion_point(field_mutable:optimization_guide.proto.HintNotificationPayload.hint_key)
  return _s;
}
inline const std::string& HintNotificationPayload::_internal_hint_key() const {
  return hint_key_.Get();
}
inline void HintNotificationPayload::_internal_set_hint_key(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  hint_key_.Set(value, GetArenaForAllocation());
}
inline std::string* HintNotificationPayload::_internal_mutable_hint_key() {
  _has_bits_[0] |= 0x00000001u;
  return hint_key_.Mutable(GetArenaForAllocation());
}
inline std::string* HintNotificationPayload::release_hint_key() {
  // @@protoc_insertion_point(field_release:optimization_guide.proto.HintNotificationPayload.hint_key)
  if (!_internal_has_hint_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = hint_key_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (hint_key_.IsDefault()) {
    hint_key_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void HintNotificationPayload::set_allocated_hint_key(std::string* hint_key) {
  if (hint_key != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  hint_key_.SetAllocated(hint_key, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (hint_key_.IsDefault()) {
    hint_key_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:optimization_guide.proto.HintNotificationPayload.hint_key)
}

// optional .optimization_guide.proto.Any payload = 4;
inline bool HintNotificationPayload::_internal_has_payload() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || payload_ != nullptr);
  return value;
}
inline bool HintNotificationPayload::has_payload() const {
  return _internal_has_payload();
}
inline const ::optimization_guide::proto::Any& HintNotificationPayload::_internal_payload() const {
  const ::optimization_guide::proto::Any* p = payload_;
  return p != nullptr ? *p : reinterpret_cast<const ::optimization_guide::proto::Any&>(
      ::optimization_guide::proto::_Any_default_instance_);
}
inline const ::optimization_guide::proto::Any& HintNotificationPayload::payload() const {
  // @@protoc_insertion_point(field_get:optimization_guide.proto.HintNotificationPayload.payload)
  return _internal_payload();
}
inline void HintNotificationPayload::unsafe_arena_set_allocated_payload(
    ::optimization_guide::proto::Any* payload) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(payload_);
  }
  payload_ = payload;
  if (payload) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:optimization_guide.proto.HintNotificationPayload.payload)
}
inline ::optimization_guide::proto::Any* HintNotificationPayload::release_payload() {
  _has_bits_[0] &= ~0x00000002u;
  ::optimization_guide::proto::Any* temp = payload_;
  payload_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::optimization_guide::proto::Any* HintNotificationPayload::unsafe_arena_release_payload() {
  // @@protoc_insertion_point(field_release:optimization_guide.proto.HintNotificationPayload.payload)
  _has_bits_[0] &= ~0x00000002u;
  ::optimization_guide::proto::Any* temp = payload_;
  payload_ = nullptr;
  return temp;
}
inline ::optimization_guide::proto::Any* HintNotificationPayload::_internal_mutable_payload() {
  _has_bits_[0] |= 0x00000002u;
  if (payload_ == nullptr) {
    auto* p = CreateMaybeMessage<::optimization_guide::proto::Any>(GetArenaForAllocation());
    payload_ = p;
  }
  return payload_;
}
inline ::optimization_guide::proto::Any* HintNotificationPayload::mutable_payload() {
  ::optimization_guide::proto::Any* _msg = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:optimization_guide.proto.HintNotificationPayload.payload)
  return _msg;
}
inline void HintNotificationPayload::set_allocated_payload(::optimization_guide::proto::Any* payload) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(payload_);
  }
  if (payload) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(payload));
    if (message_arena != submessage_arena) {
      payload = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, payload, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  payload_ = payload;
  // @@protoc_insertion_point(field_set_allocated:optimization_guide.proto.HintNotificationPayload.payload)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace optimization_guide

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_components_2foptimization_5fguide_2fproto_2fpush_5fnotification_2eproto
