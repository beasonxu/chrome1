// gpu/ipc/common/gpu_channel.mojom-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef GPU_IPC_COMMON_GPU_CHANNEL_MOJOM_FORWARD_H_
#define GPU_IPC_COMMON_GPU_CHANNEL_MOJOM_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"



namespace mojo {
enum class NativeEnum;
}  // namespace mojo


namespace gpu {
namespace mojom {
class ContextCreationAttribsDataView;

class CreateCommandBufferParamsDataView;

class CommandBufferStateDataView;

class ScheduleImageDecodeParamsDataView;

using SwapBuffersCompleteParamsDataView = mojo::native::NativeStructDataView;

class DeferredRequestDataView;

class DeferredCommandBufferRequestDataView;

class AsyncFlushParamsDataView;

class ReturnFrontBufferParamsDataView;

class CreateSharedImageParamsDataView;

class CreateSharedImageWithDataParamsDataView;

class CreateGMBSharedImageParamsDataView;

class UpdateSharedImageParamsDataView;

class DeferredRequestParamsDataView;
class DeferredCommandBufferRequestParamsDataView;
class DeferredSharedImageRequestDataView;

enum class ContextType : int32_t;

enum class ContextColorSpace : int32_t;

enum class SchedulingPriority : int32_t;
using Error = mojo::NativeEnum;
using ContextLostReason = mojo::NativeEnum;
class ContextCreationAttribs;
using ContextCreationAttribsPtr = mojo::StructPtr<ContextCreationAttribs>;

class CreateCommandBufferParams;
using CreateCommandBufferParamsPtr = mojo::StructPtr<CreateCommandBufferParams>;

class CommandBufferState;
using CommandBufferStatePtr = mojo::StructPtr<CommandBufferState>;

class ScheduleImageDecodeParams;
using ScheduleImageDecodeParamsPtr = mojo::StructPtr<ScheduleImageDecodeParams>;

using SwapBuffersCompleteParams = mojo::native::NativeStruct;
using SwapBuffersCompleteParamsPtr = mojo::native::NativeStructPtr;

class DeferredRequest;
using DeferredRequestPtr = mojo::StructPtr<DeferredRequest>;

class DeferredCommandBufferRequest;
using DeferredCommandBufferRequestPtr = mojo::StructPtr<DeferredCommandBufferRequest>;

class AsyncFlushParams;
using AsyncFlushParamsPtr = mojo::StructPtr<AsyncFlushParams>;

class ReturnFrontBufferParams;
using ReturnFrontBufferParamsPtr = mojo::StructPtr<ReturnFrontBufferParams>;

class CreateSharedImageParams;
using CreateSharedImageParamsPtr = mojo::StructPtr<CreateSharedImageParams>;

class CreateSharedImageWithDataParams;
using CreateSharedImageWithDataParamsPtr = mojo::StructPtr<CreateSharedImageWithDataParams>;

class CreateGMBSharedImageParams;
using CreateGMBSharedImageParamsPtr = mojo::StructPtr<CreateGMBSharedImageParams>;

class UpdateSharedImageParams;
using UpdateSharedImageParamsPtr = mojo::StructPtr<UpdateSharedImageParams>;

class DeferredRequestParams;

using DeferredRequestParamsPtr = mojo::StructPtr<DeferredRequestParams>;

class DeferredCommandBufferRequestParams;

using DeferredCommandBufferRequestParamsPtr = mojo::StructPtr<DeferredCommandBufferRequestParams>;

class DeferredSharedImageRequest;

using DeferredSharedImageRequestPtr = mojo::StructPtr<DeferredSharedImageRequest>;

class GpuChannel;

class CommandBuffer;

class CommandBufferClient;

class StreamTexture;

class StreamTextureClient;




}  // namespace mojom
}  // namespace gpu

#endif  // GPU_IPC_COMMON_GPU_CHANNEL_MOJOM_FORWARD_H_