// device/bluetooth/public/mojom/adapter.mojom-lite-for-compile.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';

goog.require('mojo.internal');
goog.require('mojo.internal.interfaceSupport');

goog.require('bluetooth.mojom.Device');
goog.require('bluetooth.mojom.DeviceInfo');
goog.require('bluetooth.mojom.UUID');




goog.provide('bluetooth.mojom.ConnectResult');
goog.provide('bluetooth.mojom.ConnectResultSpec');
/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
bluetooth.mojom.ConnectResultSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
bluetooth.mojom.ConnectResult = {
  
  SUCCESS: 0,
  AUTH_CANCELED: 1,
  AUTH_FAILED: 2,
  AUTH_REJECTED: 3,
  AUTH_TIMEOUT: 4,
  FAILED: 5,
  INPROGRESS: 6,
  UNKNOWN: 7,
  UNSUPPORTED_DEVICE: 8,
  DEVICE_NO_LONGER_IN_RANGE: 9,
  MIN_VALUE: 0,
  MAX_VALUE: 9,
};



goog.provide('bluetooth.mojom.Advertisement');
goog.provide('bluetooth.mojom.AdvertisementReceiver');
goog.provide('bluetooth.mojom.AdvertisementCallbackRouter');
goog.provide('bluetooth.mojom.AdvertisementInterface');
goog.provide('bluetooth.mojom.AdvertisementRemote');
goog.provide('bluetooth.mojom.AdvertisementPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
bluetooth.mojom.AdvertisementPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        bluetooth.mojom.Advertisement.$interfaceName,
        scope);
  }
};

/** @interface */
bluetooth.mojom.AdvertisementInterface = class {
  
  /**
   * @return {!Promise}
   */

  unregister() {}
};

/**
 * @export
 * @implements { bluetooth.mojom.AdvertisementInterface }
 */
bluetooth.mojom.AdvertisementRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!bluetooth.mojom.AdvertisementPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          bluetooth.mojom.AdvertisementPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!bluetooth.mojom.AdvertisementPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @return {!Promise}
   */

  unregister() {
    return this.proxy.sendMessage(
        0,
        bluetooth.mojom.Advertisement_Unregister_ParamsSpec.$,
        bluetooth.mojom.Advertisement_Unregister_ResponseParamsSpec.$,
        [
        ]);
  }
};

/**
 * An object which receives request messages for the Advertisement
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
bluetooth.mojom.AdvertisementReceiver = class {
  /**
   * @param {!bluetooth.mojom.AdvertisementInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!bluetooth.mojom.AdvertisementRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        bluetooth.mojom.AdvertisementRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!bluetooth.mojom.AdvertisementRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        bluetooth.mojom.Advertisement_Unregister_ParamsSpec.$,
        bluetooth.mojom.Advertisement_Unregister_ResponseParamsSpec.$,
        impl.unregister.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
bluetooth.mojom.Advertisement = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "bluetooth.mojom.Advertisement";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!bluetooth.mojom.AdvertisementRemote}
   * @export
   */
  static getRemote() {
    let remote = new bluetooth.mojom.AdvertisementRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the Advertisement
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
bluetooth.mojom.AdvertisementCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      bluetooth.mojom.AdvertisementRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!bluetooth.mojom.AdvertisementRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.unregister =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        bluetooth.mojom.Advertisement_Unregister_ParamsSpec.$,
        bluetooth.mojom.Advertisement_Unregister_ResponseParamsSpec.$,
        this.unregister.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('bluetooth.mojom.DiscoverySession');
goog.provide('bluetooth.mojom.DiscoverySessionReceiver');
goog.provide('bluetooth.mojom.DiscoverySessionCallbackRouter');
goog.provide('bluetooth.mojom.DiscoverySessionInterface');
goog.provide('bluetooth.mojom.DiscoverySessionRemote');
goog.provide('bluetooth.mojom.DiscoverySessionPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
bluetooth.mojom.DiscoverySessionPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        bluetooth.mojom.DiscoverySession.$interfaceName,
        scope);
  }
};

/** @interface */
bluetooth.mojom.DiscoverySessionInterface = class {
  
  /**
   * @return {!Promise<{
        active: !boolean,
   *  }>}
   */

  isActive() {}
  
  /**
   * @return {!Promise<{
        success: !boolean,
   *  }>}
   */

  stop() {}
};

/**
 * @export
 * @implements { bluetooth.mojom.DiscoverySessionInterface }
 */
bluetooth.mojom.DiscoverySessionRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!bluetooth.mojom.DiscoverySessionPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          bluetooth.mojom.DiscoverySessionPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!bluetooth.mojom.DiscoverySessionPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @return {!Promise<{
        active: !boolean,
   *  }>}
   */

  isActive() {
    return this.proxy.sendMessage(
        0,
        bluetooth.mojom.DiscoverySession_IsActive_ParamsSpec.$,
        bluetooth.mojom.DiscoverySession_IsActive_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @return {!Promise<{
        success: !boolean,
   *  }>}
   */

  stop() {
    return this.proxy.sendMessage(
        1,
        bluetooth.mojom.DiscoverySession_Stop_ParamsSpec.$,
        bluetooth.mojom.DiscoverySession_Stop_ResponseParamsSpec.$,
        [
        ]);
  }
};

/**
 * An object which receives request messages for the DiscoverySession
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
bluetooth.mojom.DiscoverySessionReceiver = class {
  /**
   * @param {!bluetooth.mojom.DiscoverySessionInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!bluetooth.mojom.DiscoverySessionRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        bluetooth.mojom.DiscoverySessionRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!bluetooth.mojom.DiscoverySessionRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        bluetooth.mojom.DiscoverySession_IsActive_ParamsSpec.$,
        bluetooth.mojom.DiscoverySession_IsActive_ResponseParamsSpec.$,
        impl.isActive.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        bluetooth.mojom.DiscoverySession_Stop_ParamsSpec.$,
        bluetooth.mojom.DiscoverySession_Stop_ResponseParamsSpec.$,
        impl.stop.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
bluetooth.mojom.DiscoverySession = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "bluetooth.mojom.DiscoverySession";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!bluetooth.mojom.DiscoverySessionRemote}
   * @export
   */
  static getRemote() {
    let remote = new bluetooth.mojom.DiscoverySessionRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the DiscoverySession
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
bluetooth.mojom.DiscoverySessionCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      bluetooth.mojom.DiscoverySessionRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!bluetooth.mojom.DiscoverySessionRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.isActive =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        bluetooth.mojom.DiscoverySession_IsActive_ParamsSpec.$,
        bluetooth.mojom.DiscoverySession_IsActive_ResponseParamsSpec.$,
        this.isActive.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.stop =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        bluetooth.mojom.DiscoverySession_Stop_ParamsSpec.$,
        bluetooth.mojom.DiscoverySession_Stop_ResponseParamsSpec.$,
        this.stop.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('bluetooth.mojom.Socket');
goog.provide('bluetooth.mojom.SocketReceiver');
goog.provide('bluetooth.mojom.SocketCallbackRouter');
goog.provide('bluetooth.mojom.SocketInterface');
goog.provide('bluetooth.mojom.SocketRemote');
goog.provide('bluetooth.mojom.SocketPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
bluetooth.mojom.SocketPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        bluetooth.mojom.Socket.$interfaceName,
        scope);
  }
};

/** @interface */
bluetooth.mojom.SocketInterface = class {
  
  /**
   * @return {!Promise}
   */

  disconnect() {}
};

/**
 * @export
 * @implements { bluetooth.mojom.SocketInterface }
 */
bluetooth.mojom.SocketRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!bluetooth.mojom.SocketPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          bluetooth.mojom.SocketPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!bluetooth.mojom.SocketPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @return {!Promise}
   */

  disconnect() {
    return this.proxy.sendMessage(
        0,
        bluetooth.mojom.Socket_Disconnect_ParamsSpec.$,
        bluetooth.mojom.Socket_Disconnect_ResponseParamsSpec.$,
        [
        ]);
  }
};

/**
 * An object which receives request messages for the Socket
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
bluetooth.mojom.SocketReceiver = class {
  /**
   * @param {!bluetooth.mojom.SocketInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!bluetooth.mojom.SocketRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        bluetooth.mojom.SocketRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!bluetooth.mojom.SocketRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        bluetooth.mojom.Socket_Disconnect_ParamsSpec.$,
        bluetooth.mojom.Socket_Disconnect_ResponseParamsSpec.$,
        impl.disconnect.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
bluetooth.mojom.Socket = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "bluetooth.mojom.Socket";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!bluetooth.mojom.SocketRemote}
   * @export
   */
  static getRemote() {
    let remote = new bluetooth.mojom.SocketRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the Socket
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
bluetooth.mojom.SocketCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      bluetooth.mojom.SocketRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!bluetooth.mojom.SocketRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.disconnect =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        bluetooth.mojom.Socket_Disconnect_ParamsSpec.$,
        bluetooth.mojom.Socket_Disconnect_ResponseParamsSpec.$,
        this.disconnect.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('bluetooth.mojom.ServerSocket');
goog.provide('bluetooth.mojom.ServerSocketReceiver');
goog.provide('bluetooth.mojom.ServerSocketCallbackRouter');
goog.provide('bluetooth.mojom.ServerSocketInterface');
goog.provide('bluetooth.mojom.ServerSocketRemote');
goog.provide('bluetooth.mojom.ServerSocketPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
bluetooth.mojom.ServerSocketPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        bluetooth.mojom.ServerSocket.$interfaceName,
        scope);
  }
};

/** @interface */
bluetooth.mojom.ServerSocketInterface = class {
  
  /**
   * @return {!Promise<{
        result: ?bluetooth.mojom.AcceptConnectionResult,
   *  }>}
   */

  accept() {}
  
  /**
   * @return {!Promise}
   */

  disconnect() {}
};

/**
 * @export
 * @implements { bluetooth.mojom.ServerSocketInterface }
 */
bluetooth.mojom.ServerSocketRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!bluetooth.mojom.ServerSocketPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          bluetooth.mojom.ServerSocketPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!bluetooth.mojom.ServerSocketPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @return {!Promise<{
        result: ?bluetooth.mojom.AcceptConnectionResult,
   *  }>}
   */

  accept() {
    return this.proxy.sendMessage(
        0,
        bluetooth.mojom.ServerSocket_Accept_ParamsSpec.$,
        bluetooth.mojom.ServerSocket_Accept_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @return {!Promise}
   */

  disconnect() {
    return this.proxy.sendMessage(
        1,
        bluetooth.mojom.ServerSocket_Disconnect_ParamsSpec.$,
        bluetooth.mojom.ServerSocket_Disconnect_ResponseParamsSpec.$,
        [
        ]);
  }
};

/**
 * An object which receives request messages for the ServerSocket
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
bluetooth.mojom.ServerSocketReceiver = class {
  /**
   * @param {!bluetooth.mojom.ServerSocketInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!bluetooth.mojom.ServerSocketRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        bluetooth.mojom.ServerSocketRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!bluetooth.mojom.ServerSocketRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        bluetooth.mojom.ServerSocket_Accept_ParamsSpec.$,
        bluetooth.mojom.ServerSocket_Accept_ResponseParamsSpec.$,
        impl.accept.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        bluetooth.mojom.ServerSocket_Disconnect_ParamsSpec.$,
        bluetooth.mojom.ServerSocket_Disconnect_ResponseParamsSpec.$,
        impl.disconnect.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
bluetooth.mojom.ServerSocket = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "bluetooth.mojom.ServerSocket";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!bluetooth.mojom.ServerSocketRemote}
   * @export
   */
  static getRemote() {
    let remote = new bluetooth.mojom.ServerSocketRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the ServerSocket
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
bluetooth.mojom.ServerSocketCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      bluetooth.mojom.ServerSocketRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!bluetooth.mojom.ServerSocketRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.accept =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        bluetooth.mojom.ServerSocket_Accept_ParamsSpec.$,
        bluetooth.mojom.ServerSocket_Accept_ResponseParamsSpec.$,
        this.accept.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.disconnect =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        bluetooth.mojom.ServerSocket_Disconnect_ParamsSpec.$,
        bluetooth.mojom.ServerSocket_Disconnect_ResponseParamsSpec.$,
        this.disconnect.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('bluetooth.mojom.Adapter');
goog.provide('bluetooth.mojom.AdapterReceiver');
goog.provide('bluetooth.mojom.AdapterCallbackRouter');
goog.provide('bluetooth.mojom.AdapterInterface');
goog.provide('bluetooth.mojom.AdapterRemote');
goog.provide('bluetooth.mojom.AdapterPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
bluetooth.mojom.AdapterPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        bluetooth.mojom.Adapter.$interfaceName,
        scope);
  }
};

/** @interface */
bluetooth.mojom.AdapterInterface = class {
  
  /**
   * @param { !string } address
   * @return {!Promise<{
        result: !bluetooth.mojom.ConnectResult,
        device: ?bluetooth.mojom.DeviceRemote,
   *  }>}
   */

  connectToDevice(address) {}
  
  /**
   * @return {!Promise<{
        devices: !Array<!bluetooth.mojom.DeviceInfo>,
   *  }>}
   */

  getDevices() {}
  
  /**
   * @return {!Promise<{
        info: !bluetooth.mojom.AdapterInfo,
   *  }>}
   */

  getInfo() {}
  
  /**
   * @param { !bluetooth.mojom.AdapterObserverRemote } observer
   * @return {!Promise}
   */

  addObserver(observer) {}
  
  /**
   * @param { !bluetooth.mojom.UUID } serviceId
   * @param { !Array<!number> } serviceData
   * @param { !boolean } useScanResponse
   * @return {!Promise<{
        advertisement: ?bluetooth.mojom.AdvertisementRemote,
   *  }>}
   */

  registerAdvertisement(serviceId, serviceData, useScanResponse) {}
  
  /**
   * @param { !boolean } discoverable
   * @return {!Promise<{
        success: !boolean,
   *  }>}
   */

  setDiscoverable(discoverable) {}
  
  /**
   * @param { !string } name
   * @return {!Promise<{
        success: !boolean,
   *  }>}
   */

  setName(name) {}
  
  /**
   * @param { !string } clientName
   * @return {!Promise<{
        session: ?bluetooth.mojom.DiscoverySessionRemote,
   *  }>}
   */

  startDiscoverySession(clientName) {}
  
  /**
   * @param { !string } address
   * @param { !bluetooth.mojom.UUID } serviceUuid
   * @return {!Promise<{
        result: ?bluetooth.mojom.ConnectToServiceResult,
   *  }>}
   */

  connectToServiceInsecurely(address, serviceUuid) {}
  
  /**
   * @param { !string } serviceName
   * @param { !bluetooth.mojom.UUID } serviceUuid
   * @return {!Promise<{
        serverSocket: ?bluetooth.mojom.ServerSocketRemote,
   *  }>}
   */

  createRfcommServiceInsecurely(serviceName, serviceUuid) {}
};

/**
 * @export
 * @implements { bluetooth.mojom.AdapterInterface }
 */
bluetooth.mojom.AdapterRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!bluetooth.mojom.AdapterPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          bluetooth.mojom.AdapterPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!bluetooth.mojom.AdapterPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !string } address
   * @return {!Promise<{
        result: !bluetooth.mojom.ConnectResult,
        device: ?bluetooth.mojom.DeviceRemote,
   *  }>}
   */

  connectToDevice(
      address) {
    return this.proxy.sendMessage(
        0,
        bluetooth.mojom.Adapter_ConnectToDevice_ParamsSpec.$,
        bluetooth.mojom.Adapter_ConnectToDevice_ResponseParamsSpec.$,
        [
          address
        ]);
  }

  
  /**
   * @return {!Promise<{
        devices: !Array<!bluetooth.mojom.DeviceInfo>,
   *  }>}
   */

  getDevices() {
    return this.proxy.sendMessage(
        1,
        bluetooth.mojom.Adapter_GetDevices_ParamsSpec.$,
        bluetooth.mojom.Adapter_GetDevices_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @return {!Promise<{
        info: !bluetooth.mojom.AdapterInfo,
   *  }>}
   */

  getInfo() {
    return this.proxy.sendMessage(
        2,
        bluetooth.mojom.Adapter_GetInfo_ParamsSpec.$,
        bluetooth.mojom.Adapter_GetInfo_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !bluetooth.mojom.AdapterObserverRemote } observer
   * @return {!Promise}
   */

  addObserver(
      observer) {
    return this.proxy.sendMessage(
        3,
        bluetooth.mojom.Adapter_AddObserver_ParamsSpec.$,
        bluetooth.mojom.Adapter_AddObserver_ResponseParamsSpec.$,
        [
          observer
        ]);
  }

  
  /**
   * @param { !bluetooth.mojom.UUID } serviceId
   * @param { !Array<!number> } serviceData
   * @param { !boolean } useScanResponse
   * @return {!Promise<{
        advertisement: ?bluetooth.mojom.AdvertisementRemote,
   *  }>}
   */

  registerAdvertisement(
      serviceId,
      serviceData,
      useScanResponse) {
    return this.proxy.sendMessage(
        4,
        bluetooth.mojom.Adapter_RegisterAdvertisement_ParamsSpec.$,
        bluetooth.mojom.Adapter_RegisterAdvertisement_ResponseParamsSpec.$,
        [
          serviceId,
          serviceData,
          useScanResponse
        ]);
  }

  
  /**
   * @param { !boolean } discoverable
   * @return {!Promise<{
        success: !boolean,
   *  }>}
   */

  setDiscoverable(
      discoverable) {
    return this.proxy.sendMessage(
        5,
        bluetooth.mojom.Adapter_SetDiscoverable_ParamsSpec.$,
        bluetooth.mojom.Adapter_SetDiscoverable_ResponseParamsSpec.$,
        [
          discoverable
        ]);
  }

  
  /**
   * @param { !string } name
   * @return {!Promise<{
        success: !boolean,
   *  }>}
   */

  setName(
      name) {
    return this.proxy.sendMessage(
        6,
        bluetooth.mojom.Adapter_SetName_ParamsSpec.$,
        bluetooth.mojom.Adapter_SetName_ResponseParamsSpec.$,
        [
          name
        ]);
  }

  
  /**
   * @param { !string } clientName
   * @return {!Promise<{
        session: ?bluetooth.mojom.DiscoverySessionRemote,
   *  }>}
   */

  startDiscoverySession(
      clientName) {
    return this.proxy.sendMessage(
        7,
        bluetooth.mojom.Adapter_StartDiscoverySession_ParamsSpec.$,
        bluetooth.mojom.Adapter_StartDiscoverySession_ResponseParamsSpec.$,
        [
          clientName
        ]);
  }

  
  /**
   * @param { !string } address
   * @param { !bluetooth.mojom.UUID } serviceUuid
   * @return {!Promise<{
        result: ?bluetooth.mojom.ConnectToServiceResult,
   *  }>}
   */

  connectToServiceInsecurely(
      address,
      serviceUuid) {
    return this.proxy.sendMessage(
        8,
        bluetooth.mojom.Adapter_ConnectToServiceInsecurely_ParamsSpec.$,
        bluetooth.mojom.Adapter_ConnectToServiceInsecurely_ResponseParamsSpec.$,
        [
          address,
          serviceUuid
        ]);
  }

  
  /**
   * @param { !string } serviceName
   * @param { !bluetooth.mojom.UUID } serviceUuid
   * @return {!Promise<{
        serverSocket: ?bluetooth.mojom.ServerSocketRemote,
   *  }>}
   */

  createRfcommServiceInsecurely(
      serviceName,
      serviceUuid) {
    return this.proxy.sendMessage(
        9,
        bluetooth.mojom.Adapter_CreateRfcommServiceInsecurely_ParamsSpec.$,
        bluetooth.mojom.Adapter_CreateRfcommServiceInsecurely_ResponseParamsSpec.$,
        [
          serviceName,
          serviceUuid
        ]);
  }
};

/**
 * An object which receives request messages for the Adapter
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
bluetooth.mojom.AdapterReceiver = class {
  /**
   * @param {!bluetooth.mojom.AdapterInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!bluetooth.mojom.AdapterRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        bluetooth.mojom.AdapterRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!bluetooth.mojom.AdapterRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        bluetooth.mojom.Adapter_ConnectToDevice_ParamsSpec.$,
        bluetooth.mojom.Adapter_ConnectToDevice_ResponseParamsSpec.$,
        impl.connectToDevice.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        bluetooth.mojom.Adapter_GetDevices_ParamsSpec.$,
        bluetooth.mojom.Adapter_GetDevices_ResponseParamsSpec.$,
        impl.getDevices.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        bluetooth.mojom.Adapter_GetInfo_ParamsSpec.$,
        bluetooth.mojom.Adapter_GetInfo_ResponseParamsSpec.$,
        impl.getInfo.bind(impl));
    this.helper_internal_.registerHandler(
        3,
        bluetooth.mojom.Adapter_AddObserver_ParamsSpec.$,
        bluetooth.mojom.Adapter_AddObserver_ResponseParamsSpec.$,
        impl.addObserver.bind(impl));
    this.helper_internal_.registerHandler(
        4,
        bluetooth.mojom.Adapter_RegisterAdvertisement_ParamsSpec.$,
        bluetooth.mojom.Adapter_RegisterAdvertisement_ResponseParamsSpec.$,
        impl.registerAdvertisement.bind(impl));
    this.helper_internal_.registerHandler(
        5,
        bluetooth.mojom.Adapter_SetDiscoverable_ParamsSpec.$,
        bluetooth.mojom.Adapter_SetDiscoverable_ResponseParamsSpec.$,
        impl.setDiscoverable.bind(impl));
    this.helper_internal_.registerHandler(
        6,
        bluetooth.mojom.Adapter_SetName_ParamsSpec.$,
        bluetooth.mojom.Adapter_SetName_ResponseParamsSpec.$,
        impl.setName.bind(impl));
    this.helper_internal_.registerHandler(
        7,
        bluetooth.mojom.Adapter_StartDiscoverySession_ParamsSpec.$,
        bluetooth.mojom.Adapter_StartDiscoverySession_ResponseParamsSpec.$,
        impl.startDiscoverySession.bind(impl));
    this.helper_internal_.registerHandler(
        8,
        bluetooth.mojom.Adapter_ConnectToServiceInsecurely_ParamsSpec.$,
        bluetooth.mojom.Adapter_ConnectToServiceInsecurely_ResponseParamsSpec.$,
        impl.connectToServiceInsecurely.bind(impl));
    this.helper_internal_.registerHandler(
        9,
        bluetooth.mojom.Adapter_CreateRfcommServiceInsecurely_ParamsSpec.$,
        bluetooth.mojom.Adapter_CreateRfcommServiceInsecurely_ResponseParamsSpec.$,
        impl.createRfcommServiceInsecurely.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
bluetooth.mojom.Adapter = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "bluetooth.mojom.Adapter";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!bluetooth.mojom.AdapterRemote}
   * @export
   */
  static getRemote() {
    let remote = new bluetooth.mojom.AdapterRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the Adapter
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
bluetooth.mojom.AdapterCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      bluetooth.mojom.AdapterRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!bluetooth.mojom.AdapterRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.connectToDevice =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        bluetooth.mojom.Adapter_ConnectToDevice_ParamsSpec.$,
        bluetooth.mojom.Adapter_ConnectToDevice_ResponseParamsSpec.$,
        this.connectToDevice.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getDevices =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        bluetooth.mojom.Adapter_GetDevices_ParamsSpec.$,
        bluetooth.mojom.Adapter_GetDevices_ResponseParamsSpec.$,
        this.getDevices.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getInfo =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        bluetooth.mojom.Adapter_GetInfo_ParamsSpec.$,
        bluetooth.mojom.Adapter_GetInfo_ResponseParamsSpec.$,
        this.getInfo.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.addObserver =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        3,
        bluetooth.mojom.Adapter_AddObserver_ParamsSpec.$,
        bluetooth.mojom.Adapter_AddObserver_ResponseParamsSpec.$,
        this.addObserver.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.registerAdvertisement =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        4,
        bluetooth.mojom.Adapter_RegisterAdvertisement_ParamsSpec.$,
        bluetooth.mojom.Adapter_RegisterAdvertisement_ResponseParamsSpec.$,
        this.registerAdvertisement.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setDiscoverable =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        5,
        bluetooth.mojom.Adapter_SetDiscoverable_ParamsSpec.$,
        bluetooth.mojom.Adapter_SetDiscoverable_ResponseParamsSpec.$,
        this.setDiscoverable.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setName =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        6,
        bluetooth.mojom.Adapter_SetName_ParamsSpec.$,
        bluetooth.mojom.Adapter_SetName_ResponseParamsSpec.$,
        this.setName.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.startDiscoverySession =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        7,
        bluetooth.mojom.Adapter_StartDiscoverySession_ParamsSpec.$,
        bluetooth.mojom.Adapter_StartDiscoverySession_ResponseParamsSpec.$,
        this.startDiscoverySession.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.connectToServiceInsecurely =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        8,
        bluetooth.mojom.Adapter_ConnectToServiceInsecurely_ParamsSpec.$,
        bluetooth.mojom.Adapter_ConnectToServiceInsecurely_ResponseParamsSpec.$,
        this.connectToServiceInsecurely.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createRfcommServiceInsecurely =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        9,
        bluetooth.mojom.Adapter_CreateRfcommServiceInsecurely_ParamsSpec.$,
        bluetooth.mojom.Adapter_CreateRfcommServiceInsecurely_ResponseParamsSpec.$,
        this.createRfcommServiceInsecurely.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('bluetooth.mojom.AdapterObserver');
goog.provide('bluetooth.mojom.AdapterObserverReceiver');
goog.provide('bluetooth.mojom.AdapterObserverCallbackRouter');
goog.provide('bluetooth.mojom.AdapterObserverInterface');
goog.provide('bluetooth.mojom.AdapterObserverRemote');
goog.provide('bluetooth.mojom.AdapterObserverPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
bluetooth.mojom.AdapterObserverPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        bluetooth.mojom.AdapterObserver.$interfaceName,
        scope);
  }
};

/** @interface */
bluetooth.mojom.AdapterObserverInterface = class {
  
  /**
   * @param { !boolean } present
   */

  presentChanged(present) {}
  
  /**
   * @param { !boolean } powered
   */

  poweredChanged(powered) {}
  
  /**
   * @param { !boolean } discoverable
   */

  discoverableChanged(discoverable) {}
  
  /**
   * @param { !boolean } discovering
   */

  discoveringChanged(discovering) {}
  
  /**
   * @param { !bluetooth.mojom.DeviceInfo } device
   */

  deviceAdded(device) {}
  
  /**
   * @param { !bluetooth.mojom.DeviceInfo } device
   */

  deviceChanged(device) {}
  
  /**
   * @param { !bluetooth.mojom.DeviceInfo } device
   */

  deviceRemoved(device) {}
};

/**
 * @export
 * @implements { bluetooth.mojom.AdapterObserverInterface }
 */
bluetooth.mojom.AdapterObserverRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!bluetooth.mojom.AdapterObserverPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          bluetooth.mojom.AdapterObserverPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!bluetooth.mojom.AdapterObserverPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !boolean } present
   */

  presentChanged(
      present) {
    this.proxy.sendMessage(
        0,
        bluetooth.mojom.AdapterObserver_PresentChanged_ParamsSpec.$,
        null,
        [
          present
        ]);
  }

  
  /**
   * @param { !boolean } powered
   */

  poweredChanged(
      powered) {
    this.proxy.sendMessage(
        1,
        bluetooth.mojom.AdapterObserver_PoweredChanged_ParamsSpec.$,
        null,
        [
          powered
        ]);
  }

  
  /**
   * @param { !boolean } discoverable
   */

  discoverableChanged(
      discoverable) {
    this.proxy.sendMessage(
        2,
        bluetooth.mojom.AdapterObserver_DiscoverableChanged_ParamsSpec.$,
        null,
        [
          discoverable
        ]);
  }

  
  /**
   * @param { !boolean } discovering
   */

  discoveringChanged(
      discovering) {
    this.proxy.sendMessage(
        3,
        bluetooth.mojom.AdapterObserver_DiscoveringChanged_ParamsSpec.$,
        null,
        [
          discovering
        ]);
  }

  
  /**
   * @param { !bluetooth.mojom.DeviceInfo } device
   */

  deviceAdded(
      device) {
    this.proxy.sendMessage(
        4,
        bluetooth.mojom.AdapterObserver_DeviceAdded_ParamsSpec.$,
        null,
        [
          device
        ]);
  }

  
  /**
   * @param { !bluetooth.mojom.DeviceInfo } device
   */

  deviceChanged(
      device) {
    this.proxy.sendMessage(
        5,
        bluetooth.mojom.AdapterObserver_DeviceChanged_ParamsSpec.$,
        null,
        [
          device
        ]);
  }

  
  /**
   * @param { !bluetooth.mojom.DeviceInfo } device
   */

  deviceRemoved(
      device) {
    this.proxy.sendMessage(
        6,
        bluetooth.mojom.AdapterObserver_DeviceRemoved_ParamsSpec.$,
        null,
        [
          device
        ]);
  }
};

/**
 * An object which receives request messages for the AdapterObserver
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
bluetooth.mojom.AdapterObserverReceiver = class {
  /**
   * @param {!bluetooth.mojom.AdapterObserverInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!bluetooth.mojom.AdapterObserverRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        bluetooth.mojom.AdapterObserverRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!bluetooth.mojom.AdapterObserverRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        bluetooth.mojom.AdapterObserver_PresentChanged_ParamsSpec.$,
        null,
        impl.presentChanged.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        bluetooth.mojom.AdapterObserver_PoweredChanged_ParamsSpec.$,
        null,
        impl.poweredChanged.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        bluetooth.mojom.AdapterObserver_DiscoverableChanged_ParamsSpec.$,
        null,
        impl.discoverableChanged.bind(impl));
    this.helper_internal_.registerHandler(
        3,
        bluetooth.mojom.AdapterObserver_DiscoveringChanged_ParamsSpec.$,
        null,
        impl.discoveringChanged.bind(impl));
    this.helper_internal_.registerHandler(
        4,
        bluetooth.mojom.AdapterObserver_DeviceAdded_ParamsSpec.$,
        null,
        impl.deviceAdded.bind(impl));
    this.helper_internal_.registerHandler(
        5,
        bluetooth.mojom.AdapterObserver_DeviceChanged_ParamsSpec.$,
        null,
        impl.deviceChanged.bind(impl));
    this.helper_internal_.registerHandler(
        6,
        bluetooth.mojom.AdapterObserver_DeviceRemoved_ParamsSpec.$,
        null,
        impl.deviceRemoved.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
bluetooth.mojom.AdapterObserver = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "bluetooth.mojom.AdapterObserver";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!bluetooth.mojom.AdapterObserverRemote}
   * @export
   */
  static getRemote() {
    let remote = new bluetooth.mojom.AdapterObserverRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the AdapterObserver
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
bluetooth.mojom.AdapterObserverCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      bluetooth.mojom.AdapterObserverRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!bluetooth.mojom.AdapterObserverRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.presentChanged =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        bluetooth.mojom.AdapterObserver_PresentChanged_ParamsSpec.$,
        null,
        this.presentChanged.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.poweredChanged =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        bluetooth.mojom.AdapterObserver_PoweredChanged_ParamsSpec.$,
        null,
        this.poweredChanged.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.discoverableChanged =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        bluetooth.mojom.AdapterObserver_DiscoverableChanged_ParamsSpec.$,
        null,
        this.discoverableChanged.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.discoveringChanged =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        3,
        bluetooth.mojom.AdapterObserver_DiscoveringChanged_ParamsSpec.$,
        null,
        this.discoveringChanged.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.deviceAdded =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        4,
        bluetooth.mojom.AdapterObserver_DeviceAdded_ParamsSpec.$,
        null,
        this.deviceAdded.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.deviceChanged =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        5,
        bluetooth.mojom.AdapterObserver_DeviceChanged_ParamsSpec.$,
        null,
        this.deviceChanged.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.deviceRemoved =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        6,
        bluetooth.mojom.AdapterObserver_DeviceRemoved_ParamsSpec.$,
        null,
        this.deviceRemoved.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('bluetooth.mojom.ConnectToServiceResultSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.ConnectToServiceResultSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.AcceptConnectionResultSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.AcceptConnectionResultSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.AdapterInfoSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.AdapterInfoSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Advertisement_Unregister_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Advertisement_Unregister_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Advertisement_Unregister_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Advertisement_Unregister_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.DiscoverySession_IsActive_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.DiscoverySession_IsActive_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.DiscoverySession_IsActive_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.DiscoverySession_IsActive_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.DiscoverySession_Stop_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.DiscoverySession_Stop_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.DiscoverySession_Stop_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.DiscoverySession_Stop_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Socket_Disconnect_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Socket_Disconnect_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Socket_Disconnect_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Socket_Disconnect_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.ServerSocket_Accept_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.ServerSocket_Accept_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.ServerSocket_Accept_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.ServerSocket_Accept_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.ServerSocket_Disconnect_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.ServerSocket_Disconnect_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.ServerSocket_Disconnect_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.ServerSocket_Disconnect_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_ConnectToDevice_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_ConnectToDevice_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_ConnectToDevice_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_ConnectToDevice_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_GetDevices_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_GetDevices_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_GetDevices_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_GetDevices_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_GetInfo_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_GetInfo_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_GetInfo_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_GetInfo_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_AddObserver_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_AddObserver_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_AddObserver_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_AddObserver_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_RegisterAdvertisement_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_RegisterAdvertisement_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_RegisterAdvertisement_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_RegisterAdvertisement_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_SetDiscoverable_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_SetDiscoverable_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_SetDiscoverable_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_SetDiscoverable_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_SetName_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_SetName_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_SetName_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_SetName_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_StartDiscoverySession_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_StartDiscoverySession_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_StartDiscoverySession_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_StartDiscoverySession_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_ConnectToServiceInsecurely_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_ConnectToServiceInsecurely_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_ConnectToServiceInsecurely_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_ConnectToServiceInsecurely_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_CreateRfcommServiceInsecurely_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_CreateRfcommServiceInsecurely_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_CreateRfcommServiceInsecurely_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_CreateRfcommServiceInsecurely_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.AdapterObserver_PresentChanged_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.AdapterObserver_PresentChanged_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.AdapterObserver_PoweredChanged_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.AdapterObserver_PoweredChanged_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.AdapterObserver_DiscoverableChanged_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.AdapterObserver_DiscoverableChanged_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.AdapterObserver_DiscoveringChanged_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.AdapterObserver_DiscoveringChanged_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.AdapterObserver_DeviceAdded_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.AdapterObserver_DeviceAdded_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.AdapterObserver_DeviceChanged_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.AdapterObserver_DeviceChanged_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.AdapterObserver_DeviceRemoved_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.AdapterObserver_DeviceRemoved_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    bluetooth.mojom.ConnectToServiceResultSpec.$,
    'ConnectToServiceResult',
    [
      mojo.internal.StructField(
        'socket', 0,
        0,
        mojo.internal.InterfaceProxy(bluetooth.mojom.SocketRemote),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'receiveStream', 8,
        0,
        mojo.internal.Handle,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'sendStream', 12,
        0,
        mojo.internal.Handle,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('bluetooth.mojom.ConnectToServiceResult');

/** @record */
bluetooth.mojom.ConnectToServiceResult = class {
  constructor() {
    /** @export { !bluetooth.mojom.SocketRemote } */
    this.socket;
    /** @export { !MojoHandle } */
    this.receiveStream;
    /** @export { !MojoHandle } */
    this.sendStream;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.AcceptConnectionResultSpec.$,
    'AcceptConnectionResult',
    [
      mojo.internal.StructField(
        'device', 0,
        0,
        bluetooth.mojom.DeviceInfoSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'socket', 8,
        0,
        mojo.internal.InterfaceProxy(bluetooth.mojom.SocketRemote),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'receiveStream', 16,
        0,
        mojo.internal.Handle,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'sendStream', 20,
        0,
        mojo.internal.Handle,
        null,
        false /* nullable */),
    ],
    [[0, 32],]);



goog.provide('bluetooth.mojom.AcceptConnectionResult');

/** @record */
bluetooth.mojom.AcceptConnectionResult = class {
  constructor() {
    /** @export { !bluetooth.mojom.DeviceInfo } */
    this.device;
    /** @export { !bluetooth.mojom.SocketRemote } */
    this.socket;
    /** @export { !MojoHandle } */
    this.receiveStream;
    /** @export { !MojoHandle } */
    this.sendStream;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.AdapterInfoSpec.$,
    'AdapterInfo',
    [
      mojo.internal.StructField(
        'address', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'name', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'systemName', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'floss', 24,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'initialized', 24,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'present', 24,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'powered', 24,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'discoverable', 24,
        4,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'discovering', 24,
        5,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 40],]);



goog.provide('bluetooth.mojom.AdapterInfo');

/** @record */
bluetooth.mojom.AdapterInfo = class {
  constructor() {
    /** @export { !string } */
    this.address;
    /** @export { !string } */
    this.name;
    /** @export { !string } */
    this.systemName;
    /** @export { !boolean } */
    this.floss;
    /** @export { !boolean } */
    this.initialized;
    /** @export { !boolean } */
    this.present;
    /** @export { !boolean } */
    this.powered;
    /** @export { !boolean } */
    this.discoverable;
    /** @export { !boolean } */
    this.discovering;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.Advertisement_Unregister_ParamsSpec.$,
    'Advertisement_Unregister_Params',
    [
    ],
    [[0, 8],]);



goog.provide('bluetooth.mojom.Advertisement_Unregister_Params');

/** @record */
bluetooth.mojom.Advertisement_Unregister_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    bluetooth.mojom.Advertisement_Unregister_ResponseParamsSpec.$,
    'Advertisement_Unregister_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('bluetooth.mojom.Advertisement_Unregister_ResponseParams');

/** @record */
bluetooth.mojom.Advertisement_Unregister_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    bluetooth.mojom.DiscoverySession_IsActive_ParamsSpec.$,
    'DiscoverySession_IsActive_Params',
    [
    ],
    [[0, 8],]);



goog.provide('bluetooth.mojom.DiscoverySession_IsActive_Params');

/** @record */
bluetooth.mojom.DiscoverySession_IsActive_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    bluetooth.mojom.DiscoverySession_IsActive_ResponseParamsSpec.$,
    'DiscoverySession_IsActive_ResponseParams',
    [
      mojo.internal.StructField(
        'active', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('bluetooth.mojom.DiscoverySession_IsActive_ResponseParams');

/** @record */
bluetooth.mojom.DiscoverySession_IsActive_ResponseParams = class {
  constructor() {
    /** @export { !boolean } */
    this.active;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.DiscoverySession_Stop_ParamsSpec.$,
    'DiscoverySession_Stop_Params',
    [
    ],
    [[0, 8],]);



goog.provide('bluetooth.mojom.DiscoverySession_Stop_Params');

/** @record */
bluetooth.mojom.DiscoverySession_Stop_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    bluetooth.mojom.DiscoverySession_Stop_ResponseParamsSpec.$,
    'DiscoverySession_Stop_ResponseParams',
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('bluetooth.mojom.DiscoverySession_Stop_ResponseParams');

/** @record */
bluetooth.mojom.DiscoverySession_Stop_ResponseParams = class {
  constructor() {
    /** @export { !boolean } */
    this.success;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.Socket_Disconnect_ParamsSpec.$,
    'Socket_Disconnect_Params',
    [
    ],
    [[0, 8],]);



goog.provide('bluetooth.mojom.Socket_Disconnect_Params');

/** @record */
bluetooth.mojom.Socket_Disconnect_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    bluetooth.mojom.Socket_Disconnect_ResponseParamsSpec.$,
    'Socket_Disconnect_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('bluetooth.mojom.Socket_Disconnect_ResponseParams');

/** @record */
bluetooth.mojom.Socket_Disconnect_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    bluetooth.mojom.ServerSocket_Accept_ParamsSpec.$,
    'ServerSocket_Accept_Params',
    [
    ],
    [[0, 8],]);



goog.provide('bluetooth.mojom.ServerSocket_Accept_Params');

/** @record */
bluetooth.mojom.ServerSocket_Accept_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    bluetooth.mojom.ServerSocket_Accept_ResponseParamsSpec.$,
    'ServerSocket_Accept_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        bluetooth.mojom.AcceptConnectionResultSpec.$,
        null,
        true /* nullable */),
    ],
    [[0, 16],]);



goog.provide('bluetooth.mojom.ServerSocket_Accept_ResponseParams');

/** @record */
bluetooth.mojom.ServerSocket_Accept_ResponseParams = class {
  constructor() {
    /** @export { (bluetooth.mojom.AcceptConnectionResult|undefined) } */
    this.result;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.ServerSocket_Disconnect_ParamsSpec.$,
    'ServerSocket_Disconnect_Params',
    [
    ],
    [[0, 8],]);



goog.provide('bluetooth.mojom.ServerSocket_Disconnect_Params');

/** @record */
bluetooth.mojom.ServerSocket_Disconnect_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    bluetooth.mojom.ServerSocket_Disconnect_ResponseParamsSpec.$,
    'ServerSocket_Disconnect_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('bluetooth.mojom.ServerSocket_Disconnect_ResponseParams');

/** @record */
bluetooth.mojom.ServerSocket_Disconnect_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    bluetooth.mojom.Adapter_ConnectToDevice_ParamsSpec.$,
    'Adapter_ConnectToDevice_Params',
    [
      mojo.internal.StructField(
        'address', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('bluetooth.mojom.Adapter_ConnectToDevice_Params');

/** @record */
bluetooth.mojom.Adapter_ConnectToDevice_Params = class {
  constructor() {
    /** @export { !string } */
    this.address;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.Adapter_ConnectToDevice_ResponseParamsSpec.$,
    'Adapter_ConnectToDevice_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        bluetooth.mojom.ConnectResultSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'device', 4,
        0,
        mojo.internal.InterfaceProxy(bluetooth.mojom.DeviceRemote),
        null,
        true /* nullable */),
    ],
    [[0, 24],]);



goog.provide('bluetooth.mojom.Adapter_ConnectToDevice_ResponseParams');

/** @record */
bluetooth.mojom.Adapter_ConnectToDevice_ResponseParams = class {
  constructor() {
    /** @export { !bluetooth.mojom.ConnectResult } */
    this.result;
    /** @export { (bluetooth.mojom.DeviceRemote|undefined) } */
    this.device;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.Adapter_GetDevices_ParamsSpec.$,
    'Adapter_GetDevices_Params',
    [
    ],
    [[0, 8],]);



goog.provide('bluetooth.mojom.Adapter_GetDevices_Params');

/** @record */
bluetooth.mojom.Adapter_GetDevices_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    bluetooth.mojom.Adapter_GetDevices_ResponseParamsSpec.$,
    'Adapter_GetDevices_ResponseParams',
    [
      mojo.internal.StructField(
        'devices', 0,
        0,
        mojo.internal.Array(bluetooth.mojom.DeviceInfoSpec.$, false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('bluetooth.mojom.Adapter_GetDevices_ResponseParams');

/** @record */
bluetooth.mojom.Adapter_GetDevices_ResponseParams = class {
  constructor() {
    /** @export { !Array<!bluetooth.mojom.DeviceInfo> } */
    this.devices;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.Adapter_GetInfo_ParamsSpec.$,
    'Adapter_GetInfo_Params',
    [
    ],
    [[0, 8],]);



goog.provide('bluetooth.mojom.Adapter_GetInfo_Params');

/** @record */
bluetooth.mojom.Adapter_GetInfo_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    bluetooth.mojom.Adapter_GetInfo_ResponseParamsSpec.$,
    'Adapter_GetInfo_ResponseParams',
    [
      mojo.internal.StructField(
        'info', 0,
        0,
        bluetooth.mojom.AdapterInfoSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('bluetooth.mojom.Adapter_GetInfo_ResponseParams');

/** @record */
bluetooth.mojom.Adapter_GetInfo_ResponseParams = class {
  constructor() {
    /** @export { !bluetooth.mojom.AdapterInfo } */
    this.info;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.Adapter_AddObserver_ParamsSpec.$,
    'Adapter_AddObserver_Params',
    [
      mojo.internal.StructField(
        'observer', 0,
        0,
        mojo.internal.InterfaceProxy(bluetooth.mojom.AdapterObserverRemote),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('bluetooth.mojom.Adapter_AddObserver_Params');

/** @record */
bluetooth.mojom.Adapter_AddObserver_Params = class {
  constructor() {
    /** @export { !bluetooth.mojom.AdapterObserverRemote } */
    this.observer;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.Adapter_AddObserver_ResponseParamsSpec.$,
    'Adapter_AddObserver_ResponseParams',
    [
    ],
    [[0, 8],]);



goog.provide('bluetooth.mojom.Adapter_AddObserver_ResponseParams');

/** @record */
bluetooth.mojom.Adapter_AddObserver_ResponseParams = class {
  constructor() {
  }
};




mojo.internal.Struct(
    bluetooth.mojom.Adapter_RegisterAdvertisement_ParamsSpec.$,
    'Adapter_RegisterAdvertisement_Params',
    [
      mojo.internal.StructField(
        'serviceId', 0,
        0,
        bluetooth.mojom.UUIDSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'serviceData', 8,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'useScanResponse', 16,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 32],]);



goog.provide('bluetooth.mojom.Adapter_RegisterAdvertisement_Params');

/** @record */
bluetooth.mojom.Adapter_RegisterAdvertisement_Params = class {
  constructor() {
    /** @export { !bluetooth.mojom.UUID } */
    this.serviceId;
    /** @export { !Array<!number> } */
    this.serviceData;
    /** @export { !boolean } */
    this.useScanResponse;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.Adapter_RegisterAdvertisement_ResponseParamsSpec.$,
    'Adapter_RegisterAdvertisement_ResponseParams',
    [
      mojo.internal.StructField(
        'advertisement', 0,
        0,
        mojo.internal.InterfaceProxy(bluetooth.mojom.AdvertisementRemote),
        null,
        true /* nullable */),
    ],
    [[0, 16],]);



goog.provide('bluetooth.mojom.Adapter_RegisterAdvertisement_ResponseParams');

/** @record */
bluetooth.mojom.Adapter_RegisterAdvertisement_ResponseParams = class {
  constructor() {
    /** @export { (bluetooth.mojom.AdvertisementRemote|undefined) } */
    this.advertisement;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.Adapter_SetDiscoverable_ParamsSpec.$,
    'Adapter_SetDiscoverable_Params',
    [
      mojo.internal.StructField(
        'discoverable', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('bluetooth.mojom.Adapter_SetDiscoverable_Params');

/** @record */
bluetooth.mojom.Adapter_SetDiscoverable_Params = class {
  constructor() {
    /** @export { !boolean } */
    this.discoverable;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.Adapter_SetDiscoverable_ResponseParamsSpec.$,
    'Adapter_SetDiscoverable_ResponseParams',
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('bluetooth.mojom.Adapter_SetDiscoverable_ResponseParams');

/** @record */
bluetooth.mojom.Adapter_SetDiscoverable_ResponseParams = class {
  constructor() {
    /** @export { !boolean } */
    this.success;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.Adapter_SetName_ParamsSpec.$,
    'Adapter_SetName_Params',
    [
      mojo.internal.StructField(
        'name', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('bluetooth.mojom.Adapter_SetName_Params');

/** @record */
bluetooth.mojom.Adapter_SetName_Params = class {
  constructor() {
    /** @export { !string } */
    this.name;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.Adapter_SetName_ResponseParamsSpec.$,
    'Adapter_SetName_ResponseParams',
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('bluetooth.mojom.Adapter_SetName_ResponseParams');

/** @record */
bluetooth.mojom.Adapter_SetName_ResponseParams = class {
  constructor() {
    /** @export { !boolean } */
    this.success;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.Adapter_StartDiscoverySession_ParamsSpec.$,
    'Adapter_StartDiscoverySession_Params',
    [
      mojo.internal.StructField(
        'clientName', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('bluetooth.mojom.Adapter_StartDiscoverySession_Params');

/** @record */
bluetooth.mojom.Adapter_StartDiscoverySession_Params = class {
  constructor() {
    /** @export { !string } */
    this.clientName;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.Adapter_StartDiscoverySession_ResponseParamsSpec.$,
    'Adapter_StartDiscoverySession_ResponseParams',
    [
      mojo.internal.StructField(
        'session', 0,
        0,
        mojo.internal.InterfaceProxy(bluetooth.mojom.DiscoverySessionRemote),
        null,
        true /* nullable */),
    ],
    [[0, 16],]);



goog.provide('bluetooth.mojom.Adapter_StartDiscoverySession_ResponseParams');

/** @record */
bluetooth.mojom.Adapter_StartDiscoverySession_ResponseParams = class {
  constructor() {
    /** @export { (bluetooth.mojom.DiscoverySessionRemote|undefined) } */
    this.session;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.Adapter_ConnectToServiceInsecurely_ParamsSpec.$,
    'Adapter_ConnectToServiceInsecurely_Params',
    [
      mojo.internal.StructField(
        'address', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'serviceUuid', 8,
        0,
        bluetooth.mojom.UUIDSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('bluetooth.mojom.Adapter_ConnectToServiceInsecurely_Params');

/** @record */
bluetooth.mojom.Adapter_ConnectToServiceInsecurely_Params = class {
  constructor() {
    /** @export { !string } */
    this.address;
    /** @export { !bluetooth.mojom.UUID } */
    this.serviceUuid;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.Adapter_ConnectToServiceInsecurely_ResponseParamsSpec.$,
    'Adapter_ConnectToServiceInsecurely_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        bluetooth.mojom.ConnectToServiceResultSpec.$,
        null,
        true /* nullable */),
    ],
    [[0, 16],]);



goog.provide('bluetooth.mojom.Adapter_ConnectToServiceInsecurely_ResponseParams');

/** @record */
bluetooth.mojom.Adapter_ConnectToServiceInsecurely_ResponseParams = class {
  constructor() {
    /** @export { (bluetooth.mojom.ConnectToServiceResult|undefined) } */
    this.result;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.Adapter_CreateRfcommServiceInsecurely_ParamsSpec.$,
    'Adapter_CreateRfcommServiceInsecurely_Params',
    [
      mojo.internal.StructField(
        'serviceName', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'serviceUuid', 8,
        0,
        bluetooth.mojom.UUIDSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('bluetooth.mojom.Adapter_CreateRfcommServiceInsecurely_Params');

/** @record */
bluetooth.mojom.Adapter_CreateRfcommServiceInsecurely_Params = class {
  constructor() {
    /** @export { !string } */
    this.serviceName;
    /** @export { !bluetooth.mojom.UUID } */
    this.serviceUuid;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.Adapter_CreateRfcommServiceInsecurely_ResponseParamsSpec.$,
    'Adapter_CreateRfcommServiceInsecurely_ResponseParams',
    [
      mojo.internal.StructField(
        'serverSocket', 0,
        0,
        mojo.internal.InterfaceProxy(bluetooth.mojom.ServerSocketRemote),
        null,
        true /* nullable */),
    ],
    [[0, 16],]);



goog.provide('bluetooth.mojom.Adapter_CreateRfcommServiceInsecurely_ResponseParams');

/** @record */
bluetooth.mojom.Adapter_CreateRfcommServiceInsecurely_ResponseParams = class {
  constructor() {
    /** @export { (bluetooth.mojom.ServerSocketRemote|undefined) } */
    this.serverSocket;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.AdapterObserver_PresentChanged_ParamsSpec.$,
    'AdapterObserver_PresentChanged_Params',
    [
      mojo.internal.StructField(
        'present', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('bluetooth.mojom.AdapterObserver_PresentChanged_Params');

/** @record */
bluetooth.mojom.AdapterObserver_PresentChanged_Params = class {
  constructor() {
    /** @export { !boolean } */
    this.present;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.AdapterObserver_PoweredChanged_ParamsSpec.$,
    'AdapterObserver_PoweredChanged_Params',
    [
      mojo.internal.StructField(
        'powered', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('bluetooth.mojom.AdapterObserver_PoweredChanged_Params');

/** @record */
bluetooth.mojom.AdapterObserver_PoweredChanged_Params = class {
  constructor() {
    /** @export { !boolean } */
    this.powered;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.AdapterObserver_DiscoverableChanged_ParamsSpec.$,
    'AdapterObserver_DiscoverableChanged_Params',
    [
      mojo.internal.StructField(
        'discoverable', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('bluetooth.mojom.AdapterObserver_DiscoverableChanged_Params');

/** @record */
bluetooth.mojom.AdapterObserver_DiscoverableChanged_Params = class {
  constructor() {
    /** @export { !boolean } */
    this.discoverable;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.AdapterObserver_DiscoveringChanged_ParamsSpec.$,
    'AdapterObserver_DiscoveringChanged_Params',
    [
      mojo.internal.StructField(
        'discovering', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('bluetooth.mojom.AdapterObserver_DiscoveringChanged_Params');

/** @record */
bluetooth.mojom.AdapterObserver_DiscoveringChanged_Params = class {
  constructor() {
    /** @export { !boolean } */
    this.discovering;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.AdapterObserver_DeviceAdded_ParamsSpec.$,
    'AdapterObserver_DeviceAdded_Params',
    [
      mojo.internal.StructField(
        'device', 0,
        0,
        bluetooth.mojom.DeviceInfoSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('bluetooth.mojom.AdapterObserver_DeviceAdded_Params');

/** @record */
bluetooth.mojom.AdapterObserver_DeviceAdded_Params = class {
  constructor() {
    /** @export { !bluetooth.mojom.DeviceInfo } */
    this.device;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.AdapterObserver_DeviceChanged_ParamsSpec.$,
    'AdapterObserver_DeviceChanged_Params',
    [
      mojo.internal.StructField(
        'device', 0,
        0,
        bluetooth.mojom.DeviceInfoSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('bluetooth.mojom.AdapterObserver_DeviceChanged_Params');

/** @record */
bluetooth.mojom.AdapterObserver_DeviceChanged_Params = class {
  constructor() {
    /** @export { !bluetooth.mojom.DeviceInfo } */
    this.device;
  }
};




mojo.internal.Struct(
    bluetooth.mojom.AdapterObserver_DeviceRemoved_ParamsSpec.$,
    'AdapterObserver_DeviceRemoved_Params',
    [
      mojo.internal.StructField(
        'device', 0,
        0,
        bluetooth.mojom.DeviceInfoSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('bluetooth.mojom.AdapterObserver_DeviceRemoved_Params');

/** @record */
bluetooth.mojom.AdapterObserver_DeviceRemoved_Params = class {
  constructor() {
    /** @export { !bluetooth.mojom.DeviceInfo } */
    this.device;
  }
};


