{"version":3,"file":"WorkspaceImpl_test.js","sourceRoot":"","sources":["../../../../../../../../../../../third_party/devtools-frontend/src/test/unittests/front_end/models/workspace/WorkspaceImpl_test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAC;AAEtB,OAAO,KAAK,SAAS,MAAM,wDAAwD,CAAC;AAEpF,OAAO,KAAK,WAAW,MAAM,4DAA4D,CAAC;AAE1F,OAAO,EAAC,4BAA4B,EAAC,MAAM,sCAAsC,CAAC;AAElF,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAC7B,EAAE,CAAC,wDAAwD,EAAE,GAAG,EAAE;QAChE,MAAM,kBAAkB,GAAG,IAAI,WAAW,CAAC,kBAAkB,CAAC,kBAAkB,CAC5E,WAA8C,EAAE,WAAW,CAAC,CAAC;QACjE,MAAM,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;QAC/D,MAAM,UAAU,GAAG,IAAI,WAAW,CAAC,0BAA0B,CAAC,UAAU,CACpE,EAAuE,EAAE,kBAAkB,EAAE,SAAS,CAAC,CAAC;QAC5G,MAAM,GAAG,GAAG,qBAAwD,CAAC;QACrE,MAAM,EAAC,YAAY,EAAC,GAChB,4BAA4B,CAAC,EAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,4BAA4B,EAAE,QAAQ,EAAE,iBAAiB,EAAC,CAAC,CAAC;QAEjH,UAAU,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;QACzC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,kBAAkB,CAAC,qBAAwD,CAAC,CAAC,CAAC;QAC1G,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,kBAAkB,CACvC,6EAC+B,CAAC,CAAC,CAAC;QAEtC,UAAU,CAAC,kBAAkB,CAAC,YAAY,EAAE,uDAAuD,CAAC,CAAC;QACrG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,kBAAkB,CAAC,qBAAwD,CAAC,CAAC,CAAC;QACvG,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,kBAAkB,CAC1C,6EAC+B,CAAC,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nconst {assert} = chai;\n\nimport * as Workspace from '../../../../../front_end/models/workspace/workspace.js';\nimport type * as Platform from '../../../../../front_end/core/platform/platform.js';\nimport * as Persistence from '../../../../../front_end/models/persistence/persistence.js';\n\nimport {createFileSystemUISourceCode} from '../../helpers/UISourceCodeHelpers.js';\n\ndescribe('WorkspaceImpl', () => {\n  it('allows renaming for file names with special characters', () => {\n    const platformFileSystem = new Persistence.PlatformFileSystem.PlatformFileSystem(\n        'Test Path' as Platform.DevToolsPath.UrlString, 'Test Type');\n    const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n    const fileSystem = new Persistence.FileSystemWorkspaceBinding.FileSystem(\n        {} as Persistence.FileSystemWorkspaceBinding.FileSystemWorkspaceBinding, platformFileSystem, workspace);\n    const URL = 'file:///tmp/NewFile' as Platform.DevToolsPath.UrlString;\n    const {uiSourceCode} =\n        createFileSystemUISourceCode({url: URL, content: 'const data={original:true}', mimeType: 'text/javascript'});\n\n    fileSystem.addUISourceCode(uiSourceCode);\n    assert.isNotNull(fileSystem.uiSourceCodeForURL('file:///tmp/NewFile' as Platform.DevToolsPath.UrlString));\n    assert.isNull(fileSystem.uiSourceCodeForURL(\n        'file:///tmp/equals=question%3Fpercent%25space%20dollar$semi%3Bhash%23amper&' as\n        Platform.DevToolsPath.UrlString));\n\n    fileSystem.renameUISourceCode(uiSourceCode, 'equals=question?percent%space dollar$semi;hash#amper&');\n    assert.isNull(fileSystem.uiSourceCodeForURL('file:///tmp/NewFile' as Platform.DevToolsPath.UrlString));\n    assert.isNotNull(fileSystem.uiSourceCodeForURL(\n        'file:///tmp/equals=question%3Fpercent%25space%20dollar$semi%3Bhash%23amper&' as\n        Platform.DevToolsPath.UrlString));\n  });\n});\n"]}