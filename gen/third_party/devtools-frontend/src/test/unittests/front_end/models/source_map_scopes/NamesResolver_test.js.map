{"version":3,"file":"NamesResolver_test.js","sourceRoot":"","sources":["../../../../../../../../../../../third_party/devtools-frontend/src/test/unittests/front_end/models/source_map_scopes/NamesResolver_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nconst {assert} = chai;\n\nimport type * as Host from '../../../../../front_end/core/host/host.js';\nimport {assertNotNullOrUndefined} from '../../../../../front_end/core/platform/platform.js';\nimport * as SourceMapScopes from '../../../../../front_end/models/source_map_scopes/source_map_scopes.js';\nimport * as SDK from '../../../../../front_end/core/sdk/sdk.js';\nimport * as Workspace from '../../../../../front_end/models/workspace/workspace.js';\nimport * as Bindings from '../../../../../front_end/models/bindings/bindings.js';\nimport type * as Platform from '../../../../../front_end/core/platform/platform.js';\nimport * as Protocol from '../../../../../front_end/generated/protocol.js';\nimport {createTarget} from '../../helpers/EnvironmentHelpers.js';\nimport {\n  describeWithMockConnection,\n  dispatchEvent,\n  setMockConnectionResponseHandler,\n} from '../../helpers/MockConnection.js';\n\ninterface LoadResult {\n  success: boolean;\n  content: string;\n  errorDescription: Host.ResourceLoader.LoadErrorDescription;\n}\n\nclass MockProtocolBackend {\n  #scriptSources = new Map<string, string>();\n  #sourceMapContents = new Map<string, string>();\n  #objectProperties = new Map<string, {name: string, value: number}[]>();\n  #nextObjectIndex = 0;\n  #nextScriptIndex = 0;\n\n  constructor() {\n    // One time setup of the response handlers.\n    setMockConnectionResponseHandler('Debugger.getScriptSource', this.#getScriptSourceHandler.bind(this));\n    setMockConnectionResponseHandler('Runtime.getProperties', this.#getPropertiesHandler.bind(this));\n    SDK.PageResourceLoader.PageResourceLoader.instance({\n      forceNew: true,\n      loadOverride: async (url: string) => this.#loadSourceMap(url),\n      maxConcurrentLoads: 1,\n      loadTimeout: 2000,\n    });\n  }\n\n  async addScript(target: SDK.Target.Target, script: {url: string, content: string}, sourceMap: {\n    url: string,\n    content: string,\n  }): Promise<SDK.Script.Script> {\n    const scriptId = 'SCRIPTID.' + this.#nextScriptIndex++;\n    this.#scriptSources.set(scriptId, script.content);\n    this.#sourceMapContents.set(sourceMap.url, sourceMap.content);\n    dispatchEvent(target, 'Debugger.scriptParsed', {\n      scriptId,\n      url: script.url,\n      startLine: 0,\n      startColumn: 0,\n      endLine: (script.content.match(/^/gm)?.length ?? 1) - 1,\n      endColumn: script.content.length - script.content.lastIndexOf('\\n') - 1,\n      executionContextId: 1,\n      hash: '',\n      hasSourceURL: false,\n      sourceMapURL: sourceMap.url,\n    });\n\n    // Wait until the source map loads.\n    const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel) as SDK.DebuggerModel.DebuggerModel;\n    const scriptObject = debuggerModel.scriptForId(scriptId);\n    assertNotNullOrUndefined(scriptObject);\n    const loadedSourceMap = await debuggerModel.sourceMapManager().sourceMapForClientPromise(scriptObject);\n\n    assert.strictEqual(loadedSourceMap?.url() as string, sourceMap.url);\n    return scriptObject;\n  }\n\n  createProtocolLocation(scriptId: string, lineNumber: number, columnNumber: number): Protocol.Debugger.Location {\n    return {scriptId: scriptId as Protocol.Runtime.ScriptId, lineNumber, columnNumber};\n  }\n\n  createProtocolScope(\n      type: Protocol.Debugger.ScopeType, object: Protocol.Runtime.RemoteObject, scriptId: string, startColumn: number,\n      endColumn: number) {\n    return {\n      type,\n      object,\n      startLocation: this.createProtocolLocation(scriptId, 0, startColumn),\n      endLocation: this.createProtocolLocation(scriptId, 0, endColumn),\n    };\n  }\n\n  createSimpleRemoteObject(properties: {name: string, value: number}[]): Protocol.Runtime.RemoteObject {\n    const objectId = 'OBJECTID.' + this.#nextObjectIndex++;\n    this.#objectProperties.set(objectId, properties);\n\n    return {type: Protocol.Runtime.RemoteObjectType.Object, objectId: objectId as Protocol.Runtime.RemoteObjectId};\n  }\n\n  #getScriptSourceHandler(request: Protocol.Debugger.GetScriptSourceRequest):\n      Protocol.Debugger.GetScriptSourceResponse {\n    const scriptSource = this.#scriptSources.get(request.scriptId);\n    if (scriptSource) {\n      return {\n        scriptSource,\n        getError() {\n          return undefined;\n        },\n      };\n    }\n    return {\n      scriptSource: 'Unknown script',\n      getError() {\n        return 'Unknown script';\n      },\n    };\n  }\n\n  #getPropertiesHandler(request: Protocol.Runtime.GetPropertiesRequest): Protocol.Runtime.GetPropertiesResponse {\n    const objectProperties = this.#objectProperties.get(request.objectId as string);\n    if (!objectProperties) {\n      return {\n        result: [],\n        getError() {\n          return 'Unknown object';\n        },\n      };\n    }\n\n    const result: Protocol.Runtime.PropertyDescriptor[] = [];\n    for (const property of objectProperties) {\n      result.push({\n        name: property.name,\n        value: {\n          type: Protocol.Runtime.RemoteObjectType.Number,\n          value: property.value,\n          description: `${property.value}`,\n        },\n        writable: true,\n        configurable: true,\n        enumerable: true,\n        isOwn: true,\n      });\n    }\n    return {\n      result,\n      getError() {\n        return undefined;\n      },\n    };\n  }\n\n  #loadSourceMap(url: string): LoadResult {\n    const content = this.#sourceMapContents.get(url);\n    if (!content) {\n      return {\n        success: false,\n        content: '',\n        errorDescription:\n            {message: 'source map not found', statusCode: 123, netError: 0, netErrorName: '', urlValid: true},\n      };\n    }\n    return {\n      success: true,\n      content,\n      errorDescription: {message: '', statusCode: 0, netError: 0, netErrorName: '', urlValid: true},\n    };\n  }\n}\n\ndescribeWithMockConnection('NameResolver', () => {\n  const URL = 'file:///tmp/example.js' as Platform.DevToolsPath.UrlString;\n  let target: SDK.Target.Target;\n  let backend: MockProtocolBackend;\n\n  beforeEach(() => {\n    const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n    const targetManager = SDK.TargetManager.TargetManager.instance();\n    const debuggerWorkspaceBinding = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance({\n      forceNew: true,\n      targetManager,\n      workspace,\n    });\n    Bindings.IgnoreListManager.IgnoreListManager.instance({forceNew: true, debuggerWorkspaceBinding});\n    target = createTarget();\n    backend = new MockProtocolBackend();\n  });\n\n  function parseScopeChain(scopeDescriptor: string):\n      {type: Protocol.Debugger.ScopeType, startColumn: number, endColumn: number}[] {\n    // Identify function scope.\n    const functionStart = scopeDescriptor.indexOf('{');\n    if (functionStart < 0) {\n      throw new Error('Test descriptor must contain \"{\"');\n    }\n    const functionEnd = scopeDescriptor.indexOf('}', functionStart);\n    if (functionEnd < 0) {\n      throw new Error('Test descriptor must contain \"}\"');\n    }\n\n    const scopeChain =\n        [{type: Protocol.Debugger.ScopeType.Local, startColumn: functionStart, endColumn: functionEnd + 1}];\n\n    // Find the block scope.\n    const blockScopeStart = scopeDescriptor.indexOf('<');\n    if (blockScopeStart >= 0) {\n      const blockScopeEnd = scopeDescriptor.indexOf('>');\n      if (blockScopeEnd < 0) {\n        throw new Error('Test descriptor must contain matching \".\" for \"<\"');\n      }\n      scopeChain.unshift(\n          {type: Protocol.Debugger.ScopeType.Block, startColumn: blockScopeStart, endColumn: blockScopeEnd + 1});\n    }\n\n    return scopeChain;\n  }\n\n  async function initializeModelAndScopes(\n      script: {url: string, content: string}, scopeDescriptor: string, sourceMap: {url: string, content: string},\n      scopeObject: Protocol.Runtime.RemoteObject|null =\n          null): Promise<{functionScope: SDK.DebuggerModel.ScopeChainEntry, scope: SDK.DebuggerModel.ScopeChainEntry}> {\n    const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel) as SDK.DebuggerModel.DebuggerModel;\n    const scriptObject = await backend.addScript(target, script, sourceMap);\n\n    const parsedScopes = parseScopeChain(scopeDescriptor);\n    const scopeChain = parsedScopes.map(\n        s => backend.createProtocolScope(\n            s.type, {type: Protocol.Runtime.RemoteObjectType.Object}, scriptObject.scriptId, s.startColumn,\n            s.endColumn));\n\n    const innerScope = scopeChain[0];\n    if (scopeObject) {\n      innerScope.object = scopeObject;\n    }\n\n    const payload: Protocol.Debugger.CallFrame = {\n      callFrameId: '0' as Protocol.Debugger.CallFrameId,\n      functionName: 'test',\n      functionLocation: undefined,\n      location: innerScope.startLocation,\n      url: scriptObject.sourceURL,\n      scopeChain,\n      this: {type: 'object'} as Protocol.Runtime.RemoteObject,\n      returnValue: undefined,\n      canBeRestarted: false,\n    };\n\n    const callFrame = new SDK.DebuggerModel.CallFrame(debuggerModel, scriptObject, payload, 0);\n    return {functionScope: callFrame.scopeChain()[callFrame.scopeChain().length - 1], scope: callFrame.scopeChain()[0]};\n  }\n\n  function getIdentifiersFromScopeDescriptor(source: string, scopeDescriptor: string): {\n    bound: SourceMapScopes.NamesResolver.IdentifierPositions[],\n    free: SourceMapScopes.NamesResolver.IdentifierPositions[],\n  } {\n    const bound = new Map<string, SourceMapScopes.NamesResolver.IdentifierPositions>();\n    const free = new Map<string, SourceMapScopes.NamesResolver.IdentifierPositions>();\n    let current = 0;\n\n    while (current < scopeDescriptor.length) {\n      while (current < scopeDescriptor.length) {\n        if (scopeDescriptor[current] === 'B' || scopeDescriptor[current] === 'F') {\n          break;\n        }\n        current++;\n      }\n      if (current >= scopeDescriptor.length) {\n        break;\n      }\n\n      const kind = scopeDescriptor[current];\n      const start = current;\n      let end = start + 1;\n      while (end < scopeDescriptor.length && scopeDescriptor[end] === kind) {\n        end++;\n      }\n      if (kind === 'B') {\n        addPosition(bound, start, end);\n      } else {\n        console.assert(kind === 'F');\n        addPosition(free, start, end);\n      }\n      current = end + 1;\n    }\n\n    return {bound: [...bound.values()], free: [...free.values()]};\n\n    function addPosition(\n        collection: Map<string, SourceMapScopes.NamesResolver.IdentifierPositions>, start: number, end: number) {\n      const name = source.substring(start, end);\n      let id = collection.get(name);\n      if (!id) {\n        id = new SourceMapScopes.NamesResolver.IdentifierPositions(name);\n        collection.set(name, id);\n      }\n      id.addPosition(0, start);\n    }\n  }\n\n  // Given a function scope <fn-start>,<fn-end> and a nested scope <start>,<end>,\n  // we expect the scope parser to return a list of identifiers of the form [{name, offset}]\n  // for the nested scope. (The nested scope may be the same as the function scope.)\n  //\n  // For example, say we want to assert that the block scope '{let a = x, return a}'\n  // in function 'function f(x) { g(x); {let a = x, return a} }'\n  //   - defines and uses variable 'a' at the correct offsets, and\n  //   - uses free variable 'x'.\n  // Such assertions could be expressed roughly as follows:\n  //\n  // expect.that(\n  //  scopeIdentifiers(functionScope: {start: 10, end: 45}, scope:{start: 21, end: 43}).bound)\n  //   .equals([Identifier(name: a, offsets: [27, 41])]).\n  // expect.that(\n  //  scopeIdentifiers(functionScope: {start: 10, end: 45}, scope:{start: 21, end: 43}).free)\n  //   .equals([Identifier(name: x, offsets: [31])]).\n  //\n  // This is not ideal because the explicit offsets are hard to read and maintain.\n  // To avoid typing the exact offset we encode the offsets in a scope assertion string\n  // that can be easily aligned with the source code. For example, the assertion above\n  // will be written as\n  // source: 'function f(x) { g(x); {let a = x, return a} }'\n  // scopes: '          {            <   B   F         B> }'\n  //\n  // In the assertion string, '{' and '}' characters mark the positions of function\n  // offset start and end, '<' and '>' mark the positions of the nested scope\n  // start and end (if '<', '>' are missing then the nested scope is the function scope),\n  // the character 'B', 'F' mark the positions of bound and free identifiers that\n  // we expect to be returned by the scopeIdentifiers function.\n\n  it('test helper parses identifiers from test descriptor', () => {\n    const source = 'function f(x) { g(x); {let a = x, return a} }';\n    const scopes = '          {           <    B   F         B> }';\n    const identifiers = getIdentifiersFromScopeDescriptor(source, scopes);\n    assert.deepEqual(identifiers.bound, [\n      new SourceMapScopes.NamesResolver.IdentifierPositions(\n          'a', [{lineNumber: 0, columnNumber: 27}, {lineNumber: 0, columnNumber: 41}]),\n    ]);\n    assert.deepEqual(identifiers.free, [\n      new SourceMapScopes.NamesResolver.IdentifierPositions('x', [{lineNumber: 0, columnNumber: 31}]),\n    ]);\n  });\n\n  it('test helper parses scopes from test descriptor', () => {\n    //    source = 'function f(x) { g(x); {let a = x, return a} }';\n    const scopes = '          {           <    B             B> }';\n    const [scope, functionScope] = parseScopeChain(scopes);\n    assert.strictEqual(functionScope.startColumn, 10);\n    assert.strictEqual(functionScope.endColumn, 45);\n    assert.strictEqual(scope.startColumn, 22);\n    assert.strictEqual(scope.endColumn, 43);\n  });\n\n  it('test helper parses function scope from test descriptor', () => {\n    //    source = 'function f(x) { g(x); {let a = x, return a} }';\n    const scopes = '          {B      B            B            }';\n    const [functionScope] = parseScopeChain(scopes);\n    assert.strictEqual(functionScope.startColumn, 10);\n    assert.strictEqual(functionScope.endColumn, 45);\n  });\n\n  const tests = [\n    {\n      name: 'computes identifiers for a simple function',\n      source: 'function f(x) { return x }',\n      scopes: '          {B           B }',\n    },\n    {\n      name: 'computes identifiers for a function with a let local',\n      source: 'function f(x) { let a = 42; return a; }',\n      scopes: '          {B        B              B  }',\n    },\n    {\n      name: 'computes identifiers for a nested scope',\n      source: 'function f(x) { let outer = x; { let inner = outer; return inner } }',\n      scopes: '          {                    <     BBBBB   FFFFF         BBBBB > }',\n    },\n    {\n      name: 'computes identifiers for second nested scope',\n      source: 'function f(x) { { let a = 1; } { let b = x; return b } }',\n      scopes: '          {                    <     B   F         B > }',\n    },\n    {\n      name: 'computes identifiers with nested scopes',\n      source: 'function f(x) { let outer = x; { let a = outer; } { let b = x; return b } }',\n      scopes: '          {B        BBBBB   B            BBBBB              B             }',\n    },\n    {\n      name: 'computes identifiers with nested scopes, var lifting',\n      source: 'function f(x) { let outer = x; { var b = x; return b } }',\n      scopes: '          {B        BBBBB   B        B   B         B   }',\n    },\n    {\n      name: 'computes identifiers with nested scopes, var lifting',\n      source: 'function f(x) { let outer = x; { var b = x; return b } }',\n      scopes: '          {B        BBBBB   B        B   B         B   }',\n    },\n    {\n      name: 'computes identifiers in catch clause',\n      source: 'function f(x) { try { } catch (e) { let a = e + x; } }',\n      scopes: '          {                   <B            B   F  > }',\n    },\n    {\n      name: 'computes identifiers in catch clause',\n      source: 'function f(x) { try { } catch (e) { let a = e; return a; } }',\n      scopes: '          {                       <     B   F         B  > }',\n    },\n    {\n      name: 'computes identifiers in for-let',\n      source: 'function f(x) { for (let i = 0; i < 10; i++) { let j = i; console.log(j)} }',\n      scopes: '          {         <    B      B       B              B  FFFFFFF       > }',\n    },\n    {\n      name: 'computes identifiers in for-let body',\n      source: 'function f(x) { for (let i = 0; i < 10; i++) { let j = i; console.log(j)} }',\n      scopes: '          {                                  <     B   F  FFFFFFF     B > }',\n    },\n    {\n      name: 'computes identifiers in for-var function',\n      source: 'function f(x) { for (var i = 0; i < 10; i++) { let j = i; console.log(j)} }',\n      scopes: '          {B             B      B       B              B  FFFFFFF         }',\n    },\n    {\n      name: 'computes identifiers in for-let-of',\n      source: 'function f(x) { for (let i of x) { console.log(i)} }',\n      scopes: '          {         <    B    F    FFFFFFF     B > }',\n    },\n    {\n      name: 'computes identifiers in nested arrow function',\n      source: 'function f(x) { return (i) => { let j = i; return j } }',\n      scopes: '          {            <B           B   B         B > }',\n    },\n    {\n      name: 'computes identifiers in arrow function',\n      source: 'const f = (x) => { let i = 1; return x + i; }',\n      scopes: '          {B           B             B   B  }',\n    },\n    {\n      name: 'computes identifiers in an arrow function\\'s nested scope',\n      source: 'const f = (x) => { let i = 1; { let j = i + x; return j; } }',\n      scopes: '          {                   <     B   F   F         B  > }',\n    },\n    {\n      name: 'returns empty identifier list for scope with syntax error',\n      source: 'function f(x) xx { return (i) => { let j = i; return j } }',\n      scopes: '          {                                              }',\n    },\n  ];\n\n  const dummyMapContent = JSON.stringify({\n    'version': 3,\n    'sources': [],\n  });\n\n  for (const test of tests) {\n    it(test.name, async () => {\n      const {functionScope, scope} = await initializeModelAndScopes(\n          {url: URL, content: test.source}, test.scopes, {url: 'file:///dummy.map', content: dummyMapContent});\n      const identifiers = await SourceMapScopes.NamesResolver.scopeIdentifiers(functionScope, scope);\n      const boundIdentifiers = identifiers?.boundVariables ?? [];\n      const freeIdentifiers = identifiers?.freeVariables ?? [];\n      boundIdentifiers.sort(\n          (l, r) => l.positions[0].lineNumber - r.positions[0].lineNumber ||\n              l.positions[0].columnNumber - r.positions[0].columnNumber);\n      freeIdentifiers.sort(\n          (l, r) => l.positions[0].lineNumber - r.positions[0].lineNumber ||\n              l.positions[0].columnNumber - r.positions[0].columnNumber);\n      assert.deepEqual(boundIdentifiers, getIdentifiersFromScopeDescriptor(test.source, test.scopes).bound);\n      assert.deepEqual(freeIdentifiers, getIdentifiersFromScopeDescriptor(test.source, test.scopes).free);\n    });\n  }\n\n  it('resolves name tokens merged with commas (without source map names)', async () => {\n    const sourceMapUrl = 'file:///tmp/example.js.min.map';\n    // This was minified with 'esbuild --sourcemap=linked --minify' v0.14.31.\n    const sourceMapContent = JSON.stringify({\n      'version': 3,\n      'sources': ['index.js'],\n      'sourcesContent': ['function f(par1, par2) {\\n  console.log(par1, par2);\\n}\\nf(1, 2);\\n'],\n      'mappings': 'AAAA,WAAW,EAAM,EAAM,CACrB,QAAQ,IAAI,EAAM,CAAI,CACxB,CACA,EAAE,EAAG,CAAC',\n      'names': [],\n    });\n\n    const source = `function f(o,n){console.log(o,n)}f(1,2);\\n//# sourceMappingURL=${sourceMapUrl}`;\n    const scopes = '          {                     }';\n\n    const scopeObject = backend.createSimpleRemoteObject([{name: 'o', value: 1}, {name: 'n', value: 2}]);\n    const {scope} = await initializeModelAndScopes(\n        {url: URL, content: source}, scopes, {url: sourceMapUrl, content: sourceMapContent}, scopeObject);\n\n    const resolvedScopeObject = await SourceMapScopes.NamesResolver.resolveScopeInObject(scope);\n    const properties = await resolvedScopeObject.getAllProperties(false, false);\n    const namesAndValues = properties.properties?.map(p => ({name: p.name, value: p.value?.value})) ?? [];\n\n    assert.sameDeepMembers(namesAndValues, [{name: 'par1', value: 1}, {name: 'par2', value: 2}]);\n  });\n\n  it('resolves name tokens merged with equals (without source map names)', async () => {\n    const sourceMapUrl = 'file:///tmp/example.js.min.map';\n    // This was minified with 'esbuild --sourcemap=linked --minify' v0.14.31.\n    const sourceMapContent = JSON.stringify({\n      'version': 3,\n      'sources': ['index.js'],\n      'sourcesContent': ['function f(n) {\\n  for (let i = 0; i < n; i++) {\\n    console.log(\"hi\");\\n  }\\n}\\nf(10);\\n'],\n      'mappings': 'AAAA,WAAW,EAAG,CACZ,OAAS,GAAI,EAAG,EAAI,EAAG,IACrB,QAAQ,IAAI,IAAI,CAEpB,CACA,EAAE,EAAE',\n      'names': [],\n    });\n\n    const source = `function f(i){for(let o=0;o<i;o++)console.log(\"hi\")}f(10);\\n//# sourceMappingURL=${sourceMapUrl}`;\n    const scopes = '          {      <                                >}';\n\n    const scopeObject = backend.createSimpleRemoteObject([{name: 'o', value: 4}]);\n    const {scope} = await initializeModelAndScopes(\n        {url: URL, content: source}, scopes, {url: sourceMapUrl, content: sourceMapContent}, scopeObject);\n\n    const resolvedScopeObject = await SourceMapScopes.NamesResolver.resolveScopeInObject(scope);\n    const properties = await resolvedScopeObject.getAllProperties(false, false);\n    const namesAndValues = properties.properties?.map(p => ({name: p.name, value: p.value?.value})) ?? [];\n\n    assert.sameDeepMembers(namesAndValues, [{name: 'i', value: 4}]);\n  });\n\n  it('resolves name tokens with source map names', async () => {\n    const sourceMapUrl = 'file:///tmp/example.js.min.map';\n    // This was minified with 'terser -m -o example.min.js --source-map \"includeSources;url=example.min.js.map\" --toplevel' v5.7.0.\n    const sourceMapContent = JSON.stringify({\n      'version': 3,\n      'names': ['f', 'par1', 'par2', 'console', 'log'],\n      'sources': ['index.js'],\n      'sourcesContent': ['function f(par1, par2) {\\n  console.log(par1, par2);\\n}\\nf(1, 2);\\n'],\n      'mappings': 'AAAA,SAASA,EAAEC,EAAMC,GACfC,QAAQC,IAAIH,EAAMC,GAEpBF,EAAE,EAAG',\n    });\n\n    const source = `function o(o,n){console.log(o,n)}o(1,2);\\n//# sourceMappingURL=${sourceMapUrl}`;\n    const scopes = '          {                     }';\n\n    const scopeObject = backend.createSimpleRemoteObject([{name: 'o', value: 1}, {name: 'n', value: 2}]);\n    const {scope} = await initializeModelAndScopes(\n        {url: URL, content: source}, scopes, {url: sourceMapUrl, content: sourceMapContent}, scopeObject);\n\n    const resolvedScopeObject = await SourceMapScopes.NamesResolver.resolveScopeInObject(scope);\n    const properties = await resolvedScopeObject.getAllProperties(false, false);\n    const namesAndValues = properties.properties?.map(p => ({name: p.name, value: p.value?.value})) ?? [];\n\n    assert.sameDeepMembers(namesAndValues, [{name: 'par1', value: 1}, {name: 'par2', value: 2}]);\n  });\n\n  it('resolves names in constructors with super call', async () => {\n    const sourceMapUrl = 'file:///tmp/example.js.min.map';\n    // This was minified with 'terser -m -o example.min.js --source-map \"includeSources;url=example.min.js.map\"' v5.7.0.\n    const sourceMapContent = JSON.stringify({\n      'version': 3,\n      'names': ['C', 'B', 'constructor', 'par1', 'super', 'console', 'log'],\n      'sources': ['index.js'],\n      'mappings': 'AAAA,MAAMA,UAAUC,EACdC,YAAYC,GACVC,MAAMD,GACNE,QAAQC,IAAIH',\n    });\n\n    const source = `class C extends B{constructor(s){super(s),console.log(s)}}\\n//# sourceMappingURL=${sourceMapUrl}`;\n    const scopes = '                             {                          }';\n\n    const scopeObject = backend.createSimpleRemoteObject([{name: 's', value: 42}]);\n    const {scope} = await initializeModelAndScopes(\n        {url: URL, content: source}, scopes, {url: sourceMapUrl, content: sourceMapContent}, scopeObject);\n\n    const resolvedScopeObject = await SourceMapScopes.NamesResolver.resolveScopeInObject(scope);\n    const properties = await resolvedScopeObject.getAllProperties(false, false);\n    const namesAndValues = properties.properties?.map(p => ({name: p.name, value: p.value?.value})) ?? [];\n\n    assert.sameDeepMembers(namesAndValues, [{name: 'par1', value: 42}]);\n  });\n\n  it('resolves function names at scope start', async () => {\n    const sourceMapUrl = 'file:///tmp/example.js.min.map';\n    // This was minified with 'terser -m -o example.min.js --source-map \"includeSources;url=example.min.js.map\"' v5.7.0.\n    const sourceMapContent = JSON.stringify({\n      'version': 3,\n      'names': ['unminified', 'par1', 'par2', 'console', 'log'],\n      'sources': ['index.js'],\n      'sourcesContent': ['function unminified(par1, par2) {\\n  console.log(par1, par2);\\n}\\n'],\n      'mappings': 'AAAA,SAASA,EAAWC,EAAMC,GACxBC,QAAQC,IAAIH,EAAMC',\n    });\n\n    const source = `function o(o,n){console.log(o,n)}o(1,2);\\n//# sourceMappingURL=${sourceMapUrl}`;\n    const scopes = '          {                     }';\n\n    const scopeObject = backend.createSimpleRemoteObject([{name: 's', value: 42}]);\n    const {scope} = await initializeModelAndScopes(\n        {url: URL, content: source}, scopes, {url: sourceMapUrl, content: sourceMapContent}, scopeObject);\n\n    const functionName = await SourceMapScopes.NamesResolver.resolveFrameFunctionName(scope.callFrame());\n\n    assert.strictEqual(functionName, 'unminified');\n  });\n\n  it('ignores the argument name during arrow function name resolution', async () => {\n    const sourceMapUrl = 'file:///tmp/example.js.min.map';\n    // This was minified with 'terser -m -o example.min.js --source-map \"includeSources;url=example.min.js.map\"' v5.7.0.\n    const sourceMapContent = JSON.stringify({\n      'version': 3,\n      'names': ['unminified', 'par1', 'console', 'log'],\n      'sources': ['index.js'],\n      'sourcesContent': ['const unminified = par1 => {\\n  console.log(par1);\\n}\\n'],\n      'mappings': 'AAAA,MAAMA,EAAaC,IACjBC,QAAQC,IAAIF',\n    });\n\n    const source = `const o=o=>{console.log(o)};\\n//# sourceMappingURL=${sourceMapUrl}`;\n    const scopes = '        {                 }';\n\n    const scopeObject = backend.createSimpleRemoteObject([{name: 'o', value: 42}]);\n    const {scope} = await initializeModelAndScopes(\n        {url: URL, content: source}, scopes, {url: sourceMapUrl, content: sourceMapContent}, scopeObject);\n\n    assert.isNull(await SourceMapScopes.NamesResolver.resolveFrameFunctionName(scope.callFrame()));\n  });\n});\n"]}