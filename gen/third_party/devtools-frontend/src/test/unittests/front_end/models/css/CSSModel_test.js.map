{"version":3,"file":"CSSModel_test.js","sourceRoot":"","sources":["../../../../../../../../../../../third_party/devtools-frontend/src/test/unittests/front_end/models/css/CSSModel_test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAC;AACtB,OAAO,KAAK,GAAG,MAAM,0CAA0C,CAAC;AAEhE,OAAO,EAAC,YAAY,EAAC,MAAM,qCAAqC,CAAC;AACjE,OAAO,EAAC,0BAA0B,EAAC,MAAM,iCAAiC,CAAC;AAE3E,0BAA0B,CAAC,UAAU,EAAE;IACrC,EAAE,CAAC,mCAAmC,EAAE,GAAG,EAAE;QAC3C,MAAM,MAAM,GAAG,YAAY,EAAE,CAAC;QAC9B,MAAM,QAAQ,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACnD,MAAM,GAAG,GAAG,UAAU,CAAC;QACvB,MAAM,QAAQ,GAAG,EAAC,UAAU,EAAE,QAAQ,EAAE,GAAG,EAAE,WAAW,EAAE,MAAM,EAAqC,CAAC;QACtG,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAChC,MAAM,iBAAiB,GAAG,QAAQ,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;QAC1D,MAAM,CAAC,WAAW,CAAC,iBAAiB,EAAE,aAAa,EAAY,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC;QACtF,MAAM,CAAC,WAAW,CAAC,iBAAiB,EAAE,MAAM,EAAY,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC;QACxE,MAAM,CAAC,WAAW,CAAC,iBAAiB,EAAE,cAAc,EAAY,EAAE,QAAQ,CAAC,WAAW,CAAC,CAAC;IAC1F,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nconst {assert} = chai;\nimport * as SDK from '../../../../../front_end/core/sdk/sdk.js';\nimport type * as Protocol from '../../../../../front_end/generated/protocol.js';\nimport {createTarget} from '../../helpers/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../helpers/MockConnection.js';\n\ndescribeWithMockConnection('FontFace', function() {\n  it('gets the FontFace of a source URL', () => {\n    const target = createTarget();\n    const cssModel = new SDK.CSSModel.CSSModel(target);\n    const src = 'mock.com';\n    const fontFace = {fontFamily: 'Roboto', src, fontDisplay: 'swap'} as unknown as Protocol.CSS.FontFace;\n    cssModel.fontsUpdated(fontFace);\n    const fontFaceForSource = cssModel.fontFaceForSource(src);\n    assert.strictEqual(fontFaceForSource?.getFontFamily() as string, fontFace.fontFamily);\n    assert.strictEqual(fontFaceForSource?.getSrc() as string, fontFace.src);\n    assert.strictEqual(fontFaceForSource?.getFontDisplay() as string, fontFace.fontDisplay);\n  });\n});\n"]}