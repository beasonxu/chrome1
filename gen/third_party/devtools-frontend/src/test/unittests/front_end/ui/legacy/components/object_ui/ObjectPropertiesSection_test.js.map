{"version":3,"file":"ObjectPropertiesSection_test.js","sourceRoot":"","sources":["../../../../../../../../../../../../../third_party/devtools-frontend/src/test/unittests/front_end/ui/legacy/components/object_ui/ObjectPropertiesSection_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nconst {assert} = chai;\n\nimport * as SDK from '../../../../../../../front_end/core/sdk/sdk.js';\nimport * as ObjectUI from '../../../../../../../front_end/ui/legacy/components/object_ui/object_ui.js';\nimport * as UI from '../../../../../../../front_end/ui/legacy/legacy.js';\nimport * as Bindings from '../../../../../../../front_end/models/bindings/bindings.js';\nimport * as Root from '../../../../../../../front_end/core/root/root.js';\n\nimport {describeWithRealConnection, getExecutionContext} from '../../../../helpers/RealConnection.js';\nimport {someMutations} from '../../../../helpers/MutationHelpers.js';\nimport {assertNotNullOrUndefined} from '../../../../../../../front_end/core/platform/platform.js';\nimport {createTarget} from '../../../../helpers/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../../../helpers/MockConnection.js';\n\ndescribeWithRealConnection('ObjectPropertiesSection', () => {\n  async function setupTreeOutline(\n      code: string, accessorPropertiesOnly: boolean, generatePreview: boolean, nonIndexedPropertiesOnly?: boolean) {\n    const targetManager = SDK.TargetManager.TargetManager.instance();\n    const target = targetManager.mainTarget();\n    assertNotNullOrUndefined(target);\n    const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n    assertNotNullOrUndefined(runtimeModel);\n    const executionContext = await getExecutionContext(runtimeModel);\n    UI.Context.Context.instance().setFlavor(SDK.RuntimeModel.ExecutionContext, executionContext);\n\n    const {result} = await ObjectUI.JavaScriptREPL.JavaScriptREPL.evaluateAndBuildPreview(\n        code, false /* throwOnSideEffect */, true /* replMode */, 500 /* timeout */);\n    if (!(result && 'object' in result && result.object)) {\n      throw new Error('Cannot evaluate test object');\n    }\n    const {properties} =\n        await result.object.getAllProperties(accessorPropertiesOnly, generatePreview, nonIndexedPropertiesOnly);\n\n    assertNotNullOrUndefined(properties);\n    const treeOutline = new ObjectUI.ObjectPropertiesSection.ObjectPropertiesSectionsTreeOutline({readOnly: true});\n    ObjectUI.ObjectPropertiesSection.ObjectPropertyTreeElement.populateWithProperties(\n        treeOutline.rootElement(), properties, null, true /* skipProto */, false /* skipGettersAndSetters */,\n        result.object);\n\n    return treeOutline;\n  }\n\n  it('can reveal private accessor values', async () => {\n    const VALUE = '42';\n    const treeOutline = await setupTreeOutline(\n        `(() => {\n           class A {\n             get #bar() { return ${VALUE}; }\n           };\n           return new A();\n         })()`,\n        true, false);\n\n    const propertiesSection =\n        treeOutline.rootElement().firstChild() as ObjectUI.ObjectPropertiesSection.ObjectPropertyTreeElement;\n\n    propertiesSection.update();\n\n    const calculateValueButton =\n        propertiesSection.valueElement.querySelector('.object-value-calculate-value-button') as HTMLElement;\n    assertNotNullOrUndefined(calculateValueButton);\n    const mutations = someMutations(propertiesSection.listItemElement);\n    calculateValueButton.click();\n    await mutations;\n\n    assert.strictEqual(VALUE, propertiesSection.valueElement.innerHTML);\n  });\n\n  it('visually distinguishes important DOM properties for checkbox inputs', async () => {\n    Root.Runtime.experiments.enableForTest(Root.Runtime.ExperimentName.IMPORTANT_DOM_PROPERTIES);\n    const treeOutline = await setupTreeOutline(\n        `(() => {\n           const input = document.createElement('input');\n           input.type = 'checkbox';\n           return input;\n         })()`,\n        false, false);\n\n    const webidlProperties = treeOutline.rootElement().childrenListElement.querySelectorAll('[data-webidl=\"true\"]');\n    const expected = new Set<string>([\n      'checked: false',\n      'required: false',\n      'type: \"checkbox\"',\n      'value: \"on\"',\n    ]);\n    const notExpected = new Set<string>([\n      'accept: \"\"',\n      'files: FileList',\n      'multiple: false',\n    ]);\n\n    for (const element of webidlProperties) {\n      const textContent = element.querySelector('.name-and-value')?.textContent;\n      if (textContent && expected.has(textContent)) {\n        expected.delete(textContent);\n      }\n      if (textContent && notExpected.has(textContent)) {\n        notExpected.delete(textContent);\n      }\n    }\n\n    assert.strictEqual(expected.size, 0, 'Not all expected properties were found');\n    assert.strictEqual(notExpected.size, 3, 'Unexpected properties were found');\n  });\n\n  it('visually distinguishes important DOM properties for file inputs', async () => {\n    Root.Runtime.experiments.enableForTest(Root.Runtime.ExperimentName.IMPORTANT_DOM_PROPERTIES);\n    const treeOutline = await setupTreeOutline(\n        `(() => {\n           const input = document.createElement('input');\n           input.type = 'file';\n           return input;\n         })()`,\n        false, false);\n\n    const webidlProperties = treeOutline.rootElement().childrenListElement.querySelectorAll('[data-webidl=\"true\"]');\n    const notExpected = new Set<string>([\n      'checked: false',\n      'type: \"checkbox\"',\n      'value: \"on\"',\n    ]);\n    const expected = new Set<string>([\n      'accept: \"\"',\n      'files: FileList',\n      'multiple: false',\n      'required: false',\n    ]);\n\n    for (const element of webidlProperties) {\n      const textContent = element.querySelector('.name-and-value')?.textContent;\n      if (textContent && expected.has(textContent)) {\n        expected.delete(textContent);\n      }\n      if (textContent && notExpected.has(textContent)) {\n        notExpected.delete(textContent);\n      }\n    }\n\n    assert.strictEqual(expected.size, 0, 'Not all expected properties were found');\n    assert.strictEqual(notExpected.size, 3, 'Unexpected properties were found');\n  });\n\n  it('visually distinguishes important DOM properties for anchors', async () => {\n    Root.Runtime.experiments.enableForTest(Root.Runtime.ExperimentName.IMPORTANT_DOM_PROPERTIES);\n    const treeOutline = await setupTreeOutline(\n        `(() => {\n           const a = document.createElement('a');\n           a.href = 'https://www.google.com:1234/foo/bar/baz?hello=world#what';\n           const code = document.createElement('code');\n           code.innerHTML = 'hello world';\n           a.append(code);\n           return a;\n         })()`,\n        false, false);\n\n    const webidlProperties = treeOutline.rootElement().childrenListElement.querySelectorAll('[data-webidl=\"true\"]');\n    const expected = new Set<string>([\n      // https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-a-element\n      'text: \"hello world\"',\n      // https://html.spec.whatwg.org/multipage/links.html#htmlhyperlinkelementutils\n      'href: \"https://www.google.com:1234/foo/bar/baz?hello=world#what\"',\n      'origin: \"https://www.google.com:1234\"',\n      'protocol: \"https:\"',\n      'hostname: \"www.google.com\"',\n      'port: \"1234\"',\n      'pathname: \"/foo/bar/baz\"',\n      'search: \"?hello=world\"',\n      'hash: \"#what\"',\n    ]);\n\n    for (const element of webidlProperties) {\n      const textContent = element.querySelector('.name-and-value')?.textContent;\n      if (textContent && expected.has(textContent)) {\n        expected.delete(textContent);\n      }\n    }\n\n    assert.strictEqual(expected.size, 0, 'Not all expected properties were found');\n  });\n\n  it('visually distinguishes important DOM properties for the window object', async () => {\n    Root.Runtime.experiments.enableForTest(Root.Runtime.ExperimentName.IMPORTANT_DOM_PROPERTIES);\n    const treeOutline = await setupTreeOutline(\n        `(() => {\n           return window;\n         })()`,\n        false, false);\n\n    const webidlProperties = treeOutline.rootElement().childrenListElement.querySelectorAll('[data-webidl=\"true\"]');\n    const expected = new Set<string>([\n      'customElements: CustomElementRegistry',\n      'document: document',\n      'frames: Window',\n      'history: History',\n      'location: Location',\n      'navigator: Navigator',\n    ]);\n\n    for (const element of webidlProperties) {\n      const textContent = element.querySelector('.name-and-value')?.textContent;\n      if (textContent && expected.has(textContent)) {\n        expected.delete(textContent);\n      }\n    }\n\n    assert.strictEqual(expected.size, 0, 'Not all expected properties were found');\n  });\n});\n\ndescribeWithMockConnection('ObjectPropertiesSection', () => {\n  it('appends a memory icon for allowed remote object types', () => {\n    const subtypesForIcon = ['webassemblymemory', 'arraybuffer'];\n    for (const subtype of subtypesForIcon) {\n      const remoteObj = {\n        type: 'object',\n        subtype: subtype,\n      } as SDK.RemoteObject.RemoteObject;\n\n      const div = document.createElement('div');\n      assert.isFalse(div.hasChildNodes());\n      ObjectUI.ObjectPropertiesSection.ObjectPropertiesSection.appendMemoryIcon(div, remoteObj);\n      assert.isTrue(div.hasChildNodes());\n      const icon = div.getElementsByClassName('devtools-icon');\n      assert.isNotNull(icon);\n    }\n  });\n\n  it('skips appending a memory icon for other remote object types', () => {\n    const subtypesToSkip = ['dataview', 'typedarray'];\n    for (const subtype of subtypesToSkip) {\n      const remoteObj = {\n        type: 'object',\n        subtype: subtype,\n      } as SDK.RemoteObject.RemoteObject;\n\n      const div = document.createElement('div');\n      assert.isFalse(div.hasChildNodes());\n      ObjectUI.ObjectPropertiesSection.ObjectPropertiesSection.appendMemoryIcon(div, remoteObj);\n      assert.isFalse(div.hasChildNodes());\n    }\n  });\n\n  it('appends a memory icon for DWARF inspectable objects', () => {\n    const target = createTarget();\n    const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n    assertNotNullOrUndefined(debuggerModel);\n    const callFrame = {\n      debuggerModel,\n    } as SDK.DebuggerModel.CallFrame;\n    const valueNode = new Bindings.DebuggerLanguagePlugins.ValueNode(\n        callFrame, undefined, 'object', undefined, undefined, 2 /* inspectableAddress*/);\n\n    const div = document.createElement('div');\n    assert.isFalse(div.hasChildNodes());\n    ObjectUI.ObjectPropertiesSection.ObjectPropertiesSection.appendMemoryIcon(div, valueNode);\n    assert.isTrue(div.hasChildNodes());\n    const icon = div.getElementsByClassName('devtools-icon');\n    assert.isNotNull(icon);\n  });\n});\n"]}