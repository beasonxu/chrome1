{"version":3,"file":"NetworkItemView_test.js","sourceRoot":"","sources":["../../../../../../../../../../../third_party/devtools-frontend/src/test/unittests/front_end/panels/network/NetworkItemView_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Network from '../../../../../front_end/panels/network/network.js';\nimport {describeWithMockConnection} from '../../helpers/MockConnection.js';\n\nimport type * as Protocol from '../../../../../front_end/generated/protocol.js';\nimport * as SDK from '../../../../../front_end/core/sdk/sdk.js';\nimport type * as Platform from '../../../../../front_end/core/platform/platform.js';\nimport {renderElementIntoDOM} from '../../helpers/DOMHelpers.js';\nimport * as Root from '../../../../../front_end/core/root/root.js';\nimport * as Persistence from '../../../../../front_end/models/persistence/persistence.js';\nimport * as Bindings from '../../../../../front_end/models/bindings/bindings.js';\nimport {createTarget, deinitializeGlobalVars} from '../../helpers/EnvironmentHelpers.js';\nimport * as Workspace from '../../../../../front_end/models/workspace/workspace.js';\nimport * as NetworkForward from '../../../../../front_end/panels/network/forward/forward.js';\n\nfunction setUpEnvironment() {\n  createTarget();\n  const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n  const targetManager = SDK.TargetManager.TargetManager.instance();\n  const debuggerWorkspaceBinding =\n      Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance({forceNew: true, targetManager, workspace});\n  const breakpointManager = Bindings.BreakpointManager.BreakpointManager.instance(\n      {forceNew: true, targetManager, workspace, debuggerWorkspaceBinding});\n  Persistence.Persistence.PersistenceImpl.instance({forceNew: true, workspace, breakpointManager});\n  Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance({forceNew: true, workspace});\n}\n\nfunction renderNetworkItemView(): Network.NetworkItemView.NetworkItemView {\n  const request = SDK.NetworkRequest.NetworkRequest.create(\n      'requestId' as Protocol.Network.RequestId, 'https://www.example.com/foo.html' as Platform.DevToolsPath.UrlString,\n      '' as Platform.DevToolsPath.UrlString, null, null, null);\n  const networkItemView =\n      new Network.NetworkItemView.NetworkItemView(request, {} as Network.NetworkTimeCalculator.NetworkTimeCalculator);\n  const div = document.createElement('div');\n  renderElementIntoDOM(div);\n  networkItemView.markAsRoot();\n  networkItemView.show(div);\n  return networkItemView;\n}\n\ndescribeWithMockConnection('NetworkItemView', () => {\n  beforeEach(async () => {\n    Root.Runtime.experiments.register(Root.Runtime.ExperimentName.HEADER_OVERRIDES, '');\n    await setUpEnvironment();\n  });\n\n  afterEach(async () => {\n    await deinitializeGlobalVars();\n  });\n\n  it('reveals header in legacy RequestHeadersView if header overrides experiment is not enabled', async () => {\n    const networkItemView = renderNetworkItemView();\n    const headersView = networkItemView.getHeadersView();\n    const headersViewSpy = sinon.spy(headersView, 'revealHeader');\n    const headersViewComponent = networkItemView.getHeadersViewComponent();\n    const headersViewComponentSpy = sinon.spy(headersViewComponent, 'revealHeader');\n\n    assert.isTrue(headersViewSpy.notCalled);\n    assert.isTrue(headersViewComponentSpy.notCalled);\n\n    networkItemView.revealHeader(NetworkForward.UIRequestLocation.UIHeaderSection.Response, 'headerName');\n\n    assert.isTrue(headersViewSpy.calledWith(NetworkForward.UIRequestLocation.UIHeaderSection.Response, 'headerName'));\n    assert.isTrue(headersViewComponentSpy.notCalled);\n    networkItemView.detach();\n  });\n\n  it('reveals header in new RequestHeadersView if header overrides experiment is enabled', async () => {\n    Root.Runtime.experiments.enableForTest(Root.Runtime.ExperimentName.HEADER_OVERRIDES);\n    const networkItemView = renderNetworkItemView();\n    const headersView = networkItemView.getHeadersView();\n    const headersViewSpy = sinon.spy(headersView, 'revealHeader');\n    const headersViewComponent = networkItemView.getHeadersViewComponent();\n    const headersViewComponentSpy = sinon.spy(headersViewComponent, 'revealHeader');\n\n    assert.isTrue(headersViewSpy.notCalled);\n    assert.isTrue(headersViewComponentSpy.notCalled);\n\n    networkItemView.revealHeader(NetworkForward.UIRequestLocation.UIHeaderSection.Response, 'headerName');\n\n    assert.isTrue(headersViewSpy.notCalled);\n    assert.isTrue(\n        headersViewComponentSpy.calledWith(NetworkForward.UIRequestLocation.UIHeaderSection.Response, 'headerName'));\n    networkItemView.detach();\n  });\n});\n"]}