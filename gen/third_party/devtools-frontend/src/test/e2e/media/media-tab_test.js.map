{"version":3,"file":"media-tab_test.js","sourceRoot":"","sources":["../../../../../../../../../third_party/devtools-frontend/src/test/e2e/media/media-tab_test.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;AAE7B,+BAA4B;AAE5B,sDAAwE;AACxE,0EAA8D;AAC9D,kEAKqC;AACrC,wEAAqE;AAErE,IAAA,8BAAQ,EAAC,WAAW,EAAE,GAAG,EAAE;IACzB,IAAA,wBAAE,EAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;QACjD,MAAM,IAAA,2CAAqB,EAAC,OAAO,CAAC,CAAC;QACrC,MAAM,IAAA,gCAAa,EAAC,YAAY,CAAC,CAAC;QAClC,MAAM,SAAS,GAAG,MAAM,IAAA,sCAAmB,GAAE,CAAC;QAC9C,aAAM,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,IAAA,wBAAE,EAAC,kDAAkD,EAAE,KAAK,IAAI,EAAE;QAChE,MAAM,IAAA,2CAAqB,EAAC,OAAO,CAAC,CAAC;QACrC,MAAM,IAAA,wBAAY,EAAC,yBAAyB,CAAC,CAAC;QAC9C,MAAM,IAAA,2CAAwB,EAAC,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,IAAA,wBAAE,EAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;QACvD,MAAM,IAAA,2CAAqB,EAAC,OAAO,CAAC,CAAC;QACrC,MAAM,IAAA,wBAAY,EAAC,oBAAoB,CAAC,CAAC;QACzC,MAAM,EAAC,MAAM,EAAC,GAAG,IAAA,8BAAkB,GAAE,CAAC;QACtC,MAAM,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE;YACzB,MAAM,YAAY,GAAG,QAAQ,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAqB,CAAC;YAChF,KAAK,YAAY,CAAC,IAAI,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,IAAA,kCAAe,EAAC,CAAC,CAAC,CAAC;QACxC,MAAM,YAAY,GAAG,MAAM,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;QACpE,aAAM,CAAC,OAAO,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {getBrowserAndPages, goToResource} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {\n  getPlayerButtonText,\n  getPlayerErrors,\n  playMediaFile,\n  waitForPlayerButtonTexts,\n} from '../helpers/media-helpers.js';\nimport {openPanelViaMoreTools} from '../helpers/settings-helpers.js';\n\ndescribe('Media Tab', () => {\n  it('ensures video playback adds entry', async () => {\n    await openPanelViaMoreTools('Media');\n    await playMediaFile('fisch.webm');\n    const entryName = await getPlayerButtonText();\n    assert.strictEqual(entryName.length, 11);\n  });\n\n  it('ensures video playback adds entry for web worker', async () => {\n    await openPanelViaMoreTools('Media');\n    await goToResource('media/codec_worker.html');\n    await waitForPlayerButtonTexts(4);\n  });\n\n  it('ensures that errors are rendered nicely', async () => {\n    await openPanelViaMoreTools('Media');\n    await goToResource('media/corrupt.webm');\n    const {target} = getBrowserAndPages();\n    await target.evaluate(() => {\n      const videoElement = document.getElementsByName('media')[0] as HTMLVideoElement;\n      void videoElement.play();\n    });\n    const errors = await getPlayerErrors(2);\n    const errorContent = await errors[1].evaluate(el => el.textContent);\n    assert.include(errorContent, 'PipelineStatus');\n  });\n});\n"]}