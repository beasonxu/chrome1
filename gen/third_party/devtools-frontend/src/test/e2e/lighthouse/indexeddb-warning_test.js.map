{"version":3,"file":"indexeddb-warning_test.js","sourceRoot":"","sources":["../../../../../../../../../third_party/devtools-frontend/src/test/e2e/lighthouse/indexeddb-warning_test.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;AAE7B,+BAA4B;AAE5B,sDAA+C;AAC/C,0EAA8D;AAC9D,4EAA6G;AAE7G,IAAA,8BAAQ,EAAC,mBAAmB,EAAE,KAAK;IACjC,UAAU,CAAC,KAAK;QACd,kGAAkG;QAClG,MAAM,IAAA,qCAAa,GAAE,CAAC;IACxB,CAAC,CAAC,CAAC;IAEH,IAAA,wBAAE,EAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;QACnE,MAAM,IAAA,+CAAuB,EAAC,YAAY,CAAC,CAAC;QAE5C,IAAI,WAAW,GAAG,MAAM,IAAA,mBAAO,EAAC,iCAAiC,CAAC,CAAC;QACnE,MAAM,YAAY,GAAG,MAAM,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;QAClF,aAAM,CAAC,WAAW,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;QAErC,MAAM,IAAA,+CAAuB,EAAC,oCAAoC,CAAC,CAAC;QACpE,0CAA0C;QAC1C,MAAM,IAAA,2CAAmB,EAAC,KAAK,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QAE9C,WAAW,GAAG,MAAM,IAAA,mBAAO,EAAC,uCAAuC,CAAC,CAAC;QACrE,MAAM,QAAQ,GACV,mLAAmL,CAAC;QACxL,MAAM,YAAY,GAAG,MAAM,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;QAClF,aAAM,CAAC,WAAW,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {waitFor} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {clearSiteData, navigateToLighthouseTab, waitForStorageUsage} from '../helpers/lighthouse-helpers.js';\n\ndescribe('IndexedDB warning', async function() {\n  beforeEach(async function() {\n    // e2e tests in application/ create websql and indexeddb items and don't clean up after themselves\n    await clearSiteData();\n  });\n\n  it('displays when important data may affect performance', async () => {\n    await navigateToLighthouseTab('empty.html');\n\n    let warningElem = await waitFor('.lighthouse-warning-text.hidden');\n    const warningText1 = await warningElem.evaluate(node => node.textContent?.trim());\n    assert.strictEqual(warningText1, '');\n\n    await navigateToLighthouseTab('lighthouse/lighthouse-storage.html');\n    // Wait for storage state to lazily update\n    await waitForStorageUsage(quota => quota > 0);\n\n    warningElem = await waitFor('.lighthouse-warning-text:not(.hidden)');\n    const expected =\n        'There may be stored data affecting loading performance in this location: IndexedDB. Audit this page in an incognito window to prevent those resources from affecting your scores.';\n    const warningText2 = await warningElem.evaluate(node => node.textContent?.trim());\n    assert.strictEqual(warningText2, expected);\n  });\n});\n"]}