{"version":3,"file":"restart-frame_test.js","sourceRoot":"","sources":["../../../../../../../../../third_party/devtools-frontend/src/test/e2e/sources/restart-frame_test.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;AAE7B,+BAA4B;AAE5B,sDAMgC;AAChC,0EAA8D;AAC9D,sEAIuC;AAEvC,IAAA,8BAAQ,EAAC,aAAa,EAAE,GAAG,EAAE;IAC3B,IAAA,wBAAE,EAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;QAC9C,MAAM,EAAC,MAAM,EAAC,GAAG,IAAA,8BAAkB,GAAE,CAAC;QACtC,MAAM,IAAA,gBAAI,EAAC,kBAAkB,EAAE,KAAK,IAAI,EAAE;YACxC,MAAM,IAAA,wBAAY,EAAC,4BAA4B,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QAEH,MAAM,IAAA,gBAAI,EAAC,uDAAuD,EAAE,KAAK,IAAI,EAAE;YAC7E,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAC1B,MAAM,IAAA,mBAAO,EAAC,6CAAwB,CAAC,CAAC;YAExC,MAAM,cAAc,GAAG,MAAM,IAAA,sCAAiB,GAAE,CAAC;YACjD,aAAM,CAAC,eAAe,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;QAC5E,CAAC,CAAC,CAAC;QAEH,MAAM,IAAA,gBAAI,EAAC,qBAAqB,EAAE,KAAK,IAAI,EAAE;YAC3C,MAAM,IAAA,uCAAkB,EAAC,qCAAqC,EAAE,eAAe,CAAC,CAAC,CAAE,4BAA4B;QACjH,CAAC,CAAC,CAAC;QAEH,MAAM,IAAA,gBAAI,EAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;YAC1D,MAAM,IAAA,2BAAe,EAAC,KAAK,IAAI,EAAE;gBAC/B,MAAM,cAAc,GAAG,MAAM,IAAA,sCAAiB,GAAE,CAAC;gBACjD,OAAO,cAAc,CAAC,CAAC,CAAC,KAAK,KAAK,IAAI,cAAc,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC;YACpE,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {\n  getBrowserAndPages,\n  goToResource,\n  step,\n  waitFor,\n  waitForFunction,\n} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {\n  clickOnContextMenu,\n  getCallFrameNames,\n  PAUSE_INDICATOR_SELECTOR,\n} from '../helpers/sources-helpers.js';\n\ndescribe('Sources Tab', () => {\n  it('can restart a call stack frame', async () => {\n    const {target} = getBrowserAndPages();\n    await step('navigate to page', async () => {\n      await goToResource('sources/restart-frame.html');\n    });\n\n    await step('wait for the page to stop on the \"debugger\" statement', async () => {\n      target.evaluate('foo();');\n      await waitFor(PAUSE_INDICATOR_SELECTOR);\n\n      const callFrameNames = await getCallFrameNames();\n      assert.deepStrictEqual(callFrameNames.slice(0, 3), ['baz', 'bar', 'foo']);\n    });\n\n    await step('restart frame \"bar\"', async () => {\n      await clickOnContextMenu('.call-frame-item[aria-posinset=\"2\"]', 'Restart frame');  // Aria indices are 1-based.\n    });\n\n    await step('wait for the page to stop in \"bar\"', async () => {\n      await waitForFunction(async () => {\n        const callFrameNames = await getCallFrameNames();\n        return callFrameNames[0] === 'bar' && callFrameNames[1] === 'foo';\n      });\n    });\n  });\n});\n"]}