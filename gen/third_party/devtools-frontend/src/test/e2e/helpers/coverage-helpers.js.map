{"version":3,"file":"coverage-helpers.js","sourceRoot":"","sources":["../../../../../../../../../third_party/devtools-frontend/src/test/e2e/helpers/coverage-helpers.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;;AAE7B,sDAA8F;AAE9F,+DAA4D;AAE5D,MAAM,0BAA0B,GAAG,mEAAmE,CAAC;AACvG,MAAM,yBAAyB,GAAG,mEAAmE,CAAC;AAE/F,KAAK,UAAU,6BAA6B;IACjD,kCAAkC;IAClC,MAAM,IAAA,2CAAqB,EAAC,UAAU,CAAC,CAAC;IACxC,MAAM,IAAA,mBAAO,EAAC,kCAAkC,CAAC,CAAC;IAClD,MAAM,IAAA,mBAAO,EAAC,iCAAiC,CAAC,CAAC;AACnD,CAAC;AALD,sEAKC;AAEM,KAAK,UAAU,0BAA0B;IAC9C,MAAM,IAAA,wBAAY,EAAC,uBAAuB,CAAC,CAAC;AAC9C,CAAC;AAFD,gEAEC;AAEM,KAAK,UAAU,0BAA0B;IAC9C,MAAM,IAAA,mBAAO,EAAC,0BAA0B,CAAC,CAAC;IAC1C,MAAM,IAAA,iBAAK,EAAC,0BAA0B,CAAC,CAAC;IACxC,MAAM,IAAA,uBAAW,EAAC,iCAAiC,CAAC,CAAC;AACvD,CAAC;AAJD,gEAIC;AAEM,KAAK,UAAU,yBAAyB;IAC7C,MAAM,IAAA,iBAAK,EAAC,yBAAyB,CAAC,CAAC;IACvC,MAAM,IAAA,uBAAW,EAAC,0CAA0C,CAAC,CAAC;AAChE,CAAC;AAHD,8DAGC;AAEM,KAAK,UAAU,oBAAoB;IACxC,MAAM,IAAA,iBAAK,EAAC,gCAAgC,CAAC,CAAC;IAC9C,MAAM,IAAA,mBAAO,EAAC,iCAAiC,CAAC,CAAC;AACnD,CAAC;AAHD,oDAGC;AAEM,KAAK,UAAU,kBAAkB;IACtC,MAAM,cAAc,GAAG,MAAM,IAAA,mBAAO,EAAC,0CAA0C,CAAC,CAAC;IACjF,OAAO,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAE,IAAoB,CAAC,SAAS,CAAC,CAAC;AAC1E,CAAC;AAHD,gDAGC;AAEM,KAAK,UAAU,eAAe,CAAC,aAAqB;IACzD,MAAM,IAAI,GAAG,MAAM,IAAA,uBAAW,EAAC,2BAA2B,EAAE,aAAa,EAAE,MAAM,IAAA,mBAAO,EAAC,mBAAmB,CAAC,CAAC,CAAC;IAC/G,OAAO,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAU,EAAE,EAAE,CAAC,CAAC;QACf,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,WAAW;QAChD,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,cAAc,CAAC,EAAE,WAAW;QACnD,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,yBAAyB,CAAC,EAAE,WAAW;KAChE,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC;AAPD,0CAOC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {click, goToResource, waitFor, waitForMany, waitForNone} from '../../shared/helper.js';\n\nimport {openPanelViaMoreTools} from './settings-helpers.js';\n\nconst START_INSTRUMENTING_BUTTON = 'button[aria-label=\"Start instrumenting coverage and reload page\"]';\nconst STOP_INSTRUMENTING_BUTTON = 'button[aria-label=\"Stop instrumenting coverage and show results\"]';\n\nexport async function waitForTheCoveragePanelToLoad() {\n  // Open panel and wait for content\n  await openPanelViaMoreTools('Coverage');\n  await waitFor('div[aria-label=\"Coverage panel\"]');\n  await waitFor('.coverage-results .landing-page');\n}\n\nexport async function navigateToCoverageTestSite() {\n  await goToResource('coverage/default.html');\n}\n\nexport async function startInstrumentingCoverage() {\n  await waitFor(START_INSTRUMENTING_BUTTON);\n  await click(START_INSTRUMENTING_BUTTON);\n  await waitForNone('.coverage-results .landing-page');\n}\n\nexport async function stopInstrumentingCoverage() {\n  await click(STOP_INSTRUMENTING_BUTTON);\n  await waitForNone('button[aria-label=\"Clear all\"][disabled]');\n}\n\nexport async function clearCoverageContent() {\n  await click('button[aria-label=\"Clear all\"]');\n  await waitFor('.coverage-results .landing-page');\n}\n\nexport async function getMessageContents() {\n  const messageElement = await waitFor('.coverage-results .landing-page .message');\n  return messageElement.evaluate(node => (node as HTMLElement).innerText);\n}\n\nexport async function getCoverageData(expectedCount: number) {\n  const rows = await waitForMany('.data-grid-data-grid-node', expectedCount, await waitFor('.coverage-results'));\n  return Promise.all(rows.map(r => r.evaluate((r: Element) => ({\n                                                url: r.querySelector('.url-column')?.textContent,\n                                                total: r.querySelector('.size-column')?.textContent,\n                                                unused: r.querySelector('.unusedSize-column span')?.textContent,\n                                              }))));\n}\n"]}