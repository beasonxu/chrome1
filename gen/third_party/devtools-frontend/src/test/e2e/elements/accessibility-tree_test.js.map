{"version":3,"file":"accessibility-tree_test.js","sourceRoot":"","sources":["../../../../../../../../../third_party/devtools-frontend/src/test/e2e/elements/accessibility-tree_test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {\n  assertNotNullOrUndefined,\n  click,\n  enableExperiment,\n  getBrowserAndPages,\n  goToResource,\n  waitForElementWithTextContent,\n  waitForNoElementsWithTextContent,\n} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {toggleAccessibilityTree} from '../helpers/elements-helpers.js';\n\ndescribe('Accessibility Tree in the Elements Tab', async function() {\n  it('displays the fuller accessibility tree', async () => {\n    await enableExperiment('fullAccessibilityTree');\n    await enableExperiment('protocolMonitor');\n    await goToResource('elements/accessibility-simple-page.html');\n    await toggleAccessibilityTree();\n    await waitForElementWithTextContent('heading\\xa0\"Title\"');\n    await waitForElementWithTextContent('link\\xa0\"cats\" focusable:\\xa0true');\n  });\n\n  it('allows navigating iframes', async () => {\n    await enableExperiment('fullAccessibilityTree');\n    await goToResource('elements/accessibility-iframe-page.html');\n    await toggleAccessibilityTree();\n    const iframeDoc = await waitForElementWithTextContent(\n        'RootWebArea\\xa0\"Simple page with aria labeled element\" focusable:\\xa0true');\n    const arrowIconContainer =\n        await iframeDoc.evaluateHandle(node => node.parentElementOrShadowHost().parentElement.parentElement);\n    assertNotNullOrUndefined(arrowIconContainer);\n    await click('.arrow-icon', {root: arrowIconContainer});\n    await waitForElementWithTextContent('link\\xa0\"cats\" focusable:\\xa0true');\n  });\n\n  it('listens for text changes to DOM and redraws the tree', async () => {\n    await enableExperiment('fullAccessibilityTree');\n    await goToResource('elements/accessibility-simple-page.html');\n    await toggleAccessibilityTree();\n    const {target} = getBrowserAndPages();\n    await waitForElementWithTextContent('link\\xa0\"cats\" focusable:\\xa0true');\n    const link = await target.waitForSelector('aria/cats [role=\"link\"]');\n    assertNotNullOrUndefined(link);\n    await link.evaluate(node => {\n      (node as HTMLElement).innerText = 'dogs';\n    });\n    await waitForElementWithTextContent('link\\xa0\"dogs\" focusable:\\xa0true');\n  });\n\n  it('listens for changes to properties and redraws tree', async () => {\n    await enableExperiment('fullAccessibilityTree');\n    await goToResource('elements/accessibility-simple-page.html');\n    await toggleAccessibilityTree();\n    const {target} = getBrowserAndPages();\n    const link = await target.waitForSelector('aria/cats [role=\"link\"]');\n    assertNotNullOrUndefined(link);\n    await waitForElementWithTextContent('link\\xa0\"cats\" focusable:\\xa0true');\n    await link.evaluate(node => node.setAttribute('aria-label', 'birds'));\n    await waitForElementWithTextContent('link\\xa0\"birds\" focusable:\\xa0true');\n  });\n\n  it('listen for removed nodes and redraw tree', async () => {\n    await enableExperiment('fullAccessibilityTree');\n    await goToResource('elements/accessibility-simple-page.html');\n    await toggleAccessibilityTree();\n    const {target} = getBrowserAndPages();\n    const link = await target.waitForSelector('aria/cats [role=\"link\"]');\n    assertNotNullOrUndefined(link);\n    await waitForElementWithTextContent('link\\xa0\"cats\" focusable:\\xa0true');\n    await link.evaluate(node => node.remove());\n    await waitForNoElementsWithTextContent('link\\xa0\"cats\" focusable:\\xa0true');\n  });\n});\n"]}