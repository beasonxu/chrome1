{"version":3,"file":"coverage_test.js","sourceRoot":"","sources":["../../../../../../../../../third_party/devtools-frontend/src/test/e2e/coverage/coverage_test.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;AAE7B,+BAA4B;AAE5B,sDAKgC;AAChC,0EAA8D;AAC9D,wEAOwC;AAExC,IAAA,8BAAQ,EAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;IACxC,IAAA,wBAAE,EAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;QAC/B,MAAM,IAAA,mDAA6B,GAAE,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,IAAA,wBAAE,EAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;QACzD,MAAM,IAAA,mDAA6B,GAAE,CAAC;QACtC,MAAM,IAAA,gDAA0B,GAAE,CAAC;QACnC,MAAM,IAAA,gDAA0B,GAAE,CAAC;QACnC,MAAM,IAAA,+CAAyB,GAAE,CAAC;QAClC,MAAM,IAAA,0CAAoB,GAAE,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,IAAA,wBAAE,EAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;QACnD,MAAM,EAAC,MAAM,EAAC,GAAG,IAAA,8BAAkB,GAAE,CAAC;QAEtC,MAAM,IAAA,wBAAY,EAAC,mCAAmC,CAAC,CAAC;QACxD,MAAM,IAAA,mDAA6B,GAAE,CAAC;QACtC,MAAM,IAAA,gDAA0B,GAAE,CAAC;QACnC,MAAM,UAAU,GAAG,qBAAqB,IAAA,6BAAiB,GAAE,8BAA8B,CAAC;QAC1F,aAAM,CAAC,SAAS,CAAC,MAAM,IAAA,qCAAe,EAAC,CAAC,CAAC,EAAE;YACzC;gBACE,OAAO,EAAE,KAAK;gBACd,QAAQ,EAAE,KAAK;gBACf,KAAK,EAAE,GAAG,UAAU,2BAA2B;aAChD;YACD;gBACE,OAAO,EAAE,KAAK;gBACd,QAAQ,EAAE,KAAK;gBACf,KAAK,EAAE,GAAG,UAAU,yBAAyB;aAC9C;YACD;gBACE,OAAO,EAAE,KAAK;gBACd,QAAQ,EAAE,KAAK;gBACf,KAAK,EAAE,GAAG,UAAU,aAAa;aAClC;YACD;gBACE,OAAO,EAAE,KAAK;gBACd,QAAQ,EAAE,KAAK;gBACf,KAAK,EAAE,GAAG,UAAU,WAAW;aAChC;YACD;gBACE,OAAO,EAAE,GAAG;gBACZ,QAAQ,EAAE,GAAG;gBACb,KAAK,EAAE,GAAG,UAAU,YAAY;aACjC;SACF,CAAC,CAAC;QAEH,MAAM,MAAM,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC;QAE5C,aAAM,CAAC,WAAW,CAAC,MAAM,IAAA,qCAAe,EAAC,CAAC,CAAC,EAAE;YAC3C,OAAO,EAAE,GAAG;YACZ,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE,GAAG,UAAU,oBAAoB;SACzC,CAAC,CAAC;QAEH,MAAM,MAAM,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;QAEzC,MAAM,IAAA,yCAA6B,EAAC,GAAG,UAAU,sCAAsC,CAAC,CAAC;QACzF,aAAM,CAAC,WAAW,CAAC,MAAM,IAAA,qCAAe,EAAC,CAAC,CAAC,EAAE;YAC3C,OAAO,EAAE,KAAK;YACd,QAAQ,EAAE,KAAK;YACf,KAAK,EAAE,GAAG,UAAU,yBAAyB;SAC9C,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assert} from 'chai';\n\nimport {\n  getBrowserAndPages,\n  getTestServerPort,\n  goToResource,\n  waitForElementWithTextContent,\n} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {\n  clearCoverageContent,\n  getCoverageData,\n  navigateToCoverageTestSite,\n  startInstrumentingCoverage,\n  stopInstrumentingCoverage,\n  waitForTheCoveragePanelToLoad,\n} from '../helpers/coverage-helpers.js';\n\ndescribe('The Coverage Panel', async () => {\n  it('Loads correctly', async () => {\n    await waitForTheCoveragePanelToLoad();\n  });\n\n  it('Can start and stop instrumenting coverage', async () => {\n    await waitForTheCoveragePanelToLoad();\n    await navigateToCoverageTestSite();\n    await startInstrumentingCoverage();\n    await stopInstrumentingCoverage();\n    await clearCoverageContent();\n  });\n\n  it('Shows completly uncovered css files', async () => {\n    const {target} = getBrowserAndPages();\n\n    await goToResource('coverage/unused-css-coverage.html');\n    await waitForTheCoveragePanelToLoad();\n    await startInstrumentingCoverage();\n    const URL_PREFIX = `https://localhost:${getTestServerPort()}/test/e2e/resources/coverage`;\n    assert.deepEqual(await getCoverageData(5), [\n      {\n        'total': '283',\n        'unused': '276',\n        'url': `${URL_PREFIX}/unused-css-coverage.html`,\n      },\n      {\n        'total': '198',\n        'unused': '198',\n        'url': `${URL_PREFIX}/not-initially-used.css`,\n      },\n      {\n        'total': '196',\n        'unused': '196',\n        'url': `${URL_PREFIX}/unused.css`,\n      },\n      {\n        'total': '198',\n        'unused': '174',\n        'url': `${URL_PREFIX}/used.css`,\n      },\n      {\n        'total': '0',\n        'unused': '0',\n        'url': `${URL_PREFIX}/empty.css`,\n      },\n    ]);\n\n    await target.evaluate('appendStylesheet()');\n\n    assert.deepInclude(await getCoverageData(6), {\n      'total': '0',\n      'unused': '0',\n      'url': `${URL_PREFIX}/lazily-loaded.css`,\n    });\n\n    await target.evaluate('appendElement()');\n\n    await waitForElementWithTextContent(`${URL_PREFIX}/not-initially-used.cssCSS198198100%`);\n    assert.deepInclude(await getCoverageData(6), {\n      'total': '198',\n      'unused': '198',\n      'url': `${URL_PREFIX}/not-initially-used.css`,\n    });\n  });\n});\n"]}