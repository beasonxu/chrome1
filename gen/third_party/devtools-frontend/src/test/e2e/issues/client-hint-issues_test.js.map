{"version":3,"file":"client-hint-issues_test.js","sourceRoot":"","sources":["../../../../../../../../../third_party/devtools-frontend/src/test/e2e/issues/client-hint-issues_test.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;;AAE7B,sDAA8E;AAC9E,0EAA8D;AAC9D,oEAOsC;AAEtC,IAAA,8BAAQ,EAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;IAC7C,IAAA,wBAAE,EAAC,oFAAoF,EAAE,KAAK,IAAI,EAAE;QAClG,MAAM,IAAA,wBAAY,EAAC,wEAAwE,CAAC,CAAC;QAC7F,MAAM,IAAA,uCAAmB,GAAE,CAAC;QAC5B,MAAM,IAAA,+BAAW,GAAE,CAAC;QACpB,MAAM,YAAY,GAAG,MAAM,IAAA,mCAAe,EAAC,+CAA+C,CAAC,CAAC;QAC5F,IAAA,oCAAwB,EAAC,YAAY,CAAC,CAAC;QACvC,MAAM,OAAO,GAAG,MAAM,IAAA,uCAAmB,EAAC,WAAW,EAAE,YAAY,EAAE,0BAA0B,CAAC,CAAC;QACjG,MAAM,IAAA,mDAA+B,EAAC,OAAO,CAAC,CAAC;QAC/C,MAAM,iBAAiB,GAAG;YACxB,CAAC,mEAAmE,CAAC;YACrE,CAAC,mEAAmE,CAAC;SACtE,CAAC;QACF,MAAM,IAAA,2DAAuC,EAAC,OAAO,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;IACpF,CAAC,CAAC,CAAC;IAEH,IAAA,wBAAE,EAAC,kFAAkF,EAAE,KAAK,IAAI,EAAE;QAChG,MAAM,IAAA,wBAAY,EAAC,8DAA8D,CAAC,CAAC;QACnF,MAAM,IAAA,uCAAmB,GAAE,CAAC;QAC5B,MAAM,IAAA,+BAAW,GAAE,CAAC;QACpB,MAAM,YAAY,GAAG,MAAM,IAAA,mCAAe,EAAC,6CAA6C,CAAC,CAAC;QAC1F,IAAA,oCAAwB,EAAC,YAAY,CAAC,CAAC;QACvC,MAAM,OAAO,GAAG,MAAM,IAAA,uCAAmB,EAAC,UAAU,EAAE,YAAY,EAAE,0BAA0B,CAAC,CAAC;QAChG,MAAM,IAAA,mDAA+B,EAAC,OAAO,CAAC,CAAC;QAC/C,MAAM,iBAAiB,GAAG;YACxB,CAAC,yDAAyD,CAAC;SAC5D,CAAC;QACF,MAAM,IAAA,2DAAuC,EAAC,OAAO,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;IACpF,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assertNotNullOrUndefined, goToResource} from '../../shared/helper.js';\nimport {describe, it} from '../../shared/mocha-extensions.js';\nimport {\n  ensureResourceSectionIsExpanded,\n  expandIssue,\n  getIssueByTitle,\n  getResourcesElement,\n  navigateToIssuesTab,\n  waitForTableFromResourceSectionContents,\n} from '../helpers/issues-helpers.js';\n\ndescribe('Client Hint issues test', async () => {\n  it('should display issue when Client Hints are used with invalid origin for DelegateCH', async () => {\n    await goToResource('issues/client-hint-issue-DelegateCH-MetaTagAllowListInvalidOrigin.html');\n    await navigateToIssuesTab();\n    await expandIssue();\n    const issueElement = await getIssueByTitle('Client Hint meta tag contained invalid origin');\n    assertNotNullOrUndefined(issueElement);\n    const section = await getResourcesElement('2 sources', issueElement, '.affected-resource-label');\n    await ensureResourceSectionIsExpanded(section);\n    const expectedTableRows = [\n      ['client-hint-issue-DelegateCH-MetaTagAllowListInvalidOrigin.html:1'],\n      ['client-hint-issue-DelegateCH-MetaTagAllowListInvalidOrigin.html:4'],\n    ];\n    await waitForTableFromResourceSectionContents(section.content, expectedTableRows);\n  });\n\n  it('should display issue when Client Hints are modified by javascript for DelegateCH', async () => {\n    await goToResource('issues/client-hint-issue-DelegateCH-MetaTagModifiedHTML.html');\n    await navigateToIssuesTab();\n    await expandIssue();\n    const issueElement = await getIssueByTitle('Client Hint meta tag modified by javascript');\n    assertNotNullOrUndefined(issueElement);\n    const section = await getResourcesElement('1 source', issueElement, '.affected-resource-label');\n    await ensureResourceSectionIsExpanded(section);\n    const expectedTableRows = [\n      ['client-hint-issue-DelegateCH-MetaTagModifiedHTML.html:7'],\n    ];\n    await waitForTableFromResourceSectionContents(section.content, expectedTableRows);\n  });\n});\n"]}