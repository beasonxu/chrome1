import*as e from"../../../core/common/common.js";import*as t from"../../../core/i18n/i18n.js";import*as n from"../../../ui/components/helpers/helpers.js";import*as o from"../../../ui/components/icon_button/icon_button.js";import*as s from"../../../ui/legacy/legacy.js";import*as i from"../../../ui/lit-html/lit-html.js";const a=new CSSStyleSheet;a.replaceSync(".hide-issues-menu-btn{position:relative;display:flex;background-color:transparent;flex:none;align-items:center;justify-content:center;padding:1px 4px;overflow:hidden;border-radius:0;border:none;--icon-color:var(--color-text-primary);opacity:50%}.hide-issues-menu-btn:hover{opacity:100%}\n/*# sourceURL=./hideIssuesMenu.css */\n");const m={tooltipTitle:"Hide issues"},r=t.i18n.registerUIStrings("panels/issues/components/HideIssuesMenu.ts",m),c=t.i18n.getLocalizedString.bind(void 0,r);class l extends HTMLElement{static litTagName=i.literal`devtools-hide-issues-menu`;#e=this.attachShadow({mode:"open"});#t=e.UIString.LocalizedEmptyString;#n=()=>{};set data(e){this.#t=e.menuItemLabel,this.#n=e.menuItemAction,this.#o()}connectedCallback(){this.#e.adoptedStyleSheets=[a]}onMenuOpen(e){e.stopPropagation();const t=new s.ContextMenu.ContextMenu(e,{useSoftMenu:!0,onSoftMenuClosed:()=>{this.classList.toggle("has-context-menu-opened",!1)}});t.headerSection().appendItem(this.#t,(()=>this.#n())),t.show(),this.classList.toggle("has-context-menu-opened",!0)}#o(){i.render(i.html` <button class="hide-issues-menu-btn" @click="${this.onMenuOpen.bind(this)}" title="${c(m.tooltipTitle)}"> <${o.Icon.Icon.litTagName} .data="${{color:"",iconName:"three_dots_menu_icon",height:"14px",width:"4px"}}"> </${o.Icon.Icon.litTagName}> </button> `,this.#e,{host:this})}}n.CustomElements.defineComponent("devtools-hide-issues-menu",l);var u=Object.freeze({__proto__:null,HideIssuesMenu:l});export{u as HideIssuesMenu};
