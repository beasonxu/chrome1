import*as e from"../../../core/sdk/sdk.js";import*as t from"../../lit-html/lit-html.js";import*as r from"../helpers/helpers.js";const n=new CSSStyleSheet;n.replaceSync(".link{color:var(--color-link);text-decoration:underline;cursor:pointer;padding:2px 0}\n/*# sourceURL=chromeLink.css */\n");class s extends HTMLElement{static litTagName=t.literal`devtools-chrome-link`;#e=this.attachShadow({mode:"open"});#t=this.#r.bind(this);#n="";connectedCallback(){this.#e.adoptedStyleSheets=[n],r.ScheduledRender.scheduleRender(this,this.#t)}set href(e){if(!e.startsWith("chrome://"))throw new Error("ChromeLink href needs to start with 'chrome://'");this.#n=e,r.ScheduledRender.scheduleRender(this,this.#t)}openSettingsTab(t){if("click"===t.type||"keydown"===t.type&&self.isEnterOrSpaceKey(t)){const r=e.TargetManager.TargetManager.instance().mainTarget();r&&r.targetAgent().invoke_createTarget({url:this.#n}),t.consume(!0)}}#r(){t.render(t.html` <a href="${this.#n}" class="link" target="_blank" @click="${this.openSettingsTab}" @keydown="${this.openSettingsTab}"><slot></slot></a> `,this.#e,{host:this})}}r.CustomElements.defineComponent("devtools-chrome-link",s);var o=Object.freeze({__proto__:null,ChromeLink:s});export{o as ChromeLink};
