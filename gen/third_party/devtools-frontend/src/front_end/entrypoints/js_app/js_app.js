import"../shell/shell.js";import*as e from"../../core/i18n/i18n.js";import*as i from"../../ui/legacy/legacy.js";import*as o from"../../core/common/common.js";import*as r from"../../core/host/host.js";import*as t from"../../core/sdk/sdk.js";import*as n from"../../ui/legacy/components/utils/utils.js";import*as a from"../main/main.js";const s={profiler:"Profiler",showProfiler:"Show Profiler",startStopRecording:"Start/stop recording"},l=e.i18n.registerUIStrings("panels/js_profiler/js_profiler-meta.ts",s),c=e.i18n.getLazilyComputedLocalizedString.bind(void 0,l);let g;async function p(){return g||(g=await import("../../panels/profiler/profiler.js")),g}i.ViewManager.registerViewExtension({location:"panel",id:"js_profiler",title:c(s.profiler),commandPrompt:c(s.showProfiler),order:65,loadView:async()=>(await p()).ProfilesPanel.JSProfilerPanel.instance()}),i.ActionRegistration.registerActionExtension({actionId:"profiler.js-toggle-recording",category:i.ActionRegistration.ActionCategory.JAVASCRIPT_PROFILER,title:c(s.startStopRecording),iconClass:"largeicon-start-recording",toggleable:!0,toggledIconClass:"largeicon-stop-recording",toggleWithRedColor:!0,contextTypes:()=>void 0===g?[]:(e=>[e.ProfilesPanel.JSProfilerPanel])(g),loadActionDelegate:async()=>(await p()).ProfilesPanel.JSProfilerPanel.instance(),bindings:[{platform:"windows,linux",shortcut:"Ctrl+E"},{platform:"mac",shortcut:"Meta+E"}]});const m={main:"Main"},f=e.i18n.registerUIStrings("entrypoints/js_app/js_app.ts",m),d=e.i18n.getLocalizedString.bind(void 0,f);let u;class P{static instance(e={forceNew:null}){const{forceNew:i}=e;return u&&!i||(u=new P),u}async run(){r.userMetrics.actionTaken(r.UserMetrics.Action.ConnectToNodeJSDirectly),t.Connections.initMainConnection((async()=>{t.TargetManager.TargetManager.instance().createTarget("main",d(m.main),t.Target.Type.Node,null).runtimeAgent().invoke_runIfWaitingForDebugger()}),n.TargetDetachedDialog.TargetDetachedDialog.webSocketConnectionLost)}}o.Runnable.registerEarlyInitializationRunnable(P.instance),new a.MainImpl.MainImpl;export{P as JsMainImpl};
