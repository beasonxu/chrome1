// third_party/blink/public/mojom/feature_observer/feature_observer.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_FEATURE_OBSERVER_FEATURE_OBSERVER_MOJOM_TEST_UTILS_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_FEATURE_OBSERVER_FEATURE_OBSERVER_MOJOM_TEST_UTILS_H_

#include "third_party/blink/public/mojom/feature_observer/feature_observer.mojom.h"
#include "third_party/blink/public/common/common_export.h"


namespace blink {
namespace mojom {


class BLINK_COMMON_EXPORT ObservedFeatureInterceptorForTesting : public ObservedFeature {
  virtual ObservedFeature* GetForwardingInterface() = 0;
};
class BLINK_COMMON_EXPORT ObservedFeatureAsyncWaiter {
 public:
  explicit ObservedFeatureAsyncWaiter(ObservedFeature* proxy);

  ObservedFeatureAsyncWaiter(const ObservedFeatureAsyncWaiter&) = delete;
  ObservedFeatureAsyncWaiter& operator=(const ObservedFeatureAsyncWaiter&) = delete;

  ~ObservedFeatureAsyncWaiter();

 private:
  ObservedFeature* const proxy_;
};


class BLINK_COMMON_EXPORT FeatureObserverInterceptorForTesting : public FeatureObserver {
  virtual FeatureObserver* GetForwardingInterface() = 0;
  void Register(::mojo::PendingReceiver<ObservedFeature> feature, ObservedFeatureType type) override;
};
class BLINK_COMMON_EXPORT FeatureObserverAsyncWaiter {
 public:
  explicit FeatureObserverAsyncWaiter(FeatureObserver* proxy);

  FeatureObserverAsyncWaiter(const FeatureObserverAsyncWaiter&) = delete;
  FeatureObserverAsyncWaiter& operator=(const FeatureObserverAsyncWaiter&) = delete;

  ~FeatureObserverAsyncWaiter();

 private:
  FeatureObserver* const proxy_;
};




}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_FEATURE_OBSERVER_FEATURE_OBSERVER_MOJOM_TEST_UTILS_H_