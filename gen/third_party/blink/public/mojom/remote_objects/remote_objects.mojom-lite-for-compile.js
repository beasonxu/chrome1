// third_party/blink/public/mojom/remote_objects/remote_objects.mojom-lite-for-compile.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';

goog.require('mojo.internal');
goog.require('mojo.internal.interfaceSupport');

goog.require('mojoBase.mojom.String16');
goog.require('mojoBase.mojom.BigBuffer');




goog.provide('blink.mojom.SingletonJavaScriptValue');
goog.provide('blink.mojom.SingletonJavaScriptValueSpec');
/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
blink.mojom.SingletonJavaScriptValueSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
blink.mojom.SingletonJavaScriptValue = {
  
  kNull: 0,
  kUndefined: 1,
  MIN_VALUE: 0,
  MAX_VALUE: 1,
};

goog.provide('blink.mojom.RemoteArrayType');
goog.provide('blink.mojom.RemoteArrayTypeSpec');
/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
blink.mojom.RemoteArrayTypeSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
blink.mojom.RemoteArrayType = {
  
  kInt8Array: 1,
  kUint8Array: 2,
  kInt16Array: 3,
  kUint16Array: 4,
  kInt32Array: 5,
  kUint32Array: 6,
  kFloat32Array: 7,
  kFloat64Array: 8,
  MIN_VALUE: 1,
  MAX_VALUE: 8,
};

goog.provide('blink.mojom.RemoteInvocationError');
goog.provide('blink.mojom.RemoteInvocationErrorSpec');
/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
blink.mojom.RemoteInvocationErrorSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
blink.mojom.RemoteInvocationError = {
  
  OK: 0,
  METHOD_NOT_FOUND: 1,
  OBJECT_GET_CLASS_BLOCKED: 2,
  EXCEPTION_THROWN: 3,
  NON_ASSIGNABLE_TYPES: 4,
  MIN_VALUE: 0,
  MAX_VALUE: 4,
};



goog.provide('blink.mojom.RemoteObjectHost');
goog.provide('blink.mojom.RemoteObjectHostReceiver');
goog.provide('blink.mojom.RemoteObjectHostCallbackRouter');
goog.provide('blink.mojom.RemoteObjectHostInterface');
goog.provide('blink.mojom.RemoteObjectHostRemote');
goog.provide('blink.mojom.RemoteObjectHostPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
blink.mojom.RemoteObjectHostPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        blink.mojom.RemoteObjectHost.$interfaceName,
        scope);
  }
};

/** @interface */
blink.mojom.RemoteObjectHostInterface = class {
  
  /**
   * @param { !number } objectId
   * @param { !blink.mojom.RemoteObjectPendingReceiver } receiver
   */

  getObject(objectId, receiver) {}
  
  /**
   * @param { !number } objectId
   */

  acquireObject(objectId) {}
  
  /**
   * @param { !number } objectId
   */

  releaseObject(objectId) {}
};

/**
 * @export
 * @implements { blink.mojom.RemoteObjectHostInterface }
 */
blink.mojom.RemoteObjectHostRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!blink.mojom.RemoteObjectHostPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          blink.mojom.RemoteObjectHostPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!blink.mojom.RemoteObjectHostPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !number } objectId
   * @param { !blink.mojom.RemoteObjectPendingReceiver } receiver
   */

  getObject(
      objectId,
      receiver) {
    this.proxy.sendMessage(
        0,
        blink.mojom.RemoteObjectHost_GetObject_ParamsSpec.$,
        null,
        [
          objectId,
          receiver
        ]);
  }

  
  /**
   * @param { !number } objectId
   */

  acquireObject(
      objectId) {
    this.proxy.sendMessage(
        1,
        blink.mojom.RemoteObjectHost_AcquireObject_ParamsSpec.$,
        null,
        [
          objectId
        ]);
  }

  
  /**
   * @param { !number } objectId
   */

  releaseObject(
      objectId) {
    this.proxy.sendMessage(
        2,
        blink.mojom.RemoteObjectHost_ReleaseObject_ParamsSpec.$,
        null,
        [
          objectId
        ]);
  }
};

/**
 * An object which receives request messages for the RemoteObjectHost
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
blink.mojom.RemoteObjectHostReceiver = class {
  /**
   * @param {!blink.mojom.RemoteObjectHostInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!blink.mojom.RemoteObjectHostRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        blink.mojom.RemoteObjectHostRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!blink.mojom.RemoteObjectHostRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        blink.mojom.RemoteObjectHost_GetObject_ParamsSpec.$,
        null,
        impl.getObject.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        blink.mojom.RemoteObjectHost_AcquireObject_ParamsSpec.$,
        null,
        impl.acquireObject.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        blink.mojom.RemoteObjectHost_ReleaseObject_ParamsSpec.$,
        null,
        impl.releaseObject.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
blink.mojom.RemoteObjectHost = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "blink.mojom.RemoteObjectHost";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!blink.mojom.RemoteObjectHostRemote}
   * @export
   */
  static getRemote() {
    let remote = new blink.mojom.RemoteObjectHostRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the RemoteObjectHost
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
blink.mojom.RemoteObjectHostCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      blink.mojom.RemoteObjectHostRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!blink.mojom.RemoteObjectHostRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getObject =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        blink.mojom.RemoteObjectHost_GetObject_ParamsSpec.$,
        null,
        this.getObject.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.acquireObject =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        blink.mojom.RemoteObjectHost_AcquireObject_ParamsSpec.$,
        null,
        this.acquireObject.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.releaseObject =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        blink.mojom.RemoteObjectHost_ReleaseObject_ParamsSpec.$,
        null,
        this.releaseObject.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('blink.mojom.RemoteObject');
goog.provide('blink.mojom.RemoteObjectReceiver');
goog.provide('blink.mojom.RemoteObjectCallbackRouter');
goog.provide('blink.mojom.RemoteObjectInterface');
goog.provide('blink.mojom.RemoteObjectRemote');
goog.provide('blink.mojom.RemoteObjectPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
blink.mojom.RemoteObjectPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        blink.mojom.RemoteObject.$interfaceName,
        scope);
  }
};

/** @interface */
blink.mojom.RemoteObjectInterface = class {
  
  /**
   * @param { !string } name
   * @return {!Promise<{
        methodExists: !boolean,
   *  }>}
   */

  hasMethod(name) {}
  
  /**
   * @return {!Promise<{
        methodNames: !Array<!string>,
   *  }>}
   */

  getMethods() {}
  
  /**
   * @param { !string } name
   * @param { !Array<!blink.mojom.RemoteInvocationArgument> } arguments_
   * @return {!Promise<{
        result: !blink.mojom.RemoteInvocationResult,
   *  }>}
   */

  invokeMethod(name, arguments_) {}
  
  /**
   */

  notifyReleasedObject() {}
};

/**
 * @export
 * @implements { blink.mojom.RemoteObjectInterface }
 */
blink.mojom.RemoteObjectRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!blink.mojom.RemoteObjectPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          blink.mojom.RemoteObjectPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!blink.mojom.RemoteObjectPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !string } name
   * @return {!Promise<{
        methodExists: !boolean,
   *  }>}
   */

  hasMethod(
      name) {
    return this.proxy.sendMessage(
        0,
        blink.mojom.RemoteObject_HasMethod_ParamsSpec.$,
        blink.mojom.RemoteObject_HasMethod_ResponseParamsSpec.$,
        [
          name
        ]);
  }

  
  /**
   * @return {!Promise<{
        methodNames: !Array<!string>,
   *  }>}
   */

  getMethods() {
    return this.proxy.sendMessage(
        1,
        blink.mojom.RemoteObject_GetMethods_ParamsSpec.$,
        blink.mojom.RemoteObject_GetMethods_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !string } name
   * @param { !Array<!blink.mojom.RemoteInvocationArgument> } arguments_
   * @return {!Promise<{
        result: !blink.mojom.RemoteInvocationResult,
   *  }>}
   */

  invokeMethod(
      name,
      arguments) {
    return this.proxy.sendMessage(
        2,
        blink.mojom.RemoteObject_InvokeMethod_ParamsSpec.$,
        blink.mojom.RemoteObject_InvokeMethod_ResponseParamsSpec.$,
        [
          name,
          arguments
        ]);
  }

  
  /**
   */

  notifyReleasedObject() {
    this.proxy.sendMessage(
        3,
        blink.mojom.RemoteObject_NotifyReleasedObject_ParamsSpec.$,
        null,
        [
        ]);
  }
};

/**
 * An object which receives request messages for the RemoteObject
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
blink.mojom.RemoteObjectReceiver = class {
  /**
   * @param {!blink.mojom.RemoteObjectInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!blink.mojom.RemoteObjectRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        blink.mojom.RemoteObjectRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!blink.mojom.RemoteObjectRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        blink.mojom.RemoteObject_HasMethod_ParamsSpec.$,
        blink.mojom.RemoteObject_HasMethod_ResponseParamsSpec.$,
        impl.hasMethod.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        blink.mojom.RemoteObject_GetMethods_ParamsSpec.$,
        blink.mojom.RemoteObject_GetMethods_ResponseParamsSpec.$,
        impl.getMethods.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        blink.mojom.RemoteObject_InvokeMethod_ParamsSpec.$,
        blink.mojom.RemoteObject_InvokeMethod_ResponseParamsSpec.$,
        impl.invokeMethod.bind(impl));
    this.helper_internal_.registerHandler(
        3,
        blink.mojom.RemoteObject_NotifyReleasedObject_ParamsSpec.$,
        null,
        impl.notifyReleasedObject.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
blink.mojom.RemoteObject = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "blink.mojom.RemoteObject";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!blink.mojom.RemoteObjectRemote}
   * @export
   */
  static getRemote() {
    let remote = new blink.mojom.RemoteObjectRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the RemoteObject
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
blink.mojom.RemoteObjectCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      blink.mojom.RemoteObjectRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!blink.mojom.RemoteObjectRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.hasMethod =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        blink.mojom.RemoteObject_HasMethod_ParamsSpec.$,
        blink.mojom.RemoteObject_HasMethod_ResponseParamsSpec.$,
        this.hasMethod.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getMethods =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        blink.mojom.RemoteObject_GetMethods_ParamsSpec.$,
        blink.mojom.RemoteObject_GetMethods_ResponseParamsSpec.$,
        this.getMethods.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.invokeMethod =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        blink.mojom.RemoteObject_InvokeMethod_ParamsSpec.$,
        blink.mojom.RemoteObject_InvokeMethod_ResponseParamsSpec.$,
        this.invokeMethod.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.notifyReleasedObject =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        3,
        blink.mojom.RemoteObject_NotifyReleasedObject_ParamsSpec.$,
        null,
        this.notifyReleasedObject.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('blink.mojom.RemoteObjectGatewayFactory');
goog.provide('blink.mojom.RemoteObjectGatewayFactoryReceiver');
goog.provide('blink.mojom.RemoteObjectGatewayFactoryCallbackRouter');
goog.provide('blink.mojom.RemoteObjectGatewayFactoryInterface');
goog.provide('blink.mojom.RemoteObjectGatewayFactoryRemote');
goog.provide('blink.mojom.RemoteObjectGatewayFactoryPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
blink.mojom.RemoteObjectGatewayFactoryPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        blink.mojom.RemoteObjectGatewayFactory.$interfaceName,
        scope);
  }
};

/** @interface */
blink.mojom.RemoteObjectGatewayFactoryInterface = class {
  
  /**
   * @param { !blink.mojom.RemoteObjectHostRemote } host
   * @param { !blink.mojom.RemoteObjectGatewayPendingReceiver } gateway
   */

  createRemoteObjectGateway(host, gateway) {}
};

/**
 * @export
 * @implements { blink.mojom.RemoteObjectGatewayFactoryInterface }
 */
blink.mojom.RemoteObjectGatewayFactoryRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!blink.mojom.RemoteObjectGatewayFactoryPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          blink.mojom.RemoteObjectGatewayFactoryPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!blink.mojom.RemoteObjectGatewayFactoryPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !blink.mojom.RemoteObjectHostRemote } host
   * @param { !blink.mojom.RemoteObjectGatewayPendingReceiver } gateway
   */

  createRemoteObjectGateway(
      host,
      gateway) {
    this.proxy.sendMessage(
        0,
        blink.mojom.RemoteObjectGatewayFactory_CreateRemoteObjectGateway_ParamsSpec.$,
        null,
        [
          host,
          gateway
        ]);
  }
};

/**
 * An object which receives request messages for the RemoteObjectGatewayFactory
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
blink.mojom.RemoteObjectGatewayFactoryReceiver = class {
  /**
   * @param {!blink.mojom.RemoteObjectGatewayFactoryInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!blink.mojom.RemoteObjectGatewayFactoryRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        blink.mojom.RemoteObjectGatewayFactoryRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!blink.mojom.RemoteObjectGatewayFactoryRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        blink.mojom.RemoteObjectGatewayFactory_CreateRemoteObjectGateway_ParamsSpec.$,
        null,
        impl.createRemoteObjectGateway.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
blink.mojom.RemoteObjectGatewayFactory = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "blink.mojom.RemoteObjectGatewayFactory";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!blink.mojom.RemoteObjectGatewayFactoryRemote}
   * @export
   */
  static getRemote() {
    let remote = new blink.mojom.RemoteObjectGatewayFactoryRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the RemoteObjectGatewayFactory
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
blink.mojom.RemoteObjectGatewayFactoryCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      blink.mojom.RemoteObjectGatewayFactoryRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!blink.mojom.RemoteObjectGatewayFactoryRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createRemoteObjectGateway =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        blink.mojom.RemoteObjectGatewayFactory_CreateRemoteObjectGateway_ParamsSpec.$,
        null,
        this.createRemoteObjectGateway.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('blink.mojom.RemoteObjectGateway');
goog.provide('blink.mojom.RemoteObjectGatewayReceiver');
goog.provide('blink.mojom.RemoteObjectGatewayCallbackRouter');
goog.provide('blink.mojom.RemoteObjectGatewayInterface');
goog.provide('blink.mojom.RemoteObjectGatewayRemote');
goog.provide('blink.mojom.RemoteObjectGatewayPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
blink.mojom.RemoteObjectGatewayPendingReceiver = class {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle,
        blink.mojom.RemoteObjectGateway.$interfaceName,
        scope);
  }
};

/** @interface */
blink.mojom.RemoteObjectGatewayInterface = class {
  
  /**
   * @param { !string } name
   * @param { !number } objectId
   */

  addNamedObject(name, objectId) {}
  
  /**
   * @param { !string } name
   */

  removeNamedObject(name) {}
};

/**
 * @export
 * @implements { blink.mojom.RemoteObjectGatewayInterface }
 */
blink.mojom.RemoteObjectGatewayRemote = class {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!blink.mojom.RemoteObjectGatewayPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          blink.mojom.RemoteObjectGatewayPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!blink.mojom.RemoteObjectGatewayPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !string } name
   * @param { !number } objectId
   */

  addNamedObject(
      name,
      objectId) {
    this.proxy.sendMessage(
        0,
        blink.mojom.RemoteObjectGateway_AddNamedObject_ParamsSpec.$,
        null,
        [
          name,
          objectId
        ]);
  }

  
  /**
   * @param { !string } name
   */

  removeNamedObject(
      name) {
    this.proxy.sendMessage(
        1,
        blink.mojom.RemoteObjectGateway_RemoveNamedObject_ParamsSpec.$,
        null,
        [
          name
        ]);
  }
};

/**
 * An object which receives request messages for the RemoteObjectGateway
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
blink.mojom.RemoteObjectGatewayReceiver = class {
  /**
   * @param {!blink.mojom.RemoteObjectGatewayInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!blink.mojom.RemoteObjectGatewayRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        blink.mojom.RemoteObjectGatewayRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!blink.mojom.RemoteObjectGatewayRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        blink.mojom.RemoteObjectGateway_AddNamedObject_ParamsSpec.$,
        null,
        impl.addNamedObject.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        blink.mojom.RemoteObjectGateway_RemoveNamedObject_ParamsSpec.$,
        null,
        impl.removeNamedObject.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
blink.mojom.RemoteObjectGateway = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "blink.mojom.RemoteObjectGateway";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!blink.mojom.RemoteObjectGatewayRemote}
   * @export
   */
  static getRemote() {
    let remote = new blink.mojom.RemoteObjectGatewayRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
};


/**
 * An object which receives request messages for the RemoteObjectGateway
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
blink.mojom.RemoteObjectGatewayCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      blink.mojom.RemoteObjectGatewayRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!blink.mojom.RemoteObjectGatewayRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.addNamedObject =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        blink.mojom.RemoteObjectGateway_AddNamedObject_ParamsSpec.$,
        null,
        this.addNamedObject.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.removeNamedObject =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        blink.mojom.RemoteObjectGateway_RemoveNamedObject_ParamsSpec.$,
        null,
        this.removeNamedObject.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('blink.mojom.RemoteTypedArraySpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.RemoteTypedArraySpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.RemoteInvocationResultSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.RemoteInvocationResultSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.RemoteObjectHost_GetObject_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.RemoteObjectHost_GetObject_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.RemoteObjectHost_AcquireObject_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.RemoteObjectHost_AcquireObject_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.RemoteObjectHost_ReleaseObject_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.RemoteObjectHost_ReleaseObject_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.RemoteObject_HasMethod_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.RemoteObject_HasMethod_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.RemoteObject_HasMethod_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.RemoteObject_HasMethod_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.RemoteObject_GetMethods_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.RemoteObject_GetMethods_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.RemoteObject_GetMethods_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.RemoteObject_GetMethods_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.RemoteObject_InvokeMethod_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.RemoteObject_InvokeMethod_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.RemoteObject_InvokeMethod_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.RemoteObject_InvokeMethod_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.RemoteObject_NotifyReleasedObject_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.RemoteObject_NotifyReleasedObject_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.RemoteObjectGatewayFactory_CreateRemoteObjectGateway_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.RemoteObjectGatewayFactory_CreateRemoteObjectGateway_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.RemoteObjectGateway_AddNamedObject_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.RemoteObjectGateway_AddNamedObject_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.RemoteObjectGateway_RemoveNamedObject_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.RemoteObjectGateway_RemoveNamedObject_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.RemoteInvocationArgumentSpec');
/**
 * @const { {$:!mojo.internal.MojomType} }
 * @export
 */
blink.mojom.RemoteInvocationArgumentSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.RemoteInvocationResultValueSpec');
/**
 * @const { {$:!mojo.internal.MojomType} }
 * @export
 */
blink.mojom.RemoteInvocationResultValueSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    blink.mojom.RemoteTypedArraySpec.$,
    'RemoteTypedArray',
    [
      mojo.internal.StructField(
        'type', 0,
        0,
        blink.mojom.RemoteArrayTypeSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'buffer', 8,
        0,
        mojoBase.mojom.BigBufferSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 32],]);



goog.provide('blink.mojom.RemoteTypedArray');

/** @record */
blink.mojom.RemoteTypedArray = class {
  constructor() {
    /** @export { !blink.mojom.RemoteArrayType } */
    this.type;
    /** @export { !mojoBase.mojom.BigBuffer } */
    this.buffer;
  }
};




mojo.internal.Struct(
    blink.mojom.RemoteInvocationResultSpec.$,
    'RemoteInvocationResult',
    [
      mojo.internal.StructField(
        'error', 0,
        0,
        blink.mojom.RemoteInvocationErrorSpec.$,
        blink.mojom.RemoteInvocationError.OK,
        false /* nullable */),
      mojo.internal.StructField(
        'value', 8,
        0,
        blink.mojom.RemoteInvocationResultValueSpec.$,
        null,
        true /* nullable */),
    ],
    [[0, 32],]);



goog.provide('blink.mojom.RemoteInvocationResult');

/** @record */
blink.mojom.RemoteInvocationResult = class {
  constructor() {
    /** @export { !blink.mojom.RemoteInvocationError } */
    this.error;
    /** @export { (blink.mojom.RemoteInvocationResultValue|undefined) } */
    this.value;
  }
};




mojo.internal.Struct(
    blink.mojom.RemoteObjectHost_GetObject_ParamsSpec.$,
    'RemoteObjectHost_GetObject_Params',
    [
      mojo.internal.StructField(
        'objectId', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'receiver', 4,
        0,
        mojo.internal.InterfaceRequest(blink.mojom.RemoteObjectPendingReceiver),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('blink.mojom.RemoteObjectHost_GetObject_Params');

/** @record */
blink.mojom.RemoteObjectHost_GetObject_Params = class {
  constructor() {
    /** @export { !number } */
    this.objectId;
    /** @export { !blink.mojom.RemoteObjectPendingReceiver } */
    this.receiver;
  }
};




mojo.internal.Struct(
    blink.mojom.RemoteObjectHost_AcquireObject_ParamsSpec.$,
    'RemoteObjectHost_AcquireObject_Params',
    [
      mojo.internal.StructField(
        'objectId', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('blink.mojom.RemoteObjectHost_AcquireObject_Params');

/** @record */
blink.mojom.RemoteObjectHost_AcquireObject_Params = class {
  constructor() {
    /** @export { !number } */
    this.objectId;
  }
};




mojo.internal.Struct(
    blink.mojom.RemoteObjectHost_ReleaseObject_ParamsSpec.$,
    'RemoteObjectHost_ReleaseObject_Params',
    [
      mojo.internal.StructField(
        'objectId', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('blink.mojom.RemoteObjectHost_ReleaseObject_Params');

/** @record */
blink.mojom.RemoteObjectHost_ReleaseObject_Params = class {
  constructor() {
    /** @export { !number } */
    this.objectId;
  }
};




mojo.internal.Struct(
    blink.mojom.RemoteObject_HasMethod_ParamsSpec.$,
    'RemoteObject_HasMethod_Params',
    [
      mojo.internal.StructField(
        'name', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('blink.mojom.RemoteObject_HasMethod_Params');

/** @record */
blink.mojom.RemoteObject_HasMethod_Params = class {
  constructor() {
    /** @export { !string } */
    this.name;
  }
};




mojo.internal.Struct(
    blink.mojom.RemoteObject_HasMethod_ResponseParamsSpec.$,
    'RemoteObject_HasMethod_ResponseParams',
    [
      mojo.internal.StructField(
        'methodExists', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('blink.mojom.RemoteObject_HasMethod_ResponseParams');

/** @record */
blink.mojom.RemoteObject_HasMethod_ResponseParams = class {
  constructor() {
    /** @export { !boolean } */
    this.methodExists;
  }
};




mojo.internal.Struct(
    blink.mojom.RemoteObject_GetMethods_ParamsSpec.$,
    'RemoteObject_GetMethods_Params',
    [
    ],
    [[0, 8],]);



goog.provide('blink.mojom.RemoteObject_GetMethods_Params');

/** @record */
blink.mojom.RemoteObject_GetMethods_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    blink.mojom.RemoteObject_GetMethods_ResponseParamsSpec.$,
    'RemoteObject_GetMethods_ResponseParams',
    [
      mojo.internal.StructField(
        'methodNames', 0,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('blink.mojom.RemoteObject_GetMethods_ResponseParams');

/** @record */
blink.mojom.RemoteObject_GetMethods_ResponseParams = class {
  constructor() {
    /** @export { !Array<!string> } */
    this.methodNames;
  }
};




mojo.internal.Struct(
    blink.mojom.RemoteObject_InvokeMethod_ParamsSpec.$,
    'RemoteObject_InvokeMethod_Params',
    [
      mojo.internal.StructField(
        'name', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'arguments', 8,
        0,
        mojo.internal.Array(blink.mojom.RemoteInvocationArgumentSpec.$, false),
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('blink.mojom.RemoteObject_InvokeMethod_Params');

/** @record */
blink.mojom.RemoteObject_InvokeMethod_Params = class {
  constructor() {
    /** @export { !string } */
    this.name;
    /** @export { !Array<!blink.mojom.RemoteInvocationArgument> } */
    this.arguments;
  }
};




mojo.internal.Struct(
    blink.mojom.RemoteObject_InvokeMethod_ResponseParamsSpec.$,
    'RemoteObject_InvokeMethod_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        blink.mojom.RemoteInvocationResultSpec.$,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('blink.mojom.RemoteObject_InvokeMethod_ResponseParams');

/** @record */
blink.mojom.RemoteObject_InvokeMethod_ResponseParams = class {
  constructor() {
    /** @export { !blink.mojom.RemoteInvocationResult } */
    this.result;
  }
};




mojo.internal.Struct(
    blink.mojom.RemoteObject_NotifyReleasedObject_ParamsSpec.$,
    'RemoteObject_NotifyReleasedObject_Params',
    [
    ],
    [[0, 8],]);



goog.provide('blink.mojom.RemoteObject_NotifyReleasedObject_Params');

/** @record */
blink.mojom.RemoteObject_NotifyReleasedObject_Params = class {
  constructor() {
  }
};




mojo.internal.Struct(
    blink.mojom.RemoteObjectGatewayFactory_CreateRemoteObjectGateway_ParamsSpec.$,
    'RemoteObjectGatewayFactory_CreateRemoteObjectGateway_Params',
    [
      mojo.internal.StructField(
        'host', 0,
        0,
        mojo.internal.InterfaceProxy(blink.mojom.RemoteObjectHostRemote),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'gateway', 8,
        0,
        mojo.internal.InterfaceRequest(blink.mojom.RemoteObjectGatewayPendingReceiver),
        null,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('blink.mojom.RemoteObjectGatewayFactory_CreateRemoteObjectGateway_Params');

/** @record */
blink.mojom.RemoteObjectGatewayFactory_CreateRemoteObjectGateway_Params = class {
  constructor() {
    /** @export { !blink.mojom.RemoteObjectHostRemote } */
    this.host;
    /** @export { !blink.mojom.RemoteObjectGatewayPendingReceiver } */
    this.gateway;
  }
};




mojo.internal.Struct(
    blink.mojom.RemoteObjectGateway_AddNamedObject_ParamsSpec.$,
    'RemoteObjectGateway_AddNamedObject_Params',
    [
      mojo.internal.StructField(
        'name', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'objectId', 8,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('blink.mojom.RemoteObjectGateway_AddNamedObject_Params');

/** @record */
blink.mojom.RemoteObjectGateway_AddNamedObject_Params = class {
  constructor() {
    /** @export { !string } */
    this.name;
    /** @export { !number } */
    this.objectId;
  }
};




mojo.internal.Struct(
    blink.mojom.RemoteObjectGateway_RemoveNamedObject_ParamsSpec.$,
    'RemoteObjectGateway_RemoveNamedObject_Params',
    [
      mojo.internal.StructField(
        'name', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ],
    [[0, 16],]);



goog.provide('blink.mojom.RemoteObjectGateway_RemoveNamedObject_Params');

/** @record */
blink.mojom.RemoteObjectGateway_RemoveNamedObject_Params = class {
  constructor() {
    /** @export { !string } */
    this.name;
  }
};


goog.provide('blink.mojom.RemoteInvocationArgument');


mojo.internal.Union(
    blink.mojom.RemoteInvocationArgumentSpec.$, 'RemoteInvocationArgument',
    {
      'numberValue': {
        'ordinal': 0,
        'type': mojo.internal.Double,
      },
      'booleanValue': {
        'ordinal': 1,
        'type': mojo.internal.Bool,
      },
      'stringValue': {
        'ordinal': 2,
        'type': mojoBase.mojom.String16Spec.$,
      },
      'singletonValue': {
        'ordinal': 3,
        'type': blink.mojom.SingletonJavaScriptValueSpec.$,
      },
      'arrayValue': {
        'ordinal': 4,
        'type': mojo.internal.Array(blink.mojom.RemoteInvocationArgumentSpec.$, false),
      },
      'typedArrayValue': {
        'ordinal': 5,
        'type': blink.mojom.RemoteTypedArraySpec.$,
      },
      'objectIdValue': {
        'ordinal': 6,
        'type': mojo.internal.Int32,
      },
    });

/**
 * @typedef { {
 *   numberValue: (!number|undefined),
 *   booleanValue: (!boolean|undefined),
 *   stringValue: (!mojoBase.mojom.String16|undefined),
 *   singletonValue: (!blink.mojom.SingletonJavaScriptValue|undefined),
 *   arrayValue: (!Array<!blink.mojom.RemoteInvocationArgument>|undefined),
 *   typedArrayValue: (!blink.mojom.RemoteTypedArray|undefined),
 *   objectIdValue: (!number|undefined),
 * } }
 */
blink.mojom.RemoteInvocationArgument;
goog.provide('blink.mojom.RemoteInvocationResultValue');


mojo.internal.Union(
    blink.mojom.RemoteInvocationResultValueSpec.$, 'RemoteInvocationResultValue',
    {
      'numberValue': {
        'ordinal': 0,
        'type': mojo.internal.Double,
      },
      'booleanValue': {
        'ordinal': 1,
        'type': mojo.internal.Bool,
      },
      'stringValue': {
        'ordinal': 2,
        'type': mojoBase.mojom.String16Spec.$,
      },
      'singletonValue': {
        'ordinal': 3,
        'type': blink.mojom.SingletonJavaScriptValueSpec.$,
      },
      'objectId': {
        'ordinal': 4,
        'type': mojo.internal.Int32,
      },
    });

/**
 * @typedef { {
 *   numberValue: (!number|undefined),
 *   booleanValue: (!boolean|undefined),
 *   stringValue: (!mojoBase.mojom.String16|undefined),
 *   singletonValue: (!blink.mojom.SingletonJavaScriptValue|undefined),
 *   objectId: (!number|undefined),
 * } }
 */
blink.mojom.RemoteInvocationResultValue;
