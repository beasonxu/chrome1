// third_party/blink/public/mojom/worker/worker_content_settings_proxy.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_WORKER_WORKER_CONTENT_SETTINGS_PROXY_MOJOM_PARAMS_DATA_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_WORKER_WORKER_CONTENT_SETTINGS_PROXY_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace blink {
namespace mojom {
namespace internal {

class ValidationContext;
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WorkerContentSettingsProxy_AllowIndexedDB_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<WorkerContentSettingsProxy_AllowIndexedDB_Params_Data>;

  WorkerContentSettingsProxy_AllowIndexedDB_Params_Data();
  ~WorkerContentSettingsProxy_AllowIndexedDB_Params_Data() = delete;
};
static_assert(sizeof(WorkerContentSettingsProxy_AllowIndexedDB_Params_Data) == 8,
              "Bad sizeof(WorkerContentSettingsProxy_AllowIndexedDB_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WorkerContentSettingsProxy_AllowIndexedDB_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t result : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<WorkerContentSettingsProxy_AllowIndexedDB_ResponseParams_Data>;

  WorkerContentSettingsProxy_AllowIndexedDB_ResponseParams_Data();
  ~WorkerContentSettingsProxy_AllowIndexedDB_ResponseParams_Data() = delete;
};
static_assert(sizeof(WorkerContentSettingsProxy_AllowIndexedDB_ResponseParams_Data) == 16,
              "Bad sizeof(WorkerContentSettingsProxy_AllowIndexedDB_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WorkerContentSettingsProxy_AllowCacheStorage_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<WorkerContentSettingsProxy_AllowCacheStorage_Params_Data>;

  WorkerContentSettingsProxy_AllowCacheStorage_Params_Data();
  ~WorkerContentSettingsProxy_AllowCacheStorage_Params_Data() = delete;
};
static_assert(sizeof(WorkerContentSettingsProxy_AllowCacheStorage_Params_Data) == 8,
              "Bad sizeof(WorkerContentSettingsProxy_AllowCacheStorage_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WorkerContentSettingsProxy_AllowCacheStorage_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t result : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<WorkerContentSettingsProxy_AllowCacheStorage_ResponseParams_Data>;

  WorkerContentSettingsProxy_AllowCacheStorage_ResponseParams_Data();
  ~WorkerContentSettingsProxy_AllowCacheStorage_ResponseParams_Data() = delete;
};
static_assert(sizeof(WorkerContentSettingsProxy_AllowCacheStorage_ResponseParams_Data) == 16,
              "Bad sizeof(WorkerContentSettingsProxy_AllowCacheStorage_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WorkerContentSettingsProxy_AllowWebLocks_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<WorkerContentSettingsProxy_AllowWebLocks_Params_Data>;

  WorkerContentSettingsProxy_AllowWebLocks_Params_Data();
  ~WorkerContentSettingsProxy_AllowWebLocks_Params_Data() = delete;
};
static_assert(sizeof(WorkerContentSettingsProxy_AllowWebLocks_Params_Data) == 8,
              "Bad sizeof(WorkerContentSettingsProxy_AllowWebLocks_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WorkerContentSettingsProxy_AllowWebLocks_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t result : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<WorkerContentSettingsProxy_AllowWebLocks_ResponseParams_Data>;

  WorkerContentSettingsProxy_AllowWebLocks_ResponseParams_Data();
  ~WorkerContentSettingsProxy_AllowWebLocks_ResponseParams_Data() = delete;
};
static_assert(sizeof(WorkerContentSettingsProxy_AllowWebLocks_ResponseParams_Data) == 16,
              "Bad sizeof(WorkerContentSettingsProxy_AllowWebLocks_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WorkerContentSettingsProxy_RequestFileSystemAccessSync_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<WorkerContentSettingsProxy_RequestFileSystemAccessSync_Params_Data>;

  WorkerContentSettingsProxy_RequestFileSystemAccessSync_Params_Data();
  ~WorkerContentSettingsProxy_RequestFileSystemAccessSync_Params_Data() = delete;
};
static_assert(sizeof(WorkerContentSettingsProxy_RequestFileSystemAccessSync_Params_Data) == 8,
              "Bad sizeof(WorkerContentSettingsProxy_RequestFileSystemAccessSync_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) WorkerContentSettingsProxy_RequestFileSystemAccessSync_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t result : 1;
  uint8_t padfinal_[7];

 private:
  friend class mojo::internal::MessageFragment<WorkerContentSettingsProxy_RequestFileSystemAccessSync_ResponseParams_Data>;

  WorkerContentSettingsProxy_RequestFileSystemAccessSync_ResponseParams_Data();
  ~WorkerContentSettingsProxy_RequestFileSystemAccessSync_ResponseParams_Data() = delete;
};
static_assert(sizeof(WorkerContentSettingsProxy_RequestFileSystemAccessSync_ResponseParams_Data) == 16,
              "Bad sizeof(WorkerContentSettingsProxy_RequestFileSystemAccessSync_ResponseParams_Data)");

}  // namespace internal


class WorkerContentSettingsProxy_AllowIndexedDB_ParamsDataView {
 public:
  WorkerContentSettingsProxy_AllowIndexedDB_ParamsDataView() = default;

  WorkerContentSettingsProxy_AllowIndexedDB_ParamsDataView(
      internal::WorkerContentSettingsProxy_AllowIndexedDB_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::WorkerContentSettingsProxy_AllowIndexedDB_Params_Data* data_ = nullptr;
};



class WorkerContentSettingsProxy_AllowIndexedDB_ResponseParamsDataView {
 public:
  WorkerContentSettingsProxy_AllowIndexedDB_ResponseParamsDataView() = default;

  WorkerContentSettingsProxy_AllowIndexedDB_ResponseParamsDataView(
      internal::WorkerContentSettingsProxy_AllowIndexedDB_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool result() const {
    return data_->result;
  }
 private:
  internal::WorkerContentSettingsProxy_AllowIndexedDB_ResponseParams_Data* data_ = nullptr;
};



class WorkerContentSettingsProxy_AllowCacheStorage_ParamsDataView {
 public:
  WorkerContentSettingsProxy_AllowCacheStorage_ParamsDataView() = default;

  WorkerContentSettingsProxy_AllowCacheStorage_ParamsDataView(
      internal::WorkerContentSettingsProxy_AllowCacheStorage_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::WorkerContentSettingsProxy_AllowCacheStorage_Params_Data* data_ = nullptr;
};



class WorkerContentSettingsProxy_AllowCacheStorage_ResponseParamsDataView {
 public:
  WorkerContentSettingsProxy_AllowCacheStorage_ResponseParamsDataView() = default;

  WorkerContentSettingsProxy_AllowCacheStorage_ResponseParamsDataView(
      internal::WorkerContentSettingsProxy_AllowCacheStorage_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool result() const {
    return data_->result;
  }
 private:
  internal::WorkerContentSettingsProxy_AllowCacheStorage_ResponseParams_Data* data_ = nullptr;
};



class WorkerContentSettingsProxy_AllowWebLocks_ParamsDataView {
 public:
  WorkerContentSettingsProxy_AllowWebLocks_ParamsDataView() = default;

  WorkerContentSettingsProxy_AllowWebLocks_ParamsDataView(
      internal::WorkerContentSettingsProxy_AllowWebLocks_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::WorkerContentSettingsProxy_AllowWebLocks_Params_Data* data_ = nullptr;
};



class WorkerContentSettingsProxy_AllowWebLocks_ResponseParamsDataView {
 public:
  WorkerContentSettingsProxy_AllowWebLocks_ResponseParamsDataView() = default;

  WorkerContentSettingsProxy_AllowWebLocks_ResponseParamsDataView(
      internal::WorkerContentSettingsProxy_AllowWebLocks_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool result() const {
    return data_->result;
  }
 private:
  internal::WorkerContentSettingsProxy_AllowWebLocks_ResponseParams_Data* data_ = nullptr;
};



class WorkerContentSettingsProxy_RequestFileSystemAccessSync_ParamsDataView {
 public:
  WorkerContentSettingsProxy_RequestFileSystemAccessSync_ParamsDataView() = default;

  WorkerContentSettingsProxy_RequestFileSystemAccessSync_ParamsDataView(
      internal::WorkerContentSettingsProxy_RequestFileSystemAccessSync_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::WorkerContentSettingsProxy_RequestFileSystemAccessSync_Params_Data* data_ = nullptr;
};



class WorkerContentSettingsProxy_RequestFileSystemAccessSync_ResponseParamsDataView {
 public:
  WorkerContentSettingsProxy_RequestFileSystemAccessSync_ResponseParamsDataView() = default;

  WorkerContentSettingsProxy_RequestFileSystemAccessSync_ResponseParamsDataView(
      internal::WorkerContentSettingsProxy_RequestFileSystemAccessSync_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool result() const {
    return data_->result;
  }
 private:
  internal::WorkerContentSettingsProxy_RequestFileSystemAccessSync_ResponseParams_Data* data_ = nullptr;
};

















}  // namespace mojom
}  // namespace blink

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_WORKER_WORKER_CONTENT_SETTINGS_PROXY_MOJOM_PARAMS_DATA_H_