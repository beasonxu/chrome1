// third_party/blink/public/mojom/loader/fetch_client_settings_object.mojom-lite-for-compile.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';

goog.require('mojo.internal');

goog.require('network.mojom.ReferrerPolicy');
goog.require('url.mojom.Url');




goog.provide('blink.mojom.InsecureRequestsPolicy');
goog.provide('blink.mojom.InsecureRequestsPolicySpec');
/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
blink.mojom.InsecureRequestsPolicySpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
blink.mojom.InsecureRequestsPolicy = {
  
  kDoNotUpgrade: 0,
  kUpgrade: 1,
  MIN_VALUE: 0,
  MAX_VALUE: 1,
};



goog.provide('blink.mojom.FetchClientSettingsObjectSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.FetchClientSettingsObjectSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    blink.mojom.FetchClientSettingsObjectSpec.$,
    'FetchClientSettingsObject',
    [
      mojo.internal.StructField(
        'referrerPolicy', 0,
        0,
        network.mojom.ReferrerPolicySpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'outgoingReferrer', 8,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'insecureRequestsPolicy', 4,
        0,
        blink.mojom.InsecureRequestsPolicySpec.$,
        0,
        false /* nullable */),
    ],
    [[0, 24],]);



goog.provide('blink.mojom.FetchClientSettingsObject');

/** @record */
blink.mojom.FetchClientSettingsObject = class {
  constructor() {
    /** @export { !network.mojom.ReferrerPolicy } */
    this.referrerPolicy;
    /** @export { !blink.mojom.InsecureRequestsPolicy } */
    this.insecureRequestsPolicy;
    /** @export { !url.mojom.Url } */
    this.outgoingReferrer;
  }
};


