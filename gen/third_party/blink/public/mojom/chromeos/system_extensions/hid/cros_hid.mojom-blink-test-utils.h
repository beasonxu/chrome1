// third_party/blink/public/mojom/chromeos/system_extensions/hid/cros_hid.mojom-blink-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_CHROMEOS_SYSTEM_EXTENSIONS_HID_CROS_HID_MOJOM_BLINK_TEST_UTILS_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_CHROMEOS_SYSTEM_EXTENSIONS_HID_CROS_HID_MOJOM_BLINK_TEST_UTILS_H_

#include "third_party/blink/public/mojom/chromeos/system_extensions/hid/cros_hid.mojom-blink.h"
#include "third_party/blink/renderer/platform/platform_export.h"


namespace blink {
namespace mojom {
namespace blink {


class PLATFORM_EXPORT CrosHIDInterceptorForTesting : public CrosHID {
  virtual CrosHID* GetForwardingInterface() = 0;
  void AccessDevices(WTF::Vector<::blink::mojom::blink::HidDeviceFilterPtr> filters, AccessDevicesCallback callback) override;
  void Connect(const WTF::String& device_guid, ::mojo::PendingRemote<::device::mojom::blink::HidConnectionClient> client, ConnectCallback callback) override;
};
class PLATFORM_EXPORT CrosHIDAsyncWaiter {
 public:
  explicit CrosHIDAsyncWaiter(CrosHID* proxy);

  CrosHIDAsyncWaiter(const CrosHIDAsyncWaiter&) = delete;
  CrosHIDAsyncWaiter& operator=(const CrosHIDAsyncWaiter&) = delete;

  ~CrosHIDAsyncWaiter();
  void AccessDevices(
      WTF::Vector<::blink::mojom::blink::HidDeviceFilterPtr> filters, WTF::Vector<::device::mojom::blink::HidDeviceInfoPtr>* out_devices);
  void Connect(
      const WTF::String& device_guid, ::mojo::PendingRemote<::device::mojom::blink::HidConnectionClient> client, ::mojo::PendingRemote<::device::mojom::blink::HidConnection>* out_connection);

 private:
  CrosHID* const proxy_;
};




}  // namespace blink
}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_CHROMEOS_SYSTEM_EXTENSIONS_HID_CROS_HID_MOJOM_BLINK_TEST_UTILS_H_