// third_party/blink/public/mojom/prerender/prerender.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_PRERENDER_PRERENDER_MOJOM_PARAMS_DATA_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_PRERENDER_PRERENDER_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace blink {
namespace mojom {
namespace internal {

class ValidationContext;
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) NoStatePrefetchProcessor_Start_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::PrerenderAttributes_Data> prerender_attribute;

 private:
  friend class mojo::internal::MessageFragment<NoStatePrefetchProcessor_Start_Params_Data>;

  NoStatePrefetchProcessor_Start_Params_Data();
  ~NoStatePrefetchProcessor_Start_Params_Data() = delete;
};
static_assert(sizeof(NoStatePrefetchProcessor_Start_Params_Data) == 16,
              "Bad sizeof(NoStatePrefetchProcessor_Start_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) NoStatePrefetchProcessor_Cancel_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<NoStatePrefetchProcessor_Cancel_Params_Data>;

  NoStatePrefetchProcessor_Cancel_Params_Data();
  ~NoStatePrefetchProcessor_Cancel_Params_Data() = delete;
};
static_assert(sizeof(NoStatePrefetchProcessor_Cancel_Params_Data) == 8,
              "Bad sizeof(NoStatePrefetchProcessor_Cancel_Params_Data)");

}  // namespace internal


class NoStatePrefetchProcessor_Start_ParamsDataView {
 public:
  NoStatePrefetchProcessor_Start_ParamsDataView() = default;

  NoStatePrefetchProcessor_Start_ParamsDataView(
      internal::NoStatePrefetchProcessor_Start_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetPrerenderAttributeDataView(
      PrerenderAttributesDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadPrerenderAttribute(UserType* output) {
    
    auto* pointer = data_->prerender_attribute.Get();
    return mojo::internal::Deserialize<::blink::mojom::PrerenderAttributesDataView>(
        pointer, output, message_);
  }
 private:
  internal::NoStatePrefetchProcessor_Start_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class NoStatePrefetchProcessor_Cancel_ParamsDataView {
 public:
  NoStatePrefetchProcessor_Cancel_ParamsDataView() = default;

  NoStatePrefetchProcessor_Cancel_ParamsDataView(
      internal::NoStatePrefetchProcessor_Cancel_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::NoStatePrefetchProcessor_Cancel_Params_Data* data_ = nullptr;
};


inline void NoStatePrefetchProcessor_Start_ParamsDataView::GetPrerenderAttributeDataView(
    PrerenderAttributesDataView* output) {
  auto pointer = data_->prerender_attribute.Get();
  *output = PrerenderAttributesDataView(pointer, message_);
}



}  // namespace mojom
}  // namespace blink

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_PRERENDER_PRERENDER_MOJOM_PARAMS_DATA_H_