// third_party/blink/public/mojom/interest_group/ad_auction_service.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_INTEREST_GROUP_AD_AUCTION_SERVICE_MOJOM_TEST_UTILS_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_INTEREST_GROUP_AD_AUCTION_SERVICE_MOJOM_TEST_UTILS_H_

#include "third_party/blink/public/mojom/interest_group/ad_auction_service.mojom.h"
#include "third_party/blink/public/common/common_export.h"


namespace blink {
namespace mojom {


class BLINK_COMMON_EXPORT AdAuctionServiceInterceptorForTesting : public AdAuctionService {
  virtual AdAuctionService* GetForwardingInterface() = 0;
  void CreateAdRequest(::blink::mojom::AdRequestConfigPtr config, CreateAdRequestCallback callback) override;
  void FinalizeAd(const std::string& ads_guid, const ::blink::AuctionConfig& config, FinalizeAdCallback callback) override;
  void RunAdAuction(const ::blink::AuctionConfig& config, RunAdAuctionCallback callback) override;
  void JoinInterestGroup(const ::blink::InterestGroup& group, JoinInterestGroupCallback callback) override;
  void LeaveInterestGroup(const ::url::Origin& owner, const std::string& name, LeaveInterestGroupCallback callback) override;
  void LeaveInterestGroupForDocument() override;
  void UpdateAdInterestGroups() override;
  void DeprecatedGetURLFromURN(const ::GURL& uuid_url, DeprecatedGetURLFromURNCallback callback) override;
  void DeprecatedReplaceInURN(const ::GURL& uuid_url, std::vector<ReplacementPtr> replacements, DeprecatedReplaceInURNCallback callback) override;
};
class BLINK_COMMON_EXPORT AdAuctionServiceAsyncWaiter {
 public:
  explicit AdAuctionServiceAsyncWaiter(AdAuctionService* proxy);

  AdAuctionServiceAsyncWaiter(const AdAuctionServiceAsyncWaiter&) = delete;
  AdAuctionServiceAsyncWaiter& operator=(const AdAuctionServiceAsyncWaiter&) = delete;

  ~AdAuctionServiceAsyncWaiter();
  void CreateAdRequest(
      ::blink::mojom::AdRequestConfigPtr config, absl::optional<std::string>* out_ads_guid);
  void FinalizeAd(
      const std::string& ads_guid, const ::blink::AuctionConfig& config, absl::optional<::GURL>* out_ad_display_url);
  void RunAdAuction(
      const ::blink::AuctionConfig& config, absl::optional<::GURL>* out_ad_display_url);
  void JoinInterestGroup(
      const ::blink::InterestGroup& group, bool* out_failed_well_known_check);
  void LeaveInterestGroup(
      const ::url::Origin& owner, const std::string& name, bool* out_failed_well_known_check);
  void DeprecatedGetURLFromURN(
      const ::GURL& uuid_url, absl::optional<::GURL>* out_decoded_url);
  void DeprecatedReplaceInURN(
      const ::GURL& uuid_url, std::vector<ReplacementPtr> replacements);

 private:
  AdAuctionService* const proxy_;
};




}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_INTEREST_GROUP_AD_AUCTION_SERVICE_MOJOM_TEST_UTILS_H_