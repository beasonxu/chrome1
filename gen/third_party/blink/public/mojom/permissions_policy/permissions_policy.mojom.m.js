// third_party/blink/public/mojom/permissions_policy/permissions_policy.mojom.m.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import {mojo} from '../../../../../mojo/public/js/bindings.js';

import {
  Origin as url_mojom_Origin,
  OriginSpec as url_mojom_OriginSpec
} from '../../../../../url/mojom/origin.mojom.m.js';

import {
  PermissionsPolicyFeature as blink_mojom_PermissionsPolicyFeature,
  PermissionsPolicyFeatureSpec as blink_mojom_PermissionsPolicyFeatureSpec
} from './permissions_policy_feature.mojom.m.js';



/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const ParsedPermissionsPolicyDeclarationSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    ParsedPermissionsPolicyDeclarationSpec.$,
    'ParsedPermissionsPolicyDeclaration',
    [
      mojo.internal.StructField(
        'feature', 0,
        0,
        blink_mojom_PermissionsPolicyFeatureSpec.$,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'allowedOrigins', 8,
        0,
        mojo.internal.Array(url_mojom_OriginSpec.$, false),
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'matchesAllOrigins', 4,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'matchesOpaqueSrc', 4,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class ParsedPermissionsPolicyDeclaration {
  constructor() {
    /** @type { !blink_mojom_PermissionsPolicyFeature } */
    this.feature;
    /** @type { !boolean } */
    this.matchesAllOrigins;
    /** @type { !boolean } */
    this.matchesOpaqueSrc;
    /** @type { !Array<!url_mojom_Origin> } */
    this.allowedOrigins;
  }
}

