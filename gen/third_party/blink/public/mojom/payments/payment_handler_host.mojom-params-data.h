// third_party/blink/public/mojom/payments/payment_handler_host.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_PAYMENTS_PAYMENT_HANDLER_HOST_MOJOM_PARAMS_DATA_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_PAYMENTS_PAYMENT_HANDLER_HOST_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace payments {
namespace mojom {
namespace internal {

class ValidationContext;
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) PaymentHandlerHost_ChangePaymentMethod_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::PaymentHandlerMethodData_Data> method_data;

 private:
  friend class mojo::internal::MessageFragment<PaymentHandlerHost_ChangePaymentMethod_Params_Data>;

  PaymentHandlerHost_ChangePaymentMethod_Params_Data();
  ~PaymentHandlerHost_ChangePaymentMethod_Params_Data() = delete;
};
static_assert(sizeof(PaymentHandlerHost_ChangePaymentMethod_Params_Data) == 16,
              "Bad sizeof(PaymentHandlerHost_ChangePaymentMethod_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) PaymentHandlerHost_ChangePaymentMethod_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::PaymentRequestDetailsUpdate_Data> response_data;

 private:
  friend class mojo::internal::MessageFragment<PaymentHandlerHost_ChangePaymentMethod_ResponseParams_Data>;

  PaymentHandlerHost_ChangePaymentMethod_ResponseParams_Data();
  ~PaymentHandlerHost_ChangePaymentMethod_ResponseParams_Data() = delete;
};
static_assert(sizeof(PaymentHandlerHost_ChangePaymentMethod_ResponseParams_Data) == 16,
              "Bad sizeof(PaymentHandlerHost_ChangePaymentMethod_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) PaymentHandlerHost_ChangeShippingOption_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> shipping_option_id;

 private:
  friend class mojo::internal::MessageFragment<PaymentHandlerHost_ChangeShippingOption_Params_Data>;

  PaymentHandlerHost_ChangeShippingOption_Params_Data();
  ~PaymentHandlerHost_ChangeShippingOption_Params_Data() = delete;
};
static_assert(sizeof(PaymentHandlerHost_ChangeShippingOption_Params_Data) == 16,
              "Bad sizeof(PaymentHandlerHost_ChangeShippingOption_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) PaymentHandlerHost_ChangeShippingOption_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::PaymentRequestDetailsUpdate_Data> response_data;

 private:
  friend class mojo::internal::MessageFragment<PaymentHandlerHost_ChangeShippingOption_ResponseParams_Data>;

  PaymentHandlerHost_ChangeShippingOption_ResponseParams_Data();
  ~PaymentHandlerHost_ChangeShippingOption_ResponseParams_Data() = delete;
};
static_assert(sizeof(PaymentHandlerHost_ChangeShippingOption_ResponseParams_Data) == 16,
              "Bad sizeof(PaymentHandlerHost_ChangeShippingOption_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) PaymentHandlerHost_ChangeShippingAddress_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::payments::mojom::internal::PaymentAddress_Data> shipping_address;

 private:
  friend class mojo::internal::MessageFragment<PaymentHandlerHost_ChangeShippingAddress_Params_Data>;

  PaymentHandlerHost_ChangeShippingAddress_Params_Data();
  ~PaymentHandlerHost_ChangeShippingAddress_Params_Data() = delete;
};
static_assert(sizeof(PaymentHandlerHost_ChangeShippingAddress_Params_Data) == 16,
              "Bad sizeof(PaymentHandlerHost_ChangeShippingAddress_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) PaymentHandlerHost_ChangeShippingAddress_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::PaymentRequestDetailsUpdate_Data> response_data;

 private:
  friend class mojo::internal::MessageFragment<PaymentHandlerHost_ChangeShippingAddress_ResponseParams_Data>;

  PaymentHandlerHost_ChangeShippingAddress_ResponseParams_Data();
  ~PaymentHandlerHost_ChangeShippingAddress_ResponseParams_Data() = delete;
};
static_assert(sizeof(PaymentHandlerHost_ChangeShippingAddress_ResponseParams_Data) == 16,
              "Bad sizeof(PaymentHandlerHost_ChangeShippingAddress_ResponseParams_Data)");

}  // namespace internal


class PaymentHandlerHost_ChangePaymentMethod_ParamsDataView {
 public:
  PaymentHandlerHost_ChangePaymentMethod_ParamsDataView() = default;

  PaymentHandlerHost_ChangePaymentMethod_ParamsDataView(
      internal::PaymentHandlerHost_ChangePaymentMethod_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetMethodDataDataView(
      PaymentHandlerMethodDataDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadMethodData(UserType* output) {
    
    auto* pointer = data_->method_data.Get();
    return mojo::internal::Deserialize<::payments::mojom::PaymentHandlerMethodDataDataView>(
        pointer, output, message_);
  }
 private:
  internal::PaymentHandlerHost_ChangePaymentMethod_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PaymentHandlerHost_ChangePaymentMethod_ResponseParamsDataView {
 public:
  PaymentHandlerHost_ChangePaymentMethod_ResponseParamsDataView() = default;

  PaymentHandlerHost_ChangePaymentMethod_ResponseParamsDataView(
      internal::PaymentHandlerHost_ChangePaymentMethod_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetResponseDataDataView(
      PaymentRequestDetailsUpdateDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadResponseData(UserType* output) {
    
    auto* pointer = data_->response_data.Get();
    return mojo::internal::Deserialize<::payments::mojom::PaymentRequestDetailsUpdateDataView>(
        pointer, output, message_);
  }
 private:
  internal::PaymentHandlerHost_ChangePaymentMethod_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PaymentHandlerHost_ChangeShippingOption_ParamsDataView {
 public:
  PaymentHandlerHost_ChangeShippingOption_ParamsDataView() = default;

  PaymentHandlerHost_ChangeShippingOption_ParamsDataView(
      internal::PaymentHandlerHost_ChangeShippingOption_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetShippingOptionIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadShippingOptionId(UserType* output) {
    
    auto* pointer = data_->shipping_option_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::PaymentHandlerHost_ChangeShippingOption_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PaymentHandlerHost_ChangeShippingOption_ResponseParamsDataView {
 public:
  PaymentHandlerHost_ChangeShippingOption_ResponseParamsDataView() = default;

  PaymentHandlerHost_ChangeShippingOption_ResponseParamsDataView(
      internal::PaymentHandlerHost_ChangeShippingOption_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetResponseDataDataView(
      PaymentRequestDetailsUpdateDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadResponseData(UserType* output) {
    
    auto* pointer = data_->response_data.Get();
    return mojo::internal::Deserialize<::payments::mojom::PaymentRequestDetailsUpdateDataView>(
        pointer, output, message_);
  }
 private:
  internal::PaymentHandlerHost_ChangeShippingOption_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PaymentHandlerHost_ChangeShippingAddress_ParamsDataView {
 public:
  PaymentHandlerHost_ChangeShippingAddress_ParamsDataView() = default;

  PaymentHandlerHost_ChangeShippingAddress_ParamsDataView(
      internal::PaymentHandlerHost_ChangeShippingAddress_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetShippingAddressDataView(
      ::payments::mojom::PaymentAddressDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadShippingAddress(UserType* output) {
    
    auto* pointer = data_->shipping_address.Get();
    return mojo::internal::Deserialize<::payments::mojom::PaymentAddressDataView>(
        pointer, output, message_);
  }
 private:
  internal::PaymentHandlerHost_ChangeShippingAddress_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class PaymentHandlerHost_ChangeShippingAddress_ResponseParamsDataView {
 public:
  PaymentHandlerHost_ChangeShippingAddress_ResponseParamsDataView() = default;

  PaymentHandlerHost_ChangeShippingAddress_ResponseParamsDataView(
      internal::PaymentHandlerHost_ChangeShippingAddress_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetResponseDataDataView(
      PaymentRequestDetailsUpdateDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadResponseData(UserType* output) {
    
    auto* pointer = data_->response_data.Get();
    return mojo::internal::Deserialize<::payments::mojom::PaymentRequestDetailsUpdateDataView>(
        pointer, output, message_);
  }
 private:
  internal::PaymentHandlerHost_ChangeShippingAddress_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};


inline void PaymentHandlerHost_ChangePaymentMethod_ParamsDataView::GetMethodDataDataView(
    PaymentHandlerMethodDataDataView* output) {
  auto pointer = data_->method_data.Get();
  *output = PaymentHandlerMethodDataDataView(pointer, message_);
}


inline void PaymentHandlerHost_ChangePaymentMethod_ResponseParamsDataView::GetResponseDataDataView(
    PaymentRequestDetailsUpdateDataView* output) {
  auto pointer = data_->response_data.Get();
  *output = PaymentRequestDetailsUpdateDataView(pointer, message_);
}


inline void PaymentHandlerHost_ChangeShippingOption_ParamsDataView::GetShippingOptionIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->shipping_option_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}


inline void PaymentHandlerHost_ChangeShippingOption_ResponseParamsDataView::GetResponseDataDataView(
    PaymentRequestDetailsUpdateDataView* output) {
  auto pointer = data_->response_data.Get();
  *output = PaymentRequestDetailsUpdateDataView(pointer, message_);
}


inline void PaymentHandlerHost_ChangeShippingAddress_ParamsDataView::GetShippingAddressDataView(
    ::payments::mojom::PaymentAddressDataView* output) {
  auto pointer = data_->shipping_address.Get();
  *output = ::payments::mojom::PaymentAddressDataView(pointer, message_);
}


inline void PaymentHandlerHost_ChangeShippingAddress_ResponseParamsDataView::GetResponseDataDataView(
    PaymentRequestDetailsUpdateDataView* output) {
  auto pointer = data_->response_data.Get();
  *output = PaymentRequestDetailsUpdateDataView(pointer, message_);
}

}  // namespace mojom
}  // namespace payments

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_PAYMENTS_PAYMENT_HANDLER_HOST_MOJOM_PARAMS_DATA_H_