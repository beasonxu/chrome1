// third_party/blink/public/mojom/webid/federated_auth_request.mojom.m.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import {mojo} from '../../../../../mojo/public/js/bindings.js';

import {
  Url as url_mojom_Url,
  UrlSpec as url_mojom_UrlSpec
} from '../../../../../url/mojom/url.mojom.m.js';


/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const RequestTokenStatusSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 */
export const RequestTokenStatus = {
  
  kSuccess: 0,
  kApprovalDeclined: 1,
  kErrorTooManyRequests: 2,
  kErrorCanceled: 3,
  kError: 4,
  MIN_VALUE: 0,
  MAX_VALUE: 4,
};

/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const LogoutRpsStatusSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 */
export const LogoutRpsStatus = {
  
  kSuccess: 0,
  kErrorTooManyRequests: 1,
  kError: 2,
  MIN_VALUE: 0,
  MAX_VALUE: 2,
};



/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export class FederatedAuthRequestPendingReceiver {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle, 'blink.mojom.FederatedAuthRequest', scope);
  }
}

/** @interface */
export class FederatedAuthRequestInterface {
  
  /**
   * @param { !IdentityProvider } identityProviderPtr
   * @param { !boolean } preferAutoSignIn
   * @return {!Promise<{
        status: !RequestTokenStatus,
        token: ?string,
   *  }>}
   */

  requestToken(identityProviderPtr, preferAutoSignIn) {}
  
  /**
   */

  cancelTokenRequest() {}
  
  /**
   * @param { !Array<!LogoutRpsRequest> } rpLogoutRequests
   * @return {!Promise<{
        status: !LogoutRpsStatus,
   *  }>}
   */

  logoutRps(rpLogoutRequests) {}
}

/**
 * @implements { FederatedAuthRequestInterface }
 */
export class FederatedAuthRequestRemote {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!FederatedAuthRequestPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          FederatedAuthRequestPendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!FederatedAuthRequestPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !IdentityProvider } identityProviderPtr
   * @param { !boolean } preferAutoSignIn
   * @return {!Promise<{
        status: !RequestTokenStatus,
        token: ?string,
   *  }>}
   */

  requestToken(
      identityProviderPtr,
      preferAutoSignIn) {
    return this.proxy.sendMessage(
        0,
        FederatedAuthRequest_RequestToken_ParamsSpec.$,
        FederatedAuthRequest_RequestToken_ResponseParamsSpec.$,
        [
          identityProviderPtr,
          preferAutoSignIn
        ]);
  }

  
  /**
   */

  cancelTokenRequest() {
    this.proxy.sendMessage(
        1,
        FederatedAuthRequest_CancelTokenRequest_ParamsSpec.$,
        null,
        [
        ]);
  }

  
  /**
   * @param { !Array<!LogoutRpsRequest> } rpLogoutRequests
   * @return {!Promise<{
        status: !LogoutRpsStatus,
   *  }>}
   */

  logoutRps(
      rpLogoutRequests) {
    return this.proxy.sendMessage(
        2,
        FederatedAuthRequest_LogoutRps_ParamsSpec.$,
        FederatedAuthRequest_LogoutRps_ResponseParamsSpec.$,
        [
          rpLogoutRequests
        ]);
  }
}

/**
 * An object which receives request messages for the FederatedAuthRequest
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class FederatedAuthRequestReceiver {
  /**
   * @param {!FederatedAuthRequestInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!FederatedAuthRequestRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        FederatedAuthRequestRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!FederatedAuthRequestRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        FederatedAuthRequest_RequestToken_ParamsSpec.$,
        FederatedAuthRequest_RequestToken_ResponseParamsSpec.$,
        impl.requestToken.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        FederatedAuthRequest_CancelTokenRequest_ParamsSpec.$,
        null,
        impl.cancelTokenRequest.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        FederatedAuthRequest_LogoutRps_ParamsSpec.$,
        FederatedAuthRequest_LogoutRps_ResponseParamsSpec.$,
        impl.logoutRps.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
}

export class FederatedAuthRequest {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "blink.mojom.FederatedAuthRequest";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!FederatedAuthRequestRemote}
   */
  static getRemote() {
    let remote = new FederatedAuthRequestRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
}


/**
 * An object which receives request messages for the FederatedAuthRequest
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class FederatedAuthRequestCallbackRouter {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      FederatedAuthRequestRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!FederatedAuthRequestRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.requestToken =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        FederatedAuthRequest_RequestToken_ParamsSpec.$,
        FederatedAuthRequest_RequestToken_ResponseParamsSpec.$,
        this.requestToken.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.cancelTokenRequest =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        FederatedAuthRequest_CancelTokenRequest_ParamsSpec.$,
        null,
        this.cancelTokenRequest.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.logoutRps =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        FederatedAuthRequest_LogoutRps_ParamsSpec.$,
        FederatedAuthRequest_LogoutRps_ResponseParamsSpec.$,
        this.logoutRps.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
}

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const LogoutRpsRequestSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const IdentityProviderSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const FederatedAuthRequest_RequestToken_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const FederatedAuthRequest_RequestToken_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const FederatedAuthRequest_CancelTokenRequest_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const FederatedAuthRequest_LogoutRps_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const FederatedAuthRequest_LogoutRps_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    LogoutRpsRequestSpec.$,
    'LogoutRpsRequest',
    [
      mojo.internal.StructField(
        'url', 0,
        0,
        url_mojom_UrlSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'accountId', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class LogoutRpsRequest {
  constructor() {
    /** @type { !url_mojom_Url } */
    this.url;
    /** @type { !string } */
    this.accountId;
  }
}



mojo.internal.Struct(
    IdentityProviderSpec.$,
    'IdentityProvider',
    [
      mojo.internal.StructField(
        'configUrl', 0,
        0,
        url_mojom_UrlSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'clientId', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'nonce', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class IdentityProvider {
  constructor() {
    /** @type { !url_mojom_Url } */
    this.configUrl;
    /** @type { !string } */
    this.clientId;
    /** @type { !string } */
    this.nonce;
  }
}



mojo.internal.Struct(
    FederatedAuthRequest_RequestToken_ParamsSpec.$,
    'FederatedAuthRequest_RequestToken_Params',
    [
      mojo.internal.StructField(
        'identityProviderPtr', 0,
        0,
        IdentityProviderSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'preferAutoSignIn', 8,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class FederatedAuthRequest_RequestToken_Params {
  constructor() {
    /** @type { !IdentityProvider } */
    this.identityProviderPtr;
    /** @type { !boolean } */
    this.preferAutoSignIn;
  }
}



mojo.internal.Struct(
    FederatedAuthRequest_RequestToken_ResponseParamsSpec.$,
    'FederatedAuthRequest_RequestToken_ResponseParams',
    [
      mojo.internal.StructField(
        'status', 0,
        0,
        RequestTokenStatusSpec.$,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'token', 8,
        0,
        mojo.internal.String,
        null,
        true /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class FederatedAuthRequest_RequestToken_ResponseParams {
  constructor() {
    /** @type { !RequestTokenStatus } */
    this.status;
    /** @type { (string|undefined) } */
    this.token;
  }
}



mojo.internal.Struct(
    FederatedAuthRequest_CancelTokenRequest_ParamsSpec.$,
    'FederatedAuthRequest_CancelTokenRequest_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class FederatedAuthRequest_CancelTokenRequest_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    FederatedAuthRequest_LogoutRps_ParamsSpec.$,
    'FederatedAuthRequest_LogoutRps_Params',
    [
      mojo.internal.StructField(
        'rpLogoutRequests', 0,
        0,
        mojo.internal.Array(LogoutRpsRequestSpec.$, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class FederatedAuthRequest_LogoutRps_Params {
  constructor() {
    /** @type { !Array<!LogoutRpsRequest> } */
    this.rpLogoutRequests;
  }
}



mojo.internal.Struct(
    FederatedAuthRequest_LogoutRps_ResponseParamsSpec.$,
    'FederatedAuthRequest_LogoutRps_ResponseParams',
    [
      mojo.internal.StructField(
        'status', 0,
        0,
        LogoutRpsStatusSpec.$,
        0,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class FederatedAuthRequest_LogoutRps_ResponseParams {
  constructor() {
    /** @type { !LogoutRpsStatus } */
    this.status;
  }
}

