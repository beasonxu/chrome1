// third_party/blink/public/mojom/service_worker/service_worker_worker_client_registry.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_SERVICE_WORKER_SERVICE_WORKER_WORKER_CLIENT_REGISTRY_MOJOM_TEST_UTILS_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_SERVICE_WORKER_SERVICE_WORKER_WORKER_CLIENT_REGISTRY_MOJOM_TEST_UTILS_H_

#include "third_party/blink/public/mojom/service_worker/service_worker_worker_client_registry.mojom.h"
#include "third_party/blink/public/common/common_export.h"


namespace blink {
namespace mojom {


class BLINK_COMMON_EXPORT ServiceWorkerWorkerClientRegistryInterceptorForTesting : public ServiceWorkerWorkerClientRegistry {
  virtual ServiceWorkerWorkerClientRegistry* GetForwardingInterface() = 0;
  void RegisterWorkerClient(::mojo::PendingRemote<::blink::mojom::ServiceWorkerWorkerClient> client) override;
  void CloneWorkerClientRegistry(::mojo::PendingReceiver<ServiceWorkerWorkerClientRegistry> host) override;
};
class BLINK_COMMON_EXPORT ServiceWorkerWorkerClientRegistryAsyncWaiter {
 public:
  explicit ServiceWorkerWorkerClientRegistryAsyncWaiter(ServiceWorkerWorkerClientRegistry* proxy);

  ServiceWorkerWorkerClientRegistryAsyncWaiter(const ServiceWorkerWorkerClientRegistryAsyncWaiter&) = delete;
  ServiceWorkerWorkerClientRegistryAsyncWaiter& operator=(const ServiceWorkerWorkerClientRegistryAsyncWaiter&) = delete;

  ~ServiceWorkerWorkerClientRegistryAsyncWaiter();

 private:
  ServiceWorkerWorkerClientRegistry* const proxy_;
};




}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_SERVICE_WORKER_SERVICE_WORKER_WORKER_CLIENT_REGISTRY_MOJOM_TEST_UTILS_H_