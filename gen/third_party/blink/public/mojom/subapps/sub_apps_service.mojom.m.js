// third_party/blink/public/mojom/subapps/sub_apps_service.mojom.m.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import {mojo} from '../../../../../mojo/public/js/bindings.js';

import {
  Url as url_mojom_Url,
  UrlSpec as url_mojom_UrlSpec
} from '../../../../../url/mojom/url.mojom.m.js';


/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const SubAppsServiceResultSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 */
export const SubAppsServiceResult = {
  
  kSuccess: 0,
  kFailure: 1,
  MIN_VALUE: 0,
  MAX_VALUE: 1,
};

/**
 * @const { {$: !mojo.internal.MojomType} }
 */
export const SubAppsServiceAddResultCodeSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 */
export const SubAppsServiceAddResultCode = {
  
  kSuccessNewInstall: 0,
  kSuccessAlreadyInstalled: 1,
  kUserInstallDeclined: 2,
  kExpectedAppIdCheckFailed: 3,
  kParentAppUninstalled: 4,
  kFailure: 5,
  MIN_VALUE: 0,
  MAX_VALUE: 5,
};



/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export class SubAppsServicePendingReceiver {
  /**
   * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
   */
  constructor(handle) {
    /** @public {!mojo.internal.interfaceSupport.Endpoint} */
    this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
  }

  /** @param {string=} scope */
  bindInBrowser(scope = 'context') {
    mojo.internal.interfaceSupport.bind(
        this.handle, 'blink.mojom.SubAppsService', scope);
  }
}

/** @interface */
export class SubAppsServiceInterface {
  
  /**
   * @param { !Array<!SubAppsServiceAddInfo> } subApps
   * @return {!Promise<{
        result: !Array<!SubAppsServiceAddResult>,
   *  }>}
   */

  add(subApps) {}
  
  /**
   * @return {!Promise<{
        result: !SubAppsServiceListResult,
   *  }>}
   */

  list() {}
  
  /**
   * @param { !string } unhashedAppId
   * @return {!Promise<{
        result: !SubAppsServiceResult,
   *  }>}
   */

  remove(unhashedAppId) {}
}

/**
 * @implements { SubAppsServiceInterface }
 */
export class SubAppsServiceRemote {
  /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
  constructor(handle = undefined) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!SubAppsServicePendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          SubAppsServicePendingReceiver,
          handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!SubAppsServicePendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !Array<!SubAppsServiceAddInfo> } subApps
   * @return {!Promise<{
        result: !Array<!SubAppsServiceAddResult>,
   *  }>}
   */

  add(
      subApps) {
    return this.proxy.sendMessage(
        0,
        SubAppsService_Add_ParamsSpec.$,
        SubAppsService_Add_ResponseParamsSpec.$,
        [
          subApps
        ]);
  }

  
  /**
   * @return {!Promise<{
        result: !SubAppsServiceListResult,
   *  }>}
   */

  list() {
    return this.proxy.sendMessage(
        1,
        SubAppsService_List_ParamsSpec.$,
        SubAppsService_List_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !string } unhashedAppId
   * @return {!Promise<{
        result: !SubAppsServiceResult,
   *  }>}
   */

  remove(
      unhashedAppId) {
    return this.proxy.sendMessage(
        2,
        SubAppsService_Remove_ParamsSpec.$,
        SubAppsService_Remove_ResponseParamsSpec.$,
        [
          unhashedAppId
        ]);
  }
}

/**
 * An object which receives request messages for the SubAppsService
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class SubAppsServiceReceiver {
  /**
   * @param {!SubAppsServiceInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!SubAppsServiceRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        SubAppsServiceRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!SubAppsServiceRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        0,
        SubAppsService_Add_ParamsSpec.$,
        SubAppsService_Add_ResponseParamsSpec.$,
        impl.add.bind(impl));
    this.helper_internal_.registerHandler(
        1,
        SubAppsService_List_ParamsSpec.$,
        SubAppsService_List_ResponseParamsSpec.$,
        impl.list.bind(impl));
    this.helper_internal_.registerHandler(
        2,
        SubAppsService_Remove_ParamsSpec.$,
        SubAppsService_Remove_ResponseParamsSpec.$,
        impl.remove.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
}

export class SubAppsService {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "blink.mojom.SubAppsService";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!SubAppsServiceRemote}
   */
  static getRemote() {
    let remote = new SubAppsServiceRemote;
    remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
    return remote;
  }
}


/**
 * An object which receives request messages for the SubAppsService
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class SubAppsServiceCallbackRouter {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      SubAppsServiceRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!SubAppsServiceRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.add =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        0,
        SubAppsService_Add_ParamsSpec.$,
        SubAppsService_Add_ResponseParamsSpec.$,
        this.add.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.list =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1,
        SubAppsService_List_ParamsSpec.$,
        SubAppsService_List_ResponseParamsSpec.$,
        this.list.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.remove =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2,
        SubAppsService_Remove_ParamsSpec.$,
        SubAppsService_Remove_ResponseParamsSpec.$,
        this.remove.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
}

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SubAppsServiceAddInfoSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SubAppsServiceAddResultSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SubAppsServiceListResultSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SubAppsService_Add_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SubAppsService_Add_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SubAppsService_List_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SubAppsService_List_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SubAppsService_Remove_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const SubAppsService_Remove_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    SubAppsServiceAddInfoSpec.$,
    'SubAppsServiceAddInfo',
    [
      mojo.internal.StructField(
        'unhashedAppId', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'installUrl', 8,
        0,
        url_mojom_UrlSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class SubAppsServiceAddInfo {
  constructor() {
    /** @type { !string } */
    this.unhashedAppId;
    /** @type { !url_mojom_Url } */
    this.installUrl;
  }
}



mojo.internal.Struct(
    SubAppsServiceAddResultSpec.$,
    'SubAppsServiceAddResult',
    [
      mojo.internal.StructField(
        'unhashedAppId', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'resultCode', 8,
        0,
        SubAppsServiceAddResultCodeSpec.$,
        0,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class SubAppsServiceAddResult {
  constructor() {
    /** @type { !string } */
    this.unhashedAppId;
    /** @type { !SubAppsServiceAddResultCode } */
    this.resultCode;
  }
}



mojo.internal.Struct(
    SubAppsServiceListResultSpec.$,
    'SubAppsServiceListResult',
    [
      mojo.internal.StructField(
        'code', 0,
        0,
        SubAppsServiceResultSpec.$,
        0,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'subAppIds', 8,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class SubAppsServiceListResult {
  constructor() {
    /** @type { !SubAppsServiceResult } */
    this.code;
    /** @type { !Array<!string> } */
    this.subAppIds;
  }
}



mojo.internal.Struct(
    SubAppsService_Add_ParamsSpec.$,
    'SubAppsService_Add_Params',
    [
      mojo.internal.StructField(
        'subApps', 0,
        0,
        mojo.internal.Array(SubAppsServiceAddInfoSpec.$, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class SubAppsService_Add_Params {
  constructor() {
    /** @type { !Array<!SubAppsServiceAddInfo> } */
    this.subApps;
  }
}



mojo.internal.Struct(
    SubAppsService_Add_ResponseParamsSpec.$,
    'SubAppsService_Add_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Array(SubAppsServiceAddResultSpec.$, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class SubAppsService_Add_ResponseParams {
  constructor() {
    /** @type { !Array<!SubAppsServiceAddResult> } */
    this.result;
  }
}



mojo.internal.Struct(
    SubAppsService_List_ParamsSpec.$,
    'SubAppsService_List_Params',
    [
    ],
    [[0, 8],]);



/**
 * @record
 */
export class SubAppsService_List_Params {
  constructor() {
  }
}



mojo.internal.Struct(
    SubAppsService_List_ResponseParamsSpec.$,
    'SubAppsService_List_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        SubAppsServiceListResultSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class SubAppsService_List_ResponseParams {
  constructor() {
    /** @type { !SubAppsServiceListResult } */
    this.result;
  }
}



mojo.internal.Struct(
    SubAppsService_Remove_ParamsSpec.$,
    'SubAppsService_Remove_Params',
    [
      mojo.internal.StructField(
        'unhashedAppId', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class SubAppsService_Remove_Params {
  constructor() {
    /** @type { !string } */
    this.unhashedAppId;
  }
}



mojo.internal.Struct(
    SubAppsService_Remove_ResponseParamsSpec.$,
    'SubAppsService_Remove_ResponseParams',
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        SubAppsServiceResultSpec.$,
        0,
        false /* nullable */,
        0),
    ],
    [[0, 16],]);



/**
 * @record
 */
export class SubAppsService_Remove_ResponseParams {
  constructor() {
    /** @type { !SubAppsServiceResult } */
    this.result;
  }
}

