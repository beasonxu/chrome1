// third_party/blink/public/mojom/subapps/sub_apps_service.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_SUBAPPS_SUB_APPS_SERVICE_MOJOM_PARAMS_DATA_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_SUBAPPS_SUB_APPS_SERVICE_MOJOM_PARAMS_DATA_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace blink {
namespace mojom {
namespace internal {

class ValidationContext;
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SubAppsService_Add_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<internal::SubAppsServiceAddInfo_Data>>> sub_apps;

 private:
  friend class mojo::internal::MessageFragment<SubAppsService_Add_Params_Data>;

  SubAppsService_Add_Params_Data();
  ~SubAppsService_Add_Params_Data() = delete;
};
static_assert(sizeof(SubAppsService_Add_Params_Data) == 16,
              "Bad sizeof(SubAppsService_Add_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SubAppsService_Add_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<internal::SubAppsServiceAddResult_Data>>> result;

 private:
  friend class mojo::internal::MessageFragment<SubAppsService_Add_ResponseParams_Data>;

  SubAppsService_Add_ResponseParams_Data();
  ~SubAppsService_Add_ResponseParams_Data() = delete;
};
static_assert(sizeof(SubAppsService_Add_ResponseParams_Data) == 16,
              "Bad sizeof(SubAppsService_Add_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SubAppsService_List_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  friend class mojo::internal::MessageFragment<SubAppsService_List_Params_Data>;

  SubAppsService_List_Params_Data();
  ~SubAppsService_List_Params_Data() = delete;
};
static_assert(sizeof(SubAppsService_List_Params_Data) == 8,
              "Bad sizeof(SubAppsService_List_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SubAppsService_List_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::SubAppsServiceListResult_Data> result;

 private:
  friend class mojo::internal::MessageFragment<SubAppsService_List_ResponseParams_Data>;

  SubAppsService_List_ResponseParams_Data();
  ~SubAppsService_List_ResponseParams_Data() = delete;
};
static_assert(sizeof(SubAppsService_List_ResponseParams_Data) == 16,
              "Bad sizeof(SubAppsService_List_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SubAppsService_Remove_Params_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> unhashed_app_id;

 private:
  friend class mojo::internal::MessageFragment<SubAppsService_Remove_Params_Data>;

  SubAppsService_Remove_Params_Data();
  ~SubAppsService_Remove_Params_Data() = delete;
};
static_assert(sizeof(SubAppsService_Remove_Params_Data) == 16,
              "Bad sizeof(SubAppsService_Remove_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_BLINK_COMMON_EXPORT) SubAppsService_Remove_ResponseParams_Data {
 public:
  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t result;
  uint8_t padfinal_[4];

 private:
  friend class mojo::internal::MessageFragment<SubAppsService_Remove_ResponseParams_Data>;

  SubAppsService_Remove_ResponseParams_Data();
  ~SubAppsService_Remove_ResponseParams_Data() = delete;
};
static_assert(sizeof(SubAppsService_Remove_ResponseParams_Data) == 16,
              "Bad sizeof(SubAppsService_Remove_ResponseParams_Data)");

}  // namespace internal


class SubAppsService_Add_ParamsDataView {
 public:
  SubAppsService_Add_ParamsDataView() = default;

  SubAppsService_Add_ParamsDataView(
      internal::SubAppsService_Add_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetSubAppsDataView(
      mojo::ArrayDataView<SubAppsServiceAddInfoDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadSubApps(UserType* output) {
    
    auto* pointer = data_->sub_apps.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::blink::mojom::SubAppsServiceAddInfoDataView>>(
        pointer, output, message_);
  }
 private:
  internal::SubAppsService_Add_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SubAppsService_Add_ResponseParamsDataView {
 public:
  SubAppsService_Add_ResponseParamsDataView() = default;

  SubAppsService_Add_ResponseParamsDataView(
      internal::SubAppsService_Add_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetResultDataView(
      mojo::ArrayDataView<SubAppsServiceAddResultDataView>* output);

  template <typename UserType>
  [[nodiscard]] bool ReadResult(UserType* output) {
    
    auto* pointer = data_->result.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::blink::mojom::SubAppsServiceAddResultDataView>>(
        pointer, output, message_);
  }
 private:
  internal::SubAppsService_Add_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SubAppsService_List_ParamsDataView {
 public:
  SubAppsService_List_ParamsDataView() = default;

  SubAppsService_List_ParamsDataView(
      internal::SubAppsService_List_Params_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::SubAppsService_List_Params_Data* data_ = nullptr;
};



class SubAppsService_List_ResponseParamsDataView {
 public:
  SubAppsService_List_ResponseParamsDataView() = default;

  SubAppsService_List_ResponseParamsDataView(
      internal::SubAppsService_List_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetResultDataView(
      SubAppsServiceListResultDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadResult(UserType* output) {
    
    auto* pointer = data_->result.Get();
    return mojo::internal::Deserialize<::blink::mojom::SubAppsServiceListResultDataView>(
        pointer, output, message_);
  }
 private:
  internal::SubAppsService_List_ResponseParams_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SubAppsService_Remove_ParamsDataView {
 public:
  SubAppsService_Remove_ParamsDataView() = default;

  SubAppsService_Remove_ParamsDataView(
      internal::SubAppsService_Remove_Params_Data* data,
      mojo::Message* message)
      : data_(data), message_(message) {}

  bool is_null() const { return !data_; }
  inline void GetUnhashedAppIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  [[nodiscard]] bool ReadUnhashedAppId(UserType* output) {
    
    auto* pointer = data_->unhashed_app_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, message_);
  }
 private:
  internal::SubAppsService_Remove_Params_Data* data_ = nullptr;
  mojo::Message* message_ = nullptr;
};



class SubAppsService_Remove_ResponseParamsDataView {
 public:
  SubAppsService_Remove_ResponseParamsDataView() = default;

  SubAppsService_Remove_ResponseParamsDataView(
      internal::SubAppsService_Remove_ResponseParams_Data* data,
      mojo::Message* message)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  [[nodiscard]] bool ReadResult(UserType* output) const {
    auto data_value = data_->result;
    return mojo::internal::Deserialize<::blink::mojom::SubAppsServiceResult>(
        data_value, output);
  }
  SubAppsServiceResult result() const {
    return ::mojo::internal::ToKnownEnumValueHelper(
          static_cast<::blink::mojom::SubAppsServiceResult>(data_->result));
  }
 private:
  internal::SubAppsService_Remove_ResponseParams_Data* data_ = nullptr;
};


inline void SubAppsService_Add_ParamsDataView::GetSubAppsDataView(
    mojo::ArrayDataView<SubAppsServiceAddInfoDataView>* output) {
  auto pointer = data_->sub_apps.Get();
  *output = mojo::ArrayDataView<SubAppsServiceAddInfoDataView>(pointer, message_);
}


inline void SubAppsService_Add_ResponseParamsDataView::GetResultDataView(
    mojo::ArrayDataView<SubAppsServiceAddResultDataView>* output) {
  auto pointer = data_->result.Get();
  *output = mojo::ArrayDataView<SubAppsServiceAddResultDataView>(pointer, message_);
}




inline void SubAppsService_List_ResponseParamsDataView::GetResultDataView(
    SubAppsServiceListResultDataView* output) {
  auto pointer = data_->result.Get();
  *output = SubAppsServiceListResultDataView(pointer, message_);
}


inline void SubAppsService_Remove_ParamsDataView::GetUnhashedAppIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->unhashed_app_id.Get();
  *output = mojo::StringDataView(pointer, message_);
}



}  // namespace mojom
}  // namespace blink

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_SUBAPPS_SUB_APPS_SERVICE_MOJOM_PARAMS_DATA_H_