// third_party/blink/public/mojom/digital_goods/digital_goods.mojom-shared.cc is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#include "third_party/blink/public/mojom/digital_goods/digital_goods.mojom-shared.h"

// Used to support stream output operator for enums.
// TODO(dcheng): Consider omitting this somehow if not needed.
#include <ostream>
#include <utility>

#include "base/strings/stringprintf.h"
#include "mojo/public/cpp/bindings/lib/validate_params.h"
#include "mojo/public/cpp/bindings/lib/validation_errors.h"
#include "mojo/public/cpp/bindings/lib/validation_util.h"
#include "third_party/perfetto/include/perfetto/tracing/traced_value.h"

#include "third_party/blink/public/mojom/digital_goods/digital_goods.mojom-params-data.h"
namespace payments {
namespace mojom {

namespace internal {


// static
bool DigitalGoods_GetDetails_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const DigitalGoods_GetDetails_Params_Data* object =
      static_cast<const DigitalGoods_GetDetails_Params_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->item_ids, 1, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams item_ids_validate_params(
      0, false, new mojo::internal::ContainerValidateParams(0, false, nullptr));
  if (!mojo::internal::ValidateContainer(object->item_ids, validation_context,
                                         &item_ids_validate_params)) {
    return false;
  }

  return true;
}

DigitalGoods_GetDetails_Params_Data::DigitalGoods_GetDetails_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool DigitalGoods_GetDetails_ResponseParams_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 24, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const DigitalGoods_GetDetails_ResponseParams_Data* object =
      static_cast<const DigitalGoods_GetDetails_ResponseParams_Data*>(data);


  if (!::payments::mojom::internal::BillingResponseCode_Data
        ::Validate(object->code, validation_context))
    return false;

  if (!mojo::internal::ValidatePointerNonNullable(
          object->item_details_list, 2, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams item_details_list_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->item_details_list, validation_context,
                                         &item_details_list_validate_params)) {
    return false;
  }

  return true;
}

DigitalGoods_GetDetails_ResponseParams_Data::DigitalGoods_GetDetails_ResponseParams_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool DigitalGoods_ListPurchases_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const DigitalGoods_ListPurchases_Params_Data* object =
      static_cast<const DigitalGoods_ListPurchases_Params_Data*>(data);

  return true;
}

DigitalGoods_ListPurchases_Params_Data::DigitalGoods_ListPurchases_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool DigitalGoods_ListPurchases_ResponseParams_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 24, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const DigitalGoods_ListPurchases_ResponseParams_Data* object =
      static_cast<const DigitalGoods_ListPurchases_ResponseParams_Data*>(data);


  if (!::payments::mojom::internal::BillingResponseCode_Data
        ::Validate(object->code, validation_context))
    return false;

  if (!mojo::internal::ValidatePointerNonNullable(
          object->purchase_reference_list, 2, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams purchase_reference_list_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->purchase_reference_list, validation_context,
                                         &purchase_reference_list_validate_params)) {
    return false;
  }

  return true;
}

DigitalGoods_ListPurchases_ResponseParams_Data::DigitalGoods_ListPurchases_ResponseParams_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool DigitalGoods_ListPurchaseHistory_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 8, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const DigitalGoods_ListPurchaseHistory_Params_Data* object =
      static_cast<const DigitalGoods_ListPurchaseHistory_Params_Data*>(data);

  return true;
}

DigitalGoods_ListPurchaseHistory_Params_Data::DigitalGoods_ListPurchaseHistory_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool DigitalGoods_ListPurchaseHistory_ResponseParams_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 24, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const DigitalGoods_ListPurchaseHistory_ResponseParams_Data* object =
      static_cast<const DigitalGoods_ListPurchaseHistory_ResponseParams_Data*>(data);


  if (!::payments::mojom::internal::BillingResponseCode_Data
        ::Validate(object->code, validation_context))
    return false;

  if (!mojo::internal::ValidatePointerNonNullable(
          object->purchase_reference_list, 2, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams purchase_reference_list_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->purchase_reference_list, validation_context,
                                         &purchase_reference_list_validate_params)) {
    return false;
  }

  return true;
}

DigitalGoods_ListPurchaseHistory_ResponseParams_Data::DigitalGoods_ListPurchaseHistory_ResponseParams_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool DigitalGoods_Consume_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const DigitalGoods_Consume_Params_Data* object =
      static_cast<const DigitalGoods_Consume_Params_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->purchase_token, 1, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams purchase_token_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->purchase_token, validation_context,
                                         &purchase_token_validate_params)) {
    return false;
  }

  return true;
}

DigitalGoods_Consume_Params_Data::DigitalGoods_Consume_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool DigitalGoods_Consume_ResponseParams_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const DigitalGoods_Consume_ResponseParams_Data* object =
      static_cast<const DigitalGoods_Consume_ResponseParams_Data*>(data);


  if (!::payments::mojom::internal::BillingResponseCode_Data
        ::Validate(object->code, validation_context))
    return false;

  return true;
}

DigitalGoods_Consume_ResponseParams_Data::DigitalGoods_Consume_ResponseParams_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool DigitalGoodsFactory_CreateDigitalGoods_Params_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 16, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const DigitalGoodsFactory_CreateDigitalGoods_Params_Data* object =
      static_cast<const DigitalGoodsFactory_CreateDigitalGoods_Params_Data*>(data);

  if (!mojo::internal::ValidatePointerNonNullable(
          object->payment_method, 1, validation_context)) {
    return false;
  }
  const mojo::internal::ContainerValidateParams payment_method_validate_params(
      0, false, nullptr);
  if (!mojo::internal::ValidateContainer(object->payment_method, validation_context,
                                         &payment_method_validate_params)) {
    return false;
  }

  return true;
}

DigitalGoodsFactory_CreateDigitalGoods_Params_Data::DigitalGoodsFactory_CreateDigitalGoods_Params_Data()
    : header_({sizeof(*this), 0}) {}


// static
bool DigitalGoodsFactory_CreateDigitalGoods_ResponseParams_Data::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  if (!data)
    return true;
  if (!ValidateUnversionedStructHeaderAndSizeAndClaimMemory(
          data, 24, validation_context)) {
    return false;
  }

  // NOTE: The memory backing |object| may be smaller than |sizeof(*object)| if
  // the message comes from an older version.
  [[maybe_unused]] const DigitalGoodsFactory_CreateDigitalGoods_ResponseParams_Data* object =
      static_cast<const DigitalGoodsFactory_CreateDigitalGoods_ResponseParams_Data*>(data);


  if (!::payments::mojom::internal::CreateDigitalGoodsResponseCode_Data
        ::Validate(object->code, validation_context))
    return false;

  if (!mojo::internal::ValidateHandleOrInterface(object->digital_goods,
                                                 validation_context)) {
    return false;
  }

  return true;
}

DigitalGoodsFactory_CreateDigitalGoods_ResponseParams_Data::DigitalGoodsFactory_CreateDigitalGoods_ResponseParams_Data()
    : header_({sizeof(*this), 0}) {}

}  // namespace internal
}  // namespace mojom
}  // namespace payments