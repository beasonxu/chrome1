// third_party/blink/public/mojom/render_accessibility.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_RENDER_ACCESSIBILITY_MOJOM_TEST_UTILS_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_RENDER_ACCESSIBILITY_MOJOM_TEST_UTILS_H_

#include "third_party/blink/public/mojom/render_accessibility.mojom.h"
#include "third_party/blink/public/common/common_export.h"


namespace blink {
namespace mojom {


class BLINK_COMMON_EXPORT RenderAccessibilityHostInterceptorForTesting : public RenderAccessibilityHost {
  virtual RenderAccessibilityHost* GetForwardingInterface() = 0;
  void HandleAXEvents(AXUpdatesAndEventsPtr events_and_updates, int32_t reset_token, HandleAXEventsCallback callback) override;
  void HandleAXLocationChanges(std::vector<LocationChangesPtr> changes) override;
};
class BLINK_COMMON_EXPORT RenderAccessibilityHostAsyncWaiter {
 public:
  explicit RenderAccessibilityHostAsyncWaiter(RenderAccessibilityHost* proxy);

  RenderAccessibilityHostAsyncWaiter(const RenderAccessibilityHostAsyncWaiter&) = delete;
  RenderAccessibilityHostAsyncWaiter& operator=(const RenderAccessibilityHostAsyncWaiter&) = delete;

  ~RenderAccessibilityHostAsyncWaiter();
  void HandleAXEvents(
      AXUpdatesAndEventsPtr events_and_updates, int32_t reset_token);

 private:
  RenderAccessibilityHost* const proxy_;
};


class BLINK_COMMON_EXPORT RenderAccessibilityInterceptorForTesting : public RenderAccessibility {
  virtual RenderAccessibility* GetForwardingInterface() = 0;
  void SetMode(uint32_t ax_mode) override;
  void FatalError() override;
  void HitTest(const ::gfx::Point& point, ::ax::mojom::Event event_to_fire, int32_t request_id, HitTestCallback callback) override;
  void PerformAction(const ::ui::AXActionData& action_data) override;
  void Reset(int32_t reset_token) override;
};
class BLINK_COMMON_EXPORT RenderAccessibilityAsyncWaiter {
 public:
  explicit RenderAccessibilityAsyncWaiter(RenderAccessibility* proxy);

  RenderAccessibilityAsyncWaiter(const RenderAccessibilityAsyncWaiter&) = delete;
  RenderAccessibilityAsyncWaiter& operator=(const RenderAccessibilityAsyncWaiter&) = delete;

  ~RenderAccessibilityAsyncWaiter();
  void HitTest(
      const ::gfx::Point& point, ::ax::mojom::Event event_to_fire, int32_t request_id, HitTestResponsePtr* out_hit_test_response);

 private:
  RenderAccessibility* const proxy_;
};




}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_RENDER_ACCESSIBILITY_MOJOM_TEST_UTILS_H_