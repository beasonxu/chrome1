// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// DO NOT EDIT: This file is auto-generated by
// //third_party/blink/renderer/bindings/scripts/generate_bindings.py
//
// Use the GN flag `blink_enable_generated_code_formatting=true` to enable
// formatting of the generated files.

#ifndef THIRD_PARTY_BLINK_RENDERER_BINDINGS_MODULES_V8_V8_TYPEDEFS_H_
#define THIRD_PARTY_BLINK_RENDERER_BINDINGS_MODULES_V8_V8_TYPEDEFS_H_



namespace blink {

class V8UnionArrayBufferAllowSharedOrArrayBufferViewAllowShared;
class V8UnionArrayBufferAllowSharedOrArrayBufferViewAllowSharedOrReadableStream;
class V8UnionArrayBufferOrArrayBufferViewOrBlobOrUSVStringOrWriteParams;
class V8UnionArrayBufferOrArrayBufferViewOrJsonWebKey;
class V8UnionArrayBufferOrArrayBufferViewOrNDEFMessageInitOrString;
class V8UnionArrayBufferOrArrayBufferViewOrUSVString;
class V8UnionBlobOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrImageDataOrOffscreenCanvasOrSVGImageElementOrVideoFrame;
class V8UnionBooleanOrConstrainBooleanParameters;
class V8UnionBooleanOrConstrainDoubleRangeOrDouble;
class V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrame;
class V8UnionCanvasRenderingContext2DOrGPUCanvasContextOrImageBitmapRenderingContextOrWebGL2RenderingContextOrWebGLRenderingContext;
class V8UnionConstrainDOMStringParametersOrStringOrStringSequence;
class V8UnionConstrainDoubleRangeOrDouble;
class V8UnionConstrainLongRangeOrLong;
class V8UnionConstrainPoint2DParametersOrPoint2DSequence;
class V8UnionDOMExceptionOrOverconstrainedError;
class V8UnionDOMMatrixOrFloat32ArrayOrFloat64Array;
class V8UnionDocumentOrDocumentFragment;
class V8UnionDoubleSequenceOrGPUColorDict;
class V8UnionDoubleSequenceOrGPUColorDictOrGPULoadOp;
class V8UnionEncodedAudioChunkOrEncodedAudioChunkOrEncodedVideoChunkSequenceOrEncodedVideoChunk;
class V8UnionGPUBufferBindingOrGPUExternalTextureOrGPUSamplerOrGPUTextureView;
class V8UnionGPUCanvasContextOrImageBitmapRenderingContextOrOffscreenCanvasRenderingContext2DOrWebGL2RenderingContextOrWebGLRenderingContext;
class V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequence;
class V8UnionGPULoadOpOrUnsignedLongEnforceRange;
class V8UnionGPUOrigin2DDictOrUnsignedLongEnforceRangeSequence;
class V8UnionGPUOrigin3DDictOrUnsignedLongEnforceRangeSequence;
class V8UnionHTMLFormElementOrPasswordCredentialData;
class V8UnionMediaSourceHandleOrMediaStream;
class V8UnionObjectOrObjectArray;
class V8UnionObjectOrString;
class V8UnionStringOrUnsignedLong;
class V8UnionURLPatternInitOrUSVString;
class V8UnionWebGL2RenderingContextOrWebGLRenderingContext;

// Typedefs to IDL unions
using V8AlgorithmIdentifier = V8UnionObjectOrString;
using V8AllowSharedBufferSource = V8UnionArrayBufferAllowSharedOrArrayBufferViewAllowShared;
using V8BluetoothCharacteristicUUID = V8UnionStringOrUnsignedLong;
using V8BluetoothDescriptorUUID = V8UnionStringOrUnsignedLong;
using V8BluetoothServiceUUID = V8UnionStringOrUnsignedLong;
using V8CanvasFilterInput = V8UnionObjectOrObjectArray;
using V8CanvasImageSource = V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrame;
using V8ConstrainBoolean = V8UnionBooleanOrConstrainBooleanParameters;
using V8ConstrainDOMString = V8UnionConstrainDOMStringParametersOrStringOrStringSequence;
using V8ConstrainDouble = V8UnionConstrainDoubleRangeOrDouble;
using V8ConstrainLong = V8UnionConstrainLongRangeOrLong;
using V8ConstrainPoint2D = V8UnionConstrainPoint2DParametersOrPoint2DSequence;
using V8EncodedChunks = V8UnionEncodedAudioChunkOrEncodedAudioChunkOrEncodedVideoChunkSequenceOrEncodedVideoChunk;
using V8GPUBindingResource = V8UnionGPUBufferBindingOrGPUExternalTextureOrGPUSamplerOrGPUTextureView;
using V8GPUColor = V8UnionDoubleSequenceOrGPUColorDict;
using V8GPUExtent3D = V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequence;
using V8GPUOrigin2D = V8UnionGPUOrigin2DDictOrUnsignedLongEnforceRangeSequence;
using V8GPUOrigin3D = V8UnionGPUOrigin3DDictOrUnsignedLongEnforceRangeSequence;
using V8ImageBitmapSource = V8UnionBlobOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrImageDataOrOffscreenCanvasOrSVGImageElementOrVideoFrame;
using V8ImageBufferSource = V8UnionArrayBufferAllowSharedOrArrayBufferViewAllowSharedOrReadableStream;
using V8MediaProvider = V8UnionMediaSourceHandleOrMediaStream;
using V8MediaStreamError = V8UnionDOMExceptionOrOverconstrainedError;
using V8NDEFMessageSource = V8UnionArrayBufferOrArrayBufferViewOrNDEFMessageInitOrString;
using V8OffscreenRenderingContext = V8UnionGPUCanvasContextOrImageBitmapRenderingContextOrOffscreenCanvasRenderingContext2DOrWebGL2RenderingContextOrWebGLRenderingContext;
using V8PasswordCredentialInit = V8UnionHTMLFormElementOrPasswordCredentialData;
using V8PushMessageDataInit = V8UnionArrayBufferOrArrayBufferViewOrUSVString;
using V8RenderingContext = V8UnionCanvasRenderingContext2DOrGPUCanvasContextOrImageBitmapRenderingContextOrWebGL2RenderingContextOrWebGLRenderingContext;
using V8RotationMatrixType = V8UnionDOMMatrixOrFloat32ArrayOrFloat64Array;
using V8SanitizerInput = V8UnionDocumentOrDocumentFragment;
using V8URLPatternInput = V8UnionURLPatternInitOrUSVString;
using V8XRWebGLRenderingContext = V8UnionWebGL2RenderingContextOrWebGLRenderingContext;

// Unions including typedef'ed member types
using V8UnionBlobOrBufferSourceOrUSVStringOrWriteParams = V8UnionArrayBufferOrArrayBufferViewOrBlobOrUSVStringOrWriteParams;
using V8UnionBufferSourceOrJsonWebKey = V8UnionArrayBufferOrArrayBufferViewOrJsonWebKey;
using V8UnionBufferSourceOrNDEFMessageInitOrString = V8UnionArrayBufferOrArrayBufferViewOrNDEFMessageInitOrString;
using V8UnionBooleanOrConstrainDouble = V8UnionBooleanOrConstrainDoubleRangeOrDouble;
using V8UnionGPUColorOrGPULoadOp = V8UnionDoubleSequenceOrGPUColorDictOrGPULoadOp;
using V8UnionGPULoadOpOrGPUStencilValue = V8UnionGPULoadOpOrUnsignedLongEnforceRange;


}  // namespace blink

#endif  // THIRD_PARTY_BLINK_RENDERER_BINDINGS_MODULES_V8_V8_TYPEDEFS_H_
