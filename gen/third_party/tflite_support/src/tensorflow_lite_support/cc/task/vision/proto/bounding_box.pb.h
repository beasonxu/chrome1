// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_lite_support/cc/task/vision/proto/bounding_box.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fbounding_5fbox_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fbounding_5fbox_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fbounding_5fbox_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fbounding_5fbox_2eproto {
  static const uint32_t offsets[];
};
namespace tflite {
namespace task {
namespace vision {
class BoundingBox;
struct BoundingBoxDefaultTypeInternal;
extern BoundingBoxDefaultTypeInternal _BoundingBox_default_instance_;
}  // namespace vision
}  // namespace task
}  // namespace tflite
PROTOBUF_NAMESPACE_OPEN
template<> ::tflite::task::vision::BoundingBox* Arena::CreateMaybeMessage<::tflite::task::vision::BoundingBox>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace tflite {
namespace task {
namespace vision {

// ===================================================================

class BoundingBox final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:tflite.task.vision.BoundingBox) */ {
 public:
  inline BoundingBox() : BoundingBox(nullptr) {}
  ~BoundingBox() override;
  explicit PROTOBUF_CONSTEXPR BoundingBox(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BoundingBox(const BoundingBox& from);
  BoundingBox(BoundingBox&& from) noexcept
    : BoundingBox() {
    *this = ::std::move(from);
  }

  inline BoundingBox& operator=(const BoundingBox& from) {
    CopyFrom(from);
    return *this;
  }
  inline BoundingBox& operator=(BoundingBox&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const BoundingBox& default_instance() {
    return *internal_default_instance();
  }
  static inline const BoundingBox* internal_default_instance() {
    return reinterpret_cast<const BoundingBox*>(
               &_BoundingBox_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BoundingBox& a, BoundingBox& b) {
    a.Swap(&b);
  }
  PROTOBUF_NOINLINE void Swap(BoundingBox* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BoundingBox* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BoundingBox* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BoundingBox>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const BoundingBox& from);
  void MergeFrom(const BoundingBox& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BoundingBox* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tflite.task.vision.BoundingBox";
  }
  protected:
  explicit BoundingBox(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOriginXFieldNumber = 1,
    kOriginYFieldNumber = 2,
    kWidthFieldNumber = 3,
    kHeightFieldNumber = 4,
  };
  // optional int32 origin_x = 1;
  bool has_origin_x() const;
  private:
  bool _internal_has_origin_x() const;
  public:
  void clear_origin_x();
  int32_t origin_x() const;
  void set_origin_x(int32_t value);
  private:
  int32_t _internal_origin_x() const;
  void _internal_set_origin_x(int32_t value);
  public:

  // optional int32 origin_y = 2;
  bool has_origin_y() const;
  private:
  bool _internal_has_origin_y() const;
  public:
  void clear_origin_y();
  int32_t origin_y() const;
  void set_origin_y(int32_t value);
  private:
  int32_t _internal_origin_y() const;
  void _internal_set_origin_y(int32_t value);
  public:

  // optional int32 width = 3;
  bool has_width() const;
  private:
  bool _internal_has_width() const;
  public:
  void clear_width();
  int32_t width() const;
  void set_width(int32_t value);
  private:
  int32_t _internal_width() const;
  void _internal_set_width(int32_t value);
  public:

  // optional int32 height = 4;
  bool has_height() const;
  private:
  bool _internal_has_height() const;
  public:
  void clear_height();
  int32_t height() const;
  void set_height(int32_t value);
  private:
  int32_t _internal_height() const;
  void _internal_set_height(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:tflite.task.vision.BoundingBox)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int32_t origin_x_;
  int32_t origin_y_;
  int32_t width_;
  int32_t height_;
  friend struct ::TableStruct_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fbounding_5fbox_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BoundingBox

// optional int32 origin_x = 1;
inline bool BoundingBox::_internal_has_origin_x() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool BoundingBox::has_origin_x() const {
  return _internal_has_origin_x();
}
inline void BoundingBox::clear_origin_x() {
  origin_x_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline int32_t BoundingBox::_internal_origin_x() const {
  return origin_x_;
}
inline int32_t BoundingBox::origin_x() const {
  // @@protoc_insertion_point(field_get:tflite.task.vision.BoundingBox.origin_x)
  return _internal_origin_x();
}
inline void BoundingBox::_internal_set_origin_x(int32_t value) {
  _has_bits_[0] |= 0x00000001u;
  origin_x_ = value;
}
inline void BoundingBox::set_origin_x(int32_t value) {
  _internal_set_origin_x(value);
  // @@protoc_insertion_point(field_set:tflite.task.vision.BoundingBox.origin_x)
}

// optional int32 origin_y = 2;
inline bool BoundingBox::_internal_has_origin_y() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool BoundingBox::has_origin_y() const {
  return _internal_has_origin_y();
}
inline void BoundingBox::clear_origin_y() {
  origin_y_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline int32_t BoundingBox::_internal_origin_y() const {
  return origin_y_;
}
inline int32_t BoundingBox::origin_y() const {
  // @@protoc_insertion_point(field_get:tflite.task.vision.BoundingBox.origin_y)
  return _internal_origin_y();
}
inline void BoundingBox::_internal_set_origin_y(int32_t value) {
  _has_bits_[0] |= 0x00000002u;
  origin_y_ = value;
}
inline void BoundingBox::set_origin_y(int32_t value) {
  _internal_set_origin_y(value);
  // @@protoc_insertion_point(field_set:tflite.task.vision.BoundingBox.origin_y)
}

// optional int32 width = 3;
inline bool BoundingBox::_internal_has_width() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool BoundingBox::has_width() const {
  return _internal_has_width();
}
inline void BoundingBox::clear_width() {
  width_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline int32_t BoundingBox::_internal_width() const {
  return width_;
}
inline int32_t BoundingBox::width() const {
  // @@protoc_insertion_point(field_get:tflite.task.vision.BoundingBox.width)
  return _internal_width();
}
inline void BoundingBox::_internal_set_width(int32_t value) {
  _has_bits_[0] |= 0x00000004u;
  width_ = value;
}
inline void BoundingBox::set_width(int32_t value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:tflite.task.vision.BoundingBox.width)
}

// optional int32 height = 4;
inline bool BoundingBox::_internal_has_height() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool BoundingBox::has_height() const {
  return _internal_has_height();
}
inline void BoundingBox::clear_height() {
  height_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline int32_t BoundingBox::_internal_height() const {
  return height_;
}
inline int32_t BoundingBox::height() const {
  // @@protoc_insertion_point(field_get:tflite.task.vision.BoundingBox.height)
  return _internal_height();
}
inline void BoundingBox::_internal_set_height(int32_t value) {
  _has_bits_[0] |= 0x00000008u;
  height_ = value;
}
inline void BoundingBox::set_height(int32_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:tflite.task.vision.BoundingBox.height)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace vision
}  // namespace task
}  // namespace tflite

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fbounding_5fbox_2eproto
