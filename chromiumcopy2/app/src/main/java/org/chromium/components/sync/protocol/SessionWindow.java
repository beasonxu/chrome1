// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/session_specifics.proto

package org.chromium.components.sync.protocol;

/**
 * Protobuf type {@code sync_pb.SessionWindow}
 */
public  final class SessionWindow extends
    com.google.protobuf.GeneratedMessageLite<
        SessionWindow, SessionWindow.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.SessionWindow)
    SessionWindowOrBuilder {
  private SessionWindow() {
    selectedTabIndex_ = -1;
    browserType_ = 1;
    tab_ = emptyIntList();
  }
  private int bitField0_;
  public static final int WINDOW_ID_FIELD_NUMBER = 1;
  private int windowId_;
  /**
   * <pre>
   * Unique (to the owner) id for this window.
   * </pre>
   *
   * <code>optional int32 window_id = 1;</code>
   * @return Whether the windowId field is set.
   */
  @java.lang.Override
  public boolean hasWindowId() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Unique (to the owner) id for this window.
   * </pre>
   *
   * <code>optional int32 window_id = 1;</code>
   * @return The windowId.
   */
  @java.lang.Override
  public int getWindowId() {
    return windowId_;
  }
  /**
   * <pre>
   * Unique (to the owner) id for this window.
   * </pre>
   *
   * <code>optional int32 window_id = 1;</code>
   * @param value The windowId to set.
   */
  private void setWindowId(int value) {
    bitField0_ |= 0x00000001;
    windowId_ = value;
  }
  /**
   * <pre>
   * Unique (to the owner) id for this window.
   * </pre>
   *
   * <code>optional int32 window_id = 1;</code>
   */
  private void clearWindowId() {
    bitField0_ = (bitField0_ & ~0x00000001);
    windowId_ = 0;
  }

  public static final int SELECTED_TAB_INDEX_FIELD_NUMBER = 2;
  private int selectedTabIndex_;
  /**
   * <pre>
   * Index of the selected tab in tabs; -1 if no tab is selected.
   * </pre>
   *
   * <code>optional int32 selected_tab_index = 2 [default = -1];</code>
   * @return Whether the selectedTabIndex field is set.
   */
  @java.lang.Override
  public boolean hasSelectedTabIndex() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Index of the selected tab in tabs; -1 if no tab is selected.
   * </pre>
   *
   * <code>optional int32 selected_tab_index = 2 [default = -1];</code>
   * @return The selectedTabIndex.
   */
  @java.lang.Override
  public int getSelectedTabIndex() {
    return selectedTabIndex_;
  }
  /**
   * <pre>
   * Index of the selected tab in tabs; -1 if no tab is selected.
   * </pre>
   *
   * <code>optional int32 selected_tab_index = 2 [default = -1];</code>
   * @param value The selectedTabIndex to set.
   */
  private void setSelectedTabIndex(int value) {
    bitField0_ |= 0x00000002;
    selectedTabIndex_ = value;
  }
  /**
   * <pre>
   * Index of the selected tab in tabs; -1 if no tab is selected.
   * </pre>
   *
   * <code>optional int32 selected_tab_index = 2 [default = -1];</code>
   */
  private void clearSelectedTabIndex() {
    bitField0_ = (bitField0_ & ~0x00000002);
    selectedTabIndex_ = -1;
  }

  public static final int BROWSER_TYPE_FIELD_NUMBER = 3;
  private int browserType_;
  /**
   * <pre>
   * Type of the window.
   * </pre>
   *
   * <code>optional .sync_pb.SyncEnums.BrowserType browser_type = 3 [default = TYPE_TABBED];</code>
   * @return Whether the browserType field is set.
   */
  @java.lang.Override
  public boolean hasBrowserType() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Type of the window.
   * </pre>
   *
   * <code>optional .sync_pb.SyncEnums.BrowserType browser_type = 3 [default = TYPE_TABBED];</code>
   * @return The browserType.
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.SyncEnums.BrowserType getBrowserType() {
    org.chromium.components.sync.protocol.SyncEnums.BrowserType result = org.chromium.components.sync.protocol.SyncEnums.BrowserType.forNumber(browserType_);
    return result == null ? org.chromium.components.sync.protocol.SyncEnums.BrowserType.TYPE_TABBED : result;
  }
  /**
   * <pre>
   * Type of the window.
   * </pre>
   *
   * <code>optional .sync_pb.SyncEnums.BrowserType browser_type = 3 [default = TYPE_TABBED];</code>
   * @param value The browserType to set.
   */
  private void setBrowserType(org.chromium.components.sync.protocol.SyncEnums.BrowserType value) {
    browserType_ = value.getNumber();
    bitField0_ |= 0x00000004;
  }
  /**
   * <pre>
   * Type of the window.
   * </pre>
   *
   * <code>optional .sync_pb.SyncEnums.BrowserType browser_type = 3 [default = TYPE_TABBED];</code>
   */
  private void clearBrowserType() {
    bitField0_ = (bitField0_ & ~0x00000004);
    browserType_ = 1;
  }

  public static final int TAB_FIELD_NUMBER = 4;
  private com.google.protobuf.Internal.IntList tab_;
  /**
   * <pre>
   * The tabs that compose a window (correspond to tab id's).
   * </pre>
   *
   * <code>repeated int32 tab = 4;</code>
   * @return A list containing the tab.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getTabList() {
    return tab_;
  }
  /**
   * <pre>
   * The tabs that compose a window (correspond to tab id's).
   * </pre>
   *
   * <code>repeated int32 tab = 4;</code>
   * @return The count of tab.
   */
  @java.lang.Override
  public int getTabCount() {
    return tab_.size();
  }
  /**
   * <pre>
   * The tabs that compose a window (correspond to tab id's).
   * </pre>
   *
   * <code>repeated int32 tab = 4;</code>
   * @param index The index of the element to return.
   * @return The tab at the given index.
   */
  @java.lang.Override
  public int getTab(int index) {
    return tab_.getInt(index);
  }
  private void ensureTabIsMutable() {
    com.google.protobuf.Internal.IntList tmp = tab_;
    if (!tmp.isModifiable()) {
      tab_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }
  /**
   * <pre>
   * The tabs that compose a window (correspond to tab id's).
   * </pre>
   *
   * <code>repeated int32 tab = 4;</code>
   * @param index The index to set the value at.
   * @param value The tab to set.
   */
  private void setTab(
      int index, int value) {
    ensureTabIsMutable();
    tab_.setInt(index, value);
  }
  /**
   * <pre>
   * The tabs that compose a window (correspond to tab id's).
   * </pre>
   *
   * <code>repeated int32 tab = 4;</code>
   * @param value The tab to add.
   */
  private void addTab(int value) {
    ensureTabIsMutable();
    tab_.addInt(value);
  }
  /**
   * <pre>
   * The tabs that compose a window (correspond to tab id's).
   * </pre>
   *
   * <code>repeated int32 tab = 4;</code>
   * @param values The tab to add.
   */
  private void addAllTab(
      java.lang.Iterable<? extends java.lang.Integer> values) {
    ensureTabIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, tab_);
  }
  /**
   * <pre>
   * The tabs that compose a window (correspond to tab id's).
   * </pre>
   *
   * <code>repeated int32 tab = 4;</code>
   */
  private void clearTab() {
    tab_ = emptyIntList();
  }

  public static org.chromium.components.sync.protocol.SessionWindow parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.SessionWindow parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SessionWindow parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.SessionWindow parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SessionWindow parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.SessionWindow parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SessionWindow parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.SessionWindow parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SessionWindow parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.SessionWindow parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SessionWindow parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.SessionWindow parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.SessionWindow prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code sync_pb.SessionWindow}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.SessionWindow, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.SessionWindow)
      org.chromium.components.sync.protocol.SessionWindowOrBuilder {
    // Construct using org.chromium.components.sync.protocol.SessionWindow.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Unique (to the owner) id for this window.
     * </pre>
     *
     * <code>optional int32 window_id = 1;</code>
     * @return Whether the windowId field is set.
     */
    @java.lang.Override
    public boolean hasWindowId() {
      return instance.hasWindowId();
    }
    /**
     * <pre>
     * Unique (to the owner) id for this window.
     * </pre>
     *
     * <code>optional int32 window_id = 1;</code>
     * @return The windowId.
     */
    @java.lang.Override
    public int getWindowId() {
      return instance.getWindowId();
    }
    /**
     * <pre>
     * Unique (to the owner) id for this window.
     * </pre>
     *
     * <code>optional int32 window_id = 1;</code>
     * @param value The windowId to set.
     * @return This builder for chaining.
     */
    public Builder setWindowId(int value) {
      copyOnWrite();
      instance.setWindowId(value);
      return this;
    }
    /**
     * <pre>
     * Unique (to the owner) id for this window.
     * </pre>
     *
     * <code>optional int32 window_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearWindowId() {
      copyOnWrite();
      instance.clearWindowId();
      return this;
    }

    /**
     * <pre>
     * Index of the selected tab in tabs; -1 if no tab is selected.
     * </pre>
     *
     * <code>optional int32 selected_tab_index = 2 [default = -1];</code>
     * @return Whether the selectedTabIndex field is set.
     */
    @java.lang.Override
    public boolean hasSelectedTabIndex() {
      return instance.hasSelectedTabIndex();
    }
    /**
     * <pre>
     * Index of the selected tab in tabs; -1 if no tab is selected.
     * </pre>
     *
     * <code>optional int32 selected_tab_index = 2 [default = -1];</code>
     * @return The selectedTabIndex.
     */
    @java.lang.Override
    public int getSelectedTabIndex() {
      return instance.getSelectedTabIndex();
    }
    /**
     * <pre>
     * Index of the selected tab in tabs; -1 if no tab is selected.
     * </pre>
     *
     * <code>optional int32 selected_tab_index = 2 [default = -1];</code>
     * @param value The selectedTabIndex to set.
     * @return This builder for chaining.
     */
    public Builder setSelectedTabIndex(int value) {
      copyOnWrite();
      instance.setSelectedTabIndex(value);
      return this;
    }
    /**
     * <pre>
     * Index of the selected tab in tabs; -1 if no tab is selected.
     * </pre>
     *
     * <code>optional int32 selected_tab_index = 2 [default = -1];</code>
     * @return This builder for chaining.
     */
    public Builder clearSelectedTabIndex() {
      copyOnWrite();
      instance.clearSelectedTabIndex();
      return this;
    }

    /**
     * <pre>
     * Type of the window.
     * </pre>
     *
     * <code>optional .sync_pb.SyncEnums.BrowserType browser_type = 3 [default = TYPE_TABBED];</code>
     * @return Whether the browserType field is set.
     */
    @java.lang.Override
    public boolean hasBrowserType() {
      return instance.hasBrowserType();
    }
    /**
     * <pre>
     * Type of the window.
     * </pre>
     *
     * <code>optional .sync_pb.SyncEnums.BrowserType browser_type = 3 [default = TYPE_TABBED];</code>
     * @return The browserType.
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.SyncEnums.BrowserType getBrowserType() {
      return instance.getBrowserType();
    }
    /**
     * <pre>
     * Type of the window.
     * </pre>
     *
     * <code>optional .sync_pb.SyncEnums.BrowserType browser_type = 3 [default = TYPE_TABBED];</code>
     * @param value The enum numeric value on the wire for browserType to set.
     * @return This builder for chaining.
     */
    public Builder setBrowserType(org.chromium.components.sync.protocol.SyncEnums.BrowserType value) {
      copyOnWrite();
      instance.setBrowserType(value);
      return this;
    }
    /**
     * <pre>
     * Type of the window.
     * </pre>
     *
     * <code>optional .sync_pb.SyncEnums.BrowserType browser_type = 3 [default = TYPE_TABBED];</code>
     * @return This builder for chaining.
     */
    public Builder clearBrowserType() {
      copyOnWrite();
      instance.clearBrowserType();
      return this;
    }

    /**
     * <pre>
     * The tabs that compose a window (correspond to tab id's).
     * </pre>
     *
     * <code>repeated int32 tab = 4;</code>
     * @return A list containing the tab.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getTabList() {
      return java.util.Collections.unmodifiableList(
          instance.getTabList());
    }
    /**
     * <pre>
     * The tabs that compose a window (correspond to tab id's).
     * </pre>
     *
     * <code>repeated int32 tab = 4;</code>
     * @return The count of tab.
     */
    @java.lang.Override
    public int getTabCount() {
      return instance.getTabCount();
    }
    /**
     * <pre>
     * The tabs that compose a window (correspond to tab id's).
     * </pre>
     *
     * <code>repeated int32 tab = 4;</code>
     * @param index The index of the element to return.
     * @return The tab at the given index.
     */
    @java.lang.Override
    public int getTab(int index) {
      return instance.getTab(index);
    }
    /**
     * <pre>
     * The tabs that compose a window (correspond to tab id's).
     * </pre>
     *
     * <code>repeated int32 tab = 4;</code>
     * @param value The tab to set.
     * @return This builder for chaining.
     */
    public Builder setTab(
        int index, int value) {
      copyOnWrite();
      instance.setTab(index, value);
      return this;
    }
    /**
     * <pre>
     * The tabs that compose a window (correspond to tab id's).
     * </pre>
     *
     * <code>repeated int32 tab = 4;</code>
     * @param value The tab to add.
     * @return This builder for chaining.
     */
    public Builder addTab(int value) {
      copyOnWrite();
      instance.addTab(value);
      return this;
    }
    /**
     * <pre>
     * The tabs that compose a window (correspond to tab id's).
     * </pre>
     *
     * <code>repeated int32 tab = 4;</code>
     * @param values The tab to add.
     * @return This builder for chaining.
     */
    public Builder addAllTab(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      copyOnWrite();
      instance.addAllTab(values);
      return this;
    }
    /**
     * <pre>
     * The tabs that compose a window (correspond to tab id's).
     * </pre>
     *
     * <code>repeated int32 tab = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearTab() {
      copyOnWrite();
      instance.clearTab();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.SessionWindow)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.SessionWindow();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "windowId_",
            "selectedTabIndex_",
            "browserType_",
            org.chromium.components.sync.protocol.SyncEnums.BrowserType.internalGetVerifier(),
            "tab_",
          };
          java.lang.String info =
              "\u0001\u0004\u0000\u0001\u0001\u0004\u0004\u0000\u0001\u0000\u0001\u1004\u0000\u0002" +
              "\u1004\u0001\u0003\u100c\u0002\u0004\u0016";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.components.sync.protocol.SessionWindow> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.components.sync.protocol.SessionWindow.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.SessionWindow>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.SessionWindow)
  private static final org.chromium.components.sync.protocol.SessionWindow DEFAULT_INSTANCE;
  static {
    SessionWindow defaultInstance = new SessionWindow();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      SessionWindow.class, defaultInstance);
  }

  public static org.chromium.components.sync.protocol.SessionWindow getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<SessionWindow> PARSER;

  public static com.google.protobuf.Parser<SessionWindow> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

