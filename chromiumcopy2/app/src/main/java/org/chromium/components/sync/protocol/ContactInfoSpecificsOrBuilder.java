// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/contact_info_specifics.proto

package org.chromium.components.sync.protocol;

public interface ContactInfoSpecificsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:sync_pb.ContactInfoSpecifics)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * A globally unique, immutable UUID represented in lowercase.
   * </pre>
   *
   * <code>optional string guid = 1;</code>
   * @return Whether the guid field is set.
   */
  boolean hasGuid();
  /**
   * <pre>
   * A globally unique, immutable UUID represented in lowercase.
   * </pre>
   *
   * <code>optional string guid = 1;</code>
   * @return The guid.
   */
  java.lang.String getGuid();
  /**
   * <pre>
   * A globally unique, immutable UUID represented in lowercase.
   * </pre>
   *
   * <code>optional string guid = 1;</code>
   * @return The bytes for guid.
   */
  com.google.protobuf.ByteString
      getGuidBytes();

  /**
   * <pre>
   * Represents where the profile originated from, which can be either from the
   * settings or a website.
   * This field exists only for compatibility purposes with Autofill.
   * </pre>
   *
   * <code>optional string source = 2;</code>
   * @return Whether the source field is set.
   */
  boolean hasSource();
  /**
   * <pre>
   * Represents where the profile originated from, which can be either from the
   * settings or a website.
   * This field exists only for compatibility purposes with Autofill.
   * </pre>
   *
   * <code>optional string source = 2;</code>
   * @return The source.
   */
  java.lang.String getSource();
  /**
   * <pre>
   * Represents where the profile originated from, which can be either from the
   * settings or a website.
   * This field exists only for compatibility purposes with Autofill.
   * </pre>
   *
   * <code>optional string source = 2;</code>
   * @return The bytes for source.
   */
  com.google.protobuf.ByteString
      getSourceBytes();

  /**
   * <pre>
   * The number of time this profile has been used.
   * </pre>
   *
   * <code>optional int64 use_count = 3;</code>
   * @return Whether the useCount field is set.
   */
  boolean hasUseCount();
  /**
   * <pre>
   * The number of time this profile has been used.
   * </pre>
   *
   * <code>optional int64 use_count = 3;</code>
   * @return The useCount.
   */
  long getUseCount();

  /**
   * <pre>
   * The last time this profile was used.
   * </pre>
   *
   * <code>optional int64 use_date_windows_epoch_micros = 4;</code>
   * @return Whether the useDateWindowsEpochMicros field is set.
   */
  boolean hasUseDateWindowsEpochMicros();
  /**
   * <pre>
   * The last time this profile was used.
   * </pre>
   *
   * <code>optional int64 use_date_windows_epoch_micros = 4;</code>
   * @return The useDateWindowsEpochMicros.
   */
  long getUseDateWindowsEpochMicros();

  /**
   * <pre>
   * A user chosen profile label that is used to identify the profile.
   * The value of the label can be freely chosen by the user.
   * </pre>
   *
   * <code>optional string profile_label = 5;</code>
   * @return Whether the profileLabel field is set.
   */
  boolean hasProfileLabel();
  /**
   * <pre>
   * A user chosen profile label that is used to identify the profile.
   * The value of the label can be freely chosen by the user.
   * </pre>
   *
   * <code>optional string profile_label = 5;</code>
   * @return The profileLabel.
   */
  java.lang.String getProfileLabel();
  /**
   * <pre>
   * A user chosen profile label that is used to identify the profile.
   * The value of the label can be freely chosen by the user.
   * </pre>
   *
   * <code>optional string profile_label = 5;</code>
   * @return The bytes for profileLabel.
   */
  com.google.protobuf.ByteString
      getProfileLabelBytes();

  /**
   * <pre>
   * Contact info name fields.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_honorific = 6;</code>
   * @return Whether the nameHonorific field is set.
   */
  boolean hasNameHonorific();
  /**
   * <pre>
   * Contact info name fields.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_honorific = 6;</code>
   * @return The nameHonorific.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameHonorific();

  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_first = 7;</code>
   * @return Whether the nameFirst field is set.
   */
  boolean hasNameFirst();
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_first = 7;</code>
   * @return The nameFirst.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameFirst();

  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_middle = 8;</code>
   * @return Whether the nameMiddle field is set.
   */
  boolean hasNameMiddle();
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_middle = 8;</code>
   * @return The nameMiddle.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameMiddle();

  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last = 9;</code>
   * @return Whether the nameLast field is set.
   */
  boolean hasNameLast();
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last = 9;</code>
   * @return The nameLast.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameLast();

  /**
   * <pre>
   * Sometimes the last name is composed of two names as it is common for
   * Hispanic/Latinx names. In the unstructured representation of the last name,
   * there may be even a conjunction between the first and the second last
   * name. For example, the more-complete version of Pablo Picasso's surname is
   * "Ruiz y Picasso" containing a first last name, a conjunction (the y) and a
   * second last name.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_first = 10;</code>
   * @return Whether the nameLastFirst field is set.
   */
  boolean hasNameLastFirst();
  /**
   * <pre>
   * Sometimes the last name is composed of two names as it is common for
   * Hispanic/Latinx names. In the unstructured representation of the last name,
   * there may be even a conjunction between the first and the second last
   * name. For example, the more-complete version of Pablo Picasso's surname is
   * "Ruiz y Picasso" containing a first last name, a conjunction (the y) and a
   * second last name.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_first = 10;</code>
   * @return The nameLastFirst.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameLastFirst();

  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_conjunction = 11;</code>
   * @return Whether the nameLastConjunction field is set.
   */
  boolean hasNameLastConjunction();
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_conjunction = 11;</code>
   * @return The nameLastConjunction.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameLastConjunction();

  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_second = 12;</code>
   * @return Whether the nameLastSecond field is set.
   */
  boolean hasNameLastSecond();
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_last_second = 12;</code>
   * @return The nameLastSecond.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameLastSecond();

  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_full = 13;</code>
   * @return Whether the nameFull field is set.
   */
  boolean hasNameFull();
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_full = 13;</code>
   * @return The nameFull.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameFull();

  /**
   * <pre>
   * This value contains the combination of the full name and the honorific
   * prefix.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_full_with_honorific = 14;</code>
   * @return Whether the nameFullWithHonorific field is set.
   */
  boolean hasNameFullWithHonorific();
  /**
   * <pre>
   * This value contains the combination of the full name and the honorific
   * prefix.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken name_full_with_honorific = 14;</code>
   * @return The nameFullWithHonorific.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getNameFullWithHonorific();

  /**
   * <pre>
   * Contact info additional fields.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken email_address = 15;</code>
   * @return Whether the emailAddress field is set.
   */
  boolean hasEmailAddress();
  /**
   * <pre>
   * Contact info additional fields.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken email_address = 15;</code>
   * @return The emailAddress.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getEmailAddress();

  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken company_name = 16;</code>
   * @return Whether the companyName field is set.
   */
  boolean hasCompanyName();
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken company_name = 16;</code>
   * @return The companyName.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getCompanyName();

  /**
   * <pre>
   * Address fields: These are user-provided values with no particular
   * guarantees about their format.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_city = 17;</code>
   * @return Whether the addressCity field is set.
   */
  boolean hasAddressCity();
  /**
   * <pre>
   * Address fields: These are user-provided values with no particular
   * guarantees about their format.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_city = 17;</code>
   * @return The addressCity.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressCity();

  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_state = 18;</code>
   * @return Whether the addressState field is set.
   */
  boolean hasAddressState();
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_state = 18;</code>
   * @return The addressState.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressState();

  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_zip = 19;</code>
   * @return Whether the addressZip field is set.
   */
  boolean hasAddressZip();
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_zip = 19;</code>
   * @return The addressZip.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressZip();

  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_country = 20;</code>
   * @return Whether the addressCountry field is set.
   */
  boolean hasAddressCountry();
  /**
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_country = 20;</code>
   * @return The addressCountry.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressCountry();

  /**
   * <pre>
   * Additional address fields for i18n.
   * Includes all of the lines of a street address, including newlines, e.g.
   *   123 Main Street,
   *   Apt. #42
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_street_address = 21;</code>
   * @return Whether the addressStreetAddress field is set.
   */
  boolean hasAddressStreetAddress();
  /**
   * <pre>
   * Additional address fields for i18n.
   * Includes all of the lines of a street address, including newlines, e.g.
   *   123 Main Street,
   *   Apt. #42
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_street_address = 21;</code>
   * @return The addressStreetAddress.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressStreetAddress();

  /**
   * <pre>
   * A sorting code is similar to a postal code. However, whereas a postal code
   * normally refers to a single geographical location, a sorting code often
   * does not. Instead, a sorting code is assigned to an organization, which
   * might be geographically distributed. The most prominent example of a
   * sorting code system is CEDEX in France.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_sorting_code = 22;</code>
   * @return Whether the addressSortingCode field is set.
   */
  boolean hasAddressSortingCode();
  /**
   * <pre>
   * A sorting code is similar to a postal code. However, whereas a postal code
   * normally refers to a single geographical location, a sorting code often
   * does not. Instead, a sorting code is assigned to an organization, which
   * might be geographically distributed. The most prominent example of a
   * sorting code system is CEDEX in France.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_sorting_code = 22;</code>
   * @return The addressSortingCode.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressSortingCode();

  /**
   * <pre>
   * A dependent locality is a subunit of a locality, where a "locality" is
   * roughly equivalent to a city. Examples of dependent localities include
   * inner-city districts and suburbs.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_dependent_locality = 23;</code>
   * @return Whether the addressDependentLocality field is set.
   */
  boolean hasAddressDependentLocality();
  /**
   * <pre>
   * A dependent locality is a subunit of a locality, where a "locality" is
   * roughly equivalent to a city. Examples of dependent localities include
   * inner-city districts and suburbs.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_dependent_locality = 23;</code>
   * @return The addressDependentLocality.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressDependentLocality();

  /**
   * <pre>
   * A BCP 47 language code.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_language_code = 24;</code>
   * @return Whether the addressLanguageCode field is set.
   */
  boolean hasAddressLanguageCode();
  /**
   * <pre>
   * A BCP 47 language code.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_language_code = 24;</code>
   * @return The addressLanguageCode.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressLanguageCode();

  /**
   * <pre>
   * The street name of the address, without a house number.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_name = 25;</code>
   * @return Whether the addressThoroughfareName field is set.
   */
  boolean hasAddressThoroughfareName();
  /**
   * <pre>
   * The street name of the address, without a house number.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_name = 25;</code>
   * @return The addressThoroughfareName.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressThoroughfareName();

  /**
   * <pre>
   * The house number, which may be alphanumeric.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_number = 26;</code>
   * @return Whether the addressThoroughfareNumber field is set.
   */
  boolean hasAddressThoroughfareNumber();
  /**
   * <pre>
   * The house number, which may be alphanumeric.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_number = 26;</code>
   * @return The addressThoroughfareNumber.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressThoroughfareNumber();

  /**
   * <pre>
   * Describes a crossing street as it is used in some countries to describe a
   * location.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_dependent_thoroughfare_name = 27;</code>
   * @return Whether the addressDependentThoroughfareName field is set.
   */
  boolean hasAddressDependentThoroughfareName();
  /**
   * <pre>
   * Describes a crossing street as it is used in some countries to describe a
   * location.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_dependent_thoroughfare_name = 27;</code>
   * @return The addressDependentThoroughfareName.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressDependentThoroughfareName();

  /**
   * <pre>
   * Contains both the thoroughfare and the dependent thoroughfare name.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_and_dependent_thoroughfare_name = 28;</code>
   * @return Whether the addressThoroughfareAndDependentThoroughfareName field is set.
   */
  boolean hasAddressThoroughfareAndDependentThoroughfareName();
  /**
   * <pre>
   * Contains both the thoroughfare and the dependent thoroughfare name.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_thoroughfare_and_dependent_thoroughfare_name = 28;</code>
   * @return The addressThoroughfareAndDependentThoroughfareName.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressThoroughfareAndDependentThoroughfareName();

  /**
   * <pre>
   * A premise name corresponds to the name of a place or a building below the
   * granularity of a street.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_premise_name = 29;</code>
   * @return Whether the addressPremiseName field is set.
   */
  boolean hasAddressPremiseName();
  /**
   * <pre>
   * A premise name corresponds to the name of a place or a building below the
   * granularity of a street.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_premise_name = 29;</code>
   * @return The addressPremiseName.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressPremiseName();

  /**
   * <pre>
   * Contains the floor, staircase or apartment number within a building.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_subpremise_name = 30;</code>
   * @return Whether the addressSubpremiseName field is set.
   */
  boolean hasAddressSubpremiseName();
  /**
   * <pre>
   * Contains the floor, staircase or apartment number within a building.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_subpremise_name = 30;</code>
   * @return The addressSubpremiseName.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressSubpremiseName();

  /**
   * <pre>
   * The apartment number within a building.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_apt_num = 31;</code>
   * @return Whether the addressAptNum field is set.
   */
  boolean hasAddressAptNum();
  /**
   * <pre>
   * The apartment number within a building.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_apt_num = 31;</code>
   * @return The addressAptNum.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressAptNum();

  /**
   * <pre>
   * The floor number within a building.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_floor = 32;</code>
   * @return Whether the addressFloor field is set.
   */
  boolean hasAddressFloor();
  /**
   * <pre>
   * The floor number within a building.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken address_floor = 32;</code>
   * @return The addressFloor.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getAddressFloor();

  /**
   * <pre>
   * Phone.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken phone_home_whole_number = 33;</code>
   * @return Whether the phoneHomeWholeNumber field is set.
   */
  boolean hasPhoneHomeWholeNumber();
  /**
   * <pre>
   * Phone.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.StringToken phone_home_whole_number = 33;</code>
   * @return The phoneHomeWholeNumber.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.StringToken getPhoneHomeWholeNumber();

  /**
   * <pre>
   * Birthdate fields.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_day = 34;</code>
   * @return Whether the birthdateDay field is set.
   */
  boolean hasBirthdateDay();
  /**
   * <pre>
   * Birthdate fields.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_day = 34;</code>
   * @return The birthdateDay.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken getBirthdateDay();

  /**
   * <pre>
   * Between 1 and 12.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_month = 35;</code>
   * @return Whether the birthdateMonth field is set.
   */
  boolean hasBirthdateMonth();
  /**
   * <pre>
   * Between 1 and 12.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_month = 35;</code>
   * @return The birthdateMonth.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken getBirthdateMonth();

  /**
   * <pre>
   * 4 digits.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_year = 36;</code>
   * @return Whether the birthdateYear field is set.
   */
  boolean hasBirthdateYear();
  /**
   * <pre>
   * 4 digits.
   * </pre>
   *
   * <code>optional .sync_pb.ContactInfoSpecifics.IntegerToken birthdate_year = 36;</code>
   * @return The birthdateYear.
   */
  org.chromium.components.sync.protocol.ContactInfoSpecifics.IntegerToken getBirthdateYear();
}
