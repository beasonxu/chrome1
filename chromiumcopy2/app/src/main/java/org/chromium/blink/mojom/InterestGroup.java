// InterestGroup.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     third_party/blink/public/mojom/interest_group/interest_group_types.mojom
//

package org.chromium.blink.mojom;

import androidx.annotation.IntDef;


public final class InterestGroup extends org.chromium.mojo.bindings.Struct {

    private static final int STRUCT_SIZE = 112;
    private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(112, 0)};
    private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];

    public static final class ExecutionMode {
        private static final boolean IS_EXTENSIBLE = false;
        @IntDef({

            ExecutionMode.COMPATIBILITY_MODE,
            ExecutionMode.GROUPED_BY_ORIGIN_MODE,
            ExecutionMode.FROZEN_CONTEXT})
        public @interface EnumType {}

        public static final int COMPATIBILITY_MODE = 0;
        public static final int GROUPED_BY_ORIGIN_MODE = 1;
        public static final int FROZEN_CONTEXT = 2;
        public static final int MIN_VALUE = 0;
        public static final int MAX_VALUE = 2;

        public static boolean isKnownValue(int value) {
            return value >= 0 && value <= 2;
        }

        public static void validate(int value) {
            if (IS_EXTENSIBLE || isKnownValue(value)) return;
            throw new org.chromium.mojo.bindings.DeserializationException("Invalid enum value.");
        }

        public static int toKnownValue(int value) {
          return value;
        }

        private ExecutionMode() {}
    }
    public org.chromium.mojo_base.mojom.Time expiry;
    public org.chromium.url.internal.mojom.Origin owner;
    public String name;
    public double priority;
    public int executionMode;
    public org.chromium.url.mojom.Url biddingUrl;
    public org.chromium.url.mojom.Url biddingWasmHelperUrl;
    public org.chromium.url.mojom.Url dailyUpdateUrl;
    public org.chromium.url.mojom.Url trustedBiddingSignalsUrl;
    public String[] trustedBiddingSignalsKeys;
    public String userBiddingSignals;
    public InterestGroupAd[] ads;
    public InterestGroupAd[] adComponents;

    private InterestGroup(int version) {
        super(STRUCT_SIZE, version);
        this.priority = (double) 0.0;
        this.executionMode = (int) InterestGroup.ExecutionMode.COMPATIBILITY_MODE;
    }

    public InterestGroup() {
        this(0);
    }

    public static InterestGroup deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message));
    }

    /**
     * Similar to the method above, but deserializes from a |ByteBuffer| instance.
     *
     * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
     */
    public static InterestGroup deserialize(java.nio.ByteBuffer data) {
        return deserialize(new org.chromium.mojo.bindings.Message(
                data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
    }

    @SuppressWarnings("unchecked")
    public static InterestGroup decode(org.chromium.mojo.bindings.Decoder decoder0) {
        if (decoder0 == null) {
            return null;
        }
        decoder0.increaseStackDepth();
        InterestGroup result;
        try {
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            final int elementsOrVersion = mainDataHeader.elementsOrVersion;
            result = new InterestGroup(elementsOrVersion);
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                result.expiry = org.chromium.mojo_base.mojom.Time.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(16, false);
                result.owner = org.chromium.url.internal.mojom.Origin.decode(decoder1);
                }
                {
                    
                result.name = decoder0.readString(24, false);
                }
                {
                    
                result.priority = decoder0.readDouble(32);
                }
                {
                    
                result.executionMode = decoder0.readInt(40);
                    InterestGroup.ExecutionMode.validate(result.executionMode);
                    result.executionMode = InterestGroup.ExecutionMode.toKnownValue(result.executionMode);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(48, true);
                result.biddingUrl = org.chromium.url.mojom.Url.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(56, true);
                result.biddingWasmHelperUrl = org.chromium.url.mojom.Url.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(64, true);
                result.dailyUpdateUrl = org.chromium.url.mojom.Url.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(72, true);
                result.trustedBiddingSignalsUrl = org.chromium.url.mojom.Url.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(80, true);
                if (decoder1 == null) {
                    result.trustedBiddingSignalsKeys = null;
                } else {
                    org.chromium.mojo.bindings.DataHeader si1 = decoder1.readDataHeaderForPointerArray(org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                    result.trustedBiddingSignalsKeys = new String[si1.elementsOrVersion];
                    for (int i1 = 0; i1 < si1.elementsOrVersion; ++i1) {
                        
                        result.trustedBiddingSignalsKeys[i1] = decoder1.readString(org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i1, false);
                    }
                }
                }
                {
                    
                result.userBiddingSignals = decoder0.readString(88, true);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(96, true);
                if (decoder1 == null) {
                    result.ads = null;
                } else {
                    org.chromium.mojo.bindings.DataHeader si1 = decoder1.readDataHeaderForPointerArray(org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                    result.ads = new InterestGroupAd[si1.elementsOrVersion];
                    for (int i1 = 0; i1 < si1.elementsOrVersion; ++i1) {
                        
                        org.chromium.mojo.bindings.Decoder decoder2 = decoder1.readPointer(org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i1, false);
                        result.ads[i1] = InterestGroupAd.decode(decoder2);
                    }
                }
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(104, true);
                if (decoder1 == null) {
                    result.adComponents = null;
                } else {
                    org.chromium.mojo.bindings.DataHeader si1 = decoder1.readDataHeaderForPointerArray(org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                    result.adComponents = new InterestGroupAd[si1.elementsOrVersion];
                    for (int i1 = 0; i1 < si1.elementsOrVersion; ++i1) {
                        
                        org.chromium.mojo.bindings.Decoder decoder2 = decoder1.readPointer(org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i1, false);
                        result.adComponents[i1] = InterestGroupAd.decode(decoder2);
                    }
                }
                }

        } finally {
            decoder0.decreaseStackDepth();
        }
        return result;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
        org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
        
        encoder0.encode(this.expiry, 8, false);
        
        encoder0.encode(this.owner, 16, false);
        
        encoder0.encode(this.name, 24, false);
        
        encoder0.encode(this.priority, 32);
        
        encoder0.encode(this.executionMode, 40);
        
        encoder0.encode(this.biddingUrl, 48, true);
        
        encoder0.encode(this.biddingWasmHelperUrl, 56, true);
        
        encoder0.encode(this.dailyUpdateUrl, 64, true);
        
        encoder0.encode(this.trustedBiddingSignalsUrl, 72, true);
        
        if (this.trustedBiddingSignalsKeys == null) {
            encoder0.encodeNullPointer(80, true);
        } else {
            org.chromium.mojo.bindings.Encoder encoder1 = encoder0.encodePointerArray(this.trustedBiddingSignalsKeys.length, 80, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            for (int i0 = 0; i0 < this.trustedBiddingSignalsKeys.length; ++i0) {
                
                encoder1.encode(this.trustedBiddingSignalsKeys[i0], org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i0, false);
            }
        }
        
        encoder0.encode(this.userBiddingSignals, 88, true);
        
        if (this.ads == null) {
            encoder0.encodeNullPointer(96, true);
        } else {
            org.chromium.mojo.bindings.Encoder encoder1 = encoder0.encodePointerArray(this.ads.length, 96, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            for (int i0 = 0; i0 < this.ads.length; ++i0) {
                
                encoder1.encode(this.ads[i0], org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i0, false);
            }
        }
        
        if (this.adComponents == null) {
            encoder0.encodeNullPointer(104, true);
        } else {
            org.chromium.mojo.bindings.Encoder encoder1 = encoder0.encodePointerArray(this.adComponents.length, 104, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            for (int i0 = 0; i0 < this.adComponents.length; ++i0) {
                
                encoder1.encode(this.adComponents[i0], org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i0, false);
            }
        }
    }
}